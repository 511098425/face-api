/*
  Face-API
  homepage: <https://github.com/vladmandic/face-api>
  author: <https://github.com/vladmandic>'
*/

var faceapi=(()=>{var c0=Object.defineProperty;var dD=e=>c0(e,"__esModule",{value:!0});var pD=(e=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(e,{get:(t,n)=>(typeof require!="undefined"?require:t)[n]}):e)(function(e){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var Up=(e,t)=>{dD(e);for(var n in t)c0(e,n,{get:t[n],enumerable:!0})};var Wue={};Up(Wue,{AgeGenderNet:()=>Jm,BoundingBox:()=>Wu,Box:()=>ut,ComposableTask:()=>Rr,ComputeAllFaceDescriptorsTask:()=>Aa,ComputeFaceDescriptorsTaskBase:()=>og,ComputeSingleFaceDescriptorTask:()=>Da,DetectAllFaceLandmarksTask:()=>cg,DetectAllFacesTask:()=>fp,DetectFaceLandmarksTaskBase:()=>ig,DetectFacesTaskBase:()=>lg,DetectSingleFaceLandmarksTask:()=>ug,DetectSingleFaceTask:()=>dg,Dimensions:()=>Nn,FACE_EXPRESSION_LABELS:()=>R1,FaceDetection:()=>xt,FaceDetectionNet:()=>rA,FaceExpressionNet:()=>Ym,FaceExpressions:()=>Ea,FaceLandmark68Net:()=>Yu,FaceLandmark68TinyNet:()=>Qm,FaceLandmarkNet:()=>HE,FaceLandmarks:()=>yr,FaceLandmarks5:()=>AE,FaceLandmarks68:()=>Uu,FaceMatch:()=>np,FaceMatcher:()=>hg,FaceRecognitionNet:()=>Zu,Gender:()=>Ms,LabeledBox:()=>rp,LabeledFaceDescriptors:()=>Rs,NetInput:()=>Ps,NeuralNetwork:()=>ln,ObjectDetection:()=>Na,Point:()=>Pe,PredictedBox:()=>DE,Rect:()=>Vu,SsdMobilenetv1:()=>Di,SsdMobilenetv1Options:()=>$r,TinyFaceDetector:()=>nl,TinyFaceDetectorOptions:()=>ag,TinyYolov2:()=>el,TinyYolov2Options:()=>ms,allFaces:()=>Lue,allFacesSsdMobilenetv1:()=>yA,allFacesTinyYolov2:()=>Mue,awaitMediaLoaded:()=>_1,bufferToImage:()=>E1,computeFaceDescriptor:()=>Iue,createCanvas:()=>Ni,createCanvasFromMedia:()=>ip,createFaceDetectionNet:()=>gue,createFaceRecognitionNet:()=>aue,createSsdMobilenetv1:()=>nA,createTinyFaceDetector:()=>Bue,createTinyYolov2:()=>vue,detectAllFaces:()=>pg,detectFaceLandmarks:()=>gA,detectFaceLandmarksTiny:()=>kue,detectLandmarks:()=>Pue,detectSingleFace:()=>Oue,draw:()=>L1,env:()=>tt,euclideanDistance:()=>K1,extendWithAge:()=>ng,extendWithFaceDescriptor:()=>tg,extendWithFaceDetection:()=>Si,extendWithFaceExpressions:()=>Zm,extendWithFaceLandmarks:()=>Xu,extendWithGender:()=>rg,extractFaceTensors:()=>Hu,extractFaces:()=>Gu,fetchImage:()=>jce,fetchJson:()=>F1,fetchNetWeights:()=>qce,fetchOrThrow:()=>Os,fetchVideo:()=>Kce,getContext2dOrThrow:()=>Un,getMediaDimensions:()=>Ci,imageTensorToCanvas:()=>A1,imageToSquare:()=>D1,inverseSigmoid:()=>Bce,iou:()=>y1,isMediaElement:()=>Wm,isMediaLoaded:()=>op,isWithAge:()=>oue,isWithFaceDetection:()=>hs,isWithFaceExpressions:()=>P1,isWithFaceLandmarks:()=>Ei,isWithGender:()=>iue,loadAgeGenderModel:()=>Fue,loadFaceDetectionModel:()=>$ue,loadFaceExpressionModel:()=>Due,loadFaceLandmarkModel:()=>_ue,loadFaceLandmarkTinyModel:()=>Eue,loadFaceRecognitionModel:()=>Aue,loadSsdMobilenetv1Model:()=>bA,loadTinyFaceDetectorModel:()=>Cue,loadTinyYolov2Model:()=>Nue,loadWeightMap:()=>$1,locateFaces:()=>Rue,matchDimensions:()=>Xce,minBbox:()=>v1,nets:()=>nt,nonMaxSuppression:()=>x1,normalize:()=>Xr,padToSquare:()=>w1,predictAgeAndGender:()=>Tue,recognizeFaceExpressions:()=>Sue,resizeResults:()=>vA,resolveInput:()=>Ti,shuffleArray:()=>Lce,sigmoid:()=>tp,ssdMobilenetv1:()=>mA,tf:()=>h1,tinyFaceDetector:()=>xue,tinyYolov2:()=>wue,toNetInput:()=>bt,utils:()=>b1,validateConfig:()=>G1,version:()=>zue});var h1={};Up(h1,{Abs:()=>Yi,Acos:()=>Zi,Acosh:()=>Ji,AdadeltaOptimizer:()=>wf,AdagradOptimizer:()=>kf,AdamOptimizer:()=>If,AdamaxOptimizer:()=>Sf,Add:()=>Zs,AddN:()=>Ba,All:()=>Qi,Any:()=>ec,ArgMax:()=>za,ArgMin:()=>Sl,Asin:()=>tc,Asinh:()=>nc,Atan:()=>rc,Atan2:()=>ac,Atanh:()=>sc,AvgPool:()=>Wa,AvgPool3D:()=>Tl,AvgPool3DGrad:()=>Jp,AvgPoolGrad:()=>Zp,BackendWasm:()=>NE,BatchMatMul:()=>Va,BatchToSpaceND:()=>oc,Bincount:()=>Qp,BroadcastArgs:()=>eh,BroadcastTo:()=>N0,Callback:()=>bT,CallbackList:()=>uS,Cast:()=>Ua,Ceil:()=>Ga,ClipByValue:()=>Js,Complex:()=>th,ComplexAbs:()=>Cl,Concat:()=>ic,Conv2D:()=>Ha,Conv2DBackpropFilter:()=>nh,Conv2DBackpropInput:()=>ja,Conv3D:()=>Nl,Conv3DBackpropFilterV2:()=>rh,Conv3DBackpropInputV2:()=>sh,Cos:()=>qa,Cosh:()=>Ka,CropAndResize:()=>cc,Cumsum:()=>Xa,CustomCallback:()=>dS,DataStorage:()=>jp,DenseBincount:()=>ah,DepthToSpace:()=>uc,DepthwiseConv2dNative:()=>Ya,DepthwiseConv2dNativeBackpropFilter:()=>oh,DepthwiseConv2dNativeBackpropInput:()=>ih,Diag:()=>ch,Dilation2D:()=>_l,Dilation2DBackpropFilter:()=>lh,Dilation2DBackpropInput:()=>uh,ENV:()=>qb,EarlyStopping:()=>vT,Einsum:()=>dh,Elu:()=>Ja,EluGrad:()=>ph,Environment:()=>T0,Equal:()=>dc,Erf:()=>lc,Exp:()=>Qa,ExpandDims:()=>pc,Expm1:()=>hc,FFT:()=>hh,Fill:()=>El,FlipLeftRight:()=>fc,Floor:()=>eo,FloorDiv:()=>to,FromPixels:()=>Ah,FusedBatchNorm:()=>no,FusedConv2D:()=>Mo,FusedDepthwiseConv2D:()=>Lo,GPGPUContext:()=>bN,GatherNd:()=>gc,GatherV2:()=>mc,GraphModel:()=>ZT,Greater:()=>bc,GreaterEqual:()=>ro,History:()=>lS,IFFT:()=>fh,Identity:()=>so,Imag:()=>mh,InputSpec:()=>zt,IsFinite:()=>yc,IsInf:()=>vc,IsNan:()=>xc,KernelBackend:()=>wl,LRN:()=>Fl,LRNGrad:()=>bh,LayerVariable:()=>sS,LayersModel:()=>Es,LeakyRelu:()=>ao,Less:()=>wc,LessEqual:()=>kc,LinSpace:()=>gh,Log:()=>oo,Log1p:()=>Ic,LogSoftmax:()=>_0,LogicalAnd:()=>Sc,LogicalNot:()=>Al,LogicalOr:()=>Dl,MathBackendWebGL:()=>Tm,Max:()=>io,MaxPool:()=>uo,MaxPool3D:()=>$l,MaxPool3DGrad:()=>vh,MaxPoolGrad:()=>yh,MaxPoolWithArgmax:()=>xh,Maximum:()=>co,Mean:()=>lo,Min:()=>po,Minimum:()=>ho,MirrorPad:()=>fo,Mod:()=>Tc,MomentumOptimizer:()=>Tf,Multinomial:()=>wh,Multiply:()=>mo,Neg:()=>Cc,NonMaxSuppressionV3:()=>_c,NonMaxSuppressionV4:()=>Ec,NonMaxSuppressionV5:()=>Ac,NotEqual:()=>Nc,OP_SCOPE_SUFFIX:()=>U0,OneHot:()=>go,OnesLike:()=>Dc,Optimizer:()=>Cs,OptimizerConstructors:()=>ha,Pack:()=>Fc,PadV2:()=>bo,Pool:()=>uF,Pow:()=>yo,Prelu:()=>vo,Prod:()=>$c,RMSPropOptimizer:()=>Cf,RNN:()=>cs,Range:()=>Rl,Rank:()=>ey,Real:()=>kh,RealDiv:()=>Za,Reciprocal:()=>Rc,Reduction:()=>wn,Relu:()=>xo,Relu6:()=>ko,Reshape:()=>Pc,ResizeBilinear:()=>wo,ResizeBilinearGrad:()=>Sh,ResizeNearestNeighbor:()=>Pl,ResizeNearestNeighborGrad:()=>Ih,Reverse:()=>Io,RotateWithOffset:()=>Zc,Round:()=>So,Rsqrt:()=>To,SGDOptimizer:()=>fd,ScatterNd:()=>Oc,Select:()=>Mc,Selu:()=>Lc,Sequential:()=>wu,Sigmoid:()=>No,Sign:()=>Wc,Sin:()=>Co,Sinh:()=>zc,Slice:()=>Bc,Softmax:()=>Ao,Softplus:()=>Vc,SpaceToBatchND:()=>Uc,SparseFillEmptyRows:()=>Ol,SparseReshape:()=>Hc,SparseSegmentMean:()=>Ml,SparseSegmentSum:()=>Ll,SparseToDense:()=>Th,SplitV:()=>Gc,Sqrt:()=>_o,Square:()=>Bl,SquaredDifference:()=>Do,Step:()=>ea,StridedSlice:()=>jc,StringNGrams:()=>Ch,StringSplit:()=>Nh,StringToHashBucketFast:()=>_h,Sub:()=>Fo,Sum:()=>Eo,SymbolicTensor:()=>Gr,Tan:()=>$o,Tanh:()=>Ro,Tensor:()=>Ee,TensorBuffer:()=>Ut,Tile:()=>Qs,TopK:()=>qc,Transform:()=>Kc,Transpose:()=>Po,Unique:()=>Eh,Unpack:()=>Xc,UnsortedSegmentSum:()=>zl,Variable:()=>ra,ZerosLike:()=>Yc,_FusedMatMul:()=>Oo,abs:()=>Bt,acos:()=>Ey,acosh:()=>Ay,add:()=>Y,addN:()=>Nk,all:()=>Gh,any:()=>Ql,argMax:()=>qo,argMin:()=>Dy,asin:()=>Fy,asinh:()=>$y,atan:()=>Ry,atan2:()=>Py,atanh:()=>Oy,avgPool:()=>lr,avgPool3d:()=>By,backend:()=>Ck,backend_util:()=>_,basicLSTMCell:()=>tP,batchNorm:()=>Is,batchNorm2d:()=>Dk,batchNorm3d:()=>Fk,batchNorm4d:()=>$k,batchToSpaceND:()=>td,bincount:()=>zy,booleanMaskAsync:()=>oM,broadcastArgs:()=>Rk,broadcastTo:()=>ou,broadcast_util:()=>su,browser:()=>Go,buffer:()=>Be,callbacks:()=>FG,cast:()=>ce,ceil:()=>Wy,clipByValue:()=>Jt,clone:()=>ws,complex:()=>sa,concat:()=>et,concat1d:()=>Pk,concat2d:()=>Ok,concat3d:()=>Mk,concat4d:()=>Lk,constraints:()=>MI,conv1d:()=>jh,conv2d:()=>Rt,conv2dTranspose:()=>qh,conv3d:()=>Uy,conv3dTranspose:()=>zk,copyRegisteredKernels:()=>hF,cos:()=>nd,cosh:()=>Kh,cosineWindow:()=>mv,cumsum:()=>Xh,customGrad:()=>es,data:()=>JT,denseBincount:()=>Wk,deprecationWarn:()=>_y,depthToSpace:()=>Gy,depthwiseConv2d:()=>ua,deregisterOp:()=>PG,device_util:()=>Yl,diag:()=>DP,dilation2d:()=>Hy,disableDeprecationWarnings:()=>hR,dispose:()=>Fe,disposeVariables:()=>fR,div:()=>me,divNoNan:()=>jy,dot:()=>Vk,dropout:()=>uI,einsum:()=>Uk,elu:()=>iu,enableDebugMode:()=>pR,enableProdMode:()=>dR,enclosingPowerOfTwo:()=>lI,engine:()=>ks,env:()=>Q,equal:()=>Xn,erf:()=>qy,exp:()=>fn,expandDims:()=>mn,expm1:()=>Ky,eye:()=>Xy,fft:()=>dd,fill:()=>xn,findBackend:()=>wR,findBackendFactory:()=>kR,floor:()=>cu,floorDiv:()=>Uh,forceHalfFloat:()=>NN,fused:()=>pa,gather:()=>Yo,gatherND:()=>cI,gather_util:()=>xy,getBackend:()=>vR,getGradient:()=>Yb,getKernel:()=>Dh,getKernelsForBackend:()=>Fh,getThreadsCount:()=>Tce,gpgpu_util:()=>eN,grad:()=>oO,grads:()=>iO,greater:()=>On,greaterEqual:()=>la,ifft:()=>hu,imag:()=>Yh,image:()=>er,inTopKAsync:()=>bM,initializers:()=>GI,input:()=>RS,io:()=>Yt,irfft:()=>df,isFinite:()=>Gk,isInf:()=>Hk,isNaN:()=>Yy,keep:()=>Zt,kernel_impls:()=>rs,layers:()=>tS,leakyRelu:()=>rd,less:()=>Zh,lessEqual:()=>da,linalg:()=>kI,linspace:()=>jk,loadGraphModel:()=>LH,loadLayersModel:()=>VV,localResponseNormalization:()=>Zy,log:()=>Yn,log1p:()=>sd,logSigmoid:()=>Kk,logSoftmax:()=>Qh,logSumExp:()=>ev,logicalAnd:()=>Cr,logicalNot:()=>ad,logicalOr:()=>ef,logicalXor:()=>Jk,losses:()=>QL,matMul:()=>De,math:()=>ik,max:()=>Tr,maxPool:()=>Pt,maxPool3d:()=>tv,maxPoolWithArgmax:()=>Qk,maximum:()=>ts,mean:()=>Et,memory:()=>Wh,meshgrid:()=>EO,metrics:()=>fT,min:()=>od,minimum:()=>uu,mirrorPad:()=>nv,mod:()=>rv,model:()=>zV,models:()=>mT,moments:()=>tf,movingAverage:()=>uM,mul:()=>V,multiRNNCell:()=>MO,multinomial:()=>eI,neg:()=>It,nextFrame:()=>II,norm:()=>mf,notEqual:()=>Qo,oneHot:()=>ru,ones:()=>Zn,onesLike:()=>Jn,op:()=>W,outerProduct:()=>VO,pad:()=>pr,pad1d:()=>HO,pad2d:()=>qO,pad3d:()=>XO,pad4d:()=>ZO,pool:()=>tI,pow:()=>Ss,prelu:()=>cd,print:()=>tk,prod:()=>nf,profile:()=>mR,rand:()=>o3,randomGamma:()=>l3,randomNormal:()=>nI,randomUniform:()=>lu,range:()=>du,ready:()=>yR,real:()=>ud,reciprocal:()=>ov,registerBackend:()=>Vh,registerCallbackConstructor:()=>UV,registerGradient:()=>E0,registerKernel:()=>Vl,registerOp:()=>RG,regularizers:()=>gT,relu:()=>qe,relu6:()=>rf,removeBackend:()=>xR,reshape:()=>U,reverse:()=>Qn,reverse1d:()=>v3,reverse2d:()=>w3,reverse3d:()=>I3,reverse4d:()=>T3,rfft:()=>pd,round:()=>sf,rsqrt:()=>af,scalar:()=>Ie,scatterND:()=>iI,scatter_util:()=>wy,selu:()=>of,separableConv2d:()=>ei,sequential:()=>WV,serialization:()=>ie,setBackend:()=>bR,setPlatform:()=>IR,setThreadsCount:()=>Sce,setWasmPath:()=>kce,setWasmPaths:()=>Ice,setWebGLContext:()=>S2,setdiff1dAsync:()=>rI,sigmoid:()=>dr,sign:()=>iv,signal:()=>JL,sin:()=>cf,sinh:()=>uf,slice:()=>ze,slice1d:()=>lf,slice2d:()=>cv,slice3d:()=>pu,slice4d:()=>ld,slice_util:()=>Gt,softmax:()=>Mr,softplus:()=>Zo,spaceToBatchND:()=>id,sparse:()=>hd,sparseToDense:()=>fv,spectral:()=>ZL,split:()=>Mn,sqrt:()=>an,square:()=>ct,squaredDifference:()=>pf,squeeze:()=>ns,stack:()=>Ot,step:()=>fu,stridedSlice:()=>uv,string:()=>xf,sub:()=>fe,sum:()=>xe,sumOutType:()=>Mh,tan:()=>lv,tanh:()=>Xo,tensor:()=>Kn,tensor1d:()=>He,tensor2d:()=>Lr,tensor3d:()=>zh,tensor4d:()=>Br,tensor5d:()=>Z3,tensor6d:()=>J3,tensor_util:()=>Pr,test_util:()=>Ik,tidy:()=>M,tile:()=>Pn,time:()=>gR,topk:()=>dv,train:()=>ti,transpose:()=>Re,truncatedNormal:()=>hf,unique:()=>ff,unregisterGradient:()=>pF,unregisterKernel:()=>dF,unsortedSegmentSum:()=>pv,unstack:()=>ht,upcastType:()=>Sr,util:()=>k,valueAndGrad:()=>cO,valueAndGrads:()=>uO,variable:()=>sI,variableGrads:()=>qk,version:()=>Oce,version_converter:()=>BH,version_core:()=>lR,version_layers:()=>Yv,version_wasm:()=>Cce,version_webgl:()=>q9,webgl:()=>K9,webgl_util:()=>I2,where:()=>hn,whereAsync:()=>hv,zeros:()=>St,zerosLike:()=>Ge});var hD=Object.create,Gp=Object.defineProperty,fD=Object.getOwnPropertyDescriptor,mD=Object.getOwnPropertyNames,gD=Object.getPrototypeOf,bD=Object.prototype.hasOwnProperty,u0=e=>Gp(e,"__esModule",{value:!0}),dt=(e,t)=>function(){return t||(0,e[Object.keys(e)[0]])((t={exports:{}}).exports,t),t.exports},Ae=(e,t)=>{u0(e);for(var n in t)Gp(e,n,{get:t[n],enumerable:!0})},yD=(e,t,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of mD(t))!bD.call(e,r)&&r!=="default"&&Gp(e,r,{get:()=>t[r],enumerable:!(n=fD(t,r))||n.enumerable});return e},Oa=e=>yD(u0(Gp(e!=null?hD(gD(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),vD=dt({"node_modules/.pnpm/long@4.0.0/node_modules/long/src/long.js"(e,t){t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(R){}function r(R,N,L){this.low=R|0,this.high=N|0,this.unsigned=!!L}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0});function s(R){return(R&&R.__isLong__)===!0}r.isLong=s;var a={},o={};function i(R,N){var L,G,j;return N?(R>>>=0,(j=0<=R&&R<256)&&(G=o[R],G)?G:(L=l(R,(R|0)<0?-1:0,!0),j&&(o[R]=L),L)):(R|=0,(j=-128<=R&&R<128)&&(G=a[R],G)?G:(L=l(R,R<0?-1:0,!1),j&&(a[R]=L),L))}r.fromInt=i;function c(R,N){if(isNaN(R))return N?x:v;if(N){if(R<0)return x;if(R>=g)return F}else{if(R<=-b)return O;if(R+1>=b)return D}return R<0?c(-R,N).neg():l(R%m|0,R/m|0,N)}r.fromNumber=c;function l(R,N,L){return new r(R,N,L)}r.fromBits=l;var u=Math.pow;function d(R,N,L){if(R.length===0)throw Error("empty string");if(R==="NaN"||R==="Infinity"||R==="+Infinity"||R==="-Infinity")return v;if(typeof N=="number"?(L=N,N=!1):N=!!N,L=L||10,L<2||36<L)throw RangeError("radix");var G;if((G=R.indexOf("-"))>0)throw Error("interior hyphen");if(G===0)return d(R.substring(1),N,L).neg();for(var j=c(u(L,8)),K=v,q=0;q<R.length;q+=8){var Z=Math.min(8,R.length-q),te=parseInt(R.substring(q,q+Z),L);if(Z<8){var se=c(u(L,Z));K=K.mul(se).add(c(te))}else K=K.mul(j),K=K.add(c(te))}return K.unsigned=N,K}r.fromString=d;function p(R,N){return typeof R=="number"?c(R,N):typeof R=="string"?d(R,N):l(R.low,R.high,typeof N=="boolean"?N:R.unsigned)}r.fromValue=p;var h=1<<16,f=1<<24,m=h*h,g=m*m,b=g/2,y=i(f),v=i(0);r.ZERO=v;var x=i(0,!0);r.UZERO=x;var w=i(1);r.ONE=w;var T=i(1,!0);r.UONE=T;var C=i(-1);r.NEG_ONE=C;var D=l(4294967295|0,2147483647|0,!1);r.MAX_VALUE=D;var F=l(4294967295|0,4294967295|0,!0);r.MAX_UNSIGNED_VALUE=F;var O=l(0,2147483648|0,!1);r.MIN_VALUE=O;var $=r.prototype;$.toInt=function(){return this.unsigned?this.low>>>0:this.low},$.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},$.toString=function(N){if(N=N||10,N<2||36<N)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(O)){var L=c(N),G=this.div(L),j=G.mul(L).sub(this);return G.toString(N)+j.toInt().toString(N)}else return"-"+this.neg().toString(N);for(var K=c(u(N,6),this.unsigned),q=this,Z="";;){var te=q.div(K),se=q.sub(te.mul(K)).toInt()>>>0,oe=se.toString(N);if(q=te,q.isZero())return oe+Z;for(;oe.length<6;)oe="0"+oe;Z=""+oe+Z}},$.getHighBits=function(){return this.high},$.getHighBitsUnsigned=function(){return this.high>>>0},$.getLowBits=function(){return this.low},$.getLowBitsUnsigned=function(){return this.low>>>0},$.getNumBitsAbs=function(){if(this.isNegative())return this.eq(O)?64:this.neg().getNumBitsAbs();for(var N=this.high!=0?this.high:this.low,L=31;L>0&&(N&1<<L)==0;L--);return this.high!=0?L+33:L+1},$.isZero=function(){return this.high===0&&this.low===0},$.eqz=$.isZero,$.isNegative=function(){return!this.unsigned&&this.high<0},$.isPositive=function(){return this.unsigned||this.high>=0},$.isOdd=function(){return(this.low&1)==1},$.isEven=function(){return(this.low&1)==0},$.equals=function(N){return s(N)||(N=p(N)),this.unsigned!==N.unsigned&&this.high>>>31==1&&N.high>>>31==1?!1:this.high===N.high&&this.low===N.low},$.eq=$.equals,$.notEquals=function(N){return!this.eq(N)},$.neq=$.notEquals,$.ne=$.notEquals,$.lessThan=function(N){return this.comp(N)<0},$.lt=$.lessThan,$.lessThanOrEqual=function(N){return this.comp(N)<=0},$.lte=$.lessThanOrEqual,$.le=$.lessThanOrEqual,$.greaterThan=function(N){return this.comp(N)>0},$.gt=$.greaterThan,$.greaterThanOrEqual=function(N){return this.comp(N)>=0},$.gte=$.greaterThanOrEqual,$.ge=$.greaterThanOrEqual,$.compare=function(N){if(s(N)||(N=p(N)),this.eq(N))return 0;var L=this.isNegative(),G=N.isNegative();return L&&!G?-1:!L&&G?1:this.unsigned?N.high>>>0>this.high>>>0||N.high===this.high&&N.low>>>0>this.low>>>0?-1:1:this.sub(N).isNegative()?-1:1},$.comp=$.compare,$.negate=function(){return!this.unsigned&&this.eq(O)?O:this.not().add(w)},$.neg=$.negate,$.add=function(N){s(N)||(N=p(N));var L=this.high>>>16,G=this.high&65535,j=this.low>>>16,K=this.low&65535,q=N.high>>>16,Z=N.high&65535,te=N.low>>>16,se=N.low&65535,oe=0,re=0,ue=0,ne=0;return ne+=K+se,ue+=ne>>>16,ne&=65535,ue+=j+te,re+=ue>>>16,ue&=65535,re+=G+Z,oe+=re>>>16,re&=65535,oe+=L+q,oe&=65535,l(ue<<16|ne,oe<<16|re,this.unsigned)},$.subtract=function(N){return s(N)||(N=p(N)),this.add(N.neg())},$.sub=$.subtract,$.multiply=function(N){if(this.isZero())return v;if(s(N)||(N=p(N)),n){var L=n.mul(this.low,this.high,N.low,N.high);return l(L,n.get_high(),this.unsigned)}if(N.isZero())return v;if(this.eq(O))return N.isOdd()?O:v;if(N.eq(O))return this.isOdd()?O:v;if(this.isNegative())return N.isNegative()?this.neg().mul(N.neg()):this.neg().mul(N).neg();if(N.isNegative())return this.mul(N.neg()).neg();if(this.lt(y)&&N.lt(y))return c(this.toNumber()*N.toNumber(),this.unsigned);var G=this.high>>>16,j=this.high&65535,K=this.low>>>16,q=this.low&65535,Z=N.high>>>16,te=N.high&65535,se=N.low>>>16,oe=N.low&65535,re=0,ue=0,ne=0,he=0;return he+=q*oe,ne+=he>>>16,he&=65535,ne+=K*oe,ue+=ne>>>16,ne&=65535,ne+=q*se,ue+=ne>>>16,ne&=65535,ue+=j*oe,re+=ue>>>16,ue&=65535,ue+=K*se,re+=ue>>>16,ue&=65535,ue+=q*te,re+=ue>>>16,ue&=65535,re+=G*oe+j*se+K*te+q*Z,re&=65535,l(ne<<16|he,re<<16|ue,this.unsigned)},$.mul=$.multiply,$.divide=function(N){if(s(N)||(N=p(N)),N.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&N.low===-1&&N.high===-1)return this;var L=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,N.low,N.high);return l(L,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?x:v;var G,j,K;if(this.unsigned){if(N.unsigned||(N=N.toUnsigned()),N.gt(this))return x;if(N.gt(this.shru(1)))return T;K=x}else{if(this.eq(O)){if(N.eq(w)||N.eq(C))return O;if(N.eq(O))return w;var q=this.shr(1);return G=q.div(N).shl(1),G.eq(v)?N.isNegative()?w:C:(j=this.sub(N.mul(G)),K=G.add(j.div(N)),K)}else if(N.eq(O))return this.unsigned?x:v;if(this.isNegative())return N.isNegative()?this.neg().div(N.neg()):this.neg().div(N).neg();if(N.isNegative())return this.div(N.neg()).neg();K=v}for(j=this;j.gte(N);){G=Math.max(1,Math.floor(j.toNumber()/N.toNumber()));for(var Z=Math.ceil(Math.log(G)/Math.LN2),te=Z<=48?1:u(2,Z-48),se=c(G),oe=se.mul(N);oe.isNegative()||oe.gt(j);)G-=te,se=c(G,this.unsigned),oe=se.mul(N);se.isZero()&&(se=w),K=K.add(se),j=j.sub(oe)}return K},$.div=$.divide,$.modulo=function(N){if(s(N)||(N=p(N)),n){var L=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,N.low,N.high);return l(L,n.get_high(),this.unsigned)}return this.sub(this.div(N).mul(N))},$.mod=$.modulo,$.rem=$.modulo,$.not=function(){return l(~this.low,~this.high,this.unsigned)},$.and=function(N){return s(N)||(N=p(N)),l(this.low&N.low,this.high&N.high,this.unsigned)},$.or=function(N){return s(N)||(N=p(N)),l(this.low|N.low,this.high|N.high,this.unsigned)},$.xor=function(N){return s(N)||(N=p(N)),l(this.low^N.low,this.high^N.high,this.unsigned)},$.shiftLeft=function(N){return s(N)&&(N=N.toInt()),(N&=63)==0?this:N<32?l(this.low<<N,this.high<<N|this.low>>>32-N,this.unsigned):l(0,this.low<<N-32,this.unsigned)},$.shl=$.shiftLeft,$.shiftRight=function(N){return s(N)&&(N=N.toInt()),(N&=63)==0?this:N<32?l(this.low>>>N|this.high<<32-N,this.high>>N,this.unsigned):l(this.high>>N-32,this.high>=0?0:-1,this.unsigned)},$.shr=$.shiftRight,$.shiftRightUnsigned=function(N){if(s(N)&&(N=N.toInt()),N&=63,N===0)return this;var L=this.high;if(N<32){var G=this.low;return l(G>>>N|L<<32-N,L>>>N,this.unsigned)}else return N===32?l(L,0,this.unsigned):l(L>>>N-32,0,this.unsigned)},$.shru=$.shiftRightUnsigned,$.shr_u=$.shiftRightUnsigned,$.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},$.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},$.toBytes=function(N){return N?this.toBytesLE():this.toBytesBE()},$.toBytesLE=function(){var N=this.high,L=this.low;return[L&255,L>>>8&255,L>>>16&255,L>>>24,N&255,N>>>8&255,N>>>16&255,N>>>24]},$.toBytesBE=function(){var N=this.high,L=this.low;return[N>>>24,N>>>16&255,N>>>8&255,N&255,L>>>24,L>>>16&255,L>>>8&255,L&255]},r.fromBytes=function(N,L,G){return G?r.fromBytesLE(N,L):r.fromBytesBE(N,L)},r.fromBytesLE=function(N,L){return new r(N[0]|N[1]<<8|N[2]<<16|N[3]<<24,N[4]|N[5]<<8|N[6]<<16|N[7]<<24,L)},r.fromBytesBE=function(N,L){return new r(N[4]<<24|N[5]<<16|N[6]<<8|N[7],N[0]<<24|N[1]<<16|N[2]<<8|N[3],L)}}}),xD=dt({"(disabled):node_modules/.pnpm/node-fetch@2.6.6/node_modules/node-fetch/browser.js"(){}}),wD=dt({"(disabled):util"(){}}),kD=dt({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,r,s){function a(l){var u=this,d=c();u.next=function(){var p=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=p-(u.c=p|0)},u.c=1,u.s0=d(" "),u.s1=d(" "),u.s2=d(" "),u.s0-=d(l),u.s0<0&&(u.s0+=1),u.s1-=d(l),u.s1<0&&(u.s1+=1),u.s2-=d(l),u.s2<0&&(u.s2+=1),d=null}function o(l,u){return u.c=l.c,u.s0=l.s0,u.s1=l.s1,u.s2=l.s2,u}function i(l,u){var d=new a(l),p=u&&u.state,h=d.next;return h.int32=function(){return d.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,p&&(typeof p=="object"&&o(p,d),h.state=function(){return o(d,{})}),h}function c(){var l=4022871197,u=function(d){d=d.toString();for(var p=0;p<d.length;p++){l+=d.charCodeAt(p);var h=.02519603282416938*l;l=h>>>0,h-=l,h*=l,l=h>>>0,h-=l,l+=h*4294967296}return(l>>>0)*23283064365386963e-26};return u}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.alea=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),ID=dt({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,r,s){function a(c){var l=this,u="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var p=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^p^p>>>8},c===(c|0)?l.x=c:u+=c;for(var d=0;d<u.length+64;d++)l.x^=u.charCodeAt(d)|0,l.next()}function o(c,l){return l.x=c.x,l.y=c.y,l.z=c.z,l.w=c.w,l}function i(c,l){var u=new a(c),d=l&&l.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.xor128=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),SD=dt({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,r,s){function a(c){var l=this,u="";l.next=function(){var p=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(p^p<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,c===(c|0)?l.x=c:u+=c;for(var d=0;d<u.length+64;d++)l.x^=u.charCodeAt(d)|0,d==u.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function o(c,l){return l.x=c.x,l.y=c.y,l.z=c.z,l.w=c.w,l.v=c.v,l.d=c.d,l}function i(c,l){var u=new a(c),d=l&&l.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.xorwow=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),TD=dt({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,r,s){function a(c){var l=this;l.next=function(){var d=l.x,p=l.i,h,f,m;return h=d[p],h^=h>>>7,f=h^h<<24,h=d[p+1&7],f^=h^h>>>10,h=d[p+3&7],f^=h^h>>>3,h=d[p+4&7],f^=h^h<<7,h=d[p+7&7],h=h^h<<13,f^=h^h<<9,d[p]=f,l.i=p+1&7,f};function u(d,p){var h,f,m=[];if(p===(p|0))f=m[0]=p;else for(p=""+p,h=0;h<p.length;++h)m[h&7]=m[h&7]<<15^p.charCodeAt(h)+m[h+1&7]<<13;for(;m.length<8;)m.push(0);for(h=0;h<8&&m[h]===0;++h);for(h==8?f=m[7]=-1:f=m[h],d.x=m,d.i=0,h=256;h>0;--h)d.next()}u(l,c)}function o(c,l){return l.x=c.x.slice(),l.i=c.i,l}function i(c,l){c==null&&(c=+new Date);var u=new a(c),d=l&&l.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(d.x&&o(d,u),p.state=function(){return o(u,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.xorshift7=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),CD=dt({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,r,s){function a(c){var l=this;l.next=function(){var d=l.w,p=l.X,h=l.i,f,m;return l.w=d=d+1640531527|0,m=p[h+34&127],f=p[h=h+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=p[h]=m^f,l.i=h,m+(d^d>>>16)|0};function u(d,p){var h,f,m,g,b,y=[],v=128;for(p===(p|0)?(f=p,p=null):(p=p+"\0",f=0,v=Math.max(v,p.length)),m=0,g=-32;g<v;++g)p&&(f^=p.charCodeAt((g+32)%p.length)),g===0&&(b=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(b=b+1640531527|0,h=y[g&127]^=f+b,m=h==0?m+1:0);for(m>=128&&(y[(p&&p.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=y[m+34&127],h=y[m=m+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,y[m]=f^h;d.w=b,d.X=y,d.i=m}u(l,c)}function o(c,l){return l.i=c.i,l.w=c.w,l.X=c.X.slice(),l}function i(c,l){c==null&&(c=+new Date);var u=new a(c),d=l&&l.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(d.X&&o(d,u),p.state=function(){return o(u,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.xor4096=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),ND=dt({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,r,s){function a(c){var l=this,u="";l.next=function(){var p=l.b,h=l.c,f=l.d,m=l.a;return p=p<<25^p>>>7^h,h=h-f|0,f=f<<24^f>>>8^m,m=m-p|0,l.b=p=p<<20^p>>>12^h,l.c=h=h-f|0,l.d=f<<16^h>>>16^m,l.a=m-p|0},l.a=0,l.b=0,l.c=2654435769|0,l.d=1367130551,c===Math.floor(c)?(l.a=c/4294967296|0,l.b=c|0):u+=c;for(var d=0;d<u.length+20;d++)l.b^=u.charCodeAt(d)|0,l.next()}function o(c,l){return l.a=c.a,l.b=c.b,l.c=c.c,l.d=c.d,l}function i(c,l){var u=new a(c),d=l&&l.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.tychei=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),l0=dt({"(disabled):crypto"(){}}),_D=dt({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,r){var s=this,a=256,o=6,i=52,c="random",l=r.pow(a,o),u=r.pow(2,i),d=u*2,p=a-1,h;function f(w,T,C){var D=[];T=T==!0?{entropy:!0}:T||{};var F=y(b(T.entropy?[w,x(n)]:w==null?v():w,3),D),O=new m(D),$=function(){for(var R=O.g(o),N=l,L=0;R<u;)R=(R+L)*a,N*=a,L=O.g(1);for(;R>=d;)R/=2,N/=2,L>>>=1;return(R+L)/N};return $.int32=function(){return O.g(4)|0},$.quick=function(){return O.g(4)/4294967296},$.double=$,y(x(O.S),n),(T.pass||C||function(R,N,L,G){return G&&(G.S&&g(G,O),R.state=function(){return g(O,{})}),L?(r[c]=R,N):R})($,F,"global"in T?T.global:this==r,T.state)}r["seed"+c]=f;function m(w){var T,C=w.length,D=this,F=0,O=D.i=D.j=0,$=D.S=[];for(C||(w=[C++]);F<a;)$[F]=F++;for(F=0;F<a;F++)$[F]=$[O=p&O+w[F%C]+(T=$[F])],$[O]=T;(D.g=function(R){for(var N,L=0,G=D.i,j=D.j,K=D.S;R--;)N=K[G=p&G+1],L=L*a+K[p&(K[G]=K[j=p&j+N])+(K[j]=N)];return D.i=G,D.j=j,L})(a)}function g(w,T){return T.i=w.i,T.j=w.j,T.S=w.S.slice(),T}function b(w,T){var C=[],D=typeof w,F;if(T&&D=="object")for(F in w)try{C.push(b(w[F],T-1))}catch(O){}return C.length?C:D=="string"?w:w+"\0"}function y(w,T){for(var C=w+"",D,F=0;F<C.length;)T[p&F]=p&(D^=T[p&F]*19)+C.charCodeAt(F++);return x(T)}function v(){try{var w;return h&&(w=h.randomBytes)?w=w(a):(w=new Uint8Array(a),(s.crypto||s.msCrypto).getRandomValues(w)),x(w)}catch(D){var T=s.navigator,C=T&&T.plugins;return[+new Date,s,C,s.screen,x(n)]}}function x(w){return String.fromCharCode.apply(0,w)}if(y(r.random(),n),typeof t=="object"&&t.exports){t.exports=f;try{h=l0()}catch(w){}}else typeof define=="function"&&define.amd&&define(function(){return f})})([],Math)}}),d0=dt({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/index.js"(e,t){var n=kD(),r=ID(),s=SD(),a=TD(),o=CD(),i=ND(),c=_D();c.alea=n,c.xor128=r,c.xorwow=s,c.xorshift7=a,c.xor4096=o,c.tychei=i,t.exports=c}}),ED=dt({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,r,s){function a(l){var u=this,d=c();u.next=function(){var p=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=p-(u.c=p|0)},u.c=1,u.s0=d(" "),u.s1=d(" "),u.s2=d(" "),u.s0-=d(l),u.s0<0&&(u.s0+=1),u.s1-=d(l),u.s1<0&&(u.s1+=1),u.s2-=d(l),u.s2<0&&(u.s2+=1),d=null}function o(l,u){return u.c=l.c,u.s0=l.s0,u.s1=l.s1,u.s2=l.s2,u}function i(l,u){var d=new a(l),p=u&&u.state,h=d.next;return h.int32=function(){return d.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,p&&(typeof p=="object"&&o(p,d),h.state=function(){return o(d,{})}),h}function c(){var l=4022871197,u=function(d){d=String(d);for(var p=0;p<d.length;p++){l+=d.charCodeAt(p);var h=.02519603282416938*l;l=h>>>0,h-=l,h*=l,l=h>>>0,h-=l,l+=h*4294967296}return(l>>>0)*23283064365386963e-26};return u}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.alea=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),AD=dt({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,r,s){function a(c){var l=this,u="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var p=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^p^p>>>8},c===(c|0)?l.x=c:u+=c;for(var d=0;d<u.length+64;d++)l.x^=u.charCodeAt(d)|0,l.next()}function o(c,l){return l.x=c.x,l.y=c.y,l.z=c.z,l.w=c.w,l}function i(c,l){var u=new a(c),d=l&&l.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.xor128=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),DD=dt({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,r,s){function a(c){var l=this,u="";l.next=function(){var p=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(p^p<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,c===(c|0)?l.x=c:u+=c;for(var d=0;d<u.length+64;d++)l.x^=u.charCodeAt(d)|0,d==u.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function o(c,l){return l.x=c.x,l.y=c.y,l.z=c.z,l.w=c.w,l.v=c.v,l.d=c.d,l}function i(c,l){var u=new a(c),d=l&&l.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.xorwow=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),FD=dt({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,r,s){function a(c){var l=this;l.next=function(){var d=l.x,p=l.i,h,f,m;return h=d[p],h^=h>>>7,f=h^h<<24,h=d[p+1&7],f^=h^h>>>10,h=d[p+3&7],f^=h^h>>>3,h=d[p+4&7],f^=h^h<<7,h=d[p+7&7],h=h^h<<13,f^=h^h<<9,d[p]=f,l.i=p+1&7,f};function u(d,p){var h,f,m=[];if(p===(p|0))f=m[0]=p;else for(p=""+p,h=0;h<p.length;++h)m[h&7]=m[h&7]<<15^p.charCodeAt(h)+m[h+1&7]<<13;for(;m.length<8;)m.push(0);for(h=0;h<8&&m[h]===0;++h);for(h==8?f=m[7]=-1:f=m[h],d.x=m,d.i=0,h=256;h>0;--h)d.next()}u(l,c)}function o(c,l){return l.x=c.x.slice(),l.i=c.i,l}function i(c,l){c==null&&(c=+new Date);var u=new a(c),d=l&&l.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(d.x&&o(d,u),p.state=function(){return o(u,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.xorshift7=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),$D=dt({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,r,s){function a(c){var l=this;l.next=function(){var d=l.w,p=l.X,h=l.i,f,m;return l.w=d=d+1640531527|0,m=p[h+34&127],f=p[h=h+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=p[h]=m^f,l.i=h,m+(d^d>>>16)|0};function u(d,p){var h,f,m,g,b,y=[],v=128;for(p===(p|0)?(f=p,p=null):(p=p+"\0",f=0,v=Math.max(v,p.length)),m=0,g=-32;g<v;++g)p&&(f^=p.charCodeAt((g+32)%p.length)),g===0&&(b=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(b=b+1640531527|0,h=y[g&127]^=f+b,m=h==0?m+1:0);for(m>=128&&(y[(p&&p.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=y[m+34&127],h=y[m=m+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,y[m]=f^h;d.w=b,d.X=y,d.i=m}u(l,c)}function o(c,l){return l.i=c.i,l.w=c.w,l.X=c.X.slice(),l}function i(c,l){c==null&&(c=+new Date);var u=new a(c),d=l&&l.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(d.X&&o(d,u),p.state=function(){return o(u,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.xor4096=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),RD=dt({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,r,s){function a(c){var l=this,u="";l.next=function(){var p=l.b,h=l.c,f=l.d,m=l.a;return p=p<<25^p>>>7^h,h=h-f|0,f=f<<24^f>>>8^m,m=m-p|0,l.b=p=p<<20^p>>>12^h,l.c=h=h-f|0,l.d=f<<16^h>>>16^m,l.a=m-p|0},l.a=0,l.b=0,l.c=2654435769|0,l.d=1367130551,c===Math.floor(c)?(l.a=c/4294967296|0,l.b=c|0):u+=c;for(var d=0;d<u.length+20;d++)l.b^=u.charCodeAt(d)|0,l.next()}function o(c,l){return l.a=c.a,l.b=c.b,l.c=c.c,l.d=c.d,l}function i(c,l){var u=new a(c),d=l&&l.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.tychei=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),PD=dt({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,r,s){var a=256,o=6,i=52,c="random",l=s.pow(a,o),u=s.pow(2,i),d=u*2,p=a-1,h;function f(w,T,C){var D=[];T=T==!0?{entropy:!0}:T||{};var F=y(b(T.entropy?[w,x(r)]:w==null?v():w,3),D),O=new m(D),$=function(){for(var R=O.g(o),N=l,L=0;R<u;)R=(R+L)*a,N*=a,L=O.g(1);for(;R>=d;)R/=2,N/=2,L>>>=1;return(R+L)/N};return $.int32=function(){return O.g(4)|0},$.quick=function(){return O.g(4)/4294967296},$.double=$,y(x(O.S),r),(T.pass||C||function(R,N,L,G){return G&&(G.S&&g(G,O),R.state=function(){return g(O,{})}),L?(s[c]=R,N):R})($,F,"global"in T?T.global:this==s,T.state)}function m(w){var T,C=w.length,D=this,F=0,O=D.i=D.j=0,$=D.S=[];for(C||(w=[C++]);F<a;)$[F]=F++;for(F=0;F<a;F++)$[F]=$[O=p&O+w[F%C]+(T=$[F])],$[O]=T;(D.g=function(R){for(var N,L=0,G=D.i,j=D.j,K=D.S;R--;)N=K[G=p&G+1],L=L*a+K[p&(K[G]=K[j=p&j+N])+(K[j]=N)];return D.i=G,D.j=j,L})(a)}function g(w,T){return T.i=w.i,T.j=w.j,T.S=w.S.slice(),T}function b(w,T){var C=[],D=typeof w,F;if(T&&D=="object")for(F in w)try{C.push(b(w[F],T-1))}catch(O){}return C.length?C:D=="string"?w:w+"\0"}function y(w,T){for(var C=w+"",D,F=0;F<C.length;)T[p&F]=p&(D^=T[p&F]*19)+C.charCodeAt(F++);return x(T)}function v(){try{var w;return h&&(w=h.randomBytes)?w=w(a):(w=new Uint8Array(a),(n.crypto||n.msCrypto).getRandomValues(w)),x(w)}catch(D){var T=n.navigator,C=T&&T.plugins;return[+new Date,n,C,n.screen,x(r)]}}function x(w){return String.fromCharCode.apply(0,w)}if(y(s.random(),r),typeof t=="object"&&t.exports){t.exports=f;try{h=l0()}catch(w){}}else typeof define=="function"&&define.amd?define(function(){return f}):s["seed"+c]=f})(typeof self!="undefined"?self:e,[],Math)}}),p0=dt({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/index.js"(e,t){var n=ED(),r=AD(),s=DD(),a=FD(),o=$D(),i=RD(),c=PD();c.alea=n,c.xor128=r,c.xorwow=s,c.xorshift7=a,c.xor4096=o,c.tychei=i,t.exports=c}}),h0=dt({"(disabled):node_modules/.pnpm/string_decoder@1.1.1/node_modules/string_decoder/lib/string_decoder.js"(){}}),Hp=dt({"(disabled):fs"(){}}),xl=dt({"(disabled):path"(){}}),OD=dt({"(disabled):worker_threads"(){}}),MD=dt({"(disabled):perf_hooks"(){}}),LD=dt({"(disabled):os"(){}}),BD=dt({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.12.0_@tensorflow+tfjs-core@3.12.0/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var n=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(s){s=s||{};function a(){return ne.buffer!=Je&&Fn(ne.buffer),Hn}function o(){return ne.buffer!=Je&&Fn(ne.buffer),rn}function i(){return ne.buffer!=Je&&Fn(ne.buffer),jn}function c(){return ne.buffer!=Je&&Fn(ne.buffer),or}function l(){return ne.buffer!=Je&&Fn(ne.buffer),ir}var u=typeof s!="undefined"?s:{},d,p;u.ready=new Promise(function(S,E){d=S,p=E});var h;typeof process!="undefined"&&process.listeners&&(h={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var f={},m;for(m in u)u.hasOwnProperty(m)&&(f[m]=u[m]);var g=[],b="./this.program",y=function(S,E){throw E},v=!1,x=!1,w=!1,T=!1;v=typeof window=="object",x=typeof importScripts=="function",w=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",T=!v&&!w&&!x;var C=u.ENVIRONMENT_IS_PTHREAD||!1;C&&(Je=u.buffer);var D="";function F(S){return u.locateFile?u.locateFile(S,D):D+S}var O,$,R,N,L,G;if(w){x?D=xl().dirname(D)+"/":D=__dirname+"/",O=function(E,B){return L||(L=Hp()),G||(G=xl()),E=G.normalize(E),L.readFileSync(E,B?null:"utf8")},R=function(E){var B=O(E,!0);return B.buffer||(B=new Uint8Array(B)),Se(B.buffer),B},process.argv.length>1&&(b=process.argv[1].replace(/\\/g,"/")),g=process.argv.slice(2),process.on("uncaughtException",function(S){if(!(S instanceof vl))throw S}),process.on("unhandledRejection",bs),y=function(S){process.exit(S)},u.inspect=function(){return"[Emscripten Module object]"};var j;try{j=OD()}catch(S){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),S}global.Worker=j.Worker}else T?(typeof read!="undefined"&&(O=function(E){return read(E)}),R=function(E){var B;return typeof readbuffer=="function"?new Uint8Array(readbuffer(E)):(B=read(E,"binary"),Se(typeof B=="object"),B)},typeof scriptArgs!="undefined"?g=scriptArgs:typeof arguments!="undefined"&&(g=arguments),typeof quit=="function"&&(y=function(S){quit(S)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(v||x)&&(x?D=self.location.href:typeof document!="undefined"&&document.currentScript&&(D=document.currentScript.src),typeof r!="undefined"&&r&&(D=r),D.indexOf("blob:")!==0?D=D.substr(0,D.lastIndexOf("/")+1):D="",w?(O=function(E,B){return L||(L=Hp()),G||(G=xl()),E=G.normalize(E),L.readFileSync(E,B?null:"utf8")},R=function(E){var B=O(E,!0);return B.buffer||(B=new Uint8Array(B)),Se(B.buffer),B}):(O=function(S){var E=new XMLHttpRequest;return E.open("GET",S,!1),E.send(null),E.responseText},x&&(R=function(S){var E=new XMLHttpRequest;return E.open("GET",S,!1),E.responseType="arraybuffer",E.send(null),new Uint8Array(E.response)}),$=function(S,E,B){var X=new XMLHttpRequest;X.open("GET",S,!0),X.responseType="arraybuffer",X.onload=function(){if(X.status==200||X.status==0&&X.response){E(X.response);return}B()},X.onerror=B,X.send(null)}),N=function(S){document.title=S});w&&typeof performance=="undefined"&&(global.performance=MD().performance);var K=u.print||console.log.bind(console),q=u.printErr||console.warn.bind(console);for(m in f)f.hasOwnProperty(m)&&(u[m]=f[m]);f=null,u.arguments&&(g=u.arguments),u.thisProgram&&(b=u.thisProgram),u.quit&&(y=u.quit);function Z(S){Z.shown||(Z.shown={}),Z.shown[S]||(Z.shown[S]=1,q(S))}var te=Atomics.load,se=Atomics.store,oe=Atomics.compareExchange,re;u.wasmBinary&&(re=u.wasmBinary);var ue=u.noExitRuntime||!0;typeof WebAssembly!="object"&&bs("no native wasm support detected");var ne,he,ye=!1,Ce;function Se(S,E){S||bs("Assertion failed: "+E)}function _e(S){var E=u["_"+S];return Se(E,"Cannot call unknown function "+S+", make sure it is exported"),E}function Me(S,E,B,X,pe){var le={string:function(gn){var ji=0;if(gn!=null&&gn!==0){var i0=(gn.length<<2)+1;ji=Ui(i0),Ze(gn,ji,i0)}return ji},array:function(gn){var ji=Ui(gn.length);return wt(gn,ji),ji}};function de(gn){return E==="string"?Ve(gn):E==="boolean"?Boolean(gn):gn}var we=_e(S),st=[],Kt=0;if(X)for(var Vt=0;Vt<X.length;Vt++){var qs=le[B[Vt]];qs?(Kt===0&&(Kt=yl()),st[Vt]=qs(X[Vt])):st[Vt]=X[Vt]}var Hi=we.apply(null,st);return Hi=de(Hi),Kt!==0&&Vi(Kt),Hi}function Ye(S,E,B,X){B=B||[];var pe=B.every(function(de){return de==="number"}),le=E!=="string";return le&&pe&&!X?_e(S):function(){return Me(S,E,B,arguments,X)}}function We(S,E,B){for(var X=E+B,pe="";!(E>=X);){var le=S[E++];if(!le)return pe;if(!(le&128)){pe+=String.fromCharCode(le);continue}var de=S[E++]&63;if((le&224)==192){pe+=String.fromCharCode((le&31)<<6|de);continue}var we=S[E++]&63;if((le&240)==224?le=(le&15)<<12|de<<6|we:le=(le&7)<<18|de<<12|we<<6|S[E++]&63,le<65536)pe+=String.fromCharCode(le);else{var st=le-65536;pe+=String.fromCharCode(55296|st>>10,56320|st&1023)}}return pe}function Ve(S,E){return S?We(o(),S,E):""}function it(S,E,B,X){if(!(X>0))return 0;for(var pe=B,le=B+X-1,de=0;de<S.length;++de){var we=S.charCodeAt(de);if(we>=55296&&we<=57343){var st=S.charCodeAt(++de);we=65536+((we&1023)<<10)|st&1023}if(we<=127){if(B>=le)break;E[B++]=we}else if(we<=2047){if(B+1>=le)break;E[B++]=192|we>>6,E[B++]=128|we&63}else if(we<=65535){if(B+2>=le)break;E[B++]=224|we>>12,E[B++]=128|we>>6&63,E[B++]=128|we&63}else{if(B+3>=le)break;E[B++]=240|we>>18,E[B++]=128|we>>12&63,E[B++]=128|we>>6&63,E[B++]=128|we&63}}return E[B]=0,B-pe}function Ze(S,E,B){return it(S,o(),E,B)}function lt(S){for(var E=0,B=0;B<S.length;++B){var X=S.charCodeAt(B);X>=55296&&X<=57343&&(X=65536+((X&1023)<<10)|S.charCodeAt(++B)&1023),X<=127?++E:X<=2047?E+=2:X<=65535?E+=3:E+=4}return E}function wt(S,E){a().set(S,E)}function An(S,E){return S%E>0&&(S+=E-S%E),S}var Je,Hn,rn,vr,Dn,jn,or,xr,ir;function Fn(S){Je=S,u.HEAP8=Hn=new Int8Array(S),u.HEAP16=vr=new Int16Array(S),u.HEAP32=jn=new Int32Array(S),u.HEAPU8=rn=new Uint8Array(S),u.HEAPU16=Dn=new Uint16Array(S),u.HEAPU32=or=new Uint32Array(S),u.HEAPF32=xr=new Float32Array(S),u.HEAPF64=ir=new Float64Array(S)}var zs=u.INITIAL_MEMORY||16777216;if(C)ne=u.wasmMemory,Je=u.buffer;else if(u.wasmMemory)ne=u.wasmMemory;else if(ne=new WebAssembly.Memory({initial:zs/65536,maximum:2147483648/65536,shared:!0}),!(ne.buffer instanceof SharedArrayBuffer))throw q("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),w&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");ne&&(Je=ne.buffer),zs=Je.byteLength,Fn(Je);var dn,Ws=[],cr=[],il=[],cl=[],gs=[],mp=!1,fg=!1;C||cr.push({func:function(){$p()}});function gp(){if(!C){if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)mg(u.preRun.shift());Mi(Ws)}}function bp(){mp=!0,!C&&Mi(cr)}function yp(){C||Mi(il)}function $n(){C||(fg=!0)}function vp(){if(!C){if(u.postRun)for(typeof u.postRun=="function"&&(u.postRun=[u.postRun]);u.postRun.length;)gg(u.postRun.shift());Mi(gs)}}function mg(S){Ws.unshift(S)}function gg(S){gs.unshift(S)}var wr=0,ul=null,Fa=null;function bg(S){Se(!C,"addRunDependency cannot be used in a pthread worker"),wr++,u.monitorRunDependencies&&u.monitorRunDependencies(wr)}function yg(S){if(wr--,u.monitorRunDependencies&&u.monitorRunDependencies(wr),wr==0&&(ul!==null&&(clearInterval(ul),ul=null),Fa)){var E=Fa;Fa=null,E()}}u.preloadedImages={},u.preloadedAudios={};function bs(S){u.onAbort&&u.onAbort(S),C&&console.error("Pthread aborting at "+new Error().stack),S+="",q(S),ye=!0,Ce=1,S="abort("+S+"). Build with -s ASSERTIONS=1 for more info.";var E=new WebAssembly.RuntimeError(S);throw p(E),E}function $a(S,E){return String.prototype.startsWith?S.startsWith(E):S.indexOf(E)===0}var vg="data:application/octet-stream;base64,";function xp(S){return $a(S,vg)}var xg="file://";function wp(S){return $a(S,xg)}var Rn="tfjs-backend-wasm-threaded-simd.wasm";xp(Rn)||(Rn=F(Rn));function kp(S){try{if(S==Rn&&re)return new Uint8Array(re);if(R)return R(S);throw"both async and sync fetching of the wasm failed"}catch(E){bs(E)}}function wg(){if(!re&&(v||x)){if(typeof fetch=="function"&&!wp(Rn))return fetch(Rn,{credentials:"same-origin"}).then(function(S){if(!S.ok)throw"failed to load wasm binary file at '"+Rn+"'";return S.arrayBuffer()}).catch(function(){return kp(Rn)});if($)return new Promise(function(S,E){$(Rn,function(B){S(new Uint8Array(B))},E)})}return Promise.resolve().then(function(){return kp(Rn)})}function kg(){var S={a:fb};function E(de,we){var st=de.exports;if(u.asm=st,dn=u.asm.I,he=we,!C){var Kt=Te.unusedWorkers.length;Te.unusedWorkers.forEach(function(Vt){Te.loadWasmModuleToWorker(Vt,function(){--Kt||yg("wasm-instantiate")})})}}C||bg("wasm-instantiate");function B(de){E(de.instance,de.module)}function X(de){return wg().then(function(we){return WebAssembly.instantiate(we,S)}).then(de,function(we){q("failed to asynchronously prepare wasm: "+we),bs(we)})}function pe(){return!re&&typeof WebAssembly.instantiateStreaming=="function"&&!xp(Rn)&&!wp(Rn)&&typeof fetch=="function"?fetch(Rn,{credentials:"same-origin"}).then(function(de){var we=WebAssembly.instantiateStreaming(de,S);return we.then(B,function(st){return q("wasm streaming compile failed: "+st),q("falling back to ArrayBuffer instantiation"),X(B)})}):X(B)}if(u.instantiateWasm)try{var le=u.instantiateWasm(S,E);return le}catch(de){return q("Module.instantiateWasm callback failed with error: "+de),!1}return pe().catch(p),{}}var Ig={10664:function(){throw"Canceled!"},10682:function(S,E){setTimeout(function(){t0(S,E)},0)}};function Ip(){Te.initRuntime()}function Mi(S){for(;S.length>0;){var E=S.shift();if(typeof E=="function"){E(u);continue}var B=E.func;typeof B=="number"?E.arg===void 0?dn.get(B)():dn.get(B)(E.arg):B(E.arg===void 0?null:E.arg)}}var Vs={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function ll(S,E){if(S<=0||S>a().length||S&!0||E<0)return-28;if(E==0)return 0;E>=2147483647&&(E=1/0);var B=Atomics.load(i(),Gi>>2),X=0;if(B==S){var pe=Atomics.compareExchange(i(),Gi>>2,B,0);if(pe==B&&(--E,X=1,E<=0))return 1}var le=Atomics.notify(i(),S>>2,E);if(le>=0)return le+X;throw"Atomics.notify returned an unexpected value "+le}u._emscripten_futex_wake=ll;function Sg(S){if(C)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in killThread!";i()[S+12>>2]=0;var E=Te.pthreads[S];E.worker.terminate(),Te.freeThreadData(E),Te.runningWorkers.splice(Te.runningWorkers.indexOf(E.worker),1),E.worker.pthread=void 0}function Tg(S){if(C)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in cancelThread!";var E=Te.pthreads[S];E.worker.postMessage({cmd:"cancel"})}function Sp(S){if(C)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in cleanupThread!";var E=Te.pthreads[S];if(E){i()[S+12>>2]=0;var B=E.worker;Te.returnWorkerToPool(B)}}var Te={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var S=8,E=0;E<S;++E)Te.allocateUnusedWorker()},initRuntime:function(){for(var S=Pa(228),E=0;E<228/4;++E)c()[S/4+E]=0;i()[S+12>>2]=S;var B=S+152;i()[B>>2]=B;for(var X=Pa(512),E=0;E<128;++E)c()[X/4+E]=0;Atomics.store(c(),S+100>>2,X),Atomics.store(c(),S+40>>2,S),Wb(S,!x,1),Q1(S)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Te.threadExitHandlers.length>0;)Te.threadExitHandlers.pop()();C&&js()&&J1()},runExitHandlersAndDeinitThread:function(S,E){Atomics.store(c(),S+56>>2,1),Atomics.store(c(),S+60>>2,0),Te.runExitHandlers(),Atomics.store(c(),S+4>>2,E),Atomics.store(c(),S+0>>2,1),ll(S+0,2147483647),Wb(0,0,0)},threadExit:function(S){var E=js();E&&(Te.runExitHandlersAndDeinitThread(E,S),C&&postMessage({cmd:"exit"}))},threadCancel:function(){Te.runExitHandlersAndDeinitThread(js(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var S in Te.pthreads){var E=Te.pthreads[S];E&&E.worker&&Te.returnWorkerToPool(E.worker)}Te.pthreads={};for(var B=0;B<Te.unusedWorkers.length;++B){var X=Te.unusedWorkers[B];X.terminate()}Te.unusedWorkers=[];for(var B=0;B<Te.runningWorkers.length;++B){var X=Te.runningWorkers[B],E=X.pthread;Te.freeThreadData(E),X.terminate()}Te.runningWorkers=[]},freeThreadData:function(S){if(!!S){if(S.threadInfoStruct){var E=i()[S.threadInfoStruct+100>>2];i()[S.threadInfoStruct+100>>2]=0,bl(E),bl(S.threadInfoStruct)}S.threadInfoStruct=0,S.allocatedOwnStack&&S.stackBase&&bl(S.stackBase),S.stackBase=0,S.worker&&(S.worker.pthread=null)}},returnWorkerToPool:function(S){Te.runWithoutMainThreadQueuedCalls(function(){delete Te.pthreads[S.pthread.threadInfoStruct],Te.unusedWorkers.push(S),Te.runningWorkers.splice(Te.runningWorkers.indexOf(S),1),Te.freeThreadData(S.pthread),S.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(S){i()[o0>>2]=0;try{S()}finally{i()[o0>>2]=1}},receiveObjectTransfer:function(S){},loadWasmModuleToWorker:function(S,E){S.onmessage=function(B){var X=B.data,pe=X.cmd;if(S.pthread&&(Te.currentProxiedOperationCallerThread=S.pthread.threadInfoStruct),X.targetThread&&X.targetThread!=js()){var le=Te.pthreads[X.targetThread];le?le.worker.postMessage(B.data,X.transferList):console.error('Internal error! Worker sent a message "'+pe+'" to target pthread '+X.targetThread+", but that thread no longer exists!"),Te.currentProxiedOperationCallerThread=void 0;return}if(pe==="processQueuedMainThreadWork")Bp();else if(pe==="spawnThread")Dp(B.data);else if(pe==="cleanupThread")Sp(X.thread);else if(pe==="killThread")Sg(X.thread);else if(pe==="cancelThread")Tg(X.thread);else if(pe==="loaded")S.loaded=!0,E&&E(S),S.runPthread&&(S.runPthread(),delete S.runPthread);else if(pe==="print")K("Thread "+X.threadId+": "+X.text);else if(pe==="printErr")q("Thread "+X.threadId+": "+X.text);else if(pe==="alert")alert("Thread "+X.threadId+": "+X.text);else if(pe==="exit"){var de=S.pthread&&Atomics.load(c(),S.pthread.threadInfoStruct+64>>2);de&&Te.returnWorkerToPool(S)}else if(pe==="exitProcess")try{uD(X.returnCode)}catch(we){if(we instanceof vl)return;throw we}else pe==="cancelDone"?Te.returnWorkerToPool(S):pe==="objectTransfer"?Te.receiveObjectTransfer(B.data):B.data.target==="setimmediate"?S.postMessage(B.data):q("worker sent an unknown command "+pe);Te.currentProxiedOperationCallerThread=void 0},S.onerror=function(B){q("pthread sent an error! "+B.filename+":"+B.lineno+": "+B.message)},w&&(S.on("message",function(B){S.onmessage({data:B})}),S.on("error",function(B){S.onerror(B)}),S.on("exit",function(B){})),S.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||r,wasmMemory:ne,wasmModule:he})},allocateUnusedWorker:function(){var S=F("tfjs-backend-wasm-threaded-simd.worker.js");Te.unusedWorkers.push(new Worker(S))},getNewWorker:function(){return Te.unusedWorkers.length==0&&(Te.allocateUnusedWorker(),Te.loadWasmModuleToWorker(Te.unusedWorkers[0])),Te.unusedWorkers.length>0?Te.unusedWorkers.pop():null},busySpinWait:function(S){for(var E=performance.now()+S;performance.now()<E;);}};function Cg(S,E){s0(S,E),Vi(S)}u.establishStackSpace=Cg;function Ng(){return ue}u.getNoExitRuntime=Ng;function _g(S,E){return dn.get(S)(E)}u.invokeEntryPoint=_g;function Eg(S,E,B,X){bs("Assertion failed: "+Ve(S)+", at: "+[E?Ve(E):"unknown filename",B,X?Ve(X):"unknown function"])}function Ag(S,E){var B=_main(S,E)}var Ra;w?Ra=function(){var S=process.hrtime();return S[0]*1e3+S[1]/1e6}:C?Ra=function(){return performance.now()-u.__performance_now_clock_drift}:typeof dateNow!="undefined"?Ra=dateNow:Ra=function(){return performance.now()};function Dg(S){return i()[Y1()>>2]=S,S}function Fg(S,E){if(C)return Us(1,1,S,E)}function $g(S,E){if(S==E)postMessage({cmd:"processQueuedMainThreadWork"});else if(C)postMessage({targetThread:S,cmd:"processThreadQueue"});else{var B=Te.pthreads[S],X=B&&B.worker;if(!X)return;X.postMessage({cmd:"processThreadQueue"})}return 1}function Rg(){bs()}function Pg(S,E,B){var X=Bg(E,B);return Ig[S].apply(null,X)}function Og(S,E){}function Tp(S,E,B){if(S<=0||S>a().length||S&!0)return-28;if(v){if(Atomics.load(i(),S>>2)!=E)return-6;for(var pe=performance.now(),le=pe+B,de=Atomics.exchange(i(),Gi>>2,S);;){if(pe=performance.now(),pe>le)return de=Atomics.exchange(i(),Gi>>2,0),-73;if(de=Atomics.exchange(i(),Gi>>2,0),de==0)break;if(Bp(),Atomics.load(i(),S>>2)!=E)return-6;de=Atomics.exchange(i(),Gi>>2,S)}return 0}else{var X=Atomics.wait(i(),S>>2,E,B);if(X==="timed-out")return-73;if(X==="not-equal")return-6;if(X==="ok")return 0;throw"Atomics.wait returned an unexpected value "+X}}function Mg(S,E,B){o().copyWithin(S,E,E+B)}function Lg(){return w?LD().cpus().length:navigator.hardwareConcurrency}function Us(S,E){for(var B=arguments.length-2,X=yl(),pe=B,le=Ui(pe*8),de=le>>3,we=0;we<B;we++){var st=arguments[2+we];l()[de+we]=st}var Kt=r0(S,pe,le,E);return Vi(X),Kt}var dl=[],pl=[];function Bg(S,E){pl.length=0;var B;for(E>>=2;B=o()[S++];){var X=B<105;X&&E&1&&E++,pl.push(X?l()[E++>>1]:i()[E]),++E}return pl}function zg(S,E,B){dl.length=E;for(var X=B>>3,pe=0;pe<E;pe++)dl[pe]=l()[X+pe];var le=S<0,de=le?Ig[-S-1]:hb[S];return de.apply(null,dl)}function Wg(){return o().length}function Vg(S){try{return ne.grow(S-Je.byteLength+65535>>>16),Fn(ne.buffer),1}catch(E){}}function Ug(S){var E=Wg();if(S<=E)return!1;var B=2147483648;if(S>B)return!1;for(var X=1;X<=4;X*=2){var pe=E*(1+.2/X);pe=Math.min(pe,S+100663296);var le=Math.min(B,An(Math.max(S,pe),65536)),de=Vg(le);if(de)return!0}return!1}var Le={inEventHandler:0,removeAllEventListeners:function(){for(var S=Le.eventHandlers.length-1;S>=0;--S)Le._removeHandler(S);Le.eventHandlers=[],Le.deferredCalls=[]},registerRemoveEventListeners:function(){Le.removeEventListenersRegistered||(cl.push(Le.removeAllEventListeners),Le.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(S,E,B){function X(de,we){if(de.length!=we.length)return!1;for(var st in de)if(de[st]!=we[st])return!1;return!0}for(var pe in Le.deferredCalls){var le=Le.deferredCalls[pe];if(le.targetFunction==S&&X(le.argsList,B))return}Le.deferredCalls.push({targetFunction:S,precedence:E,argsList:B}),Le.deferredCalls.sort(function(de,we){return de.precedence<we.precedence})},removeDeferredCalls:function(S){for(var E=0;E<Le.deferredCalls.length;++E)Le.deferredCalls[E].targetFunction==S&&(Le.deferredCalls.splice(E,1),--E)},canPerformEventHandlerRequests:function(){return Le.inEventHandler&&Le.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!Le.canPerformEventHandlerRequests())for(var S=0;S<Le.deferredCalls.length;++S){var E=Le.deferredCalls[S];Le.deferredCalls.splice(S,1),--S,E.targetFunction.apply(null,E.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(S,E){for(var B=0;B<Le.eventHandlers.length;++B)Le.eventHandlers[B].target==S&&(!E||E==Le.eventHandlers[B].eventTypeString)&&Le._removeHandler(B--)},_removeHandler:function(S){var E=Le.eventHandlers[S];E.target.removeEventListener(E.eventTypeString,E.eventListenerFunc,E.useCapture),Le.eventHandlers.splice(S,1)},registerOrRemoveHandler:function(S){var E=function(pe){++Le.inEventHandler,Le.currentEventHandler=S,Le.runDeferredCalls(),S.handlerFunc(pe),Le.runDeferredCalls(),--Le.inEventHandler};if(S.callbackfunc)S.eventListenerFunc=E,S.target.addEventListener(S.eventTypeString,E,S.useCapture),Le.eventHandlers.push(S),Le.registerRemoveEventListeners();else for(var B=0;B<Le.eventHandlers.length;++B)Le.eventHandlers[B].target==S.target&&Le.eventHandlers[B].eventTypeString==S.eventTypeString&&Le._removeHandler(B--)},queueEventHandlerOnThread_iiii:function(S,E,B,X,pe){var le=yl(),de=Ui(12);i()[de>>2]=B,i()[de+4>>2]=X,i()[de+8>>2]=pe,zb(0,S,637534208,E,X,de),Vi(le)},getTargetThreadForEventCallback:function(S){switch(S){case 1:return 0;case 2:return Te.currentProxiedOperationCallerThread;default:return S}},getNodeNameForTarget:function(S){return S?S==window?"#window":S==screen?"#screen":S&&S.nodeName?S.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Gg(S){var E=lt(S)+1,B=Pa(E);return Ze(S,B,E),B}function Hg(S,E,B,X){var pe=yl(),le=Ui(12),de=0;E&&(de=Gg(E)),i()[le>>2]=de,i()[le+4>>2]=B,i()[le+8>>2]=X,zb(0,S,657457152,0,de,le),Vi(pe)}function jg(S,E,B,X){E=E?Ve(E):"",Hg(S,E,B,X)}function qg(S){return S>2?Ve(S):S}var Kg=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function Xg(S){S=qg(S);var E=Kg[S]||(typeof document!="undefined"?document.querySelector(S):void 0);return E}function hl(S){return Xg(S)}function Cp(S,E,B){var X=hl(S);if(!X)return-4;if(X.canvasSharedPtr&&(i()[X.canvasSharedPtr>>2]=E,i()[X.canvasSharedPtr+4>>2]=B),X.offscreenCanvas||!X.controlTransferredOffscreen){X.offscreenCanvas&&(X=X.offscreenCanvas);var pe=!1;if(X.GLctxObject&&X.GLctxObject.GLctx){var le=X.GLctxObject.GLctx.getParameter(2978);pe=le[0]===0&&le[1]===0&&le[2]===X.width&&le[3]===X.height}X.width=E,X.height=B,pe&&X.GLctxObject.GLctx.viewport(0,0,E,B)}else if(X.canvasSharedPtr){var de=i()[X.canvasSharedPtr+8>>2];return jg(de,S,E,B),1}else return-4;return 0}function Np(S,E,B){return C?Us(2,1,S,E,B):Cp(S,E,B)}function Yg(S,E,B){var X=hl(S);return X?Cp(S,E,B):Np(S,E,B)}function Zg(S){}function Jg(S,E){}function Qg(S){var E=S.getExtension("ANGLE_instanced_arrays");if(E)return S.vertexAttribDivisor=function(B,X){E.vertexAttribDivisorANGLE(B,X)},S.drawArraysInstanced=function(B,X,pe,le){E.drawArraysInstancedANGLE(B,X,pe,le)},S.drawElementsInstanced=function(B,X,pe,le,de){E.drawElementsInstancedANGLE(B,X,pe,le,de)},1}function eb(S){var E=S.getExtension("OES_vertex_array_object");if(E)return S.createVertexArray=function(){return E.createVertexArrayOES()},S.deleteVertexArray=function(B){E.deleteVertexArrayOES(B)},S.bindVertexArray=function(B){E.bindVertexArrayOES(B)},S.isVertexArray=function(B){return E.isVertexArrayOES(B)},1}function tb(S){var E=S.getExtension("WEBGL_draw_buffers");if(E)return S.drawBuffers=function(B,X){E.drawBuffersWEBGL(B,X)},1}function nb(S){return!!(S.multiDrawWebgl=S.getExtension("WEBGL_multi_draw"))}var rt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(E){rt.lastError||(rt.lastError=E)},getNewId:function(S){for(var E=rt.counter++,B=S.length;B<E;B++)S[B]=null;return E},getSource:function(S,E,B,X){for(var pe="",le=0;le<E;++le){var de=X?i()[X+le*4>>2]:-1;pe+=Ve(i()[B+le*4>>2],de<0?void 0:de)}return pe},createContext:function(S,E){var B=S.getContext("webgl",E);if(!B)return 0;var X=rt.registerContext(B,E);return X},registerContext:function(S,E){var B=Pa(8);i()[B+4>>2]=js();var X={handle:B,attributes:E,version:E.majorVersion,GLctx:S};return S.canvas&&(S.canvas.GLctxObject=X),rt.contexts[B]=X,(typeof E.enableExtensionsByDefault=="undefined"||E.enableExtensionsByDefault)&&rt.initExtensions(X),B},makeContextCurrent:function(S){return rt.currentContext=rt.contexts[S],u.ctx=Gs=rt.currentContext&&rt.currentContext.GLctx,!(S&&!Gs)},getContext:function(S){return rt.contexts[S]},deleteContext:function(S){rt.currentContext===rt.contexts[S]&&(rt.currentContext=null),typeof Le=="object"&&Le.removeAllHandlersOnTarget(rt.contexts[S].GLctx.canvas),rt.contexts[S]&&rt.contexts[S].GLctx.canvas&&(rt.contexts[S].GLctx.canvas.GLctxObject=void 0),bl(rt.contexts[S].handle),rt.contexts[S]=null},initExtensions:function(S){if(S||(S=rt.currentContext),!S.initExtensionsDone){S.initExtensionsDone=!0;var E=S.GLctx;Qg(E),eb(E),tb(E),E.disjointTimerQueryExt=E.getExtension("EXT_disjoint_timer_query"),nb(E);var B=E.getSupportedExtensions()||[];B.forEach(function(X){X.indexOf("lose_context")<0&&X.indexOf("debug")<0&&E.getExtension(X)})}},populateUniformTable:function(S){for(var E=rt.programs[S],B=rt.programInfos[S]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},X=B.uniforms,pe=Gs.getProgramParameter(E,35718),le=0;le<pe;++le){var de=Gs.getActiveUniform(E,le),we=de.name;B.maxUniformLength=Math.max(B.maxUniformLength,we.length+1),we.slice(-1)=="]"&&(we=we.slice(0,we.lastIndexOf("[")));var st=Gs.getUniformLocation(E,we);if(st){var Kt=rt.getNewId(rt.uniforms);X[we]=[de.size,Kt],rt.uniforms[Kt]=st;for(var Vt=1;Vt<de.size;++Vt){var qs=we+"["+Vt+"]";st=Gs.getUniformLocation(E,qs),Kt=rt.getNewId(rt.uniforms),rt.uniforms[Kt]=st}}}}},rb=["default","low-power","high-performance"];function sb(S,E){var B=E>>2,X=i()[B+(24>>2)],pe={alpha:!!i()[B+(0>>2)],depth:!!i()[B+(4>>2)],stencil:!!i()[B+(8>>2)],antialias:!!i()[B+(12>>2)],premultipliedAlpha:!!i()[B+(16>>2)],preserveDrawingBuffer:!!i()[B+(20>>2)],powerPreference:rb[X],failIfMajorPerformanceCaveat:!!i()[B+(28>>2)],majorVersion:i()[B+(32>>2)],minorVersion:i()[B+(36>>2)],enableExtensionsByDefault:i()[B+(40>>2)],explicitSwapControl:i()[B+(44>>2)],proxyContextToMainThread:i()[B+(48>>2)],renderViaOffscreenBackBuffer:i()[B+(52>>2)]},le=hl(S);if(!le||pe.explicitSwapControl)return 0;var de=rt.createContext(le,pe);return de}function ab(S,E){return sb(S,E)}var Li={mappings:{},buffers:[null,[],[]],printChar:function(S,E){var B=Li.buffers[S];E===0||E===10?((S===1?K:q)(We(B,0)),B.length=0):B.push(E)},varargs:void 0,get:function(){Li.varargs+=4;var S=i()[Li.varargs-4>>2];return S},getStr:function(S){var E=Ve(S);return E},get64:function(S,E){return S}};function _p(S){return C?Us(3,1,S):0}function Ep(S,E,B,X,pe){if(C)return Us(4,1,S,E,B,X,pe)}function Ap(S,E,B,X){if(C)return Us(5,1,S,E,B,X);for(var pe=0,le=0;le<B;le++){for(var de=i()[E+le*8>>2],we=i()[E+(le*8+4)>>2],st=0;st<we;st++)Li.printChar(S,o()[de+st]);pe+=we}return i()[X>>2]=pe,0}function ob(S){var E=Te.threadExitHandlers.pop();S&&E()}function ib(S,E){Te.threadExitHandlers.push(function(){dn.get(S)(E)})}function Dp(S){if(C)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var E=Te.getNewWorker();if(E.pthread!==void 0)throw"Internal error!";if(!S.pthread_ptr)throw"Internal error, no pthread ptr!";Te.runningWorkers.push(E);for(var B=Pa(128*4),X=0;X<128;++X)i()[B+X*4>>2]=0;var pe=S.stackBase+S.stackSize,le=Te.pthreads[S.pthread_ptr]={worker:E,stackBase:S.stackBase,stackSize:S.stackSize,allocatedOwnStack:S.allocatedOwnStack,threadInfoStruct:S.pthread_ptr},de=le.threadInfoStruct>>2;Atomics.store(c(),de+(64>>2),S.detached),Atomics.store(c(),de+(100>>2),B),Atomics.store(c(),de+(40>>2),le.threadInfoStruct),Atomics.store(c(),de+(80>>2),S.stackSize),Atomics.store(c(),de+(76>>2),pe),Atomics.store(c(),de+(104>>2),S.stackSize),Atomics.store(c(),de+(104+8>>2),pe),Atomics.store(c(),de+(104+12>>2),S.detached);var we=Z1(),st=we+40;Atomics.store(c(),de+(172>>2),st),E.pthread=le;var Kt={cmd:"run",start_routine:S.startRoutine,arg:S.arg,threadInfoStruct:S.pthread_ptr,stackBase:S.stackBase,stackSize:S.stackSize};E.runPthread=function(){Kt.time=performance.now(),E.postMessage(Kt,S.transferList)},E.loaded&&(E.runPthread(),delete E.runPthread)}function cb(S,E,B,X){if(typeof SharedArrayBuffer=="undefined")return q("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!S)return q("pthread_create called with a null thread pointer!"),28;var pe=[],le=0;if(C&&(pe.length===0||le))return n0(687865856,S,E,B,X);if(le)return le;var de=0,we=0,st=0;E&&E!=-1?(de=i()[E>>2],de+=81920,we=i()[E+8>>2],st=i()[E+12>>2]!==0):de=2097152;var Kt=we==0;Kt?we=a0(16,de):(we-=de,Se(we>0));for(var Vt=Pa(228),qs=0;qs<228>>2;++qs)c()[(Vt>>2)+qs]=0;i()[S>>2]=Vt,i()[Vt+12>>2]=Vt;var Hi=Vt+152;i()[Hi>>2]=Hi;var gn={stackBase:we,stackSize:de,allocatedOwnStack:Kt,detached:st,startRoutine:B,pthread_ptr:Vt,arg:X,transferList:pe};return C?(gn.cmd="spawnThread",postMessage(gn,pe)):Dp(gn),0}function ub(){if(!!C){var S=js();if(!!S){var E=Atomics.load(c(),S+56>>2);if(!E){var B=Atomics.load(c(),S+0>>2);if(B==2)throw"Canceled!"}}}}function lb(){w||x||Z("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function db(S,E,B){if(!S)return q("pthread_join attempted on a null thread pointer!"),Vs.ESRCH;if(C&&js()==S)return q("PThread "+S+" is attempting to join to itself!"),Vs.EDEADLK;if(!C&&e0()==S)return q("Main thread "+S+" is attempting to join to itself!"),Vs.EDEADLK;var X=i()[S+12>>2];if(X!==S)return q("pthread_join attempted on thread "+S+", which does not point to a valid thread, or does not exist anymore!"),Vs.ESRCH;var pe=Atomics.load(c(),S+64>>2);if(pe)return q("Attempted to join thread "+S+", which was already detached!"),Vs.EINVAL;for(B&&lb();;){var le=Atomics.load(c(),S+0>>2);if(le==1){var de=Atomics.load(c(),S+4>>2);return E&&(i()[E>>2]=de),Atomics.store(c(),S+64>>2,1),C?postMessage({cmd:"cleanupThread",thread:S}):Sp(S),0}if(!B)return Vs.EBUSY;ub(),C||Bp(),Tp(S+0,le,C?100:1)}}function pb(S,E){return db(S,E,!0)}function Fp(S){if(C)return Us(6,1,S);switch(S){case 30:return 16384;case 85:var E=2147483648;return E/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return Dg(28),-1}C||Te.initMainThreadBlock();var Gs,hb=[null,Fg,Np,_p,Ep,Ap,Fp],fb={e:Eg,r:Ag,x:$g,b:Rg,y:Pg,j:Og,d:Tp,c:ll,f:Ra,p:Mg,A:Lg,u:zg,q:Ug,v:Yg,i:Zg,s:Jg,w:ab,l:_p,n:Ep,g:Ap,o:Ip,a:ne||u.wasmMemory,z:ob,k:ib,h:cb,m:pb,t:Fp},X1=kg(),$p=u.___wasm_call_ctors=function(){return($p=u.___wasm_call_ctors=u.asm.B).apply(null,arguments)},mb=u._init=function(){return(mb=u._init=u.asm.C).apply(null,arguments)},gb=u._init_with_threads_count=function(){return(gb=u._init_with_threads_count=u.asm.D).apply(null,arguments)},bb=u._get_threads_count=function(){return(bb=u._get_threads_count=u.asm.E).apply(null,arguments)},yb=u._register_tensor=function(){return(yb=u._register_tensor=u.asm.F).apply(null,arguments)},vb=u._dispose_data=function(){return(vb=u._dispose_data=u.asm.G).apply(null,arguments)},xb=u._dispose=function(){return(xb=u._dispose=u.asm.H).apply(null,arguments)},wb=u._Abs=function(){return(wb=u._Abs=u.asm.J).apply(null,arguments)},kb=u._Add=function(){return(kb=u._Add=u.asm.K).apply(null,arguments)},Ib=u._AddN=function(){return(Ib=u._AddN=u.asm.L).apply(null,arguments)},Sb=u._All=function(){return(Sb=u._All=u.asm.M).apply(null,arguments)},Tb=u._Any=function(){return(Tb=u._Any=u.asm.N).apply(null,arguments)},Cb=u._ArgMax=function(){return(Cb=u._ArgMax=u.asm.O).apply(null,arguments)},Nb=u._AvgPool=function(){return(Nb=u._AvgPool=u.asm.P).apply(null,arguments)},_b=u._BatchMatMul=function(){return(_b=u._BatchMatMul=u.asm.Q).apply(null,arguments)},Eb=u._Ceil=function(){return(Eb=u._Ceil=u.asm.R).apply(null,arguments)},Ab=u._ClipByValue=function(){return(Ab=u._ClipByValue=u.asm.S).apply(null,arguments)},Db=u._Conv2D=function(){return(Db=u._Conv2D=u.asm.T).apply(null,arguments)},Fb=u._Conv2DBackpropInput=function(){return(Fb=u._Conv2DBackpropInput=u.asm.U).apply(null,arguments)},$b=u._Cos=function(){return($b=u._Cos=u.asm.V).apply(null,arguments)},Rb=u._Cosh=function(){return(Rb=u._Cosh=u.asm.W).apply(null,arguments)},Pb=u._CropAndResize=function(){return(Pb=u._CropAndResize=u.asm.X).apply(null,arguments)},Ob=u._Cumsum=function(){return(Ob=u._Cumsum=u.asm.Y).apply(null,arguments)},Mb=u._DepthToSpace=function(){return(Mb=u._DepthToSpace=u.asm.Z).apply(null,arguments)},Rp=u._DepthwiseConv2dNative=function(){return(Rp=u._DepthwiseConv2dNative=u.asm._).apply(null,arguments)},Pp=u._Elu=function(){return(Pp=u._Elu=u.asm.$).apply(null,arguments)},Op=u._Equal=function(){return(Op=u._Equal=u.asm.aa).apply(null,arguments)},fl=u._Exp=function(){return(fl=u._Exp=u.asm.ba).apply(null,arguments)},Bi=u._FlipLeftRight=function(){return(Bi=u._FlipLeftRight=u.asm.ca).apply(null,arguments)},Lb=u._Floor=function(){return(Lb=u._Floor=u.asm.da).apply(null,arguments)},ml=u._FloorDiv=function(){return(ml=u._FloorDiv=u.asm.ea).apply(null,arguments)},zi=u._FusedBatchNorm=function(){return(zi=u._FusedBatchNorm=u.asm.fa).apply(null,arguments)},Wi=u._FusedConv2D=function(){return(Wi=u._FusedConv2D=u.asm.ga).apply(null,arguments)},Bb=u._FusedDepthwiseConv2D=function(){return(Bb=u._FusedDepthwiseConv2D=u.asm.ha).apply(null,arguments)},J=u._Gather=function(){return(J=u._Gather=u.asm.ia).apply(null,arguments)},ae=u._GatherNd=function(){return(ae=u._GatherNd=u.asm.ja).apply(null,arguments)},ve=u._Greater=function(){return(ve=u._Greater=u.asm.ka).apply(null,arguments)},Qe=u._GreaterEqual=function(){return(Qe=u._GreaterEqual=u.asm.la).apply(null,arguments)},Dt=u._LeakyRelu=function(){return(Dt=u._LeakyRelu=u.asm.ma).apply(null,arguments)},kt=u._Less=function(){return(kt=u._Less=u.asm.na).apply(null,arguments)},Ue=u._LessEqual=function(){return(Ue=u._LessEqual=u.asm.oa).apply(null,arguments)},je=u._Log=function(){return(je=u._Log=u.asm.pa).apply(null,arguments)},sn=u._LogicalAnd=function(){return(sn=u._LogicalAnd=u.asm.qa).apply(null,arguments)},ys=u._Max=function(){return(ys=u._Max=u.asm.ra).apply(null,arguments)},vs=u._MaxPool=function(){return(vs=u._MaxPool=u.asm.sa).apply(null,arguments)},Mp=u._Maximum=function(){return(Mp=u._Maximum=u.asm.ta).apply(null,arguments)},gl=u._Mean=function(){return(gl=u._Mean=u.asm.ua).apply(null,arguments)},qn=u._Min=function(){return(qn=u._Min=u.asm.va).apply(null,arguments)},Hs=u._Minimum=function(){return(Hs=u._Minimum=u.asm.wa).apply(null,arguments)},Lp=u._MirrorPad=function(){return(Lp=u._MirrorPad=u.asm.xa).apply(null,arguments)},xA=u._Multiply=function(){return(xA=u._Multiply=u.asm.ya).apply(null,arguments)},wA=u._Neg=function(){return(wA=u._Neg=u.asm.za).apply(null,arguments)},kA=u._NonMaxSuppressionV3=function(){return(kA=u._NonMaxSuppressionV3=u.asm.Aa).apply(null,arguments)},IA=u._NonMaxSuppressionV4=function(){return(IA=u._NonMaxSuppressionV4=u.asm.Ba).apply(null,arguments)},SA=u._NonMaxSuppressionV5=function(){return(SA=u._NonMaxSuppressionV5=u.asm.Ca).apply(null,arguments)},TA=u._NotEqual=function(){return(TA=u._NotEqual=u.asm.Da).apply(null,arguments)},CA=u._OneHot=function(){return(CA=u._OneHot=u.asm.Ea).apply(null,arguments)},NA=u._PadV2=function(){return(NA=u._PadV2=u.asm.Fa).apply(null,arguments)},_A=u._Pow=function(){return(_A=u._Pow=u.asm.Ga).apply(null,arguments)},EA=u._Prelu=function(){return(EA=u._Prelu=u.asm.Ha).apply(null,arguments)},AA=u._Prod=function(){return(AA=u._Prod=u.asm.Ia).apply(null,arguments)},DA=u._RealDiv=function(){return(DA=u._RealDiv=u.asm.Ja).apply(null,arguments)},FA=u._Relu=function(){return(FA=u._Relu=u.asm.Ka).apply(null,arguments)},$A=u._Relu6=function(){return($A=u._Relu6=u.asm.La).apply(null,arguments)},RA=u._ResizeBilinear=function(){return(RA=u._ResizeBilinear=u.asm.Ma).apply(null,arguments)},PA=u._Reverse=function(){return(PA=u._Reverse=u.asm.Na).apply(null,arguments)},OA=u._RotateWithOffset=function(){return(OA=u._RotateWithOffset=u.asm.Oa).apply(null,arguments)},MA=u._Round=function(){return(MA=u._Round=u.asm.Pa).apply(null,arguments)},LA=u._Rsqrt=function(){return(LA=u._Rsqrt=u.asm.Qa).apply(null,arguments)},BA=u._ScatterNd=function(){return(BA=u._ScatterNd=u.asm.Ra).apply(null,arguments)},zA=u._SelectV2=function(){return(zA=u._SelectV2=u.asm.Sa).apply(null,arguments)},WA=u._Sigmoid=function(){return(WA=u._Sigmoid=u.asm.Ta).apply(null,arguments)},VA=u._Sin=function(){return(VA=u._Sin=u.asm.Ua).apply(null,arguments)},UA=u._Softmax=function(){return(UA=u._Softmax=u.asm.Va).apply(null,arguments)},GA=u._SparseFillEmptyRows=function(){return(GA=u._SparseFillEmptyRows=u.asm.Wa).apply(null,arguments)},HA=u._SparseReshape=function(){return(HA=u._SparseReshape=u.asm.Xa).apply(null,arguments)},jA=u._SparseSegmentReduction=function(){return(jA=u._SparseSegmentReduction=u.asm.Ya).apply(null,arguments)},qA=u._Sqrt=function(){return(qA=u._Sqrt=u.asm.Za).apply(null,arguments)},KA=u._Square=function(){return(KA=u._Square=u.asm._a).apply(null,arguments)},XA=u._SquaredDifference=function(){return(XA=u._SquaredDifference=u.asm.$a).apply(null,arguments)},YA=u._Step=function(){return(YA=u._Step=u.asm.ab).apply(null,arguments)},ZA=u._StridedSlice=function(){return(ZA=u._StridedSlice=u.asm.bb).apply(null,arguments)},JA=u._Sub=function(){return(JA=u._Sub=u.asm.cb).apply(null,arguments)},QA=u._Sum=function(){return(QA=u._Sum=u.asm.db).apply(null,arguments)},eD=u._Tan=function(){return(eD=u._Tan=u.asm.eb).apply(null,arguments)},tD=u._Tanh=function(){return(tD=u._Tanh=u.asm.fb).apply(null,arguments)},nD=u._Tile=function(){return(nD=u._Tile=u.asm.gb).apply(null,arguments)},rD=u._TopK=function(){return(rD=u._TopK=u.asm.hb).apply(null,arguments)},sD=u._Transform=function(){return(sD=u._Transform=u.asm.ib).apply(null,arguments)},aD=u._Transpose=function(){return(aD=u._Transpose=u.asm.jb).apply(null,arguments)},oD=u.__FusedMatMul=function(){return(oD=u.__FusedMatMul=u.asm.kb).apply(null,arguments)},Pa=u._malloc=function(){return(Pa=u._malloc=u.asm.lb).apply(null,arguments)},bl=u._free=function(){return(bl=u._free=u.asm.mb).apply(null,arguments)},Y1=u.___errno_location=function(){return(Y1=u.___errno_location=u.asm.nb).apply(null,arguments)},Z1=u._emscripten_get_global_libc=function(){return(Z1=u._emscripten_get_global_libc=u.asm.ob).apply(null,arguments)},js=u._pthread_self=function(){return(js=u._pthread_self=u.asm.pb).apply(null,arguments)},J1=u.___pthread_tsd_run_dtors=function(){return(J1=u.___pthread_tsd_run_dtors=u.asm.qb).apply(null,arguments)},Bp=u._emscripten_main_thread_process_queued_calls=function(){return(Bp=u._emscripten_main_thread_process_queued_calls=u.asm.rb).apply(null,arguments)},iD=u._emscripten_current_thread_process_queued_calls=function(){return(iD=u._emscripten_current_thread_process_queued_calls=u.asm.sb).apply(null,arguments)},Q1=u._emscripten_register_main_browser_thread_id=function(){return(Q1=u._emscripten_register_main_browser_thread_id=u.asm.tb).apply(null,arguments)},e0=u._emscripten_main_browser_thread_id=function(){return(e0=u._emscripten_main_browser_thread_id=u.asm.ub).apply(null,arguments)},t0=u.__emscripten_do_dispatch_to_thread=function(){return(t0=u.__emscripten_do_dispatch_to_thread=u.asm.vb).apply(null,arguments)},n0=u._emscripten_sync_run_in_main_thread_4=function(){return(n0=u._emscripten_sync_run_in_main_thread_4=u.asm.wb).apply(null,arguments)},r0=u._emscripten_run_in_main_runtime_thread_js=function(){return(r0=u._emscripten_run_in_main_runtime_thread_js=u.asm.xb).apply(null,arguments)},zb=u.__emscripten_call_on_thread=function(){return(zb=u.__emscripten_call_on_thread=u.asm.yb).apply(null,arguments)},cD=u._emscripten_tls_init=function(){return(cD=u._emscripten_tls_init=u.asm.zb).apply(null,arguments)},Wb=u.__emscripten_thread_init=function(){return(Wb=u.__emscripten_thread_init=u.asm.Ab).apply(null,arguments)},yl=u.stackSave=function(){return(yl=u.stackSave=u.asm.Bb).apply(null,arguments)},Vi=u.stackRestore=function(){return(Vi=u.stackRestore=u.asm.Cb).apply(null,arguments)},Ui=u.stackAlloc=function(){return(Ui=u.stackAlloc=u.asm.Db).apply(null,arguments)},s0=u._emscripten_stack_set_limits=function(){return(s0=u._emscripten_stack_set_limits=u.asm.Eb).apply(null,arguments)},a0=u._memalign=function(){return(a0=u._memalign=u.asm.Fb).apply(null,arguments)},o0=u.__emscripten_allow_main_runtime_queued_calls=10656,Gi=u.__emscripten_main_thread_futex=12292;u.cwrap=Ye,u.PThread=Te,u.PThread=Te,u.wasmMemory=ne,u.ExitStatus=vl;var zp;function vl(S){this.name="ExitStatus",this.message="Program terminated with exit("+S+")",this.status=S}Fa=function S(){zp||Vb(),zp||(Fa=S)};function Vb(S){if(S=S||g,wr>0)return;if(C){d(u),bp(),postMessage({cmd:"loaded"});return}if(gp(),wr>0)return;function E(){zp||(zp=!0,u.calledRun=!0,!ye&&(bp(),yp(),d(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),vp()))}u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),E()},1)):E()}u.run=Vb;function uD(S,E){if(!(E&&ue&&S===0)){if(!E&&C)throw postMessage({cmd:"exitProcess",returnCode:S}),new vl(S);ue||(Te.terminateAllThreads(),Ce=S,$n(),u.onExit&&u.onExit(S),ye=!0),y(S,new vl(S))}}if(u.preInit)for(typeof u.preInit=="function"&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();C&&(ue=!1,Te.initWorker()),Vb();var Wp;h&&(Wp={uncaughtException:process.listeners("uncaughtException").filter(function(S){return!h.uncaughtException.indexOf(S)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(S){return!h.unhandledRejection.indexOf(S)>-1})});var Vp;if(typeof WasmBackendModule!="undefined")Vp=WasmBackendModule;else if(typeof s!="undefined")Vp=s;else throw new Error("Could not find wasm module in post.js");if(Wp){var lD=Vp._dispose;Vp._dispose=function(){lD(),Wp.uncaughtException.forEach(function(S){process.removeListener("uncaughtException",S)}),Wp.unhandledRejection.forEach(function(S){process.removeListener("unhandledRejection",S)})}}return s.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}}),zD=dt({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.12.0_@tensorflow+tfjs-core@3.12.0/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var n=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(s){s=s||{};var a=typeof s!="undefined"?s:{},o,i;a.ready=new Promise(function(J,ae){o=J,i=ae});var c;typeof process!="undefined"&&process.listeners&&(c={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var l={},u;for(u in a)a.hasOwnProperty(u)&&(l[u]=a[u]);var d=[],p="./this.program",h=function(J,ae){throw ae},f=!1,m=!1,g=!1,b=!1;f=typeof window=="object",m=typeof importScripts=="function",g=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",b=!f&&!g&&!m;var y="";function v(J){return a.locateFile?a.locateFile(J,y):y+J}var x,w,T,C,D,F;g?(m?y=xl().dirname(y)+"/":y=__dirname+"/",x=function(ae,ve){return D||(D=Hp()),F||(F=xl()),ae=F.normalize(ae),D.readFileSync(ae,ve?null:"utf8")},T=function(ae){var ve=x(ae,!0);return ve.buffer||(ve=new Uint8Array(ve)),K(ve.buffer),ve},process.argv.length>1&&(p=process.argv[1].replace(/\\/g,"/")),d=process.argv.slice(2),process.on("uncaughtException",function(J){if(!(J instanceof Lb))throw J}),process.on("unhandledRejection",gs),h=function(J){process.exit(J)},a.inspect=function(){return"[Emscripten Module object]"}):b?(typeof read!="undefined"&&(x=function(ae){return read(ae)}),T=function(ae){var ve;return typeof readbuffer=="function"?new Uint8Array(readbuffer(ae)):(ve=read(ae,"binary"),K(typeof ve=="object"),ve)},typeof scriptArgs!="undefined"?d=scriptArgs:typeof arguments!="undefined"&&(d=arguments),typeof quit=="function"&&(h=function(J){quit(J)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(f||m)&&(m?y=self.location.href:typeof document!="undefined"&&document.currentScript&&(y=document.currentScript.src),r&&(y=r),y.indexOf("blob:")!==0?y=y.substr(0,y.lastIndexOf("/")+1):y="",x=function(J){var ae=new XMLHttpRequest;return ae.open("GET",J,!1),ae.send(null),ae.responseText},m&&(T=function(J){var ae=new XMLHttpRequest;return ae.open("GET",J,!1),ae.responseType="arraybuffer",ae.send(null),new Uint8Array(ae.response)}),w=function(J,ae,ve){var Qe=new XMLHttpRequest;Qe.open("GET",J,!0),Qe.responseType="arraybuffer",Qe.onload=function(){if(Qe.status==200||Qe.status==0&&Qe.response){ae(Qe.response);return}ve()},Qe.onerror=ve,Qe.send(null)},C=function(J){document.title=J});var O=a.print||console.log.bind(console),$=a.printErr||console.warn.bind(console);for(u in l)l.hasOwnProperty(u)&&(a[u]=l[u]);l=null,a.arguments&&(d=a.arguments),a.thisProgram&&(p=a.thisProgram),a.quit&&(h=a.quit);var R;a.wasmBinary&&(R=a.wasmBinary);var N=a.noExitRuntime||!0;typeof WebAssembly!="object"&&gs("no native wasm support detected");var L,G=!1,j;function K(J,ae){J||gs("Assertion failed: "+ae)}function q(J){var ae=a["_"+J];return K(ae,"Cannot call unknown function "+J+", make sure it is exported"),ae}function Z(J,ae,ve,Qe,Dt){var kt={string:function(qn){var Hs=0;if(qn!=null&&qn!==0){var Lp=(qn.length<<2)+1;Hs=fl(Lp),ne(qn,Hs,Lp)}return Hs},array:function(qn){var Hs=fl(qn.length);return he(qn,Hs),Hs}};function Ue(qn){return ae==="string"?re(qn):ae==="boolean"?Boolean(qn):qn}var je=q(J),sn=[],ys=0;if(Qe)for(var vs=0;vs<Qe.length;vs++){var Mp=kt[ve[vs]];Mp?(ys===0&&(ys=Pp()),sn[vs]=Mp(Qe[vs])):sn[vs]=Qe[vs]}var gl=je.apply(null,sn);return gl=Ue(gl),ys!==0&&Op(ys),gl}function te(J,ae,ve,Qe){ve=ve||[];var Dt=ve.every(function(Ue){return Ue==="number"}),kt=ae!=="string";return kt&&Dt&&!Qe?q(J):function(){return Z(J,ae,ve,arguments,Qe)}}var se=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function oe(J,ae,ve){for(var Qe=ae+ve,Dt=ae;J[Dt]&&!(Dt>=Qe);)++Dt;if(Dt-ae>16&&J.subarray&&se)return se.decode(J.subarray(ae,Dt));for(var kt="";ae<Dt;){var Ue=J[ae++];if(!(Ue&128)){kt+=String.fromCharCode(Ue);continue}var je=J[ae++]&63;if((Ue&224)==192){kt+=String.fromCharCode((Ue&31)<<6|je);continue}var sn=J[ae++]&63;if((Ue&240)==224?Ue=(Ue&15)<<12|je<<6|sn:Ue=(Ue&7)<<18|je<<12|sn<<6|J[ae++]&63,Ue<65536)kt+=String.fromCharCode(Ue);else{var ys=Ue-65536;kt+=String.fromCharCode(55296|ys>>10,56320|ys&1023)}}return kt}function re(J,ae){return J?oe(_e,J,ae):""}function ue(J,ae,ve,Qe){if(!(Qe>0))return 0;for(var Dt=ve,kt=ve+Qe-1,Ue=0;Ue<J.length;++Ue){var je=J.charCodeAt(Ue);if(je>=55296&&je<=57343){var sn=J.charCodeAt(++Ue);je=65536+((je&1023)<<10)|sn&1023}if(je<=127){if(ve>=kt)break;ae[ve++]=je}else if(je<=2047){if(ve+1>=kt)break;ae[ve++]=192|je>>6,ae[ve++]=128|je&63}else if(je<=65535){if(ve+2>=kt)break;ae[ve++]=224|je>>12,ae[ve++]=128|je>>6&63,ae[ve++]=128|je&63}else{if(ve+3>=kt)break;ae[ve++]=240|je>>18,ae[ve++]=128|je>>12&63,ae[ve++]=128|je>>6&63,ae[ve++]=128|je&63}}return ae[ve]=0,ve-Dt}function ne(J,ae,ve){return ue(J,_e,ae,ve)}function he(J,ae){Se.set(J,ae)}function ye(J,ae){return J%ae>0&&(J+=ae-J%ae),J}var Ce,Se,_e,Me,Ye,We,Ve,it,Ze;function lt(J){Ce=J,a.HEAP8=Se=new Int8Array(J),a.HEAP16=Me=new Int16Array(J),a.HEAP32=We=new Int32Array(J),a.HEAPU8=_e=new Uint8Array(J),a.HEAPU16=Ye=new Uint16Array(J),a.HEAPU32=Ve=new Uint32Array(J),a.HEAPF32=it=new Float32Array(J),a.HEAPF64=Ze=new Float64Array(J)}var wt=a.INITIAL_MEMORY||16777216,An,Je=[],Hn=[],rn=[],vr=[],Dn=!1;Hn.push({func:function(){Ip()}});function jn(){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)Fn(a.preRun.shift());wr(Je)}function or(){Dn=!0,wr(Hn)}function xr(){wr(rn)}function ir(){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)zs(a.postRun.shift());wr(vr)}function Fn(J){Je.unshift(J)}function zs(J){vr.unshift(J)}var dn=0,Ws=null,cr=null;function il(J){dn++,a.monitorRunDependencies&&a.monitorRunDependencies(dn)}function cl(J){if(dn--,a.monitorRunDependencies&&a.monitorRunDependencies(dn),dn==0&&(Ws!==null&&(clearInterval(Ws),Ws=null),cr)){var ae=cr;cr=null,ae()}}a.preloadedImages={},a.preloadedAudios={};function gs(J){a.onAbort&&a.onAbort(J),J+="",$(J),G=!0,j=1,J="abort("+J+"). Build with -s ASSERTIONS=1 for more info.";var ae=new WebAssembly.RuntimeError(J);throw i(ae),ae}function mp(J,ae){return String.prototype.startsWith?J.startsWith(ae):J.indexOf(ae)===0}var fg="data:application/octet-stream;base64,";function gp(J){return mp(J,fg)}var bp="file://";function yp(J){return mp(J,bp)}var $n="tfjs-backend-wasm.wasm";gp($n)||($n=v($n));function vp(J){try{if(J==$n&&R)return new Uint8Array(R);if(T)return T(J);throw"both async and sync fetching of the wasm failed"}catch(ae){gs(ae)}}function mg(){if(!R&&(f||m)){if(typeof fetch=="function"&&!yp($n))return fetch($n,{credentials:"same-origin"}).then(function(J){if(!J.ok)throw"failed to load wasm binary file at '"+$n+"'";return J.arrayBuffer()}).catch(function(){return vp($n)});if(w)return new Promise(function(J,ae){w($n,function(ve){J(new Uint8Array(ve))},ae)})}return Promise.resolve().then(function(){return vp($n)})}function gg(){var J={a:kg};function ae(Ue,je){var sn=Ue.exports;a.asm=sn,L=a.asm.j,lt(L.buffer),An=a.asm.r,cl("wasm-instantiate")}il("wasm-instantiate");function ve(Ue){ae(Ue.instance)}function Qe(Ue){return mg().then(function(je){return WebAssembly.instantiate(je,J)}).then(Ue,function(je){$("failed to asynchronously prepare wasm: "+je),gs(je)})}function Dt(){return!R&&typeof WebAssembly.instantiateStreaming=="function"&&!gp($n)&&!yp($n)&&typeof fetch=="function"?fetch($n,{credentials:"same-origin"}).then(function(Ue){var je=WebAssembly.instantiateStreaming(Ue,J);return je.then(ve,function(sn){return $("wasm streaming compile failed: "+sn),$("falling back to ArrayBuffer instantiation"),Qe(ve)})}):Qe(ve)}if(a.instantiateWasm)try{var kt=a.instantiateWasm(J,ae);return kt}catch(Ue){return $("Module.instantiateWasm callback failed with error: "+Ue),!1}return Dt().catch(i),{}}function wr(J){for(;J.length>0;){var ae=J.shift();if(typeof ae=="function"){ae(a);continue}var ve=ae.func;typeof ve=="number"?ae.arg===void 0?An.get(ve)():An.get(ve)(ae.arg):ve(ae.arg===void 0?null:ae.arg)}}function ul(){gs()}function Fa(J,ae,ve){_e.copyWithin(J,ae,ae+ve)}function bg(){return _e.length}function yg(J){try{return L.grow(J-Ce.byteLength+65535>>>16),lt(L.buffer),1}catch(ae){}}function bs(J){var ae=bg(),ve=2147483648;if(J>ve)return!1;for(var Qe=1;Qe<=4;Qe*=2){var Dt=ae*(1+.2/Qe);Dt=Math.min(Dt,J+100663296);var kt=Math.min(ve,ye(Math.max(J,Dt),65536)),Ue=yg(kt);if(Ue)return!0}return!1}var $a={mappings:{},buffers:[null,[],[]],printChar:function(J,ae){var ve=$a.buffers[J];ae===0||ae===10?((J===1?O:$)(oe(ve,0)),ve.length=0):ve.push(ae)},varargs:void 0,get:function(){$a.varargs+=4;var J=We[$a.varargs-4>>2];return J},getStr:function(J){var ae=re(J);return ae},get64:function(J,ae){return J}};function vg(J){return 0}function xp(J,ae,ve,Qe,Dt){}function xg(J,ae,ve,Qe){for(var Dt=0,kt=0;kt<ve;kt++){for(var Ue=We[ae+kt*8>>2],je=We[ae+(kt*8+4)>>2],sn=0;sn<je;sn++)$a.printChar(J,_e[Ue+sn]);Dt+=je}return We[Qe>>2]=Dt,0}function wp(){return 6}function Rn(){return 28}function kp(J){return We[Rp()>>2]=J,J}function wg(J){switch(J){case 30:return 16384;case 85:var ae=2147483648;return ae/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return kp(28),-1}var kg={a:ul,d:Fa,e:bs,f:vg,c:xp,b:xg,h:wp,g:Rn,i:wg},Ig=gg(),Ip=a.___wasm_call_ctors=function(){return(Ip=a.___wasm_call_ctors=a.asm.k).apply(null,arguments)},Mi=a._init=function(){return(Mi=a._init=a.asm.l).apply(null,arguments)},Vs=a._init_with_threads_count=function(){return(Vs=a._init_with_threads_count=a.asm.m).apply(null,arguments)},ll=a._get_threads_count=function(){return(ll=a._get_threads_count=a.asm.n).apply(null,arguments)},Sg=a._register_tensor=function(){return(Sg=a._register_tensor=a.asm.o).apply(null,arguments)},Tg=a._dispose_data=function(){return(Tg=a._dispose_data=a.asm.p).apply(null,arguments)},Sp=a._dispose=function(){return(Sp=a._dispose=a.asm.q).apply(null,arguments)},Te=a._Abs=function(){return(Te=a._Abs=a.asm.s).apply(null,arguments)},Cg=a._Add=function(){return(Cg=a._Add=a.asm.t).apply(null,arguments)},Ng=a._AddN=function(){return(Ng=a._AddN=a.asm.u).apply(null,arguments)},_g=a._All=function(){return(_g=a._All=a.asm.v).apply(null,arguments)},Eg=a._Any=function(){return(Eg=a._Any=a.asm.w).apply(null,arguments)},Ag=a._ArgMax=function(){return(Ag=a._ArgMax=a.asm.x).apply(null,arguments)},Ra=a._AvgPool=function(){return(Ra=a._AvgPool=a.asm.y).apply(null,arguments)},Dg=a._BatchMatMul=function(){return(Dg=a._BatchMatMul=a.asm.z).apply(null,arguments)},Fg=a._Ceil=function(){return(Fg=a._Ceil=a.asm.A).apply(null,arguments)},$g=a._ClipByValue=function(){return($g=a._ClipByValue=a.asm.B).apply(null,arguments)},Rg=a._Conv2D=function(){return(Rg=a._Conv2D=a.asm.C).apply(null,arguments)},Pg=a._Conv2DBackpropInput=function(){return(Pg=a._Conv2DBackpropInput=a.asm.D).apply(null,arguments)},Og=a._Cos=function(){return(Og=a._Cos=a.asm.E).apply(null,arguments)},Tp=a._Cosh=function(){return(Tp=a._Cosh=a.asm.F).apply(null,arguments)},Mg=a._CropAndResize=function(){return(Mg=a._CropAndResize=a.asm.G).apply(null,arguments)},Lg=a._Cumsum=function(){return(Lg=a._Cumsum=a.asm.H).apply(null,arguments)},Us=a._DepthToSpace=function(){return(Us=a._DepthToSpace=a.asm.I).apply(null,arguments)},dl=a._DepthwiseConv2dNative=function(){return(dl=a._DepthwiseConv2dNative=a.asm.J).apply(null,arguments)},pl=a._Elu=function(){return(pl=a._Elu=a.asm.K).apply(null,arguments)},Bg=a._Equal=function(){return(Bg=a._Equal=a.asm.L).apply(null,arguments)},zg=a._Exp=function(){return(zg=a._Exp=a.asm.M).apply(null,arguments)},Wg=a._FlipLeftRight=function(){return(Wg=a._FlipLeftRight=a.asm.N).apply(null,arguments)},Vg=a._Floor=function(){return(Vg=a._Floor=a.asm.O).apply(null,arguments)},Ug=a._FloorDiv=function(){return(Ug=a._FloorDiv=a.asm.P).apply(null,arguments)},Le=a._FusedBatchNorm=function(){return(Le=a._FusedBatchNorm=a.asm.Q).apply(null,arguments)},Gg=a._FusedConv2D=function(){return(Gg=a._FusedConv2D=a.asm.R).apply(null,arguments)},Hg=a._FusedDepthwiseConv2D=function(){return(Hg=a._FusedDepthwiseConv2D=a.asm.S).apply(null,arguments)},jg=a._Gather=function(){return(jg=a._Gather=a.asm.T).apply(null,arguments)},qg=a._GatherNd=function(){return(qg=a._GatherNd=a.asm.U).apply(null,arguments)},Kg=a._Greater=function(){return(Kg=a._Greater=a.asm.V).apply(null,arguments)},Xg=a._GreaterEqual=function(){return(Xg=a._GreaterEqual=a.asm.W).apply(null,arguments)},hl=a._LeakyRelu=function(){return(hl=a._LeakyRelu=a.asm.X).apply(null,arguments)},Cp=a._Less=function(){return(Cp=a._Less=a.asm.Y).apply(null,arguments)},Np=a._LessEqual=function(){return(Np=a._LessEqual=a.asm.Z).apply(null,arguments)},Yg=a._Log=function(){return(Yg=a._Log=a.asm._).apply(null,arguments)},Zg=a._LogicalAnd=function(){return(Zg=a._LogicalAnd=a.asm.$).apply(null,arguments)},Jg=a._Max=function(){return(Jg=a._Max=a.asm.aa).apply(null,arguments)},Qg=a._MaxPool=function(){return(Qg=a._MaxPool=a.asm.ba).apply(null,arguments)},eb=a._Maximum=function(){return(eb=a._Maximum=a.asm.ca).apply(null,arguments)},tb=a._Mean=function(){return(tb=a._Mean=a.asm.da).apply(null,arguments)},nb=a._Min=function(){return(nb=a._Min=a.asm.ea).apply(null,arguments)},rt=a._Minimum=function(){return(rt=a._Minimum=a.asm.fa).apply(null,arguments)},rb=a._MirrorPad=function(){return(rb=a._MirrorPad=a.asm.ga).apply(null,arguments)},sb=a._Multiply=function(){return(sb=a._Multiply=a.asm.ha).apply(null,arguments)},ab=a._Neg=function(){return(ab=a._Neg=a.asm.ia).apply(null,arguments)},Li=a._NonMaxSuppressionV3=function(){return(Li=a._NonMaxSuppressionV3=a.asm.ja).apply(null,arguments)},_p=a._NonMaxSuppressionV4=function(){return(_p=a._NonMaxSuppressionV4=a.asm.ka).apply(null,arguments)},Ep=a._NonMaxSuppressionV5=function(){return(Ep=a._NonMaxSuppressionV5=a.asm.la).apply(null,arguments)},Ap=a._NotEqual=function(){return(Ap=a._NotEqual=a.asm.ma).apply(null,arguments)},ob=a._OneHot=function(){return(ob=a._OneHot=a.asm.na).apply(null,arguments)},ib=a._PadV2=function(){return(ib=a._PadV2=a.asm.oa).apply(null,arguments)},Dp=a._Pow=function(){return(Dp=a._Pow=a.asm.pa).apply(null,arguments)},cb=a._Prelu=function(){return(cb=a._Prelu=a.asm.qa).apply(null,arguments)},ub=a._Prod=function(){return(ub=a._Prod=a.asm.ra).apply(null,arguments)},lb=a._RealDiv=function(){return(lb=a._RealDiv=a.asm.sa).apply(null,arguments)},db=a._Relu=function(){return(db=a._Relu=a.asm.ta).apply(null,arguments)},pb=a._Relu6=function(){return(pb=a._Relu6=a.asm.ua).apply(null,arguments)},Fp=a._ResizeBilinear=function(){return(Fp=a._ResizeBilinear=a.asm.va).apply(null,arguments)},Gs=a._Reverse=function(){return(Gs=a._Reverse=a.asm.wa).apply(null,arguments)},hb=a._RotateWithOffset=function(){return(hb=a._RotateWithOffset=a.asm.xa).apply(null,arguments)},fb=a._Round=function(){return(fb=a._Round=a.asm.ya).apply(null,arguments)},X1=a._Rsqrt=function(){return(X1=a._Rsqrt=a.asm.za).apply(null,arguments)},$p=a._ScatterNd=function(){return($p=a._ScatterNd=a.asm.Aa).apply(null,arguments)},mb=a._SelectV2=function(){return(mb=a._SelectV2=a.asm.Ba).apply(null,arguments)},gb=a._Sigmoid=function(){return(gb=a._Sigmoid=a.asm.Ca).apply(null,arguments)},bb=a._Sin=function(){return(bb=a._Sin=a.asm.Da).apply(null,arguments)},yb=a._Softmax=function(){return(yb=a._Softmax=a.asm.Ea).apply(null,arguments)},vb=a._SparseFillEmptyRows=function(){return(vb=a._SparseFillEmptyRows=a.asm.Fa).apply(null,arguments)},xb=a._SparseReshape=function(){return(xb=a._SparseReshape=a.asm.Ga).apply(null,arguments)},wb=a._SparseSegmentReduction=function(){return(wb=a._SparseSegmentReduction=a.asm.Ha).apply(null,arguments)},kb=a._Sqrt=function(){return(kb=a._Sqrt=a.asm.Ia).apply(null,arguments)},Ib=a._Square=function(){return(Ib=a._Square=a.asm.Ja).apply(null,arguments)},Sb=a._SquaredDifference=function(){return(Sb=a._SquaredDifference=a.asm.Ka).apply(null,arguments)},Tb=a._Step=function(){return(Tb=a._Step=a.asm.La).apply(null,arguments)},Cb=a._StridedSlice=function(){return(Cb=a._StridedSlice=a.asm.Ma).apply(null,arguments)},Nb=a._Sub=function(){return(Nb=a._Sub=a.asm.Na).apply(null,arguments)},_b=a._Sum=function(){return(_b=a._Sum=a.asm.Oa).apply(null,arguments)},Eb=a._Tan=function(){return(Eb=a._Tan=a.asm.Pa).apply(null,arguments)},Ab=a._Tanh=function(){return(Ab=a._Tanh=a.asm.Qa).apply(null,arguments)},Db=a._Tile=function(){return(Db=a._Tile=a.asm.Ra).apply(null,arguments)},Fb=a._TopK=function(){return(Fb=a._TopK=a.asm.Sa).apply(null,arguments)},$b=a._Transform=function(){return($b=a._Transform=a.asm.Ta).apply(null,arguments)},Rb=a._Transpose=function(){return(Rb=a._Transpose=a.asm.Ua).apply(null,arguments)},Pb=a.__FusedMatMul=function(){return(Pb=a.__FusedMatMul=a.asm.Va).apply(null,arguments)},Ob=a._malloc=function(){return(Ob=a._malloc=a.asm.Wa).apply(null,arguments)},Mb=a._free=function(){return(Mb=a._free=a.asm.Xa).apply(null,arguments)},Rp=a.___errno_location=function(){return(Rp=a.___errno_location=a.asm.Ya).apply(null,arguments)},Pp=a.stackSave=function(){return(Pp=a.stackSave=a.asm.Za).apply(null,arguments)},Op=a.stackRestore=function(){return(Op=a.stackRestore=a.asm._a).apply(null,arguments)},fl=a.stackAlloc=function(){return(fl=a.stackAlloc=a.asm.$a).apply(null,arguments)};a.cwrap=te;var Bi;function Lb(J){this.name="ExitStatus",this.message="Program terminated with exit("+J+")",this.status=J}cr=function J(){Bi||ml(),Bi||(cr=J)};function ml(J){if(J=J||d,dn>0||(jn(),dn>0))return;function ae(){Bi||(Bi=!0,a.calledRun=!0,!G&&(or(),xr(),o(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),ir()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),ae()},1)):ae()}if(a.run=ml,a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();ml();var zi;c&&(zi={uncaughtException:process.listeners("uncaughtException").filter(function(J){return!c.uncaughtException.indexOf(J)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(J){return!c.unhandledRejection.indexOf(J)>-1})});var Wi;if(typeof s!="undefined")Wi=s;else if(typeof WasmBackendModuleThreadedSimd!="undefined")Wi=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(zi){var Bb=Wi._dispose;Wi._dispose=function(){Bb(),zi.uncaughtException.forEach(function(J){process.removeListener("uncaughtException",J)}),zi.unhandledRejection.forEach(function(J){process.removeListener("unhandledRejection",J)})}}return s.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}}),WD=1e-7,VD=1e-4,jp=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},wl=class{refCount(e){return kr("refCount")}incRef(e){return kr("incRef")}timerAvailable(){return!0}time(e){return kr("time")}read(e){return kr("read")}readSync(e){return kr("readSync")}numDataIds(){return kr("numDataIds")}disposeData(e,t){return kr("disposeData")}write(e,t,n){return kr("write")}move(e,t,n,r,s){return kr("move")}memory(){return kr("memory")}floatPrecision(){return kr("floatPrecision")}epsilon(){return this.floatPrecision()===32?WD:VD}dispose(){return kr("dispose")}};function kr(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function f0(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,qp(e,t,n)}function UD(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,qp(e,n,r),qp(t,n,r)}function kl(e,t,n){return Math.max(e,Math.min(t,n))}function GD(e){return e%2==0?e:e+1}function qp(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function HD(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function jD(e,t){let n=Math.random();return t*n+(1-n)*e}function qD(e,t){let n=0;for(let r=0;r<e.length;r++){let s=Number(e[r])-Number(t[r]);n+=s*s}return n}function P(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function bn(e,t,n=""){P(Ks(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function Ma(e){P(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function La(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||pn(e)&&!n)for(let r=0;r<e.length;++r)La(e[r],t,n);else t.push(e);return t}function yt(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function KD(e){return e.length===0}function Ks(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function qi(e){return e%1==0}function XD(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function YD(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ZD(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return f0(t),t}function Il(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function JD(e,t=r=>0,n){return new Promise((r,s)=>{let a=0,o=()=>{if(e()){r();return}a++;let i=t(a);if(n!=null&&a>=n){s();return}setTimeout(o,i)};o()})}function QD(e,t){let n=1,r=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(e[a]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(r===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let s=e.slice();return s[r]=t/n,s}function Ir(e,t){let n=t.length;return e=e==null?t.map((r,s)=>s):[].concat(e),P(e.every(r=>r>=-n&&r<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),P(e.every(r=>qi(r)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(r=>r<0?n+r:r)}function m0(e,t){let n=[],r=[],s=t!=null&&Array.isArray(t)&&t.length===0,a=t==null||s?null:Ir(t,e).sort(),o=0;for(let i=0;i<e.length;++i){if(a!=null){if(a[o]===i&&e[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(a[o]==null||a[o]>i)&&e[i]===1&&(n.push(e[i]),r.push(i)),a[o]<=i&&o++}e[i]!==1&&(n.push(e[i]),r.push(i))}return{newShape:n,keptDims:r}}function g0(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function b0(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function y0(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function v0(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function eF(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function pn(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function Ub(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function x0(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function Xs(e){return typeof e=="string"||e instanceof String}function w0(e){return typeof e=="boolean"}function k0(e){return typeof e=="number"}function Kp(e){return Array.isArray(e)?Kp(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":k0(e)?"float32":Xs(e)?"string":w0(e)?"bool":"float32"}function Ys(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Xp(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Ki(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function I0(e,t,n,r=!1){let s=new Array;if(t.length===1){let a=t[0]*(r?2:1);for(let o=0;o<a;o++)s[o]=n[e+o]}else{let a=t[0],o=t.slice(1),i=o.reduce((c,l)=>c*l)*(r?2:1);for(let c=0;c<a;c++)s[c]=I0(e+c*i,o,n,r)}return s}function Xi(e,t,n=!1){if(e.length===0)return t[0];let r=e.reduce((s,a)=>s*a)*(n?2:1);if(r===0)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return I0(0,e,t,n)}function Gb(e,t){let n=Yp(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function Yp(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function tF(e,t){let n=e.reduce((r,s)=>r*s,1);if(t==null||t==="float32")return Xi(e,new Float32Array(n));if(t==="int32")return Xi(e,new Int32Array(n));if(t==="bool")return Xi(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Hb(e){e.forEach(t=>{P(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function nF(e,t,n){if(t===0)return 0;if(t===1)return e[0];let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=n[s]*e[s];return r}function rF(e,t,n){if(t===0)return[];if(t===1)return[e];let r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(e/n[s]),e-=r[s]*n[s];return r[r.length-1]=e,r}function jb(e){return e&&e.then&&typeof e.then=="function"}var S0="tfjsflags",T0=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=sF,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(Q().getBool("IS_TEST")||Q().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let r=this.urlFlags[e];Q().getBool("IS_TEST")||Q().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(jb(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);S0 in e&&e[S0].split(",").forEach(n=>{let[r,s]=n.split(":");this.urlFlags[r]=oF(r,s)})}};function sF(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...r)=>(aF(t,r[0],r[1]),r.join("="))),t}function aF(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function oF(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function Q(){return qb}var qb=null;function iF(e){qb=e}var Kb;function C0(){if(Kb==null){let e;if(typeof window!="undefined")e=window;else if(typeof global!="undefined")e=global;else if(typeof process!="undefined")e=process;else if(typeof self!="undefined")e=self;else throw new Error("Could not find a global object");Kb=e}return Kb}function cF(){let e=C0();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function Xb(e,t){let n=cF();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var Yi="Abs",Zi="Acos",Ji="Acosh",Zs="Add",Ba="AddN",Qi="All",ec="Any",za="ArgMax",Sl="ArgMin",tc="Asin",nc="Asinh",rc="Atan",sc="Atanh",ac="Atan2",Wa="AvgPool",Zp="AvgPoolGrad",Tl="AvgPool3D",Jp="AvgPool3DGrad",Va="BatchMatMul",oc="BatchToSpaceND",Qp="Bincount",N0="BroadcastTo",eh="BroadcastArgs",Ua="Cast",Ga="Ceil",Js="ClipByValue",th="Complex",Cl="ComplexAbs",ic="Concat",Ha="Conv2D",nh="Conv2DBackpropFilter",ja="Conv2DBackpropInput",Nl="Conv3D",rh="Conv3DBackpropFilterV2",sh="Conv3DBackpropInputV2",qa="Cos",Ka="Cosh",Xa="Cumsum",cc="CropAndResize",ah="DenseBincount",uc="DepthToSpace",Ya="DepthwiseConv2dNative",oh="DepthwiseConv2dNativeBackpropFilter",ih="DepthwiseConv2dNativeBackpropInput",ch="Diag",_l="Dilation2D",uh="Dilation2DBackpropInput",lh="Dilation2DBackpropFilter",Za="RealDiv",dh="Einsum",Ja="Elu",ph="EluGrad",lc="Erf",dc="Equal",Qa="Exp",pc="ExpandDims",hc="Expm1",hh="FFT",El="Fill",fc="FlipLeftRight",eo="Floor",to="FloorDiv",no="FusedBatchNorm",mc="GatherV2",gc="GatherNd",bc="Greater",ro="GreaterEqual",so="Identity",fh="IFFT",mh="Imag",yc="IsFinite",vc="IsInf",xc="IsNan",ao="LeakyRelu",wc="Less",kc="LessEqual",gh="LinSpace",oo="Log",Ic="Log1p",Sc="LogicalAnd",Al="LogicalNot",Dl="LogicalOr",_0="LogSoftmax",Fl="LRN",bh="LRNGrad",io="Max",co="Maximum",uo="MaxPool",yh="MaxPoolGrad",$l="MaxPool3D",vh="MaxPool3DGrad",xh="MaxPoolWithArgmax",lo="Mean",po="Min",ho="Minimum",fo="MirrorPad",Tc="Mod",wh="Multinomial",mo="Multiply",Cc="Neg",Nc="NotEqual",_c="NonMaxSuppressionV3",Ec="NonMaxSuppressionV4",Ac="NonMaxSuppressionV5",Dc="OnesLike",go="OneHot",Fc="Pack",bo="PadV2",uF="Pool",yo="Pow",vo="Prelu",$c="Prod",Rl="Range",kh="Real",Rc="Reciprocal",xo="Relu",Pc="Reshape",Pl="ResizeNearestNeighbor",Ih="ResizeNearestNeighborGrad",wo="ResizeBilinear",Sh="ResizeBilinearGrad",ko="Relu6",Io="Reverse",So="Round",To="Rsqrt",Oc="ScatterNd",Mc="Select",Lc="Selu",Bc="Slice",Co="Sin",zc="Sinh",Wc="Sign",No="Sigmoid",Vc="Softplus",_o="Sqrt",Eo="Sum",Uc="SpaceToBatchND",Gc="SplitV",Ao="Softmax",Ol="SparseFillEmptyRows",Hc="SparseReshape",Ml="SparseSegmentMean",Ll="SparseSegmentSum",Th="SparseToDense",Do="SquaredDifference",Bl="Square",jc="StridedSlice",Ch="StringNGrams",Nh="StringSplit",_h="StringToHashBucketFast",Fo="Sub",$o="Tan",Ro="Tanh",Qs="Tile",qc="TopK",Kc="Transform",Po="Transpose",Eh="Unique",Xc="Unpack",zl="UnsortedSegmentSum",Yc="ZerosLike",ea="Step",Ah="FromPixels",Zc="RotateWithOffset",Oo="_FusedMatMul",Mo="FusedConv2D",Lo="FusedDepthwiseConv2D";function ta(...e){Q().getBool("IS_TEST")||Q().getBool("PROD")||console.warn(...e)}function lF(...e){Q().getBool("IS_TEST")||Q().getBool("PROD")||console.log(...e)}var Jc=Xb("kernelRegistry",()=>new Map),Wl=Xb("gradRegistry",()=>new Map);function Dh(e,t){let n=Zb(e,t);return Jc.get(n)}function Yb(e){return Wl.get(e)}function Fh(e){let t=Jc.entries(),n=[];for(;;){let{done:r,value:s}=t.next();if(r)break;let[a,o]=s,[i]=a.split("_");i===e&&n.push(o)}return n}function Vl(e){let{kernelName:t,backendName:n}=e,r=Zb(t,n);Jc.has(r)&&ta(`The kernel '${t}' for backend '${n}' is already registered`),Jc.set(r,e)}function E0(e){let{kernelName:t}=e;Wl.has(t)&&Q().getBool("DEBUG")&&ta(`Overriding the gradient for '${t}'`),Wl.set(t,e)}function dF(e,t){let n=Zb(e,t);if(!Jc.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Jc.delete(n)}function pF(e){if(!Wl.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Wl.delete(e)}function hF(e,t){Fh(e).forEach(r=>{let s=Object.assign({},r,{backendName:t});Vl(s)})}function Zb(e,t){return`${t}_${e}`}var k={};Ae(k,{arraysEqual:()=>Ks,assert:()=>P,assertNonNegativeIntegerDimensions:()=>Hb,assertNonNull:()=>Ma,assertShapesMatch:()=>bn,bytesFromStringArray:()=>x0,bytesPerElement:()=>Ub,checkConversionForErrors:()=>y0,clamp:()=>kl,computeStrides:()=>Ki,createScalarValue:()=>vF,createShuffledIndices:()=>ZD,decodeString:()=>Ph,distSquared:()=>qD,encodeString:()=>Hl,fetch:()=>wF,fingerPrint64:()=>yF,flatten:()=>La,getArrayFromDType:()=>b0,getTypedArrayFromDType:()=>g0,hasEncodingLoss:()=>eF,hexToLong:()=>Ul,indexToLoc:()=>rF,inferDtype:()=>Kp,inferFromImplicitShape:()=>QD,isBoolean:()=>w0,isFunction:()=>Ys,isInt:()=>qi,isNumber:()=>k0,isPromise:()=>jb,isScalarShape:()=>KD,isString:()=>Xs,isTypedArray:()=>pn,isValidDtype:()=>v0,locToIndex:()=>nF,makeOnesTypedArray:()=>Gb,makeZerosNestedTypedArray:()=>tF,makeZerosTypedArray:()=>Yp,nearestDivisor:()=>Xp,nearestLargerEven:()=>GD,now:()=>Gl,parseAxisParam:()=>Ir,randUniform:()=>jD,repeatedTry:()=>JD,rightPad:()=>Il,shuffle:()=>f0,shuffleCombo:()=>UD,sizeFromShape:()=>yt,sizeToSquarishShape:()=>YD,squeezeShape:()=>m0,sum:()=>HD,swap:()=>qp,tanh:()=>XD,toNestedArray:()=>Xi,toTypedArray:()=>Rh});var A0=Oa(vD()),Bo=A0.default||A0;function Ul(e){return Bo.fromString(e,!0,16)}var D0=Ul("c3a5c85c97cb3127"),zo=Ul("b492b66fbe98f273"),yn=Ul("9ae16a3b2f90404f");function Jb(e){return e.xor(e.shru(47))}function F0(e,t,n){let r=e.slice(t,t+n);return Bo.fromBytes(Array.from(r),!0,!0)}function gt(e,t){return F0(e,t,8)}function $0(e,t){return F0(e,t,4)}function Xt(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function na(e,t,n=Ul("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function fF(e,t,n,r,s,a){s=s.add(e),a=Xt(a.add(s).add(r),21);let o=s;return s=s.add(t),s=s.add(n),a=a.add(Xt(s,44)),[s.add(r),a.add(o)]}function $h(e,t,n,r){return fF(gt(e,t),gt(e,t+8),gt(e,t+16),gt(e,t+24),n,r)}function mF(e,t=e.length){if(t>=8){let n=yn.add(t*2),r=gt(e,0).add(yn),s=gt(e,t-8),a=Xt(s,37).mul(n).add(r),o=Xt(r,25).add(s).mul(n);return na(a,o,n)}if(t>=4){let n=yn.add(t*2),r=$0(e,0);return na(r.shl(3).add(t),$0(e,t-4),n)}if(t>0){let n=e[0],r=e[t>>1],s=e[t-1],a=n+(r<<8),o=t+(s<<2);return Jb(yn.mul(a).xor(D0.mul(o))).mul(yn)}return yn}function gF(e,t=e.length){let n=yn.add(t*2),r=gt(e,0).mul(zo),s=gt(e,8),a=gt(e,t-8).mul(n),o=gt(e,t-16).mul(yn);return na(Xt(r.add(s),43).add(Xt(a,30)).add(o),r.add(Xt(s.add(yn),18)).add(a),n)}function bF(e,t=e.length){let n=yn.add(t*2),r=gt(e,0).mul(yn),s=gt(e,8),a=gt(e,t-8).mul(n),o=gt(e,t-16).mul(yn),i=Xt(r.add(s),43).add(Xt(a,30)).add(o),c=na(i,r.add(Xt(s.add(yn),18)).add(a),n),l=gt(e,16).mul(n),u=gt(e,24),d=i.add(gt(e,t-32)).mul(n),p=c.add(gt(e,t-24)).mul(n);return na(Xt(l.add(u),43).add(Xt(d,30)).add(p),l.add(Xt(u.add(r),18)).add(d),n)}function yF(e,t=e.length){let n=Bo.fromNumber(81,!0);if(t<=32)return t<=16?mF(e,t):gF(e,t);if(t<=64)return bF(e,t);let r=n,s=n.mul(zo).add(113),a=Jb(s.mul(yn).add(113)).mul(yn),o=[Bo.UZERO,Bo.UZERO],i=[Bo.UZERO,Bo.UZERO];r=r.mul(yn).add(gt(e,0));let c=0,l=(t-1>>6)*64,u=l+(t-1&63)-63;do r=Xt(r.add(s).add(o[0]).add(gt(e,c+8)),37).mul(zo),s=Xt(s.add(o[1]).add(gt(e,c+48)),42).mul(zo),r=r.xor(i[1]),s=s.add(o[0]).add(gt(e,c+40)),a=Xt(a.add(i[0]),33).mul(zo),o=$h(e,c,o[1].mul(zo),r.add(i[0])),i=$h(e,c+32,a.add(i[1]),s.add(gt(e,c+16))),[a,r]=[r,a],c+=64;while(c!==l);let d=zo.add(a.and(255).shl(1));return c=u,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),r=Xt(r.add(s).add(o[0]).add(gt(e,c+8)),37).mul(d),s=Xt(s.add(o[1]).add(gt(e,c+48)),42).mul(d),r=r.xor(i[1].mul(9)),s=s.add(o[0].mul(9).add(gt(e,c+40))),a=Xt(a.add(i[0]),33).mul(d),o=$h(e,c,o[1].mul(d),r.add(i[0])),i=$h(e,c+32,a.add(i[1]),s.add(gt(e,c+16))),[a,r]=[r,a],na(na(o[0],i[0],d).add(Jb(s).mul(D0)).add(a),na(o[1],i[1],d).add(r),d)}function vF(e,t){return t==="string"?Hl(e):Rh([e],t)}function xF(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function Rh(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=La(e)),Q().getBool("DEBUG")&&y0(e,t),xF(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let r=0;r<n.length;++r)Math.round(e[r])!==0&&(n[r]=1);return n}else throw new Error(`Unknown data type ${t}`)}function Gl(){return Q().platform.now()}function wF(e,t){return Q().platform.fetch(e,t)}function Hl(e,t="utf-8"){return t=t||"utf-8",Q().platform.encode(e,t)}function Ph(e,t="utf-8"){return t=t||"utf-8",Q().platform.decode(e,t)}var kF=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new SF)}profileKernel(e,t,n){let r,s=()=>{r=n()},a,o=Gl();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let c of r)c.dataSync();a=Promise.resolve({kernelMs:Gl()-o})}if(Q().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<r.length;c++){let l=r[c];l.data().then(u=>{IF(u,l.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then(c=>c.kernelMs),extraInfo:a.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach(o=>{Promise.all([o.data(),r,a]).then(i=>{this.logger.logKernelProfile(t,o,i[0],i[1],s,i[2])})})}};function IF(e,t,n){if(t!=="float32")return!1;for(let r=0;r<e.length;r++){let s=e[r];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}var SF=class{logKernelProfile(e,t,n,r,s,a){let o=typeof r=="number"?Il(`${r}ms`,9):r.error,i=Il(e,25),c=t.rank,l=t.size,u=Il(t.shape.toString(),14),d="";for(let p in s){let h=s[p];if(h!=null){let f=h.shape||t.shape,m=f.length;d+=`${p}: ${m}D ${m>0?f:""} `}}console.log(`%c${i}	%c${o}	%c${c}D ${u}	%c${l}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function TF(e,t,n){let r={},s={};for(let c=0;c<t.length;c++)r[t[c].id]=!0;for(let c=0;c<e.length;c++){let l=e[c],u=l.inputs;for(let d in u){let p=u[d],h=!1;for(let f=0;f<t.length;f++)if(r[p.id]){l.outputs.forEach(m=>r[m.id]=!0),h=!0,s[l.id]=!0;break}if(h)break}}let a={};a[n.id]=!0;let o={};for(let c=e.length-1;c>=0;c--){let l=e[c],u=l.inputs;for(let d=0;d<l.outputs.length;d++)if(a[l.outputs[d].id]){for(let p in u)a[u[p].id]=!0,o[l.id]=!0;break}}let i=[];for(let c=0;c<e.length;c++){let l=e[c];if(s[l.id]&&o[l.id]){let u={};for(let p in l.inputs){let h=l.inputs[p];r[h.id]&&(u[p]=h)}let d=Object.assign({},l);d.inputs=u,d.outputs=l.outputs,i.push(d)}}return i}function CF(e,t,n,r){for(let s=t.length-1;s>=0;s--){let a=t[s],o=[];if(a.outputs.forEach(c=>{let l=e[c.id];l!=null?o.push(l):o.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);let i=a.gradient(o);for(let c in a.inputs){if(!(c in i))throw new Error(`Cannot backprop through input ${c}. Available gradients found: ${Object.keys(i)}.`);let l=n(()=>i[c]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${c} must have 'float32' dtype, but has '${l.dtype}'`);let u=a.inputs[c];if(!Ks(l.shape,u.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${c}' has shape '${l.shape}', which does not match the shape of the input '${u.shape}'`);if(e[u.id]==null)e[u.id]=l;else{let d=e[u.id];e[u.id]=r(d,l),d.dispose()}}}}var R0=20,jl=3,Qb=7;function NF(e,t,n,r){let s=Ki(t),a=_F(e,t,n,s),o=t.length,i=Oh(e,t,n,s,a),c=["Tensor"];return r&&(c.push(`  dtype: ${n}`),c.push(`  rank: ${o}`),c.push(`  shape: [${t}]`),c.push("  values:")),c.push(i.map(l=>"    "+l).join(`
`)),c.join(`
`)}function _F(e,t,n,r){let s=yt(t),a=r[r.length-1],o=new Array(a).fill(0),i=t.length,c=n==="complex64"?Kl(e):e;if(i>1)for(let l=0;l<s/a;l++){let u=l*a;for(let d=0;d<a;d++)o[d]=Math.max(o[d],ql(c[u+d],0,n).length)}return o}function ql(e,t,n){let r;return Array.isArray(e)?r=`${parseFloat(e[0].toFixed(Qb))} + ${parseFloat(e[1].toFixed(Qb))}j`:Xs(e)?r=`'${e}'`:n==="bool"?r=P0(e):r=parseFloat(e.toFixed(Qb)).toString(),Il(r,t)}function P0(e){return e===0?"false":"true"}function Oh(e,t,n,r,s,a=!0){let o=n==="complex64"?2:1,i=t[0],c=t.length;if(c===0){if(n==="complex64"){let m=Kl(e);return[ql(m[0],0,n)]}return n==="bool"?[P0(e[0])]:[e[0].toString()]}if(c===1){if(i>R0){let g=jl*o,b=Array.from(e.slice(0,g)),y=Array.from(e.slice((i-jl)*o,i*o));return n==="complex64"&&(b=Kl(b),y=Kl(y)),["["+b.map((v,x)=>ql(v,s[x],n)).join(", ")+", ..., "+y.map((v,x)=>ql(v,s[i-jl+x],n)).join(", ")+"]"]}let m=n==="complex64"?Kl(e):Array.from(e);return["["+m.map((g,b)=>ql(g,s[b],n)).join(", ")+"]"]}let l=t.slice(1),u=r.slice(1),d=r[0]*o,p=[];if(i>R0){for(let m=0;m<jl;m++){let g=m*d,b=g+d;p.push(...Oh(e.slice(g,b),l,n,u,s,!1))}p.push("...");for(let m=i-jl;m<i;m++){let g=m*d,b=g+d;p.push(...Oh(e.slice(g,b),l,n,u,s,m===i-1))}}else for(let m=0;m<i;m++){let g=m*d,b=g+d;p.push(...Oh(e.slice(g,b),l,n,u,s,m===i-1))}let h=c===2?",":"";p[0]="["+p[0]+h;for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+h;let f=`,
`;for(let m=2;m<c;m++)f+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function Kl(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Ut=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=yt(e),n!=null){let r=n.length;P(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||b0(t,this.size),this.strides=Ki(e)}set(e,...t){t.length===0&&(t=[0]),P(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let r of e){if(r<0||r>=this.shape[t]){let s=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(s)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Zr().makeTensor(this.values,this.shape,this.dtype)}},Zr=null,Qc=null,EF=null;function AF(e){Zr=e}function DF(e){Qc=e}function FF(e){EF=e}var Ee=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=yt(e),this.strides=Ki(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Qc.buffer(this.shape,this.dtype,e)}bufferSync(){return Qc.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Xi(this.shape,e,this.dtype==="complex64")}arraySync(){return Xi(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=Zr().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>Ph(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();let e=Zr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Ph(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Zr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Zr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Qc.print(this,e)}clone(){return this.throwIfDisposed(),Qc.clone(this)}toString(e=!1){let t=this.dataSync();return NF(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Qc.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Zr().makeVariable(this,e,t,n)}};Object.defineProperty(Ee,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function ee(){return Xb("Tensor",()=>Ee)}ee();var ra=class extends Ee{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r);this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ks(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Zr().disposeTensor(this),this.dataId=e.dataId,Zr().incRef(this,null)}dispose(){Zr().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(ra,Symbol.hasInstance,{value:e=>e instanceof Ee&&e.assign!=null&&e.assign instanceof Function});var Pr={};Ae(Pr,{assertTypesMatch:()=>O0,getTensorsInContainer:()=>ay,isTensorInList:()=>RF,makeTypesMatch:()=>_t});var ey;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(ey||(ey={}));var ty;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(ty||(ty={}));var ny;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(ny||(ny={}));var ry;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(ry||(ry={}));var sy;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(sy||(sy={}));var $F={float32:ry,int32:ty,bool:ny,complex64:sy};function Sr(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return $F[e][t]}function Mh(e){return Sr(e,"int32")}function _t(e,t){if(e.dtype===t.dtype)return[e,t];let n=Sr(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function O0(e,t){P(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function RF(e,t){return t.some(n=>n.id===e.id)}function ay(e){let t=[],n=new Set;return M0(e,t,n),t}function M0(e,t,n){if(e==null)return;if(e instanceof Ee){t.push(e);return}if(!PF(e))return;let r=e;for(let s in r){let a=r[s];n.has(a)||(n.add(a),M0(a,t,n))}}function PF(e){return Array.isArray(e)||typeof e=="object"}function oy(e){return e.kernelName!=null}var L0=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Xl=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new L0}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ta(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new kF(this.backendInstance),!0}setupRegisteredKernels(){Fh(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Fh(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof wl)&&typeof n.then=="function"){let r=++this.pendingBackendInitId,s=n.then(a=>r<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,ta(`Initialization of backend ${e} failed`),ta(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return ta(`Initialization of backend ${e} failed`),ta(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let r;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,n){e();try{let r=n();return t(),r}catch(r){throw t(),r}}nextTensorId(){return Xl.nextTensorId++}nextVariableId(){return Xl.nextVariableId++}clone(e){let t=z.runKernel(so,{x:e}),n={x:e},r=a=>({x:()=>{let o="float32",i={x:a},c={dtype:o};return z.runKernel(Ua,i,c)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[t],r,s,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(Dh(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),s=0;n.forEach(i=>{s+=i.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-s-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let i,c=oy(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(oy(e)){let{kernelName:h,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=Dh(h,this.backendName);P(g!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),o=()=>{let b=this.backend.numDataIds();i=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let y=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,b,y);let v=y.map(x=>{if(x.rank!=null)return x;let{dataId:w,shape:T,dtype:C}=x;return this.makeTensorFromDataId(w,T,C)});if(r){let x=this.getTensorsForGradient(h,f,v);n=this.saveTensorsForBackwardMode(x)}return v}}else{let{forwardFunc:h}=e,f=m=>{!r||(n=m.map(g=>this.keep(this.clone(g))))};o=()=>{let m=this.backend.numDataIds();i=this.tidy(()=>h(this.backend,f));let g=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,m,g),g}}let{inputs:l,attrs:u}=e,d=oy(e)?null:e.backwardsFunc,p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=o():(p=this.profiler.profileKernel(c,l,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),r&&this.addTapeNode(c,l,t,d,n,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(h=>l[h]!=null?l[h].shape:null),outputShapes:t.map(h=>h.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let r=Yb(e);if(r!=null){let s=r.inputsToSave||[],a=r.outputsToSave||[],o;r.saveAllInputs?(P(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(c=>t[c])):o=s.map(c=>t[c]);let i=n.filter((c,l)=>a[l]);return o.concat(i)}return[]}makeTensor(e,t,n,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;n==="string"&&Xs(e[0])&&(s=e.map(i=>Hl(i)));let a=r.write(s,t,n),o=new Ee(t,n,a,this.nextTensorId());if(this.trackTensor(o,r),n==="string"){let i=this.state.tensorInfo.get(a),c=x0(s);this.state.numBytes+=c-i.bytes,i.bytes=c}return o}makeTensorFromDataId(e,t,n,r){n=n||"float32";let s=new Ee(t,n,e,this.nextTensorId());return this.trackTensor(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));let s=new ra(e,t,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*Ub(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof ra||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*Ub(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,r,s,a){let o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},i=Yb(e);i!=null&&(r=i.gradFunc),r!=null&&(o.gradient=c=>(c=c.map((l,u)=>{if(l==null){let d=n[u],p=Yp(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return l}),r(c.length>1?c:c[0],s,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=ay(e),n=new Set(t.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!n.has(a.id)&&a.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(s=>{!s.kept&&s.scopeId===r.id&&this.track(s)})}gradients(e,t,n,r=!1){if(P(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));P(s instanceof Ee,()=>"The result y returned by f() must be a tensor.");let a=TF(this.state.activeTape,t,s);if(!r&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let o={};o[s.id]=n==null?OF(s.shape):n,CF(o,a,c=>this.tidy(c),MF);let i=t.map(c=>o[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(let l of c.saved)l.dispose()}),this.state.activeTape=null),{value:s,grads:i}})}customGrad(e){return P(Ys(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{P(t.every(o=>o instanceof Ee),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,r={};t.forEach((o,i)=>{r[i]=o});let s=(o,i)=>(n=e(...t,i),P(n.value instanceof Ee,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),P(Ys(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(o,i)=>{let c=n.gradFunc(o,i),l=Array.isArray(c)?c:[c];P(l.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),P(l.every(d=>d instanceof Ee),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let u={};return l.forEach((d,p)=>{u[p]=()=>d}),u};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){let t=Gl(),n=await this.backend.time(e);return n.wallMs=Gl()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new L0;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};Xl.nextTensorId=0;Xl.nextVariableId=0;function OF(e){let t=Gb(yt(e),"float32");return z.makeTensor(t,e,"float32")}function B0(){let e=C0();if(e._tfengine==null){let t=new T0(e);e._tfengine=new Xl(t)}return iF(e._tfengine.ENV),AF(()=>e._tfengine),e._tfengine}var z=B0();function MF(e,t){let n={a:e,b:t};return z.runKernel(Zs,n)}var Yl={};Ae(Yl,{isBrowser:()=>z0,isMobile:()=>zF,mockIsMobile:()=>BF});function LF(){return typeof navigator!="undefined"&&navigator!=null}var iy;function BF(e){iy=e}function zF(e){if(iy!==void 0)return iy;if(e||LF()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window!="undefined"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function z0(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var Or=Q();Or.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Or.registerFlag("IS_BROWSER",()=>z0());Or.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");Or.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Or.registerFlag("PROD",()=>!1);Or.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Or.getBool("DEBUG"));Or.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Or.registerFlag("IS_TEST",()=>!1);Or.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Or.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);function Jr(e,t){let n=e;if(pn(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||pn(n)&&t!=="string";)r.push(n.length),n=n[0];return Array.isArray(e)&&Q().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&W0(e,r,[]),r}function W0(e,t,n){if(n=n||[],!Array.isArray(e)&&!pn(e)){P(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}P(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),P(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let r=t.slice(1);for(let s=0;s<e.length;++s)W0(e[s],r,n.concat(s))}function V0(e,t,n,r){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function A(e,t,n,r="numeric"){if(e instanceof Ee)return V0(r,e.dtype,t,n),e;let s=Kp(e);if(s!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),V0(r,s,t,n),e==null||!pn(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let c=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${c}'`)}let a=Jr(e,s);!pn(e)&&!Array.isArray(e)&&(e=[e]);let i=s!=="string"?Rh(e,s):La(e,[],!0);return z.makeTensor(i,a,s)}function Zl(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,o)=>A(a,`${t}[${o}]`,n,r))}var U0="__op";function W(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+U0;let s=(...a)=>{z.startScope(n);try{let o=r(...a);return jb(o)&&console.error("Cannot return a Promise inside of tidy."),z.endScope(o),o}catch(o){throw z.endScope(null),o}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}function WF(e,t){let n=A(e,"real","complex"),r=A(t,"imag","complex");bn(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let s={real:n,imag:r};return z.runKernel(th,s)}var sa=W({complex_:WF});function aa(e,t,n,r){if(r==null&&(r=Kp(e)),r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!pn(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Hb(t);let s=yt(t),a=yt(n);P(s===a,()=>`Based on the provided shape, [${t}], the tensor should have ${s} values but has ${a}`);for(let o=0;o<n.length;++o){let i=n[o],c=o===n.length-1?i!==yt(t.slice(o)):!0;P(n[o]===t[o]||!c,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!pn(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=r!=="string"?Rh(e,r):La(e,[],!0),z.makeTensor(e,t,r)}function Kn(e,t,n){let r=Jr(e,n);return aa(e,t,r,n)}var cy={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},Lh=4;async function VF(e,t){let n=[],r=[],s=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);for(let o=0;o<s.length;++o){let i=s[o],c=Array.isArray(e)?e[o].tensor:e[i];if(c.dtype!=="float32"&&c.dtype!=="int32"&&c.dtype!=="bool"&&c.dtype!=="string"&&c.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${c.dtype}`);let l={name:i,shape:c.shape,dtype:c.dtype};if(c.dtype==="string"){let u=new Promise(async d=>{let p=await c.bytes(),h=p.reduce((g,b)=>g+b.length,0)+Lh*p.length,f=new Uint8Array(h),m=0;for(let g=0;g<p.length;g++){let b=p[g],y=new Uint8Array(new Uint32Array([b.length]).buffer);f.set(y,m),m+=Lh,f.set(b,m),m+=b.length}d(f)});r.push(u)}else r.push(c.data());t!=null&&(l.group=t),n.push(l)}let a=await Promise.all(r);return{data:UF(a),specs:n}}function G0(e,t){let n={},r,s=0;for(let a of t){let o=a.name,i=a.dtype,c=a.shape,l=yt(c),u;if("quantization"in a){let d=a.quantization;if(d.dtype==="uint8"||d.dtype==="uint16"){if(!("min"in d&&"scale"in d))throw new Error(`Weight ${a.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else if(d.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${a.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let p=cy[d.dtype],h=e.slice(s,s+l*p),f=d.dtype==="uint8"?new Uint8Array(h):new Uint16Array(h);if(i==="float32")if(d.dtype==="uint8"||d.dtype==="uint16"){u=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=g*d.scale+d.min}}else if(d.dtype==="float16")r===void 0&&(r=XF()),u=r(f);else throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);else if(i==="int32"){if(d.dtype!=="uint8"&&d.dtype!=="uint16")throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);u=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=Math.round(g*d.scale+d.min)}}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);s+=l*p}else if(i==="string"){let d=yt(a.shape);u=[];for(let p=0;p<d;p++){let h=new Uint32Array(e.slice(s,s+Lh))[0];s+=Lh;let f=new Uint8Array(e.slice(s,s+h));u.push(f),s+=h}}else{let d=cy[i],p=e.slice(s,s+l*d);if(i==="float32")u=new Float32Array(p);else if(i==="int32")u=new Int32Array(p);else if(i==="bool")u=new Uint8Array(p);else if(i==="complex64"){u=new Float32Array(p);let h=new Float32Array(u.length/2),f=new Float32Array(u.length/2);for(let b=0;b<h.length;b++)h[b]=u[b*2],f[b]=u[b*2+1];let m=Kn(h,c,"float32"),g=Kn(f,c,"float32");n[o]=sa(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);s+=l*d}i!=="complex64"&&(n[o]=Kn(u,c,i))}return n}function UF(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(a=>{if(t+=a.byteLength,n.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});let r=new Uint8Array(t),s=0;return n.forEach(a=>{r.set(new Uint8Array(a.buffer),s),s+=a.byteLength}),r.buffer}var uy=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function H0(e){return uy?Buffer.byteLength(e):new Blob([e]).size}function GF(e){if(uy)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let r=0,s=t.length;r<s;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function HF(e){if(uy){let r=Buffer.from(e,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function ly(e){if(e.length===1)return e[0];let t=0;e.forEach(s=>{t+=s.byteLength});let n=new Uint8Array(t),r=0;return e.forEach(s=>{n.set(new Uint8Array(s),r),r+=s.byteLength}),n.buffer}function j0(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function q0(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}async function dy(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),e.weightsManifest!=null){let[r,s]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=s}return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),n}function Jl(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:H0(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:H0(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function jF(){let e=n=>{let r=n<<13,s=0;for(;(r&8388608)==0;)s-=8388608,r<<=1;return r&=~8388608,s+=947912704,r|s},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function qF(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function KF(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function XF(){let e=jF(),t=qF(),n=KF();return r=>{let s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let o=0;o<r.length;o++){let i=r[o],c=e[n[i>>10]+(i&1023)]+t[i>>10];a[o]=c}return new Float32Array(s)}}var Ft=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Ft.instance==null&&(Ft.instance=new Ft),Ft.instance}static registerSaveRouter(e){Ft.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ft.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ft.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ft.getHandlers(e,"load",t)}static getHandlers(e,t,n){let r=[];return(t==="load"?Ft.getInstance().loadRouters:Ft.getInstance().saveRouters).forEach(a=>{let o=a(e,n);o!==null&&r.push(o)}),r}},YF=e=>Ft.registerSaveRouter(e),ZF=e=>Ft.registerLoadRouter(e),JF=e=>Ft.getSaveHandlers(e),QF=(e,t)=>Ft.getLoadHandlers(e,t),py="tensorflowjs",hy=1,Wo="models_store",oa="model_info_store";function K0(){if(!Q().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window=="undefined"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function fy(e){let t=e.result;t.createObjectStore(Wo,{keyPath:"modelPath"}),t.createObjectStore(oa,{keyPath:"modelPath"})}var Vo=class{constructor(e){if(this.indexedDB=K0(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,r)=>{let s=this.indexedDB.open(py,hy);s.onupgradeneeded=()=>fy(s),s.onsuccess=()=>{let a=s.result;if(t==null){let o=a.transaction(Wo,"readonly"),c=o.objectStore(Wo).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(c.result.modelArtifacts)},c.onerror=l=>(a.close(),r(c.error)),o.oncomplete=()=>a.close()}else{let o=Jl(t),i=a.transaction(oa,"readwrite"),c=i.objectStore(oa),l=c.put({modelPath:this.modelPath,modelArtifactsInfo:o}),u;l.onsuccess=()=>{u=a.transaction(Wo,"readwrite");let p=u.objectStore(Wo).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o});p.onsuccess=()=>n({modelArtifactsInfo:o}),p.onerror=h=>{c=i.objectStore(oa);let f=c.delete(this.modelPath);f.onsuccess=()=>(a.close(),r(p.error)),f.onerror=m=>(a.close(),r(p.error))}},l.onerror=d=>(a.close(),r(l.error)),i.oncomplete=()=>{u==null?a.close():u.oncomplete=()=>a.close()}}},s.onerror=a=>r(s.error)})}};Vo.URL_SCHEME="indexeddb://";var X0=e=>Q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Vo.URL_SCHEME)?e$(e.slice(Vo.URL_SCHEME.length)):null;Ft.registerSaveRouter(X0);Ft.registerLoadRouter(X0);function e$(e){return new Vo(e)}function t$(e){return e.startsWith(Vo.URL_SCHEME)?e.slice(Vo.URL_SCHEME.length):e}var n$=class{constructor(){this.indexedDB=K0()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(py,hy);n.onupgradeneeded=()=>fy(n),n.onsuccess=()=>{let r=n.result,s=r.transaction(oa,"readonly"),o=s.objectStore(oa).getAll();o.onsuccess=()=>{let i={};for(let c of o.result)i[c.modelPath]=c.modelArtifactsInfo;e(i)},o.onerror=i=>(r.close(),t(o.error)),s.oncomplete=()=>r.close()},n.onerror=r=>t(n.error)})}async removeModel(e){return e=t$(e),new Promise((t,n)=>{let r=this.indexedDB.open(py,hy);r.onupgradeneeded=()=>fy(r),r.onsuccess=()=>{let s=r.result,a=s.transaction(oa,"readwrite"),o=a.objectStore(oa),i=o.get(e),c;i.onsuccess=()=>{if(i.result==null)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let l=o.delete(e),u=()=>{c=s.transaction(Wo,"readwrite");let p=c.objectStore(Wo).delete(e);p.onsuccess=()=>t(i.result.modelArtifactsInfo),p.onerror=h=>n(i.error)};l.onsuccess=u,l.onerror=d=>(u(),s.close(),n(i.error))}},i.onerror=l=>(s.close(),n(i.error)),a.oncomplete=()=>{c==null?s.close():c.oncomplete=()=>s.close()}},r.onerror=s=>n(r.error)})}},xs="/",eu="tensorflowjs_models",Y0="info",r$="model_topology",s$="weight_specs",a$="weight_data",o$="model_metadata";function Z0(e){return{info:[eu,e,Y0].join(xs),topology:[eu,e,r$].join(xs),weightSpecs:[eu,e,s$].join(xs),weightData:[eu,e,a$].join(xs),modelMetadata:[eu,e,o$].join(xs)}}function J0(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function i$(e){let t=e.split(xs);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(xs)}function c$(e){return e.startsWith(Uo.URL_SCHEME)?e.slice(Uo.URL_SCHEME.length):e}var Uo=class{constructor(e){if(!Q().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Z0(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Jl(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,GF(e.weightData));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(s){throw J0(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let o=JSON.parse(s);t.format=o.format,t.generatedBy=o.generatedBy,t.convertedBy=o.convertedBy,o.signature!=null&&(t.signature=o.signature),o.userDefinedMetadata!=null&&(t.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(t.modelInitializer=o.modelInitializer),o.trainingConfig!=null&&(t.trainingConfig=o.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=HF(a),t}};Uo.URL_SCHEME="localstorage://";var Q0=e=>Q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Uo.URL_SCHEME)?u$(e.slice(Uo.URL_SCHEME.length)):null;Ft.registerSaveRouter(Q0);Ft.registerLoadRouter(Q0);function u$(e){return new Uo(e)}var l$=class{constructor(){P(Q().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),P(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=eu+xs,n=xs+Y0;for(let r=0;r<this.LS.length;++r){let s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){let a=i$(s);e[a]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=c$(e);let t=Z0(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return J0(t),n}},tu="://",ur=class{constructor(){this.managers={}}static getInstance(){return ur.instance==null&&(ur.instance=new ur),ur.instance}static registerManager(e,t){P(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(tu)&&(e=e.slice(0,e.indexOf(tu))),P(e.length>0,()=>"scheme must not be an empty string.");let n=ur.getInstance();P(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function Bh(e){if(e.indexOf(tu)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ur.getSchemes().join(",")}`);return{scheme:e.split(tu)[0],path:e.split(tu)[1]}}async function ek(e,t,n=!1){P(e!==t,()=>`Old path and new path are the same: '${e}'`);let r=Ft.getLoadHandlers(e);P(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),P(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);let s=r[0],a=Ft.getSaveHandlers(t);P(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),P(a.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);let o=a[0],i=Bh(e).scheme,c=Bh(e).path,l=i===Bh(e).scheme,u=await s.load();n&&l&&await ur.getManager(i).removeModel(c);let d=await o.save(u);return n&&!l&&await ur.getManager(i).removeModel(c),d.modelArtifactsInfo}async function d$(){let e=ur.getSchemes(),t={};for(let n of e){let r=await ur.getManager(n).listModels();for(let s in r){let a=n+tu+s;t[a]=r[s]}}return t}async function p$(e){let t=Bh(e);return ur.getManager(t.scheme).removeModel(t.path)}async function h$(e,t){return ek(e,t,!1)}async function f$(e,t){return ek(e,t,!0)}var m$=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(Q().get("IS_BROWSER")){Q().setPlatform("browser",new m$);try{ur.registerManager(Uo.URL_SCHEME,new l$)}catch(e){}try{ur.registerManager(Vo.URL_SCHEME,new n$)}catch(e){}}var g$={importFetch:()=>xD()},my,b$=class{constructor(){this.util=wD(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return Q().global.fetch!=null?Q().global.fetch(e,t):(my==null&&(my=g$.importFetch()),my(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};Q().get("IS_NODE")&&Q().setPlatform("node",new b$);function Be(e,t="float32",n){return t=t||"float32",Hb(e),new Ut(e,t,n)}function y$(e,t){let n=A(e,"x","cast");if(!v0(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let r={x:n},s={dtype:t};return z.runKernel(Ua,r,s)}var ce=W({cast_:y$});function v$(e){let n={x:A(e,"x","clone","string_or_numeric")};return z.runKernel(so,n)}var ws=W({clone_:v$});function tk(e,t=!1){console.log(e.toString(t))}B0();var x$={buffer:Be,cast:ce,clone:ws,print:tk};DF(x$);var Yt={};Ae(Yt,{browserFiles:()=>N$,browserHTTPRequest:()=>F$,concatenateArrayBuffers:()=>ly,copyModel:()=>h$,decodeWeights:()=>G0,encodeWeights:()=>VF,fromMemory:()=>R$,getLoadHandlers:()=>QF,getModelArtifactsForJSON:()=>dy,getModelArtifactsInfoForJSON:()=>Jl,getSaveHandlers:()=>JF,http:()=>yy,isHTTPScheme:()=>by,listModels:()=>d$,loadWeights:()=>_$,moveModel:()=>f$,registerLoadRouter:()=>ZF,registerSaveRouter:()=>YF,removeModel:()=>p$,weightsLoaderFactory:()=>ak,withSaveHandler:()=>P$});var w$="model",k$=".json",I$=".weights.bin";function nk(e){return new Promise(t=>setTimeout(t)).then(e)}var nu=class{constructor(e){if(!Q().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(nu.URL_SCHEME)&&(e=e.slice(nu.URL_SCHEME.length)),(e==null||e.length===0)&&(e=w$),this.modelJsonFileName=e+k$,this.weightDataFileName=e+I$}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=q0(e,n),s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=s,await nk(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let o=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;o.download=this.weightDataFileName,o.href=t,await nk(()=>o.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Jl(e)}}}};nu.URL_SCHEME="downloads://";var S$=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=r=>{let s=JSON.parse(r.target.result),a=s.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let i=dy(s,c=>this.loadWeights(c));e(i)},n.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let r=this.checkManifestAndWeightFiles(e),s=n.map(a=>this.loadWeightsFile(a,r[a]));return Promise.all(s).then(a=>[t,ly(a)])}loadWeightsFile(e,t){return new Promise((n,r)=>{let s=new FileReader;s.onload=a=>{let o=a.target.result;n(o)},s.onerror=a=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(s=>j0(s.name)),r={};for(let s of e)s.paths.forEach(a=>{let o=j0(a);if(t.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(t.push(o),n.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);r[a]=this.weightsFiles[n.indexOf(o)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}},T$=e=>Q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(nu.URL_SCHEME)?C$(e.slice(nu.URL_SCHEME.length)):null;Ft.registerSaveRouter(T$);function C$(e="model"){return new nu(e)}function N$(e){return new S$(e)}function rk(e,t,n,r){o(e),n=n==null?0:n,r=r==null?1:r,i(n,r);let s=0,a=c=>(c.then(l=>{let u=n+ ++s/e.length*(r-n);return t(u),l}),c);function o(c){P(c!=null&&Array.isArray(c)&&c.length>0,()=>"promises must be a none empty array")}function i(c,l){P(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${c}`),P(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),P(l>=c,()=>`startFraction must be no more than endFraction, but got startFraction ${c} and endFraction ${l}`)}return Promise.all(e.map(a))}async function sk(e,t){t==null&&(t={});let n=t.fetchFunc==null?Q().platform.fetch:t.fetchFunc,r=e.map(d=>n(d,t.requestInit,{isBinary:!0})),s=0,a=.5,i=(t.onProgress==null?await Promise.all(r):await rk(r,t.onProgress,s,a)).map(d=>d.arrayBuffer()),c=.5,l=1;return t.onProgress==null?await Promise.all(i):await rk(i,t.onProgress,c,l)}async function _$(e,t="",n,r){return ak(o=>sk(o,{requestInit:r}))(e,t,n)}function ak(e){return async(t,n="",r)=>{let s=t.map(()=>!1),a={},o=r!=null?r.map(()=>!1):[],i=[];if(t.forEach((h,f)=>{let m=0;h.weights.forEach(g=>{let b="quantization"in g?g.quantization.dtype:g.dtype,y=cy[b]*yt(g.shape),v=()=>{s[f]=!0,a[f]==null&&(a[f]=[]),a[f].push({manifestEntry:g,groupOffset:m,sizeBytes:y})};r!=null?r.forEach((x,w)=>{x===g.name&&(v(),o[w]=!0)}):v(),i.push(g.name),m+=y})}),!o.every(h=>h)){let h=r.filter((f,m)=>!o[m]);throw new Error(`Could not find weights in manifest with names: ${h.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let c=s.reduce((h,f,m)=>(f&&h.push(m),h),[]),l=[];c.forEach(h=>{t[h].paths.forEach(f=>{let m=n+(n.endsWith("/")?"":"/")+f;l.push(m)})});let u=await e(l),d={},p=0;return c.forEach(h=>{let f=t[h].paths.length,m=0;for(let x=0;x<f;x++)m+=u[p+x].byteLength;let g=new ArrayBuffer(m),b=new Uint8Array(g),y=0;for(let x=0;x<f;x++){let w=new Uint8Array(u[p+x]);b.set(w,y),y+=w.byteLength}a[h].forEach(x=>{let w=g.slice(x.groupOffset,x.groupOffset+x.sizeBytes),T=G0(w,[x.manifestEntry]);for(let C in T)d[C]=T[C]}),p+=f}),d}}var E$="application/octet-stream",A$="application/json",gy=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(P(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Q().platform.fetch,P(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&P(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=q0(e,n);t.body.append("model.json",new Blob([JSON.stringify(r)],{type:A$}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:E$}),"model.weights.bin");let s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Jl(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(s){let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,r=t.weightsManifest;if(n==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return dy(t,s=>this.loadWeights(s))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=D$(t),s=this.weightPathPrefix||n,a=[];for(let l of e)a.push(...l.weights);let o=[],i=[];for(let l of e)for(let u of l.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(u)):o.push(s+u+r);this.weightUrlConverter&&o.push(...await Promise.all(i));let c=await sk(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,ly(c)]}};gy.URL_SCHEME_REGEX=/^https?:\/\//;function D$(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}function by(e){return e.match(gy.URL_SCHEME_REGEX)!=null}var ok=(e,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(r=>by(r)):n=by(e),n)return yy(e,t)}return null};Ft.registerSaveRouter(ok);Ft.registerLoadRouter(ok);function yy(e,t){return new gy(e,t)}function F$(e,t){return yy(e,t)}var vy=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},$$=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function R$(e,t,n,r){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new vy(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new vy({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new vy({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function P$(e){return new $$(e)}var ik={};Ae(ik,{confusionMatrix:()=>z$});function O$(e,t,n=!1,r=!1){let s=A(e,"a","matMul"),a=A(t,"b","matMul");[s,a]=_t(s,a);let o={a:s,b:a},i={transposeA:n,transposeB:r};return z.runKernel(Va,o,i)}var De=W({matMul_:O$});function M$(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:A(e,"indices","oneHot","int32")},o={depth:t,onValue:n,offValue:r};return z.runKernel(go,a,o)}var ru=W({oneHot_:M$});function L$(e,t){let n=A(e,"x","transpose");if(t==null&&(t=n.shape.map((a,o)=>o).reverse()),P(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(a=>{P(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let r={x:n},s={perm:t};return z.runKernel(Po,r,s)}var Re=W({transpose_:L$});function B$(e,t,n){let r=A(e,"labels","confusionMatrix"),s=A(t,"predictions","confusionMatrix");P(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),P(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),P(s.rank===1,()=>`Expected the rank of predictions to be 1, but got ${s.rank}`),P(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),P(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let a=ru(ce(r,"int32"),n),o=ru(ce(s,"int32"),n),i=Re(a),c=De(i,o);return ce(c,"int32")}var z$=W({confusionMatrix_:B$}),su={};Ae(su,{assertAndGetBroadcastShape:()=>pt,getBroadcastDims:()=>ck,getReductionAxes:()=>Lt});function ck(e,t){let n=e.length,r=[];for(let s=0;s<n;s++){let a=n-1-s,o=e[a]||1;(t[t.length-1-s]||1)>1&&o===1&&r.unshift(a)}return r}function Lt(e,t){let n=[];for(let r=0;r<t.length;r++){let s=e[e.length-r-1],a=t.length-r-1,o=t[a];(s==null||s===1&&o>1)&&n.unshift(a)}return n}function pt(e,t){let n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let a=e[e.length-s-1];a==null&&(a=1);let o=t[t.length-s-1];if(o==null&&(o=1),a===1)n.unshift(o);else if(o===1)n.unshift(a);else if(a!==o){let i=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(i)}else n.unshift(a)}return n}var Go={};Ae(Go,{fromPixels:()=>q$,fromPixelsAsync:()=>H$,toPixels:()=>j$});function zh(e,t,n){if(Ma(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let r=Jr(e,n);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return aa(e,t,r,n)}var Ho;function uk(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&e instanceof ImageData)r=!0;else if(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)s=!0;else if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)a=!0;else if(e.getContext!=null)o=!0;else if(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(s){let f=2;if(s&&e.readyState<f)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(Dh(Ah,z.backendName)!=null){let f={pixels:e},m={numChannels:t};return z.runKernel(Ah,f,m)}let[l,u]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height],d;if(o)d=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)d=e.data;else if(a||s||i){if(Ho==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")Ho=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Ho=document.createElement("canvas").getContext("2d");Ho.canvas.width=l,Ho.canvas.height=u,Ho.drawImage(e,0,0,l,u),d=Ho.getImageData(0,0,l,u).data}let p;if(t===4)p=new Int32Array(d);else{let f=l*u;p=new Int32Array(f*t);for(let m=0;m<f;m++)for(let g=0;g<t;++g)p[m*t+g]=d[m*4+g]}return zh(p,[u,l,t],"int32")}function W$(e){return e!=null&&e.data instanceof Uint8Array}function V$(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function U$(e){return e!=null&&e.width!==0&&e.height!==0}function G$(e){return V$()&&!(e instanceof ImageBitmap)&&U$(e)&&!W$(e)}async function H$(e,t=3){let n=null;if(Q().getBool("WRAP_TO_IMAGEBITMAP")&&G$(e)){let r;try{r=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(s){r=null}r!=null&&r.width===e.width&&r.height===e.height?n=r:n=e}else n=e;return uk(n,t)}async function j$(e,t){let n=A(e,"img","toPixels");if(!(e instanceof Ee)){let l=n;n=ce(l,"int32"),l.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[r,s]=n.shape.slice(0,2),a=n.rank===2?1:n.shape[2];if(a>4||a===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let o=await n.data(),i=n.dtype==="float32"?255:1,c=new Uint8ClampedArray(s*r*4);for(let l=0;l<r*s;++l){let u=[0,0,0,255];for(let p=0;p<a;p++){let h=o[l*a+p];if(n.dtype==="float32"){if(h<0||h>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${h}.`)}else if(n.dtype==="int32"&&(h<0||h>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${h}.`);a===1?(u[0]=h*i,u[1]=h*i,u[2]=h*i):u[p]=h*i}let d=l*4;c[d+0]=Math.round(u[0]),c[d+1]=Math.round(u[1]),c[d+2]=Math.round(u[2]),c[d+3]=Math.round(u[3])}if(t!=null){t.width=s,t.height=r;let l=t.getContext("2d"),u=new ImageData(c,s,r);l.putImageData(u,0,0)}return n!==e&&n.dispose(),c}var q$=W({fromPixels_:uk}),xy={};Ae(xy,{prepareAndValidate:()=>lk});function lk(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(yt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let s=t.shape,a=s[s.length-1],o=1;for(let d=0;d<s.length-1;++d)o*=s[d];let i=e.shape,c=s.slice();c.pop();let l=1;for(let d=a;d<n;++d)l*=i[d],c.push(i[d]);let u=[...Ki(e.shape).map(d=>d/l),1].slice(0,a);return[c,o,l,u]}var wy={};Ae(wy,{calculateShapes:()=>dk,validateInput:()=>Iy,validateUpdateShape:()=>ky});function ky(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+` update.rank != ${s+e.length-r}`);for(let o=0;o<s;++o)if(n.shape[o]!==t.shape[o])throw new Error(a+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-s;++o)if(n.shape[o+s]!==e[o+r])throw new Error(a+` updates.shape[${o+s}] (${n.shape[o+s]}) != shape[${o+s}] (${e[o+s]})`)}function Iy(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}ky(n,t,e)}function dk(e,t,n){let r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length,o=1;for(let d=s;d<a;++d)o*=n[d];let i=s<1?1:s,c=yt(t.shape)/i,l=[...Ki(n.slice(0,s)),1],u=yt(n);return{sliceRank:s,numUpdates:c,sliceSize:o,strides:l,outputSize:u}}var Gt={};Ae(Gt,{assertParamsValid:()=>X$,computeFlatOffset:()=>eR,computeOutShape:()=>Z$,getNormalizedAxes:()=>J$,isSliceContinous:()=>Q$,maskToAxes:()=>Y$,parseSliceParams:()=>xk,sliceInfo:()=>tR,startForAxis:()=>yk,startIndicesWithElidedDims:()=>mk,stopForAxis:()=>vk,stopIndicesWithElidedDims:()=>gk,stridesForAxis:()=>bk,stridesWithElidedDims:()=>pk});var Sy=-2,K$=-1;function X$(e,t,n){let r=e.shape.length;P(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),P(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)P(t[s]+n[s]<=e.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`)}function Y$(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function Z$(e,t,n){let r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function pk(e,t,n,r){let s=[...e];for(let a=s.length;a<r.length;a++)s.push(1);for(let a=0;a<n;a++)a===0?s[t]=1:(s.splice(t,0,1),s.pop());return s}function hk(e,t,n){return n<=e?n:n-(t-1)}function fk(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function J$(e,t,n,r,s,a,o,i,c){let l=e.length,u=new Array(l),d=new Array(l),p=new Array(l);if(t.length&&n>0){let h=t[0],f=n+1;u=mk(o,h,f,r,e),d=gk(i,h,f,s,e),p=pk(a,h,f,e)}else for(let h=0;h<l;h++)u[h]=yk(o,r,a,e,h,c),d[h]=vk(i,s,a,e,h,c),p[h]=bk(a,h,c);return{begin:u,end:d,strides:p}}function mk(e,t,n,r,s){let a=[...s],o=fk(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=0;else{let c=hk(t,n,i),l=r[c];e&1<<c&&(l=0),a[i]=l}return a}function gk(e,t,n,r,s){let a=[...s],o=fk(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=Number.MAX_SAFE_INTEGER;else{let c=hk(t,n,i),l=r[c];e&1<<c&&(l=Number.MAX_SAFE_INTEGER),a[i]=l}for(let i=0;i<a.length;i++){let c=s[i];a[i]<0&&(a[i]+=c),a[i]=kl(0,a[i],s[i])}return a}function bk(e,t,n){let r=e[t];return(n&1<<t||r==null)&&(r=1),r}function yk(e,t,n,r,s,a){let o=t[s],i=n[s]||1;(e&1<<s||a&1<<s||o==null)&&(i>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);let c=r[s];return o<0&&(o+=c),o=kl(0,o,c-1),o}function vk(e,t,n,r,s,a){let o=t[s],i=n[s]||1;(e&1<<s||a&1<<s||o==null)&&(i>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);let c=r[s];return o<0&&(o+=c),i>0?o=kl(0,o,c):o=kl(-1,o,c-1),o}function Q$(e,t,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function eR(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function xk(e,t,n){let r,s=e.shape.length;typeof t=="number"?r=[t,...new Array(s-1).fill(0)]:t.length<s?r=t.concat(new Array(s-t.length).fill(0)):r=t.slice(),r.forEach(o=>{P(o!==-1,()=>"slice() does not support negative begin indexing.")});let a;return n==null?a=new Array(s).fill(-1):typeof n=="number"?a=[n,...new Array(s-1).fill(-1)]:n.length<s?a=n.concat(new Array(s-n.length).fill(-1)):a=n,a=a.map((o,i)=>o>=0?o:(P(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${i}.`),e.shape[i]-r[i])),[r,a]}function tR(e,t,n,r,s,a,o,i,c){let l;if(r==null?(l=new Array(t.length),l.fill(1)):l=r,o!=null&&(o&o-1)!=0)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1,d={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:s,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:c};for(let v=0;v<d.dims;v++)u&&(1<<v&i)!=0&&d.numAddAxisAfterEllipsis++,1<<v&o&&(u=!0);u||(d.ellipsisMask|=1<<d.dims,d.dims++);let p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};nR(d,p);let h=!0,f=!0,m=!0,g=[],b=[];for(let v=0;v<e.length;++v){if(p.strides[v]===0)throw Error(`strides[${v}] must be non-zero`);let x=!!(p.shrinkAxisMask&1<<v),w=e[v];if(w===-1){g.push(x?1:-1);continue}let T=[p.beginMask&1<<v,p.endMask&1<<v],C=[p.strides[v]>0?0:-1,p.strides[v]>0?w:w-1];if(x&&p.strides[v]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&p.strides[v]===1;let D=!!(p.beginMask&1<<v&&p.endMask&1<<v);if(p.beginValid&&p.endValid){if(x){let R=p.begin[v]<0?w+p.begin[v]:p.begin[v];if(p.begin[v]=R,p.end[v]=p.begin[v]+1,R<0||R>=w)throw Error(`slice index ${p.begin[v]} of dimension ${v} out of bounds.`)}else p.begin[v]=wk(p.begin[v],0,p.strides[v],w,T,C),p.end[v]=wk(p.end[v],1,p.strides[v],w,T,C);let $=p.strides[v]===1&&p.begin[v]===0&&p.end[v]===w;h=h&&$,f=f&&(v===0&&p.strides[v]===1||$)}else h=h&&p.strides[v]===1&&D,f=f&&(v===0&&p.strides[v]===1||D);let F,O=!1;if(p.beginValid&&p.endValid?(F=p.end[v]-p.begin[v],O=!0):x?(F=1,O=!0):D&&w>=0&&(p.strides[v]<0?F=-w:F=w,O=!0),O){let $;F===0||F<0!=p.strides[v]<0?$=0:$=Math.trunc(F/p.strides[v])+(F%p.strides[v]!=0?1:0),g.push($)}else g.push(-1)}for(let v=0;v<p.finalShapeGatherIndices.length;++v){let x=p.finalShapeGatherIndices[v];x>=0?b.push(g[x]):x===Sy&&b.push(1)}return{finalShapeSparse:b.filter((v,x)=>p.finalShapeGatherIndices[x]!==Sy),finalShape:b,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function nR(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(Sy),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[r]),e.end!=null&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(K$),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}function wk(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{let o=e<0?r+e:e;return o<a[0]?a[0]:o>a[1]?a[1]:o}}var ie={};Ae(ie,{Serializable:()=>kk,SerializationMap:()=>jo,registerClass:()=>ia});var kk=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},jo=class{constructor(){this.classNameMap={}}static getMap(){return jo.instance==null&&(jo.instance=new jo),jo.instance}static register(e){jo.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function ia(e){P(e.className!=null,()=>"Class being registered does not have the static className property defined."),P(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),P(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),jo.register(e)}var Ik={};Ae(Ik,{TEST_EPSILON_FLOAT16:()=>Sk,encodeStrings:()=>Tk,expectArrayBuffersEqual:()=>uR,expectArraysClose:()=>sR,expectArraysEqual:()=>oR,expectNumbersClose:()=>iR,expectPromiseToFail:()=>aR,expectValuesInRange:()=>cR,testEpsilon:()=>Ty});var rR=.001,Sk=.1;function sR(e,t,n){return n==null&&(n=Ty()),Cy(e,t,(r,s)=>Ny(r,s,n))}function Ty(){return z.backend.floatPrecision()===32?rR:Sk}function Cy(e,t,n){let r=!0;if((pn(e)||pn(t))&&(r=!1),pn(e)&&pn(t)&&(r=!0),r){let o=e.constructor.name,i=t.constructor.name;if(o!==i)throw new Error(`Arrays are of different type. Actual: ${o}. Expected: ${i}`)}if(Array.isArray(e)&&Array.isArray(t)){let o=Jr(e),i=Jr(t);if(!Ks(o,i))throw new Error(`Arrays have different shapes. Actual: [${o}]. Expected: [${i}]`)}let s=pn(e)?e:La(e),a=pn(t)?t:La(t);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.
Actual:   ${s}.
Expected: ${a}.`);for(let o=0;o<a.length;++o){let i=s[o],c=a[o];if(!n(i,c))throw new Error(`Arrays differ: actual[${o}] = ${i}, expected[${o}] = ${c}.
Actual:   ${s}.
Expected: ${a}.`)}}function aR(e,t){e().then(()=>t.fail(),()=>t())}function oR(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Xs(e)||Xs(e[0])||Xs(t)||Xs(t[0])?Cy(e,n,(r,s)=>r==s):Cy(e,t,(r,s)=>Ny(r,s,0))}function iR(e,t,n){if(n==null&&(n=Ty()),!Ny(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Ny(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function cR(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function uR(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function Tk(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?Tk(n):e[t]=Hl(n)}return e}var lR="3.12.0";function dR(){Q().set("PROD",!0)}function pR(){Q().set("DEBUG",!0)}function hR(){Q().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function _y(e){Q().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}FF(_y);function fR(){z.disposeVariables()}function ks(){return z}function Wh(){return z.memory()}function mR(e){return z.profile(e)}function M(e,t){return z.tidy(e,t)}function Fe(e){ay(e).forEach(n=>n.dispose())}function Zt(e){return z.keep(e)}function gR(e){return z.time(e)}function bR(e){return z.setBackend(e)}function yR(){return z.ready()}function vR(){return z.backendName}function xR(e){z.removeBackend(e)}function wR(e){return z.findBackend(e)}function kR(e){return z.findBackendFactory(e)}function Vh(e,t,n=1){return z.registerBackend(e,t,n)}function Ck(){return z.backend}function IR(e,t){Q().setPlatform(e,t)}function SR(e,t){let n=A(e,"a","add"),r=A(t,"b","add");[n,r]=_t(n,r);let s={a:n,b:r};return z.runKernel(Zs,s)}var Y=W({add_:SR});function TR(e,t){let n=A(e,"a","floorDiv"),r=A(t,"b","floorDiv");[n,r]=_t(n,r);let s={a:n,b:r};return z.runKernel(to,s)}var Uh=W({floorDiv_:TR});function CR(e,t){let n=A(e,"a","div"),r=A(t,"b","div");if([n,r]=_t(n,r),n.dtype==="int32"&&r.dtype==="int32")return Uh(n,r);let s={a:n,b:r},a={};return z.runKernel(Za,s,a)}var me=W({div_:CR});function NR(e,t){let n=A(e,"a","mul"),r=A(t,"b","mul");[n,r]=_t(n,r);let s={a:n,b:r};return z.runKernel(mo,s)}var V=W({mul_:NR});function _R(e){let t=A(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return z.runKernel(Cl,n)}else{let n={x:t};return z.runKernel(Yi,n)}}var Bt=W({abs_:_R});function ER(e){let n={x:A(e,"x","acos")};return z.runKernel(Zi,n)}var Ey=W({acos_:ER});function AR(e){let n={x:A(e,"x","acosh")};return z.runKernel(Ji,n)}var Ay=W({acosh_:AR});function DR(e){P(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),P(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((s,a)=>A(s,`tensors${a}`,"addN")),n=t[0];t.forEach(s=>{if(s.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(s=>{if(!Ks(s.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let r=t;return z.runKernel(Ba,r)}var Nk=W({addN_:DR});function FR(e,t=null,n=!1){let s={x:A(e,"x","all","bool")},a={axis:t,keepDims:n};return z.runKernel(Qi,s,a)}var Gh=W({all_:FR});function $R(e,t=null,n=!1){let s={x:A(e,"x","any","bool")},a={axis:t,keepDims:n};return z.runKernel(ec,s,a)}var Ql=W({any_:$R});function RR(e,t=0){let r={x:A(e,"x","argMax")},s={axis:t};return z.runKernel(za,r,s)}var qo=W({argMax_:RR});function PR(e,t=0){let r={x:A(e,"x","argMin")},s={axis:t};return z.runKernel(Sl,r,s)}var Dy=W({argMin_:PR});function OR(e){let n={x:A(e,"x","asin")};return z.runKernel(tc,n)}var Fy=W({asin_:OR});function MR(e){let n={x:A(e,"x","asinh")};return z.runKernel(nc,n)}var $y=W({asinh_:MR});function LR(e){let n={x:A(e,"x","atan")};return z.runKernel(rc,n)}var Ry=W({atan_:LR});function BR(e,t){let n=A(e,"a","atan2"),r=A(t,"b","atan2");[n,r]=_t(n,r);let s={a:n,b:r};return z.runKernel(ac,s)}var Py=W({atan2_:BR});function zR(e){let n={x:A(e,"x","atanh")};return z.runKernel(sc,n)}var Oy=W({atanh_:zR});function WR(e,t,n,r,s="NHWC",a){let o=e[3],i=[...t,o],c=Ak(s);return ed(e,i,n,a,r,null,null,c)}function _k(e,t,n,r,s,a,o="channelsLast"){let[i,c]=Hh(t),l;if(o==="channelsLast")l=[i,c,e[3],e[3]];else if(o==="channelsFirst")l=[i,c,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return ed(e,l,n,r,s,a,!1,o)}function VR(e,t,n,r,s,a,o="NDHWC"){let[i,c,l]=Ly(t),u,d;if(o==="NDHWC")d="channelsLast",u=[i,c,l,e[4],e[4]];else if(o==="NCDHW")d="channelsFirst",u=[i,c,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return Ek(e,u,n,r,s,!1,d,a)}function ed(e,t,n,r,s,a,o=!1,i="channelsLast"){let[c,l,u,d]=[-1,-1,-1,-1];if(i==="channelsLast")[c,l,u,d]=e;else if(i==="channelsFirst")[c,d,l,u]=e;else throw new Error(`Unknown dataFormat ${i}`);let[p,h,,f]=t,[m,g]=Hh(n),[b,y]=Hh(r),v=au(p,b),x=au(h,y),{padInfo:w,outHeight:T,outWidth:C}=HR(s,l,u,m,g,v,x,a,i),D=o?f*d:f,F;return i==="channelsFirst"?F=[c,D,T,C]:i==="channelsLast"&&(F=[c,T,C,D]),{batchSize:c,dataFormat:i,inHeight:l,inWidth:u,inChannels:d,outHeight:T,outWidth:C,outChannels:D,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:h,effectiveFilterHeight:v,effectiveFilterWidth:x,dilationHeight:b,dilationWidth:y,inShape:e,outShape:F,filterShape:t}}function Ek(e,t,n,r,s,a=!1,o="channelsLast",i){let[c,l,u,d,p]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[c,l,u,d,p]=e;else if(o==="channelsFirst")[c,p,l,u,d]=e;else throw new Error(`Unknown dataFormat ${o}`);let[h,f,m,,g]=t,[b,y,v]=Ly(n),[x,w,T]=Ly(r),C=au(h,x),D=au(f,w),F=au(m,T),{padInfo:O,outDepth:$,outHeight:R,outWidth:N}=jR(s,l,u,d,b,y,v,C,D,F,i),L=a?g*p:g,G;return o==="channelsFirst"?G=[c,L,$,R,N]:o==="channelsLast"&&(G=[c,$,R,N,L]),{batchSize:c,dataFormat:o,inDepth:l,inHeight:u,inWidth:d,inChannels:p,outDepth:$,outHeight:R,outWidth:N,outChannels:L,padInfo:O,strideDepth:b,strideHeight:y,strideWidth:v,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:C,effectiveFilterHeight:D,effectiveFilterWidth:F,dilationDepth:x,dilationHeight:w,dilationWidth:T,inShape:e,outShape:G,filterShape:t}}function UR(e,t,n,r,s){r==null&&(r=My(e,t,n));let a=e[0],o=e[1],i=Ko((a-t+2*r)/n+1,s),c=Ko((o-t+2*r)/n+1,s);return[i,c]}function GR(e,t,n,r,s,a){s==null&&(s=My(e,t,r));let o=e[0],i=e[1],c=e[2],l=Ko((o-t+2*s)/r+1,a),u=Ko((i-t+2*s)/r+1,a),d=Ko((c-t+2*s)/r+1,a);return[l,u,d,n]}function My(e,t,n,r=1){let s=au(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function Hh(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function Ly(e){return typeof e=="number"?[e,e,e]:e}function au(e,t){return t<=1?e:e+(e-1)*(t-1)}function HR(e,t,n,r,s,a,o,i,c){let l,u,d;if(typeof e=="number"){l={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let h=UR([t,n],a,r,e,i);u=h[0],d=h[1]}else if(e==="same"){u=Math.ceil(t/r),d=Math.ceil(n/s);let p=Math.max(0,(u-1)*r+a-t),h=Math.max(0,(d-1)*s+o-n),f=Math.floor(p/2),m=p-f,g=Math.floor(h/2),b=h-g;l={top:f,bottom:m,left:g,right:b,type:"SAME"}}else if(e==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-a+1)/r),d=Math.ceil((n-o+1)/s);else if(typeof e=="object"){let p=c==="channelsLast"?e[1][0]:e[2][0],h=c==="channelsLast"?e[1][1]:e[2][1],f=c==="channelsLast"?e[2][0]:e[3][0],m=c==="channelsLast"?e[2][1]:e[3][1];l={top:p,bottom:h,left:f,right:m,type:p===0&&h===0&&f===0&&m===0?"VALID":"EXPLICIT"},u=Ko((t-a+p+h)/r+1,i),d=Ko((n-o+f+m)/s+1,i)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:l,outHeight:u,outWidth:d}}function jR(e,t,n,r,s,a,o,i,c,l,u){let d,p,h,f;if(typeof e=="number"){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let g=GR([t,n,r,1],i,1,s,e,u);p=g[0],h=g[1],f=g[2]}else if(e==="same"){p=Math.ceil(t/s),h=Math.ceil(n/a),f=Math.ceil(r/o);let m=(p-1)*s+i-t,g=(h-1)*a+c-n,b=(f-1)*o+l-r,y=Math.floor(m/2),v=m-y,x=Math.floor(g/2),w=g-x,T=Math.floor(b/2),C=b-T;d={top:x,bottom:w,left:T,right:C,front:y,back:v,type:"SAME"}}else if(e==="valid")d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-i+1)/s),h=Math.ceil((n-c+1)/a),f=Math.ceil((r-l+1)/o);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:d,outDepth:p,outHeight:h,outWidth:f}}function Ko(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function ca(e){let[t,n,r]=Hh(e);return t===1&&n===1&&r===1}function Qr(e,t){return ca(e)||ca(t)}function Ak(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function vn(e,t,n){if(n!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if(typeof t=="number")P(qi(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if(typeof t=="object")t.forEach(r=>{r.forEach(s=>{P(qi(s),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${s}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function qR(e,t){let r={x:A(e,"x","reshape","string_or_numeric")},s={shape:t};return z.runKernel(Pc,r,s)}var U=W({reshape_:qR});function KR(e,t,n,r,s){let a=A(e,"x","avgPool","float32"),o=1;P(Qr(n,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);let i=a,c=!1;a.rank===3&&(c=!0,i=U(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),vn("avgPool",r,s);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},d=z.runKernel(Wa,l,u);return d=ce(d,a.dtype),c?U(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var lr=W({avgPool_:KR});function XR(e,t,n,r,s,a="NDHWC"){let o=A(e,"x","avgPool3d","float32"),i=o,c=!1;o.rank===4&&(c=!0,i=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),P(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),P(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),vn("avgPool3d",r,s);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},d=z.runKernel(Tl,l,u);return d=ce(d,i.dtype),c?U(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var By=W({avgPool3d_:XR});function YR(e,t=0){P(e.length>=1,()=>"Pass at least one tensor to concat");let n=Zl(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),n.length===1)return ws(n[0]);let r=n,s={axis:t};return z.runKernel(ic,r,s)}var et=W({concat_:YR});function ZR(e){let n={x:A(e,"x","sigmoid","float32")};return z.runKernel(No,n)}var dr=W({sigmoid_:ZR});function JR(e,t,n){let r=A(e,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");let s={x:r},a={begin:t,size:n};return z.runKernel(Bc,s,a)}var ze=W({slice_:JR});function QR(e){let n={x:A(e,"x","tanh","float32")};return z.runKernel(Ro,n)}var Xo=W({tanh_:QR});function eP(e,t,n,r,s,a){let o=A(e,"forgetBias","basicLSTMCell"),i=A(t,"lstmKernel","basicLSTMCell"),c=A(n,"lstmBias","basicLSTMCell"),l=A(r,"data","basicLSTMCell"),u=A(s,"c","basicLSTMCell"),d=A(a,"h","basicLSTMCell"),p=et([l,d],1),h=De(p,i),f=Y(h,c),m=f.shape[0],g=f.shape[1]/4,b=[m,g],y=ze(f,[0,0],b),v=ze(f,[0,g],b),x=ze(f,[0,g*2],b),w=ze(f,[0,g*3],b),T=Y(V(dr(y),Xo(v)),V(u,dr(Y(o,x)))),C=V(Xo(T),dr(w));return[T,C]}var tP=W({basicLSTMCell_:eP});function nP(e,t,n){let r=A(e,"x","batchToSpaceND"),s=t.reduce((i,c)=>i*c);P(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),P(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),P(r.shape[0]%s==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`);let a={x:r},o={blockShape:t,crops:n};return z.runKernel(oc,a,o)}var td=W({batchToSpaceND_:nP});function rP(e){let t;return e.rank===0||e.rank===1?t=U(e,[1,1,1,e.size]):e.rank===2?t=U(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function sP(e,t,n,r,s,a){a==null&&(a=.001);let o=A(e,"x","batchNorm"),i=A(t,"mean","batchNorm"),c=A(n,"variance","batchNorm"),l;s!=null&&(l=A(s,"scale","batchNorm"));let u;r!=null&&(u=A(r,"offset","batchNorm")),P(i.rank===c.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let p={x:rP(o),scale:l,offset:u,mean:i,variance:c},h={varianceEpsilon:a},f=z.runKernel(no,p,h);return U(f,o.shape)}var Is=W({batchNorm_:sP});function aP(e,t,n,r,s,a){let o=A(e,"x","batchNorm"),i=A(t,"mean","batchNorm"),c=A(n,"variance","batchNorm"),l;s!=null&&(l=A(s,"scale","batchNorm"));let u;return r!=null&&(u=A(r,"offset","batchNorm")),P(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),P(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),P(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${c.rank}.`),l!=null&&P(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&P(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Is(o,i,c,u,l,a)}var Dk=W({batchNorm2d_:aP});function oP(e,t,n,r,s,a){let o=A(e,"x","batchNorm"),i=A(t,"mean","batchNorm"),c=A(n,"variance","batchNorm"),l;s!=null&&(l=A(s,"scale","batchNorm"));let u;return r!=null&&(u=A(r,"offset","batchNorm")),P(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),P(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),P(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${c.rank}.`),l!=null&&P(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&P(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Is(o,i,c,u,l,a)}var Fk=W({batchNorm3d_:oP});function iP(e,t,n,r,s,a){let o=A(e,"x","batchNorm"),i=A(t,"mean","batchNorm"),c=A(n,"variance","batchNorm"),l;s!=null&&(l=A(s,"scale","batchNorm"));let u;return r!=null&&(u=A(r,"offset","batchNorm")),P(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),P(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),P(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${c.rank}.`),l!=null&&P(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&P(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Is(o,i,c,u,l,a)}var $k=W({batchNorm4d_:iP});function cP(e,t,n){let r=A(e,"x","bincount"),s=A(t,"weights","bincount");P(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),P(n>=0,()=>`size must be non-negative, but got ${n}.`),P(s.size===r.size||s.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);let a={x:r,weights:s},o={size:n};return z.runKernel(Qp,a,o)}var zy=W({bincount_:cP});function uP(e,t){let n=A(e,"s0","broadcastArgs","int32"),r=A(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let s={s0:n,s1:r};return z.runKernel(eh,s)}var Rk=W({broadcastArgs_:uP});function lP(e,t){let n=A(e,"broadcastTo","x"),r=n.shape;if(t.some(l=>!(l>0)||l%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let l=n.shape.slice();for(;l.length<t.length;)l.unshift(1);n=U(n,l)}let s=n.shape,a=Array.from(t);for(let l=t.length-1;l>=0;l--)if(s[l]===t[l])a[l]=1;else if(n.shape[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(a.map((l,u)=>l>1?u:-1).filter(l=>l>=0).length===0)return ws(n);let i={x:n},c={reps:a};return z.runKernel(Qs,i,c)}var ou=W({broadcastTo_:lP});function dP(e){let n={x:A(e,"x","ceil","float32")};return z.runKernel(Ga,n)}var Wy=W({ceil_:dP});function pP(e,t,n){let r=A(e,"x","clipByValue");P(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);let s={x:r},a={clipValueMin:t,clipValueMax:n};return z.runKernel(Js,s,a)}var Jt=W({clipByValue_:pP});function hP(e){return et(e,0)}var Pk=W({concat1d_:hP});function fP(e,t){return et(e,t)}var Ok=W({concat2d_:fP});function mP(e,t){return et(e,t)}var Mk=W({concat3d_:mP});function gP(e,t){return et(e,t)}var Lk=W({concat4d_:gP});function bP(e,t,n,r,s="NHWC",a=[1,1],o){let i=A(e,"x","conv2d","float32"),c=A(t,"filter","conv2d","float32"),l=i,u=!1;i.rank===3&&(u=!0,l=U(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),P(c.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${c.rank}.`),vn("conv2d",r,o);let d=s==="NHWC"?l.shape[3]:l.shape[1];P(d===c.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${c.shape[2]}.`),P(Qr(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let p={x:l,filter:c},h={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o},f=z.runKernel(Ha,p,h);return u?U(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Rt=W({conv2d_:bP});function yP(e,t,n,r,s="NWC",a=1,o){let i=A(e,"x","conv1d"),c=A(t,"filter","conv1d"),l=i,u=!1;i.rank===2&&(u=!0,l=U(i,[1,i.shape[0],i.shape[1]])),P(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),P(c.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${c.rank}.`),vn("conv1d",r,o),P(l.shape[2]===c.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${c.shape[1]}.`),P(Qr(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),P(s==="NWC",()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);let d=U(c,[1,c.shape[0],c.shape[1],c.shape[2]]),p=U(l,[l.shape[0],1,l.shape[1],l.shape[2]]),g=Rt(p,d,[1,n],r,"NHWC",[1,a],o);return u?U(g,[g.shape[2],g.shape[3]]):U(g,[g.shape[0],g.shape[2],g.shape[3]])}var jh=W({conv1d_:yP});function vP(e,t,n,r,s,a="NHWC",o){P(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,c=t,l=!1;t.rank===3&&(l=!0,c=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),P(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),P(c.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${c.rank}`),P(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let u=a==="NHWC"?i[3]:i[1],d=a==="NHWC"?c.shape[3]:c.shape[1];P(u===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[2]}.`),P(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),vn("conv2dDerInput",s,o);let p={dy:c,filter:n},h={strides:r,pad:s,dataFormat:a,dimRoundingMode:o,inputShape:i},f=z.runKernel(ja,p,h);return l?U(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Vy=W({conv2DBackpropInput_:vP});function xP(e,t,n,r,s,a){let o=A(e,"x","conv2dTranspose"),i=A(t,"filter","conv2dTranspose");return Vy(n,o,i,r,s,"NHWC",a)}var qh=W({conv2dTranspose_:xP});function wP(e,t,n,r,s="NDHWC",a=[1,1,1]){let o=A(e,"x","conv3d"),i=A(t,"filter","conv3d"),c=o,l=!1;o.rank===4&&(l=!0,c=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),P(c.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${c.rank}.`),P(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),P(c.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${c.shape[4]}) must match input depth for filter ${i.shape[3]}.`),P(Qr(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),P(s==="NDHWC",()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`);let u={x:c,filter:i},d={strides:n,pad:r,dataFormat:s,dilations:a},p=z.runKernel(Nl,u,d);return l?U(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Uy=W({conv3d_:wP});function kP(e,t,n,r,s){P(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,o=t,i=!1;t.rank===4&&(i=!0,o=U(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);let c=a[4],l=o.shape[4];P(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),P(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),P(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),P(c===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[3]}.`),P(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);let u={dy:o,filter:n},d={pad:s,strides:r,inputShape:a},p=z.runKernel(sh,u,d);return i?U(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Bk=W({conv3DBackpropInput_:kP});function IP(e,t,n,r,s){let a=A(e,"x","conv3dTranspose"),o=A(t,"filter","conv3dTranspose");return Bk(n,a,o,r,s)}var zk=W({conv3dTranspose_:IP});function SP(e){let n={x:A(e,"x","cos","float32")};return z.runKernel(qa,n)}var nd=W({cos_:SP});function TP(e){let n={x:A(e,"x","cosh","float32")};return z.runKernel(Ka,n)}var Kh=W({cosh_:TP});function CP(e,t=0,n=!1,r=!1){let a={x:A(e,"x","cumsum")},o={axis:t,exclusive:n,reverse:r};return z.runKernel(Xa,a,o)}var Xh=W({cumsum_:CP});function NP(e,t,n,r=!1){let s=A(e,"x","denseBincount"),a=A(t,"weights","denseBincount");P(s.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),P(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),P(n>=0,()=>`size must be non-negative, but got ${n}.`),P(a.size===s.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`);let o={x:s,weights:a},i={size:n,binaryOutput:r};return z.runKernel(ah,o,i)}var Wk=W({denseBincount_:NP});function _P(e,t,n="NHWC"){let r=A(e,"x","depthToSpace","float32"),s=n==="NHWC"?r.shape[1]:r.shape[2],a=n==="NHWC"?r.shape[2]:r.shape[3],o=n==="NHWC"?r.shape[3]:r.shape[1];P(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),P(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t}  for depthToSpace with input shape
    ${r.shape}`),P(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t} for depthToSpace with input shape
        ${r.shape}`),P(o%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`);let i={x:r},c={blockSize:t,dataFormat:n};return z.runKernel(uc,i,c)}var Gy=W({depthToSpace_:_P});function EP(e,t,n,r,s="NHWC",a=[1,1],o){let i=A(e,"x","depthwiseConv2d","float32"),c=A(t,"filter","depthwiseConv2d","float32"),l=i,u=!1;i.rank===3&&(u=!0,l=U(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),P(c.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`),P(l.shape[3]===c.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),vn("depthwiseConv2d",r,o);let d={x:l,filter:c},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o},h=z.runKernel(Ya,d,p);return u?U(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var ua=W({depthwiseConv2d_:EP});function AP(e){let n={x:A(e,"x","diag")};return z.runKernel(ch,n)}var DP=W({diag_:AP});function FP(e,t,n,r,s=[1,1],a="NHWC"){let o=A(e,"x","dilation2d"),i=A(t,"filter","dilation2d");P(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),P(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),P(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let c=o,l=!1;o.rank===3&&(c=U(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0);let u={x:c,filter:i},d={strides:n,pad:r,dilations:s},p=z.runKernel(_l,u,d);return l?U(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Hy=W({dilation2d_:FP});function $P(e,t){let n=A(e,"a","equal","string_or_numeric"),r=A(t,"b","equal","string_or_numeric");[n,r]=_t(n,r),pt(n.shape,r.shape);let s={a:n,b:r};return z.runKernel(dc,s)}var Xn=W({equal_:$P});function RP(e,t,n){let r=A(t,"a","where"),s=A(n,"b","where"),a=A(e,"condition","where","bool"),o=pt(pt(a.shape,r.shape),s.shape),i=ou(a,o),c=ou(r,o),l=ou(s,o),u={condition:i,t:c,e:l};return z.runKernel(Mc,u)}var hn=W({where_:RP});function PP(e){let n={x:A(e,"x","zerosLike")};return z.runKernel(Yc,n)}var Ge=W({zerosLike_:PP});function OP(e,t){let n=A(e,"a","div"),r=A(t,"b","div");[n,r]=_t(n,r);let s=me(n,r),a=Ge(s),o=Xn(r,a);return hn(o,a,s)}var jy=W({divNoNan_:OP});function MP(e,t){let n=A(e,"t1","dot"),r=A(t,"t2","dot");P((n.rank===1||n.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);let s=n.rank===1?n.size:n.shape[1],a=r.rank===1?r.size:r.shape[0];if(P(s===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`),n.rank===1&&r.rank===1){let o=U(n,[1,-1]),i=U(r,[-1,1]),c=De(o,i);return U(c,[])}else if(n.rank===1&&r.rank===2){let o=U(n,[1,-1]),i=U(r,[r.shape[0],r.shape[1]]),c=De(o,i);return U(c,[c.size])}else if(n.rank===2&&r.rank===1){let o=U(r,[-1,1]),i=De(n,o);return U(i,[i.size])}else{let o=U(r,[r.shape[0],r.shape[1]]);return De(n,o)}}var Vk=W({dot_:MP});function LP(e,...t){let n=t.map((s,a)=>A(s,`tensors${a}`,"einsum")),r={equation:e};return z.runKernel(dh,n,r)}var Uk=W({einsum_:LP});function BP(e){let n={x:A(e,"x","elu","float32")};return z.runKernel(Ja,n)}var iu=W({elu_:BP});function zP(e){let t=A(e,"x","erf");P(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=ce(t,"float32"));let n={x:t};return z.runKernel(lc,n)}var qy=W({erf_:zP});function WP(e){let n={x:A(e,"x","exp")};return z.runKernel(Qa,n)}var fn=W({exp_:WP});function VP(e,t=0){let n=A(e,"x","expandDims","string_or_numeric");P(t<=n.rank,()=>"Axis must be <= rank of the tensor");let r={input:n},s={dim:t};return z.runKernel(pc,r,s)}var mn=W({expandDims_:VP});function UP(e){let n={x:A(e,"x","expm1")};return z.runKernel(hc,n)}var Ky=W({expm1_:UP});function GP(e,t){let n=A(e,"x","tile","string_or_numeric");P(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let r={x:n},s={reps:t};return z.runKernel(Qs,r,s)}var Pn=W({tile_:GP});function HP(e,t,n,r="float32"){t==null&&(t=e);let s=Be([e,t],r),a=e<=t?e:t;for(let i=0;i<a;++i)s.set(1,i,i);let o=U(s.toTensor(),[e,t]);if(n==null)return o;if(n.length===1)return Pn(mn(o,0),[n[0],1,1]);if(n.length===2)return Pn(mn(mn(o,0),0),[n[0],n[1],1,1]);if(n.length===3)return Pn(mn(mn(mn(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var Xy=W({eye_:HP});function xn(e,t,n){let r={shape:e,value:t,dtype:n};return z.runKernel(El,{},r)}function jP(e){let n={x:A(e,"x","floor","float32")};return z.runKernel(eo,n)}var cu=W({floor_:jP});function qP(e,t,n=0,r=0){let s=A(e,"x","gather"),a=A(t,"indices","gather","int32"),o={x:s,indices:a},i={axis:n,batchDims:r};return z.runKernel(mc,o,i)}var Yo=W({gather_:qP});function KP(e,t){let n=A(e,"a","greater","string_or_numeric"),r=A(t,"b","greater","string_or_numeric");[n,r]=_t(n,r),pt(n.shape,r.shape);let s={a:n,b:r};return z.runKernel(bc,s)}var On=W({greater_:KP});function XP(e,t){let n=A(e,"a","greaterEqual","string_or_numeric"),r=A(t,"b","greaterEqual","string_or_numeric");[n,r]=_t(n,r),pt(n.shape,r.shape);let s={a:n,b:r};return z.runKernel(ro,s)}var la=W({greaterEqual_:XP});function YP(e){let n={input:A(e,"input","imag")};return z.runKernel(mh,n)}var Yh=W({imag_:YP});function ZP(e){let n={x:A(e,"x","isFinite")};return z.runKernel(yc,n)}var Gk=W({isFinite_:ZP});function JP(e){let n={x:A(e,"x","isInf")};return z.runKernel(vc,n)}var Hk=W({isInf_:JP});function QP(e){let n={x:A(e,"x","isNaN")};return z.runKernel(xc,n)}var Yy=W({isNaN_:QP});function eO(e,t=.2){let r={x:A(e,"x","leakyRelu")},s={alpha:t};return z.runKernel(ao,r,s)}var rd=W({leakyRelu_:eO});function tO(e,t){let n=A(e,"a","less","string_or_numeric"),r=A(t,"b","less","string_or_numeric");[n,r]=_t(n,r),pt(n.shape,r.shape);let s={a:n,b:r};return z.runKernel(wc,s)}var Zh=W({less_:tO});function nO(e,t){let n=A(e,"a","lessEqual","string_or_numeric"),r=A(t,"b","lessEqual","string_or_numeric");[n,r]=_t(n,r),pt(n.shape,r.shape);let s={a:n,b:r};return z.runKernel(kc,s)}var da=W({lessEqual_:nO});function jk(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return z.runKernel(gh,{},r)}function rO(e,t=5,n=1,r=1,s=.5){let a=A(e,"x","localResponseNormalization");P(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),P(qi(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=a,i=!1;a.rank===3&&(i=!0,o=U(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let c={x:o},l={depthRadius:t,bias:n,alpha:r,beta:s},u=z.runKernel(Fl,c,l);return i?U(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var Zy=W({localResponseNormalization_:rO});function sO(e){let n={x:A(e,"x","log","float32")};return z.runKernel(oo,n)}var Yn=W({log_:sO});function aO(e){let n={x:A(e,"x","log1p")};return z.runKernel(Ic,n)}var sd=W({log1p_:aO});function oO(e){return P(Ys(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let r=A(t,"x","tf.grad","string_or_numeric"),s=n!=null?A(n,"dy","tf.grad"):null;return z.tidy(()=>{let{value:a,grads:o}=z.gradients(()=>e(r),[r],s);return s!=null&&bn(a.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Jh(o),o[0]})}}function iO(e){return P(Ys(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{P(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let r=Zl(t,"args","tf.grads","string_or_numeric"),s=n!=null?A(n,"dy","tf.grads"):null;return z.tidy(()=>{let{value:a,grads:o}=z.gradients(()=>e(...r),r,s);return s!=null&&bn(a.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Jh(o),o})}}function cO(e){return P(Ys(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{P(t instanceof Ee,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),P(n==null||n instanceof Ee,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:r,value:s}=z.gradients(()=>e(t),[t],n);return Jh(r),{grad:r[0],value:s}}}function uO(e){return P(Ys(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{P(Array.isArray(t)&&t.every(s=>s instanceof Ee),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),P(n==null||n instanceof Ee,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let r=z.gradients(()=>e(...t),t,n);return n!=null&&bn(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Jh(r.grads),r}}function qk(e,t){P(Ys(e),()=>"The f passed in variableGrads(f) must be a function"),P(t==null||Array.isArray(t)&&t.every(l=>l instanceof ra),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let l in z.registeredVariables)t.push(z.registeredVariables[l])}let r=n?t.filter(l=>!l.trainable):null,s=t.length;t=t.filter(l=>l.trainable),P(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);let a=!0,{value:o,grads:i}=z.gradients(e,t,null,a);P(i.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),P(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);let c={};return t.forEach((l,u)=>{i[u]!=null&&(c[l.name]=i[u])}),r!=null&&r.forEach(l=>c[l.name]=null),{value:o,grads:c}}function es(e){return z.customGrad(e)}function Jh(e){if(e.filter(n=>n==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function lO(e){let n={x:A(e,"x","neg")};return z.runKernel(Cc,n)}var It=W({neg_:lO});function dO(e){let n={x:A(e,"x","softplus")};return z.runKernel(Vc,n)}var Zo=W({softplus_:dO});function pO(e){let t=A(e,"x","logSigmoid");return es(r=>({value:It(Zo(It(r))),gradFunc:o=>V(o,dr(It(r)))}))(t)}var Kk=W({logSigmoid_:pO});function hO(e,t=null,n=!1){let s={x:A(e,"x","max")},a={reductionIndices:t,keepDims:n};return z.runKernel(io,s,a)}var Tr=W({max_:hO});function fO(e,t){let n=A(e,"a","sub"),r=A(t,"b","sub");[n,r]=_t(n,r);let s={a:n,b:r};return z.runKernel(Fo,s)}var fe=W({sub_:fO});function mO(e,t=null,n=!1){let r=A(e,"x","sum");r.dtype==="bool"&&(r=ce(r,"int32"));let s={x:r},a={axis:t,keepDims:n};return z.runKernel(Eo,s,a)}var xe=W({sum_:mO});function gO(e,t=-1){let n=A(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return es((s,a)=>{let o=!0,i=Tr(s,t,!0),c=fe(s,i),l=fe(ce(c,"float32"),Yn(xe(fn(c),t,o)));return a([l]),{value:l,gradFunc:(d,p)=>{let[h]=p,f=!0,m=fn(h);return fe(d,V(xe(d,t,f),m))}}})(n)}var Qh=W({logSoftmax_:gO});function Jy(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Xk(e,t,n){let r=e.length+t.length,s=[],a=0,o=0;for(let i=0;i<r;i++)n.indexOf(i)===-1?s.push(e[a++]):s.push(t[o++]);return s}function Yk(e,t){let n=[],r=e.length;for(let a=0;a<r;a++)t.indexOf(a)===-1&&n.push(e[a]);let s=t.map(a=>e[a]);return[n,s]}function Jo(e,t){let n=t.map(r=>1);return Xk(e,n,t)}function bO(e,t,n){P(Jy(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function Zk(e,t){if(Jy(e,t))return null;let n=[];for(let r=0;r<t;++r)e.indexOf(r)===-1&&n.push(r);return e.forEach(r=>n.push(r)),n}function Qy(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function yO(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}function vO(e,t=null,n=!1){let r=A(e,"x","logSumExp"),s=Ir(t,r.shape),a=Tr(r,s,!0),o=fe(r,a),i=fn(o),c=xe(i,s),l=Yn(c),u=Y(U(a,l.shape),l);if(n){let d=Jo(u.shape,s);return U(u,d)}return u}var ev=W({logSumExp_:vO});function xO(e,t){let n=A(e,"a","logicalAnd","bool"),r=A(t,"b","logicalAnd","bool");pt(n.shape,r.shape);let s={a:n,b:r};return z.runKernel(Sc,s)}var Cr=W({logicalAnd_:xO});function wO(e){let n={x:A(e,"x","logicalNot","bool")};return z.runKernel(Al,n)}var ad=W({logicalNot_:wO});function kO(e,t){let n=A(e,"a","logicalOr","bool"),r=A(t,"b","logicalOr","bool");pt(n.shape,r.shape);let s={a:n,b:r};return z.runKernel(Dl,s)}var ef=W({logicalOr_:kO});function IO(e,t){let n=A(e,"a","logicalXor","bool"),r=A(t,"b","logicalXor","bool");return pt(n.shape,r.shape),Cr(ef(e,t),ad(Cr(e,t)))}var Jk=W({logicalXor_:IO});function SO(e,t,n,r,s){let a=A(e,"x","maxPool"),o=1,i=a,c=!1;a.rank===3&&(c=!0,i=U(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),P(Qr(n,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),vn("maxPool",r,s);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},d=z.runKernel(uo,l,u);return c?U(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Pt=W({maxPool_:SO});function TO(e,t=[1,1,1],n,r,s,a="NDHWC"){let o=A(e,"x","maxPool3d"),i=o,c=!1;o.rank===4&&(c=!0,i=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),P(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),P(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),vn("maxPool3d",r,s);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},d=z.runKernel($l,l,u);return c?U(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var tv=W({maxPool3d_:TO});function CO(e,t,n,r,s=!1){let o={x:A(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},c=z.runKernel(xh,o,i);return{result:c[0],indexes:c[1]}}var Qk=W({maxPoolWithArgmax_:CO});function NO(e,t){let n=A(e,"a","maximum"),r=A(t,"b","maximum");[n,r]=_t(n,r),n.dtype==="bool"&&(n=ce(n,"int32"),r=ce(r,"int32")),pt(n.shape,r.shape);let s={a:n,b:r};return z.runKernel(co,s)}var ts=W({maximum_:NO});function _O(e,t=null,n=!1){let s={x:A(e,"x","mean")},a={axis:t,keepDims:n};return z.runKernel(lo,s,a)}var Et=W({mean_:_O});function St(e,t="float32"){if(t==="complex64"){let r=St(e,"float32"),s=St(e,"float32");return sa(r,s)}let n=Yp(yt(e),t);return z.makeTensor(n,e,t)}function Zn(e,t="float32"){if(t==="complex64"){let r=Zn(e,"float32"),s=St(e,"float32");return sa(r,s)}let n=Gb(yt(e),t);return z.makeTensor(n,e,t)}function EO(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let r=A(e,"x","meshgrid",e instanceof Ee?e.dtype:"float32");if(t===void 0)return[r];let s=A(t,"y","meshgrid",t instanceof Ee?t.dtype:"float32"),a=yt(r.shape),o=yt(s.shape);return n==="xy"?(r=U(r,[1,-1]),s=U(s,[-1,1]),[De(Zn([o,1],r.dtype),r),De(s,Zn([1,a],s.dtype))]):(r=U(r,[-1,1]),s=U(s,[1,-1]),[De(r,Zn([1,o],r.dtype)),De(Zn([a,1],s.dtype),s)])}function AO(e,t=null,n=!1){let s={x:A(e,"x","min")},a={axis:t,keepDims:n};return z.runKernel(po,s,a)}var od=W({min_:AO});function DO(e,t){let n=A(e,"a","minimum"),r=A(t,"b","minimum");[n,r]=_t(n,r),n.dtype==="bool"&&(n=ce(n,"int32"),r=ce(r,"int32")),pt(n.shape,r.shape);let s={a:n,b:r};return z.runKernel(ho,s)}var uu=W({minimum_:DO});function FO(e,t,n){P(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let r=A(e,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");P(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);let s=n==="reflect"?1:0;for(let i=0;i<r.rank;i++)P(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),P(t[i][0]>=0&&t[i][0]<=r.shape[i]-s&&t[i][1]>=0&&t[i][1]<=r.shape[i]-s,()=>`Padding in dimension ${i} cannot be greater than or equal to ${r.shape[i]-s} or less than 0 for input of shape ${r.shape}`);let a={paddings:t,mode:n},o={x:r};return z.runKernel(fo,o,a)}var nv=W({mirrorPad_:FO});function $O(e,t){let n=A(e,"a","mod"),r=A(t,"b","mod");[n,r]=_t(n,r);let s={a:n,b:r};return z.runKernel(Tc,s)}var rv=W({mod_:$O});function RO(e){let t=A(e,"x","square"),n={};return z.runKernel("Square",{x:t},n)}var ct=W({square_:RO});function PO(e,t=null,n=!1){e=A(e,"x","moments");let r=Ir(t,e.shape),s=Et(e,r,n),a=s.shape;n||(a=Jo(s.shape,r));let o=ct(fe(ce(e,"float32"),U(s,a))),i=Et(o,r,n);return{mean:s,variance:i}}var tf=W({moments_:PO});function OO(e,t,n,r){let s=A(t,"data","multiRNNCell"),a=Zl(n,"c","multiRNNCell"),o=Zl(r,"h","multiRNNCell"),i=s,c=[];for(let d=0;d<e.length;d++){let p=e[d](i,a[d],o[d]);c.push(p[0]),c.push(p[1]),i=p[1]}let l=[],u=[];for(let d=0;d<c.length;d+=2)l.push(c[d]),u.push(c[d+1]);return[l,u]}var MO=W({multiRNNCell_:OO});function LO(e,t,n,r=!1){let s=A(e,"logits","multinomial"),a=s.size,o=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();let c={logits:o===1?U(s,[1,-1]):s},l={numSamples:t,seed:n,normalized:r},u=z.runKernel(wh,c,l);return o===1?U(u,[u.size]):u}var eI=W({multinomial_:LO});function BO(e,t){let n=A(e,"a","notEqual","string_or_numeric"),r=A(t,"b","notEqual","string_or_numeric");[n,r]=_t(n,r),pt(n.shape,r.shape);let s={a:n,b:r};return z.runKernel(Nc,s)}var Qo=W({notEqual_:BO});function zO(e){let n={x:A(e,"x","onesLike")};return z.runKernel(Dc,n)}var Jn=W({onesLike_:zO});function WO(e,t){let n=A(e,"v1","outerProduct"),r=A(t,"v2","outerProduct");P(n.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);let s=U(n,[-1,1]),a=U(r,[1,-1]);return De(s,a)}var VO=W({outerProduct_:WO});function UO(e,t,n=0){let r=A(e,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let s={paddings:t,constantValue:n},a={x:r};return z.runKernel(bo,a,s)}var pr=W({pad_:UO});function GO(e,t,n=0){return P(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),pr(e,[t],n)}var HO=W({pad1d_:GO});function jO(e,t,n=0){return P(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),pr(e,t,n)}var qO=W({pad2d_:jO});function KO(e,t,n=0){return P(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),pr(e,t,n)}var XO=W({pad3d_:KO});function YO(e,t,n=0){return P(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),pr(e,t,n)}var ZO=W({pad4d_:YO});function JO(e,t,n){let r=A(e,"x","spaceToBatchND");P(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),P(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),P(r.shape.reduce((o,i,c)=>c>0&&c<=t.length?o&&(i+n[c-1][0]+n[c-1][1])%t[c-1]==0:o,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let s={x:r},a={blockShape:t,paddings:n};return z.runKernel(Uc,s,a)}var id=W({spaceToBatchND_:JO});function QO(e,t,n,r,s,a,o){s==null&&(s=[1,1]),a==null&&(a=1),r===0&&(r="valid");let i=A(e,"x","maxPool"),c=i,l=!1;i.rank===3&&(l=!0,c=U(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(Qr(a,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);let u=_k(c.shape,t,a,s,r),d=[u.dilationHeight,u.dilationWidth],p;r==="same"?p=t3([u.filterHeight,u.filterWidth],d):p=[[0,0],[0,0]];let h=d[0]===1&&d[1]===1,[f,m]=e3([u.inHeight,u.inWidth],d,p),g=h?r:"valid",b=h?c:id(c,d,f),v=(n==="avg"?()=>lr(b,t,a,g,o):()=>Pt(b,t,a,g,o))(),x=h?v:td(v,d,m);return l?U(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function e3(e,t,n){let r=n.map(u=>u[0]),s=n.map(u=>u[1]),a=e.concat(r,s),o=t.map((u,d)=>(u-a[d]%u)%u),i=s.map((u,d)=>u+o[d]),c=t.map((u,d)=>[r[d],i[d]]),l=t.map((u,d)=>[0,o[d]]);return[c,l]}function t3(e,t){let r=e.map((o,i)=>o+(o-1)*(t[i]-1)).map(o=>o-1),s=r.map(o=>Math.floor(o/2)),a=r.map((o,i)=>o-s[i]);return r.map((o,i)=>[s[i],a[i]])}var tI=W({pool_:QO});function n3(e,t){let n=A(e,"base","pow"),r=A(t,"exp","pow");[n,r]=_t(n,r);let s={a:n,b:r};return z.runKernel(yo,s)}var Ss=W({pow_:n3});function r3(e,t){let n=A(e,"x","prelu"),r=A(t,"alpha","prelu"),s={x:n,alpha:r};return z.runKernel(vo,s)}var cd=W({prelu_:r3});function s3(e,t=null,n=!1){let r=A(e,"x","prod");r.dtype==="bool"&&(r=ce(r,"int32"));let s={x:r},a={axis:t,keepDims:n};return z.runKernel($c,s,a)}var nf=W({prod_:s3});function a3(e,t,n){let r=yt(e),s=null;if(n==null||n==="float32")s=new Float32Array(r);else if(n==="int32")s=new Int32Array(r);else if(n==="bool")s=new Uint8Array(r);else throw new Error(`Unknown data type ${n}`);for(let a=0;a<r;a++)s[a]=t();return z.makeTensor(s,e,n)}var o3=W({rand_:a3}),sv=Oa(d0()),av=class{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=s||Math.random();this.random=sv.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let r=this.nextVal;return this.nextVal=NaN,r}let e,t,n=!1;for(;!n;){let r,s,a;do r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s;while(a>=1||a===0);let o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*s*o,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},i3=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let s=r||Math.random();this.randu=sv.alea(s.toString()),this.randn=new av(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do r=this.randn.nextValue(),a=1+this.c*r;while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},c3=class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=sv.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function u3(e,t,n=1,r="float32",s){if(n==null&&(n=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);let a=new i3(t,n,r,s),o=Be(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var l3=W({randomGamma_:u3});function d3(e,t=0,n=1,r,s){if(r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);let a=new av(t,n,r,!1,s),o=Be(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var nI=W({randomNormal_:d3});function p3(e,t=0,n=1,r="float32",s){let a=Be(e,r),o=new c3(t,n,null,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}var lu=W({randomUniform_:p3});function du(e,t,n=1,r="float32"){if(n===0)throw new Error("Cannot have a step of zero");let s={start:e,stop:t,step:n,dtype:r};return z.runKernel(Rl,{},s)}function h3(e){let n={input:A(e,"input","real")};return z.runKernel(kh,n)}var ud=W({real_:h3});function f3(e){let n={x:A(e,"x","reciprocal")};return z.runKernel(Rc,n)}var ov=W({reciprocal_:f3});function m3(e){let n={x:A(e,"x","relu")};return z.runKernel(xo,n)}var qe=W({relu_:m3});function g3(e){let n={x:A(e,"x","relu6")};return z.runKernel(ko,n)}var rf=W({relu6_:g3});function b3(e,t){let r={x:A(e,"x","reverse")},s={dims:t};return z.runKernel(Io,r,s)}var Qn=W({reverse_:b3});function y3(e){let t=A(e,"x","reverse");return P(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Qn(t,0)}var v3=W({reverse1d_:y3});function x3(e,t){let n=A(e,"x","reverse");return P(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Qn(n,t)}var w3=W({reverse2d_:x3});function k3(e,t){let n=A(e,"x","reverse");return P(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Qn(n,t)}var I3=W({reverse3d_:k3});function S3(e,t){let n=A(e,"x","reverse");return P(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Qn(n,t)}var T3=W({reverse4d_:S3});function C3(e){let n={x:A(e,"x","round")};return z.runKernel(So,n)}var sf=W({round_:C3});function N3(e){let n={x:A(e,"x","rsqrt","float32")};return z.runKernel(To,n)}var af=W({rsqrt_:N3});function Ie(e,t){if((pn(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&pn(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return aa(e,[],[],t)}function _3(e){let n={x:A(e,"x","selu")};return z.runKernel(Lc,n)}var of=W({selu_:_3});function E3(e,t,n,r,s,a=[1,1],o="NHWC"){let i=A(e,"x","separableConv2d"),c=A(t,"depthwiseFilter","separableConv2d"),l=A(n,"pointwiseFilter","separableConv2d"),u=i,d=!1;if(i.rank===3&&(d=!0,u=U(i,[1,i.shape[0],i.shape[1],i.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");P(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),P(c.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${c.rank}.`),P(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${c.rank}.`),P(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),P(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);let p=c.shape[2],h=c.shape[3];P(l.shape[2]===p*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*h}, but got ${l.shape[2]}.`);let f=ua(u,c,r,s,o,a),g=Rt(f,l,1,"valid",o);return d?U(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var ei=W({separableConv2d_:E3});async function A3(e,t){let n=A(e,"x","setdiff1d"),r=A(t,"y","setdiff1d");P(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),P(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),P(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);let s=await n.data(),a=await r.data(),o=new Set(a),i=0;for(let u=0;u<s.length;u++)o.has(s[u])||i++;let c=new Ut([i],n.dtype),l=new Ut([i],"int32");for(let u=0,d=0;u<s.length;u++)o.has(s[u])||(c.values[d]=s[u],l.values[d]=u,d++);return[c.toTensor(),l.toTensor()]}var rI=A3;function D3(e){let n={x:A(e,"x","sign")};return z.runKernel(Wc,n)}var iv=W({sign_:D3});function F3(e){let n={x:A(e,"x","sin","float32")};return z.runKernel(Co,n)}var cf=W({sin_:F3});function $3(e){let n={x:A(e,"x","sinh")};return z.runKernel(zc,n)}var uf=W({sinh_:$3});function R3(e,t,n){let r=A(e,"x","slice1d");return P(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),ze(r,[t],[n])}var lf=W({slice1d_:R3});function P3(e,t,n){let r=A(e,"x","slice2d");return P(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),ze(r,t,n)}var cv=W({slice2d_:P3});function O3(e,t,n){let r=A(e,"x","slice3d");return P(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),ze(r,t,n)}var pu=W({slice3d_:O3});function M3(e,t,n){let r=A(e,"x","slice4d");return P(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),ze(r,t,n)}var ld=W({slice4d_:M3});function L3(e,t=-1){let n=A(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},s={dim:t};return z.runKernel(Ao,r,s)}var Mr=W({softmax_:L3});function B3(e){P(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return z.runKernel(hh,t)}var dd=W({fft_:B3});function z3(e){P(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return z.runKernel(fh,t)}var hu=W({ifft_:z3});function W3(e){let t=e.shape[e.shape.length-1],n=e.size/t,r;if(t<=2){let s=U(e,[n,t]);r=hu(s)}else{let s=[n,2*(t-1)],a=U(ud(e),[n,t]),o=U(Yh(e),[n,t]),i=Qn(ze(a,[0,1],[n,t-2]),1),c=V(Qn(ze(o,[0,1],[n,t-2]),1),Ie(-1)),l=et([a,i],1),u=et([o,c],1),d=U(sa(l,u),[s[0],s[1]]);r=hu(d)}if(r=ud(r),e.rank===3&&e.shape[0]!==0){let s=r,a=e.shape[0];r=U(r,[a,r.shape[0]/a,r.shape[1]]),s.dispose()}return r}var df=W({irfft_:W3});function V3(e,t,n=0){let s={x:A(e,"x","split")},a={numOrSizeSplits:t,axis:n};return z.runKernel(Gc,s,a)}var Mn=W({split_:V3});function U3(e,t){P(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],r=e.size/n,s;if(t!=null&&t<n){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,s=ze(e,f,m),n=t}else if(t!=null&&t>n){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,s=et([e,St(f)],e.shape.length-1),n=t}else s=e;let a=Ge(s),o=U(sa(s,a),[r,n]),i=dd(o),c=Math.floor(n/2)+1,l=ud(i),u=Yh(i),d=Mn(l,[c,n-c],l.shape.length-1),p=Mn(u,[c,n-c],u.shape.length-1),h=s.shape.slice();return h[s.shape.length-1]=c,U(sa(d[0],p[0]),h)}var pd=W({rfft_:U3});function G3(e){let n={x:A(e,"x","sqrt","float32")};return z.runKernel(_o,n)}var an=W({sqrt_:G3});function H3(e,t){let n=A(e,"a","squaredDifference"),r=A(t,"b","squaredDifference");[n,r]=_t(n,r),pt(n.shape,r.shape);let s={a:n,b:r},a={};return z.runKernel(Do,s,a)}var pf=W({squaredDifference_:H3});function j3(e,t){let n=A(e,"x","squeeze");return U(n,m0(n.shape,t).newShape)}var ns=W({squeeze_:j3});function q3(e,t=0){let n=Zl(e,"tensors","stack","string_or_numeric");P(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&P(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let r=n,s={axis:t};return z.runKernel(Fc,r,s)}var Ot=W({stack_:q3});function K3(e,t=0){let r={x:A(e,"x","step")},s={alpha:t};return z.runKernel(ea,r,s)}var fu=W({step_:K3});function X3(e,t,n,r,s=0,a=0,o=0,i=0,c=0){let u={x:A(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:c};return z.runKernel(jc,u,d)}var uv=W({stridedSlice_:X3});function Y3(e){let n={x:A(e,"x","tan","float32")};return z.runKernel($o,n)}var lv=W({tan_:Y3});function He(e,t){Ma(e);let n=Jr(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return aa(e,null,n,t)}function Lr(e,t,n){if(Ma(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let r=Jr(e,n);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return aa(e,t,r,n)}function Br(e,t,n){if(Ma(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let r=Jr(e,n);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return aa(e,t,r,n)}function Z3(e,t,n){if(Ma(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let r=Jr(e,n);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return aa(e,t,r,n)}function J3(e,t,n){if(Ma(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let r=Jr(e,n);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,aa(e,t,r,n)}function Q3(e,t=1,n=!0){let r=A(e,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);let a={x:r},o={k:t,sorted:n},[i,c]=z.runKernel(qc,a,o);return{values:i,indices:c}}var dv=W({topk_:Q3});function eM(e,t=0,n=1,r,s){if(r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");let a=new av(t,n,r,!0,s),o=Be(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var hf=W({truncatedNormal_:eM});function tM(e,t=0){let n=A(e,"x","unique","string_or_numeric");P(n.rank>0,()=>"The input tensor must be at least 1D");let r={x:n},s={axis:t},[a,o]=z.runKernel(Eh,r,s);return{values:a,indices:o}}var ff=W({unique_:tM});function nM(e,t,n){let r=A(e,"x","unsortedSegmentSum"),s=A(t,"segmentIds","unsortedSegmentSum","int32");P(qi(n),()=>"numSegments must be of dtype int");let a={x:r,segmentIds:s},o={numSegments:n};return z.runKernel(zl,a,o)}var pv=W({unsortedSegmentSum_:nM});function rM(e,t=0){let n=A(e,"x","unstack","string_or_numeric");P(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let r={value:n},s={axis:t};return z.runKernel(Xc,r,s)}var ht=W({unstack_:rM});function sI(e,t=!0,n,r){return z.makeVariable(e,t,n,r)}function aI(e,t){let n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);let r=Be(e,"int32"),s=Be([n.length,e.length],"int32");for(let a=0;a<n.length;a++){let o=r.indexToLoc(n[a]),i=a*e.length;s.values.set(o,i)}return s.toTensor()}async function sM(e){let t=A(e,"condition","whereAsync","bool"),n=await t.data(),r=aI(t.shape,n);return e!==t&&t.dispose(),r}var hv=sM;async function aM(e,t,n){let r=A(e,"tensor","boolMask"),s=A(t,"mask","boolMask","bool"),a=n==null?0:n,o=s.rank,i=r.shape;P(o>0,()=>"mask cannot be scalar"),bn(i.slice(a,a+o),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let m=a;m<a+o;m++)c*=i[m];let l=i.slice(0,a).concat([c],i.slice(a+o)),u=U(r,l),d=U(s,[-1]),p=await hv(d),h=ns(p,[1]),f=Yo(u,h,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),h.dispose(),u.dispose(),d.dispose(),p.dispose(),f}var oM=aM;function iM(e,t="euclidean",n=null,r=!1){e=A(e,"x","norm");let s=oI(e,t,n),a=s.shape;if(r){let o=Ir(n,e.shape);a=Jo(s.shape,o)}return U(s,a)}function oI(e,t,n=null){if(e.rank===0)return Bt(e);if(e.rank!==1&&n===null)return oI(U(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return xe(Bt(e),n);if(t===1/0)return Tr(Bt(e),n);if(t===-1/0)return od(Bt(e),n);if(t==="euclidean"||t===2)return an(xe(Ss(Bt(e),Ie(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return Tr(xe(Bt(e),n[0]),n[1]-1);if(t===1/0)return Tr(xe(Bt(e),n[1]),n[0]);if(t===-1/0)return od(xe(Bt(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return an(xe(ct(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var mf=W({norm_:iM});function cM(e,t,n,r,s=!0){let a=A(e,"v","movingAverage"),o=A(t,"x","movingAverage"),i=A(n,"decay","movingAverage");O0(a,o),P(Ks(a.shape,o.shape),()=>"Shape mismatch in v and x");let c=Ie(1),l=fe(c,i),u=V(fe(o,a),l);if(s){P(r!=null,()=>"When using zeroDebias: true, step is required.");let d=A(r,"step","movingAverage");u=me(u,fe(c,Ss(i,d)))}return Y(a,u)}var uM=W({movingAverage_:cM});function lM(e,t,n){let r=A(e,"indices","scatterND","int32"),s=A(t,"updates","scatterND");Iy(s,r,n);let a={indices:r,updates:s},o={shape:n};return z.runKernel(Oc,a,o)}var iI=W({scatterND_:lM});function dM(e,t,n,r){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);let o=t.size;if(!(t.rank===0||t.rank===1&&o===s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function pM(e,t,n,r=0){let s=A(e,"sparseIndices","sparseToDense","int32"),a=A(t,"sparseValues","sparseToDense"),o=A(r,"defaultValue","sparseToDense",a.dtype);dM(s,a,n,o);let i={sparseIndices:s,sparseValues:a,defaultValue:o},c={outputShape:n};return z.runKernel(Th,i,c)}var fv=W({sparseToDense_:pM});function hM(e,t){let n=A(t,"indices","gatherND","int32"),s={params:A(e,"x","gatherND","string_or_numeric"),indices:n};return z.runKernel(gc,s)}var cI=W({gatherND_:hM});function fM(e,t){if(t==null)return e.shape.slice();if(Ks(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)t[r]==null&&e.shape[r]!=null?n.push(e.shape[r]):n.push(t[r]);return n}return t}function mM(e,t,n,r){let s=A(e,"x","dropout");if(P(s.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),P(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof Ee?s.clone():s;let a=fM(s,n),o=1-t,i=me(cu(Y(lu(a,0,1,"float32",r),o)),o);return V(s,i)}var uI=W({dropout_:mM});function lI(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function mv(e,t,n){let r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){let o=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(o)}return He(s,"float32")}async function gM(e,t,n=1){let r=A(e,"predictions","inTopK"),s=A(t,"targets","inTopK");P(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),P(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),bn(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let a=r.shape[r.shape.length-1];P(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);let o=await r.data(),i=await s.data(),[c,l]=[o.length/a,a],u=g0("bool",c);for(let d=0;d<c;d++){let p=d*l,h=o.subarray(p,p+l),f=[];for(let m=0;m<h.length;m++)f.push({value:h[m],index:m});f.sort((m,g)=>g.value-m.value),u[d]=0;for(let m=0;m<n;m++)if(f[m].index===i[d]){u[d]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),Kn(u,s.shape,"bool")}var bM=gM,pa={};Ae(pa,{conv2d:()=>xM,depthwiseConv2d:()=>SM,matMul:()=>CM});function yM(e,t,n,r,s,a="NHWC",o){let i=e;e.rank===3&&(i=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;c.rank===3&&(c=U(t,[1,t.shape[0],t.shape[1],t.shape[2]])),P(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),P(c.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${c.shape}.`),P(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let l=a==="NHWC"?i.shape[3]:i.shape[1],u=a==="NHWC"?c.shape[3]:c.shape[1];P(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),P(u===n[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${n[3]}).`),vn("conv2dDerFilter",s,o);let d={x:i,dy:c},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:o,filterShape:n};return z.runKernel(nh,d,p)}var gv=W({conv2DBackpropFilter_:yM});function gf(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return V(e,fu(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function bf(e,t){let n=t,r=Lt(e.shape,t.shape);return r.length>0&&(n=xe(n,r)),U(n,e.shape)}function yf(e,t,n,r){if(t==="linear")return e;if(t==="relu")return qe(e);if(t==="elu")return iu(e);if(t==="relu6")return rf(e);if(t==="prelu")return cd(e,n);if(t==="leakyrelu")return rd(e,r);if(t==="sigmoid")return dr(e);throw new Error(`Unknown fused activation ${t}.`)}var vf=(e,t)=>!(e>0)||t==="linear";function vM({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:u}){if(c=c||"linear",vf(z.state.gradientDepth,c)===!1){let w=Rt(e,t,n,r,s,a,o);return i!=null&&(w=Y(w,i)),yf(w,c,l,u)}let d=A(e,"x","conv2d","float32"),p=A(t,"filter","conv2d","float32"),h=d,f=!1;d.rank===3&&(f=!0,h=U(d,[1,d.shape[0],d.shape[1],d.shape[2]])),P(h.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),P(p.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),vn("fused conv2d",r,o),P(h.shape[3]===p.shape[2],()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${p.shape[2]}.`),P(Qr(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),P(s==="NHWC",()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`);let m=ed(h.shape,p.shape,n,a,r,o),g;i!=null&&(g=A(i,"bias","fused conv2d"),[g]=_t(g,d),pt(m.outShape,g.shape));let b;l!=null&&(b=A(l,"prelu weights","fused conv2d"));let y=(w,T)=>{let[C,D,F,O]=T,$=gf(w,F,c);P(ca(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let R=Vy(D.shape,$,C,n,r),N=gv(D,$,C.shape,n,r),L=[R,N];if(O!=null){let G=bf(O,$);L.push(G)}return L},v={x:h,filter:p,bias:g,preluActivationWeights:b},x={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o,activation:c,leakyreluAlpha:u};return i==null?es((T,C,D)=>{let F=z.runKernel(Mo,v,x);return D([C,T,F]),f&&(F=U(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:y}})(h,p):es((T,C,D,F)=>{let O=z.runKernel(Mo,v,x);return F([C,T,O,D]),f&&(O=U(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:y}})(h,p,g)}var xM=W({fusedConv2d_:vM});function wM(e,t,n,r,s,a=[1,1],o){let i=e;e.rank===3&&(i=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;c.rank===3&&(c=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l={x:i,dy:c},u={strides:r,pad:s,dimRoundingMode:o,dilations:a,filterShape:n};return z.runKernel(oh,l,u)}var dI=W({depthwiseConv2dNativeBackpropFilter_:wM});function kM(e,t,n,r,s,a=[1,1],o){let i=t,c=!1;t.rank===3&&(c=!0,i=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l={dy:i,filter:n},u={strides:r,pad:s,dimRoundingMode:o,dilations:a,inputShape:e},d=z.runKernel(ih,l,u);return c?U(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var pI=W({depthwiseConv2dNativeBackpropInput_:kM});function IM({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:u}){if(vf(z.state.gradientDepth,c)===!1){let w=ua(e,t,n,r,s,a,o);return i!=null&&(w=Y(w,i)),yf(w,c,l,u)}let d=A(e,"x","depthwiseConv2d","float32"),p=A(t,"filter","depthwiseConv2d","float32"),h=d,f=!1;d.rank===3&&(f=!0,h=U(d,[1,d.shape[0],d.shape[1],d.shape[2]])),P(h.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),P(p.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),P(h.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),a==null&&(a=[1,1]),P(Qr(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),vn("fused depthwiseConv2d",r,o);let m=ed(h.shape,p.shape,n,a,r,o,!0),g;i!=null&&(g=A(i,"bias","fused conv2d"),[g]=_t(g,d),pt(m.outShape,g.shape));let b;l!=null&&(b=A(l,"prelu weights","fused depthwiseConv2d"));let y=(w,T)=>{P(ca(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[C,D,F,O]=T,$=gf(w,F,c),R=pI(D.shape,$,C,n,r,a,o),N=dI(D,$,C.shape,n,r,a,o);if(O!=null){let L=bf(g,$);return[R,N,L]}return[R,N]},v={x:h,filter:p,bias:g,preluActivationWeights:b},x={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o,activation:c,leakyreluAlpha:u};return i==null?es((T,C,D)=>{let F=z.runKernel(Lo,v,x);return D([C,T,F]),f&&(F=U(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:y}})(h,p):es((T,C,D,F)=>{let O=z.runKernel(Lo,v,x);return F([C,T,O,D]),f&&(O=U(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:y}})(h,p,g)}var SM=W({fusedDepthwiseConv2d_:IM});function TM({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i}){if(vf(z.state.gradientDepth,a)===!1){let $=De(e,t,n,r);return s!=null&&($=Y($,s)),yf($,a,o,i)}let c=A(e,"a","fused matMul"),l=A(t,"b","fused matMul");[c,l]=_t(c,l);let u=n?c.shape[c.rank-2]:c.shape[c.rank-1],d=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=n?c.shape[c.rank-1]:c.shape[c.rank-2],h=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=c.shape.slice(0,-2),m=l.shape.slice(0,-2),g=yt(f),b=yt(m);P(u===d,()=>`Error in fused matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${c.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`);let v=pt(c.shape.slice(0,-2),l.shape.slice(0,-2)).concat([p,h]),x=n?U(c,[g,u,p]):U(c,[g,p,u]),w=r?U(l,[b,h,d]):U(l,[b,d,h]),T;s!=null&&(T=A(s,"bias","fused matMul"),[T]=_t(T,c),pt(v,T.shape));let C;o!=null&&(C=A(o,"prelu weights","fused matMul"));let D=($,R)=>{let[N,L,G,j]=R,K=gf(U($,G.shape),G,a),q,Z;if(!n&&!r?(q=De(K,L,!1,!0),Z=De(N,K,!0,!1)):!n&&r?(q=De(K,L,!1,!1),Z=De(K,N,!0,!1)):n&&!r?(q=De(L,K,!1,!0),Z=De(N,K,!1,!1)):(q=De(L,K,!0,!0),Z=De(K,N,!0,!0)),s!=null){let te=bf(j,K);return[q,Z,te]}else return[q,Z]},F={a:x,b:w,bias:T,preluActivationWeights:C},O={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:i};return s==null?es((R,N,L)=>{let G=z.runKernel(Oo,F,O);return L([R,N,G]),{value:U(G,v),gradFunc:D}})(x,w):es((R,N,L,G)=>{let j=z.runKernel(Oo,F,O);return G([R,N,j,L]),{value:U(j,v),gradFunc:D}})(x,w,T)}var CM=W({fusedMatMul_:TM});function NM(e){return mv(e,.54,.46)}var _M=W({hammingWindow_:NM});function EM(e){return mv(e,.5,.5)}var hI=W({hannWindow_:EM});function AM(e,t,n,r=!1,s=0){let a=0,o=[];for(;a+t<=e.size;)o.push(ze(e,a,t)),a+=n;if(r)for(;a<e.size;){let i=a+t-e.size,c=et([ze(e,a,t-i),xn([i],s)]);o.push(c),a+=n}return o.length===0?Lr([],[0,t]):U(et(o),[o.length,t])}var fI=W({frame_:AM});function DM(e,t,n,r,s=hI){r==null&&(r=lI(t));let a=fI(e,t,n),o=V(a,s(t));return pd(o,r)}var FM=W({stft_:DM});function $M(e,t,n,r,s="bilinear",a=0){let o=A(e,"image","cropAndResize"),i=A(t,"boxes","cropAndResize","float32"),c=A(n,"boxInd","cropAndResize","int32"),l=i.shape[0];P(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),P(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`),P(c.rank===1&&c.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`),P(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),P(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),P(s==="bilinear"||s==="nearest",()=>`method must be bilinear or nearest, but was ${s}`);let u={image:o,boxes:i,boxInd:c},d={method:s,extrapolationValue:a,cropSize:r};return z.runKernel(cc,u,d)}var RM=W({cropAndResize_:$M});function PM(e){let t=A(e,"image","flipLeftRight","float32");P(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return z.runKernel(fc,n,{})}var OM=W({flipLeftRight_:PM});function MM(e){let t=A(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];P(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),P(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);let s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,Pn(t,s)}var LM=W({grayscaleToRGB_:MM});function BM(e,t,n=0,r=.5){let s=A(e,"image","rotateWithOffset","float32");P(s.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);let a={image:s},o={radians:t,fillValue:n,center:r};return z.runKernel(Zc,a,o)}var zM=W({rotateWithOffset_:BM});function mu(e,t,n,r,s,a){r==null&&(r=.5),s==null&&(s=Number.NEGATIVE_INFINITY),a==null&&(a=0);let o=e.shape[0];return n=Math.min(n,o),P(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),P(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),P(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),P(t.rank===1,()=>"scores must be a 1D tensor"),P(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),P(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}function WM(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){let a=A(e,"boxes","nonMaxSuppression","float32"),o=A(t,"scores","nonMaxSuppression","float32"),i=mu(a,o,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;let c={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return z.runKernel(_c,{boxes:a,scores:o},c)}var VM=W({nonMaxSuppression_:WM});function UM(e,t,n){let r=GM(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function GM(e,t,n){return jM(e,t,n||HM)}function HM(e,t){return e>t?1:e<t?-1:0}function jM(e,t,n){let r=0,s=e.length,a=0,o=!1;for(;r<s;){a=r+(s-r>>>1);let i=n(t,e[a]);i>0?r=a+1:(s=a,o=!i)}return o?r:-r-1}function mI(e,t,n,r,s){return bv(e,t,n,r,s,0)}function gI(e,t,n,r,s,a){return bv(e,t,n,r,s,0,!1,a,!0)}function bI(e,t,n,r,s,a){return bv(e,t,n,r,s,a,!0)}function bv(e,t,n,r,s,a,o=!1,i=!1,c=!1){let l=[];for(let g=0;g<t.length;g++)t[g]>s&&l.push({score:t[g],boxIndex:g,suppressBeginIndex:0});l.sort(yI);let u=a>0?-.5/a:0,d=[],p=[];for(;d.length<n&&l.length>0;){let g=l.pop(),{score:b,boxIndex:y,suppressBeginIndex:v}=g;if(b<s)break;let x=!1;for(let w=d.length-1;w>=v;--w){let T=qM(e,y,d[w]);if(T>=r){x=!0;break}if(g.score=g.score*KM(r,u,T),g.score<=s)break}g.suppressBeginIndex=d.length,x||(g.score===b?(d.push(y),p.push(g.score)):g.score>s&&UM(l,g,yI))}let h=d.length,f=n-h;i&&f>0&&(d.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));let m={selectedIndices:d};return o&&(m.selectedScores=p),c&&(m.validOutputs=h),m}function qM(e,t,n){let r=e.subarray(t*4,t*4+4),s=e.subarray(n*4,n*4+4),a=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),c=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),u=Math.min(s[1],s[3]),d=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),h=(i-a)*(c-o),f=(d-l)*(p-u);if(h<=0||f<=0)return 0;let m=Math.max(a,l),g=Math.max(o,u),b=Math.min(i,d),y=Math.min(c,p),v=Math.max(b-m,0)*Math.max(y-g,0);return v/(h+f-v)}function KM(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function yI(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function XM(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){let a=A(e,"boxes","nonMaxSuppressionAsync"),o=A(t,"scores","nonMaxSuppressionAsync"),i=mu(a,o,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;let c=await Promise.all([a.data(),o.data()]),l=c[0],u=c[1],{selectedIndices:d}=mI(l,u,n,r,s);return a!==e&&a.dispose(),o!==t&&o.dispose(),He(d,"int32")}var YM=XM;function ZM(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){let o=A(e,"boxes","nonMaxSuppression"),i=A(t,"scores","nonMaxSuppression"),c=mu(o,i,n,r,s,a);n=c.maxOutputSize,r=c.iouThreshold,s=c.scoreThreshold,a=c.softNmsSigma;let l={boxes:o,scores:i},u={maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a},d=z.runKernel(Ac,l,u);return{selectedIndices:d[0],selectedScores:d[1]}}var JM=W({nonMaxSuppressionWithScore_:ZM});async function QM(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){let o=A(e,"boxes","nonMaxSuppressionAsync"),i=A(t,"scores","nonMaxSuppressionAsync"),c=mu(o,i,n,r,s,a);n=c.maxOutputSize,r=c.iouThreshold,s=c.scoreThreshold,a=c.softNmsSigma;let l=await Promise.all([o.data(),i.data()]),u=l[0],d=l[1],{selectedIndices:p,selectedScores:h}=bI(u,d,n,r,s,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:He(p,"int32"),selectedScores:He(h)}}var eL=QM;function tL(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){let o=A(e,"boxes","nonMaxSuppression"),i=A(t,"scores","nonMaxSuppression"),c=mu(o,i,n,r,s,null),l=c.maxOutputSize,u=c.iouThreshold,d=c.scoreThreshold,p={boxes:o,scores:i},h={maxOutputSize:l,iouThreshold:u,scoreThreshold:d,padToMaxOutputSize:a},f=z.runKernel(Ec,p,h);return{selectedIndices:f[0],validOutputs:f[1]}}var nL=W({nonMaxSuppressionPadded_:tL});async function rL(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){let o=A(e,"boxes","nonMaxSuppressionAsync"),i=A(t,"scores","nonMaxSuppressionAsync"),c=mu(o,i,n,r,s,null),l=c.maxOutputSize,u=c.iouThreshold,d=c.scoreThreshold,[p,h]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=gI(p,h,l,u,d,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:He(f,"int32"),validOutputs:Ie(m,"int32")}}var sL=rL;function aL(e,t,n=!1,r=!1){let s=A(e,"images","resizeBilinear");P(s.rank===3||s.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),P(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),P(r===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=s,o=!1;s.rank===3&&(o=!0,a=U(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let[]=t,i={images:a},c={alignCorners:n,halfPixelCenters:r,size:t},l=z.runKernel(wo,i,c);return o?U(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var vI=W({resizeBilinear_:aL});function oL(e,t,n=!1,r=!1){let s=A(e,"images","resizeNearestNeighbor");P(s.rank===3||s.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),P(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),P(s.dtype==="float32"||s.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),P(r===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=s,o=!1;s.rank===3&&(o=!0,a=U(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let[]=t,i={images:a},c={alignCorners:n,halfPixelCenters:r,size:t},l=z.runKernel(Pl,i,c);return o?U(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var xI=W({resizeNearestNeighbor_:oL});function iL(e,t="binary",n=!1,r=.5){let s=A(e,"image","threshold"),a=.2989,o=.587,i=.114,c=s.shape[0]*s.shape[1],l=V(He([r]),255),u,d,p,h;if(P(s.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),P(s.shape[2]===3||s.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),P(s.dtype==="int32"||s.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),P(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),s.shape[2]===3){[u,d,p]=Mn(s,[1,1,1],-1);let g=V(u,a),b=V(d,o),y=V(p,i);h=Y(Y(g,b),y)}else h=e;if(t==="otsu"){let g=zy(ce(sf(h),"int32"),Kn([]),256);l=cL(g,c)}let f=n?da(h,l):On(h,l);return ce(V(f,255),"int32")}function cL(e,t){let n=He([-1]),r=He([0]),s=He([0]),a,o,i,c,l,u;for(let d=0;d<e.size-1;d++){a=ze(e,0,d+1),o=ze(e,d+1),l=me(xe(a),t),u=me(xe(o),t);let p=xe(V(a,du(0,a.size)));i=me(p,xe(a));let h=xn(o.shape,a.size),f=Y(du(0,o.size),h),m=V(o,f);c=me(xe(m),xe(o));let g=fe(i,c),b=fe(i,c),y=V(l,u);s=V(V(y,g),b);let v=On(s,r);r=hn(v,s,r),n=hn(v,He([d]),n)}return n}var uL=W({threshold_:iL});function lL(e,t,n="nearest",r="constant",s=0,a){let o=A(e,"image","transform","float32"),i=A(t,"transforms","transform","float32");P(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),P(i.rank===2&&(i.shape[0]===o.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),P(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);let c={image:o,transforms:i},l={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return z.runKernel(Kc,c,l)}var dL=W({transform_:lL});function pL(e,t,n){P(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),P(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let r=A(e,"a","bandPart");P(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);let s=r.shape,[a,o]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=a),n<0&&(n=o);let i=U(du(0,a,1,"int32"),[-1,1]),c=du(0,o,1,"int32"),l=fe(i,c),u=Cr(da(l,Ie(+t,"int32")),la(l,Ie(-n,"int32"))),d=St([a,o],r.dtype);return U(Ot(ht(U(r,[-1,a,o])).map(p=>hn(u,p,d))),s)}var hL=W({bandPart_:pL});function fL(e){let t;if(Array.isArray(e)){t=!1,P(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let s=e[0].shape[0];for(let a=1;a<e.length;++a)P(e[a].shape[0]===s,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[a].shape[0]} vs. ${s})`)}else t=!0,e=Mn(e,e.shape[0],0).map(s=>ns(s,[0]));P(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],r=e;for(let s=0;s<e.length;++s)n.push(z.tidy(()=>{let a=r[s];if(s>0)for(let o=0;o<s;++o){let i=V(xe(V(n[o],a)),n[o]);a=fe(a,i)}return me(a,mf(a,"euclidean"))}));return t?Ot(n,0):n}var mL=W({gramSchmidt_:fL});function gL(e,t=!1){if(P(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return wI(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((c,l)=>c*l),r=ht(U(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];r.forEach(c=>{let[l,u]=wI(c,t);s.push(l),a.push(u)});let o=U(Ot(s,0),e.shape),i=U(Ot(a,0),e.shape);return[o,i]}}function wI(e,t=!1){return z.tidy(()=>{P(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],r=e.shape[1],s=Xy(n),a=ws(e),o=Lr([[1]],[1,1]),i=ws(o),c=n>=r?r:n;for(let l=0;l<c;++l){let u=a,d=i,p=s;[i,a,s]=z.tidy(()=>{let h=ze(a,[l,l],[n-l,1]),f=mf(h),m=ze(a,[l,l],[1,1]),g=hn(On(m,0),Lr([[-1]]),Lr([[1]])),b=fe(m,V(g,f)),y=me(h,b);y.shape[0]===1?i=ws(o):i=et([o,ze(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);let v=It(me(De(g,b),f)),x=ze(a,[l,0],[n-l,r]),w=V(v,i),T=Re(i);if(l===0)a=fe(x,De(w,De(T,x)));else{let F=fe(x,De(w,De(T,x)));a=et([ze(a,[0,0],[l,r]),F],0)}let C=Re(w),D=ze(s,[0,l],[n,s.shape[1]-l]);if(l===0)s=fe(D,De(De(D,i),C));else{let F=fe(D,De(De(D,i),C));s=et([ze(s,[0,0],[n,l]),F],1)}return[i,a,s]}),Fe([u,d,p])}return!t&&n>r&&(s=ze(s,[0,0],[n,r]),a=ze(a,[0,0],[r,r])),[s,a]})}var bL=W({qr_:gL}),wn;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(wn||(wn={}));function yL(e,t,n=wn.SUM_BY_NONZERO_WEIGHTS){let r=A(e,"losses","computeWeightedLoss"),s=null;t!=null&&(s=A(t,"weights","computeWeightedLoss"));let a=s==null?r:V(r,s);if(n===wn.NONE)return a;if(n===wn.SUM)return xe(a);if(n===wn.MEAN){if(s==null)return Et(a);{let o=r.size/s.size,i=me(xe(a),xe(s));return o>1?me(i,Ie(o)):i}}if(n===wn.SUM_BY_NONZERO_WEIGHTS){if(s==null)return me(xe(a),Ie(r.size));{let o=V(s,Zn(r.shape)),i=ce(xe(Qo(o,Ie(0))),"float32");return me(xe(a),i)}}throw Error(`Unknown reduction: ${n}`)}var Ts=W({computeWeightedLoss_:yL});function vL(e,t,n,r=wn.SUM_BY_NONZERO_WEIGHTS){let s=A(e,"labels","absoluteDifference"),a=A(t,"predictions","absoluteDifference"),o=null;n!=null&&(o=A(n,"weights","absoluteDifference")),bn(s.shape,a.shape,"Error in absoluteDifference: ");let i=Bt(fe(s,a));return Ts(i,o,r)}var xL=W({absoluteDifference_:vL});function wL(e,t,n,r,s=wn.SUM_BY_NONZERO_WEIGHTS){let a=A(e,"labels","cosineDistance"),o=A(t,"predictions","cosineDistance"),i=null;r!=null&&(i=A(r,"weights","cosineDistance")),bn(a.shape,o.shape,"Error in cosineDistance: ");let c=Ie(1),l=fe(c,xe(V(a,o),n,!0));return Ts(l,i,s)}var kL=W({cosineDistance_:wL});function IL(e,t,n,r=wn.SUM_BY_NONZERO_WEIGHTS){let s=A(e,"labels","hingeLoss"),a=A(t,"predictions","hingeLoss"),o=null;n!=null&&(o=A(n,"weights","hingeLoss")),bn(s.shape,a.shape,"Error in hingeLoss: ");let i=Ie(1);s=fe(V(Ie(2),s),i);let c=qe(fe(i,V(s,a)));return Ts(c,o,r)}var SL=W({hingeLoss_:IL});function TL(e,t,n,r=1,s=wn.SUM_BY_NONZERO_WEIGHTS){let a=A(e,"labels","huberLoss"),o=A(t,"predictions","huberLoss"),i=null;n!=null&&(i=A(n,"weights","huberLoss")),bn(a.shape,o.shape,"Error in huberLoss: ");let c=Ie(r),l=Bt(fe(o,a)),u=uu(l,c),d=fe(l,u),p=Y(V(Ie(.5),ct(u)),V(c,d));return Ts(p,i,s)}var CL=W({huberLoss_:TL});function NL(e,t,n,r=1e-7,s=wn.SUM_BY_NONZERO_WEIGHTS){let a=A(e,"labels","logLoss"),o=A(t,"predictions","logLoss"),i=null;n!=null&&(i=A(n,"weights","logLoss")),bn(a.shape,o.shape,"Error in logLoss: ");let c=Ie(1),l=Ie(r),u=It(V(a,Yn(Y(o,l)))),d=V(fe(c,a),Yn(Y(fe(c,o),l))),p=fe(u,d);return Ts(p,i,s)}var _L=W({logLoss_:NL});function EL(e,t,n,r=wn.SUM_BY_NONZERO_WEIGHTS){let s=A(e,"labels","meanSquaredError"),a=A(t,"predictions","meanSquaredError"),o=null;n!=null&&(o=A(n,"weights","meanSquaredError")),bn(s.shape,a.shape,"Error in meanSquaredError: ");let i=pf(s,a);return Ts(i,o,r)}var AL=W({meanSquaredError_:EL});function DL(e,t){let n=A(e,"labels","sigmoidCrossEntropyWithLogits"),r=A(t,"logits","sigmoidCrossEntropyWithLogits");bn(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let s=qe(r),a=V(r,n),o=sd(fn(It(Bt(r))));return Y(fe(s,a),o)}function FL(e,t,n,r=0,s=wn.SUM_BY_NONZERO_WEIGHTS){let a=A(e,"multiClassLabels","sigmoidCrossEntropy"),o=A(t,"logits","sigmoidCrossEntropy"),i=null;if(n!=null&&(i=A(n,"weights","sigmoidCrossEntropy")),bn(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){let l=Ie(r),u=Ie(1),d=Ie(.5);a=Y(V(a,fe(u,l)),V(d,l))}let c=DL(a,o);return Ts(c,i,s)}var $L=W({sigmoidCrossEntropy_:FL});function RL(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return es((s,a,o)=>{let c=ev(a,[n],!0),l=fe(ce(a,"float32"),c);o([s,l]);let u=It(V(l,s));return{value:xe(u,[n]),gradFunc:(h,f)=>{let[m,g]=f,b=Jo(h.shape,[n]);return[V(U(h,b),fe(ce(m,"float32"),fn(g))),V(U(h,b),fe(fn(g),ce(m,"float32")))]}}})(e,t)}function PL(e,t,n,r=0,s=wn.SUM_BY_NONZERO_WEIGHTS){let a=A(e,"onehotLabels","softmaxCrossEntropy"),o=A(t,"logits","softmaxCrossEntropy"),i=null;if(n!=null&&(i=A(n,"weights","softmaxCrossEntropy")),bn(a.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){let l=Ie(r),u=Ie(1),d=Ie(a.shape[1]);a=Y(V(a,fe(u,l)),me(l,d))}let c=RL(a,o);return Ts(c,i,s)}var OL=W({softmaxCrossEntropy_:PL});function ML(e,t,n,r){let s=A(e,"indices","sparseFillEmptyRows","int32"),a=A(t,"values","sparseFillEmptyRows"),o=A(n,"denseShape","sparseFillEmptyRows","int32"),i=A(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(s.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${s.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let c={indices:s,values:a,denseShape:o,defaultValue:i},l=z.runKernel(Ol,c);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}var LL=W({sparseFillEmptyRows_:ML});function BL(e,t,n){let r=A(e,"inputIndices","sparseReshape","int32"),s=A(t,"inputShape","sparseReshape","int32"),a=A(n,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(s.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);let o={inputIndices:r,inputShape:s,newShape:a},i=z.runKernel(Hc,o);return{outputIndices:i[0],outputShape:i[1]}}var zL=W({sparseReshape_:BL});function WL(e,t,n){let r=A(e,"data","sparseSegmentMean"),s=A(t,"indices","sparseSegmentMean","int32"),a=A(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${s.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);let o={data:r,indices:s,segmentIds:a};return z.runKernel(Ml,o)}var VL=W({sparseSegmentMean_:WL});function UL(e,t,n){let r=A(e,"data","sparseSegmentSum"),s=A(t,"indices","sparseSegmentSum","int32"),a=A(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${s.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);let o={data:r,indices:s,segmentIds:a};return z.runKernel(Ll,o)}var GL=W({sparseSegmentSum_:UL});function HL(e,t,n,r,s,a,o,i){let c=A(e,"data","stringNGrams","string");if(c.dtype!=="string")throw new Error("Data must be of datatype string");if(c.shape.length!==1)throw new Error(`Data must be a vector, saw: ${c.shape}`);let l=A(t,"dataSplits","stringNGrams");if(l.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let u={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:o,preserveShortSequences:i},d={data:c,dataSplits:l},p=z.runKernel(Ch,d,u);return{nGrams:p[0],nGramsSplits:p[1]}}var jL=W({stringNGrams_:HL});function qL(e,t,n=!0){let r=A(e,"input","stringSplit","string"),s=A(t,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(s.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);let a={skipEmpty:n},o={input:r,delimiter:s},i=z.runKernel(Nh,o,a);return{indices:i[0],values:i[1],shape:i[2]}}var KL=W({stringSplit_:qL});function XL(e,t){let n=A(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let s={input:n};return z.runKernel(_h,s,r)}var YL=W({stringToHashBucketFast_:XL}),ZL={fft:dd,ifft:hu,rfft:pd,irfft:df},JL={hammingWindow:_M,hannWindow:hI,frame:fI,stft:FM},er={flipLeftRight:OM,grayscaleToRGB:LM,resizeNearestNeighbor:xI,resizeBilinear:vI,rotateWithOffset:zM,cropAndResize:RM,nonMaxSuppression:VM,nonMaxSuppressionAsync:YM,nonMaxSuppressionWithScore:JM,nonMaxSuppressionWithScoreAsync:eL,nonMaxSuppressionPadded:nL,nonMaxSuppressionPaddedAsync:sL,threshold:uL,transform:dL},kI={bandPart:hL,gramSchmidt:mL,qr:bL},QL={absoluteDifference:xL,computeWeightedLoss:Ts,cosineDistance:kL,hingeLoss:SL,huberLoss:CL,logLoss:_L,meanSquaredError:AL,sigmoidCrossEntropy:$L,softmaxCrossEntropy:OL},hd={sparseFillEmptyRows:LL,sparseReshape:zL,sparseSegmentMean:VL,sparseSegmentSum:GL},xf={stringNGrams:jL,stringSplit:KL,stringToHashBucketFast:YL},Cs=class extends kk{minimize(e,t=!1,n){let{value:r,grads:s}=this.computeGradients(e,n);if(n!=null){let a=n.map(o=>({name:o.name,tensor:s[o.name]}));this.applyGradients(a)}else this.applyGradients(s);return Fe(s),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return qk(e,t)}dispose(){this.iterations_!=null&&Fe(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ie(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Cs,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var wf=class extends Cs{constructor(e,t,n=null){super();this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=z.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,r)=>{let s=z.registeredVariables[n],a=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${n}/accum_grad`,variable:M(()=>Ge(s).variable(a))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${n}/accum_var`,variable:M(()=>Ge(s).variable(a))});let o=Array.isArray(e)?e[r].tensor:e[n];if(o==null)return;let i=this.accumulatedGrads[r].variable,c=this.accumulatedUpdates[r].variable;M(()=>{let l=Y(V(i,this.rho),V(ct(o),1-this.rho)),u=V(me(an(Y(c,this.epsilon)),an(Y(i,this.epsilon))),o),d=Y(V(c,this.rho),V(ct(u),1-this.rho));i.assign(l),c.assign(d);let p=Y(V(u,-this.learningRate),s);s.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Fe(this.accumulatedGrads.map(e=>e.variable)),Fe(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};wf.className="Adadelta";ia(wf);var kf=class extends Cs{constructor(e,t=.1){super();this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,r)=>{let s=z.registeredVariables[n];if(this.accumulatedGrads[r]==null){let i=!1;this.accumulatedGrads[r]={originalName:`${n}/accumulator`,variable:M(()=>xn(s.shape,this.initialAccumulatorValue).variable(i))}}let a=Array.isArray(e)?e[r].tensor:e[n];if(a==null)return;let o=this.accumulatedGrads[r].variable;M(()=>{let i=Y(o,ct(a));o.assign(i);let c=Y(V(me(a,an(Y(i,z.backend.epsilon()))),-this.learningRate),s);s.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Fe(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};kf.className="Adagrad";ia(kf);var If=class extends Cs{constructor(e,t,n,r=null){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],M(()=>{this.accBeta1=Ie(t).variable(),this.accBeta2=Ie(n).variable()}),r==null&&(this.epsilon=z.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);M(()=>{let n=fe(1,this.accBeta1),r=fe(1,this.accBeta2);t.forEach((s,a)=>{let o=z.registeredVariables[s],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:M(()=>Ge(o).variable(i))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${s}/v`,variable:M(()=>Ge(o).variable(i))});let c=Array.isArray(e)?e[a].tensor:e[s];if(c==null)return;let l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,d=Y(V(l,this.beta1),V(c,1-this.beta1)),p=Y(V(u,this.beta2),V(ct(c),1-this.beta2)),h=me(d,n),f=me(p,r);l.assign(d),u.assign(p);let m=Y(V(me(h,Y(an(f),this.epsilon)),-this.learningRate),o);o.assign(m)}),this.accBeta1.assign(V(this.accBeta1,this.beta1)),this.accBeta2.assign(V(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Fe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Fe(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),M(()=>{this.accBeta1.assign(Ss(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ss(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};If.className="Adam";ia(If);var Sf=class extends Cs{constructor(e,t,n,r=null,s=0){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],M(()=>{this.iteration=Ie(0).variable(),this.accBeta1=Ie(t).variable()}),r==null&&(this.epsilon=z.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);M(()=>{let n=fe(1,this.accBeta1),r=me(-this.learningRate,Y(V(this.iteration,this.decay),1));t.forEach((s,a)=>{let o=z.registeredVariables[s],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:Ge(o).variable(i)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${s}/v`,variable:Ge(o).variable(i)});let c=Array.isArray(e)?e[a].tensor:e[s];if(c==null)return;let l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,d=Y(V(l,this.beta1),V(c,1-this.beta1)),p=V(u,this.beta2),h=Bt(c),f=ts(p,h);l.assign(d),u.assign(f);let m=Y(V(me(r,n),me(d,Y(f,this.epsilon))),o);o.assign(m)}),this.iteration.assign(Y(this.iteration,1)),this.accBeta1.assign(V(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Fe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Fe(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};Sf.className="Adamax";ia(Sf);var fd=class extends Cs{constructor(e){super();this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,r)=>{let s=Array.isArray(e)?e[r].tensor:e[n];if(s==null)return;let a=z.registeredVariables[n];M(()=>{let o=Y(V(this.c,s),a);a.assign(o)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Zt(Ie(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};fd.className="SGD";ia(fd);var Tf=class extends fd{constructor(e,t,n=!1){super(e);this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ie(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,r)=>{let s=z.registeredVariables[n];if(this.accumulations[r]==null){let i=!1;this.accumulations[r]={originalName:`${n}/momentum`,variable:M(()=>Ge(s).variable(i))}}let a=this.accumulations[r].variable,o=Array.isArray(e)?e[r].tensor:e[n];o!=null&&M(()=>{let i,c=Y(V(this.m,a),o);this.useNesterov?i=Y(V(this.c,Y(o,V(c,this.m))),s):i=Y(V(this.c,c),s),a.assign(c),s.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Fe(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Tf.className="Momentum";ia(Tf);var Cf=class extends Cs{constructor(e,t=.9,n=0,r=null,s=!1){super();if(this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,r==null&&(this.epsilon=z.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,r)=>{let s=z.registeredVariables[n],a=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${n}/rms`,variable:M(()=>Ge(s).variable(a))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${n}/momentum`,variable:M(()=>Ge(s).variable(a))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${n}/mg`,variable:M(()=>Ge(s).variable(a))});let o=Array.isArray(e)?e[r].tensor:e[n];if(o==null)return;let i=this.accumulatedMeanSquares[r].variable,c=this.accumulatedMoments[r].variable;M(()=>{let l=Y(V(i,this.decay),V(ct(o),1-this.decay));if(this.centered){let u=this.accumulatedMeanGrads[r].variable,d=Y(V(u,this.decay),V(o,1-this.decay)),p=me(V(o,this.learningRate),an(fe(l,Y(ct(d),this.epsilon)))),h=Y(V(c,this.momentum),p);i.assign(l),u.assign(d),c.assign(h);let f=fe(s,h);s.assign(f)}else{let u=Y(V(i,this.decay),V(ct(o),1-this.decay)),d=Y(V(c,this.momentum),me(V(o,this.learningRate),an(Y(u,this.epsilon))));i.assign(u),c.assign(d);let p=fe(s,d);s.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Fe(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Fe(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Fe(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Cf.className="RMSProp";ia(Cf);var ha=class{static sgd(e){return new fd(e)}static momentum(e,t,n=!1){return new Tf(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new Cf(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new If(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new wf(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new Sf(e,t,n,r,s)}static adagrad(e,t=.1){return new kf(e,t)}},ti={sgd:ha.sgd,momentum:ha.momentum,adadelta:ha.adadelta,adagrad:ha.adagrad,rmsprop:ha.rmsprop,adamax:ha.adamax,adam:ha.adam},eB=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:e=>e())();function II(){return new Promise(e=>eB(()=>e()))}var _={};Ae(_,{ERF_A1:()=>dB,ERF_A2:()=>pB,ERF_A3:()=>hB,ERF_A4:()=>fB,ERF_A5:()=>mB,ERF_P:()=>lB,PARALLELIZE_THRESHOLD:()=>yv,SELU_SCALE:()=>TI,SELU_SCALEALPHA:()=>SI,applyActivation:()=>yf,assertAndGetBroadcastShape:()=>pt,assertAxesAreInnerMostDims:()=>bO,assertParamsConsistent:()=>tB,assignToTypedArray:()=>wB,axesAreInnerMostDims:()=>Jy,calculateShapes:()=>dk,checkEinsumDimSizes:()=>NB,checkPadOnDimRoundingMode:()=>vn,combineLocations:()=>Xk,complexWithEvenIndex:()=>yB,complexWithOddIndex:()=>vB,computeConv2DInfo:()=>ed,computeConv3DInfo:()=>Ek,computeDefaultPad:()=>My,computeDilation2DInfo:()=>WR,computeOptimalWindowSize:()=>rB,computeOutAndReduceShapes:()=>Yk,computeOutShape:()=>nB,computePool2DInfo:()=>_k,computePool3DInfo:()=>VR,convertConv2DDataFormat:()=>Ak,decodeEinsumEquation:()=>TB,eitherStridesOrDilationsAreOne:()=>Qr,expandShapeToKeepDim:()=>Jo,exponent:()=>IB,exponents:()=>kB,fromStringArrayToUint8:()=>KB,fromUint8ToStringArray:()=>qB,getAxesPermutation:()=>Zk,getBroadcastDims:()=>ck,getComplexWithIndex:()=>xB,getEinsumComputePath:()=>_B,getEinsumPermutation:()=>CB,getFusedBiasGradient:()=>bf,getFusedDyActivation:()=>gf,getImageCenter:()=>sB,getInnerMostAxes:()=>yO,getPermuted:()=>oB,getReductionAxes:()=>Lt,getReshaped:()=>aB,getReshapedPermuted:()=>iB,getSliceBeginCoords:()=>cB,getSliceSize:()=>uB,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>FB,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>$B,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>RB,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>MB,getSparseReshapeInputOutputMismatchErrorMessage:()=>BB,getSparseReshapeInputOutputMultipleErrorMessage:()=>LB,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>PB,getSparseReshapeNegativeOutputDimErrorMessage:()=>OB,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>UB,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>zB,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>WB,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>VB,getUndoAxesPermutation:()=>Qy,isIdentityPermutation:()=>EB,log:()=>lF,mergeRealAndImagArrays:()=>gB,prepareAndValidate:()=>lk,prepareSplitSize:()=>DB,segment_util:()=>_I,shouldFuse:()=>vf,slice_util:()=>Gt,splitRealAndImagArrays:()=>bB,tupleValuesAreOne:()=>ca,upcastType:()=>Sr,validateInput:()=>Iy,validateUpdateShape:()=>ky,warn:()=>ta});function tB(e,t){let n=e[0].length;e.forEach((s,a)=>{P(s.length===n,()=>`Error in concat${n}D: rank of tensors[${a}] must be the same as the rank of the rest (${n})`)}),P(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let r=e[0];e.forEach((s,a)=>{for(let o=0;o<n;o++)P(o===t||s[o]===r[o],()=>`Error in concat${n}D: Shape of tensors[${a}] (${s}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function nB(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var yv=30;function rB(e){return e<=yv?e:Xp(e,Math.floor(Math.sqrt(e)))}function sB(e,t,n){let r=n*(typeof e=="number"?e:e[0]),s=t*(typeof e=="number"?e:e[1]);return[r,s]}function aB(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);let a=t.length;for(let o=0;o<a;++o)s=s.concat([e[o+1]/t[o],t[o]]);s=s.concat(e.slice(a+1))}return s}function oB(e,t,n=!0){let r=[];if(n){r.push(t);for(let s=t+1;s<e;++s)s<=2*t?(r.push(s),r.push(s-(t+1))):r.push(s)}else{let s=[],a=[];for(let o=1;o<e;++o)o>=t*2+1||o%2==1?a.push(o):s.push(o);r.push(...s),r.push(0),r.push(...a)}return r}function iB(e,t,n,r=!0){let s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?r?s.push(t[a-1]*e[a]):s.push(e[a]/t[a-1]):s.push(e[a]);return s}function cB(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function uB(e,t,n){let r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}var SI=1.7580993408473768,TI=1.0507009873554805,lB=.3275911,dB=.254829592,pB=-.284496736,hB=1.421413741,fB=-1.453152027,mB=1.061405429;function gB(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function bB(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function yB(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function vB(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function xB(e,t){let n=e[t*2],r=e[t*2+1];return{real:n,imag:r}}function wB(e,t,n,r){e[r*2]=t,e[r*2+1]=n}function kB(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){let a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function IB(e,t,n){let r=(n?2:-2)*Math.PI*(e/t),s=Math.cos(r),a=Math.sin(r);return{real:s,imag:a}}var vv="->",SB=/->/g,CI=",",NI="...";function TB(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(SB,"").length)/vv.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${vv}").`);let[r,s]=e.split(vv);P(r.indexOf(NI)===-1,()=>`The ellipsis notation ("${NI}") is not supported yet.`);let a=r.split(CI),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let p=0;p<s.length;++p){let h=s[p];if(!a.some(f=>f.indexOf(h)!==-1))throw new Error(`Output subscripts contain the label ${h} not present in the input subscripts.`);i.indexOf(h)===-1&&i.push(h)}for(let p=0;p<r.length;++p){let h=r[p];i.indexOf(h)===-1&&h!==CI&&i.push(h)}let c=new Array(a.length);for(let p=0;p<o;++p){if(new Set(a[p].split("")).size!==a[p].length)throw new Error(`Found duplicate axes in input component ${a[p]}. Support for duplicate axes in input is not implemented yet.`);c[p]=[];for(let h=0;h<a[p].length;++h)c[p].push(i.indexOf(a[p][h]))}let l=i.length,u=s.length,d=[];for(let p=u;p<l;++p)d.push(p);return{allDims:i,summedDims:d,idDims:c}}function CB(e,t){let n=new Array(e);n.fill(-1);for(let s=0;s<t.length;++s)n[t[s]]=s;let r=[];for(let s=0;s<e;++s)n[s]===-1&&r.push(s);return n=n.filter(s=>s!==-1),{permutationIndices:n,expandDims:r}}function NB(e,t,n){let r=new Array(e);for(let s=0;s<n.length;++s){let a=n[s].shape;for(let o=0;o<t[s].length;++o)r[t[s][o]]===void 0?r[t[s][o]]=a[o]:P(r[t[s][o]]===a[o],()=>`Expected dimension ${r[t[s][o]]} at axis ${o} of input shaped ${JSON.stringify(a)}, but got dimension ${a[o]}`)}}function _B(e,t){let n=e,r=[],s=0;e.length===0&&n.push(-1),s=e.length+1;for(let o=0;o<s;++o)r.push([]);let a=[];for(let o=0;o<n.length;++o){let i=n[o],c=AB(t,i);for(let l of c)a.indexOf(l)===-1&&(r[o].push(l),a.push(l))}return{path:n,steps:r}}function EB(e){return e.every((t,n)=>t===n)}function AB(e,t){let n=[];for(let r=0;r<e.length;++r)(e[r].length===0||e[r].indexOf(t)!==-1||t===-1)&&n.push(r);return n}function DB(e,t,n=0){let r=[];if(typeof t=="number")P(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{let s=t.reduce((o,i)=>(i===-1&&(o+=1),o),0);P(s<=1,()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(a!==-1){let o=t.reduce((i,c)=>c>0?i+c:i);t[a]=e.shape[n]-o}P(e.shape[n]===t.reduce((o,i)=>o+i),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function FB(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function $B(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function RB(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function PB(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function OB(e,t){return`size ${e} must be non-negative, not ${t}`}function MB(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function LB(e,t){let n=yt(e),r=yt(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${e} outputShape= ${t}`}function BB(e,t){let n=yt(e),r=yt(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${r}. inputShape=${e} outputShape=${t}`}function zB(){return"segment ids must be >= 0"}function WB(){return"segment ids are not increasing"}function VB(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function UB(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var _I={};Ae(_I,{collectGatherOpShapeInfo:()=>jB,computeOutShape:()=>HB,segOpComputeOptimalWindowSize:()=>GB});function GB(e,t){let n=!1,r;for(e<=yv?(r=e,n=!0):r=Xp(e,Math.floor(Math.sqrt(e)));!n;)r>t||r===e?n=!0:r=Xp(e,r+1);return r}function HB(e,t,n){let r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function jB(e,t,n,r){let s=t.shape.length,a=e.shape.length;if(r!==0&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);let o=e.shape[n],i=[],c=1,l=1,u=1;for(let d=0;d<r;++d)i.push(e.shape[d]),c*=e.shape[d];for(let d=r;d<n;d++)i.push(e.shape[d]),l*=e.shape[d];for(let d=r;d<s;d++)i.push(t.shape[d]);for(let d=n+1;d<a;d++)i.push(e.shape[d]),u*=e.shape[d];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:o,outputShape:i}}function qB(e){try{return e.map(t=>Ph(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function KB(e){return e.map(t=>Hl(t))}var rs={};Ae(rs,{nonMaxSuppressionV3Impl:()=>mI,nonMaxSuppressionV4Impl:()=>gI,nonMaxSuppressionV5Impl:()=>bI,whereImpl:()=>aI});var EI={kernelName:Yi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,fu(ce(n,"float32"),-1))}}},XB={kernelName:Zi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=ct(ce(n,"float32")),s=an(fe(Ie(1),r));return It(me(e,s))}}}},YB={kernelName:Ji,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=an(fe(ct(ce(n,"float32")),1));return me(e,r)}}}},ZB={kernelName:Zs,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=pt(n.shape,r.shape);return{a:()=>{let i=e,c=Lt(n.shape,s);return c.length>0&&(i=xe(i,c)),U(i,n.shape)},b:()=>{let i=e,c=Lt(r.shape,s);return c.length>0&&(i=xe(i,c)),U(i,r.shape)}}}},JB={kernelName:Ba,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((r,s)=>{n[s]=()=>e.clone()}),n}},QB={kernelName:za,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ge(n)}}},ez={kernelName:Sl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ge(n)}}},tz={kernelName:tc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,an(fe(Ie(1),ct(ce(n,"float32")))))}}},nz={kernelName:nc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=an(Y(Ie(1),ct(ce(n,"float32"))));return me(e,r)}}}},rz={kernelName:ac,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=pt(n.shape,r.shape);return{a:()=>{let i=Y(ct(n),ct(r)),c=V(e,me(r,i)),l=Lt(n.shape,s);return l.length>0&&(c=xe(c,l)),U(c,n.shape)},b:()=>{let i=Y(ct(n),ct(r)),c=It(V(e,me(n,i))),l=Lt(r.shape,s);return l.length>0&&(c=xe(c,l)),U(c,r.shape)}}}},sz={kernelName:rc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,Y(ct(ce(n,"float32")),1))}}},az={kernelName:sc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,fe(Ie(1),ct(ce(n,"float32"))))}}};function oz(e,t,n,r,s,a){let o=A(e,"dy","avgPool3dGrad"),i=A(t,"input","avgPool3dGrad"),c=o,l=i,u=!1;i.rank===4&&(u=!0,c=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),l=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(c.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),P(l.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),vn("avgPool3dGrad",s,a);let d={dy:c,input:l},p={filterSize:n,strides:r,pad:s,dimRoundingMode:a},h=z.runKernel(Jp,d,p);return u?U(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var iz=W({avgPool3dGrad_:oz}),cz={kernelName:Tl,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:s,strides:a,pad:o,dimRoundingMode:i}=n;return{x:()=>iz(e,r,s,a,o,i)}}};function uz(e,t,n,r,s){let a=A(e,"dy","avgPoolGrad"),o=A(t,"input","avgPoolGrad");P(o.rank===a.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`);let i=o,c=a,l=!1;o.rank===3&&(l=!0,i=U(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=U(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(c.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${c.rank}.`),P(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let u={dy:c,input:i},d={filterSize:n,strides:r,pad:s},p=z.runKernel(Zp,u,d);return l?U(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var lz=W({avgPoolGrad_:uz}),dz={kernelName:Wa,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:s,strides:a,pad:o}=n;return{x:()=>lz(e,r,s,a,o)}}},pz={kernelName:Va,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,s]=t,{transposeA:a,transposeB:o}=n;return!a&&!o?{a:()=>De(e,s,!1,!0),b:()=>De(r,e,!0,!1)}:!a&&o?{a:()=>De(e,s,!1,!1),b:()=>De(e,r,!0,!1)}:a&&!o?{a:()=>De(s,e,!1,!0),b:()=>De(r,e,!1,!1)}:{a:()=>De(s,e,!0,!0),b:()=>De(e,r,!0,!0)}}},hz={kernelName:oc,gradFunc:(e,t,n)=>{let{blockShape:r,crops:s}=n;return{x:()=>id(e,r,s)}}},fz={kernelName:N0,gradFunc:(e,t,n)=>{let r=n,s=r.inputShape,a=r.shape,o=Array.from(a);for(let c=s.length-1;c>=0;c--)if(s[c]===a[c])o[c]=1;else if(s[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);let i=[];for(let c=0;c<o.length;c++)o[c]>1&&i.push(c);return{x:()=>xe(e,i,!0)}}},mz={kernelName:Ua,gradFunc:e=>({x:()=>e.clone()})},gz={kernelName:Ga,gradFunc:e=>({x:()=>Ge(e)})},bz={kernelName:Js,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>hn(Cr(la(r,s),da(r,a)),e,Ge(e))}}},yz={kernelName:Cl,inputsToSave:["x"],gradFunc:EI.gradFunc},vz={kernelName:ic,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map(c=>c.shape),{axis:s}=n,a=Ir(s,t[0].shape)[0],o=r.map(c=>c[a]);return Mn(e,o,a).map(c=>()=>c)}},xz={kernelName:Ha,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,s]=t,{dilations:a,strides:o,pad:i,dataFormat:c}=n;return P(ca(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>Vy(r.shape,e,s,o,i,c),filter:()=>gv(r,e,s.shape,o,i,c)}}},wz={kernelName:ja,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,s]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>Rt(e,s,a,o,i,1,c),filter:()=>gv(e,r,s.shape,a,o,i,c)}}};function kz(e,t,n,r,s){let a=e;e.rank===4&&(a=U(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;o.rank===4&&(o=U(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),P(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),P(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),P(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),P(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),P(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`);let i={x:a,dy:o},c={strides:r,pad:s,filterShape:n};return z.runKernel(rh,i,c)}var Iz=W({conv3DBackpropFilter_:kz}),Sz={kernelName:Nl,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:s,pad:a}=n;P(ca(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);let[o,i]=t;return{x:()=>Bk(o.shape,e,i,s,a),filter:()=>Iz(o,e,i.shape,s,a)}}},Tz={kernelName:qa,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(It(cf(ce(n,"float32"))),e)}}},Cz={kernelName:Ka,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(uf(ce(n,"float32")),e)}}},Nz={kernelName:Xa,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:s,exclusive:a,reverse:o}=n;return{x:()=>{let i=Zk([s],r.rank),c=Xh(e,s,a,!o);return i!=null&&(c=Re(c,i)),c}}}},_z={kernelName:Ya,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:s,pad:a,dimRoundingMode:o}=n,i=r==null?[1,1]:r;P(ca(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[c,l]=t;return P(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${c.rank}.`),P(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),P(c.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),P(Qr(s,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${i}'.`),vn("depthwiseConv2d",a,o),{x:()=>pI(c.shape,e,l,s,a,i,o),filter:()=>dI(c,e,l.shape,s,a,i,o)}}},Ez={kernelName:_l,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,s]=t,a={x:r,filter:s,dy:e},o={x:r,filter:s,dy:e};return{x:()=>z.runKernel(uh,a,n),filter:()=>z.runKernel(lh,o,n)}}},Az={kernelName:Ja,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>z.runKernel(ph,r)}}},Dz={kernelName:lc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=V(fn(It(ct(n))),2/Math.sqrt(Math.PI));return{x:()=>V(e,r)}}},Fz={kernelName:Qa,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,n)}}},$z={kernelName:pc,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>U(e,n.shape)}}},Rz={kernelName:hc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,fn(n))}}},Pz={kernelName:eo,gradFunc:e=>({x:()=>Ge(e)})},Oz={kernelName:to,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=pt(n.shape,r.shape);return{a:()=>{let i=me(e,ce(r,"float32")),c=Lt(n.shape,s);return c.length>0?U(xe(i,c),n.shape):i},b:()=>{let i=V(e,ce(n,"float32")),c=Lt(r.shape,s);c.length>0&&(i=U(xe(i,c),r.shape));let l=ct(r);return It(me(i,ce(l,"float32")))}}}},Mz={kernelName:no,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[s,a,o,i]=t,c=i==null?Ie(1):i,l=Lt(a.shape,s.shape),u=[];if(a.rank===1){for(let x=0;x<s.shape.length-1;++x)u.push(s.shape[x]);u.push(1)}let d=fe(s,a),p=V(e,c),h=af(Y(o,Ie(r))),f=V(V(V(h,h),h),Ie(-.5));return{x:()=>a.rank===1?U(V(V(e,Pn(U(h,[1,1,1,a.shape[0]]),u)),c),s.shape):U(V(V(e,h),c),s.shape),mean:()=>{let x=V(V(h,Ie(-1)),p);return a.rank===1&&(x=xe(x,l)),U(x,a.shape)},variance:()=>{let x=V(V(f,d),p);return a.rank===1&&(x=xe(x,l)),U(x,a.shape)},scale:()=>{let x=V(d,h),w=V(e,x);return a.rank===1&&(w=xe(w,l)),U(w,a.shape)},offset:()=>{let x=e;return a.rank===1&&(x=xe(x,l)),U(x,a.shape)}}}},Lz={kernelName:mc,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,s]=t,{axis:a}=n,o=Ir(a,r.shape)[0];return{x:()=>{let c=r.shape,l=s.size,u=c.slice(0,o),d=u.length,p=c.slice(a,c.length).slice(1),h=p.length,f=AI(0,d),m=AI(d+1,d+1+h),g=DI([u,[l],p]),b=U(e,g),y=U(s,[l]),v=DI([[d],f,m]),x=Re(b,v),w=pv(x,y,r.shape[o]),T=Qy(v);return w=Re(w,T),w},indices:()=>s}}};function AI(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function DI(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var Bz={kernelName:ro,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Ge(n),b:()=>Ge(r)}}},zz={kernelName:so,gradFunc:e=>({x:()=>ce(e,"float32")})},Wz={kernelName:yc,gradFunc:e=>({x:()=>Ge(e)})},Vz={kernelName:vc,gradFunc:e=>({x:()=>Ge(e)})},Uz={kernelName:xc,gradFunc:e=>({x:()=>Ge(e)})},Gz={kernelName:ao,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:s}=n,a=On(r,0);return{x:()=>hn(a,e,V(e,s))}}},Hz={kernelName:Ic,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,Y(n,1))}}},jz={kernelName:oo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,ce(n,"float32"))}}},qz={kernelName:_0,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:s}=n;return{logits:()=>{let a=!0,o=fn(r);return fe(e,V(xe(e,s,a),o))}}}};function Kz(e,t,n,r=5,s=1,a=1,o=.5){let i={x:e,y:t,dy:n},c={depthRadius:r,bias:s,alpha:a,beta:o};return z.runKernel(bh,i,c)}var Xz=W({localResponseNormalizationBackprop_:Kz}),Yz={kernelName:Fl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,s]=t,{depthRadius:a,bias:o,alpha:i,beta:c}=n;return{x:()=>Xz(r,s,e,a,o,i,c)}}};function FI(e,t,n,r){return t.rank<n.rank&&(t=U(t,Jo(t.shape,r))),e.rank<n.rank&&(e=U(e,Jo(e.shape,r))),{x:()=>V(e,ce(Xn(n,t),e.dtype))}}var $I={kernelName:io,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:s}=r,a=t[0],o=t[1],i=Ir(s,a.shape),c=FI(e,o,a,i);return{x:()=>c.x()}}},Zz={kernelName:co,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>V(e,ce(la(n,r),"float32")),b:()=>V(e,ce(Zh(n,r),"float32"))}}};function Jz(e,t,n,r,s,a,o){let i=A(e,"dy","maxPool3dGrad"),c=A(t,"input","maxPool3dGrad"),l=A(n,"output","maxPool3dGrad"),u=i,d=c,p=l,h=!1;c.rank===4&&(h=!0,u=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=U(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),p=U(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),P(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),P(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),P(p.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),vn("maxPool3dGrad",a,o);let f={dy:u,input:d,output:p},m={filterSize:r,strides:s,pad:a,dimRoundingMode:o},g=z.runKernel(vh,f,m);return h?U(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var Qz=W({maxPool3dGrad_:Jz}),e4={kernelName:$l,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,s]=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:c}=n;return{x:()=>Qz(e,r,s,a,o,i,c)}}};function t4(e,t,n,r,s,a,o){let i=A(e,"dy","maxPoolGrad"),c=A(t,"input","maxPoolGrad"),l=A(n,"output","maxPoolGrad");P(c.rank===i.rank,()=>`Rank of input (${c.rank}) does not match rank of dy (${i.rank})`),P(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),P(c.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${c.rank}.`),vn("maxPoolGrad",a,o);let u={dy:i,input:c,output:l},d={filterSize:r,strides:s,pad:a,dimRoundingMode:o};return z.runKernel(yh,u,d)}var n4=W({maxPoolGrad_:t4}),r4={kernelName:uo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,s]=t,{filterSize:a,strides:o,pad:i}=n;return{x:()=>n4(e,r,s,a,o,i)}}},s4={kernelName:lo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:s}=n,a=Ir(s,r.shape),i=Yk(r.shape,a)[1],c=yt(i);return{x:()=>{let u=r.shape.slice();a.forEach(h=>{u[h]=1});let d=U(e,u);return me(V(d,Zn(r.shape,"float32")),c)}}}},a4={kernelName:po,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:s}=r,[a,o]=t,i=Ir(s,a.shape),c=FI(e,o,a,i);return{x:()=>c.x()}}},o4={kernelName:ho,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>V(e,ce(da(n,r),"float32")),b:()=>V(e,ce(On(n,r),"float32"))}}},i4={kernelName:fo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:s}=n,a=s.map(o=>o[0]);return{x:()=>ze(e,a,r.shape)}}},c4={kernelName:Tc,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=pt(n.shape,r.shape);return{a:()=>{let i=Lt(n.shape,s);return i.length>0?U(xe(e,i),n.shape):e},b:()=>{let i=V(e,It(cu(me(n,r)))),c=Lt(r.shape,s);return c.length>0?U(xe(i,c),r.shape):i}}}},u4={kernelName:mo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=pt(n.shape,r.shape);return{a:()=>{let i=V(e,ce(r,"float32")),c=Lt(n.shape,s);return c.length>0?U(xe(i,c),n.shape):i},b:()=>{let i=V(e,ce(n,"float32")),c=Lt(r.shape,s);return c.length>0?U(xe(i,c),r.shape):i}}}},l4={kernelName:Cc,gradFunc:e=>({x:()=>It(e)})},d4={kernelName:go,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>St(n.shape,"float32")}}},p4={kernelName:Dc,gradFunc:e=>({x:()=>Ge(e)})},h4={kernelName:Fc,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return ht(e,r).map(a=>()=>a)}},RI={kernelName:bo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:s}=n,a=s.map(o=>o[0]);return{x:()=>ze(e,a,r.shape)}}},f4={kernelName:yo,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,s]=t,a=n,o=r,i=pt(a.shape,o.shape);return{a:()=>{let u=ce(o,"float32"),d=V(e,V(u,Ss(a,fe(u,Ie(1))))),p=Lt(a.shape,i);return p.length>0&&(d=xe(d,p)),U(d,a.shape)},b:()=>{let u=On(a,0),d=hn(u,Yn(a),Ge(a)),p=V(e,V(s,d)),h=Lt(o.shape,i);return h.length>0&&(p=xe(p,h)),U(p,o.shape)}}}},m4={kernelName:vo,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,s=On(n,0);return{x:()=>hn(s,e,V(e,r)),alpha:()=>{let a=hn(s,Ge(e),V(e,n)),o=Lt(r.shape,e.shape);return o.length>0&&(a=xe(a,o)),U(a,r.shape)}}}},g4={kernelName:Za,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=pt(n.shape,r.shape);return{a:()=>{let i=me(e,ce(r,"float32")),c=Lt(n.shape,s);return c.length>0?U(xe(i,c),n.shape):i},b:()=>{let i=V(e,ce(n,"float32")),c=Lt(r.shape,s);c.length>0&&(i=U(xe(i,c),r.shape));let l=ct(r);return It(me(i,ce(l,"float32")))}}}},b4={kernelName:Rc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,It(ct(n)))}}},y4={kernelName:ko,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=V(da(n,6),fu(n));return{x:()=>V(e,ce(r,"float32"))}}},v4={kernelName:xo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,ce(fu(n),"float32"))}}},x4={kernelName:Pc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>U(e,n.shape)}}},w4={kernelName:wo,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,s={dy:e,images:r};return{images:()=>z.runKernel(Sh,s,n)}}},k4={kernelName:Pl,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,s={dy:e,images:r};return{images:()=>z.runKernel(Ih,s,n)}}},I4={kernelName:Io,gradFunc:(e,t,n)=>{let{dims:r}=n,s=Ir(r,e.shape);return{x:()=>Qn(e,s)}}},S4={kernelName:So,gradFunc:e=>({x:()=>Ge(e)})},T4={kernelName:To,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>It(me(e,V(Ss(n,1.5),2)))}}},C4={kernelName:Mc,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>ce(Ge(n),"float32"),t:()=>V(e,ce(n,e.dtype)),e:()=>V(e,ce(ad(n),e.dtype))}}},N4={kernelName:Lc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=On(n,Ie(0)),s=Ie(SI),a=Ie(TI),o=V(e,a),i=V(V(e,s),fn(ce(n,"float32")));return hn(r,o,i)}}}},_4={kernelName:No,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,V(n,fe(Ie(1),n)))}}},E4={kernelName:Wc,gradFunc:e=>({x:()=>Ge(e)})},A4={kernelName:Co,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(nd(ce(n,"float32")),e)}}},D4={kernelName:zc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(Kh(ce(n,"float32")),e)}}},F4={kernelName:Bc,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:s,size:a}=n,o=r.shape,[i,c]=xk(r,s,a),l=[];for(let u=0;u<e.rank;u++)l.push([i[u],o[u]-i[u]-c[u]]);return{x:()=>pr(e,l)}}},$4={kernelName:Ao,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:s}=n,a=!0,o=V(e,r);return{logits:()=>fe(o,V(xe(o,[s],a),r))}}},R4={kernelName:Vc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,dr(n))}}},PI={kernelName:Uc,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:s}=n;return{x:()=>td(e,r,s)}}},OI={kernelName:Gc,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>et(e,r)}}},P4={kernelName:_o,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,V(an(ce(n,"float32")),2))}}},O4={kernelName:Bl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,V(ce(n,"float32"),2))}}},M4={kernelName:Do,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=Ie(2);return{a:()=>V(e,V(s,fe(n,r))),b:()=>V(e,V(s,fe(r,n)))}}},L4={kernelName:ea,gradFunc:e=>({x:()=>Ge(e)})},B4={kernelName:Fo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=pt(n.shape,r.shape);return{a:()=>{let i=e,c=Lt(n.shape,s);return c.length>0&&(i=xe(i,c)),U(i,n.shape)},b:()=>{let i=e,c=Lt(r.shape,s);return c.length>0&&(i=xe(i,c)),U(It(i),r.shape)}}}},z4={kernelName:Eo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,s=r.shape.slice(),{axis:a}=n;Ir(a,r.shape).forEach(l=>{s[l]=1});let i=U(e,s),c=V(i,Zn(r.shape,"float32"));return{x:()=>c}}},W4={kernelName:$o,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,ct(nd(n)))}}},V4={kernelName:Ro,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(fe(Ie(1),ct(n)),e)}}},U4={kernelName:Qs,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:s}=n;return{x:()=>{let o=Ge(r);if(r.rank===1)for(let i=0;i<s[0];++i)o=Y(o,ze(e,[i*r.shape[0]],[r.shape[0]]));else if(r.rank===2)for(let i=0;i<s[0];++i)for(let c=0;c<s[1];++c)o=Y(o,ze(e,[i*r.shape[0],c*r.shape[1]],[r.shape[0],r.shape[1]]));else if(r.rank===3)for(let i=0;i<s[0];++i)for(let c=0;c<s[1];++c)for(let l=0;l<s[2];++l)o=Y(o,ze(e,[i*r.shape[0],c*r.shape[1],l*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else if(r.rank===4)for(let i=0;i<s[0];++i)for(let c=0;c<s[1];++c)for(let l=0;l<s[2];++l)for(let u=0;u<s[3];++u)o=Y(o,ze(e,[i*r.shape[0],c*r.shape[1],l*r.shape[2],u*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);return o}}}},G4={kernelName:Po,gradFunc:(e,t,n)=>{let r=n,{perm:s}=r,a=Qy(s);return{x:()=>Re(e,a)}}},H4={kernelName:Xc,gradFunc:(e,t,n)=>{let r=n,{axis:s}=r;return{value:()=>Ot(e,s)}}},j4={kernelName:zl,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>q4(e,n)}}};function q4(e,t){let n=ts(t,Ge(t)),r=Yo(e,n),s=la(t,Ie(0,"int32")),a=r.rank-s.rank;for(let i=0;i<a;++i)s=mn(s,i+1);s=Cr(s,Zn(r.shape,"bool"));let o=Ge(r);return hn(s,r,o)}var K4={kernelName:Yc,gradFunc:e=>({x:()=>Ge(e)})},X4=[EI,XB,YB,ZB,JB,QB,ez,tz,nz,rz,sz,az,cz,dz,pz,hz,fz,mz,gz,bz,yz,vz,wz,xz,Sz,Tz,Cz,Nz,_z,Ez,g4,Az,Dz,Fz,$z,Rz,Oz,Pz,Mz,Lz,Bz,zz,Wz,Vz,Uz,Gz,Hz,jz,qz,Yz,$I,$I,Zz,e4,r4,s4,a4,o4,i4,c4,u4,l4,d4,p4,h4,RI,RI,f4,m4,b4,y4,v4,x4,w4,k4,I4,S4,T4,C4,N4,_4,E4,A4,D4,F4,$4,R4,PI,PI,OI,OI,P4,M4,O4,L4,B4,z4,W4,V4,U4,G4,H4,j4,K4];for(let e of X4)E0(e);ee().prototype.abs=function(){return this.throwIfDisposed(),Bt(this)};ee().prototype.acos=function(){return this.throwIfDisposed(),Ey(this)};ee().prototype.acosh=function(){return this.throwIfDisposed(),Ay(this)};ee().prototype.add=function(e){return this.throwIfDisposed(),Y(this,e)};ee().prototype.all=function(e,t){return this.throwIfDisposed(),Gh(this,e,t)};ee().prototype.any=function(e,t){return this.throwIfDisposed(),Ql(this,e,t)};ee().prototype.argMax=function(e){return this.throwIfDisposed(),qo(this,e)};ee().prototype.argMin=function(e){return this.throwIfDisposed(),Dy(this,e)};ee().prototype.asScalar=function(){return this.throwIfDisposed(),P(this.size===1,()=>"The array must have only 1 element."),U(this,[])};ee().prototype.asType=function(e){return this.throwIfDisposed(),ce(this,e)};ee().prototype.as1D=function(){return this.throwIfDisposed(),U(this,[this.size])};ee().prototype.as2D=function(e,t){return this.throwIfDisposed(),U(this,[e,t])};ee().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),U(this,[e,t,n])};ee().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),U(this,[e,t,n,r])};ee().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),U(this,[e,t,n,r,s])};ee().prototype.asin=function(){return this.throwIfDisposed(),Fy(this)};ee().prototype.asinh=function(){return this.throwIfDisposed(),$y(this)};ee().prototype.atan=function(){return this.throwIfDisposed(),Ry(this)};ee().prototype.atan2=function(e){return this.throwIfDisposed(),Py(this,e)};ee().prototype.atanh=function(){return this.throwIfDisposed(),Oy(this)};ee().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),lr(this,e,t,n,r)};ee().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),td(this,e,t)};ee().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),Is(this,e,t,n,r,s)};ee().prototype.broadcastTo=function(e){return this.throwIfDisposed(),ou(this,e)};ee().prototype.cast=function(e){return this.throwIfDisposed(),ce(this,e)};ee().prototype.ceil=function(){return this.throwIfDisposed(),Wy(this)};ee().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Jt(this,e,t)};ee().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ee&&(e=[e]),et([this,...e],t)};ee().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),jh(this,e,t,n,r,s,a)};ee().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),qh(this,e,t,n,r,s)};ee().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Rt(this,e,t,n,r,s,a)};ee().prototype.cos=function(){return this.throwIfDisposed(),nd(this)};ee().prototype.cosh=function(){return this.throwIfDisposed(),Kh(this)};ee().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Xh(this,e,t,n)};ee().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Gy(this,e,t)};ee().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),ua(this,e,t,n,r,s,a)};ee().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),Hy(this,e,t,n,r,s)};ee().prototype.divNoNan=function(e){return this.throwIfDisposed(),jy(this,e)};ee().prototype.div=function(e){return this.throwIfDisposed(),me(this,e)};ee().prototype.dot=function(e){return this.throwIfDisposed(),Vk(this,e)};ee().prototype.elu=function(){return this.throwIfDisposed(),iu(this)};ee().prototype.equal=function(e){return this.throwIfDisposed(),Xn(this,e)};ee().prototype.erf=function(){return this.throwIfDisposed(),qy(this)};ee().prototype.exp=function(){return this.throwIfDisposed(),fn(this)};ee().prototype.expandDims=function(e){return this.throwIfDisposed(),mn(this,e)};ee().prototype.expm1=function(){return this.throwIfDisposed(),Ky(this)};ee().prototype.fft=function(){return this.throwIfDisposed(),dd(this)};ee().prototype.flatten=function(){return this.throwIfDisposed(),U(this,[this.size])};ee().prototype.floor=function(){return this.throwIfDisposed(),cu(this)};ee().prototype.floorDiv=function(e){return this.throwIfDisposed(),Uh(this,e)};ee().prototype.gather=function(e,t){return this.throwIfDisposed(),Yo(this,e,t)};ee().prototype.greaterEqual=function(e){return this.throwIfDisposed(),la(this,e)};ee().prototype.greater=function(e){return this.throwIfDisposed(),On(this,e)};ee().prototype.ifft=function(){return this.throwIfDisposed(),hu(this)};ee().prototype.irfft=function(){return this.throwIfDisposed(),df(this)};ee().prototype.isFinite=function(){return this.throwIfDisposed(),Gk(this)};ee().prototype.isInf=function(){return this.throwIfDisposed(),Hk(this)};ee().prototype.isNaN=function(){return this.throwIfDisposed(),Yy(this)};ee().prototype.leakyRelu=function(e){return this.throwIfDisposed(),rd(this,e)};ee().prototype.lessEqual=function(e){return this.throwIfDisposed(),da(this,e)};ee().prototype.less=function(e){return this.throwIfDisposed(),Zh(this,e)};ee().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Zy(this,e,t,n,r)};ee().prototype.logSigmoid=function(){return this.throwIfDisposed(),Kk(this)};ee().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Qh(this,e)};ee().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),ev(this,e,t)};ee().prototype.log=function(){return this.throwIfDisposed(),Yn(this)};ee().prototype.log1p=function(){return this.throwIfDisposed(),sd(this)};ee().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Cr(this,e)};ee().prototype.logicalNot=function(){return this.throwIfDisposed(),ad(this)};ee().prototype.logicalOr=function(e){return this.throwIfDisposed(),ef(this,e)};ee().prototype.logicalXor=function(e){return this.throwIfDisposed(),Jk(this,e)};ee().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),De(this,e,t,n)};ee().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Pt(this,e,t,n,r)};ee().prototype.max=function(e,t){return this.throwIfDisposed(),Tr(this,e,t)};ee().prototype.maximum=function(e){return this.throwIfDisposed(),ts(this,e)};ee().prototype.mean=function(e,t){return this.throwIfDisposed(),Et(this,e,t)};ee().prototype.min=function(e,t){return this.throwIfDisposed(),od(this,e,t)};ee().prototype.minimum=function(e){return this.throwIfDisposed(),uu(this,e)};ee().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),nv(this,e,t)};ee().prototype.mod=function(e){return this.throwIfDisposed(),rv(this,e)};ee().prototype.mul=function(e){return this.throwIfDisposed(),V(this,e)};ee().prototype.neg=function(){return this.throwIfDisposed(),It(this)};ee().prototype.norm=function(e,t,n){return this.throwIfDisposed(),mf(this,e,t,n)};ee().prototype.notEqual=function(e){return this.throwIfDisposed(),Qo(this,e)};ee().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),ru(this,e,t,n)};ee().prototype.onesLike=function(){return this.throwIfDisposed(),Jn(this)};ee().prototype.pad=function(e,t){return this.throwIfDisposed(),pr(this,e,t)};ee().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),tI(this,e,t,n,r,s,a)};ee().prototype.pow=function(e){return this.throwIfDisposed(),Ss(this,e)};ee().prototype.prelu=function(e){return this.throwIfDisposed(),cd(this,e)};ee().prototype.prod=function(e,t){return this.throwIfDisposed(),nf(this,e,t)};ee().prototype.reciprocal=function(){return this.throwIfDisposed(),ov(this)};ee().prototype.relu=function(){return this.throwIfDisposed(),qe(this)};ee().prototype.relu6=function(){return this.throwIfDisposed(),rf(this)};ee().prototype.reshapeAs=function(e){return this.throwIfDisposed(),U(this,e.shape)};ee().prototype.reshape=function(e){return this.throwIfDisposed(),U(this,e)};ee().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),vI(this,e,t,n)};ee().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),xI(this,e,t,n)};ee().prototype.reverse=function(e){return this.throwIfDisposed(),Qn(this,e)};ee().prototype.rfft=function(){return this.throwIfDisposed(),pd(this)};ee().prototype.round=function(){return this.throwIfDisposed(),sf(this)};ee().prototype.rsqrt=function(){return this.throwIfDisposed(),af(this)};ee().prototype.selu=function(){return this.throwIfDisposed(),of(this)};ee().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),ei(this,e,t,n,r,s,a)};ee().prototype.sigmoid=function(){return this.throwIfDisposed(),dr(this)};ee().prototype.sign=function(){return this.throwIfDisposed(),iv(this)};ee().prototype.sin=function(){return this.throwIfDisposed(),cf(this)};ee().prototype.sinh=function(){return this.throwIfDisposed(),uf(this)};ee().prototype.slice=function(e,t){return this.throwIfDisposed(),ze(this,e,t)};ee().prototype.softmax=function(e){return this.throwIfDisposed(),Mr(this,e)};ee().prototype.softplus=function(){return this.throwIfDisposed(),Zo(this)};ee().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),id(this,e,t)};ee().prototype.split=function(e,t){return this.throwIfDisposed(),Mn(this,e,t)};ee().prototype.sqrt=function(){return this.throwIfDisposed(),an(this)};ee().prototype.square=function(){return this.throwIfDisposed(),ct(this)};ee().prototype.squaredDifference=function(e){return this.throwIfDisposed(),pf(this,e)};ee().prototype.squeeze=function(e){return this.throwIfDisposed(),ns(this,e)};ee().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof Ee?[this,e]:[this,...e];return Ot(n,t)};ee().prototype.step=function(e){return this.throwIfDisposed(),fu(this,e)};ee().prototype.stridedSlice=function(e,t,n,r,s,a,o,i){return this.throwIfDisposed(),uv(this,e,t,n,r,s,a,o,i)};ee().prototype.sub=function(e){return this.throwIfDisposed(),fe(this,e)};ee().prototype.sum=function(e,t){return this.throwIfDisposed(),xe(this,e,t)};ee().prototype.tan=function(){return this.throwIfDisposed(),lv(this)};ee().prototype.tanh=function(){return this.throwIfDisposed(),Xo(this)};ee().prototype.tile=function(e){return this.throwIfDisposed(),Pn(this,e)};ee().prototype.toBool=function(){return this.throwIfDisposed(),ce(this,"bool")};ee().prototype.toFloat=function(){return this.throwIfDisposed(),ce(this,"float32")};ee().prototype.toInt=function(){return this.throwIfDisposed(),ce(this,"int32")};ee().prototype.topk=function(e,t){return this.throwIfDisposed(),dv(this,e,t)};ee().prototype.transpose=function(e){return this.throwIfDisposed(),Re(this,e)};ee().prototype.unique=function(e){return this.throwIfDisposed(),ff(this,e)};ee().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),pv(this,e,t)};ee().prototype.unstack=function(e){return this.throwIfDisposed(),ht(this,e)};ee().prototype.where=function(e,t){return this.throwIfDisposed(),hn(e,this,t)};ee().prototype.zerosLike=function(){return this.throwIfDisposed(),Ge(this)};var MI={};Ae(MI,{maxNorm:()=>Q4,minMaxNorm:()=>nW,nonNeg:()=>tW,unitNorm:()=>eW});var xv;function Ht(){return xv==null&&(xv=Ck().epsilon()),xv}function zr(){return"channelsLast"}var Ns=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Ns.prototype)}},Wr=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Wr.prototype)}},H=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,H.prototype)}},$e=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,$e.prototype)}},LI=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,LI.prototype)}};function ni(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function ss(e,t){if(!e)throw new LI(t)}function BI(e,t){let n=0;for(let r of e)r===t&&n++;return n}function Ln(e){return e.length===1?e[0]:e}function vt(e){return Array.isArray(e)?e:[e]}function _s(e){let n=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function ri(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var Nr={};function wv(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function kv(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>kv(t));else{let t=Object.keys(e);for(let n of t){let r=e[n];r!=null&&typeof r=="object"&&(!Array.isArray(r)&&r.type==="ndarray"&&typeof r.value=="number"?e[n]=r.value:kv(r))}}}function md(e,t={},n={},r="object",s=!1){if(typeof e=="string"){let a=e,o;if(a in n)o=n[a];else if(a in Nr)o=Nr[a];else if(o=t[a],o==null)throw new H(`Unknown ${r}: ${e}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{let a=e;if(a.className==null||a.config==null)throw new H(`${r}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);let o=a.className,i,c;if(o in n?[i,c]=n[o]:o in Nr?[i,c]=Nr.className:o in t&&([i,c]=t[o]),i==null)throw new H(`Unknown ${r}: ${o}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(c!=null){let l={};for(let h of Object.keys(Nr))l[h]=Nr[h];for(let h of Object.keys(n))l[h]=n[h];let u=a.config;u.customObjects=l;let d=Object.assign({},Nr);for(let h of Object.keys(n))Nr[h]=n[h];kv(a.config);let p=c(i,a.config,n,s);return Nr=Object.assign({},d),p}else{let l=Object.assign({},Nr);for(let d of Object.keys(n))Nr[d]=n[d];let u=new i(a.config);return Nr=Object.assign({},l),u}}}function Y4(e,t){return e<t?-1:e>t?1:0}function Nf(e,t){return-1*Y4(e,t)}function fa(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function Z4(e){if(e==null)throw new H(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function si(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new H(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Iv(e,t,n=0,r=1/0){return ss(n>=0),ss(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(s=>typeof s===t)}function Qt(e,t){Array.isArray(e)?(k.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,r)=>Qt(n,`element ${r+1} of ${t}`))):k.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${zI(e)}.`)}function zI(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>zI(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function J4(e,t,n){let r=n!=null?n():k.now(),s;return(...o)=>{let i=n!=null?n():k.now();return i-r<t||(r=i,s=e(...o)),s}}function WI(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}function Sv(e,t){return M(()=>an(xe(V(e,e),t,!0)))}var gd=class extends ie.Serializable{getConfig(){return{}}},Tv=class extends gd{constructor(e){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return M(()=>{let t=Sv(e,this.axis),n=Jt(t,0,this.maxValue);return V(e,me(n,Y(Ht(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Tv.className="MaxNorm";ie.registerClass(Tv);var Cv=class extends gd{constructor(e){super();this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return M(()=>me(e,Y(Ht(),Sv(e,this.axis))))}getConfig(){return{axis:this.axis}}};Cv.className="UnitNorm";ie.registerClass(Cv);var Nv=class extends gd{apply(e){return qe(e)}};Nv.className="NonNeg";ie.registerClass(Nv);var _v=class extends gd{constructor(e){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return M(()=>{let t=Sv(e,this.axis),n=Y(V(this.rate,Jt(t,this.minValue,this.maxValue)),V(1-this.rate,t));return V(e,me(n,Y(Ht(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};_v.className="MinMaxNorm";ie.registerClass(_v);var VI={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function jt(e){return wv(e)}function UI(e,t={}){return md(e,ie.SerializationMap.getMap().classNameMap,t,"constraint")}function qt(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in VI?VI[e]:e,config:{}};return UI(n)}else return e instanceof gd?e:UI(e)}function Q4(e){return new Tv(e)}function eW(e){return new Cv(e)}function tW(){return new Nv}function nW(e){return new _v(e)}var GI={};Ae(GI,{constant:()=>TW,glorotNormal:()=>FW,glorotUniform:()=>DW,heNormal:()=>$W,heUniform:()=>RW,identity:()=>EW,leCunNormal:()=>PW,leCunUniform:()=>OW,ones:()=>SW,orthogonal:()=>MW,randomNormal:()=>NW,randomUniform:()=>CW,truncatedNormal:()=>_W,varianceScaling:()=>AW,zeros:()=>IW});var rW=["channelsFirst","channelsLast"],sW=["nearest","bilinear"],aW=["valid","same","causal"],oW=["max","avg"],iW=["sum","mul","concat","ave"],gu=new Map;function Mt(e){si(rW,"DataFormat",e)}function cW(e){si(sW,"InterpolationFormat",e)}function hr(e){si(aW,"PaddingMode",e)}function HI(e){si(oW,"PoolMode",e)}var bd=[],jI="/";function ai(e,t){bd.push(e);try{let n=t();return bd.pop(),n}catch(n){throw bd.pop(),n}}function uW(){return bd.length===0?"":bd.join(jI)+jI}function qI(e){if(!XI(e))throw new Error("Not a valid tensor name: '"+e+"'");return uW()+e}function KI(e){if(!XI(e))throw new Error("Not a valid tensor name: '"+e+"'");gu.has(e)||gu.set(e,0);let t=gu.get(e);if(gu.set(e,gu.get(e)+1),t>0){let n=`${e}_${t}`;return gu.set(n,1),n}else return e}var lW=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function XI(e){return!!e.match(lW)}function dW(e){return e===parseInt(e.toString(),10)}function ma(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function bu(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function ga(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function Vr(e,t){if(t<e)throw new H(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}function _f(e,t){return ce(e,t)}function yd(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),U(e,n)}function pW(e,t){return M(()=>{if(e.shape.length!==2)throw new H(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=yd(e,1);return Dv(n,[1,t,1])})}function hW(e){let t=[ma(e.shape)];return U(e,t)}function fW(e){if(e.rank<=1)throw new H(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],ma(e.shape,1)];return U(e,t)}function oi(e,t,n){return M(()=>{switch(e.rank){case 1:return lf(e,t,n);case 2:return cv(e,[t,0],[n,e.shape[1]]);case 3:return pu(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return ld(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return ze(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return ze(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new H(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Ev(e,t,n){return M(()=>{switch(e.rank){case 1:return lf(e,t,n);case 2:return cv(e,[0,t],[e.shape[0],n]);case 3:return pu(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return ld(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new H(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Ef(e,t,n,r){return M(()=>{switch(e.rank){case 1:return lf(e,t,n);case 2:switch(r){case 1:return oi(e,t,n);case 2:return Ev(e,t,n);default:throw new H(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return oi(e,t,n);case 2:return pu(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Ev(e,t,n);default:throw new H(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return oi(e,t,n);case 2:return ld(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return ld(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Ev(e,t,n);default:throw new H(`The axis is not within the rank of the tensor ${r}`)}default:throw new H(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Av(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),et(e,t)}function YI(e,t){switch(e.rank){case 1:return Pk([e,t]);case 2:return Ok([e,t],0);case 3:return Mk([e,t],0);case 4:return Lk([e,t],0);default:throw new H(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Dv(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new H(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Pn(e,t)}function Af(e,t=0,n=1,r,s){return nI(e,t,n,r,s)}function as(e,t,n,r){if(e.rank<2||t.rank<2)throw new $e(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let s=e.shape.slice(-1)[0],a=t.shape.slice(-2)[0];if(s!==a)throw new $e(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2){let s=!1,a=!1;return pa.matMul({a:e,b:t,transposeA:s,transposeB:a,bias:r?Fv(e.rank,r,zr()):null,activation:n})}else{let s=e.shape.slice(),a=s.pop();e=U(e,[-1,a]);let o=t.shape.slice(),i=o.pop(),c=o.pop(),l=[...o,i],u=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=U(Re(t,u),[c,-1]);let d=[...s,...l],p=!1,h=!1;return U(pa.matMul({a:e,b:t,transposeA:p,transposeB:h,bias:r?Fv(e.rank,r,zr()):null,activation:n}),d)}}function ZI(e,t,n){return M(()=>(Array.isArray(t)?t=He(t,"int32"):t=ce(t,"int32"),Yo(e,t,n)))}function vd(e){return V(e,e)}function Fv(e,t,n){let r=t.shape;if(t.rank!==1&&t.rank!==e)throw new H(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return r.length===1?U(t,[1,r[0],1,1,1]):U(t,[1,r[3],r[0],r[1],r[2]]);if(n==="channelsLast")return r.length===1?U(t,[1,1,1,1,r[0]]):U(t,[1].concat(r))}else if(e===4){if(n==="channelsFirst")return r.length===1?U(t,[1,r[0],1,1]):U(t,[1,r[2],r[0],r[1]]);if(n==="channelsLast")return r.length===1?U(t,[1,1,1,r[0]]):U(t,[1].concat(r))}else if(e===3){if(n==="channelsFirst")return r.length===1?U(t,[1,r[0],1]):U(t,[1,r[1],r[0]]);if(n==="channelsLast")return r.length===1?U(t,[1,1,r[0]]):U(t,[1].concat(r))}else if(e<3)return t;throw new H(`Unsupported input rank by biasAdd: ${t.rank}`)}function Ur(e,t,n){return M(()=>(n==null&&(n=zr()),Mt(n),Y(e,Fv(e.rank,t,n))))}function mW(e,t=1){if(t!==1)throw new $e(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return iu(e)}function gW(e){return M(()=>me(e,Y(Bt(e),1)))}function JI(e,t,n,r){return M(()=>uI(e,t,n,r))}function bW(e){return M(()=>{let t=Y(.5,V(.2,e));return Jt(t,0,1)})}function xd(e,t,n=!1){return n?e():t()}var yW=["fanIn","fanOut","fanAvg"],vW=["normal","uniform","truncatedNormal"];function xW(e){si(yW,"FanMode",e)}function wW(e){si(vW,"Distribution",e)}var _r=class extends ie.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},$v=class extends _r{apply(e,t){return St(e,t)}};$v.className="Zeros";ie.registerClass($v);var Df=class extends _r{apply(e,t){return Zn(e,t)}};Df.className="Ones";ie.registerClass(Df);var Rv=class extends _r{constructor(e){super();if(typeof e!="object")throw new H(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new H(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return M(()=>V(Ie(this.value),Zn(e,t)))}getConfig(){return{value:this.value}}};Rv.className="Constant";ie.registerClass(Rv);var Pv=class extends _r{constructor(e){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return lu(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Pv.className="RandomUniform";ie.registerClass(Pv);var Ov=class extends _r{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new $e(`randomNormal does not support dType ${t}.`);return Af(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Ov.className="RandomNormal";ie.registerClass(Ov);var Mv=class extends _r{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new $e(`truncatedNormal does not support dType ${t}.`);return hf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Mv.className="TruncatedNormal";ie.registerClass(Mv);var Lv=class extends _r{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return M(()=>{if(e.length!==2||e[0]!==e[1])throw new H("Identity matrix initializer can only be used for 2D square matrices.");return V(this.gain,Xy(e[0]))})}getConfig(){return{gain:this.gain}}};Lv.className="Identity";ie.registerClass(Lv);function kW(e,t="channelsLast"){let n,r;if(Mt(t),e.length===2)n=e[0],r=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let s=ma(e,2);n=e[1]*s,r=e[0]*s}else if(t==="channelsLast"){let s=ma(e,0,e.length-2);n=e[e.length-2]*s,r=e[e.length-1]*s}}else{let s=ma(e);n=Math.sqrt(s),r=Math.sqrt(s)}return[n,r]}var Bn=class extends _r{constructor(e){super();if(e.scale<0)throw new H(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,xW(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,wW(this.distribution),this.seed=e.seed}apply(e,t){let n=kW(e),r=n[0],s=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,r):this.mode==="fanOut"?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),this.distribution==="normal"){let o=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new $e(`${this.getClassName()} does not support dType ${t}.`);return hf(e,0,o,t,this.seed)}else{let o=Math.sqrt(3*a);return lu(e,-o,o,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Bn.className="VarianceScaling";ie.registerClass(Bn);var Ff=class extends Bn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Bn.className}};Ff.className="GlorotUniform";ie.registerClass(Ff);var $f=class extends Bn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Bn.className}};$f.className="GlorotNormal";ie.registerClass($f);var Rf=class extends Bn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Bn.className}};Rf.className="HeNormal";ie.registerClass(Rf);var Pf=class extends Bn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Bn.className}};Pf.className="HeUniform";ie.registerClass(Pf);var Of=class extends Bn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Bn.className}};Of.className="LeCunNormal";ie.registerClass(Of);var Mf=class extends Bn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Bn.className}};Mf.className="LeCunNormal";ie.registerClass(Mf);var Bv=class extends _r{constructor(e){super();if(this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new $e("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return M(()=>{if(e.length<2)throw new $e("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,r=Af(n,0,1,"float32"),s=kI.gramSchmidt(r);return e[0]>e[1]&&(s=Re(s)),V(this.gain,s)})}getConfig(){return{gain:this.gain,seed:this.seed}}};Bv.className="Orthogonal";ie.registerClass(Bv);var QI={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function eS(e,t={}){return md(e,ie.SerializationMap.getMap().classNameMap,t,"initializer")}function At(e){return wv(e)}function Tt(e){if(typeof e=="string"){let t=e in QI?QI[e]:e;if(t==="GlorotNormal")return new $f;if(t==="GlorotUniform")return new Ff;if(t==="HeNormal")return new Rf;if(t==="HeUniform")return new Pf;if(t==="LeCunNormal")return new Of;if(t==="LeCunUniform")return new Mf;{let n={};return n.className=t,n.config={},eS(n)}}else return e instanceof _r?e:eS(e)}function IW(){return new $v}function SW(){return new Df}function TW(e){return new Rv(e)}function CW(e){return new Pv(e)}function NW(e){return new Ov(e)}function _W(e){return new Mv(e)}function EW(e){return new Lv(e)}function AW(e){return new Bn(e)}function DW(e){return new Ff(e)}function FW(e){return new $f(e)}function $W(e){return new Rf(e)}function RW(e){return new Pf(e)}function PW(e){return new Of(e)}function OW(e){return new Mf(e)}function MW(e){return new Bv(e)}var tS={};Ae(tS,{Layer:()=>Ke,RNN:()=>cs,RNNCell:()=>Ed,activation:()=>vU,add:()=>_U,alphaDropout:()=>dG,average:()=>EU,averagePooling1d:()=>rw,averagePooling2d:()=>sw,averagePooling3d:()=>aw,avgPool1d:()=>LU,avgPool2d:()=>zU,avgPool3d:()=>VU,avgPooling1d:()=>BU,avgPooling2d:()=>WU,avgPooling3d:()=>UU,batchNormalization:()=>PU,bidirectional:()=>rG,concatenate:()=>AU,conv1d:()=>lU,conv2d:()=>dU,conv2dTranspose:()=>pU,conv3d:()=>hU,conv3dTranspose:()=>fU,convLstm2d:()=>QU,convLstm2dCell:()=>eG,cropping2D:()=>gU,dense:()=>xU,depthwiseConv2d:()=>yU,dot:()=>RU,dropout:()=>wU,elu:()=>sU,embedding:()=>NU,flatten:()=>IU,gaussianDropout:()=>lG,gaussianNoise:()=>uG,globalAveragePooling1d:()=>GU,globalAveragePooling2d:()=>HU,globalMaxPool1d:()=>aG,globalMaxPool2d:()=>oG,globalMaxPooling1d:()=>lT,globalMaxPooling2d:()=>dT,gru:()=>qU,gruCell:()=>KU,input:()=>RS,inputLayer:()=>rU,layerNormalization:()=>OU,leakyReLU:()=>oU,lstm:()=>XU,lstmCell:()=>YU,masking:()=>pG,maxPool1d:()=>iG,maxPool2d:()=>cG,maxPooling1d:()=>pT,maxPooling2d:()=>hT,maxPooling3d:()=>jU,maximum:()=>DU,minimum:()=>FU,multiply:()=>$U,permute:()=>CU,prelu:()=>iU,reLU:()=>aU,repeatVector:()=>SU,reshape:()=>TU,rnn:()=>tG,separableConv2d:()=>mU,simpleRNN:()=>ZU,simpleRNNCell:()=>JU,softmax:()=>cU,spatialDropout1d:()=>kU,stackedRNNCells:()=>nG,thresholdedReLU:()=>uU,timeDistributed:()=>sG,upSampling2d:()=>bU,zeroPadding2d:()=>MU});var LW=0;function nS(){return LW++}var Lf={};function Bf(e=""){return e in Lf||(Lf[e]=0),Lf[e]+=1,e+Lf[e].toString()}function zv(e){return Array.isArray(e)&&Array.isArray(e[0])}function zf(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Oe(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new H(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function at(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new H(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function Wf(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((r,s)=>r*s);return t}var rS="Variable",sS=class{constructor(e,t="float32",n=rS,r=!0,s=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=nS(),n=n==null?rS:n,this.originalName=qI(n),this.name=KI(this.originalName),this.trainable_=r,this.constraint=s,this.val=sI(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),BW(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function BW(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function Wv(e){return e.map(t=>t.read())}function Vv(e){e.forEach(t=>{t[0].write(t[1])})}var zt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Gr=class{constructor(e,t,n,r,s,a,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=o,this.id=nS(),a!=null&&(this.originalName=qI(a),this.name=KI(this.originalName)),this.rank=t.length}},zW=0,Vf=class{constructor(e,t){this.callArgs=t,this.id=zW++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},WW=0,Ke=class extends ie.Serializable{constructor(e={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=WW++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=_s(n)+"_"+Bf(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let s=null;e.batchSize!=null&&(s=e.batchSize),n=[s].concat(e.inputShape)}this.batchInputShape=n;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Wr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new H(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Ln(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Ln(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ns(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Ns(`Layer ${this.name} is not connected, no input to return.`);return Ln(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Ns(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Ns(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Ln(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=vt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=vt(this.inputSpec);if(e.length!==t.length)throw new H(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let r=e[n],s=t[n];if(s==null)continue;let a=r.rank;if(s.ndim!=null&&a!==s.ndim)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(s.maxNDim!=null&&a>s.maxNDim)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(s.minNDim!=null&&a<s.minNDim)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(s.dtype!=null&&r.dtype!==s.dtype)throw new H(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){let o=r.shape;for(let i in s.axes){let c=Number(i),l=s.axes[i],u=c>=0?o[c]:o[o.length+c];if(l!=null&&[l,null].indexOf(u)===-1)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${l} but got shape ${o}.`)}}if(s.shape!=null)for(let o=0;o<s.shape.length;++o){let i=s.shape[o],c=r.shape[o];if(i!=null&&c!=null&&i!==c)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=vt(e),r=!0;for(let a of n)if(!(a instanceof Gr)){r=!1;break}let s=!0;for(let a of n)if(a instanceof Gr){s=!1;break}if(r===s)throw new H("Arguments to apply() must be all SymbolicTensors or all Tensors");return ai(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let o of vt(e))a.push(o.shape);this.build(Ln(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let a=this.call(e,t),o=vt(a),i=[];for(let c of o)n.indexOf(c)!==-1&&(c=c.clone()),i.push(c);if(a=Ln(i),this.activityRegularizer!=null)throw new $e("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=VW(e),o=this.computeOutputShape(a),i,c=UW(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),o!=null&&o.length>0&&Array.isArray(o[0])?i=o.map((l,u)=>new Gr(c,l,this,vt(e),t,this.name,u)):i=new Gr(c,o,this,vt(e),t,this.name),this.addInboundNode(e,i,null,null,a,o,t),this._refCount++,this.activityRegularizer!=null)throw new $e("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{n!=null&&e[r]!=null&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Ns(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Ns(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Wr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Wf(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Wv(e?this.trainableWeights:this.weights)}setWeights(e){M(()=>{let t=this.weights;if(t.length!==e.length)throw new H(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],r=Wv(t);for(let s=0;s<r.length;++s){let a=r[s],o=t[s],i=e[s];if(!k.arraysEqual(a.shape,i.shape))throw new H(`Layer weight shape ${a.shape} not compatible with provided weight shape ${i.shape}`);n.push([o,i])}Vv(n)})}addWeight(e,t,n,r,s,a,o,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new H(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(r=i!=null?i():Tt("zeros"));let c=r.apply(t,n),l=new sS(c,n,e,a,o);return c.dispose(),s!=null&&this.addLoss(()=>s.apply(l.read())),a==null&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=vt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,r,s,a,o=null){let i=vt(e);t=vt(t),n=vt(n),r=vt(r),s=zf(s),a=zf(a);let c=[],l=[],u=[];for(let d of i)c.push(d.sourceLayer),l.push(d.nodeIndex),u.push(d.tensorIndex);new Vf({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:u,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},o);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount==0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function VW(e){e=vt(e);let t=[];for(let n of e)t.push(n.shape);return Ln(t)}function UW(e){return"float32"}function aS(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let r=t.inboundNodes[n];if(r.inboundLayers.length===0)return r.inputTensors;{let s=[];for(let a=0;a<r.inboundLayers.length;a++){let o=r.inputTensors[a],i=r.inboundLayers[a],c=r.nodeIndices[a],l=aS(o,i,c);for(let u of l)s.indexOf(u)===-1&&s.push(u)}return s}}}var yu=class extends Ke{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:Bf("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new H("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new H("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new H("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new Gr(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Vf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new H(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};yu.className="InputLayer";ie.registerClass(yu);function oS(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new H("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new yu({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function ba(e){if(e==null)return;let t=[],n=[],r=[];for(let s in e){let a=e[s];if(typeof a!="number"){let o=a;t.push(o.data()),n.push(s),r.push(o)}}if(t.length>0){let s=await Promise.all(t);for(let a=0;a<s.length;++a)e[n[a]]=s[a][0];Fe(r)}}function iS(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var cS;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(cS||(cS={}));var GW=125,vu=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},uS=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},HW=class extends vu{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let r in t){let s=t[r];if(typeof s=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+s*n;else{let a;r in this.totals?a=this.totals[r]:this.totals[r]=0;let o=M(()=>Y(this.totals[r],V(s,n)));this.totals[r]=o,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:M(()=>{let r=V(me(1,this.seen),this.totals[n]);t[n]=r,this.totals[n].dispose(),Zt(t[n])}))}},lS=class extends vu{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let s in this.history){let a=this.history[s];for(let o=0;o<a.length;++o)if(typeof a[o]!="number"){let i=a[o];e.push(i.data()),t.push(s),n.push(o)}}let r=await Promise.all(e);for(let s=0;s<r.length;++s)this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=r[s][0]}},dS=class extends vu{constructor(e,t){super();if(this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||II,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=GW),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");k.isNumber(this.yieldEvery)&&(this.maybeWait=J4(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];this.yield!=null&&(await ba(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await ba(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await ba(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await ba(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await ba(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):k.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await ba(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await ba(e),await this.trainEnd(e))}};function pS(e,t){return e==null&&(e={}),e instanceof vu?[e]:Array.isArray(e)&&e[0]instanceof vu?e:vt(e).map(r=>new dS(r,t))}var Er=class{constructor(){}static registerCallbackConstructor(e,t){k.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Er.checkForDuplicate(t),Er.constructors[e]==null&&(Er.constructors[e]=[]),Er.constructors[e].push(t)}static checkForDuplicate(e){for(let t in Er.constructors)Er.constructors[+t].forEach(r=>{if(r===e)throw new H("Duplicate callback constructor.")})}static clear(){Er.constructors={}}static createCallbacks(e){let t=[];for(let n in Er.constructors){let r=+n;e>=r&&t.push(...Er.constructors[r])}return t.map(n=>new n)}};Er.constructors={};function hS(e,t,n,r,s,a,o,i,c){let l=new lS,u=[new HW,...Er.createCallbacks(t)];e!=null&&u.push(...e),u.push(l);let d=new uS(u);return d.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:c}),{callbackList:d,history:l}}function Hr(e,t={},n=!1){return md(e,ie.SerializationMap.getMap().classNameMap,t,"layer",n)}function Uf(e,t){return M(()=>{e.dtype!=="float32"&&(e=ce(e,"float32"));let n=xe(vd(e),t,!0),r=xn(n.shape,Ht()),s=an(ts(n,r));return me(e,s)})}function ii(e,t){return M(()=>Et(vd(fe(t,e)),-1))}function Gf(e,t){return M(()=>Et(Bt(fe(t,e)),-1))}function xu(e,t){return M(()=>{let n=fe(e,t),r=Jt(Bt(e),Ht(),Number.MAX_VALUE),s=Bt(me(n,r));return V(100,Et(s,-1))})}function jW(e,t){return M(()=>{let n=Jt(t,Ht(),Number.MAX_VALUE),r=Yn(Y(1,n)),s=Jt(e,Ht(),Number.MAX_VALUE),a=Yn(Y(1,s));return Et(vd(fe(r,a)),-1)})}function qW(e,t){return M(()=>{let n=ts(0,fe(1,V(e,t)));return Et(vd(n),-1)})}function KW(e,t){return M(()=>{let n=ts(0,fe(1,V(e,t)));return Et(n,-1)})}function XW(e,t){return M(()=>{let n=xe(V(e,t),-1),r=Tr(V(fe(1,e),t),-1);return ts(0,Y(1,fe(r,n)))})}function YW(e,t){return M(()=>{let n=Math.log(2),r=fe(t,e),s=fe(Y(r,Zo(V(-2,r))),n);return Et(s,-1)})}function wd(e,t,n=!1){return M(()=>{if(n)t=Mr(t);else{let r=xe(t,t.shape.length-1,!0);t=me(t,r)}return t=Jt(t,Ht(),1-Ht()),It(xe(V(ce(e,"float32"),Yn(t)),t.shape.length-1))})}function Hf(e,t,n=!1){return M(()=>{let r=ce(cu(hW(e)),"int32");t=Jt(t,Ht(),1-Ht());let s=t.shape,a=U(ru(r,s[s.length-1]),s);return wd(a,t,n)})}function ZW(e,t){if(!k.arraysEqual(e.shape,t.shape))throw new H(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return M(()=>{let n=qe(t),r=It(Bt(t));return Y(fe(n,V(t,e)),sd(fn(r)))})}function jf(e,t){return M(()=>{let n;return n=Jt(t,Ht(),1-Ht()),n=Yn(me(n,fe(1,n))),Et(ZW(e,n),-1)})}function JW(e,t){return M(()=>{let n=Jt(e,Ht(),1),r=Jt(t,Ht(),1);return xe(V(e,Yn(me(n,r))),-1)})}function QW(e,t){return M(()=>{let n=Yn(Y(Ht(),t));return Et(fe(t,V(e,n)),-1)})}function Uv(e,t){return M(()=>{let n=Uf(e,-1),r=Uf(t,-1),s=V(n,r);return It(xe(s,-1))})}var qf={meanSquaredError:ii,meanAbsoluteError:Gf,meanAbsolutePercentageError:xu,meanSquaredLogarithmicError:jW,squaredHinge:qW,hinge:KW,categoricalHinge:XW,logcosh:YW,categoricalCrossentropy:wd,sparseCategoricalCrossentropy:Hf,binaryCrossentropy:jf,kullbackLeiblerDivergence:JW,poisson:QW,cosineProximity:Uv};function Gv(e){if(typeof e=="string"){if(e in qf)return qf[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new H(t)}else return e}function Hv(e,t){return M(()=>{let n=V(.5,Jn(t)),r=_f(On(t,n),e.dtype);return Et(Xn(e,r),-1)})}function jv(e,t){return M(()=>_f(Xn(qo(e,-1),qo(t,-1)),"float32"))}function fS(e,t){return M(()=>ce(xe(Cr(Xn(e,1),Xn(t,1))),"float32"))}function eV(e,t){return M(()=>ce(xe(Cr(Xn(e,1),Xn(t,0))),"float32"))}function tV(e,t){return M(()=>ce(xe(Cr(Xn(e,0),Xn(t,1))),"float32"))}function mS(e,t){return M(()=>{let n=fS(e,t),r=tV(e,t),s=Y(n,r);return ce(hn(On(s,0),me(n,s),0),"float32")})}function nV(e,t){return M(()=>{let n=fS(e,t),r=eV(e,t),s=Y(n,r);return ce(hn(On(s,0),me(n,s),0),"float32")})}function gS(e,t){return jf(e,t)}function bS(e,t){return e.rank===t.rank&&(e=ns(e,[e.rank-1])),t=qo(t,-1),t.dtype!==e.dtype&&(t=ce(t,e.dtype)),ce(Xn(e,t),"float32")}var rV=ii,sV=ii,aV=Gf,oV=Gf,iV=xu,cV=xu,qv=wd,uV=Uv,yS=Hf,Kf={binaryAccuracy:Hv,categoricalAccuracy:jv,precision:mS,categoricalCrossentropy:qv,sparseCategoricalCrossentropy:yS,mse:rV,MSE:sV,mae:aV,MAE:oV,mape:iV,MAPE:cV,cosine:uV};function lV(e){if(typeof e=="string"&&e in Kf)return Kf[e];if(typeof e!="string"&&e!=null)return e;throw new H(`Unknown metric ${e}`)}function Xf(e){if(ss(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(qf))if(qf[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(Kf))if(Kf[n]===e){t=n;break}return t!==void 0?t:e.name}}function dV(e){let t={Adagrad:()=>ti.adagrad(.01),Adadelta:()=>ti.adadelta(1,.95,Ht()),Adam:()=>ti.adam(.001,.9,.999,Ht()),Adamax:()=>ti.adamax(.002,.9,.999,Ht(),0),RMSProp:()=>ti.rmsprop(.001,.9,0,Ht()),SGD:()=>ti.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new H(`Unknown Optimizer ${e}`)}var vS=1*1024*1024;function xS(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!Kv(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let r=JSON.stringify(e);r.length>vS&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${vS}.`)}}function Kv(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!Kv(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!Kv(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function pV(e,t,n,r=console.log){let s=fV(e),a=["Layer (type)","Output shape","Param #"];s?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(u=>Math.floor(t*u)));let o;if(!s){a.push("Receives inputs"),o=[];for(let u in e.nodesByDepth)o.push(...e.nodesByDepth[u])}r("_".repeat(t)),Yf(a,n,r),r("=".repeat(t));let i=e.layers;for(let u=0;u<i.length;++u)s?mV(i[u],n,r):gV(i[u],n,o,r),r((u===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let c=hV(e),l=Wf(e.nonTrainableWeights);r(`Total params: ${c+l}`),r(`Trainable params: ${c}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}function hV(e){let t;return e.collectedTrainableWeights!=null?t=Wf(e.collectedTrainableWeights):t=Wf(e.trainableWeights),t}function fV(e){let t=!0,n=[],r=[];for(let s in e.nodesByDepth)n.push(e.nodesByDepth[s]);for(let s of n){if(s.length>1||s.length===1&&s[0].inboundLayers.length>1){t=!1;break}r.push(...s)}if(t)for(let s of e.layers){let a=!1;for(let o of s.inboundNodes)if(r.indexOf(o)!==-1)if(a){t=!1;break}else a=!0;if(!t)break}return t}function Yf(e,t,n=console.log){let r="";for(let s=0;s<e.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=e[s],r=r.slice(0,t[s]),r+=" ".repeat(t[s]-r.length);n(r)}function mV(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(i){r="multiple"}let s=e.name,a=e.getClassName(),o=[`${s} (${a})`,r,e.countParams().toString()];Yf(o,t,n)}function gV(e,t,n,r){let s;try{s=JSON.stringify(e.outputShape)}catch(u){s="multiple"}let a=[];for(let u of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(u)===-1))for(let d=0;d<u.inboundLayers.length;++d){let p=u.inboundLayers[d].name,h=u.nodeIndices[d],f=u.tensorIndices[d];a.push(`${p}[${h}][${f}]`)}let o=e.name,i=e.getClassName(),c=a.length===0?"":a[0],l=[`${o} (${i})`,s,e.countParams().toString(),c];Yf(l,t,r);for(let u=1;u<a.length;++u)Yf(["","","",a[u]],t,r)}function wS(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function kd(e,t){if(e===null)return null;if(typeof e=="string")return ri(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],r=e.length;for(let s=0;s<r;++s){let a=e[s];wS(t,s,a)?n.push(a):n.push(kd(a,t))}return n}else{let n={};for(let r of Object.keys(e)){let s=e[r];if(r==="name"&&typeof s=="string")n[r]=s;else{let a=ri(r);n[a]=kd(s,a)}}return n}}function Xv(e,t){if(e==null)return null;if(typeof e=="string")return _s(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],r=e.length;for(let s=0;s<r;++s){let a=e[s];wS(t,s,a)?n.push(a):n.push(Xv(a,t))}return n}else{let n={};for(let r of Object.keys(e)){let s=e[r],a=_s(r);(r==="name"||r==="className")&&typeof s=="string"?n[a]=s:n[a]=Xv(s,r)}return n}}var Yv="3.12.0";function bV(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return ce(t,e.dtype)}catch(n){throw new H(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var ci=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof ci)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=bV(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new H(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Gr){if(this.id2Value[e.id]==null)throw new H(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new H(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Gr){if(this.id2Value[e.id]==null)throw new H(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new H(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Fe(this.id2Mask)}},Zv={},kS={};function Id(e,t,n,r){let s=n==null?!1:n.training,a=Array.isArray(e),o=a?e:[e],i=o.map(f=>f.name),c=[],l=t.names();for(let f of i)l.indexOf(f)!==-1?c.push(t.getValue(f)):c.push(null);r!=null&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let u=i.join(",")+"|"+t.names().join(","),d,p;if(Zv[u]==null){let f=yV(o,t);d=f.sorted,p=f.recipientCounts,Zv[u]=d,kS[u]=p}d=Zv[u],p={},s||Object.assign(p,kS[u]);let h=new ci(t);for(let f=0;f<d.length;++f){if(r!=null){let F=Wh().numTensors;F>r.maxNumTensors&&(r.maxNumTensors=F),F<r.minNumTensors&&(r.minNumTensors=F)}let m=d[f],g=m.sourceLayer;if(g instanceof yu)continue;let b=[],y=[],v=[],x=!1;for(let F of m.inputs){let O=h.getValue(F),$=h.getMask(F);b.push(O),y.push($),$!=null&&(x=!0),s||(p[F.name]--,p[F.name]===0&&!t.hasKey(F)&&i.indexOf(F.name)===-1&&!O.isDisposed&&F.sourceLayer.stateful!==!0&&v.push(O))}x&&(n=n||{},n.mask=y[0]);let w=vt(g.apply(b,n)),T=null;g.supportsMasking&&(T=g.computeMask(b,y));let C=xV(m),D=Array.isArray(C)?C:[C];for(let F=0;F<D.length;++F){h.hasKey(D[F])||h.add(D[F],w[F],Array.isArray(T)?T[0]:T);let O=i.indexOf(D[F].name);O!==-1&&(c[O]=w[F])}s||Fe(v)}return h.disposeMasks(),a?c:c[0]}function yV(e,t){k.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(e.length===1){let s=IS(e[0],t);n=s.sorted,r=s.recipientMap}else{let s=new Set;for(let a of e){let{sorted:o,recipientMap:i}=IS(a,t);for(let c of o)s.has(c.name)||(n.push(c),s.add(c.name));for(let c in i)r[c]==null&&(r[c]=new Set),i[c].forEach(l=>r[c].add(l))}}return{sorted:n,recipientCounts:vV(r)}}function vV(e){let t={};for(let n in e)t[n]=e[n].size;return t}function IS(e,t){let n=new Set,r=[],s={};for(let i of t.names())n.add(i);let a=[],o=[];for(a.push(e);a.length>0;){let i=a[a.length-1];if(n.has(i.name)){a.pop();continue}let c=o[o.length-1]===a.length-1;if(i.inputs.length===0||c)a.pop(),r.push(i),n.add(i.name),c&&o.pop();else{o.push(a.length-1);for(let l of i.inputs)s[l.name]==null&&(s[l.name]=new Set),s[l.name].add(i.name),!n.has(l.name)&&a.push(l)}}return{sorted:r,recipientMap:s}}function xV(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let r=0;r<e.sourceLayer.inboundNodes.length;++r)for(let s of e.sourceLayer.inboundNodes[r].outputTensors)if(s.id===e.id){n=r;break}t=e.sourceLayer.getOutputAt(n)}return t}var os=class extends Ke{constructor(e){super({});if(this.containerNodes=new Set,this.name=e.name,this.name==null){let b=this.getClassName().toLowerCase();this.name=Bf(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],fa(this.inputs).length!==this.inputs.length)throw new H(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);fa(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let b of this.outputs){let y=b.sourceLayer,v=b.nodeIndex,x=b.tensorIndex;this.outputLayers.push(y),this.outputLayersNodeIndices.push(v),this.outputLayersTensorIndices.push(x)}for(let b of this.inputs){let y=b.sourceLayer,v=b.nodeIndex,x=b.tensorIndex;ss(v===0,"input layer has >1 nodes"),ss(x===0,"input layer has >1 tensors"),this.inputLayers.push(y),this.inputLayersNodeIndices.push(v),this.inputLayersTensorIndices.push(x)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){let y=this.inputLayers[b];if(!(y instanceof yu))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${y.getClassName()}.`);this.inputNames.push(y.name),this.feedInputShapes.push(y.batchInputShape),this.feedInputNames.push(y.name)}for(let b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);let t={},n={},r={},s={},a={},o=[],i=(b,y,v,x,w,T)=>{(x==null||w==null||T==null)&&(x=b.sourceLayer,w=b.nodeIndex,T=b.tensorIndex);let C=x.inboundNodes[w];if(v.indexOf(C)!==-1)throw new Wr(`The tensor ${b.name} at layer "${x.name}" is part of a cycle.`);if(y.indexOf(C)!==-1)return;this.containerNodes.add(os.nodeKey(x,w)),x.id in a||(a[x.id]=Object.keys(a).length),v.indexOf(C)===-1&&v.push(C);let D=C.inboundLayers.length;for(let F=0;F<D;F++){let O=C.inputTensors[F],$=C.inboundLayers[F],R=C.nodeIndices[F],N=C.tensorIndices[F];i(O,y,v,$,R,N)}for(y.push(C);v.indexOf(C)>=0;)v.splice(v.indexOf(C),1);o.push(C)},c=[],l=[];for(let b of this.outputs)i(b,c,l);let u=o.slice().reverse();for(let b of u){n[b.id]=b,b.id in t||(t[b.id]=0);let y=t[b.id],v=r[b.outboundLayer.id]==null?0:r[b.outboundLayer.id];y=Math.max(y,v),r[b.outboundLayer.id]=y,s[b.outboundLayer.id]=b.outboundLayer,t[b.id]=y;for(let x=0;x<b.inboundLayers.length;x++){let w=b.inboundLayers[x],T=b.nodeIndices[x],C=w.inboundNodes[T],D=t[C.id]==null?0:t[C.id];t[C.id]=Math.max(y+1,D),n[C.id]=C}}let d={};for(let b in t){let y=t[b];y in d||(d[y]=[]),d[y].push(n[b])}let p={};for(let b in r){let y=r[b];y in p||(p[y]=[]),p[y].push(s[b])}let h=Object.keys(p).map(b=>parseInt(b,10)).sort(Nf);this.layers=[];for(let b of h){let y=p[b];y.sort((v,x)=>{let w=a[v.id],T=a[x.id];return w<T?-1:w>T?1:0});for(let v of y)v instanceof os&&this.internalContainerRefs.push(v),this.layers.push(v)}this.layersByDepth=p,h=Object.keys(d).map(b=>parseInt(b,10)).sort(Nf);let f=this.inputs.slice(),m=[];for(let b of h)for(let y of d[b]){let v=y.outboundLayer;if(v!=null){for(let x of y.inputTensors)if(f.indexOf(x)===-1)throw new Wr(`Graph disconnected: cannot obtain value for tensor ${x} at layer "${v.name}". The following previous layers were accessed without issue: ${m}`);for(let x of y.outputTensors)f.push(x);m.push(v.name)}}this.nodesByDepth=d;let g=this.layers.map(b=>b.name);for(let b of g){let y=g.filter(v=>v===b).length;if(y!==1)throw new Wr(`The name "${b}" is used ${y} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Vf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new H("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},r=0;for(let a of this.layers)for(let o of a.weights){if(n[o.originalName]!=null)throw new H(`Duplicate weight name: ${o.originalName}`);n[o.originalName]=o,r++}let s=[];for(let a in e){let o=a;if(n[a]==null){let i=a.split("/");o=i.slice(0,-2).concat([i[i.length-1]]).join("/")}if(n[o]!=null)s.push([n[o],e[a]]);else if(t)throw new H(`Provided weight data has no target variable: ${a}`);delete n[o]}if(t){let a=[];for(let o in n)a.push(o);if(a.length>0)throw new H(`${a.length} of ${r} weights are not set: ${a}`)}Vv(s)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Yv}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=Xv(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return M(()=>{e=vt(e);let n=new ci;for(let r=0;r<this.inputs.length;++r)n.add(this.inputs[r],e[r]);return Id(this.outputs,n,t)})}computeMask(e,t){return M(()=>{e=vt(e);let n;return t==null?n=ni(null,e.length):n=vt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=zf(e);if(t.length!==this.inputLayers.length)throw new H(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let o=0;o<t.length;o++){let i=this.inputLayers[o],c=t[o],l=i.name+"_0_0";n[l]=c}let r=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(Nf);if(r.length>1)for(let o of r){let i=this.nodesByDepth[o];for(let c of i){let l=c.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(l.id)!==-1)continue;let u=[];for(let f=0;f<c.inboundLayers.length;f++){let m=c.inboundLayers[f],g=c.nodeIndices[f],b=c.tensorIndices[f],y=`${m.name}_${g}_${b}`,v=n[y];u.push(v)}let d=l.computeOutputShape(Ln(u)),p=zf(d),h=l.inboundNodes.indexOf(c);for(let f=0;f<p.length;f++){let m=`${l.name}_${h}_${f}`;n[m]=p[f]}}}let s=[],a=[];for(let o=0;o<this.outputLayers.length;o++){let i=this.outputLayers[o],c=this.outputLayersNodeIndices[o],l=this.outputLayersTensorIndices[o],u=`${i.name}_${c}_${l}`;a.push(u)}for(let o=0;o<a.length;o++){let i=a[o];ss(i in n),s.push(n[i])}return Ln(s)}runInternalGraph(e,t){t==null&&(t=ni(null,e.length));let n={};for(let i=0;i<this.inputs.length;++i){let c=this.inputs[i],l=e[i],u=t[i];n[c.id]=[l,u]}let r=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Nf);for(let i of r){let c=this.nodesByDepth[i];for(let l of c){let u=l.outboundLayer,d=l.inputTensors,p=l.outputTensors,h=new Array;for(let f of d)f.id in n&&h.push(n[f.id]);if(h.length===d.length){let f={},m,g,b,y;if(l.callArgs!=null&&(f=l.callArgs),h.length===1){let[v,x]=h[0];f.mask==null&&(f.mask=x),b=vt(u.call(v,f)),y=vt(u.computeMask(v,x)),m=[v],g=[x]}else m=h.map(v=>v[0]),g=h.map(v=>v[1]),f.mask==null&&(f.mask=g),b=vt(u.call(m,f)),y=vt(u.computeMask(m,g));if(u.activityRegularizer)throw new $e("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let v=0;v<p.length;++v){let x=p[v],w=b[v],T=y[v];n[x.id]=[w,T]}}}}let s=[],a=[],o=[];for(let i of this.outputs){ss(i.id in n,`Could not compute output ${i.name} : ${i.id}`);let[c,l]=n[i.id];o.push(c.shape),s.push(c),a.push(l)}return[s,a,o]}buildNodeConversionMap(e){let t={},n;for(let r of this.layers){n=r instanceof os?1:0;for(let s=0;s<r.inboundNodes.length;s++){let a=os.nodeKey(r,s);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new H(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new H("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new H(`No such layer: ${e}`)}calculateLosses(){return M(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let r=os.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let o=a.getClassName(),i=a.getConfig(),c=[];for(let u=0;u<a.inboundNodes.length;u++){let d=a.inboundNodes[u],p=os.nodeKey(a,u),h={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),h=d.callArgs}catch(f){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(d.inboundLayers.length>0){let f=[];for(let m=0;m<d.inboundLayers.length;m++){let g=d.inboundLayers[m],b=d.nodeIndices[m],y=d.tensorIndices[m],v=os.nodeKey(g,b),x=t[v];x==null&&(x=0),f.push([g.name,x,y,h])}c.push(f)}}}let l={};l.name=a.name,l.className=o,l.config=i,l.inboundNodes=c,n.push(l)}e.layers=n;let r=[];for(let a=0;a<this.inputLayers.length;a++){let o=this.inputLayers[a],i=this.inputLayersNodeIndices[a],c=os.nodeKey(o,i);if(!this.containerNodes.has(c))continue;let l=t[c];l==null&&(l=0);let u=this.inputLayersTensorIndices[a];r.push([o.name,l,u])}e.inputLayers=r;let s=[];for(let a=0;a<this.outputLayers.length;a++){let o=this.outputLayers[a],i=this.outputLayersNodeIndices[a],c=os.nodeKey(o,i);if(!this.containerNodes.has(c))continue;let l=t[c];l==null&&(l=0);let u=this.outputLayersTensorIndices[a];s.push([o.name,l,u])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){let s={},a={};function o(m,g){m.name in a?a[m.name].push(g):a[m.name]=[g]}function i(m,g){let b=[],y;for(let v of g){let x=v[0],w=v[1],T=v[2];if(y=v[3]==null?{}:v[3],!(x in s)){o(m,g);return}let C=s[x];if(C.inboundNodes.length<=w){o(m,g);return}let D=C.inboundNodes[w];b.push(D.outputTensors[T])}b.length>0&&m.apply(Ln(b),y)}function c(m){let g=m.name,b=Hr(m,t.customObjects!=null?t.customObjects:{});b.setFastWeightInitDuringBuild(r),s[g]=b,m.inboundNodes.forEach(v=>{if(!(v instanceof Array))throw new H(`Corrupted configuration, expected array for nodeData: ${v}`);o(b,v)})}let l=t.name,u=t.layers;for(let m of u)c(m);for(;!Z4(a);)for(let m of u){let g=s[m.name];if(g.name in a){let b=a[g.name];delete a[g.name];for(let y of b)i(g,y)}}let d=[],p=[],h=t.inputLayers;for(let m of h){let g=m[0],b=m[1],y=m[2];ss(g in s);let x=s[g].inboundNodes[b].outputTensors;d.push(x[y])}let f=t.outputLayers;for(let m of f){let g=m[0],b=m[1],y=m[2];ss(g in s);let x=s[g].inboundNodes[b].outputTensors;p.push(x[y])}return new e({inputs:d,outputs:p,name:l})}get stateful(){if(this._stateful)throw new H("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){M(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function wV(e,t,n){let r=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(s=>null);if(r===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let s=[];return t.forEach(a=>{a in e?s.push(e[a]):s.push(null)}),s}else throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function SS(e,t){return wV(e,t,"classWeight")}async function TS(e,t,n,r){if(t!=null||r!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let s=M(()=>{if(e.shape.length===1)return ws(e);if(e.shape.length===2){if(e.shape[1]>1)return qo(e,1);if(e.shape[1]===1)return U(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await s.data());Fe(s);let o=[];return a.forEach(i=>{if(n[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);o.push(n[i])}),He(o,"float32")}else return null}function kV(e,t){return V(e,t)}var IV=32;function CS(e,t){let n,r,s=t;n=s.xs,r=s.ys,k.assert(n!=null&&r!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=NS("input",e.inputNames,n),o=NS("output",e.outputNames,r),i=a[0].shape[0];k.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),k.assert(o.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let c=0;c<a.length;c++)k.assert(a[c].shape[0]===i,()=>`Batch size mismatch: input ${e.inputNames[c]} has ${a[c].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);for(let c=0;c<o.length;c++)k.assert(o[c].shape[0]===i,()=>`Batch size mismatch: output ${e.outputNames[c]} has ${o[c].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);return{xs:a,ys:o}}function NS(e,t,n){if(n instanceof Ee)return[n];if(Array.isArray(n))return k.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let r=[];for(let s of t){if(n[s]==null)throw new H(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function SV(e){if(e.length===3)throw new $e("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function TV(e,t,n){let r=n.batchesPerEpoch!=null;if(k.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),k.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),k.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),k.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),k.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let s=n.validationData!=null,a,o;if(s)if(_S(n.validationData))k.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=SV(n.validationData);a=g.xs,o=g.ys}let i=e.makeTrainFunction(),c=e.getDedupedMetricsNames(),l;s?l=c.slice().concat(c.map(g=>"val_"+g)):l=c.slice();let u=pS(n.callbacks,n.yieldEvery),d=n.verbose==null?1:n.verbose,{callbackList:p,history:h}=hS(u,d,n.epochs,null,null,CV(t,n),null,s,l);p.setModel(e),e.history=h,await p.onTrainBegin(),e.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let g={};await p.onEpochBegin(f);let b=0,y=0;for(r||(m=await t.iterator());r?b<n.batchesPerEpoch:!0;){let v=await m.next();if(r&&v.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${b} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(v.value!=null){let{xs:x,ys:w}=CS(e,v.value),T={};T.batch=y,T.size=x[0].shape[0],await p.onBatchBegin(y,T);let C=[];if(n.classWeight!=null){let O=SS(n.classWeight,e.outputNames);for(let $=0;$<O.length;++$)C.push(await TS(w[$],null,O[$]))}let D=x.concat(w).concat(C),F=i(D);Fe(D);for(let O=0;O<c.length;++O){let $=c[O],R=F[O];T[$]=R,Zt(R)}await p.onBatchEnd(y,T),iS(T),y++,b++}if(r?b>=n.batchesPerEpoch:v.done){if(s){let x;_S(n.validationData)?x=vt(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):x=vt(e.evaluate(a,o,{batchSize:n.validationBatchSize==null?IV:n.validationBatchSize,verbose:0}));for(let w=0;w<e.metricsNames.length;++w)g[`val_${e.metricsNames[w]}`]=x[w]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,g),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function CV(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function _S(e){return typeof e.iterator=="function"}function NV(e){return typeof e.next=="function"}async function _V(e,t,n){n=n||{};let r=n.batches!=null,s=e.testFunction,a=[];if(n.verbose>0)throw new $e("Verbose mode is not implemented yet.");k.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let o=NV(t)?t:await t.iterator(),i=0,c=0;for(;r?c<n.batches:!0;){let l=await o.next();if(a=M(()=>{if(l.value){let{xs:u,ys:d}=CS(e,l.value),p=u.concat(d),h=M(()=>s(p));if(Fe(p),c===0)for(let m=0;m<h.length;++m)a.push(Ie(0));let f=p[0].shape[0];for(let m=0;m<h.length;++m){let g=h[m],b=a[m];a[m]=M(()=>Y(a[m],V(f,g))),c>0&&Fe(b)}Fe(h),i+=f,++c}return a}),l.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<a.length;++l){let u=a[l];a[l]=me(a[l],i),Fe(u)}return Ln(a)}function Jv(e){k.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function Sd(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(r=>oi(r,t,n-t)):oi(e,t,n-t)}function Qv(e,t){return M(()=>e==null?null:Array.isArray(e)?e.map(n=>Qv(n,t)):ZI(e,t.dtype==="int32"?t:ce(t,"int32")))}function ex(e,t){let n=[],r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}async function EV(e,t,n,r,s,a,o,i,c,l,u,d,p,h,f){s==null&&(s=32),a==null&&(a=1),u==null&&(u=!0),p==null&&(p=0);let m=!1;if(c!=null&&l!=null&&(m=!0),f!=null&&(m=!0,h==null))throw new H("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,s,h,"steps_per_epoch"),b;g!=null&&(b=Vr(0,g)),o==null&&(o=1);let{callbackList:y,history:v}=hS(i,o,a,p,g,h,s,m,d);y.setModel(e),e.history=v,await y.onTrainBegin(),e.stopTraining_=!1;for(let x=p;x<a;++x){await y.onEpochBegin(x);let w={};if(h!=null)throw new $e("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new $e("batch shuffling is not implemneted yet");u&&k.shuffle(b);let T=He(b),C=ex(g,s);for(let D=0;D<C.length;++D){let F={};if(await y.onBatchBegin(D,F),M(()=>{let O=C[D][0],$=C[D][1],R=oi(T,O,$-O);F.batch=D,F.size=$-O;let N=Qv(n,R),L=t(N);for(let G=0;G<r.length;++G){let j=r[G],K=L[G];F[j]=K,Zt(K)}if(D===C.length-1&&m){let G=e.testLoop(c,l,s);for(let j=0;j<r.length;++j){let K=r[j],q=G[j];Zt(q),w["val_"+K]=q}}}),await y.onBatchEnd(D,F),iS(F),e.stopTraining_)break}T.dispose()}if(await y.onEpochEnd(x,w),e.stopTraining_)break}return await y.onTrainEnd(),await e.history.syncData(),e.history}async function AV(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let s,a,o,i,c,l,u;try{let d=r.batchSize==null?32:r.batchSize;Jv(d);let p=!1,h=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,p,d);s=h[0],a=h[1],u=h[2];let f=!1,m;if(r.validationData!=null&&r.validationData.length>0){if(f=!0,r.validationData.length===2)o=r.validationData[0],i=r.validationData[1];else throw r.validationData.length===3?new $e("validationData including sample weights is not supported yet."):new H(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);let C=!0,D=await e.standardizeUserData(o,i,null,null,C,d);c=D[0],l=D[1],m=c.concat(l)}else if(r.validationSplit!=null&&r.validationSplit>0&&r.validationSplit<1){f=!0;let C=Math.floor(s[0].shape[0]*(1-r.validationSplit)),D=s[0].shape[0];c=Sd(s,C,D),s=Sd(s,0,C),l=Sd(a,C,D),a=Sd(a,0,C),m=c.concat(l)}else r.validationSteps!=null&&(f=!0);let g=s.concat(a).concat(u);e.checkTrainableWeightsConsistency();let b=e.makeTrainFunction(),y=e.getDedupedMetricsNames(),v,x;f?(e.makeTestFunction(),v=e.testFunction,x=y.slice().concat(y.map(C=>"val_"+C))):(v=null,m=[],x=y.slice());let w=pS(r.callbacks,r.yieldEvery);return await EV(e,b,g,y,d,r.epochs,r.verbose,w,v,m,r.shuffle,x,r.initialEpoch,null,null)}finally{e.isTraining=!1,ui(s,t),ui(a,n),ui(c,o),ui(l,i),u!=null&&Fe(u)}}function ES(e){let t=[];e instanceof Ee&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(r.rank===1)t.push(yd(r,1));else{if(r.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function ui(e,t){if(e==null)return;let n=[];if(t instanceof Ee)n.push(t.id);else if(Array.isArray(t))t.forEach(s=>n.push(s.id));else if(t!=null)for(let s in t){let a=t[s];n.push(a.id)}let r=[];if(e instanceof Ee)n.indexOf(e.id)===-1&&r.push(e);else if(Array.isArray(e))e.forEach(s=>{n.indexOf(s.id)===-1&&r.push(s)});else if(e!=null)for(let s in e){let a=e[s];n.indexOf(a.id)===-1&&r.push(a)}r.forEach(s=>{s.isDisposed||s.dispose()})}function DV(e){return e instanceof Ee}function tx(e){return Array.isArray(e)}function AS(e){return!DV(e)&&!tx(e)}function DS(e,t,n,r=!0,s=""){if(t==null||t.length===0){if(e!=null){let o=!1;if(tx(e)&&e.length>0)o=!0;else if(AS(e)){for(let i in e)if(e.hasOwnProperty(i)){o=!0;break}}else o=!0;if(o)throw new H(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(o=>null);let a;if(AS(e)){e=e,a=[];for(let o of t){if(e[o]==null)throw new H(`No data provided for "${o}". Need data for each key in: ${t}`);a.push(e[o])}}else if(tx(e)){if(e=e,e.length!==t.length)throw new H(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new H(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=ES(a),n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new H(`Error when checking ${s}: expected ${t[o]} to have ${n[o].length} dimension(s). but got array with shape ${i.shape}`);for(let c=0;c<n[o].length;++c){if(c===0&&!r)continue;let l=i.shape[c],u=n[o][c];if(u!=null&&u>=0&&l!==u)throw new H(`${s} expected a batch of elements where each example has shape [${n[o].slice(1,n[o].length)}] (i.e.,tensor shape [*,${n[o].slice(1,n[o].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function FV(e,t,n){let r=fa(e.map(a=>a.shape[0]));r.sort();let s=fa(t.map(a=>a.shape[0]));if(s.sort(),r.length>1)throw new H(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(a=>a.shape))}`);if(s.length>1)throw new H(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(r.length>0&&s.length>0&&!k.arraysEqual(r,s))throw new H(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}function $V(e,t,n){let r=[ii,jf,wd];for(let s=0;s<e.length;++s){let a=e[s],o=t[s],i=n[s];if(o!=null){if(o===wd&&a.shape[a.shape.length-1]===1)throw new H(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(r.indexOf(o)!==-1){let c=a.shape.slice(1),l=i.slice(1);for(let u=0;u<c.length;++u){let d=c[u],p=l[u];if(p!=null&&d!==p)throw new H(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function FS(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new H(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new H(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new H(`Error when checking ${s}: expected ${t[o]} to have ${n[o].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let c=0;c<n[o].length;++c){if(c===0&&!r)continue;let l=i.shape[c],u=n[o][c];if(u!=null&&u!==l)throw new H(`Error when checking ${s}: expected ${t[o]} to have shape ${JSON.stringify(n[o])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function RV(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(r=>n);{let r=[];for(let s of t){let a=n.hasOwnProperty(s)?n[s]:[];Array.isArray(a)||(a=[a]),r.push(a)}return r}}var PV="layers-model",Es=class extends os{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new H("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");pV(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=dV(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Cs))throw new H("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new H(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(Gv(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new H(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(o=>Gv(o))}else{let a=Gv(e.loss);this.outputs.forEach(o=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let o=this.internalOutputShapes[a],i=this.outputNames[a];this.feedOutputNames.push(i),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ai("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([o,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let r=RV(e.metrics,this.outputNames),s=(a,o,i)=>{this.outputNames.length>1&&(o=this.outputNames[a]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([i,a])};ai("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=r[a];(c=>{let l="",u,d,p;for(let h of c){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let m=this.internalOutputShapes[a];m[m.length-1]===1||this.lossFunctions[a]===jf?["accuracy","acc"].indexOf(h)!==-1?d=Hv:["crossentropy","ce"].indexOf(h)!==-1&&(d=gS):this.lossFunctions[a]===Hf?["accuracy","acc"].indexOf(h)!==-1?d=bS:["crossentropy","ce"].indexOf(h)!==-1&&(d=yS):["accuracy","acc"].indexOf(h)!==-1?d=jv:["crossentropy","ce"].indexOf(h)!==-1&&(d=qv);let g;["accuracy","acc"].indexOf(h)!==-1?g="acc":["crossentropy","ce"].indexOf(h)!==-1&&(g="ce"),p=d,u=l+g}else p=lV(h),u=l+Xf(h);let f;ai(u,()=>{f=p}),s(a,u,f)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let r=n.batchSize==null?32:n.batchSize;Jv(r);let s=!0,a=this.standardizeUserDataXY(e,t,s,r);try{let o=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction,c=this.testLoop(i,o,r,n.verbose,n.steps);return Ln(c)}finally{ui(a[0],e),ui(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),_V(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(n!=null){if(s=null,t!=null)throw new H(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?s=e[0].shape[0]:s=e.shape[0];else throw new H(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return s}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new H("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new ci;if(e instanceof Ee&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new H(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let i=0;i<this.inputs.length;++i)a.add(this.inputs[i],e[i])}else for(let i of this.inputs){let c=e[i.name];if(c==null)throw new H(`No value is provided for the model's input ${i.name}`);a.add(i,c)}let o=Id(s,a);return n?o:o[0]}retrieveSymbolicTensors(e){let t=ni(null,e.length),n=e.length;for(let r of this.layers){let s=Array.isArray(r.output)?r.output:[r.output],a=s.map(o=>o.name);for(let o=0;o<e.length;++o){let i=a.indexOf(e[o]);if(i!==-1&&(t[o]=s[i],n--),n===0)break}if(n===0)break}if(n>0){let r=[];throw t.forEach((s,a)=>{s==null&&r.push(e[a])}),new H(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,n=!1){return M(()=>{let r=this.checkNumSamples(e);if(n)throw new $e("Verbose predictLoop() is not implemented yet.");let s=ex(r,t),a=this.outputs.map(o=>[]);for(let o=0;o<s.length;++o)M(()=>{let c=s[o][0],l=s[o][1],u=Sd(e,c,l),d=[];if(Array.isArray(u))for(let h=0;h<u.length;++h)d.push({key:this.inputs[h],value:u[h]});else d.push({key:this.inputs[0],value:u});let p=new ci(d);return Id(this.outputs,p)}).forEach((c,l)=>a[l].push(c));return Ln(a.map(o=>et(o,0)))})}predict(e,t={}){let n=ES(e);FS(n,this.inputNames,this.feedInputShapes,!1);try{let r=t.batchSize==null?32:t.batchSize;return Jv(r),this.predictLoop(n,r)}finally{ui(n,e)}}predictOnBatch(e){FS(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(this.optimizer_==null)throw new Wr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let a=0;a<this.feedOutputShapes.length;++a){let o=this.feedOutputShapes[a];this.feedLossFns[a]===Hf?s.push(o.slice(0,o.length-1).concat([1])):s.push(o)}if(e=DS(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=DS(t,this.feedOutputNames,s,!1,"target"),FV(e,t,null),$V(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!=0)throw new H(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){let[o,i]=this.standardizeUserDataXY(e,t,s,a);if(n!=null)throw new Error("sample weight is not supported yet.");let c=null;if(r!=null){let l=SS(r,this.outputNames);c=[];for(let u=0;u<l.length;++u)c.push(await TS(i[u],null,l[u]))}return[o,i,c]}testLoop(e,t,n,r=0,s){return M(()=>{let a=this.checkNumSamples(t,n,s,"steps"),o=[];if(r>0)throw new $e("Verbose mode is not implemented yet.");if(s!=null)throw new $e("steps mode in testLoop() is not implemented yet");{let i=ex(a,n),c=He(Vr(0,a));for(let l=0;l<i.length;++l){let u=i[l][0],d=i[l][1],p=oi(c,u,d-u),h=Qv(t,p),f=e(h);if(l===0)for(let m=0;m<f.length;++m)o.push(Ie(0));for(let m=0;m<f.length;++m){let g=f[m];o[m]=Y(o[m],V(d-u,g))}}for(let l=0;l<o.length;++l)o[l]=me(o[l],a)}return o})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],s=r;BI(e,r)>1&&(s+=`_${BI(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],o=()=>{let u=[];for(let f=0;f<this.inputs.length;++f)u.push({key:this.inputs[f],value:n[f]});let d=new ci(u),p=Id(this.outputs,d,{training:!0}),h;for(let f=0;f<this.lossFunctions.length;++f){let g=this.lossFunctions[f](r[f],p[f]);s[f]!=null&&(g=kV(g,s[f]));let b=Et(g);t.push(b),f===0?h=g:h=Y(h,g)}for(let f=0;f<this.metricsTensors.length;++f){let m;if(this.outputs.length>1&&f<this.outputs.length)m=t[f];else{let g=this.metricsTensors[f][0],b=this.metricsTensors[f][1];m=Et(g(r[b],p[b]))}Zt(m),a.push(m)}return h=Et(h),this.calculateLosses().forEach(f=>{h=Y(h,f)}),h},i=this.collectedTrainableWeights.map(u=>u.read()),c=!0;return[this.optimizer_.minimize(o,c,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>M(()=>{let t=[],n,r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let c=0;c<this.inputs.length;++c)a.push({key:this.inputs[c],value:r[c]});let o=new ci(a),i=Id(this.outputs,o);for(let c=0;c<this.lossFunctions.length;++c){let l=this.lossFunctions[c],u=Et(l(s[c],i[c]));c===0?n=u:n=Y(n,u),t.push(n)}for(let c=0;c<this.metricsTensors.length;++c){let l=this.metricsTensors[c][0],u=this.metricsTensors[c][1],d=Et(l(s[u],i[u]));t.push(d)}return t})}async fit(e,t,n={}){return AV(this,e,t,n)}async fitDataset(e,t){return TV(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],s=n[1],o=this.makeTrainFunction()(r.concat(s)),i=[];for(let c of o){let l=await c.data();i.push(l[0])}return Fe(o),Ln(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<r.length;++a)n&&!r[a].trainable||t.push({name:r[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=Wh().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Wh().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=_s(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>_s(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t)if(typeof n[r]=="string")e[r]=_s(n[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[_s(Xf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>_s(Xf(e)));{let e={};for(let t in this.metrics)e[t]=_s(Xf(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=kd(e.optimizer_config),n=Hr(t),r;if(typeof e.loss=="string")r=ri(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(a=>ri(a));else if(e.loss!=null){r={};for(let a in e.loss)r[a]=ri(e.loss[a])}let s;if(Array.isArray(e.metrics))s=e.metrics.map(a=>ri(a));else if(e.metrics!=null){s={};for(let a in e.metrics)s[a]=ri(e.metrics[a])}this.compile({loss:r,metrics:s,optimizer:n})}async save(e,t){if(typeof e=="string"){let c=Yt.getSaveHandlers(e);if(c.length===0)throw new H(`Cannot find any save handlers for URL '${e}'`);if(c.length>1)throw new H(`Found more than one (${c.length}) save handlers for URL '${e}'`);e=c[0]}if(e.save==null)throw new H("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Yt.encodeWeights(this.getNamedWeights(t)),r=!1,s=null,o={modelTopology:this.toJSON(s,r),format:PV,generatedBy:`TensorFlow.js tfjs-layers v${Yv}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){o.trainingConfig=this.getTrainingConfig();let c="optimizer",{data:l,specs:u}=await Yt.encodeWeights(await this.optimizer.getWeights(),c);n.specs.push(...u),n.data=Yt.concatenateArrayBuffers([n.data,l])}if(this.userDefinedMetadata!=null){let c=!0;xS(this.userDefinedMetadata,this.name,c),o.userDefinedMetadata=this.userDefinedMetadata}return o.weightData=n.data,o.weightSpecs=n.specs,e.save(o)}setUserDefinedMetadata(e){xS(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};Es.className="Model";ie.registerClass(Es);var $S=class extends Es{};$S.className="Functional";ie.registerClass($S);async function OV(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let r=kd(n),s=Hr(r,t);if(e.weightsManifest!=null){let a=await Yt.loadWeights(e.weightsManifest,e.pathPrefix,s.weights.map(i=>i.originalName)),o={};for(let i of s.weights)o[i.originalName]=a[i.originalName];s.loadWeights(o),Fe(a)}return s}async function MV(e,t){if(t==null&&(t={}),typeof e=="string"){let n=Yt.getLoadHandlers(e,t);if(n.length===0)n.push(Yt.browserHTTPRequest(e,t));else if(n.length>1)throw new H(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return LV(e,void 0,t)}async function LV(e,t,n){if(n==null&&(n={}),e.load==null)throw new H("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),s=r.modelTopology;s.model_config!=null&&(s=s.model_config);let a=n.strict==null?!0:n.strict,o=r.weightData!=null&&r.weightSpecs!=null&&a,i=Hr(kd(s),t,o),c=r.trainingConfig;if(c!=null&&i.loadTrainingConfig(c),r.userDefinedMetadata!=null&&i.setUserDefinedMetadata(r.userDefinedMetadata),r.weightData!=null){if(r.weightSpecs==null)throw new H("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:l,optimizerWeights:u}=BV(r.weightData,r.weightSpecs);i.loadWeights(l,a),i.optimizer!=null&&u.length>0&&await i.optimizer.setWeights(u),Fe(l),Fe(u.map(d=>d.tensor))}return i}function BV(e,t){let n=Yt.decodeWeights(e,t),r={},s=[];return t.forEach(a=>{a.group==="optimizer"?s.push({name:a.name,tensor:n[a.name]}):r[a.name]=n[a.name]}),{modelWeights:r,optimizerWeights:s}}var wu=class extends Es{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Bf("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new H(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof wu||e instanceof Es,n;if(t){if(n=e,n.outputs.length!==1)throw new H("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new H("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new H("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let r=oS({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new H(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new H("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=aS(this.outputs[0])}this.inboundNodes=[],new Vf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ni(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{let r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(at(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Es({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Wr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Wr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Wr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Wr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new H("Legacy serialization format not supported yet.");s=t}else k.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,a=t;let o=new e(a);if(!(o instanceof wu))throw new $e(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(let i of s){let l=Hr(i,void 0,r);r&&l.setFastWeightInitDuringBuild(!0),o.add(l)}return o}set stopTraining(e){if(this.model==null)throw new H("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new H("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};wu.className="Sequential";ie.registerClass(wu);function zV(e){return new Es(e)}function WV(e){return new wu(e)}function VV(e,t){return t==null&&(t={}),MV(e,t)}function RS(e){return oS(e)}function UV(e,t){Er.registerCallbackConstructor(e,t)}var zn=class extends ie.Serializable{getConfig(){return{}}},PS=class extends zn{apply(e,t=1){return mW(e,t)}};PS.className="elu";ie.registerClass(PS);var OS=class extends zn{apply(e){return of(e)}};OS.className="selu";ie.registerClass(OS);var MS=class extends zn{apply(e){return qe(e)}};MS.className="relu";ie.registerClass(MS);var LS=class extends zn{apply(e){return M(()=>uu(6,qe(e)))}};LS.className="relu6";ie.registerClass(LS);var BS=class extends zn{apply(e){return e}};BS.className="linear";ie.registerClass(BS);var zS=class extends zn{apply(e){return dr(e)}};zS.className="sigmoid";ie.registerClass(zS);var WS=class extends zn{apply(e){return bW(e)}};WS.className="hardSigmoid";ie.registerClass(WS);var VS=class extends zn{apply(e){return Zo(e)}};VS.className="softplus";ie.registerClass(VS);var US=class extends zn{apply(e){return gW(e)}};US.className="softsign";ie.registerClass(US);var GS=class extends zn{apply(e){return Xo(e)}};GS.className="tanh";ie.registerClass(GS);var nx=class extends zn{apply(e,t=-1){return Mr(e,t)}};nx.className="softmax";ie.registerClass(nx);var HS=class extends zn{apply(e,t=-1){return Qh(e,t)}};HS.className="logSoftmax";ie.registerClass(HS);var jS=class extends zn{apply(e,t=1){return M(()=>V(dr(V(e,t)),e))}};jS.className="swish";ie.registerClass(jS);var qS=class extends zn{apply(e){return M(()=>V(e,Xo(Zo(e))))}};qS.className="mish";ie.registerClass(qS);function ya(e){return e.getClassName()}function rx(e,t={}){return md(e,ie.SerializationMap.getMap().classNameMap,t,"activation")}function va(e){if(e==null){let t={};return t.className="linear",t.config={},rx(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},rx(t)}else return e instanceof zn?e:rx(e)}function sx(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var KS=class extends ie.Serializable{},Td=class extends KS{constructor(e){super();sx(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return M(()=>{let t=St([1]);return this.hasL1&&(t=Y(t,xe(V(this.l1,Bt(e))))),this.hasL2&&(t=Y(t,xe(V(this.l2,vd(e))))),U(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Td.className="L1L2";ie.registerClass(Td);function GV(e){return sx(e),new Td({l1:e!=null?e.l1:null,l2:0})}function HV(e){return sx(e),new Td({l2:e!=null?e.l2:null,l1:0})}var XS={l1l2:"L1L2"};function ft(e){return wv(e)}function YS(e,t={}){return md(e,ie.SerializationMap.getMap().classNameMap,t,"regularizer")}function Ct(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in XS?XS[e]:e,config:{}};return YS(n)}else return e instanceof KS?e:YS(e)}var ax=class extends Ke{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Oe(e);let n=qe(e);return this.maxValue!=null&&(n=Jt(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};ax.className="ReLU";ie.registerClass(ax);var ox=class extends Ke{constructor(e){super(e==null?{}:e);this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Oe(e);return rd(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};ox.className="LeakyReLU";ie.registerClass(ox);var ix=class extends Ke{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Tt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ct(e.alphaRegularizer),this.alphaConstraint=qt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new H(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=at(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new zt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Oe(e),cd(e,this.alpha.read())}getConfig(){let e={alphaInitializer:At(this.alphaInitializer),alphaRegularizer:ft(this.alphaRegularizer),alphaConstraint:jt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};ix.className="PReLU";ie.registerClass(ix);var cx=class extends Ke{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new $e(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Oe(e);return iu(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};cx.className="ELU";ie.registerClass(cx);var ux=class extends Ke{constructor(e){super(e==null?{}:e);this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Oe(e);return V(n,ce(On(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};ux.className="ThresholdedReLU";ie.registerClass(ux);var lx=class extends Ke{constructor(e){super(e==null?{}:e);this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new nx().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Oe(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};lx.className="Softmax";ie.registerClass(lx);function ku(e,t,n){if(typeof e=="number")return ni(e,t);if(e.length!==t)throw new H(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let s=e[r];if(!dW(s))throw new H(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e}function jr(e,t,n,r,s=1){if(e==null)return e;let a=t+(t-1)*(s-1),o;return n==="same"?o=e:o=e-a+1,Math.floor((o+r-1)/r)}function is(e,t,n,r){if(e==null)return null;if(r==="valid")e=e*t+ga([n-t,0]);else if(r==="same")e=e*t;else throw new H(`Unsupport padding mode: ${r}.`);return e}function dx(e,t){return M(()=>(Mt(t),t==="channelsFirst"?Re(e,[0,2,3,1]):e))}function ZS(e,t){return M(()=>(Mt(t),t==="channelsFirst"?Re(e,[0,2,3,4,1]):e))}function jV(e,t,n,r=1,s="valid",a,o=1){return M(()=>{if(a==null&&(a=zr()),Mt(a),e.shape.length!==3)throw new H(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new H(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new H(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(e=Re(e,[0,2,1])),s==="causal")throw new $e("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=jh(e,t,r,s==="same"?"same":"valid","NWC",o);return n!=null&&(i=Ur(i,n)),i})}function JS(e,t,n,r=[1,1],s="valid",a,o,i=null){return M(()=>{if(a==null&&(a=zr()),Mt(a),e.rank!==3&&e.rank!==4)throw new H(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new H(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let c=dx(e,a);if(s==="causal")throw new $e("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=pa.conv2d({x:c,filter:t,strides:r,pad:s==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),a==="channelsFirst"&&(c=Re(c,[0,3,1,2])),c})}function qV(e,t,n,r=[1,1,1],s="valid",a,o){return M(()=>{if(a==null&&(a=zr()),Mt(a),e.rank!==4&&e.rank!==5)throw new H(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new H(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let i=ZS(e,a);if(s==="causal")throw new $e("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Uy(i,t,r,s==="same"?"same":"valid","NDHWC",o),n!=null&&(i=Ur(i,n)),a==="channelsFirst"&&(i=Re(i,[0,4,1,2,3])),i})}var px=class extends Ke{constructor(e,t){super(t);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",px.verifyArgs(t),this.rank=e,Qt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new $e(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ku(t.kernelSize,e,"kernelSize"),this.strides=ku(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,hr(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Mt(this.dataFormat),this.activation=va(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Tt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=qt(t.biasConstraint),this.biasRegularizer=Ct(t.biasRegularizer),this.activityRegularizer=Ct(t.activityRegularizer),this.dilationRate=ku(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new H(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new H(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new H(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(ss("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Iv(e.kernelSize,"number",1,3))throw new H(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ya(this.activation),useBias:this.useBias,biasInitializer:At(this.biasInitializer),biasRegularizer:ft(this.biasRegularizer),activityRegularizer:ft(this.activityRegularizer),biasConstraint:jt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Cd=class extends px{constructor(e,t){super(e,t);this.kernel=null,Cd.verifyArgs(t),this.filters=t.filters,Qt(this.filters,"filters"),this.kernelInitializer=Tt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=qt(t.kernelConstraint),this.kernelRegularizer=Ct(t.kernelRegularizer)}build(e){e=at(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new H(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return M(()=>{e=Oe(e);let n,r=this.bias==null?null:this.bias.read(),s=WI(this.activation.getClassName());if(s!=null&&this.rank===2)n=JS(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)n=jV(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=JS(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=qV(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new $e("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=at(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){let a=jr(n[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);t.push(a)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:At(this.kernelInitializer),kernelRegularizer:ft(this.kernelRegularizer),kernelConstraint:jt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new H(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},Nd=class extends Cd{constructor(e){super(2,e);Nd.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Iv(e.kernelSize,"number",1,2))throw new H(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};Nd.className="Conv2D";ie.registerClass(Nd);var _d=class extends Cd{constructor(e){super(3,e);_d.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new H(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};_d.className="Conv3D";ie.registerClass(_d);var hx=class extends Nd{constructor(e){super(e);if(this.inputSpec=[new zt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new H(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=at(e),e.length!==4)throw new H("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new H("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new zt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return M(()=>{let n=Oe(e);if(n.shape.length!==4)throw new H(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let r=n.shape,s=r[0],a,o;this.dataFormat==="channelsFirst"?(a=2,o=3):(a=1,o=2);let i=r[a],c=r[o],l=this.kernelSize[0],u=this.kernelSize[1],d=this.strides[0],p=this.strides[1],h=is(i,d,l,this.padding),f=is(c,p,u,this.padding),m=[s,h,f,this.filters];this.dataFormat!=="channelsLast"&&(n=Re(n,[0,2,3,1]));let g=qh(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=Re(g,[0,3,1,2])),this.bias!=null&&(g=Ur(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=at(e);let t=e.slice(),n,r,s;this.dataFormat==="channelsFirst"?(n=1,r=2,s=3):(n=3,r=1,s=2);let a=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return t[n]=this.filters,t[r]=is(t[r],i,a,this.padding),t[s]=is(t[s],c,o,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};hx.className="Conv2DTranspose";ie.registerClass(hx);var fx=class extends _d{constructor(e){super(e);if(this.inputSpec=[new zt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new H(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=at(e),e.length!==5)throw new H("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new H("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new zt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return M(()=>{let n=Oe(e);if(n.shape.length!==5)throw new H(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let r=n.shape,s=r[0],a,o,i;this.dataFormat==="channelsFirst"?(i=2,a=3,o=4):(i=1,a=2,o=3);let c=r[i],l=r[a],u=r[o],d=this.kernelSize[0],p=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],b=is(c,f,d,this.padding),y=is(l,m,p,this.padding),v=is(u,g,h,this.padding),x=[s,b,y,v,this.filters];this.dataFormat!=="channelsLast"&&(n=Re(n,[0,2,3,4,1]));let w=zk(n,this.kernel.read(),x,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(w=Re(w,[0,4,1,2,3])),this.bias!==null&&(w=Ur(w,this.bias.read(),this.dataFormat)),this.activation!==null&&(w=this.activation.apply(w)),w})}computeOutputShape(e){e=at(e);let t=e.slice(),n,r,s,a;this.dataFormat==="channelsFirst"?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);let o=this.kernelSize[0],i=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],u=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=is(t[r],l,o,this.padding),t[s]=is(t[s],u,i,this.padding),t[a]=is(t[a],d,c,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};fx.className="Conv3DTranspose";ie.registerClass(fx);var QS=class extends Cd{constructor(e,t){super(e,t);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new H("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new H("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new H(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Tt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ct(t.depthwiseRegularizer),this.depthwiseConstraint=qt(t.depthwiseConstraint),this.pointwiseInitializer=Tt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ct(t.pointwiseRegularizer),this.pointwiseConstraint=qt(t.pointwiseConstraint)}build(e){if(e=at(e),e.length<this.rank+2)throw new H(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new H(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let o=0;o<this.rank;++o)s.push(1);s.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new zt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return M(()=>{e=Oe(e);let n;if(this.rank===1)throw new $e("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Re(e,[0,2,3,1])),n=ei(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=Ur(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Re(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=At(this.depthwiseInitializer),e.pointwiseInitializer=At(this.pointwiseInitializer),e.depthwiseRegularizer=ft(this.depthwiseRegularizer),e.pointwiseRegularizer=ft(this.pointwiseRegularizer),e.depthwiseConstraint=jt(this.depthwiseConstraint),e.pointwiseConstraint=jt(this.pointwiseConstraint),e}};QS.className="SeparableConv";var mx=class extends QS{constructor(e){super(2,e)}};mx.className="SeparableConv2D";ie.registerClass(mx);var Zf=class extends Cd{constructor(e){super(1,e);Zf.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Iv(e.kernelSize,"number",1,1))throw new H(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};Zf.className="Conv1D";ie.registerClass(Zf);var gx=class extends Ke{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return M(()=>{if(e=Oe(e),this.dataFormat==="channelsLast"){let n=Ef(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Ef(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=Ef(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Ef(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};gx.className="Cropping2D";ie.registerClass(gx);var bx=class extends Ke{constructor(e){super(e);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Mt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,cW(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return M(()=>{let n=Oe(e),r=n.shape;if(this.dataFormat==="channelsFirst"){n=Re(n,[0,2,3,1]);let s=this.size[0]*r[2],a=this.size[1]*r[3],o=this.interpolation==="nearest"?er.resizeNearestNeighbor(n,[s,a]):er.resizeBilinear(n,[s,a]);return Re(o,[0,3,1,2])}else{let s=this.size[0]*r[1],a=this.size[1]*r[2];return this.interpolation==="nearest"?er.resizeNearestNeighbor(n,[s,a]):er.resizeBilinear(n,[s,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};bx.className="UpSampling2D";ie.registerClass(bx);function KV(e,t,n=[1,1],r="valid",s,a){return M(()=>{s==null&&(s=zr()),Mt(s);let o=dx(e,s);if(e.rank!==4)throw new H(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new H(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=ua(o,t,n,r==="same"?"same":"valid","NHWC",a),s==="channelsFirst"&&(o=Re(o,[0,3,1,2])),o})}var yx=class extends px{constructor(e){super(2,e);this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Tt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=qt(e.depthwiseConstraint),this.depthwiseRegularizer=Ct(e.depthwiseRegularizer)}build(e){if(e=at(e),e.length<4)throw new H(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new H(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return M(()=>{e=Oe(e);let n=KV(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=Ur(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=at(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=jr(t,this.kernelSize[0],this.padding,this.strides[0]),a=jr(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=At(this.depthwiseInitializer),e.depthwiseRegularizer=ft(this.depthwiseRegularizer),e.depthwiseConstraint=jt(this.depthwiseRegularizer),e}};yx.className="DepthwiseConv2D";ie.registerClass(yx);function eT(e,t,n,r){if(Array.isArray(e)){if(t!=null||n!=null)throw new H("When inputs is an array, neither initialState or constants should be provided");r!=null&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(a){return a==null||Array.isArray(a)?a:[a]}return t=s(t),n=s(n),{inputs:e,initialState:t,constants:n}}function tT(e,t,n,r=!1,s,a,o=!1,i=!1){return M(()=>{let c=t.shape.length;if(c<3)throw new H(`Input should be at least 3D, but is ${c}D.`);let l=[1,0].concat(Vr(2,c));if(t=Re(t,l),a!=null)throw new $e("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),s!=null&&(s=ce(ce(s,"bool"),"float32"),s.rank===c-1&&(s=mn(s,-1)),s=Re(s,l)),r&&(t=Qn(t,0),s!=null&&(s=Qn(s,0)));let u=[],d,p=n,h=t.shape[0],f=ht(t),m;s!=null&&(m=ht(s));for(let b=0;b<h;++b){let y=f[b],v=M(()=>e(y,p));if(s==null)d=v[0],p=v[1];else{let x=M(()=>{let w=m[b],T=fe(Jn(w),w),C=Y(V(v[0],w),V(p[0],T)),D=p.map((F,O)=>Y(V(v[1][O],w),V(F,T)));return{output:C,newStates:D}});d=x.output,p=x.newStates}i&&u.push(d)}let g;return i&&(g=Ot(u,1)),[d,g,p]})}var cs=class extends Ke{constructor(e){super(e);let t;if(e.cell==null)throw new H("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new em({cells:e.cell}):t=e.cell,t.stateSize==null)throw new H("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new zt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Vr(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){zv(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],r;if(this.returnSequences?r=[e[0],e[1],n]:r=[e[0],n],this.returnState){let s=[];for(let a of t)s.push([e[0],a]);return[r].concat(s)}else return r}computeMask(e,t){return M(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let r=this.states.map(s=>null);return[n].concat(r)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){let t=null;if(this.numConstants!=null)throw new $e("Constants support is not implemented in RNN yet.");zv(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,r=e.slice(2);this.inputSpec[0]=new zt({shape:[n,null,...r]});let s=[e[0]].concat(e.slice(2));if(t!=null)throw new $e("Constants support is not implemented in RNN yet.");this.cell.build(s);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!k.arraysEqual(this.stateSpec.map(o=>o.shape[o.shape.length-1]),a))throw new H(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(o=>new zt({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){M(()=>{if(!this.stateful)throw new Ns("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new H("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>St([n,r])):this.states_=[St([n,this.cell.stateSize])];else if(e==null)Fe(this.states_),this.keptStates!=null&&(Fe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>St([n,r])):this.states_[0]=St([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new H(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Fe(this.states_);for(let r=0;r<this.states_.length;++r){let s=e[r],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,o=[n,a];if(!k.arraysEqual(s.shape,o))throw new H(`State ${r} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${s.shape}`);this.states_[r]=s}}this.states_=this.states_.map(r=>Zt(r.clone()))})}apply(e,t){let n=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});let s=eT(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],o=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let c of n)this.stateSpec.push(new zt({shape:c.shape}));o=o.concat(this.stateSpec)}if(r!=null&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof Gr){let c=[e].concat(a),l=this.inputSpec.concat(o),u=this.inputSpec;this.inputSpec=l;let d=super.apply(c,t);return this.inputSpec=u,d}else return super.apply(e,t)}call(e,t){return M(()=>{let n=t==null?null:t.mask,r=t==null?null:t.training,s=t==null?null:t.initialState;e=Oe(e),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new H(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let o={training:r},c=tT((h,f)=>{let m=this.cell.call([h].concat(f),o);return[m[0],m.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=c[0],u=c[1],d=c[2];this.stateful&&this.resetStates(d,r);let p=this.returnSequences?u:l;return this.returnState?[p].concat(d):p})}getInitialState(e){return M(()=>{let t=St(e.shape);return t=xe(t,[1,2]),t=yd(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?Dv(t,[1,n]):t):this.cell.stateSize>1?[Dv(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===cs.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){let r=t.cell,s=Hr(r,n);return new e(Object.assign(t,{cell:s}))}};cs.className="RNN";ie.registerClass(cs);var Ed=class extends Ke{},Jf=class extends Ed{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Qt(this.units,"units"),this.activation=va(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Tt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Tt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Tt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ct(e.kernelRegularizer),this.recurrentRegularizer=Ct(e.recurrentRegularizer),this.biasRegularizer=Ct(e.biasRegularizer),this.kernelConstraint=qt(e.kernelConstraint),this.recurrentConstraint=qt(e.recurrentConstraint),this.biasConstraint=qt(e.biasConstraint),this.dropout=bu([1,ga([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=bu([1,ga([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=at(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return M(()=>{if(e=e,e.length!==2)throw new H(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=xa({ones:()=>Jn(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=xa({ones:()=>Jn(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let s,a=this.dropoutMask,o=this.recurrentDropoutMask;a!=null?s=as(V(e,a),this.kernel.read()):s=as(e,this.kernel.read()),this.bias!=null&&(s=Ur(s,this.bias.read())),o!=null&&(n=V(n,o));let i=Y(s,as(n,this.recurrentKernel.read()));return this.activation!=null&&(i=this.activation.apply(i)),[i,i]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:ya(this.activation),useBias:this.useBias,kernelInitializer:At(this.kernelInitializer),recurrentInitializer:At(this.recurrentInitializer),biasInitializer:At(this.biasInitializer),kernelRegularizer:ft(this.kernelRegularizer),recurrentRegularizer:ft(this.recurrentRegularizer),biasRegularizer:ft(this.biasRegularizer),activityRegularizer:ft(this.activityRegularizer),kernelConstraint:jt(this.kernelConstraint),recurrentConstraint:jt(this.recurrentConstraint),biasConstraint:jt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};Jf.className="SimpleRNNCell";ie.registerClass(Jf);var vx=class extends cs{constructor(e){e.cell=new Jf(e);super(e)}call(e,t){return M(()=>{this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,r=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return new e(t)}};vx.className="SimpleRNN";ie.registerClass(vx);var Qf=class extends Ed{constructor(e){super(e);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new H("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Qt(this.units,"units"),this.activation=va(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=va(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Tt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Tt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Tt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ct(e.kernelRegularizer),this.recurrentRegularizer=Ct(e.recurrentRegularizer),this.biasRegularizer=Ct(e.biasRegularizer),this.kernelConstraint=qt(e.kernelConstraint),this.recurrentConstraint=qt(e.recurrentConstraint),this.biasConstraint=qt(e.biasConstraint),this.dropout=bu([1,ga([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=bu([1,ga([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=at(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return M(()=>{if(e=e,e.length!==2)throw new H(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=xa({ones:()=>Jn(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=xa({ones:()=>Jn(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,a=this.recurrentDropoutMask,o,i,c;0<this.dropout&&this.dropout<1&&(e=V(e,s[0]));let l=as(e,this.kernel.read());this.useBias&&(l=Ur(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=V(r,a[0]));let u=this.recurrentKernel.read(),[d,p]=Mn(u,[2*this.units,this.units],u.rank-1),h=as(r,d),[f,m,g]=Mn(l,3,l.rank-1),[b,y]=Mn(h,2,h.rank-1);o=this.recurrentActivation.apply(Y(f,b)),i=this.recurrentActivation.apply(Y(m,y));let v=as(V(i,r),p);c=this.activation.apply(Y(g,v));let x=Y(V(o,r),V(Y(1,It(o)),c));return[x,x]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:ya(this.activation),recurrentActivation:ya(this.recurrentActivation),useBias:this.useBias,kernelInitializer:At(this.kernelInitializer),recurrentInitializer:At(this.recurrentInitializer),biasInitializer:At(this.biasInitializer),kernelRegularizer:ft(this.kernelRegularizer),recurrentRegularizer:ft(this.recurrentRegularizer),biasRegularizer:ft(this.biasRegularizer),activityRegularizer:ft(this.activityRegularizer),kernelConstraint:jt(this.kernelConstraint),recurrentConstraint:jt(this.recurrentConstraint),biasConstraint:jt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};Qf.className="GRUCell";ie.registerClass(Qf);var xx=class extends cs{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Qf(e);super(e)}call(e,t){return M(()=>{this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,r=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};xx.className="GRU";ie.registerClass(xx);var Ad=class extends Ed{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Qt(this.units,"units"),this.activation=va(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=va(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Tt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Tt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Tt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Ct(e.kernelRegularizer),this.recurrentRegularizer=Ct(e.recurrentRegularizer),this.biasRegularizer=Ct(e.biasRegularizer),this.kernelConstraint=qt(e.kernelConstraint),this.recurrentConstraint=qt(e.recurrentConstraint),this.biasConstraint=qt(e.biasConstraint),this.dropout=bu([1,ga([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=bu([1,ga([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=at(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,a=this.units;r=new(t=class extends _r{apply(i,c){let l=s.apply([a]),u=new Df().apply([a]),d=s.apply([a*2]);return YI(YI(l,u),d)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return M(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new H(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=xa({ones:()=>Jn(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=xa({ones:()=>Jn(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,o=this.recurrentDropoutMask,i,c,l,u;0<this.dropout&&this.dropout<1&&(e=V(e,a[0]));let d=as(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=V(r,o[0])),d=Y(d,as(r,this.recurrentKernel.read())),this.useBias&&(d=Ur(d,this.bias.read()));let[p,h,f,m]=Mn(d,4,d.rank-1);i=this.recurrentActivation.apply(p),c=this.recurrentActivation.apply(h),l=Y(V(c,s),V(i,this.activation.apply(f))),u=this.recurrentActivation.apply(m);let g=V(u,this.activation.apply(l));return[g,g,l]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:ya(this.activation),recurrentActivation:ya(this.recurrentActivation),useBias:this.useBias,kernelInitializer:At(this.kernelInitializer),recurrentInitializer:At(this.recurrentInitializer),biasInitializer:At(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ft(this.kernelRegularizer),recurrentRegularizer:ft(this.recurrentRegularizer),biasRegularizer:ft(this.biasRegularizer),activityRegularizer:ft(this.activityRegularizer),kernelConstraint:jt(this.kernelConstraint),recurrentConstraint:jt(this.recurrentConstraint),biasConstraint:jt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};Ad.className="LSTMCell";ie.registerClass(Ad);var wx=class extends cs{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ad(e);super(e)}call(e,t){return M(()=>{this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,r=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};wx.className="LSTM";ie.registerClass(wx);var em=class extends Ed{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return M(()=>{e=e;let n=e.slice(1),r=[];for(let o of this.cells.slice().reverse())Array.isArray(o.stateSize)?r.push(n.splice(0,o.stateSize.length)):r.push(n.splice(0,1));r.reverse();let s=[],a;for(let o=0;o<this.cells.length;++o){let i=this.cells[o];n=r[o],o===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=i.call(a,t),s.push(a.slice(1))}n=[];for(let o of s.slice().reverse())n.push(...o);return[a[0]].concat(n)})}build(e){zv(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,r)=>{ai(`RNNCell_${r}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=s=>({className:s.getClassName(),config:s.getConfig()}),r={cells:this.cells.map(t)};return Object.assign({},e,r)}static fromConfig(e,t,n={}){let r=[];for(let s of t.cells)r.push(Hr(s,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return Wv(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,s=e.splice(r);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],s[a]])}Vv(t)}};em.className="StackedRNNCells";ie.registerClass(em);function xa(e){let{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:a}=e,o=()=>a!=null?a(t(),n):JI(t(),n),i=()=>xd(o,t,r);return!s||s<=1?Zt(i().clone()):Array(s).fill(void 0).map(i).map(l=>Zt(l.clone()))}var XV=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var s=0,r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]]);return n},nT=class extends cs{constructor(e){if(e.unroll)throw new $e("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new $e("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new zt({ndim:5})]}call(e,t){return M(()=>{if(this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new H("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,r=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return M(()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)],a=St(s);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){M(()=>{if(!this.stateful)throw new Ns("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(n[0]==null)throw new H("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>St(s)):this.states_=[St(s)];else if(e==null)Fe(this.states_),this.keptStates!=null&&(Fe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>St(s)):this.states_[0]=St(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new H(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Fe(this.states_);for(let o=0;o<this.states_.length;++o){let i=e[o],c=s;if(!k.arraysEqual(i.shape,c))throw new H(`State ${o} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${i.shape}`);this.states_[o]=i}}this.states_=this.states_.map(o=>Zt(o.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:o}=this.cell,i=t==="channelsFirst",c=e[i?3:2],l=e[i?4:3],u=jr(c,r[0],s,a[0],o[0]),d=jr(l,r[1],s,a[1],o[1]);return[...e.slice(0,2),...i?[n,u,d]:[u,d,n]]}};nT.className="ConvRNN2D";var tm=class extends Ad{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:o}=e;super(Object.assign({},e,{units:t}));this.filters=t,Qt(this.filters,"filters"),this.kernelSize=ku(n,2,"kernelSize"),this.kernelSize.forEach(i=>Qt(i,"kernelSize")),this.strides=ku(r||1,2,"strides"),this.strides.forEach(i=>Qt(i,"strides")),this.padding=s||"valid",hr(this.padding),this.dataFormat=a||"channelsLast",Mt(this.dataFormat),this.dilationRate=ku(o||1,2,"dilationRate"),this.dilationRate.forEach(i=>Qt(i,"dilationRate"))}build(e){var t;e=at(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new H(`The channel dimension of the input should be defined. Found ${e[n]}`);let r=e[n],s=4,a=this.kernelSize.concat([r,this.filters*s]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let o=this.kernelSize.concat([this.filters,this.filters*s]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let i;if(this.unitForgetBias){let c=this.biasInitializer,l=this.filters;i=new(t=class extends _r{apply(d,p){let h=c.apply([l]),f=Zn([l]),m=c.apply([l*2]);return Av([h,f,m])}},t.className="CustomInit",t)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*s],null,i,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return M(()=>{if(e.length!==3)throw new H(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],s=e[1],a=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=xa({ones:()=>Jn(r),rate:this.dropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,c=(Z,te,se)=>!te||!te[se]?Z:V(te[se],Z),l=c(r,i,0),u=c(r,i,1),d=c(r,i,2),p=c(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=xa({ones:()=>Jn(s),rate:this.recurrentDropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,f=c(s,h,0),m=c(s,h,1),g=c(s,h,2),b=c(s,h,3),y=3,[v,x,w,T]=Mn(this.kernel.read(),o,y),[C,D,F,O]=this.useBias?Mn(this.bias.read(),o):[null,null,null,null];l=this.inputConv(l,v,C,this.padding),u=this.inputConv(u,x,D,this.padding),d=this.inputConv(d,w,F,this.padding),p=this.inputConv(p,T,O,this.padding);let[$,R,N,L]=Mn(this.recurrentKernel.read(),o,y);f=this.recurrentConv(f,$),m=this.recurrentConv(m,R),g=this.recurrentConv(g,N),b=this.recurrentConv(b,L);let G=this.recurrentActivation.apply(Y(l,f)),j=this.recurrentActivation.apply(Y(u,m)),K=Y(V(j,a),V(G,this.activation.apply(Y(d,g)))),q=V(this.recurrentActivation.apply(Y(p,b)),this.activation.apply(K));return[q,q,K]})}getConfig(){let e=super.getConfig(),{units:t}=e,n=XV(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){let s=Rt(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?Ur(s,n,this.dataFormat):s}recurrentConv(e,t){return Rt(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};tm.className="ConvLSTM2DCell";ie.registerClass(tm);var kx=class extends nT{constructor(e){let t=new tm(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};kx.className="ConvLSTM2D";ie.registerClass(kx);var nm=class extends Ke{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return n}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Oe(e);if(0<this.rate&&this.rate<1){let r=t.training==null?!1:t.training,s=this.getNoiseShape(n);return xd(()=>JI(n,this.rate,s,this.seed),()=>n,r)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};nm.className="Dropout";ie.registerClass(nm);var Ix=class extends nm{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Ix.className="SpatialDropout1D";ie.registerClass(Ix);var Sx=class extends Ke{constructor(e){super(e);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Qt(this.units,"units"),this.activation=va(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Tt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Tt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=qt(e.kernelConstraint),this.biasConstraint=qt(e.biasConstraint),this.kernelRegularizer=Ct(e.kernelRegularizer),this.biasRegularizer=Ct(e.biasRegularizer),this.activityRegularizer=Ct(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=at(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=at(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Oe(e),r=WI(this.activation.getClassName()),s;return r!=null?s=as(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=as(n,this.kernel.read()),this.bias!=null&&(s=Ur(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let e={units:this.units,activation:ya(this.activation),useBias:this.useBias,kernelInitializer:At(this.kernelInitializer),biasInitializer:At(this.biasInitializer),kernelRegularizer:ft(this.kernelRegularizer),biasRegularizer:ft(this.biasRegularizer),activityRegularizer:ft(this.activityRegularizer),kernelConstraint:jt(this.kernelConstraint),biasConstraint:jt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Sx.className="Dense";ie.registerClass(Sx);var Tx=class extends Ke{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=at(e);for(let t of e.slice(1))if(t==null)throw new H(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],ma(e,1)]}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Oe(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let r=[0];for(let s=2;s<n.rank;++s)r.push(s);r.push(1),n=Re(n,r)}return fW(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Tx.className="Flatten";ie.registerClass(Tx);var Cx=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.activation=va(e.activation)}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Oe(e);return this.activation.apply(n)})}getConfig(){let e={activation:ya(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Cx.className="Activation";ie.registerClass(Cx);var Nx=class extends Ke{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return M(()=>(e=Oe(e),pW(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Nx.className="RepeatVector";ie.registerClass(Nx);var _x=class extends Ke{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),s=1,a=null;for(let i=0;i<r.length;++i){let c=r[i];if(this.isUnknown(c))if(a===null)a=i;else throw new H("Can only specifiy one unknown dimension.");else s*=c}let o=ma(e);if(a!==null){if(s===0||o%s!=0)throw new H(n);r[a]=o/s}else if(o!==s)throw new H(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Oe(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return U(n,s)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};_x.className="Reshape";ie.registerClass(_x);var Ex=class extends Ke{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Vr(1,e.dims.length+1);if(!k.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new zt({ndim:this.dims.length+1})]}computeOutputShape(e){e=at(e);let t=e.slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return Re(Oe(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Ex.className="Permute";ie.registerClass(Ex);var Ax=class extends Ke{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Oe(e),r=-1;return Ql(Qo(n,this.maskValue),r)}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Oe(e),r=-1,s=!0,a=Ql(Qo(n,this.maskValue),r,s);return V(n,ce(a,n.dtype))})}};Ax.className="Masking";ie.registerClass(Ax);var Dx=class extends Ke{constructor(e){super(e);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(vt(e.inputLength))}this.inputDim=e.inputDim,Qt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Qt(this.outputDim,"outputDim"),this.embeddingsInitializer=Tt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ct(e.embeddingsRegularizer),this.activityRegularizer=Ct(e.activityRegularizer),this.embeddingsConstraint=qt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return M(()=>this.maskZero?(e=Oe(e),Qo(e,Ge(e))):null)}computeOutputShape(e){if(e=at(e),this.inputLength==null)return[...e,this.outputDim];let t=vt(this.inputLength);if(t.length!==e.length-1)throw new H(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let s=t[r],a=e[r+1];if(s!=null&&a!=null&&s!==a)throw new H(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);s==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Oe(e);n.dtype!=="int32"&&(n=_f(n,"int32"));let r=ZI(this.embeddings.read(),U(n,[n.size]));return U(r,at(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:At(this.embeddingsInitializer),embeddingsRegularizer:ft(this.embeddingsRegularizer),activityRegularizer:ft(this.activityRegularizer),embeddingsConstraint:jt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Dx.className="Embedding";ie.registerClass(Dx);var li=class extends Ke{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new $e}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let s=e[e.length-t.length+r],a=t[r];if(s==null||a==null||s<0||a<0)n.push(null);else if(s===1)n.push(a);else if(a===1)n.push(s);else{if(s!==a)throw new H("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[at(e)]),e=e,e.length<2)throw new H(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let s of e)s!=null&&s[0]!==null&&t.push(s[0]);if(t=fa(t),t.length>1)throw new H(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let s=1;s<e.length;++s){let a=e[s]==null?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let r=e.map(s=>s.length);e.indexOf(null)===-1&&fa(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return M(()=>{if(e=e,this.reshapeRequired){let n=[],r=e.map(s=>s.rank);if(r.indexOf(null)===-1){let s=ga(r);for(let a of e){let o=a.rank;for(let i=0;i<s-o;++i)a=yd(a,1);n.push(a)}return this.mergeFunction(n)}else{let s=!1;for(let i of e){let c=i.rank;if(c==null){let l=i.shape,u=l[0],d=l.slice(1).concat([u]),p=U(i,[u].concat(ma(l.slice(1))));p=Re(p,[1,0]),p=U(p,d),n.push(p),s=!0}else if(c>1){let l=Vr(1,c).concat([0]);n.push(Re(i,l)),s=!0}else n.push(i)}let a=this.mergeFunction(n),o=a.rank;if(s){if(o==null){let i=a.shape,c=i.length,l=i[c-1],u=[l].concat(i.slice(0,i.length-1));a=U(Re(U(a,[-1,l]),[1,0]),u)}else if(o>1){let i=[o-1].concat(Vr(0,o-1));a=Re(a,i)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){let s=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(let r of e)r!=null&&r[0]!==null&&n.push(r[0]);return n=fa(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return M(()=>{if(t==null)return null;if(!Array.isArray(t))throw new H("`mask` should be an Array");if(!Array.isArray(e))throw new H("`inputs` should be an Array");if(t.length!==e.length)throw new H(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:mn(r,0));let n=t[0];for(let r=1;r<t.length-1;++r)n=Cr(n,t[r]);return n})}},Fx=class extends li{constructor(e){super(e)}mergeFunction(e){return M(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Y(t,e[n]);return t})}};Fx.className="Add";ie.registerClass(Fx);var $x=class extends li{constructor(e){super(e)}mergeFunction(e){return M(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=V(t,e[n]);return t})}};$x.className="Multiply";ie.registerClass($x);var Rx=class extends li{constructor(e){super(e)}mergeFunction(e){return M(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Y(t,e[n]);return V(1/e.length,t)})}};Rx.className="Average";ie.registerClass(Rx);var Px=class extends li{constructor(e){super(e)}mergeFunction(e){return M(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ts(t,e[n]);return t})}};Px.className="Maximum";ie.registerClass(Px);var Ox=class extends li{constructor(e){super(e)}mergeFunction(e){return M(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=uu(t,e[n]);return t})}};Ox.className="Minimum";ie.registerClass(Ox);var Mx=class extends li{constructor(e){super(e);this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new H("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let r of e)if(r!=null){t=!1;break}if(t)return;let n=[];for(let r=0;r<e.length;++r){let s=e[r].slice();s.splice(this.axis,1);let a=!1;for(let o of n)if(k.arraysEqual(o,s)){a=!0;break}a||n.push(s)}if(n.length>1)throw new H("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return M(()=>Av(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new H("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let s of t.slice(1)){if(n[r]==null||s[r]==null){n[r]=null;break}n[r]+=s[r]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new H("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new H("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new H(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return M(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let r=[];for(let a=0;a<e.length;++a)t[a]==null?r.push(ce(Jn(e[a]),"bool")):t[a].rank<e[a].rank?r.push(mn(t[a],-1)):r.push(t[a]);let s=et(r,this.axis);return Gh(s,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Mx.className="Concatenate";ie.registerClass(Mx);function Dd(e,t){for(;e<0;)e+=t;return e}function YV(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new $e("batchDot is not implemented for tensors of 4D or higher rank yet");if(k.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),k.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new $e("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,s=t.shape.length;n==null&&(n=[r-1,s-2]);let a=n;return M(()=>{let o;if(r>s){o=r-s;let c=[];for(let l=0;l<o;++l)c.push(1);t=U(t,t.shape.concat(c))}else if(s>r){o=s-r;let c=[];for(let l=0;l<o;++l)c.push(1);e=U(e,e.shape.concat(c))}else o=0;let i;if(e.shape.length===2&&t.shape.length===2)a[0]===a[1]?i=xe(V(e,t),a[0]):i=xe(V(Re(e,[1,0]),t),a[1]);else{let c=a[0]!==e.shape.length-1,l=a[1]===t.shape.length-1;i=De(e,t,c,l)}if(o>0){let c;r>s?c=r+s-3:c=r-1;let l=[];for(let u=c;u<c+o;++u)l.push(u);i=ns(i,l)}return i.shape.length===1&&(i=mn(i,1)),i})}var Lx=class extends li{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){k.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new $e("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new H(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new H(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((s,a)=>Dd(s,e[a].shape.length)):r=[Dd(this.axes,t.shape.length),Dd(this.axes,n.shape.length)],this.normalize&&(t=Uf(t,r[0]),n=Uf(n,r[1])),YV(t,n,r)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[Dd(this.axes,e.length),Dd(this.axes,t.length)],n}computeOutputShape(e){k.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new $e("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let s=t.concat(n);return s.length===1&&s.push(1),s}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Lx.className="Dot";ie.registerClass(Lx);var Bx=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Oe(e);return xd(()=>Y(Af(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};Bx.className="GaussianNoise";ie.registerClass(Bx);var zx=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Oe(e);return this.rate>0&&this.rate<1?xd(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return V(n,Af(n.shape,1,s))},()=>n,t.training||!1):n})}};zx.className="GaussianDropout";ie.registerClass(zx);var Wx=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Oe(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return M(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return xd(()=>{let s=Oe(e),a=1.6732632423543772,o=1.0507009873554805,i=-a*o,c=la(lu(n),this.rate);c=_f(c,"float32");let l=((1-this.rate)*(1+this.rate*i**2))**-.5,u=-l*i*this.rate,d=Y(V(s,c),V(Y(c,-1),i));return Y(V(d,l),u)},()=>Oe(e),t.training||!1)}return e})}};Wx.className="AlphaDropout";ie.registerClass(Wx);function Fd(e,t,n,r,s,a=.001){let o;if(e.rank===2)o=Dk(e,t,n,r,s,a);else if(e.rank===3)o=Fk(e,t,n,r,s,a);else if(e.rank===4)o=$k(e,t,n,r,s,a);else throw new $e(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return o}function ZV(e,t,n,r,s=.001){return M(()=>{let a=tf(e,r),o=a.mean,i=a.variance;return[Fd(e,o,i,n,t,s),o,i]})}function JV(e,t,n,r,s=.001){return M(()=>{let a=tf(e,r),o=a.mean,i=a.variance,c=[];for(let f of Vr(0,e.rank))r.indexOf(f)!==-1?c.push(1):c.push(e.shape[f]);let l=U(o,c),u=U(i,c),d=t==null?null:U(t,c),p=n==null?null:U(n,c);return[Fd(e,l,u,p,d,s),o,i]})}function QV(e,t,n,r,s=.001){return k.arraysEqual(r.slice().sort(),Vr(0,e.rank-1))?ZV(e,t,n,r,s):JV(e,t,n,r,s)}var Vx=class extends Ke{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Tt(e.betaInitializer||"zeros"),this.gammaInitializer=Tt(e.gammaInitializer||"ones"),this.movingMeanInitializer=Tt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Tt(e.movingVarianceInitializer||"ones"),this.betaConstraint=qt(e.betaConstraint),this.gammaConstraint=qt(e.gammaConstraint),this.betaRegularizer=Ct(e.betaRegularizer),this.gammaRegularizer=Ct(e.gammaRegularizer)}build(e){e=at(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new H(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new zt({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return M(()=>{let n=t.training==null?!1:t.training,r=Oe(e),s=r.shape,a=s.length,o=Vr(0,a),i=this.axis>=0?this.axis:this.axis+a;o.splice(i,1);let c=ni(1,a);c[i]=s[i];let l=o.slice();l.sort();let u=!k.arraysEqual(l,Vr(0,a).slice(0,a-1)),d=()=>{if(u){let b=U(this.movingMean.read(),c),y=U(this.movingVariance.read(),c),v=this.center?U(this.beta.read(),c):null,x=this.scale?U(this.gamma.read(),c):null;return Fd(r,b,y,v,x,this.epsilon)}else return Fd(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return d();let[p,h,f]=QV(r,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(b,y,v)=>{M(()=>{let x=1-v,w=b.read(),T=V(fe(w,y),x);b.write(fe(w,T))})};return(()=>{m(this.movingMean,h,this.momentum),m(this.movingVariance,f,this.momentum)})(),p})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:At(this.betaInitializer),gammaInitializer:At(this.gammaInitializer),movingMeanInitializer:At(this.movingMeanInitializer),movingVarianceInitializer:At(this.movingVarianceInitializer),betaRegularizer:ft(this.betaRegularizer),gammaRegularizer:ft(this.gammaRegularizer),betaConstraint:jt(this.betaConstraint),gammaConstraint:jt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Vx.className="BatchNormalization";ie.registerClass(Vx);var Ux=class extends Ke{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Tt(e.betaInitializer||"zeros"),this.gammaInitializer=Tt(e.gammaInitializer||"ones"),this.betaRegularizer=Ct(e.betaRegularizer),this.gammaRegularizer=Ct(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=at(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(let s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==fa(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(s=>e[s]),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){let n=Oe(e),r=n.shape,s=r.length;return M(()=>{let a=!0,{mean:o,variance:i}=tf(n,this.axis,a),c=ni(1,s);for(let f of this.axis)c[f]=r[f];let l=f=>f!=null&&f.shape.length!==s?U(f,c):f,u=l(this.gamma.read()),d=l(this.beta.read()),p=[],h=[];for(let f=0;f<s;++f)this.axis.indexOf(f)!==-1?(p.push(r[f]),h.push(1)):(p.push(1),h.push(r[f]));return o=Pn(o,p),i=Pn(i,p),u=Pn(u,h),d=Pn(d,h),Fd(n,o,i,d,u,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:At(this.betaInitializer),gammaInitializer:At(this.gammaInitializer),betaRegularizer:ft(this.betaRegularizer),gammaRegularizer:ft(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Ux.className="LayerNormalization";ie.registerClass(Ux);function eU(e,t,n){return M(()=>{if(e.rank!==4)throw new H(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new H("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=zr()),n!=="channelsLast"&&n!=="channelsFirst")throw new H(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return n==="channelsFirst"?r=[[0,0],[0,0],t[0],t[1]]:r=[[0,0],t[0],t[1],[0,0]],pr(e,r)})}var Gx=class extends Ke{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?zr():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new H(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new H(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new H(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new zt({ndim:4})]}computeOutputShape(e){e=at(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return M(()=>eU(Oe(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Gx.className="ZeroPadding2D";ie.registerClass(Gx);function rm(e,t,n,r,s,a){return M(()=>{Mt(s),HI(a),hr(r),n==null&&(n=[1,1]),r==null&&(r="valid"),s==null&&(s=zr()),a==null&&(a="max"),e=dx(e,s);let o,i=r==="same"?"same":"valid";return a==="max"?o=Pt(e,t,n,i):o=lr(e,t,n,i),s==="channelsFirst"&&(o=Re(o,[0,3,1,2])),o})}function rT(e,t,n,r,s,a){return M(()=>{Mt(s),HI(a),hr(r),n==null&&(n=[1,1,1]),r==null&&(r="valid"),s==null&&(s=zr()),a==null&&(a="max"),e=ZS(e,s);let o,i=r==="same"?"same":"valid";return a==="max"?o=tv(e,t,n,i):o=By(e,t,n,i),s==="channelsFirst"&&(o=Re(o,[0,4,1,2,3])),o})}var sT=class extends Ke{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new H(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Qt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new H(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Qt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,hr(this.padding),this.inputSpec=[new zt({ndim:3})]}computeOutputShape(e){e=at(e);let t=jr(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return M(()=>{this.invokeCallHook(e,t),e=yd(Oe(e),2);let n=this.poolingFunction(Oe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ns(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},Hx=class extends sT{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Mt(s),hr(r),rm(e,t,n,r,s,"max")}};Hx.className="MaxPooling1D";ie.registerClass(Hx);var jx=class extends sT{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Mt(s),hr(r),rm(e,t,n,r,s,"avg")}};jx.className="AveragePooling1D";ie.registerClass(jx);var aT=class extends Ke{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new H(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Qt(this.poolSize,"poolSize"),Qt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Mt(this.dataFormat),hr(this.padding),this.inputSpec=[new zt({ndim:4})]}computeOutputShape(e){e=at(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=jr(t,this.poolSize[0],this.padding,this.strides[0]),n=jr(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return M(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},qx=class extends aT{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Mt(s),hr(r),rm(e,t,n,r,s,"max")}};qx.className="MaxPooling2D";ie.registerClass(qx);var Kx=class extends aT{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Mt(s),hr(r),rm(e,t,n,r,s,"avg")}};Kx.className="AveragePooling2D";ie.registerClass(Kx);var oT=class extends Ke{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new H(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Qt(this.poolSize,"poolSize"),Qt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Mt(this.dataFormat),hr(this.padding),this.inputSpec=[new zt({ndim:5})]}computeOutputShape(e){e=at(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=jr(t,this.poolSize[0],this.padding,this.strides[0]),n=jr(n,this.poolSize[1],this.padding,this.strides[1]),r=jr(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return M(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Xx=class extends oT{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Mt(s),hr(r),rT(e,t,n,r,s,"max")}};Xx.className="MaxPooling3D";ie.registerClass(Xx);var Yx=class extends oT{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Mt(s),hr(r),rT(e,t,n,r,s,"avg")}};Yx.className="AveragePooling3D";ie.registerClass(Yx);var iT=class extends Ke{constructor(e){super(e);this.inputSpec=[new zt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new $e}},Zx=class extends iT{constructor(e){super(e||{})}call(e,t){return M(()=>{let n=Oe(e);return Et(n,1)})}};Zx.className="GlobalAveragePooling1D";ie.registerClass(Zx);var Jx=class extends iT{constructor(e){super(e||{})}call(e,t){return M(()=>{let n=Oe(e);return Tr(n,1)})}};Jx.className="GlobalMaxPooling1D";ie.registerClass(Jx);var cT=class extends Ke{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Mt(this.dataFormat),this.inputSpec=[new zt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new $e}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Qx=class extends cT{call(e,t){return M(()=>{let n=Oe(e);return this.dataFormat==="channelsLast"?Et(n,[1,2]):Et(n,[2,3])})}};Qx.className="GlobalAveragePooling2D";ie.registerClass(Qx);var ew=class extends cT{call(e,t){return M(()=>{let n=Oe(e);return this.dataFormat==="channelsLast"?Tr(n,[1,2]):Tr(n,[2,3])})}};ew.className="GlobalMaxPooling2D";ie.registerClass(ew);var uT=class extends Ke{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=t.layer,s=Hr(r,n);delete t.layer;let a={layer:s};return Object.assign(a,t),new e(a)}},tw=class extends uT{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=at(e),e.length<3)throw new H(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=at(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return M(()=>(e=Oe(e),tT((a,o)=>[Oe(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};tw.className="TimeDistributed";ie.registerClass(tw);function tU(e){si(iW,"BidirectionalMergeMode",e)}var nU="concat",nw=class extends uT{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Hr(n),t.goBackwards=t.goBackwards!==!0;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Hr(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?nU:e.mergeMode,tU(this.mergeMode),e.weights)throw new $e("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,r,s;return this.returnState&&(s=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,r=[n]):this.mergeMode==null?r=[n,n.slice()]:r=[n],this.returnState?this.mergeMode==null?r.concat(s).concat(s.slice()):[n].concat(s).concat(s.slice()):Ln(r)}apply(e,t){let n=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});let s=eT(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&r==null)return super.apply(e,t);let a=[],o=[];if(n!=null){let c=n.length;if(c%2>0)throw new H("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let l=n.map(u=>new zt({shape:u.shape}));this.forwardLayer.stateSpec=l.slice(0,c/2),this.backwardLayer.stateSpec=l.slice(c/2),o.push(...l)}if(r!=null)throw new $e("Support for constants in Bidirectional layers is not implemented yet.");let i=a[0]instanceof Gr;for(let c of a)if(c instanceof Gr!==i)throw new H("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){let c=[e].concat(a),l=this.inputSpec.concat(o),u=this.inputSpec;this.inputSpec=l;let d=super.apply(c,t);return this.inputSpec=u,d}else return super.apply(e,t)}call(e,t){return M(()=>{let n=t.initialState,r,s;if(n==null)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{let i=n.slice(0,n.length/2),c=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:c}))}let a;this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Qn(s,1));let o;return this.mergeMode==="concat"?o=Av([r,s]):this.mergeMode==="sum"?o=Y(r,s):this.mergeMode==="ave"?o=V(.5,Y(r,s)):this.mergeMode==="mul"?o=V(r,s):this.mergeMode==null&&(o=[r,s]),this.returnState?this.mergeMode==null?o.concat(a):[o].concat(a):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){ai(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),ai(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let s=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(s).concat(s):[n].concat(s).concat(s)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Hr(t.layer);if(delete t.layer,t.numConstants!=null)throw new $e("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};nw.className="Bidirectional";ie.registerClass(nw);function rU(e){return new yu(e)}function sU(e){return new cx(e)}function aU(e){return new ax(e)}function oU(e){return new ox(e)}function iU(e){return new ix(e)}function cU(e){return new lx(e)}function uU(e){return new ux(e)}function lU(e){return new Zf(e)}function dU(e){return new Nd(e)}function pU(e){return new hx(e)}function hU(e){return new _d(e)}function fU(e){return new fx(e)}function mU(e){return new mx(e)}function gU(e){return new gx(e)}function bU(e){return new bx(e)}function yU(e){return new yx(e)}function vU(e){return new Cx(e)}function xU(e){return new Sx(e)}function wU(e){return new nm(e)}function kU(e){return new Ix(e)}function IU(e){return new Tx(e)}function SU(e){return new Nx(e)}function TU(e){return new _x(e)}function CU(e){return new Ex(e)}function NU(e){return new Dx(e)}function _U(e){return new Fx(e)}function EU(e){return new Rx(e)}function AU(e){return new Mx(e)}function DU(e){return new Px(e)}function FU(e){return new Ox(e)}function $U(e){return new $x(e)}function RU(e){return new Lx(e)}function PU(e){return new Vx(e)}function OU(e){return new Ux(e)}function MU(e){return new Gx(e)}function rw(e){return new jx(e)}function LU(e){return rw(e)}function BU(e){return rw(e)}function sw(e){return new Kx(e)}function zU(e){return sw(e)}function WU(e){return sw(e)}function aw(e){return new Yx(e)}function VU(e){return aw(e)}function UU(e){return aw(e)}function GU(e){return new Zx(e)}function HU(e){return new Qx(e)}function lT(e){return new Jx(e)}function dT(e){return new ew(e)}function pT(e){return new Hx(e)}function hT(e){return new qx(e)}function jU(e){return new Xx(e)}function qU(e){return new xx(e)}function KU(e){return new Qf(e)}function XU(e){return new wx(e)}function YU(e){return new Ad(e)}function ZU(e){return new vx(e)}function JU(e){return new Jf(e)}function QU(e){return new kx(e)}function eG(e){return new tm(e)}function tG(e){return new cs(e)}function nG(e){return new em(e)}function rG(e){return new nw(e)}function sG(e){return new tw(e)}var aG=lT,oG=dT,iG=pT,cG=hT;function uG(e){return new Bx(e)}function lG(e){return new zx(e)}function dG(e){return new Wx(e)}function pG(e){return new Ax(e)}var fT={};Ae(fT,{MAPE:()=>IG,MSE:()=>CG,binaryAccuracy:()=>hG,binaryCrossentropy:()=>fG,categoricalAccuracy:()=>gG,categoricalCrossentropy:()=>bG,cosineProximity:()=>xG,mape:()=>SG,meanAbsoluteError:()=>wG,meanAbsolutePercentageError:()=>kG,meanSquaredError:()=>TG,mse:()=>NG,precision:()=>yG,recall:()=>vG,sparseCategoricalAccuracy:()=>mG});function hG(e,t){return Hv(e,t)}function fG(e,t){return gS(e,t)}function mG(e,t){return bS(e,t)}function gG(e,t){return jv(e,t)}function bG(e,t){return qv(e,t)}function yG(e,t){return mS(e,t)}function vG(e,t){return nV(e,t)}function xG(e,t){return Uv(e,t)}function wG(e,t){return Gf(e,t)}function kG(e,t){return xu(e,t)}function IG(e,t){return xu(e,t)}function SG(e,t){return xu(e,t)}function TG(e,t){return ii(e,t)}function CG(e,t){return ii(e,t)}function NG(e,t){return ii(e,t)}var mT={};Ae(mT,{modelFromJSON:()=>OV});var gT={};Ae(gT,{l1:()=>EG,l1l2:()=>_G,l2:()=>AG});function _G(e){return new Td(e)}function EG(e){return GV(e)}function AG(e){return HV(e)}var bT=class extends vu{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof Es))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function sm(e,t){return e<t}function yT(e,t){return e>t}var vT=class extends bT{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new $e("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=sm:this.mode==="max"?this.monitorFunc=yT:this.monitor.indexOf("acc")!==-1?this.monitorFunc=yT:this.monitorFunc=sm,this.monitorFunc===sm&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===sm?1/0:-1/0}async onEpochEnd(e,t){await ba(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function DG(e){return new vT(e)}var FG={earlyStopping:DG},$G=Q();$G.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var Ar;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"})(Ar||(Ar={}));var xT;(function(e){let t;(function(n){n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(xT||(xT={}));var ow={};function RG(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};ow[e]=n}function wT(e){return ow[e]}function PG(e){delete ow[e]}function I(e,t,n,r,s){let a=t.inputParams[e];if(a&&a.inputIndexStart!==void 0){let i=a.inputIndexStart,c=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?i+1:a.inputIndexEnd;if(a.type==="tensor")return kn(t.inputNames[a.inputIndexStart],n,r,s);if(a.type==="tensors")return t.inputNames.slice(i,c).map(p=>kn(p,n,r,s));let l=kn(t.inputNames.slice(i)[0],n,r,s),u=l.dataSync();return a.type==="number"?u[0]:k.toNestedArray(l.shape,u)}let o=t.attrParams[e];return o&&o.value}function kn(e,t,n,r){let[s,a]=tr(e);if(r!=null){let i=r.getHashTableHandleByName(s);if(i!=null)return i}let o=n.currentContextIds.find(i=>!!t[am(s,i)]);return o!==void 0?t[am(s,o)][a]:void 0}function OG(e,t,n){return t[am(e,n.currentContextId)]}function us(e,t){let[n,r,s]=tr(e);return[am(n,t&&t.currentContextId),r,s]}function am(e,t){return t?`${e}-${t}`:e}function tr(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let n=t[0],r=t.length===3?t[1]:void 0,s=Number(t[t.length-1]);return[n,s,r]}function om(e,t,n){let r=I("pad",e,t,n);if(r==="explicit"){r=I("explicitPaddings",e,t,n);let s=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)s[a][0]=r[a*2],s[a][1]=r[a*2+1];return s}return r}function As(e){return e.kept?e:ws(e)}var kT={};Ae(kT,{json:()=>MG});var MG=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],IT={};Ae(IT,{json:()=>LG});var LG=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ST={};Ae(ST,{json:()=>BG});var BG=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],TT={};Ae(TT,{json:()=>zG});var zG=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],CT={};Ae(CT,{json:()=>WG});var WG=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],NT={};Ae(NT,{json:()=>VG});var VG=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],_T={};Ae(_T,{json:()=>UG});var UG=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],ET={};Ae(ET,{json:()=>GG});var GG=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],AT={};Ae(AT,{json:()=>HG});var HG=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],DT={};Ae(DT,{json:()=>jG});var jG=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],FT={};Ae(FT,{json:()=>qG});var qG=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],$T={};Ae($T,{json:()=>KG});var KG=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],RT={};Ae(RT,{json:()=>XG});var XG=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],PT={};Ae(PT,{json:()=>YG});var YG=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],OT={};Ae(OT,{json:()=>ZG});var ZG=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],MT={};Ae(MT,{json:()=>JG});var JG=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],LT={};Ae(LT,{json:()=>QG});var QG=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],BT={};Ae(BT,{json:()=>eH});var eH=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],zT={};Ae(zT,{json:()=>tH});var tH=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],WT=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[kT,IT,ST,TT,CT,NT,_T,ET,AT,DT,FT,$T,RT,PT,OT,MT,LT,BT,zT],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,r)=>(n[r.tfOpName]=r,n),{})}transformGraph(e,t={}){let n=e.node,r=[],s=[],a=[],o=n.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?r.push(f[m.name]):m.op==="Const"?s.push(f[m.name]):(m.input==null||m.input.length===0)&&a.push(f[m.name]),f),{}),i=[],c=[],l={},u={};t!=null&&(l=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));let d=Object.keys(o);d.forEach(f=>{let m=o[f];m.inputNames.forEach((g,b)=>{let[y,,v]=us(g),x=o[y];if(x.outputs!=null){let w=x.outputs.indexOf(v);if(w!==-1){let T=`${y}:${w}`;m.inputNames[b]=T}}m.inputs.push(x),x.children.push(m)})}),Object.keys(u).length===0?d.forEach(f=>{let m=o[f];m.children.length===0&&c.push(m)}):Object.keys(u).forEach(f=>{let[m]=us(f),g=o[m];g!=null&&(g.signatureKey=u[f],c.push(g))}),Object.keys(l).length>0?Object.keys(l).forEach(f=>{let[m]=us(f),g=o[m];g&&(g.signatureKey=l[f],i.push(g))}):i=r;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let h={nodes:o,inputs:i,outputs:c,weights:s,placeholders:r,signature:t,functions:p};return a.length>0&&(h.initNodes=a),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=wT(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.substr(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((r,s)=>(r[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},r),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((r,s)=>{let a=s.type,o;switch(s.type){case"string":o=iw(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=iw(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":o=mw(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=mw(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":o=uw(e.attr,s.tfName,s.defaultValue||0),o===void 0&&!!s.tfDeprecatedName&&(o=uw(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":o=fw(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=fw(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":o=cw(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=cw(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":o=bw(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=bw(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":o=hw(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=hw(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":o=gw(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=gw(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":o=dw(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=dw(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":o=pw(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=pw(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":o=UT(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=UT(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${e.op}`)}return r[s.name]={value:o,type:a},r},{})),n}mapFunction(e){let t=e.nodeDef,n=[],r=[],s={};t!=null&&(s=t.reduce((u,d)=>(u[d.name]=this.mapNode(d),d.op==="Const"&&r.push(u[d.name]),u),{}));let a=[],o=[];e.signature.inputArg.forEach(u=>{let[d]=us(u.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:lw(u.type),type:"dtype"}},children:[]};p.signatureKey=u.name,a.push(p),s[d]=p}),Object.keys(s).forEach(u=>{let d=s[u];d.inputNames.forEach((p,h)=>{let[f,,m]=us(p),g=s[f];if(g.outputs!=null){let b=g.outputs.indexOf(m);if(b!==-1){let y=`${f}:${b}`;d.inputNames[h]=y}}d.inputs.push(g),g.children.push(d)})});let c=e.ret;e.signature.outputArg.forEach(u=>{let[d,p]=us(c[u.name]),h=s[d];h!=null&&(h.defaultOutput=p,o.push(h))});let l=this.mapArgsToSignature(e);return{nodes:s,inputs:a,outputs:o,weights:r,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function nH(e){let t=Q().global;if(typeof t.atob!="undefined")return t.atob(e);if(typeof Buffer!="undefined")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function VT(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):nH(e);return t?n:n.toLowerCase()}function iw(e,t,n,r=!1){let s=e[t];return s!=null?VT(s.s,r):n}function cw(e,t,n){let r=e[t];return r?r.b:n}function uw(e,t,n){let r=e[t]||{},s=r.i!=null?r.i:r.f!=null?r.f:n;return typeof s=="number"?s:parseInt(s,10)}function lw(e){switch(typeof e=="string"&&(e=Ar[e]),e){case Ar.DT_FLOAT:case Ar.DT_HALF:return"float32";case Ar.DT_INT32:case Ar.DT_INT64:case Ar.DT_INT8:case Ar.DT_UINT8:return"int32";case Ar.DT_BOOL:return"bool";case Ar.DT_DOUBLE:return"float32";case Ar.DT_STRING:return"string";default:return null}}function UT(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function dw(e,t,n){let r=e[t];return r&&r.type?lw(r.type):n}function pw(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map(s=>lw(s)):n}function GT(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function hw(e,t,n){let r=e[t];return r&&r.shape?GT(r.shape):n}function fw(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(s=>typeof s=="number"?s:parseInt(s,10)):n}function mw(e,t,n,r=!1){let s=e[t];return s&&s.list&&s.list.s?s.list.s.map(a=>VT(a,r)):n}function gw(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(s=>GT(s)):n}function bw(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var rH=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,s)=>(r[s]=this.getAttr(s),r),{}))}getInput(e){return kn(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return kn(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return uw(this.node.rawAttrs,e,t);if(n.s!=null)return iw(this.node.rawAttrs,e,t);if(n.b!=null)return cw(this.node.rawAttrs,e,t);if(n.shape!=null)return hw(this.node.rawAttrs,e,t);if(n.type!=null)return dw(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return fw(this.node.rawAttrs,e,t);if(n.list.s!=null)return mw(this.node.rawAttrs,e,t);if(n.list.shape!=null)return gw(this.node.rawAttrs,e,t);if(n.list.b!=null)return bw(this.node.rawAttrs,e,t);if(n.list.type!=null)return pw(this.node.rawAttrs,e,t)}return t}},sH=(e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[Y(I("a",e,t,n),I("b",e,t,n))];case"AddN":return[Nk(I("tensors",e,t,n))];case"FloorMod":case"Mod":return[rv(I("a",e,t,n),I("b",e,t,n))];case"Mul":return[V(I("a",e,t,n),I("b",e,t,n))];case"RealDiv":case"Div":return[me(I("a",e,t,n),I("b",e,t,n))];case"DivNoNan":return[jy(I("a",e,t,n),I("b",e,t,n))];case"FloorDiv":return[Uh(I("a",e,t,n),I("b",e,t,n))];case"Sub":return[fe(I("a",e,t,n),I("b",e,t,n))];case"Minimum":return[uu(I("a",e,t,n),I("b",e,t,n))];case"Maximum":return[ts(I("a",e,t,n),I("b",e,t,n))];case"Pow":return[Ss(I("a",e,t,n),I("b",e,t,n))];case"SquaredDifference":return[pf(I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},aH=(e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Bt(I("x",e,t,n))];case"Acos":return[Ey(I("x",e,t,n))];case"Acosh":return[Ay(I("x",e,t,n))];case"Asin":return[Fy(I("x",e,t,n))];case"Asinh":return[$y(I("x",e,t,n))];case"Atan":return[Ry(I("x",e,t,n))];case"Atan2":return[Py(I("x",e,t,n),I("y",e,t,n))];case"Atanh":return[Oy(I("x",e,t,n))];case"Ceil":return[Wy(I("x",e,t,n))];case"Complex":return[sa(I("real",e,t,n),I("imag",e,t,n))];case"Cos":return[nd(I("x",e,t,n))];case"Cosh":return[Kh(I("x",e,t,n))];case"Elu":return[iu(I("x",e,t,n))];case"Erf":return[qy(I("x",e,t,n))];case"Exp":return[fn(I("x",e,t,n))];case"Expm1":return[Ky(I("x",e,t,n))];case"Floor":return[cu(I("x",e,t,n))];case"Log":return[Yn(I("x",e,t,n))];case"Log1p":return[sd(I("x",e,t,n))];case"Imag":return[Yh(I("x",e,t,n))];case"Neg":return[It(I("x",e,t,n))];case"Reciprocal":return[ov(I("x",e,t,n))];case"Real":return[ud(I("x",e,t,n))];case"Relu":return[qe(I("x",e,t,n))];case"Round":return[sf(I("x",e,t,n))];case"Selu":return[of(I("x",e,t,n))];case"Sigmoid":return[dr(I("x",e,t,n))];case"Sin":return[cf(I("x",e,t,n))];case"Sign":return[iv(I("x",e,t,n))];case"Sinh":return[uf(I("x",e,t,n))];case"Softplus":return[Zo(I("x",e,t,n))];case"Sqrt":return[an(I("x",e,t,n))];case"Square":return[ct(I("x",e,t,n))];case"Tanh":return[Xo(I("x",e,t,n))];case"Tan":return[lv(I("x",e,t,n))];case"ClipByValue":return[Jt(I("x",e,t,n),I("clipValueMin",e,t,n),I("clipValueMax",e,t,n))];case"Relu6":return[rf(I("x",e,t,n))];case"Rsqrt":return[af(kn(e.inputNames[0],t,n))];case"Prod":return[nf(I("x",e,t,n),I("axes",e,t,n))];case"LeakyRelu":return[rd(I("x",e,t,n),I("alpha",e,t,n))];case"Prelu":return[cd(I("x",e,t,n),I("alpha",e,t,n))];case"IsNan":return[Yy(kn(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Dr(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){k.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){let s=e[r],a=t[r];k.assert(s<0||a<0||s===a,()=>n+` Shapes ${e} and ${t} must match`)}}}function HT(e){return!(typeof e=="number"||e.some(t=>t<0))}function $d(e,t,n){let r=yw(e,n),s=!HT(r);if(s&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach(a=>{r=yw(a.shape,r)}),!HT(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function yw(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}var oH=class{constructor(e,t,n,r,s,a,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Ie(0),Zt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Dr(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Zt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,r)=>this.write(n,t[r]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return Kn([],[0].concat(this.elementShape));let n=this.readMany(e);return Dr(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Ot(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Kn([],[0].concat(this.elementShape));let t=[];for(let r=0;r<this.size();r++)t.push(r);let n=this.readMany(t);return Dr(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),et(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,ht(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map(i=>(n+=i,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:t.size/n,a=[];M(()=>{t=U(t,[1,n,s]);for(let i=0;i<e.length;++i){let c=i===0?0:r[i-1],l=[0,c,0],u=[1,e[i],s];a[i]=U(ze(t,l,u),this.elementShape)}return a});let o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,a)}},Rd=class{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);Dr(t,s.shape,"TensorList shape mismatch: "),Zt(s)}),this.idTensor=Ie(0),this.maxNumElements=r,Zt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Rd([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Dr(e,this.elementShape,"TensorList shape mismatch: ");let r=$d(this.elementShape,this.tensors,e);return M(()=>{let s=this.tensors.map(a=>U(a,r));return Ot(s,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=$d(this.elementShape,this.tensors,e),r=this.tensors.pop();return Dr(r.shape,e,"TensorList shape mismatch: "),U(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Dr(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Zt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Dr(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=$d(this.elementShape,this.tensors,t);return U(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Dr(this.elementShape,t.shape,"TensorList shape mismatch: "),Zt(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Dr(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=$d(this.elementShape,this.tensors,n);return e.length===0?Kn([],[0].concat(r)):M(()=>{let s=e.map(a=>U(this.tensors[a],r));return Ot(s,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Dr(this.elementShape,t,"TensorList shape mismatch: ");let n=$d(this.elementShape,this.tensors,t);return this.size()===0?Kn([],[0].concat(n)):M(()=>{let r=this.tensors.map(s=>U(s,n));return et(r,0)})}};function iH(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let s=e.shape.slice(1);Dr(s,t,"TensorList shape mismatch: ");let a=ht(e);return new Rd(a,t,r)}function cH(e,t,n){return new Rd([],e,t,n)}function uH(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let s=Math.max(...t);if(r!=null&&r!==-1&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);let a=new Rd([],n,e.dtype,r),o=ht(e,0);return t.forEach((i,c)=>{a.setItem(i,o[c])}),a}function lH(e,t,n){let r=0,s=t.map(u=>(r+=u,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${e.shape}`);let a=e.shape.slice(1),o=yw(a,n),i=r===0?0:e.size/r,c=M(()=>{let u=[];e=U(e,[1,r,i]);for(let d=0;d<t.length;++d){let p=d===0?0:s[d-1],h=[0,p,0],f=[1,t[d],i];u[d]=U(ze(e,h,f),o)}return e.dispose(),u}),l=new Rd([],n,e.dtype,t.length);for(let u=0;u<c.length;u++)l.setItem(u,c[u]);return l}var dH=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=I("thenBranch",e,t,n),s=I("elseBranch",e,t,n),a=I("cond",e,t,n),o=I("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=I("body",e,t,n),s=I("cond",e,t,n),a=I("args",e,t,n),o=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map(u=>u.id),c=await o[0].data();o.forEach(u=>{!u.kept&&i.indexOf(u.id)===-1&&u.dispose()});let l=a;for(;c[0];){let u=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);let d=l.map(h=>h.id);u.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()});let p=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);c=await p[0].data(),p.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()})}return l}case"LoopCond":{let r=I("pred",e,t,n);return[As(r)]}case"Switch":{let r=I("pred",e,t,n),s=I("data",e,t,n);return s.kept||(s=As(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{let r=e.inputNames.find(s=>kn(s,t,n)!==void 0);if(r){let s=kn(r,t,n);return[As(s)]}return}case"Enter":{let r=I("frameName",e,t,n),s=I("tensor",e,t,n);return n.enterFrame(r),[As(s)]}case"Exit":{let r=I("tensor",e,t,n);return n.exitFrame(),[As(r)]}case"NextIteration":{let r=I("tensor",e,t,n);return n.nextIteration(),[As(r)]}case"TensorArrayV3":{let r=I("size",e,t,n),s=I("dtype",e,t,n),a=I("elementShape",e,t,n),o=I("dynamicSize",e,t,n),i=I("clearAfterRead",e,t,n),c=I("identicalElementShapes",e,t,n),l=I("name",e,t,n),u=new oH(l,s,r,a,c,o,i);return n.addTensorArray(u),[u.idTensor,Ie(1)]}case"TensorArrayWriteV3":{let r=I("tensorArrayId",e,t,n),s=I("index",e,t,n),a=I("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(s,a),[o.idTensor]}case"TensorArrayReadV3":{let r=I("tensorArrayId",e,t,n),s=I("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{let r=I("tensorArrayId",e,t,n),s=I("indices",e,t,n),a=I("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{let r=I("tensorArrayId",e,t,n),s=I("indices",e,t,n),a=I("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(s,a),[o.idTensor]}case"TensorArrayConcatV3":{let r=I("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=I("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{let r=I("tensorArrayId",e,t,n),s=I("tensor",e,t,n),a=I("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(a,s),[o.idTensor]}case"TensorArraySizeV3":{let r=I("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return[Ie(s.size(),"int32")]}case"TensorArrayCloseV3":{let r=I("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{let r=I("tensorListId",e,t,n),s=I("index",e,t,n),a=I("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(s,a),[o.idTensor]}case"TensorListGetItem":{let r=I("tensorListId",e,t,n),s=I("index",e,t,n),a=I("elementShape",e,t,n),o=I("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{let r=I("indices",e,t,n),s=I("tensor",e,t,n),a=I("elementShape",e,t,n),o=I("numElements",e,t,n),i=uH(s,r,a,o);return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r=I("elementShape",e,t,n),s=I("elementDType",e,t,n),a;e.op==="TensorListReserve"?a="numElements":a="maxNumElements";let o=I(a,e,t,n),i=cH(r,s,o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{let r=I("tensorListId",e,t,n),s=I("indices",e,t,n),a=I("elementShape",e,t,n),o=I("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,o,a)]}case"TensorListStack":{let r=I("tensorListId",e,t,n),s=I("elementShape",e,t,n),a=I("elementDType",e,t,n),o=I("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,o)]}case"TensorListFromTensor":{let r=I("tensor",e,t,n),s=I("elementShape",e,t,n),a=I("elementDType",e,t,n),o=iH(r,s,a);return n.addTensorList(o),[o.idTensor]}case"TensorListConcat":{let r=I("tensorListId",e,t,n),s=n.getTensorList(r.id),a=I("dtype",e,t,n),o=I("elementShape",e,t,n);return[s.concat(a,o)]}case"TensorListPushBack":{let r=I("tensorListId",e,t,n),s=I("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{let r=I("tensorListId",e,t,n),s=I("elementShape",e,t,n),a=I("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{let r=I("tensor",e,t,n),s=I("elementShape",e,t,n),a=I("lengths",e,t,n),o=lH(r,a,s);return n.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function jT(e,t,n){let[r,s]=I("fusedOps",e,t,n),a=r==="biasadd",o=!a,i=s==="prelu",c=r==="fusedbatchnorm",l=I("numArgs",e,t,n);if(a){if(i&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let u=I("strides",e,t,n),d=om(e,t,n),p=I("dataFormat",e,t,n).toUpperCase(),h=I("dilations",e,t,n),[f,m]=I("args",e,t,n);o&&(m=f,f=void 0);let g=I("leakyreluAlpha",e,t,n);return{stride:u,pad:d,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:g}}var pH=(e,t,n)=>{switch(e.op){case"Conv1D":{let r=I("stride",e,t,n),s=I("pad",e,t,n),a=I("dataFormat",e,t,n).toUpperCase(),o=I("dilation",e,t,n);return[jh(I("x",e,t,n),I("filter",e,t,n),r,s,a,o)]}case"Conv2D":{let r=I("strides",e,t,n),s=om(e,t,n),a=I("dataFormat",e,t,n).toUpperCase(),o=I("dilations",e,t,n);return[Rt(I("x",e,t,n),I("filter",e,t,n),[r[1],r[2]],s,a,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:r,pad:s,dataFormat:a,dilations:o,biasArg:i,preluArg:c,activationFunc:l,leakyreluAlpha:u}=jT(e,t,n);return[pa.conv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:l,preluActivationWeights:c,leakyreluAlpha:u})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:s,dataFormat:a,dilations:o,biasArg:i,preluArg:c,activationFunc:l,leakyreluAlpha:u}=jT(e,t,n);return[pa.depthwiseConv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:l,preluActivationWeights:c,leakyreluAlpha:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=I("outputShape",e,t,n),s=I("strides",e,t,n),a=om(e,t,n);return[qh(I("x",e,t,n),I("filter",e,t,n),r,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=I("strides",e,t,n),s=om(e,t,n),a=I("dilations",e,t,n),o=I("dataFormat",e,t,n).toUpperCase();return[ua(I("input",e,t,n),I("filter",e,t,n),[r[1],r[2]],s,o,[a[1],a[2]])]}case"Conv3D":{let r=I("strides",e,t,n),s=I("pad",e,t,n),a=I("dataFormat",e,t,n).toUpperCase(),o=I("dilations",e,t,n);return[Uy(I("x",e,t,n),I("filter",e,t,n),[r[1],r[2],r[3]],s,a,[o[1],o[2],o[3]])]}case"AvgPool":{let r=I("strides",e,t,n),s=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[lr(I("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPool":{let r=I("strides",e,t,n),s=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[Pt(I("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{let r=I("strides",e,t,n),s=I("pad",e,t,n),a=I("kernelSize",e,t,n),o=I("includeBatchInIndex",e,t,n),{result:i,indexes:c}=Qk(I("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s,o);return[i,c]}case"AvgPool3D":{let r=I("strides",e,t,n),s=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[By(I("x",e,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{let r=I("strides",e,t,n),s=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[tv(I("x",e,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{let r=I("strides",e,t,n),s=I("pad",e,t,n),a=I("dilations",e,t,n),o=r[1],i=r[2],c=a[1],l=a[2];return[Hy(I("x",e,t,n),I("filter",e,t,n),[o,i],s,[c,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},hH=(e,t,n)=>{switch(e.op){case"Fill":{let r=I("shape",e,t,n),s=I("dtype",e,t,n),a=I("value",e,t,n);return[xn(r,a,s)]}case"LinSpace":{let r=I("start",e,t,n),s=I("stop",e,t,n),a=I("num",e,t,n);return[jk(r,s,a)]}case"Multinomial":{let r=I("logits",e,t,n),s=I("numSamples",e,t,n),a=I("seed",e,t,n);return[eI(r,s,a)]}case"OneHot":{let r=I("indices",e,t,n),s=I("depth",e,t,n),a=I("onValue",e,t,n),o=I("offValue",e,t,n);return[ru(r,s,a,o)]}case"Ones":return[Zn(I("shape",e,t,n),I("dtype",e,t,n))];case"OnesLike":return[Jn(I("x",e,t,n))];case"RandomUniform":return[lu(I("shape",e,t,n),I("minval",e,t,n),I("maxval",e,t,n),I("dtype",e,t,n))];case"Range":{let r=I("start",e,t,n),s=I("stop",e,t,n),a=I("step",e,t,n);return[du(r,s,a,I("dtype",e,t,n))]}case"TruncatedNormal":{let r=I("shape",e,t,n),s=I("mean",e,t,n),a=I("stdDev",e,t,n),o=I("seed",e,t,n);return[hf(r,s,a,I("dtype",e,t,n),o)]}case"Zeros":return[St(I("shape",e,t,n),I("dtype",e,t,n))];case"ZerosLike":return[Ge(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function vw(e,t,n){let r=I("boxes",e,t,n),s=I("scores",e,t,n),a=I("maxOutputSize",e,t,n),o=I("iouThreshold",e,t,n),i=I("scoreThreshold",e,t,n),c=I("softNmsSigma",e,t,n);return{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:c}}var fH=async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:c}=vw(e,t,n),l=await er.nonMaxSuppressionWithScoreAsync(r,s,a,o,i,c);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=vw(e,t,n),c=I("padToMaxOutputSize",e,t,n),l=await er.nonMaxSuppressionPaddedAsync(r,s,a,o,i,c);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=vw(e,t,n);return[await er.nonMaxSuppressionAsync(r,s,a,o,i)]}case"Where":{let r=ce(I("condition",e,t,n),"bool"),s=[await hv(r)];return r.dispose(),s}case"ListDiff":return rI(I("x",e,t,n),I("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},mH=(e,t,n)=>{switch(e.op){case"TopKV2":{let r=I("x",e,t,n),s=I("k",e,t,n),a=I("sorted",e,t,n),o=dv(r,s,a);return[o.values,o.indices]}case"Unique":{let r=I("x",e,t,n),s=ff(r);return[s.values,s.indices]}case"UniqueV2":{let r=I("x",e,t,n),s=I("axis",e,t,n),a=ff(r,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},gH=(e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=I("default",e,t,n);return[kn(e.name,t,n)||r];case"Placeholder":return[kn(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let l=I("x",e,t,n);return[As(l)]}case"IdentityN":return I("x",e,t,n).map(l=>As(l));case"Snapshot":let s=I("x",e,t,n);return[As(s)];case"Shape":return[He(I("x",e,t,n).shape,"int32")];case"ShapeN":return I("x",e,t,n).map(l=>He(l.shape));case"Size":return[Ie(I("x",e,t,n).size,"int32")];case"Rank":return[Ie(I("x",e,t,n).rank,"int32")];case"NoOp":return[Ie(1)];case"Print":let a=I("x",e,t,n),o=I("data",e,t,n),i=I("message",e,t,n),c=I("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let l=0;l<o.length;l++)console.log(Array.prototype.slice.call(o[l].dataSync()).slice(0,c));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}},bH=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ie(0),this.tensorMap=new Map,Zt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ie(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),M(()=>{let r=ht(t),s=n.length,a=r.length;k.assert(s===a,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${a} elements.`);for(let o=0;o<s;o++){let i=n[o],c=r[o];Zt(c),this.tensorMap.set(i,c)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return M(()=>{let r=[];for(let s=0;s<n.length;s++){let a=n[s],o=this.findWithDefault(a,t);r.push(o)}return Ot(r)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},yH=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let s=I("keyDType",e,t,n),a=I("valueDType",e,t,n),o=new bH(s,a);return r.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{let s=I("tableHandle",e,t,n,r),a=I("keys",e,t,n),o=I("values",e,t,n);return[await r.getHashTableById(s.id).import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{let s=I("tableHandle",e,t,n,r),a=I("keys",e,t,n),o=I("defaultValue",e,t,n);return[await r.getHashTableById(s.id).find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{let s=I("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},vH=(e,t,n)=>{switch(e.op){case"ResizeBilinear":{let r=I("images",e,t,n),s=I("size",e,t,n),a=I("alignCorners",e,t,n),o=I("halfPixelCenters",e,t,n);return[er.resizeBilinear(r,[s[0],s[1]],a,o)]}case"ResizeNearestNeighbor":{let r=I("images",e,t,n),s=I("size",e,t,n),a=I("alignCorners",e,t,n),o=I("halfPixelCenters",e,t,n);return[er.resizeNearestNeighbor(r,[s[0],s[1]],a,o)]}case"CropAndResize":{let r=I("image",e,t,n),s=I("boxes",e,t,n),a=I("boxInd",e,t,n),o=I("cropSize",e,t,n),i=I("method",e,t,n),c=I("extrapolationValue",e,t,n);return[er.cropAndResize(r,s,a,o,i,c)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},xH=(e,t,n)=>{switch(e.op){case"Equal":return[Xn(I("a",e,t,n),I("b",e,t,n))];case"NotEqual":return[Qo(I("a",e,t,n),I("b",e,t,n))];case"Greater":return[On(I("a",e,t,n),I("b",e,t,n))];case"GreaterEqual":return[la(I("a",e,t,n),I("b",e,t,n))];case"Less":return[Zh(I("a",e,t,n),I("b",e,t,n))];case"LessEqual":return[da(I("a",e,t,n),I("b",e,t,n))];case"LogicalAnd":return[Cr(I("a",e,t,n),I("b",e,t,n))];case"LogicalNot":return[ad(I("a",e,t,n))];case"LogicalOr":return[ef(I("a",e,t,n),I("b",e,t,n))];case"Select":case"SelectV2":return[hn(I("condition",e,t,n),I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},wH=(e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[De(I("a",e,t,n),I("b",e,t,n),I("transposeA",e,t,n),I("transposeB",e,t,n))];case"Einsum":return[Uk(I("equation",e,t,n),...I("tensors",e,t,n))];case"Transpose":return[Re(I("x",e,t,n),I("perm",e,t,n))];case"_FusedMatMul":let[r,s]=I("fusedOps",e,t,n),a=r==="biasadd",o=s==="prelu",i=I("numArgs",e,t,n),c=I("leakyreluAlpha",e,t,n);if(a){if(o&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[l,u]=I("args",e,t,n);return[pa.matMul({a:I("a",e,t,n),b:I("b",e,t,n),transposeA:I("transposeA",e,t,n),transposeB:I("transposeB",e,t,n),bias:l,activation:s,preluActivationWeights:u,leakyreluAlpha:c})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},kH=(e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[Is(I("x",e,t,n),I("mean",e,t,n),I("variance",e,t,n),I("offset",e,t,n),I("scale",e,t,n),I("epsilon",e,t,n))];case"FusedBatchNormV3":return[Is(I("x",e,t,n),I("mean",e,t,n),I("variance",e,t,n),I("offset",e,t,n),I("scale",e,t,n),I("epsilon",e,t,n))];case"LRN":return[Zy(I("x",e,t,n),I("radius",e,t,n),I("bias",e,t,n),I("alpha",e,t,n),I("beta",e,t,n))];case"Softmax":return[Mr(I("x",e,t,n))];case"LogSoftmax":return[Qh(I("x",e,t,n))];case"SparseToDense":return[fv(I("sparseIndices",e,t,n),I("outputShape",e,t,n),I("sparseValues",e,t,n),I("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},IH=(e,t,n)=>{switch(e.op){case"Max":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[Tr(I("x",e,t,n),o,i)]}case"Mean":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[Et(I("x",e,t,n),o,i)]}case"Min":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[od(I("x",e,t,n),o,i)]}case"Sum":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[xe(I("x",e,t,n),o,i)]}case"All":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[Gh(I("x",e,t,n),o,i)]}case"Any":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[Ql(I("x",e,t,n),o,i)]}case"ArgMax":{let o=I("axis",e,t,n);return[qo(I("x",e,t,n),o)]}case"ArgMin":{let o=I("axis",e,t,n);return[Dy(I("x",e,t,n),o)]}case"Prod":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[nf(I("x",e,t,n),o,i)]}case"Cumsum":{let o=I("axis",e,t,n),i=I("exclusive",e,t,n),c=I("reverse",e,t,n);return[Xh(I("x",e,t,n),o,i,c)]}case"Bincount":let r=I("x",e,t,n),s=I("weights",e,t,n),a=I("size",e,t,n);return[zy(r,s,a)];case"DenseBincount":{let o=I("x",e,t,n),i=I("weights",e,t,n),c=I("size",e,t,n),l=I("binaryOutput",e,t,n);return[Wk(o,i,c,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},SH=(e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=I("n",e,t,n),s=I("axis",e,t,n),a=I("tensors",e,t,n);return a=a.slice(0,r),[et(a,s)]}case"Gather":{let r=I("x",e,t,n),s=I("indices",e,t,n);return[Yo(r,ce(s,"int32"),0)]}case"GatherV2":{let r=I("axis",e,t,n),s=I("batchDims",e,t,n),a=I("x",e,t,n),o=I("indices",e,t,n);return[Yo(a,ce(o,"int32"),r,s)]}case"Reverse":{let r=I("dims",e,t,n),s=[];for(let o=0;o<r.length;o++)r[o]&&s.push(o);let a=I("x",e,t,n);return[Qn(a,s)]}case"ReverseV2":{let r=I("axis",e,t,n),s=I("x",e,t,n);return[Qn(s,r)]}case"Slice":{let r=I("begin",e,t,n),s=I("size",e,t,n);return[ze(I("x",e,t,n),r,s)]}case"StridedSlice":{let r=I("begin",e,t,n),s=I("end",e,t,n),a=I("strides",e,t,n),o=I("beginMask",e,t,n),i=I("endMask",e,t,n),c=I("ellipsisMask",e,t,n),l=I("newAxisMask",e,t,n),u=I("shrinkAxisMask",e,t,n),d=I("x",e,t,n);return[uv(d,r,s,a,o,i,c,l,u)]}case"Pack":return M(()=>{let r=I("axis",e,t,n),s=I("tensors",e,t,n),a=s[0].shape,o=ns(s[0]).shape,i=s.map(c=>{let l=k.arraysEqual(c.shape,a);if(!l&&!k.arraysEqual(ns(c).shape,o))throw new Error("the input tensors shape does not match");return l?c:U(c,a)});return[Ot(i,r)]});case"Unpack":{let r=I("axis",e,t,n),s=I("tensor",e,t,n);return ht(s,r)}case"Tile":{let r=I("reps",e,t,n);return[Pn(I("x",e,t,n),r)]}case"Split":case"SplitV":{let r=I("axis",e,t,n),s=I("numOrSizeSplits",e,t,n),a=I("x",e,t,n);return Mn(a,s,r)}case"ScatterNd":{let r=I("indices",e,t,n),s=I("values",e,t,n),a=I("shape",e,t,n);return[iI(r,s,a)]}case"GatherNd":{let r=I("x",e,t,n),s=I("indices",e,t,n);return[cI(r,s)]}case"SparseToDense":{let r=I("sparseIndices",e,t,n),s=I("outputShape",e,t,n),a=I("sparseValues",e,t,n),o=I("defaultValue",e,t,n);return[fv(r,a,s,a.dtype===o.dtype?o:ce(o,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},TH=(e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:r,outputValues:s,emptyRowIndicator:a,reverseIndexMap:o}=hd.sparseFillEmptyRows(I("indices",e,t,n),I("values",e,t,n),I("denseShape",e,t,n),I("defaultValue",e,t,n));return[r,s,a,o]}case"SparseReshape":{let{outputIndices:r,outputShape:s}=hd.sparseReshape(I("inputIndices",e,t,n),I("inputShape",e,t,n),I("newShape",e,t,n));return[r,s]}case"SparseSegmentMean":return[hd.sparseSegmentMean(I("data",e,t,n),I("indices",e,t,n),I("segmentIds",e,t,n))];case"SparseSegmentSum":return[hd.sparseSegmentSum(I("data",e,t,n),I("indices",e,t,n),I("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},CH=(e,t,n)=>{switch(e.op){case"FFT":return[dd(I("x",e,t,n))];case"IFFT":return[hu(I("x",e,t,n))];case"RFFT":return[pd(I("x",e,t,n))];case"IRFFT":return[df(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},NH=(e,t,n)=>{switch(e.op){case"StringNGrams":{let{nGrams:r,nGramsSplits:s}=xf.stringNGrams(I("data",e,t,n),I("dataSplits",e,t,n),I("separator",e,t,n),I("nGramWidths",e,t,n),I("leftPad",e,t,n),I("rightPad",e,t,n),I("padWidth",e,t,n),I("preserveShortSequences",e,t,n));return[r,s]}case"StringSplit":{let{indices:r,values:s,shape:a}=xf.stringSplit(I("input",e,t,n),I("delimiter",e,t,n),I("skipEmpty",e,t,n));return[r,s,a]}case"StringToHashBucketFast":return[xf.stringToHashBucketFast(I("input",e,t,n),I("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},_H=(e,t,n)=>{switch(e.op){case"Cast":return[ce(I("x",e,t,n),I("dtype",e,t,n))];case"ExpandDims":{let r=I("axis",e,t,n);return[mn(I("x",e,t,n),r)]}case"Squeeze":{let r=I("axis",e,t,n);return[ns(I("x",e,t,n),r)]}case"Reshape":return[U(I("x",e,t,n),I("shape",e,t,n))];case"MirrorPad":return[nv(I("x",e,t,n),I("padding",e,t,n),I("mode",e,t,n))];case"PadV2":case"Pad":return[pr(I("x",e,t,n),I("padding",e,t,n),I("constantValue",e,t,n))];case"SpaceToBatchND":{let r=I("blockShape",e,t,n),s=I("paddings",e,t,n);return[id(I("x",e,t,n),r,s)]}case"BatchToSpaceND":{let r=I("blockShape",e,t,n),s=I("crops",e,t,n);return[td(I("x",e,t,n),r,s)]}case"DepthToSpace":{let r=I("blockSize",e,t,n),s=I("dataFormat",e,t,n).toUpperCase();return[Gy(I("x",e,t,n),r,s)]}case"BroadcastTo":return[ou(I("x",e,t,n),I("shape",e,t,n))];case"BroadcastArgs":return[Rk(I("s0",e,t,n),I("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function qT(e,t,n,r){let s=((a,o,i)=>{switch(a.category){case"arithmetic":return M(()=>sH(a,o,i));case"basic_math":return M(()=>aH(a,o,i));case"control":return dH(a,o,i);case"convolution":return M(()=>pH(a,o,i));case"creation":return M(()=>hH(a,o,i));case"dynamic":return fH(a,o,i);case"evaluation":return M(()=>mH(a,o,i));case"image":return M(()=>vH(a,o,i));case"graph":return M(()=>gH(a,o,i));case"logical":return M(()=>xH(a,o,i));case"matrices":return M(()=>wH(a,o,i));case"normalization":return M(()=>kH(a,o,i));case"reduction":return M(()=>IH(a,o,i));case"slice_join":return M(()=>SH(a,o,i));case"sparse":return M(()=>TH(a,o,i));case"spectral":return M(()=>CH(a,o,i));case"string":return M(()=>NH(a,o,i));case"transformation":return M(()=>_H(a,o,i));case"hash_table":return yH(a,o,i,r);case"custom":let c=wT(a.op);if(c&&c.customExecutor)return c.customExecutor(new rH(a,o,i));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return k.isPromise(s)?s.then(a=>[].concat(a)):[].concat(s)}var KT=class{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function XT(e,t,n,r){let s=new Set,a=[],o=null,i=null,c=new Set,l=Object.keys(e).map(p=>tr(p)[0]),u=[];r!=null&&(u=r.map(p=>tr(p.name)[0]));let d=[...t];for(;d.length>0;){let p=d.pop();if((YT(p)||$H(p)||RH(p))&&o==null&&(o=p,i=o.children.map(h=>h.name).filter(h=>s.has(h))),s.add(p.name),n[p.name]==null&&l.indexOf(p.name)===-1&&u.indexOf(p.name)===-1){if(p.inputs.length===0){a.push(p.name);continue}p.inputs.forEach(h=>{c.has(h.name)||(c.add(h.name),d.push(h))})}}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:o,syncInputs:i}}function EH(e,t,n){let{usedNodes:r,inputs:s}=n,a=[],o=Object.keys(s).map(u=>tr(u)[0]).map(u=>e.nodes[u]),i=e.initNodes;o.forEach(u=>{r.has(u.name)&&a.push(u)}),e.weights.forEach(u=>{r.has(u.name)&&a.push(u)}),i!=null&&i.forEach(u=>{r.has(u.name)&&a.push(u)});let c=new Set,l=[];for(;a.length>0;){let u=a.pop();c.add(u.name),t[u.name]||l.push(u),u.children.forEach(d=>{!c.has(d.name)&&r.has(d.name)&&d.inputs.every(p=>c.has(p.name))&&a.push(d)})}return l}var AH=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],DH=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],FH=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function YT(e){return AH.indexOf(e.op)>=0}function $H(e){return DH.indexOf(e.op)>=0}function RH(e){return FH.indexOf(e.op)>=0}var xw=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new xw(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(s=>s.name).sort(),r=t.map(s=>s.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){let n=XT(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){let o=t.map(c=>c.name),i=Object.keys(e);throw new Error(`Cannot compute the outputs [${o}] from the provided inputs [${i}]. Missing the following inputs: [${r}]`)}return EH(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map(u=>this.graph.nodes[tr(u)[0]]),s=t.map(u=>tr(u)[0]),a=s.map(u=>this.graph.nodes[u]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);let o=this.getCompilationKey(r,a),i=this.compiledMap.get(o);i==null&&(i=this.compile(e,a),this.compiledMap.set(o,i));let c={},l={};return M(()=>{let u=new KT(this.weightMap,c,l,this.functionExecutorMap),d=Object.assign({},this.weightMap);Object.keys(e).forEach(f=>{let[m,g]=tr(f),b=[];b[g]=e[f],d[m]=b});let p=this.getFrozenTensorIds(d),h={};for(let f=0;f<i.length;f++){let m=i[f];if(!d[m.name]){let g=qT(m,d,u,this._resourceManager);if(k.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);d[m.name]=g,this.checkTensorForDisposal(m.name,m,d,u,p,s,h)}}return this.parent==null&&u.dispose(p),t.map(f=>kn(f,d,u))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,o){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(i=>{i!=null&&(o[i.id]=(o[i.id]||0)+t.children.length)}),t.inputs.forEach(i=>{if(i.category!=="control"){let c=OG(i.name,n,r);c!=null&&c.forEach(l=>{if(l&&!l.kept&&!s.has(l.id)){let u=o[l.id];if(u===1){if(!this.keepTensorForDebug)l.dispose();else{let[d,p]=us(t.name,r);this.intermediateTensors[d]?this.intermediateTensors[d][p]=l:(this.intermediateTensors[d]=[],this.intermediateTensors[d][p]=l)}delete o[l.id]}else u!=null&&o[l.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Q().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(l){console.warn(l.message)}this.resetIntermediateTensors();let a=new KT(this.weightMap,r,s,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);let o=t.map(l=>kn(l,this.tensorsMap,a)),i=o.map(l=>l.id),c=Object.keys(e).map(l=>e[l].id);return this.keepIds=new Set([...i,...c,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),o}async executeFunctionAsync(e,t,n){let r=e.reduce((s,a,o)=>(s[this.inputs[o].name]=a,s),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let s=Object.keys(e),a=s.map(y=>this.graph.nodes[tr(y)[0]]),o=n.map(y=>tr(y)[0]),i=o.map(y=>this.graph.nodes[y]);i.length===0&&(i=this._outputs);let{usedNodes:c,missingInputs:l,dynamicNode:u,syncInputs:d}=XT(e,i,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map(y=>({node:y,contexts:t.currentContext})),h=Object.assign({},this.weightMap);Object.keys(e).forEach(y=>{let[v,x]=tr(y),w=[];w[x]=e[y],h[v]=w});let f={},m=this.getFrozenTensorIds(h),g={};for(;p.length>0;){let y=this.processStack(a,p,t,h,g,m,o,f,c);await Promise.all(y)}u==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let b=i.filter(y=>!YT(y)&&!kn(y.name,h,t)).map(y=>y.name);if(b.length>0){let y="";throw u!=null&&(y=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${s}]. Consider providing the following inputs: [${l}]. ${y}`)}return h}processStack(e,t,n,r,s,a,o,i,c){let l=[];for(;t.length>0;){let u=t.pop();n.currentContext=u.contexts;let d="";if(u.node.op==="Enter"&&I("isConstant",u.node,r,n)&&([d]=us(u.node.name,n)),r[u.node.name]==null){let p=qT(u.node,r,n,this._resourceManager);d||([d]=us(u.node.name,n));let h=n.currentContext;k.isPromise(p)?l.push(p.then(f=>(r[d]=f,n.currentContext=h,this.checkTensorForDisposal(d,u.node,r,n,a,o,i),this.processChildNodes(u.node,t,n,r,s,c),f))):(r[d]=p,this.checkTensorForDisposal(d,u.node,r,n,a,o,i),this.processChildNodes(u.node,t,n,r,s,c))}else this.processChildNodes(u.node,t,n,r,s,c)}return l}processChildNodes(e,t,n,r,s,a){e.children.forEach(o=>{let[i]=us(o.name,n);s[i]||!a.has(o.name)||(o.op==="Merge"?o.inputNames.some(c=>!!kn(c,r,n))&&(s[i]=!0,t.push({contexts:n.currentContext,node:o})):o.inputNames.every(c=>!!kn(c,r,n))&&(s[i]=!0,t.push({contexts:n.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[r]=tr(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){let a=s.attrParams.shape.value,o=a.length===n.shape.length&&n.shape.every((i,c)=>a[c]===-1||a[c]===i);k.assert(o,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&k.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let r=this._signature.inputs[n];t[r.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[r]=tr(n);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=tr(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},PH=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},OH="?tfjs-format=file",MH="model.json",ZT=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new PH}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=Yt.browserHTTPRequest(e,this.loadOptions);else{let t=Yt.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(Yt.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let r=Yt.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new xw(WT.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let s=WT.Instance.transformGraph(e.modelInitializer);this.initializer=new xw(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=Yt.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Ee)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,r)=>(t[n]=e[r],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function LH(e,t={}){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&e.load==null&&(e.endsWith("/")||(e=e+"/"),e=`${e}${MH}${OH}`);let n=new ZT(e,t);return await n.load(),n}var BH="3.12.0",JT={};Ae(JT,{CSVDataset:()=>lC,Dataset:()=>Su,FileDataSource:()=>bC,TextLineDataset:()=>iC,URLDataSource:()=>yC,array:()=>c6,csv:()=>v6,func:()=>x6,generator:()=>w6,microphone:()=>I6,version_data:()=>S6,webcam:()=>k6,zip:()=>u6});var zH=Oa(p0()),WH=Oa(p0());function VH(e,t){return im(e,t)}function im(e,t,n=new Map,r=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let s=t(e);if(s.recurse&&s.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse)if(Iu(e)){let a=Array.isArray(e)?[]:{};r.add(e);for(let o in e){let i=e[o],c=im(i,t,n,r);a[o]=c}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,s.value),s.value}function UH(e,t=eC){return QT(e,t)}function QT(e,t,n=new Set){let r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let s=t(e);if(s.recurse&&s.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse)if(Iu(r)){let a=Array.isArray(r)?[]:{};n.add(r);for(let o in r){let i=e.map(l=>l[o]),c=QT(i,t,n);a[o]=c}return n.delete(r),a}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return s.value}function eC(e){return e===null?null:Iu(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function tC(e,t){let n=new Map;im(e,t,n);for(let s of Array.from(n.keys())){let a=n.get(s);if(k.isPromise(a)){let o=await a;n.set(s,o)}}return im(e,t,n)}function Iu(e){let t=!1;if(Q().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=h0();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof Ee)&&!(e instanceof Promise)&&!t)}function GH(e){return e==null||HH(e)||Array.isArray(e)||typeof e=="object"&&e instanceof Ee||k.isTypedArray(e)}function HH(e){return e===null||typeof e!="object"&&typeof e!="function"}function jH(e){return VH(e,qH)}function qH(e){return e instanceof Ee?{value:e.clone(),recurse:!1}:Iu(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var nC=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},ww=class extends nC{constructor(){super(ww.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};ww.INITIAL_CAPACITY=32;function rC(e){return new YH(e)}function kw(e){return new ZH(e)}function KH(e,t){return new aC(e,t)}function XH(e,t=wa.FAIL){return new o6(e,t)}var en=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new s6(this,e)}filter(e){return new n6(this,e)}map(e){return new r6(this,e)}mapAsync(e){return new sC(this,e)}serialMapAsync(e){return new sC(this,e).serial()}flatmap(e){return new a6(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new t6(this,e,t)}columnMajorBatch(e,t=!0,n=eC){return this.rowMajorBatch(e,t).map(s=>UH(s,n))}concatenate(e,t){return new aC(rC([this,e]),t)}take(e){return e<0||e==null?this:new e6(this,e)}skip(e){return e<0||e==null?this:new QH(this,e)}prefetch(e){return new oC(this,e)}shuffle(e,t){return new i6(this,e,t)}serial(){return new JH(this)}},YH=class extends en{constructor(e){super();this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:jH(e),done:!1}}},ZH=class extends en{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},JH=class extends en{constructor(e){super();this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},QH=class extends en{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Fe(e.value)}return this.upstream.next()}},e6=class extends en{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},t6=class extends en{constructor(e,t,n=!0){super();this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},n6=class extends en{constructor(e,t){super();this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Fe(e.value)}}},r6=class extends en{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Pr.getTensorsInContainer(e.value),n=this.transform(e.value),r=Pr.getTensorsInContainer(n);for(let s of t)Pr.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}},s6=class extends en{constructor(e,t){super();this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},sC=class extends en{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Pr.getTensorsInContainer(e.value),n=await this.transform(e.value),r=Pr.getTensorsInContainer(n);for(let s of t)Pr.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}},Iw=class extends en{constructor(){super();this.outputQueue=new ww,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},a6=class extends Iw{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Pr.getTensorsInContainer(e.value),n=this.transform(e.value),r=Pr.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let s of t)Pr.isTensorInList(s,r)||s.dispose();return!0}},aC=class extends en{constructor(e,t){super();this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},wa;(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(wa||(wa={}));var o6=class extends en{constructor(e,t=wa.FAIL){super();this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function r(a){return a instanceof en?{value:a.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let s=await tC(this.iterators,r);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case wa.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case wa.SHORTEST:return{value:null,done:!0};case wa.LONGEST:default:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},oC=class extends en{constructor(e,t){super();this.upstream=e,this.bufferSize=t,this.buffer=new nC(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},i6=class extends oC{constructor(e,t,n){super(e,t);this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=WH.alea(n||k.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},Su=class{constructor(){this.size=null}batch(e,t=!0){let n=this;k.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let r;return this.size===1/0||this.size==null?r=this.size:t?r=Math.ceil(this.size/e):r=Math.floor(this.size/e),nr(async()=>(await n.iterator()).columnMajorBatch(e,t,l6),r)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,nr(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,nr(async()=>(await t.iterator()).filter(r=>M(()=>e(r))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return nr(async()=>(await t.iterator()).map(n=>M(()=>e(n))),this.size)}mapAsync(e){let t=this;return nr(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return nr(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,nr(async()=>{let r=kw(async()=>({value:await t.iterator(),done:!1}));return KH(r.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,nr(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,s=zH.alea(t||k.now().toString());return nr(async()=>{let a=s.int32();return n&&(a+=s.int32()),(await r.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,nr(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Su.MAX_BUFFER_SIZE=1e4;function nr(e,t=null){return new class extends Su{constructor(){super(...arguments);this.size=t}async iterator(){return e()}}}function c6(e){return nr(async()=>rC(e),e.length)}function u6(e){if(!Iu(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return nr(async()=>{let n=await tC(e,r=>{if(r instanceof Su)return{value:r.iterator(),recurse:!1};if(Iu(r))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return XH(n,wa.SHORTEST)},t)}function l6(e){if(e===null)return null;let t=e[0];return GH(t)?{value:d6(e),recurse:!1}:{value:null,recurse:!0}}function d6(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ee?Ot(e):Kn(e)}var iC=class extends Su{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(r=>(r.endsWith("\r")&&(r=r.slice(0,-1)),r))}},cm='"',Pd=Symbol("out"),cC=Symbol("field"),um=Symbol("quote"),Sw=Symbol("quoteafterquote"),uC=Symbol("quoteinquote"),lC=class extends Su{constructor(e,t){super();this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new iC(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(k.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&k.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((r,s)=>(r[s]=r[s]+1||1,r),{}),n=Object.keys(t).filter(r=>t[r]>1);if(k.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let r of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(r)===-1)throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let s=0;s<this.fullColumnNames.length;s++){let a=this.fullColumnNames[s],o=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!o)){let i=t[s],c=null;if(i==="")if(o&&o.default!==void 0)c=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);c=void 0}else{let l=Number(i);if(isNaN(l))o&&o.dtype==="bool"?c=this.getBoolean(i):c=i;else if(!o||!o.dtype)c=l;else switch(o.dtype){case"float32":c=l;break;case"int32":c=Math.floor(l);break;case"bool":c=this.getBoolean(i);break;default:c=l}}o&&o.isLabel?r[a]=c:n[a]=c}}return Object.keys(r).length===0?n:{xs:n,ys:r}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],r=0,s=e.length,a=Pd;for(let o=0;o<s;o++)switch(a){case Pd:switch(e.charAt(o)){case cm:r=o+1,a=um;break;case this.delimiter:if(r=o+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=Pd;break;default:a=cC,r=o;break}break;case cC:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(r,o)),a=Pd,r=o+1;break;default:}break;case um:switch(e.charAt(o)){case cm:a=Sw;break;default:}break;case Sw:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(r,o-1)),a=Pd,r=o+1;break;case cm:a=um;break;default:a=uC;break}break;case uC:switch(e.charAt(o)){case cm:a=um;break;default:}break;default:}if(a===Sw?n.push(e.substring(r,s-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},dC=class extends en{constructor(e){super();this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Q().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new dC(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let r=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(r,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let r=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(r,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(r=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),r({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((r,s)=>n.set(r,s*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(k.sizeFromShape(t));return n.set(e,n.length-e.length),Kn(n,t)}},pC=class extends en{constructor(e,t){super();if(this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=He([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,r=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-n)/2,a=(1-r)/2,o=s+n,i=r+a;this.cropBox=Lr([a,s,i,o],[1,4])}else this.cropBox=Lr([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Q().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new pC(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&k.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Go.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return M(()=>{let t=mn(ce(e,"float32"),0),n;n=er.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let r=n.shape;return U(n,r.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},hC=class{},fC=class extends en{split(e){return new p6(this,e)}},p6=class extends fC{constructor(e,t){super();this.upstream=e,this.impl=new h6(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},h6=class extends Iw{constructor(e,t){super();this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},f6=class extends en{decodeUTF8(){return new m6(this)}},m6=class extends fC{constructor(e){super();this.upstream=e,this.impl=new g6(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},g6=class extends Iw{constructor(e){super();if(this.upstream=e,Q().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=h0();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return Q().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},mC=class extends f6{constructor(e,t={}){super();this.file=e,this.options=t,k.assert(e instanceof Uint8Array||(Q().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let r=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,r)));else{let s=new FileReader;s.onload=o=>{let i=s.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(i)},s.onabort=o=>n(new Error("Aborted")),s.onerror=o=>n(new Error(o.type));let a=this.file.slice(this.offset,r);s.readAsArrayBuffer(a)}this.offset=r}),done:!1}}};async function b6(e,t={},n){let r,s;typeof e=="string"?r=e:(r=e.url,s=y6(e));let a=await(n||k.fetch)(r,s);if(a.ok){let o=new Uint8Array(await a.arrayBuffer());return new mC(o,t)}else throw new Error(a.statusText)}var y6=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function gC(e){return typeof e=="string"&&e.substr(0,7)==="file://"}var bC=class extends hC{constructor(e,t={}){super();this.input=e,this.options=t}async iterator(){if(gC(this.input)&&Q().get("IS_NODE")){let e=Hp();this.input=e.readFileSync(this.input.substr(7))}return new mC(this.input,this.options)}},yC=class extends hC{constructor(e,t={}){super();this.url=e,this.fileOptions=t}async iterator(){return gC(this.url)?new bC(this.url,this.fileOptions).iterator():b6(this.url,this.fileOptions)}};function v6(e,t={}){return new lC(new yC(e),t)}function x6(e){let t=kw(e);return nr(async()=>t)}function w6(e){return nr(async()=>{let t=await e();return kw(()=>t.next())})}async function k6(e,t){return pC.create(e,t)}async function I6(e){return dC.create(e)}var S6="3.12.0";function ke(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&k.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var T6=rs.whereImpl,Tw=class extends wl{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new jp(this,ks())}nextDataId(){return Tw.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Q().get("IS_NODE")&&_.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if(t==="string"&&n!=null&&n.length>0&&k.isString(n[0])){let s=n.map(a=>k.encodeString(a));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let r=this.readSync(n.real.dataId),s=this.readSync(n.imag.dataId);return _.mergeRealAndImagArrays(r,s)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(r=>k.decodeString(r))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Be(e.shape,e.dtype,n)}makeOutput(e,t,n){let r=this.write(e,t,n);return ks().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=k.now();return e(),{kernelMs:k.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ke([e],"where");let t=this.readSync(e.dataId);return T6(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};Tw.nextDataId=0;var vC={};Ae(vC,{addImpl:()=>wC,bincountImpl:()=>Nw,bincountReduceImpl:()=>kC,ceilImpl:()=>IC,concatImpl:()=>_w,equalImpl:()=>SC,expImpl:()=>CC,expm1Impl:()=>_C,floorImpl:()=>EC,gatherNdImpl:()=>AC,gatherV2Impl:()=>DC,greaterEqualImpl:()=>$C,greaterImpl:()=>FC,lessEqualImpl:()=>PC,lessImpl:()=>RC,linSpaceImpl:()=>OC,logImpl:()=>MC,maxImpl:()=>LC,maximumImpl:()=>BC,minimumImpl:()=>zC,multiplyImpl:()=>Ew,negImpl:()=>WC,notEqualImpl:()=>VC,prodImpl:()=>UC,rangeImpl:()=>Dw,rsqrtImpl:()=>GC,sigmoidImpl:()=>h5,simpleAbsImpl:()=>xC,sliceImpl:()=>pm,sparseFillEmptyRowsImpl:()=>jC,sparseReshapeImpl:()=>qC,sparseSegmentReductionImpl:()=>Fw,sqrtImpl:()=>g5,squaredDifferenceImpl:()=>KC,stridedSliceImpl:()=>XC,stringNGramsImpl:()=>YC,stringSplitImpl:()=>ZC,stringToHashBucketFastImpl:()=>JC,subImpl:()=>QC,tileImpl:()=>e2,topKImpl:()=>n2,transposeImpl:()=>Aw,uniqueImpl:()=>r2});function xC(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var C6=e=>{let{x:t}=e.inputs,n=e.backend;ke(t,"abs");let r=new Float32Array(k.sizeFromShape(t.shape)),s=n.data.get(t.dataId).values;return r=xC(s),n.makeOutput(r,t.shape,t.dtype)},N6={kernelName:Yi,backendName:"cpu",kernelFunc:C6};function Wt(e){return(t,n,r,s,a)=>{let o=_.assertAndGetBroadcastShape(t,n),i=o.length,c=k.computeStrides(o),l=k.sizeFromShape(o),u=k.getTypedArrayFromDType(a,l),d=t.length,p=n.length,h=k.computeStrides(t),f=k.computeStrides(n),m=_.getBroadcastDims(t,o),g=_.getBroadcastDims(n,o);if(m.length+g.length===0)for(let b=0;b<u.length;++b)u[b]=e(r[b%r.length],s[b%s.length]);else for(let b=0;b<u.length;++b){let y=k.indexToLoc(b,i,c),v=y.slice(-d);m.forEach(C=>v[C]=0);let x=k.locToIndex(v,d,h),w=y.slice(-p);g.forEach(C=>w[C]=0);let T=k.locToIndex(w,p,f);u[b]=e(r[x],s[T])}return[u,o]}}function rr(e){let{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,i=n.makeTensorInfo(r.shape,"complex64"),c=n.data.get(i.dataId);return c.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",o)},i}var _6={kernelName:th,backendName:"cpu",kernelFunc:rr};function lm(e,t,n="float32"){if(n==="complex64"){let s=lm(e,t,"float32"),a=lm(e,t,"float32");return rr({inputs:{real:s,imag:a},backend:e})}let r=k.makeZerosTypedArray(k.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function ls(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var E6={kernelName:so,backendName:"cpu",kernelFunc:ls};function di(e){let{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}var A6={kernelName:kh,backendName:"cpu",kernelFunc:di};function ka(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if(a==="complex64"){if(s.dtype==="complex64")return ls({inputs:{x:s},backend:n});let o=lm(n,s.shape,s.dtype),i=ka({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),c=rr({inputs:{real:i,imag:o},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}if(s.dtype==="complex64"){let o=di({inputs:{input:s},backend:n}),i=ka({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!k.hasEncodingLoss(s.dtype,a)){let o=ls({inputs:{x:s},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32"){let o=n.data.get(s.dataId).values,i=Int32Array.from(o);return n.makeTensorInfo(s.shape,"int32",i)}if(a==="bool"){let o=n.data.get(s.dataId).values,i=k.toTypedArray([0],s.dtype),[c,l]=Wt((u,d)=>u!==d?1:0)(s.shape,[],o,i,"bool");return n.makeTensorInfo(l,"bool",c)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}var D6={kernelName:Ua,backendName:"cpu",kernelFunc:ka};function tn(e,t,n,r){return n==null?({inputs:s,backend:a})=>{let{a:o,b:i}=s,c=a;ke([o,i],e);let l=c.data.get(o.dataId).values,u=c.data.get(i.dataId).values,d=o.dtype==="string"?_.fromUint8ToStringArray(l):l,p=o.dtype==="string"?_.fromUint8ToStringArray(u):u,h=r||o.dtype,[f,m]=t(o.shape,i.shape,d,p,h);return c.makeTensorInfo(m,h,f)}:({inputs:s,backend:a})=>{let{a:o,b:i}=s,c=a;if(o.dtype==="complex64"||i.dtype==="complex64"){let l=ka({inputs:{x:o},backend:c,attrs:{dtype:"complex64"}}),u=c.data.get(l.dataId),d=u.complexTensorInfos.real,p=u.complexTensorInfos.imag,h=c.data.get(d.dataId).values,f=c.data.get(p.dataId).values,m=ka({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),g=c.data.get(m.dataId),b=g.complexTensorInfos.real,y=g.complexTensorInfos.imag,v=c.data.get(b.dataId).values,x=c.data.get(y.dataId).values,[w,T,C]=n(o.shape,i.shape,h,f,v,x),D=c.makeTensorInfo(C,"float32",w),F=c.makeTensorInfo(C,"float32",T),O=rr({inputs:{real:D,imag:F},backend:c});return c.disposeIntermediateTensorInfo(l),c.disposeIntermediateTensorInfo(m),c.disposeIntermediateTensorInfo(D),c.disposeIntermediateTensorInfo(F),O}else{let l=c.data.get(o.dataId).values,u=c.data.get(i.dataId).values,d=r||o.dtype,[p,h]=t(o.shape,i.shape,l,u,d);return c.makeTensorInfo(h,d,p)}}}function Cw(e){return(t,n,r,s,a,o)=>{let i=_.assertAndGetBroadcastShape(t,n),c=k.sizeFromShape(i),l=i.length,u=k.computeStrides(i),d=k.getTypedArrayFromDType("float32",c),p=k.getTypedArrayFromDType("float32",c),h=_.getBroadcastDims(t,i),f=_.getBroadcastDims(n,i),m=_.mergeRealAndImagArrays(r,s),g=_.mergeRealAndImagArrays(a,o),b=t.length,y=k.computeStrides(t),v=n.length,x=k.computeStrides(n);if(h.length+f.length===0)for(let w=0;w<d.length;w++){let T=w%m.length,C=w%g.length,D=e(m[T*2],m[T*2+1],g[C*2],g[C*2+1]);d[w]=D.real,p[w]=D.imag}else for(let w=0;w<d.length;w++){let T=k.indexToLoc(w,l,u),C=T.slice(-b);h.forEach(R=>C[R]=0);let D=k.locToIndex(C,b,y),F=T.slice(-v);f.forEach(R=>F[R]=0);let O=k.locToIndex(F,v,x),$=e(m[D*2],m[D*2+1],g[O*2],g[O*2+1]);d[w]=$.real,p[w]=$.imag}return[d,p,i]}}var wC=Wt((e,t)=>e+t),F6=Cw((e,t,n,r)=>({real:e+n,imag:t+r})),Od=tn(Zs,wC,F6),$6={kernelName:Zs,backendName:"cpu",kernelFunc:Od};function Nw(e,t,n,r,s){let a=k.sizeFromShape(r),o=k.makeZerosTypedArray(s,n);for(let i=0;i<e.length;i++){let c=e[i];if(c<0)throw new Error("Input x must be non-negative!");c>=s||(a>0?o[c]+=t[i]:o[c]+=1)}return o}function kC(e,t,n,r=!1){let s=e.shape[0],a=e.shape[1],o=Be([s,n],t.dtype);for(let i=0;i<s;i++)for(let c=0;c<a;c++){let l=e.get(i,c);if(l<0)throw new Error("Input x must be non-negative!");l>=n||(r?o.set(1,i,l):t.size>0?o.set(o.get(i,l)+t.get(i,c),i,l):o.set(o.get(i,l)+1,i,l))}return o}function Ia(e){return(t,n,r)=>{let s=k.getTypedArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)s[a]=e(t[a],r);return s}}function ot(e,t,n){return({inputs:r,attrs:s,backend:a})=>{let{x:o}=r;if(ke(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,c=i.data.get(o.dataId).values,l=k.sizeFromShape(o.shape),u=n||o.dtype,d=k.getArrayFromDType(u,l);for(let p=0;p<l;++p)d[p]=t(c[p],s);return i.makeTensorInfo(o.shape,u,d)}}function Tu(e,t,n){return({inputs:r,attrs:s,backend:a})=>{let{x:o}=r;if(ke(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,c=i.data.get(o.dataId).values,l=n||o.dtype,u=t(c,l,s);return i.makeTensorInfo(o.shape,l,u)}}var IC=Ia(e=>Math.ceil(e)),R6=Tu(Ga,IC),P6={kernelName:Ga,backendName:"cpu",kernelFunc:R6};function _w(e,t,n,r){let s=k.getArrayFromDType(n,k.sizeFromShape(t));if(r&&n!=="string"){let a=0;e.forEach(o=>{let i=k.sizeFromShape(o.shape);s.set(o.vals,a),a+=i})}else{let a=0;e.forEach(o=>{let i=n==="string"?_.fromUint8ToStringArray(o.vals):o.vals,c=0;for(let l=0;l<o.shape[0];++l){let u=l*t[1]+a;for(let d=0;d<o.shape[1];++d)s[u+d]=i[c++]}a+=o.shape[1]})}return s}var SC=Wt((e,t)=>e===t?1:0),TC=tn(dc,SC,null,"bool"),O6={kernelName:dc,backendName:"cpu",kernelFunc:TC},CC=Ia(e=>Math.exp(e)),NC=Tu(Qa,CC,"float32"),M6={kernelName:Qa,backendName:"cpu",kernelFunc:NC},_C=Ia(e=>Math.expm1(e)),L6=Tu(hc,_C),B6={kernelName:hc,backendName:"cpu",kernelFunc:L6},EC=Ia(e=>Math.floor(e)),z6=Tu(eo,EC),W6={kernelName:eo,backendName:"cpu",kernelFunc:z6};function AC(e,t,n,r,s,a,o,i,c){let l=Be([r,a],n);for(let u=0;u<r;u++){let d=[],p=0;for(let h=0;h<s;h++){let f=e[u*s+h];p+=f*o[h],d.push(f)}if(p<0||p>=c/a)throw new Error(`Invalid indices: ${d} does not index into ${i}`);for(let h=0;h<a;h++)l.values[u*a+h]=t.get(...t.indexToLoc(p*a+h))}return l}function DC(e,t,n){let r=Be(n,e.dtype);for(let s=0;s<r.size;++s){let o=r.indexToLoc(s).slice(),i=o[0],c=o[2],l=t.locToIndex([i,c]);o[2]=t.values[l];let u=e.locToIndex(o);r.values[s]=e.values[u]}return r}var FC=Wt((e,t)=>e>t?1:0),V6=tn(bc,FC,null,"bool"),U6={kernelName:bc,backendName:"cpu",kernelFunc:V6},$C=Wt((e,t)=>e>=t?1:0),G6=tn(ro,$C,null,"bool"),H6={kernelName:ro,backendName:"cpu",kernelFunc:G6},RC=Wt((e,t)=>e<t?1:0),j6=tn(wc,RC,null,"bool"),q6={kernelName:wc,backendName:"cpu",kernelFunc:j6},PC=Wt((e,t)=>e<=t?1:0),K6=tn(kc,PC,null,"bool"),X6={kernelName:kc,backendName:"cpu",kernelFunc:K6};function OC(e,t,n){let r=(t-e)/(n-1),s=k.makeZerosTypedArray(n,"float32");s[0]=e;for(let a=1;a<s.length;a++)s[a]=s[a-1]+r;return s}var MC=Ia(e=>Math.log(e)),Y6=Tu(oo,MC),Z6={kernelName:oo,backendName:"cpu",kernelFunc:Y6};function LC(e,t,n,r){let s=k.getTypedArrayFromDType(r,k.sizeFromShape(n));for(let a=0;a<s.length;++a){let o=a*t,i=e[o];for(let c=0;c<t;++c){let l=e[o+c];(Number.isNaN(l)||l>i)&&(i=l)}s[a]=i}return s}var BC=Wt((e,t)=>Math.max(e,t)),J6=tn(co,BC),Q6={kernelName:co,backendName:"cpu",kernelFunc:J6},zC=Wt((e,t)=>Math.min(e,t)),e5=tn(ho,zC),t5={kernelName:ho,backendName:"cpu",kernelFunc:e5},Ew=Wt((e,t)=>e*t),n5=Cw((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),dm=tn(mo,Ew,n5),r5={kernelName:mo,backendName:"cpu",kernelFunc:dm};function WC(e,t,n){let r=k.createScalarValue(-1,n);return Ew([],t,r,e,n)}function s5(e){let{inputs:t,backend:n}=e,{x:r}=t;ke(r,"neg");let s=n.data.get(r.dataId).values,[a,o]=WC(s,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,a)}var a5={kernelName:Cc,backendName:"cpu",kernelFunc:s5},VC=Wt((e,t)=>e!==t?1:0),o5=tn(Nc,VC,null,"bool"),i5={kernelName:Nc,backendName:"cpu",kernelFunc:o5};function Aw(e,t,n,r,s){let a=t.length,o=k.sizeFromShape(t),i=k.computeStrides(t),c=k.computeStrides(s),l=k.getTypedArrayFromDType(n,k.sizeFromShape(s));for(let u=0;u<o;++u){let d=k.indexToLoc(u,a,i),p=new Array(d.length);for(let f=0;f<p.length;f++)p[f]=d[r[f]];let h=k.locToIndex(p,a,c);l[h]=e[u]}return l}function fr(e){let{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;ke(s,"transpose");let o=s.shape.length,i=new Array(o);for(let d=0;d<i.length;d++)i[d]=s.shape[a[d]];let c=r.data.get(s.dataId).values,l=Aw(c,s.shape,s.dtype,a,i);return{dataId:r.write(l,i,s.dtype),shape:i,dtype:s.dtype}}var c5={kernelName:Po,backendName:"cpu",kernelFunc:fr};function UC(e,t,n,r){let[s,a]=_.computeOutAndReduceShapes(e,r),o=Sr(t,"int32"),i=k.makeZerosTypedArray(k.sizeFromShape(s),o),c=k.sizeFromShape(a);for(let l=0;l<i.length;++l){let u=l*c,d=1;for(let p=0;p<c;++p)d*=n[u+p];i[l]=d}return{outVals:i,outShape:s,outDtype:o}}function u5(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;ke(s,"prod");let i=s.shape.length,c=k.parseAxisParam(a,s.shape),l=_.getAxesPermutation(c,i),u=c,d=s,p=[];l!=null&&(d=fr({inputs:{x:s},backend:n,attrs:{perm:l}}),p.push(d),u=_.getInnerMostAxes(u.length,i));let h=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=UC(d.shape,d.dtype,h,u),b=m;return o&&(b=_.expandShapeToKeepDim(m,c)),p.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.makeTensorInfo(b,g,f)}var l5={kernelName:$c,backendName:"cpu",kernelFunc:u5};function Dw(e,t,n,r){let s=e===t,a=e<t&&n<0,o=t<e&&n>1;if(s||a||o)return k.makeZerosTypedArray(0,r);let i=Math.abs(Math.ceil((t-e)/n)),c=k.makeZerosTypedArray(i,r);t<e&&n===1&&(n=-1),c[0]=e;for(let l=1;l<c.length;l++)c[l]=c[l-1]+n;return c}var GC=Ia(e=>1/Math.sqrt(e)),d5=Tu(To,GC),p5={kernelName:To,backendName:"cpu",kernelFunc:d5},h5=Ia(e=>1/(1+Math.exp(-e))),HC=ot(No,e=>1/(1+Math.exp(-e))),f5={kernelName:No,backendName:"cpu",kernelFunc:HC};function pm(e,t,n,r,s){let a=Gt.isSliceContinous(r,t,n),o=k.sizeFromShape(n),i=k.computeStrides(r);if(a){let d=Gt.computeFlatOffset(t,i);return s==="string"?e.slice(d,d+o):e.subarray(d,d+o)}let c=s==="string"?_.fromUint8ToStringArray(e):e,l=Be(r,s,c),u=Be(n,s);for(let d=0;d<u.size;++d){let p=u.indexToLoc(d),h=p.map((f,m)=>f+t[m]);u.set(l.get(...h),...p)}return s==="string"?_.fromStringArrayToUint8(u.values):u.values}function pi(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:o}=r;ke(s,"slice");let[i,c]=Gt.parseSliceParams(s,a,o);Gt.assertParamsValid(s,i,c);let l=n.data.get(s.dataId).values,u=pm(l,i,c,s.shape,s.dtype);return n.makeTensorInfo(c,s.dtype,u)}var m5={kernelName:Bc,backendName:"cpu",kernelFunc:pi};function jC(e,t,n,r,s,a,o){let i=t[0],c=a[0],l=new Array(c),u=new Array(i),d=t[1];if(c===0){if(i!==0)throw new Error(_.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));let g=k.getArrayFromDType(n,0),b=k.getArrayFromDType(s,0);return[g,[0,d],b,l,u]}let p=!0,h=0,f=new Array(c).fill(0);for(let g=0;g<i;++g){let b=e[g*d];if(b<0)throw new Error(_.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,b));if(b>=c)throw new Error(_.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,b,c));++f[b],p=p&&b>=h,h=b}let m=!0;for(let g=0;g<c;++g){let b=f[g]===0;l[g]=b,m=m&&!b,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){let g=e,b=r;for(let y=0;y<i;++y)u[y]=y;return[g,[i,d],b,l,u]}else{let g=f[c-1],b=k.getArrayFromDType(n,g*d),y=k.getArrayFromDType(s,g),v=new Array(c).fill(0);for(let x=0;x<i;++x){let w=e[x*d],T=v[w],C=(w===0?0:f[w-1])+T;v[w]++;for(let D=0;D<d;++D)b[C*d+D]=e[x*d+D];y[C]=r[x],u[x]=C}for(let x=0;x<c;++x)if(v[x]===0){let T=x===0?0:f[x-1];b[T*d+0]=x;for(let C=1;C<d;++C)b[T*d+C]=0;y[T]=o}return[b,[g,d],y,l,u]}}function qC(e,t,n,r,s){let a=k.sizeFromShape(r),o=t[0],i=s.length,c=[],l=1,u=-1;for(let g=0;g<i;++g){let b=s[g];if(b===-1){if(u!==-1)throw new Error(_.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(u,g));u=g,c.push(1)}else{if(b<0)throw new Error(_.getSparseReshapeNegativeOutputDimErrorMessage(g,b));l*=b,c.push(b)}}if(u!==-1){if(l<=0)throw new Error(_.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(a/l);if(l*g!==a)throw new Error(_.getSparseReshapeInputOutputMultipleErrorMessage(r,c));c[u]=g}if(k.sizeFromShape(c)!==a)throw new Error(_.getSparseReshapeInputOutputMismatchErrorMessage(r,c));let p=r.length,h=[];if(p>0){h[p-1]=1;for(let g=p-2;g>=0;--g)h[g]=h[g+1]*r[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*c[g+1]}let m=k.getArrayFromDType(n,o*i);for(let g=0;g<o;++g){let b=0;for(let y=0;y<p;++y)b+=e[g*p+y]*h[y];for(let y=0;y<i;++y)m[g*i+y]=Math.trunc(b/f[y]),b%=f[y]}return[m,[o,i],c]}function Fw(e,t,n,r,s,a=!1,o=0){let i=r.length,c=[t[0],e.length/t[0]],l=c[1],d=i>0?s[i-1]+1:0;if(d<0)throw new Error(_.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=t.slice();p[0]=d;let h=p.reduce((v,x)=>v*x,1),f=k.getArrayFromDType(n,h);if(i===0)return d>0&&f.fill(o),[f,p];if(d<=0)throw new Error(_.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,b=0,y=s[m];for(;;){let v=0;if(g<i){if(v=s[g],y===v){++g;continue}if(y>=v)throw new Error(_.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=d)throw new Error(_.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,d));y>b&&f.fill(o,b*l,y*l);for(let x=m;x<g;++x){let w=r[x];if(w<0||w>=c[0])throw new Error(_.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x,r[x],c[0]));for(let T=0;T<l;T++)f[y*l+T]+=e[w*l+T]}if(a)for(let x=0;x<l;x++)f[y*l+x]/=g-m;if(m=g,++g,b=y+1,y=v,g>i)break}return b<d&&f.fill(o,b*l,d*l),[f,p]}var g5=Ia(e=>Math.sqrt(e)),b5=ot(_o,e=>Math.sqrt(e)),y5={kernelName:_o,backendName:"cpu",kernelFunc:b5},KC=Wt((e,t)=>{let n=e-t;return n*n}),v5=tn(Do,KC),x5={kernelName:Do,backendName:"cpu",kernelFunc:v5};function XC(e,t,n,r){let s=Be(e,t.dtype);for(let a=0;a<s.size;a++){let o=s.indexToLoc(a),i=new Array(o.length);for(let c=0;c<i.length;c++)i[c]=o[c]*n[c]+r[c];s.set(t.get(...i),...o)}return s}var w5=class{constructor(e,t,n,r,s,a){this.separator=k.encodeString(e),this.nGramWidths=t,this.leftPad=k.encodeString(n),this.rightPad=k.encodeString(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let o=0;o<s;++o){let i=this.getPadWidth(a),c=Math.max(0,i-o),l=Math.max(0,i-(s-(o+1))),u=a-(c+l),d=t+(c>0?0:o-i),p=0;p+=c*this.leftPad.length;for(let b=0;b<u;++b)p+=e[d+b].length;p+=l*this.rightPad.length,p+=(c+l+u-1)*this.separator.length,n[r+o]=new Uint8Array(p);let f=n[r+o],m=0,g=b=>b.forEach(y=>f[m++]=y);for(let b=0;b<c;++b)g(this.leftPad),g(this.separator);for(let b=0;b<u-1;++b)g(e[d+b]),g(this.separator);if(u>0){g(e[d+u-1]);for(let b=0;b<l;++b)g(this.separator),g(this.rightPad)}else{for(let b=0;b<l-1;++b)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let i=t[0];if(i!==0)throw new Error(`First split value must be 0, got ${i}`);for(let c=1;c<r;++c){let l=t[c]>=i;if(l=l&&t[c]<=n,!l)throw new Error(`Invalid split value ${t[c]}, must be in [${i}, ${n}]`);i=t[c]}if(i!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${i}`)}let s=r-1,a=k.getArrayFromDType("int32",r);if(n===0||r===0){let i=new Array(n);for(let c=0;c<=s;++c)a[c]=0;return[i,a]}a[0]=0;for(let i=1;i<=s;++i){let c=t[i]-t[i-1],l=0;this.nGramWidths.forEach(u=>{l+=this.getNumNGrams(c,u)}),this.preserveShort&&c>0&&l===0&&(l=1),a[i]=a[i-1]+l}let o=new Array(a[s]);for(let i=0;i<s;++i){let c=t[i],l=a[i];if(this.nGramWidths.forEach(u=>{let d=t[i+1]-t[i],p=this.getNumNGrams(d,u);this.createNGrams(e,c,o,l,p,u),l+=p}),this.preserveShort&&l===a[i]){let u=t[i+1]-t[i];if(u===0)continue;let d=u+2*this.padWidth,p=1;this.createNGrams(e,c,o,l,p,d)}}return[o,a]}};function YC(e,t,n,r,s,a,o,i){return new w5(n,r,s,a,o,i).compute(e,t)}function k5(e,t,n,r){if(!e.length)return;if(t.length===0){for(let a=0;a<e.length;++a)r.push(e.subarray(a,a+1));return}if(t.length===1){let a=t[0],o=e.indexOf(a);for(;o!==-1;){let i=e.subarray(0,o);(!n||i.length!==0)&&r.push(i),e=e.subarray(o+1),o=e.indexOf(a)}(!n||e.length!==0)&&r.push(e);return}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||t.indexOf(e[a])!==-1){let o=e.subarray(s,a);(!n||o.length!==0)&&r.push(o),s=a+1}}function ZC(e,t,n){let r=e.length,s=[],a=0,o=0,i=new Array(r);for(let p=0;p<r;++p){let h=s.length;k5(e[p],t,n,s);let f=s.length-h;i[p]=f,a+=f,o=Math.max(o,f)}let c=k.getArrayFromDType("int32",a*2),l=new Array(a),u=[r,o],d=0;for(let p=0;p<r;++p)for(let h=0;h<i[p];++h)c[d*2]=p,c[d*2+1]=h,l[d]=s[d],++d;return[c,l,u]}function JC(e,t){let n=k.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=k.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var QC=Wt((e,t)=>e-t),I5=Cw((e,t,n,r)=>({real:e-n,imag:t-r})),$w=tn(Fo,QC,I5),S5={kernelName:Fo,backendName:"cpu",kernelFunc:$w};function e2(e,t){let n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];let r=Be(n,e.dtype);for(let s=0;s<r.values.length;++s){let a=r.indexToLoc(s),o=new Array(e.rank);for(let c=0;c<o.length;c++)o[c]=a[c]%e.shape[c];let i=e.locToIndex(o);r.values[s]=e.values[i]}return r}var Md=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function t2(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){let i=r-n+1,c=t-n+1,l=Math.log(i),u=.5*Math.exp(2*l/3),d=.5*Math.sqrt(l*u*(i-u)/i)*Math.sign(c-i/2),p=Math.max(n,Math.floor(t-c*u/i+d)),h=Math.min(r,Math.floor(t+(i-c)*u/i+d));t2(e,t,p,h)}let s=e[t],a=n,o=r;for(k.swap(e,n,t),Md(e[r],s)>0&&k.swap(e,n,r);a<o;){for(k.swap(e,a,o),a++,o--;Md(e[a],s)<0;)a=a+1;for(;Md(e[o],s)>0;)o=o-1}Md(e[n],s)===0?k.swap(e,n,o):(o=o+1,k.swap(e,o,r)),o<=t&&(n=o+1),t<=o&&(r=o-1)}}function n2(e,t,n,r,s){let a=t[t.length-1],[o,i]=[e.length/a,a],c=k.getTypedArrayFromDType(n,o*r),l=k.getTypedArrayFromDType("int32",o*r);for(let d=0;d<o;d++){let p=d*i,h=e.subarray(p,p+i),f=new Array(h.length);h.forEach((y,v)=>f[v]={value:y,index:v}),r<f.length&&(t2(f,r),f=f.slice(0,r)),s&&f.sort(Md);let m=d*r,g=c.subarray(m,m+r),b=l.subarray(m,m+r);for(let y=0;y<r;y++)g[y]=f[y].value,b[y]=f[y].index}let u=t.slice();return u[u.length-1]=r,[Be(u,n,c),Be(u,"int32",l)]}function r2(e,t,n,r){let s=k.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let f=0;f<s;f++)a[0]*=n[f];a[1]=n[s];for(let f=s+1;f<n.length;f++)a[2]*=n[f];let o={},i=new Int32Array(n[s]),c=new Ut(a,r,e),l=[],u=a[0]===1&&a[2]===1;for(let f=0;f<n[s];f++){let m;if(u)m=e[f].toString();else{let g=[];for(let b=0;b<a[0];b++)for(let y=0;y<a[2];y++)g.push(c.get(b,f,y));m=g.join(",")}if(o[m]!==void 0)i[f]=o[m];else{let g=Object.keys(o).length;o[m]=g,i[f]=g,l.push(f)}}let d=a.slice();d[1]=Object.keys(o).length;let p=new Ut(d,r);l.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let b=0;b<a[2];b++)p.set(c.get(g,f,b),g,m,b)});let h=n.slice();return h[s]=d[1],{outputValues:p.values,outputShape:h,indices:i}}Vh("cpu",()=>new Tw,1);var s2=ot(Ja,e=>e>=0?e:Math.exp(e)-1),T5={kernelName:Ja,backendName:"cpu",kernelFunc:s2};function a2(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;ke([s],"leakyRelu");let o=k.sizeFromShape(s.shape),i=n.data.get(s.dataId).values,c=k.getTypedArrayFromDType("float32",o);for(let l=0;l<i.length;l++)c[l]=i[l]<0?a*i[l]:i[l];return n.makeTensorInfo(s.shape,"float32",c)}var C5={kernelName:ao,backendName:"cpu",kernelFunc:a2},N5=Wt((e,t)=>e<0?t*e:e);function o2(e){let{inputs:t,backend:n}=e,{x:r,alpha:s}=t;ke([r,s],"prelu");let a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,[i,c]=N5(r.shape,s.shape,a,o,"float32");return n.makeTensorInfo(c,"float32",i)}var _5={kernelName:vo,backendName:"cpu",kernelFunc:o2},i2=ot(xo,e=>Math.max(0,e)),E5={kernelName:xo,backendName:"cpu",kernelFunc:i2},c2=ot(ko,e=>Math.min(Math.max(0,e),6)),A5={kernelName:ko,backendName:"cpu",kernelFunc:c2};function Rw(e,t,n,r,s){if(n==="linear")return ls({inputs:{x:t},backend:e});if(n==="relu")return i2({inputs:{x:t},backend:e});if(n==="elu")return s2({inputs:{x:t},backend:e});if(n==="relu6")return c2({inputs:{x:t},backend:e});if(n==="prelu")return o2({inputs:{x:t,alpha:r},backend:e});if(n==="leakyrelu")return a2({inputs:{x:t},backend:e,attrs:{alpha:s}});if(n==="sigmoid")return HC({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Nt(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,o=k.sizeFromShape(s.shape),i=k.inferFromImplicitShape(a,o),c=k.sizeFromShape(i);k.assert(o===c,()=>`The new shape (${i}) has ${c} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(s.dataId);let l=n.data.get(s.dataId);if(l.complexTensorInfos!=null){let u=l.complexTensorInfos.real,d=l.complexTensorInfos.imag;u.shape=i,d.shape=i}return{dataId:s.dataId,shape:i,dtype:s.dtype}}var D5={kernelName:Pc,backendName:"cpu",kernelFunc:Nt};function u2(e){let{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;ke([s,a],"matMul");let c=s.shape.length,l=a.shape.length,u=o?s.shape[c-2]:s.shape[c-1],d=i?a.shape[l-1]:a.shape[l-2],p=o?s.shape[c-1]:s.shape[c-2],h=i?a.shape[l-2]:a.shape[l-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=k.sizeFromShape(f),b=k.sizeFromShape(m),v=su.assertAndGetBroadcastShape(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,h]);k.assert(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let x=o?[g,u,p]:[g,p,u],w=i?[b,h,d]:[b,d,h],T=Nt({inputs:{x:s},backend:n,attrs:{shape:x}}),C=Nt({inputs:{x:a},backend:n,attrs:{shape:w}}),D=o?T.shape[1]:T.shape[2],F=o?T.shape[2]:T.shape[1],O=i?C.shape[1]:C.shape[2],$=Math.max(g,b),R=n.data.get(T.dataId).values,N=n.data.get(C.dataId).values,L=k.computeStrides(T.shape),G=k.computeStrides(C.shape),[j,K,q]=o?[L[0],1,L[1]]:[L[0],L[1],1],[Z,te,se]=i?[1,G[1],G[0]]:[G[1],1,G[0]],oe=F*O,re=Be([$,F,O],T.dtype),ue=re.values,ne=n.blockSize;for(let he=0;he<$;he++)for(let ye=0;ye<F;ye+=ne)for(let Ce=0;Ce<O;Ce+=ne)for(let Se=0;Se<D;Se+=ne){let _e=Math.min(ye+ne,F),Me=Math.min(Ce+ne,O),Ye=Math.min(Se+ne,D);for(let We=ye;We<_e;We++)for(let Ve=Ce;Ve<Me;Ve++){let it=0;for(let Ze=Se;Ze<Ye;Ze++){let lt=Math.min(he,g-1)*j,wt=Math.min(he,b-1)*se,An=R[lt+We*K+Ze*q],Je=N[Ze*Z+Ve*te+wt];it+=An*Je}ue[he*oe+(We*O+Ve)]+=it}}return n.disposeIntermediateTensorInfo(T),n.disposeIntermediateTensorInfo(C),n.makeTensorInfo(v,re.dtype,re.values)}var F5={kernelName:Va,backendName:"cpu",kernelFunc:u2};function $5(e){let{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:d}=r,p,h,f,m=[];p=u2({inputs:{a:s,b:a},attrs:{transposeA:c,transposeB:l},backend:n}),o&&(h=Od({inputs:{a:p,b:o},backend:n}),m.push(p),p=h),u&&(f=Rw(n,p,u,i,d),m.push(p),p=f);for(let b of m)n.disposeIntermediateTensorInfo(b);return p}var R5={kernelName:Oo,backendName:"cpu",kernelFunc:$5},P5=ot(Zi,e=>Math.acos(e)),O5={kernelName:Zi,backendName:"cpu",kernelFunc:P5},M5=ot(Ji,e=>Math.acosh(e)),L5={kernelName:Ji,backendName:"cpu",kernelFunc:M5};function B5(e){let{inputs:t,backend:n}=e,r=t;ke(t,"addN");let s=r.map(i=>n.data.get(i.dataId).values),a=Be(r[0].shape,r[0].dtype),o=a.values;for(let i=0;i<r.length;i++){let c=s[i];for(let l=0;l<o.length;l++)o[l]+=c[l]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}var z5={kernelName:Ba,backendName:"cpu",kernelFunc:B5};function W5(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;ke(s,"all");let i=k.parseAxisParam(a,s.shape),c=i,l=_.getAxesPermutation(c,s.shape.length),u=s;l!=null&&(u=fr({inputs:{x:s},backend:n,attrs:{perm:l}}),c=_.getInnerMostAxes(c.length,s.shape.length)),_.assertAxesAreInnerMostDims("all",c,u.shape.length);let[d,p]=_.computeOutAndReduceShapes(u.shape,c),h=k.sizeFromShape(p),f=k.makeZerosTypedArray(k.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let b=0;b<f.length;++b){let y=b*h,v=m[y];for(let x=0;x<h;++x){let w=m[y+x];v=v&&w}f[b]=v}l!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let b=_.expandShapeToKeepDim(d,i),y=Nt({inputs:{x:g},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(g),y}return g}var V5={kernelName:Qi,backendName:"cpu",kernelFunc:W5};function U5(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;ke(s,"any");let i=k.parseAxisParam(a,s.shape),c=i,l=_.getAxesPermutation(c,s.shape.length),u=s;l!=null&&(u=fr({inputs:{x:s},backend:n,attrs:{perm:l}}),c=_.getInnerMostAxes(c.length,s.shape.length)),_.assertAxesAreInnerMostDims("any",c,u.shape.length);let[d,p]=_.computeOutAndReduceShapes(u.shape,c),h=k.sizeFromShape(p),f=k.makeZerosTypedArray(k.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let b=0;b<f.length;++b){let y=b*h,v=m[y];for(let x=0;x<h;++x){let w=m[y+x];v=v||w}f[b]=v}l!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let b=_.expandShapeToKeepDim(d,i),y=Nt({inputs:{x:g},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(g),y}return g}var G5={kernelName:ec,backendName:"cpu",kernelFunc:U5};function H5(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;ke(s,"argMax");let o=k.parseAxisParam(a,s.shape),i=_.getAxesPermutation(o,s.shape.length),c=s,l=[];i!=null&&(c=fr({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(c),o=_.getInnerMostAxes(o.length,c.shape.length)),o=[o[0]],_.assertAxesAreInnerMostDims("argMax",o,c.shape.length);let[u,d]=_.computeOutAndReduceShapes(c.shape,o),p=k.sizeFromShape(u),h=k.makeZerosTypedArray(p,"int32"),f=k.sizeFromShape(d),m=n.data.get(c.dataId).values;for(let g=0;g<h.length;++g){let b=g*f,y=m[b],v=0;for(let x=0;x<f;++x){let w=m[b+x];w>y&&(y=w,v=x)}h[g]=v}return l.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",h)}var j5={kernelName:za,backendName:"cpu",kernelFunc:H5};function q5(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;ke(s,"argMin");let o=k.parseAxisParam(a,s.shape),i=_.getAxesPermutation(o,s.shape.length),c=s,l=[];i!=null&&(c=fr({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(c),o=_.getInnerMostAxes(o.length,c.shape.length)),o=[o[0]],_.assertAxesAreInnerMostDims("argMin",o,c.shape.length);let[u,d]=_.computeOutAndReduceShapes(c.shape,o),p=k.sizeFromShape(u),h=k.makeZerosTypedArray(p,"int32"),f=k.sizeFromShape(d),m=n.data.get(c.dataId).values;for(let g=0;g<h.length;++g){let b=g*f,y=m[b],v=0;for(let x=0;x<f;++x){let w=m[b+x];w<y&&(y=w,v=x)}h[g]=v}return l.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",h)}var K5={kernelName:Sl,backendName:"cpu",kernelFunc:q5},X5=ot(tc,e=>Math.asin(e)),Y5={kernelName:tc,backendName:"cpu",kernelFunc:X5},Z5=ot(nc,e=>Math.asinh(e)),J5={kernelName:nc,backendName:"cpu",kernelFunc:Z5},Q5=ot(rc,e=>Math.atan(e)),ej={kernelName:rc,backendName:"cpu",kernelFunc:Q5},tj=Wt((e,t)=>Math.atan2(e,t)),nj=tn(ac,tj),rj={kernelName:ac,backendName:"cpu",kernelFunc:nj},sj=ot(sc,e=>Math.atanh(e)),aj={kernelName:sc,backendName:"cpu",kernelFunc:sj};function Pw(e,t,n,r,s,a){let o=s.strideHeight,i=s.strideWidth,c=s.dilationHeight,l=s.dilationWidth,u=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,h=s.padInfo.left,f=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Be(s.outShape,n),g=m.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],y=s.outShape[2]*s.outShape[3],v=s.outShape[3];for(let x=0;x<s.batchSize;++x){let w=x*b,T=x*r[0];for(let C=0;C<s.inChannels;++C)for(let D=0;D<s.outHeight;++D){let F=D*o-p,O=Math.max(0,F),$=Math.min(s.inHeight,u+F),R=w+D*y;for(let N=0;N<s.outWidth;++N){let L=N*i-h,G=Math.max(0,L),j=Math.min(s.inWidth,d+L),K=f,q=0,Z=0;for(let se=O;se<$;se+=c){let oe=T+se*r[1];for(let re=G;re<j;re+=l){let ue=oe+re*r[2],ne=e[ue+C];a==="max"&&ne>K?K=ne:a==="avg"&&(q+=ne,Z++)}if(isNaN(K))break}let te=R+N*v+C;g[te]=a==="avg"?q/Z:K}}}return m}function l2(e,t,n,r,s=!1,a=!1){let o=Be(r.outShape,"int32"),i=r.strideHeight,c=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,h=r.padInfo.top,f=r.padInfo.left,m=Be(t,n,e);for(let g=0;g<r.batchSize;++g)for(let b=0;b<r.inChannels;++b)for(let y=0;y<r.outHeight;++y){let v=y*i-h,x=v;for(;x<0;)x+=l;let w=Math.min(r.inHeight,d+v);for(let T=0;T<r.outWidth;++T){let C=T*c-f,D=C;for(;D<0;)D+=u;let F=Math.min(r.inWidth,p+C),O=Number.NEGATIVE_INFINITY,$=-1;for(let R=x;R<w;R+=l){let N=R-v;for(let L=D;L<F;L+=u){let G=L-C,j=m.get(g,R,L,b);j>O&&(O=j,s?$=a?((g*r.inHeight+R)*r.inWidth+L)*r.inChannels+b:(R*r.inWidth+L)*r.inChannels+b:$=N*p+G)}}o.set($,g,y,T,b)}}return o}function d2(e,t,n,r,s,a){let o=s.strideDepth,i=s.strideHeight,c=s.strideWidth,l=s.dilationDepth,u=s.dilationHeight,d=s.dilationWidth,p=s.effectiveFilterDepth,h=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,b=s.padInfo.left,y=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=Be(s.outShape,n),x=v.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],T=s.outShape[2]*s.outShape[3]*s.outShape[4],C=s.outShape[3]*s.outShape[4],D=s.outShape[4];for(let F=0;F<s.batchSize;++F){let O=F*w,$=F*r[0];for(let R=0;R<s.inChannels;++R)for(let N=0;N<s.outDepth;++N){let L=N*o-m,G=L;for(;G<0;)G+=l;let j=Math.min(s.inDepth,p+L),K=O+N*T;for(let q=0;q<s.outHeight;++q){let Z=q*i-g,te=Z;for(;te<0;)te+=u;let se=Math.min(s.inHeight,h+Z),oe=K+q*C;for(let re=0;re<s.outWidth;++re){let ue=re*c-b,ne=ue;for(;ne<0;)ne+=d;let he=Math.min(s.inWidth,f+ue),ye=oe+re*D,Ce=y,Se=0,_e=0;for(let Ye=G;Ye<j;Ye+=l){let We=$+Ye*r[1];for(let Ve=te;Ve<se;Ve+=u){let it=We+Ve*r[2];for(let Ze=ne;Ze<he;Ze+=d){let lt=it+Ze*r[3],wt=e[lt+R];if(a==="max"&&wt>Ce?Ce=wt:a==="avg"&&(Se+=wt,_e++),isNaN(Ce))break}if(isNaN(Ce))break}if(isNaN(Ce))break}let Me=ye+R;x[Me]=a==="avg"?Se/_e:Ce}}}}return v}function oj(e,t){let n=Be(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,u=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){let y=b*r-p,v=y;for(;v<0;)v+=o;let x=Math.min(t.inDepth,l+y);for(let w=0;w<t.outHeight;++w){let T=w*s-h,C=T;for(;C<0;)C+=i;let D=Math.min(t.inHeight,u+T);for(let F=0;F<t.outWidth;++F){let O=F*a-f,$=O;for(;$<0;)$+=c;let R=Math.min(t.inWidth,d+O),N=Number.NEGATIVE_INFINITY,L=-1;for(let G=v;G<x;G+=o){let j=G-y;for(let K=C;K<D;K+=i){let q=K-T;for(let Z=$;Z<R;Z+=c){let te=Z-O,se=e.get(m,G,K,Z,g);se>=N&&(N=se,L=j*u*d+q*u+te)}}}n.set(L,m,b,w,F,g)}}}return n}function ij(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t;ke(s,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:c}=r,l=1;k.assert(_.eitherStridesOrDilationsAreOne(o,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);let u=_.computePool2DInfo(s.shape,a,o,l,i,c),d;if(u.filterWidth===1&&u.filterHeight===1&&k.arraysEqual(u.inShape,u.outShape))d=ls({inputs:{x:s},backend:n});else{let p=n.data.get(s.dataId).values,h=k.computeStrides(s.shape),f=Pw(p,s.shape,s.dtype,h,u,"avg");d=n.makeTensorInfo(u.outShape,s.dtype,f.values)}return d}var cj={kernelName:Wa,backendName:"cpu",kernelFunc:ij};function uj(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=r;ke(s,"avgPool3d");let u=_.computePool3DInfo(s.shape,a,o,1,i,c,l),d=n.data.get(s.dataId).values,p=d2(d,s.shape,s.dtype,k.computeStrides(s.shape),u,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}var lj={kernelName:Tl,backendName:"cpu",kernelFunc:uj};function dj(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=r;ke([s,a],"avgPool3DGrad");let u=_.computePool3DInfo(a.shape,o,i,1,c,l),d=u.strideDepth,p=u.strideHeight,h=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,b=u.dilationDepth,y=u.dilationHeight,v=u.dilationWidth,x=u.effectiveFilterDepth,w=u.effectiveFilterHeight,T=u.effectiveFilterWidth,C=x-1-u.padInfo.front,D=T-1-u.padInfo.left,F=w-1-u.padInfo.top,O=Be(a.shape,"float32"),$=1/(f*m*g),R=n.bufferSync(s);for(let N=0;N<u.batchSize;++N)for(let L=0;L<u.inChannels;++L)for(let G=0;G<u.inDepth;++G)for(let j=0;j<u.inHeight;++j)for(let K=0;K<u.inWidth;++K){let q=G-C,Z=j-F,te=K-D,se=0;for(let oe=0;oe<x;oe+=b){let re=(q+oe)/d;if(!(re<0||re>=u.outDepth||Math.floor(re)!==re))for(let ue=0;ue<w;ue+=y){let ne=(Z+ue)/p;if(!(ne<0||ne>=u.outHeight||Math.floor(ne)!==ne))for(let he=0;he<T;he+=v){let ye=(te+he)/h;if(ye<0||ye>=u.outWidth||Math.floor(ye)!==ye)continue;se+=R.get(N,re,ne,ye,L)}}}O.set(se*$,N,G,j,K,L)}return n.makeTensorInfo(O.shape,O.dtype,O.values)}var pj={kernelName:Jp,backendName:"cpu",kernelFunc:dj};function hj(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a;ke([s,a],"avgPoolGrad");let{filterSize:i,strides:c,pad:l}=r,u=_.computePool2DInfo(o.shape,i,c,1,l),d=u.strideHeight,p=u.strideWidth,h=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,b=u.effectiveFilterHeight,y=u.effectiveFilterWidth,v=y-1-u.padInfo.left,x=b-1-u.padInfo.top,w=Be(o.shape,"float32"),T=1/(h*f),C=n.data.get(s.dataId).values,D=Be(s.shape,"float32",C);for(let F=0;F<u.batchSize;++F)for(let O=0;O<u.inChannels;++O)for(let $=0;$<u.inHeight;++$)for(let R=0;R<u.inWidth;++R){let N=$-x,L=R-v,G=0;for(let j=0;j<b;j+=m){let K=(N+j)/d;if(!(K<0||K>=u.outHeight||Math.floor(K)!==K))for(let q=0;q<y;q+=g){let Z=(L+q)/p;if(Z<0||Z>=u.outWidth||Math.floor(Z)!==Z)continue;G+=D.get(F,K,Z,O)}}w.set(G*T,F,$,R,O)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var fj={kernelName:Zp,backendName:"cpu",kernelFunc:hj};function mj(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:o,mean:i,variance:c}=t;k.assert(i.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k.assert(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ke([s,i,c,a,o],"batchNorm");let{varianceEpsilon:l}=r;l==null&&(l=.001);let u=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values,p=n.data.get(c.dataId).values,h=a?n.data.get(a.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,b=h.length,y=p.length,v=d.length,x=0,w=0,T=0,C=0;for(let D=0;D<u.length;++D)m[D]=f[x++]+(u[D]-d[w++])*h[T++]/Math.sqrt(p[C++]+l),x>=g&&(x=0),w>=v&&(w=0),T>=b&&(T=0),C>=y&&(C=0);return n.makeTensorInfo(s.shape,s.dtype,m)}var gj={kernelName:no,backendName:"cpu",kernelFunc:mj};function bj(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r;ke([s],"batchToSpaceND");let i=a.reduce((b,y)=>b*y),c=_.getReshaped(s.shape,a,i),l=_.getPermuted(c.length,a.length),u=_.getReshapedPermuted(s.shape,a,i),d=_.getSliceBeginCoords(o,a.length),p=_.getSliceSize(u,o,a.length),h=Nt({inputs:{x:s},backend:n,attrs:{shape:c}}),f=fr({inputs:{x:h},backend:n,attrs:{perm:l}}),m=Nt({inputs:{x:f},backend:n,attrs:{shape:u}}),g=pi({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var yj={kernelName:oc,backendName:"cpu",kernelFunc:bj};function vj(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o}=r,i=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,l=Nw(i,c,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,l)}var xj={kernelName:Qp,backendName:"cpu",kernelFunc:vj};function wj(e){let{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,i=_.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var kj={kernelName:eh,backendName:"cpu",kernelFunc:wj},Ij=ot(Js,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),Sj={kernelName:Js,backendName:"cpu",kernelFunc:Ij},Tj=e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(k.sizeFromShape(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,o=s.complexTensorInfos.imag,i=n.data.get(a.dataId).values,c=n.data.get(o.dataId).values;for(let l=0;l<i.length;l++){let u=i[l],d=c[l];r[l]=Math.hypot(u,d)}return n.makeOutput(r,t.shape,"float32")},Cj={kernelName:Cl,backendName:"cpu",kernelFunc:Tj};function Cu(e){let{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}var Nj={kernelName:mh,backendName:"cpu",kernelFunc:Cu};function Nu(e){let{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=k.parseAxisParam(s,t[0].shape)[0],o=_.computeOutShape(t.map(m=>m.shape),a);if(k.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(m=>k.sizeFromShape(m.shape)>0);if(i.length===1)return ls({inputs:{x:i[0]},backend:n});let c=i.map(m=>m.shape);if(_.assertParamsConsistent(c,a),i[0].dtype==="complex64"){let m=i.map(x=>di({inputs:{input:x},backend:n})),g=i.map(x=>Cu({inputs:{input:x},backend:n})),b=Nu({inputs:m,backend:n,attrs:{axis:a}}),y=Nu({inputs:g,backend:n,attrs:{axis:a}}),v=rr({inputs:{real:b,imag:y},backend:n});return m.forEach(x=>n.disposeIntermediateTensorInfo(x)),g.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(y),v}let l=i.map(m=>{let g=k.sizeFromShape(m.shape.slice(a));return Nt({inputs:{x:m},backend:n,attrs:{shape:[-1,g]}})}),u=l.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));o=_.computeOutShape(l.map(m=>m.shape),1);let d=l[0].shape[0]===1,p=_w(u,o,t[0].dtype,d),h=_.computeOutShape(i.map(m=>m.shape),a),f=n.makeTensorInfo(h,t[0].dtype,p);return l.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var _j={kernelName:ic,backendName:"cpu",kernelFunc:Nu};function p2(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=r;ke([s,a],"conv2d");let d=_.convertConv2DDataFormat(c),p=_.computeConv2DInfo(s.shape,a.shape,o,l,i,u,!1,d),h=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,b=p.padInfo.left,y=p.padInfo.top,v=p.dataFormat==="channelsLast",x=new Ut(p.outShape,s.dtype),w=k.computeStrides(s.shape),T=k.computeStrides(a.shape),C=w[0],D=v?w[1]:w[2],F=v?w[2]:1,O=v?1:w[1],$=x.strides[0],R=v?x.strides[1]:x.strides[2],N=v?x.strides[2]:1,L=v?1:x.strides[1],G=n.data.get(s.dataId).values,j=n.data.get(a.dataId).values,K=x.values;for(let q=0;q<p.batchSize;++q){let Z=q*C,te=q*$;for(let se=0;se<p.outHeight;++se){let oe=te+se*R,re=se*p.strideHeight-y;for(let ue=0;ue<h;++ue){let ne=re+ue*m;if(ne<0||ne>=p.inHeight)continue;let he=ue*T[0],ye=Z+ne*D;for(let Ce=0;Ce<p.outWidth;++Ce){let Se=oe+Ce*N,_e=Ce*p.strideWidth-b;for(let Me=0;Me<f;++Me){let Ye=_e+Me*g;if(Ye<0||Ye>=p.inWidth)continue;let We=he+Me*T[1],Ve=ye+Ye*F,it=We;for(let Ze=0;Ze<p.inChannels;++Ze){let lt=G[Ve+Ze*O];for(let wt=0;wt<p.outChannels;++wt)K[Se+wt*L]+=lt*j[it+wt];it+=p.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,K)}var Ej={kernelName:Ha,backendName:"cpu",kernelFunc:p2};function Aj(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=r;ke([s,a],"conv2dBackpropFilter");let d=_.convertConv2DDataFormat(c),p=_.computeConv2DInfo(s.shape,u,o,1,i,l,!1,d),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=p,b=p.dataFormat==="channelsLast",y=new Ut(p.filterShape,"float32"),v=p.padInfo.left,x=p.padInfo.top,w=n.data.get(s.dataId).values,T=n.data.get(a.dataId).values,C=new Ut(s.shape,s.dtype,w),D=new Ut(a.shape,a.dtype,T);for(let F=0;F<m;++F){let O=Math.max(0,Math.ceil((x-F)/h)),$=Math.min(p.outHeight,(p.inHeight+x-F)/h);for(let R=0;R<g;++R){let N=Math.max(0,Math.ceil((v-R)/f)),L=Math.min(p.outWidth,(p.inWidth+v-R)/f);for(let G=0;G<p.inChannels;++G)for(let j=0;j<p.outChannels;++j){let K=0;for(let q=0;q<p.batchSize;++q)for(let Z=O;Z<$;++Z){let te=F+Z*h-x;for(let se=N;se<L;++se){let oe=R+se*f-v;b?K+=C.get(q,te,oe,G)*D.get(q,Z,se,j):K+=C.get(q,G,te,oe)*D.get(q,j,Z,se)}}y.set(K,F,R,G,j)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var Dj={kernelName:nh,backendName:"cpu",kernelFunc:Aj};function Fj(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=r;ke([s,a],"conv2dBackpropInput");let d=k.computeStrides(a.shape),p=k.computeStrides(s.shape),h=_.convertConv2DDataFormat(l),f=_.computeConv2DInfo(o,a.shape,i,1,c,u,!1,h),m=new Ut(f.inShape,"float32"),g=m.values,b=n.data.get(s.dataId).values,y=n.data.get(a.dataId).values,[v,x,w]=d,{batchSize:T,filterHeight:C,filterWidth:D,inChannels:F,inHeight:O,inWidth:$,outChannels:R,outHeight:N,outWidth:L,strideHeight:G,strideWidth:j}=f;h=f.dataFormat;let K=C-1-f.padInfo.top,q=D-1-f.padInfo.left,Z=h==="channelsLast",te=m.strides[0],se=Z?m.strides[1]:m.strides[2],oe=Z?m.strides[2]:1,re=Z?1:m.strides[1],ue=p[0],ne=Z?p[1]:p[2],he=Z?p[2]:1,ye=Z?1:p[1];for(let Ce=0;Ce<T;++Ce)for(let Se=0;Se<F;++Se)for(let _e=0;_e<O;++_e){let Me=_e-K,Ye=Math.max(0,Math.ceil(Me/G)),We=Math.min(N,(C+Me)/G);for(let Ve=0;Ve<$;++Ve){let it=Ve-q,Ze=Math.max(0,Math.ceil(it/j)),lt=Math.min(L,(D+it)/j),wt=0;for(let Je=Ye;Je<We;++Je){let Hn=Je*G-Me;for(let rn=Ze;rn<lt;++rn){let vr=rn*j-it,Dn=ue*Ce+ne*Je+he*rn,jn=v*(C-1-Hn)+x*(D-1-vr)+w*Se;for(let or=0;or<R;++or){let xr=b[Dn+ye*or],ir=y[jn+or];wt+=xr*ir}}}let An=te*Ce+se*_e+oe*Ve+re*Se;g[An]=wt}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var $j={kernelName:ja,backendName:"cpu",kernelFunc:Fj};function Rj(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:c}=r;ke([s,a],"conv3d");let l=_.computeConv3DInfo(s.shape,a.shape,o,c,i),{filterDepth:u,filterHeight:d,filterWidth:p,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=l,b=g.front,y=g.left,v=g.top,x=new Ut(l.outShape,s.dtype),w=n.data.get(s.dataId).values,T=n.data.get(a.dataId).values,C=x.values,D=k.computeStrides(s.shape),F=k.computeStrides(a.shape);for(let O=0;O<l.batchSize;++O){let $=O*D[0],R=O*x.strides[0];for(let N=0;N<l.outDepth;++N){let L=R+N*x.strides[1],G=N*l.strideDepth-b;for(let j=0;j<u;++j){let K=G+j*h;if(K<0||K>=l.inDepth)continue;let q=j*F[0],Z=$+K*D[1];for(let te=0;te<l.outHeight;++te){let se=L+te*x.strides[2],oe=te*l.strideHeight-v;for(let re=0;re<d;++re){let ue=oe+re*f;if(ue<0||ue>=l.inHeight)continue;let ne=q+re*F[1],he=Z+ue*D[2];for(let ye=0;ye<l.outWidth;++ye){let Ce=se+ye*l.outChannels,Se=ye*l.strideWidth-y;for(let _e=0;_e<p;++_e){let Me=Se+_e*m;if(Me<0||Me>=l.inWidth)continue;let Ye=ne+_e*F[2],We=he+Me*l.inChannels,Ve=Ye;for(let it=0;it<l.inChannels;++it){let Ze=w[We+it];for(let lt=0;lt<l.outChannels;++lt)C[Ce+lt]+=Ze*T[Ve+lt];Ve+=l.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var Pj={kernelName:Nl,backendName:"cpu",kernelFunc:Rj};function Oj(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,filterShape:c}=r;ke([s,a],"conv3dBackpropFilterV2");let l=k.computeStrides(s.shape),u=k.computeStrides(a.shape),d=_.computeConv3DInfo(s.shape,c,o,1,i),p=d.strideDepth,h=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,b=d.filterWidth,y=new Ut(d.filterShape,"float32"),v=y.values,[x,w,T,C]=y.strides,D=n.data.get(a.dataId).values,[F,O,$,R]=u,N=n.data.get(s.dataId).values,[L,G,j,K]=l,q=d.padInfo.front,Z=d.padInfo.left,te=d.padInfo.top;for(let se=0;se<m;++se){let oe=Math.max(0,Math.ceil((q-se)/p)),re=Math.min(d.outDepth,(d.inDepth+q-se)/p),ue=se*x;for(let ne=0;ne<g;++ne){let he=Math.max(0,Math.ceil((te-ne)/h)),ye=Math.min(d.outHeight,(d.inHeight+te-ne)/h),Ce=ne*w+ue;for(let Se=0;Se<b;++Se){let _e=Math.max(0,Math.ceil((Z-Se)/f)),Me=Math.min(d.outWidth,(d.inWidth+Z-Se)/f),Ye=Se*T+Ce;for(let We=0;We<d.inChannels;++We){let Ve=We*C+Ye;for(let it=0;it<d.outChannels;++it){let Ze=0;for(let lt=0;lt<d.batchSize;++lt){let wt=lt*L,An=lt*F;for(let Je=oe;Je<re;++Je){let rn=(se+Je*p-q)*G+wt,vr=Je*O+An;for(let Dn=he;Dn<ye;++Dn){let or=(ne+Dn*h-te)*j+rn,xr=Dn*$+vr;for(let ir=_e;ir<Me;++ir){let zs=(Se+ir*f-Z)*K+or,dn=ir*R+xr;Ze+=N[zs+We]*D[dn+it]}}}}v[Ve+it]=Ze}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var Mj={kernelName:rh,backendName:"cpu",kernelFunc:Oj};function Lj(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:o,strides:i,inputShape:c}=r;ke([s],"conv3dBackpropInputV2");let l=k.computeStrides(s.shape),u=k.computeStrides(a.shape),d=_.computeConv3DInfo(c,a.shape,i,1,o),p=new Ut(d.inShape,"float32"),h=p.values,[f,m,g,b]=p.strides,y=n.data.get(s.dataId).values,[v,x,w,T]=l,C=n.data.get(a.dataId).values,[D,F,O,$]=u,{batchSize:R,filterDepth:N,filterHeight:L,filterWidth:G,inChannels:j,inDepth:K,inHeight:q,inWidth:Z,outChannels:te,outDepth:se,outHeight:oe,outWidth:re,strideDepth:ue,strideHeight:ne,strideWidth:he}=d,ye=N-1-d.padInfo.front,Ce=L-1-d.padInfo.top,Se=G-1-d.padInfo.left;for(let _e=0;_e<R;++_e)for(let Me=0;Me<j;++Me)for(let Ye=0;Ye<K;++Ye){let We=Ye-ye,Ve=Math.max(0,Math.ceil(We/ue)),it=Math.min(se,(N+We)/ue);for(let Ze=0;Ze<q;++Ze){let lt=Ze-Ce,wt=Math.max(0,Math.ceil(lt/ne)),An=Math.min(oe,(L+lt)/ne);for(let Je=0;Je<Z;++Je){let Hn=Je-Se,rn=Math.max(0,Math.ceil(Hn/he)),vr=Math.min(re,(G+Hn)/he),Dn=0;for(let jn=Ve;jn<it;++jn){let or=jn*ue-We;for(let xr=wt;xr<An;++xr){let ir=xr*ne-lt;for(let Fn=rn;Fn<vr;++Fn){let zs=Fn*he-Hn,dn=v*_e+x*jn+w*xr+T*Fn,Ws=D*(N-1-or)+F*(L-1-ir)+O*(G-1-zs)+$*Me;for(let cr=0;cr<te;++cr){let il=y[dn+cr],cl=C[Ws+cr];Dn+=il*cl}}}}h[f*_e+m*Ye+g*Ze+b*Je+Me]=Dn}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}var Bj={kernelName:sh,backendName:"cpu",kernelFunc:Lj},zj=ot(qa,e=>Math.cos(e)),Wj={kernelName:qa,backendName:"cpu",kernelFunc:zj},Vj=ot(Ka,e=>Math.cosh(e)),Uj={kernelName:Ka,backendName:"cpu",kernelFunc:Vj};function Gj(e){let{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:o}=t,{cropSize:i,method:c,extrapolationValue:l}=r,[u,d,p,h]=s.shape,f=a.shape[0],[m,g]=i,b=Be([f,m,g,h],"float32"),y=n.data.get(a.dataId).values,v=n.data.get(o.dataId).values,x=n.data.get(s.dataId).values,w=k.computeStrides(s.shape),T=k.computeStrides(b.shape);for(let C=0;C<f;C++){let D=C*4,F=y[D],O=y[D+1],$=y[D+2],R=y[D+3],N=v[C];if(N>=u)continue;let L=m>1?($-F)*(d-1)/(m-1):0,G=g>1?(R-O)*(p-1)/(g-1):0;for(let j=0;j<m;j++){let K=m>1?F*(d-1)+j*L:.5*(F+$)*(d-1);if(K<0||K>d-1){for(let q=0;q<g;q++)for(let Z=0;Z<h;Z++){let te=Z+q*T[2]+j*T[1]+C*T[0];b.values[te]=l}continue}if(c==="bilinear"){let q=Math.floor(K),Z=Math.ceil(K),te=K-q;for(let se=0;se<g;se++){let oe=g>1?O*(p-1)+se*G:.5*(O+R)*(p-1);if(oe<0||oe>p-1){for(let he=0;he<h;he++){let ye=he+se*T[2]+j*T[1]+C*T[0];b.values[ye]=l}continue}let re=Math.floor(oe),ue=Math.ceil(oe),ne=oe-re;for(let he=0;he<h;he++){let ye=he+re*w[2]+q*w[1]+N*w[0],Ce=x[ye];ye=he+ue*w[2]+q*w[1]+N*w[0];let Se=x[ye];ye=he+re*w[2]+Z*w[1]+N*w[0];let _e=x[ye];ye=he+ue*w[2]+Z*w[1]+N*w[0];let Me=x[ye],Ye=Ce+(Se-Ce)*ne,We=_e+(Me-_e)*ne;ye=he+se*T[2]+j*T[1]+C*T[0],b.values[ye]=Ye+(We-Ye)*te}}}else for(let q=0;q<g;++q){let Z=g>1?O*(p-1)+q*G:.5*(O+R)*(p-1);if(Z<0||Z>p-1){for(let oe=0;oe<h;oe++){let re=oe+q*T[2]+j*T[1]+C*T[0];b.values[re]=l}continue}let te=Math.round(Z),se=Math.round(K);for(let oe=0;oe<h;oe++){let re=oe+te*w[2]+se*w[1]+N*w[0],ue=oe+q*T[2]+j*T[1]+C*T[0];b.values[ue]=x[re]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var Hj={kernelName:cc,backendName:"cpu",kernelFunc:Gj};function jj(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;ke(s,"cumsum");let c=_.getAxesPermutation([a],s.shape.length),l=s;c!=null&&(l=fr({inputs:{x:s},backend:n,attrs:{perm:c}}));let u=_.getInnerMostAxes(1,s.shape.length)[0];if(u!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${u}`);let d=Sr(l.dtype,"int32"),p=k.makeZerosTypedArray(k.sizeFromShape(l.shape),d),h=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(b,y)=>b+f-y-1:(b,y)=>b+y;for(let b=0;b<h.length;b+=f)for(let y=0;y<f;y++){let v=m(b,y);if(y===0)p[v]=o?0:h[v];else{let x=m(b,y-1);p[v]=o?h[x]+p[x]:h[v]+p[x]}}let g=n.makeTensorInfo(l.shape,d,p);if(c!=null){let b=_.getUndoAxesPermutation(c),y=fr({inputs:{x:g},backend:n,attrs:{perm:b}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),y}return g}var qj={kernelName:Xa,backendName:"cpu",kernelFunc:jj};function Kj(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o,binaryOutput:i}=r;if(s.shape.length===1){let c=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,u=Nw(c,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}else if(s.shape.length===2){let c=n.bufferSync(s),l=n.bufferSync(a),u=kC(c,l,o,i);return n.makeTensorInfo(u.shape,a.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}var Xj={kernelName:ah,backendName:"cpu",kernelFunc:Kj};function Yj(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:o}=r;k.assert(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);let i=s.shape[0],c=s.shape[1],l=s.shape[2],u=s.shape[3],d=c*a,p=l*a,h=u/(a*a),f=n.data.get(s.dataId).values,m=new Float32Array(i*d*p*h),g=0;for(let b=0;b<i;++b)for(let y=0;y<d;++y){let v=Math.floor(y/a),x=y%a;for(let w=0;w<p;++w){let T=Math.floor(w/a),C=w%a,D=(x*a+C)*h;for(let F=0;F<h;++F){let $=F+D+u*(T+l*(v+c*b));m[g++]=f[$]}}}return n.makeTensorInfo([i,d,p,h],s.dtype,m)}var Zj={kernelName:uc,backendName:"cpu",kernelFunc:Yj};function h2(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:c,dimRoundingMode:l}=r;ke([s,a],"depthwiseConv2DNative");let u=k.computeStrides(s.shape),d=k.computeStrides(a.shape),p=c;p==null&&(p=[1,1]),k.assert(_.eitherStridesOrDilationsAreOne(o,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`);let h=_.computeConv2DInfo(s.shape,a.shape,o,p,i,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:b,padInfo:y}=h,v=y.left,x=y.top,w=h.outChannels/h.inChannels,T=new Ut(h.outShape,s.dtype),C=n.data.get(s.dataId).values,D=n.data.get(a.dataId).values,F=T.values;for(let O=0;O<h.batchSize;++O){let $=O*u[0],R=O*T.strides[0];for(let N=0;N<h.outHeight;++N){let L=R+N*T.strides[1],G=N*h.strideHeight-x;for(let j=0;j<f;++j){let K=G+j*g;if(K<0||K>=h.inHeight)continue;let q=j*d[0],Z=$+K*u[1];for(let te=0;te<h.outWidth;++te){let se=L+te*T.strides[2],oe=te*h.strideWidth-v;for(let re=0;re<m;++re){let ue=oe+re*b;if(ue<0||ue>=h.inWidth)continue;let ne=q+re*d[1],he=Z+ue*h.inChannels,ye=se,Ce=ne;for(let Se=0;Se<h.inChannels;++Se){let _e=C[he+Se];for(let Me=0;Me<w;++Me)F[ye+Me]+=_e*D[Ce+Me];ye+=w,Ce+=w}}}}}}return n.makeTensorInfo(T.shape,T.dtype,T.values)}var Jj={kernelName:Ya,backendName:"cpu",kernelFunc:h2};function Qj(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=r;ke([s,a],"depthwiseConv2dNativeBackpropFilter");let d=_.computeConv2DInfo(s.shape,u,o,i,c,l,!0),{strideHeight:p,strideWidth:h,filterHeight:f,filterWidth:m}=d,g=new Ut(d.filterShape,"float32"),b=d.padInfo.left,y=d.padInfo.top,v=d.outChannels/d.inChannels,x=n.data.get(s.dataId).values,w=new Ut(s.shape,s.dtype,x),T=n.data.get(a.dataId).values,C=new Ut(a.shape,a.dtype,T);for(let D=0;D<f;++D){let F=Math.max(0,Math.ceil((y-D)/p)),O=Math.min(d.outHeight,(d.inHeight+y-D)/p);for(let $=0;$<m;++$){let R=Math.max(0,Math.ceil((b-$)/h)),N=Math.min(d.outWidth,(d.inWidth+b-$)/h);for(let L=0;L<d.outChannels;++L){let G=Math.trunc(L/v),j=L%v,K=0;for(let q=0;q<d.batchSize;++q)for(let Z=F;Z<O;++Z){let te=D+Z*p-y;for(let se=R;se<N;++se){let oe=$+se*h-b;K+=w.get(q,te,oe,G)*C.get(q,Z,se,L)}}g.set(K,D,$,G,j)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var eq={kernelName:oh,backendName:"cpu",kernelFunc:Qj};function tq(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=r;ke([s,a],"depthwiseConv2DNativeBackpropInput");let d=k.computeStrides(s.shape),p=k.computeStrides(a.shape),h=_.computeConv2DInfo(u,a.shape,o,i,c,l,!0),f=new Ut(h.inShape,"float32"),m=f.values,[g,b,y]=f.strides,v=n.data.get(s.dataId).values,[x,w,T]=d,C=n.data.get(a.dataId).values,[D,F,O]=p,{batchSize:$,filterHeight:R,filterWidth:N,inChannels:L,inHeight:G,inWidth:j,outChannels:K,outHeight:q,outWidth:Z,strideHeight:te,strideWidth:se}=h,oe=R-1-h.padInfo.top,re=N-1-h.padInfo.left,ue=K/L;for(let ne=0;ne<$;++ne)for(let he=0;he<L;++he)for(let ye=0;ye<G;++ye){let Ce=ye-oe,Se=Math.max(0,Math.ceil(Ce/te)),_e=Math.min(q,(R+Ce)/te);for(let Me=0;Me<j;++Me){let Ye=Me-re,We=Math.max(0,Math.ceil(Ye/se)),Ve=Math.min(Z,(N+Ye)/se),it=0;for(let Ze=Se;Ze<_e;++Ze){let lt=Ze*te-Ce;for(let wt=We;wt<Ve;++wt){let An=wt*se-Ye,Je=x*ne+w*Ze+T*wt,Hn=D*(R-1-lt)+F*(N-1-An)+O*he;for(let rn=0;rn<ue;++rn){let vr=he*ue+rn,Dn=v[Je+vr],jn=C[Hn+rn];it+=Dn*jn}}}m[g*ne+b*ye+y*Me+he]=it}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var nq={kernelName:ih,backendName:"cpu",kernelFunc:tq};function rq(e){let{inputs:t,backend:n}=e,{x:r}=t,s=k.sizeFromShape(r.shape),a=n.data.get(r.dataId).values,o=Be([s,s],r.dtype),i=o.values;for(let l=0;l<a.length;l++)i[l*s+l]=a[l];let c=[...r.shape,...r.shape];return n.makeTensorInfo(c,o.dtype,o.values)}var sq={kernelName:ch,backendName:"cpu",kernelFunc:rq},aq={kernelName:_l,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:s}=e,{strides:a,pad:o,dilations:i}=n,c=t,l=c.data.get(r.dataId).values,u=r.shape.length,d=c.data.get(s.dataId).values,p=s.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:v,strideHeight:x,strideWidth:w,filterHeight:T,filterWidth:C,dilationHeight:D,dilationWidth:F,outShape:O}=_.computeDilation2DInfo(r.shape,s.shape,a,o,"NHWC",i),$=k.sizeFromShape(O),R=O.length,N=k.getArrayFromDType(r.dtype,$);for(let G=0;G<h;++G)for(let j=0;j<b;++j){let K=j*x-v.top;for(let q=0;q<y;++q){let Z=q*w-v.left;for(let te=0;te<g;++te){let se=Number.MIN_SAFE_INTEGER;for(let re=0;re<T;++re){let ue=K+re*D;if(ue>=0&&ue<f)for(let ne=0;ne<C;++ne){let he=Z+ne*F;if(he>=0&&he<m){let ye=k.locToIndex([G,ue,he,te],u,k.computeStrides(r.shape)),Ce=k.locToIndex([re,ne,te],p,k.computeStrides(s.shape)),Se=l[ye]+d[Ce];Se>se&&(se=Se)}}}let oe=k.locToIndex([G,j,q,te],R,k.computeStrides(O));N[oe]=se}}}return{dataId:c.write(k.toTypedArray(N,r.dtype),O,r.dtype),shape:O,dtype:r.dtype}}},oq={kernelName:lh,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:s,dy:a}=e,{strides:o,pad:i,dilations:c}=n,l=t,u=k.toNestedArray(r.shape,l.data.get(r.dataId).values),d=k.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:v,strideWidth:x,filterHeight:w,filterWidth:T,dilationHeight:C,dilationWidth:D,outShape:F}=_.computeDilation2DInfo(r.shape,s.shape,o,i,"NHWC",c);k.assert(a.rank===F.length,()=>`Error in ${lh}, dy must have the same rank as output ${F.length}, but got ${a.rank}`);let O=k.toNestedArray(F,l.data.get(a.dataId).values),$=k.makeZerosNestedTypedArray(s.shape,s.dtype);for(let N=0;N<p;++N)for(let L=0;L<g;++L){let G=L*v-y.top;for(let j=0;j<b;++j){let K=j*x-y.left;for(let q=0;q<m;++q){let Z=Number.MIN_SAFE_INTEGER,te=0,se=0;for(let oe=0;oe<w;++oe){let re=G+oe*C;if(re>=0&&re<h)for(let ue=0;ue<T;++ue){let ne=K+ue*D;if(ne>=0&&ne<f){let he=u[N][re][ne][q]+d[oe][ue][q];he>Z&&(Z=he,te=oe,se=ue)}}}$[te][se][q]+=O[N][L][j][q]}}}return{dataId:l.write(k.toTypedArray($,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},iq={kernelName:uh,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:s,dy:a}=e,{strides:o,pad:i,dilations:c}=n,l=t,u=k.toNestedArray(r.shape,l.data.get(r.dataId).values),d=k.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:v,strideWidth:x,filterHeight:w,filterWidth:T,dilationHeight:C,dilationWidth:D,outShape:F}=_.computeDilation2DInfo(r.shape,s.shape,o,i,"NHWC",c);k.assert(a.rank===F.length,()=>`Error in ${uh}, dy must have the same rank as output ${F.length}, but got ${a.rank}`);let O=k.toNestedArray(F,l.data.get(a.dataId).values),$=k.makeZerosNestedTypedArray(r.shape,r.dtype);for(let N=0;N<p;++N)for(let L=0;L<g;++L){let G=L*v-y.top;for(let j=0;j<b;++j){let K=j*x-y.left;for(let q=0;q<m;++q){let Z=Number.MIN_SAFE_INTEGER,te=G<0?0:G,se=K<0?0:K;for(let oe=0;oe<w;++oe){let re=G+oe*C;if(re>=0&&re<h)for(let ue=0;ue<T;++ue){let ne=K+ue*D;if(ne>=0&&ne<f){let he=u[N][re][ne][q]+d[oe][ue][q];he>Z&&(Z=he,te=re,se=ne)}}}$[N][te][se][q]+=O[N][L][j][q]}}}return{dataId:l.write(k.toTypedArray($,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function Ld(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;ke(s,"sum");let i;s.dtype==="bool"?i=ka({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):i=ls({inputs:{x:s},backend:n});let c=i.shape.length,l=k.parseAxisParam(a,i.shape),u=_.getAxesPermutation(l,c),d=l,p=i;u!=null&&(p=fr({inputs:{x:i},backend:n,attrs:{perm:u}}),d=_.getInnerMostAxes(d.length,c)),_.assertAxesAreInnerMostDims("sum",d,p.shape.length);let[h,f]=_.computeOutAndReduceShapes(p.shape,d),m=_.upcastType(p.dtype,"int32"),g=lm(n,h,m),b=k.sizeFromShape(f),y=n.data.get(g.dataId).values,v=n.data.get(p.dataId).values;for(let x=0;x<y.length;++x){let w=x*b,T=0;for(let C=0;C<b;++C)T+=v[w+C];y[x]=T}if(o){let x=_.expandShapeToKeepDim(g.shape,l),w=g;g=Nt({inputs:{x:g},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(w)}return n.disposeIntermediateTensorInfo(i),u!=null&&n.disposeIntermediateTensorInfo(p),g}var cq={kernelName:Eo,backendName:"cpu",kernelFunc:Ld};function uq(e){let{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:o,summedDims:i,idDims:c}=_.decodeEinsumEquation(s,a.length);_.checkEinsumDimSizes(o.length,c,a);let{path:l,steps:u}=_.getEinsumComputePath(i,c),d=u.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:b,expandDims:y}=_.getEinsumPermutation(h,c[g]),v;_.isIdentityPermutation(b)?v=a[g]:(v=fr({inputs:{x:a[g]},backend:n,attrs:{perm:b}}),f.push(v));let x=v.shape.slice();for(let w=0;w<y.length;++w)x.splice(y[w],0,1);k.arraysEqual(v.shape,x)||(v=Nt({inputs:{x:v},backend:n,attrs:{shape:x}}),f.push(v)),p===null?p=v:(p=dm({inputs:{a:v,b:p},backend:n}),f.push(p))}m<d-1&&(l[m]>=0&&(p=Ld({inputs:{x:p},backend:n,attrs:{axis:l[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}var lq={kernelName:dh,backendName:"cpu",kernelFunc:uq};function dq(e){let{inputs:t,backend:n}=e,{dy:r,y:s}=t;ke([r,s],"eluGrad");let a=new Float32Array(k.sizeFromShape(s.shape)),o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values;for(let c=0;c<o.length;++c){let l=o[c];l>=1?a[c]=i[c]:a[c]=i[c]*(l+1)}return n.makeTensorInfo(s.shape,"float32",a)}var pq={kernelName:ph,backendName:"cpu",kernelFunc:dq},hq=_.ERF_P,fq=_.ERF_A1,mq=_.ERF_A2,gq=_.ERF_A3,bq=_.ERF_A4,yq=_.ERF_A5,vq=ot(lc,e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+hq*n);return t*(1-((((yq*r+bq)*r+gq)*r+mq)*r+fq)*r*Math.exp(-n*n))}),xq={kernelName:lc,backendName:"cpu",kernelFunc:vq};function hm(e){let{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,o=s.shape.length,i=s.shape.slice(),c=a;return a<0&&(k.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),c=o+a+1),i.splice(c,0,1),Nt({inputs:{x:s},backend:n,attrs:{shape:i}})}var wq={kernelName:pc,backendName:"cpu",kernelFunc:hm},kq=Wt((e,t)=>e/t),Ow=tn(Za,kq),Mw={kernelName:Za,backendName:"cpu",kernelFunc:Ow};function f2(e,t,n){let r=e.shape,s=r[0],a=r[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,c=o.complexTensorInfos.imag,l=[s,a],u=k.sizeFromShape(l),d=k.getTypedArrayFromDType("float32",u),p=k.getTypedArrayFromDType("float32",u);for(let g=0;g<s;g++){let b=pi({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,a]}}),y=pi({inputs:{x:c},backend:n,attrs:{begin:[g,0],size:[1,a]}}),v=rr({inputs:{real:b,imag:y},backend:n}),{real:x,imag:w}=Iq(v,t,n),T=_.mergeRealAndImagArrays(x,w);for(let C=0;C<a;C++){let D=_.getComplexWithIndex(T,C);d[g*a+C]=D.real,p[g*a+C]=D.imag}n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(v)}let h=n.makeTensorInfo(l,"float32",d),f=n.makeTensorInfo(l,"float32",p),m=rr({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function Iq(e,t,n){let r=k.sizeFromShape(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,o=n.data.get(s.complexTensorInfos.imag.dataId).values;if(Sq(r)){let i=Lw(a,o,r,t,n),c=[e.shape[0],e.shape[1]];if(t){let l=n.makeTensorInfo(c,"float32",i.real),u=n.makeTensorInfo(c,"float32",i.imag),d=n.makeTensorInfo([],"float32",k.createScalarValue(r,"float32")),p=ls({inputs:{x:d},backend:n}),h=Mw.kernelFunc({inputs:{a:l,b:d},backend:n}),f=Mw.kernelFunc({inputs:{a:u,b:p},backend:n}),m=n.data.get(h.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{let i=_.mergeRealAndImagArrays(a,o),c=Tq(i,r,t);return _.splitRealAndImagArrays(c)}}function Sq(e){return(e&e-1)==0}function Lw(e,t,n,r,s){if(n===1)return{real:e,imag:t};let a=_.mergeRealAndImagArrays(e,t),o=n/2,i=_.complexWithEvenIndex(a),c=i.real,l=i.imag,u=[c.length],d=s.makeTensorInfo(u,"float32",c),p=s.makeTensorInfo(u,"float32",l),h=rr({inputs:{real:d,imag:p},backend:s}),f=_.complexWithOddIndex(a),m=f.real,g=f.imag,b=[m.length],y=s.makeTensorInfo(b,"float32",m),v=s.makeTensorInfo(b,"float32",g),x=rr({inputs:{real:y,imag:v},backend:s}),w=Lw(c,l,o,r,s),T=w.real,C=w.imag,D=[T.length],F=s.makeTensorInfo(D,"float32",T),O=s.makeTensorInfo(D,"float32",C),$=rr({inputs:{real:F,imag:O},backend:s}),R=Lw(m,g,o,r,s),N=R.real,L=R.imag,G=[N.length],j=s.makeTensorInfo(G,"float32",N),K=s.makeTensorInfo(G,"float32",L),q=rr({inputs:{real:j,imag:K},backend:s}),Z=_.exponents(n,r),te=[Z.real.length],se=s.makeTensorInfo(te,"float32",Z.real),oe=s.makeTensorInfo(te,"float32",Z.imag),re=rr({inputs:{real:se,imag:oe},backend:s}),ue=dm({inputs:{a:re,b:q},backend:s}),ne=Od({inputs:{a:$,b:ue},backend:s}),he=$w({inputs:{a:$,b:ue},backend:s}),ye=di({inputs:{input:ne},backend:s}),Ce=di({inputs:{input:he},backend:s}),Se=Cu({inputs:{input:ne},backend:s}),_e=Cu({inputs:{input:he},backend:s}),Me=Nu({inputs:[ye,Ce],backend:s,attrs:{axis:0}}),Ye=Nu({inputs:[Se,_e],backend:s,attrs:{axis:0}}),We=s.data.get(Me.dataId).values,Ve=s.data.get(Ye.dataId).values;return s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(se),s.disposeIntermediateTensorInfo(oe),s.disposeIntermediateTensorInfo(re),s.disposeIntermediateTensorInfo(ue),s.disposeIntermediateTensorInfo(ne),s.disposeIntermediateTensorInfo(he),s.disposeIntermediateTensorInfo(ye),s.disposeIntermediateTensorInfo(Se),s.disposeIntermediateTensorInfo(Ce),s.disposeIntermediateTensorInfo(_e),s.disposeIntermediateTensorInfo(Me),s.disposeIntermediateTensorInfo(Ye),{real:We,imag:Ve}}function Tq(e,t,n){let r=new Float32Array(t*2);for(let s=0;s<t;s++){let a=0,o=0;for(let i=0;i<t;i++){let c=_.exponent(s*i,t,n),l=_.getComplexWithIndex(e,i);a+=l.real*c.real-l.imag*c.imag,o+=l.real*c.imag+l.imag*c.real}n&&(a/=t,o/=t),_.assignToTypedArray(r,a,o,s)}return r}function Cq(e){let{inputs:t,backend:n}=e,{input:r}=t,s=k.sizeFromShape(r.shape),a=r.shape[r.shape.length-1],o=s/a,i=Nt({inputs:{x:r},backend:n,attrs:{shape:[o,a]}}),c=f2(i,!1,n),l=Nt({inputs:{x:c},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),l}var Nq={kernelName:hh,backendName:"cpu",kernelFunc:Cq};function Bw(e){let{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,o=a||k.inferDtype(s),i=k.getArrayFromDType(o,k.sizeFromShape(r));return Eq(i,s,o),t.makeTensorInfo(r,o,i)}var _q={kernelName:El,backendName:"cpu",kernelFunc:Bw};function Eq(e,t,n){e.fill(t)}var Aq={kernelName:fc,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,s=n,a=k.getTypedArrayFromDType(r.dtype,k.sizeFromShape(r.shape)),[o,i,c,l]=r.shape,u=s.data.get(r.dataId).values;for(let p=0;p<o;p++){let h=p*c*i*l;for(let f=0;f<i;f++){let m=f*(c*l);for(let g=0;g<c;g++){let b=g*l;for(let y=0;y<l;y++){let v=Math.round(c-g-1),x=h+m+b+y,w=u[x];if(v>=0&&v<c){let T=v*l,C=h+m+T+y;w=u[C]}a[x]=w}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Dq=Wt((e,t)=>Math.floor(e/t)),Fq=tn(to,Dq,null,"int32"),$q={kernelName:to,backendName:"cpu",kernelFunc:Fq};function Rq(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=p2({inputs:{x:s,filter:a},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:p}});if(o){let g=m;m=Od({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=Rw(n,m,h,i,f),n.disposeIntermediateTensorInfo(g)}return m}var Pq={kernelName:Mo,backendName:"cpu",kernelFunc:Rq};function Oq(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=h2({inputs:{x:s,filter:a},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:p}});if(o){let g=m;m=Od({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=Rw(n,m,h,i,f),n.disposeIntermediateTensorInfo(g)}return m}var Mq={kernelName:Lo,backendName:"cpu",kernelFunc:Oq};function Lq(e){let{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=k.sizeFromShape(r.shape),o=s.shape,i=o[o.length-1],[c,l,u,d]=_.prepareAndValidate(r,s);if(l===0)return n.makeTensorInfo(c,r.dtype,[]);let p=n.data.get(s.dataId).values,h=n.bufferSync(r),f=AC(p,h,r.dtype,l,i,u,d,r.shape,a);return n.makeTensorInfo(c,r.dtype,f.values)}var Bq={kernelName:gc,backendName:"cpu",kernelFunc:Lq};function zq(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:o,batchDims:i}=r;ke([s,a],"gatherV2");let c=k.parseAxisParam(o,s.shape)[0],l=n.data.get(a.dataId).values,u=s.shape[c];for(let x=0;x<l.length;++x){let w=l[x];k.assert(w<=u-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${u-1}]`)}let d=i;i==null&&(d=0);let p=k.sizeFromShape(a.shape),h=_.segment_util.collectGatherOpShapeInfo(s,a,c,d),f=Nt({inputs:{x:s},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=Nt({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,p/h.batchSize]}}),g=[h.batchSize,h.outerSize,p/h.batchSize,h.sliceSize],b=n.bufferSync(m),y=n.bufferSync(f),v=DC(y,b,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,v.dtype,v.values)}var Wq={kernelName:mc,backendName:"cpu",kernelFunc:zq};function Vq(e){let{inputs:t,backend:n}=e,{input:r}=t,s=k.sizeFromShape(r.shape),a=r.shape[r.shape.length-1],o=s/a,i=Nt({inputs:{x:r},backend:n,attrs:{shape:[o,a]}}),c=f2(i,!0,n),l=Nt({inputs:{x:c},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),l}var Uq={kernelName:fh,backendName:"cpu",kernelFunc:Vq},Gq=ot(yc,e=>Number.isFinite(e)?1:0,"bool"),Hq={kernelName:yc,backendName:"cpu",kernelFunc:Gq},jq=ot(vc,e=>Math.abs(e)===1/0?1:0,"bool"),qq={kernelName:vc,backendName:"cpu",kernelFunc:jq},Kq=ot(xc,e=>Number.isNaN(e)?1:0,"bool"),Xq={kernelName:xc,backendName:"cpu",kernelFunc:Kq};function Yq(e){let{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,o=OC(r,s,a);return t.makeTensorInfo([o.length],"float32",o)}var Zq={kernelName:gh,backendName:"cpu",kernelFunc:Yq},Jq=ot(Ic,e=>Math.log1p(e)),Qq={kernelName:Ic,backendName:"cpu",kernelFunc:Jq},e8=Wt((e,t)=>e&&t),t8=tn(Sc,e8,null,"bool"),n8={kernelName:Sc,backendName:"cpu",kernelFunc:t8},r8=ot(Al,e=>e?0:1,"bool"),s8={kernelName:Al,backendName:"cpu",kernelFunc:r8},a8=Wt((e,t)=>e||t),o8=tn(Dl,a8,null,"bool"),i8={kernelName:Dl,backendName:"cpu",kernelFunc:o8};function c8(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:o,alpha:i,beta:c}=r;ke(s,"LRN");let l=s.shape[3],u=l-1,d=n.data.get(s.dataId).values,p=k.sizeFromShape(s.shape),h=new Float32Array(p);function f(m){let g=m%l,b=m-g+Math.max(0,g-a),y=m-g+Math.min(g+a,u),v=0;for(;b<=y;b++){let x=d[b];v+=x*x}return v}for(let m=0;m<p;m++){let g=f(m),b=d[m]*Math.pow(o+i*g,-c);h[m]=b}return n.makeTensorInfo(s.shape,s.dtype,h)}var u8={kernelName:Fl,backendName:"cpu",kernelFunc:c8};function l8(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:o}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=r;ke(o,"LRNGrad");let d=k.sizeFromShape(o.shape),p=o.shape[3],h=n.data.get(o.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(d),b=d;for(let y=0;y<b;y++){let v=y%p,x=y-v+Math.max(0,v-i),w=y-v+Math.min(p,v+i+1),T=0;for(let C=x;C<w;C++)T+=Math.pow(f[C],2);T=l*T+c;for(let C=x;C<w;C++){let D=-2*l*u*f[C]*m[y]/T;y===C&&(D+=Math.pow(T,-u)),D*=h[y],g[C]+=D}}return n.makeTensorInfo(o.shape,s.dtype,g)}var d8={kernelName:bh,backendName:"cpu",kernelFunc:l8};function m2(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:o}=r,i=n,c=s.shape,l=c.length,u=k.parseAxisParam(a,c),d=u,p=_.getAxesPermutation(d,l),h=i.data.get(s.dataId).values;if(p!=null){let x=new Array(l);for(let w=0;w<x.length;w++)x[w]=c[p[w]];h=Aw(h,c,s.dtype,p,x),d=_.getInnerMostAxes(d.length,l),c=x}ke(s,"max"),_.assertAxesAreInnerMostDims("max",d,l);let[f,m]=_.computeOutAndReduceShapes(c,d),g=k.sizeFromShape(m),b=LC(h,g,f,s.dtype),y=i.write(b,f,s.dtype),v=f;return o&&(v=_.expandShapeToKeepDim(f,u)),{dataId:y,shape:v,dtype:s.dtype}}var p8={kernelName:io,backendName:"cpu",kernelFunc:m2};function h8(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t;ke(s,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:c}=r,l=1;k.assert(_.eitherStridesOrDilationsAreOne(o,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);let u=_.computePool2DInfo(s.shape,a,o,l,i,c),d;if(u.filterWidth===1&&u.filterHeight===1&&k.arraysEqual(u.inShape,u.outShape))d=ls({inputs:{x:s},backend:n});else{let p=n.data.get(s.dataId).values,h=k.computeStrides(s.shape),f=Pw(p,s.shape,s.dtype,h,u,"max");d=n.makeTensorInfo(u.outShape,s.dtype,f.values)}return d}var f8={kernelName:uo,backendName:"cpu",kernelFunc:h8};function m8(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=r;ke(s,"maxPool3d");let u=_.computePool3DInfo(s.shape,a,o,1,i,c,l),d=n.data.get(s.dataId).values,p=d2(d,s.shape,s.dtype,k.computeStrides(s.shape),u,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}var g8={kernelName:$l,backendName:"cpu",kernelFunc:m8};function b8(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=r;ke([s,a],"maxPool3DGrad");let u=_.computePool3DInfo(a.shape,o,i,1,c,l),d=n.bufferSync(a),p=oj(d,u),h=u.strideDepth,f=u.strideHeight,m=u.strideWidth,g=u.dilationDepth,b=u.dilationHeight,y=u.dilationWidth,v=u.effectiveFilterDepth,x=u.effectiveFilterHeight,w=u.effectiveFilterWidth,T=v-1-u.padInfo.front,C=w-1-u.padInfo.left,D=x-1-u.padInfo.top,F=Be(a.shape,"float32"),O=n.bufferSync(s);for(let $=0;$<u.batchSize;++$)for(let R=0;R<u.inChannels;++R)for(let N=0;N<u.inDepth;++N)for(let L=0;L<u.inHeight;++L)for(let G=0;G<u.inWidth;++G){let j=N-T,K=L-D,q=G-C,Z=0;for(let te=0;te<v;te+=g){let se=(j+te)/h;if(!(se<0||se>=u.outDepth||Math.floor(se)!==se))for(let oe=0;oe<x;oe+=b){let re=(K+oe)/f;if(!(re<0||re>=u.outHeight||Math.floor(re)!==re))for(let ue=0;ue<w;ue+=y){let ne=(q+ue)/m;if(ne<0||ne>=u.outWidth||Math.floor(ne)!==ne)continue;let he=v*x*w-1-p.get($,se,re,ne,R),ye=te*x*w+oe*w+ue,Ce=he===ye?1:0;if(Ce===0)continue;Z+=O.get($,se,re,ne,R)*Ce}}}F.set(Z,$,N,L,G,R)}return n.makeTensorInfo(F.shape,F.dtype,F.values)}var y8={kernelName:vh,backendName:"cpu",kernelFunc:b8};function v8(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:o}=t,i=a;ke([a,o],"maxPoolGrad");let{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=r,p=_.computePool2DInfo(i.shape,c,l,1,u,d),h=n.data.get(i.dataId).values,f=Be(p.outShape,i.dtype,l2(h,i.shape,i.dtype,p).values),m=p.strideHeight,g=p.strideWidth,b=p.dilationHeight,y=p.dilationWidth,v=p.effectiveFilterHeight,x=p.effectiveFilterWidth,w=x-1-p.padInfo.left,T=v-1-p.padInfo.top,C=Be(i.shape,"float32"),D=n.data.get(s.dataId).values,F=Be(s.shape,"float32",D);for(let O=0;O<p.batchSize;++O)for(let $=0;$<p.inChannels;++$)for(let R=0;R<p.inHeight;++R)for(let N=0;N<p.inWidth;++N){let L=R-T,G=N-w,j=0;for(let K=0;K<v;K+=b){let q=(L+K)/m;if(!(q<0||q>=p.outHeight||Math.floor(q)!==q))for(let Z=0;Z<x;Z+=y){let te=(G+Z)/g;if(te<0||te>=p.outWidth||Math.floor(te)!==te)continue;let se=v*x-1-f.get(O,q,te,$),oe=K*x+Z,re=se===oe?1:0;if(re===0)continue;j+=F.get(O,q,te,$)*re}}C.set(j,O,R,N,$)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}var x8={kernelName:yh,backendName:"cpu",kernelFunc:v8};function w8(e,t,n,r,s){let a=k.computeStrides(t),o=Pw(e,t,n,a,s,"max"),i=l2(e,t,n,s,!0,r);return[o.values,i.values]}var k8={kernelName:xh,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:s,strides:a,pad:o,includeBatchInIndex:i}=t,c=n;ke(r,"MaxPoolWithArgmax");let l=c.data.get(r.dataId).values,u=_.computePool2DInfo(r.shape,s,a,[1,1],o),[d,p]=w8(l,r.shape,r.dtype,i,u),h=c.write(d,u.outShape,r.dtype),f=c.write(p,u.outShape,r.dtype);return[{dataId:h,shape:u.outShape,dtype:r.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}};function I8(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=k.parseAxisParam(a,s.shape),l=_.computeOutAndReduceShapes(s.shape,i)[1],u=k.sizeFromShape(l),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([u]));d.push(p);let h=ka({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});d.push(h);let f=Ow({inputs:{a:h,b:p},backend:n});d.push(f);let m=Ld({inputs:{x:f},backend:n,attrs:{axis:a,keepDims:o}});return d.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}var S8={kernelName:lo,backendName:"cpu",kernelFunc:I8};function T8(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;ke(s,"min");let i=k.parseAxisParam(a,s.shape),c=i,l=_.getAxesPermutation(c,s.shape.length),u=s;l!=null&&(u=fr({inputs:{x:s},backend:n,attrs:{perm:l}}),c=_.getInnerMostAxes(c.length,s.shape.length)),_.assertAxesAreInnerMostDims("min",c,u.shape.length);let[d,p]=_.computeOutAndReduceShapes(u.shape,c),h=k.sizeFromShape(p),f=k.makeZerosTypedArray(k.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let b=0;b<f.length;++b){let y=b*h,v=m[y];for(let x=0;x<h;++x){let w=m[y+x];(Number.isNaN(w)||w<v)&&(v=w)}f[b]=v}l!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let b=_.expandShapeToKeepDim(d,i),y=Nt({inputs:{x:g},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(g),y}return g}var C8={kernelName:po,backendName:"cpu",kernelFunc:T8};function N8(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:o}=r;ke(s,"mirrorPad");let i=a.map((v,x)=>v[0]+s.shape[x]+v[1]),c=a.map(v=>v[0]),l=a.map((v,x)=>v[0]+s.shape[x]),u=o==="reflect"?0:1,d=n.data.get(s.dataId).values,p=s.shape.length,h=k.computeStrides(s.shape),f=k.sizeFromShape(i),m=i.length,g=k.computeStrides(i),b=k.getTypedArrayFromDType(s.dtype,f);for(let v=0;v<f;v++){let x=k.indexToLoc(v,m,g);for(let T=0;T<m;T++)x[T]<c[T]?x[T]=c[T]*2-x[T]-u:x[T]>=l[T]&&(x[T]=(l[T]-1)*2-x[T]+u);x=x.map((T,C)=>T-c[C]);let w=k.locToIndex(x,p,h);b[v]=d[w]}return{dataId:n.write(b,i,s.dtype),shape:i,dtype:s.dtype}}var _8={kernelName:fo,backendName:"cpu",kernelFunc:N8},E8=Wt((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),A8=tn(Tc,E8),D8={kernelName:Tc,backendName:"cpu",kernelFunc:A8},F8=Oa(d0());function g2(e){let{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,o=s.shape.length,i=a;if(i===-1&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);let c=k.parseAxisParam([i],s.shape),l=m2({inputs:{x:s},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),u=_.expandShapeToKeepDim(l.shape,c),d=Nt({inputs:{x:l},backend:n,attrs:{shape:u}}),p=$w({inputs:{a:s,b:d},backend:n}),h=NC({inputs:{x:p},backend:n}),f=Ld({inputs:{x:h},backend:n,attrs:{axis:c,keepDims:!1}}),m=Nt({inputs:{x:f},backend:n,attrs:{shape:u}}),g=Ow({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var $8={kernelName:Ao,backendName:"cpu",kernelFunc:g2};function R8(e){let{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:o,normalized:i}=r;ke(s,"multinomial");let c=i?s:g2({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=c.shape[0],u=c.shape[1],d=n.data.get(c.dataId).values,p=[l,a],h=k.makeZerosTypedArray(k.sizeFromShape(p),"int32");for(let f=0;f<l;++f){let m=f*u,g=new Float32Array(u-1);g[0]=d[m];for(let v=1;v<g.length;++v)g[v]=g[v-1]+d[m+v];let b=F8.alea(o.toString()),y=f*a;for(let v=0;v<a;++v){let x=b();h[y+v]=g.length;for(let w=0;w<g.length;w++)if(x<g[w]){h[y+v]=w;break}}}return i||n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(p,"int32",h)}var P8={kernelName:wh,backendName:"cpu",kernelFunc:R8},O8=rs.nonMaxSuppressionV3Impl;function M8(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=r;ke(s,"NonMaxSuppression");let l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,{selectedIndices:d}=O8(l,u,o,i,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var L8={kernelName:_c,backendName:"cpu",kernelFunc:M8},B8=rs.nonMaxSuppressionV4Impl;function z8(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=r;ke(s,"NonMaxSuppressionPadded");let u=n.data.get(s.dataId).values,d=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:h}=B8(u,d,o,i,c,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var W8={kernelName:Ec,backendName:"cpu",kernelFunc:z8},V8=rs.nonMaxSuppressionV5Impl;function U8(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=r;ke(s,"NonMaxSuppressionWithScore");let u=n.data.get(s.dataId).values,d=n.data.get(a.dataId).values,p=o,h=i,f=c,m=l,{selectedIndices:g,selectedScores:b}=V8(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var G8={kernelName:Ac,backendName:"cpu",kernelFunc:U8};function H8(e){let{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:o,offValue:i}=r;ke(s,"oneHot");let c=k.sizeFromShape(s.shape),l=new Float32Array(c*a);l.fill(i);let u=n.data.get(s.dataId).values;for(let d=0;d<c;++d)u[d]>=0&&u[d]<a&&(l[d*a+u[d]]=o);return n.makeTensorInfo([...s.shape,a],"int32",l)}var j8={kernelName:go,backendName:"cpu",kernelFunc:H8};function fm(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(r.dtype==="complex64"){let s=di({inputs:{input:r},backend:n}),a=fm({inputs:{x:s},backend:n}),o=Cu({inputs:{input:r},backend:n}),i=fm({inputs:{x:o},backend:n}),c=rr({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}else return Bw({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var q8={kernelName:Yc,backendName:"cpu",kernelFunc:fm};function b2(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(r.dtype==="complex64"){let s=di({inputs:{input:r},backend:n}),a=b2({inputs:{x:s},backend:n}),o=Cu({inputs:{input:r},backend:n}),i=fm({inputs:{x:o},backend:n}),c=rr({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}else return Bw({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}var K8={kernelName:Dc,backendName:"cpu",kernelFunc:b2};function y2(e){let{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(t.length===1)return hm({inputs:{input:t[0]},backend:n,attrs:{dim:s}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{k.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),k.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],c=t.map(u=>{let d=hm({inputs:{input:u},backend:n,attrs:{dim:s}});return i.push(d),d}),l=Nu({inputs:c,backend:n,attrs:{axis:s}});return i.forEach(u=>n.disposeIntermediateTensorInfo(u)),l}var X8={kernelName:Fc,backendName:"cpu",kernelFunc:y2};function Y8(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:o}=r;ke(s,"pad");let i=a.map((y,v)=>y[0]+s.shape[v]+y[1]),c=a.map(y=>y[0]),l=n.data.get(s.dataId).values,u=k.sizeFromShape(s.shape),d=s.shape.length,p=k.computeStrides(s.shape),h=k.sizeFromShape(i),f=i.length,m=k.computeStrides(i),g=k.getTypedArrayFromDType(s.dtype,h);o!==0&&g.fill(o);for(let y=0;y<u;y++){let x=k.indexToLoc(y,d,p).map((T,C)=>T+c[C]),w=k.locToIndex(x,f,m);g[w]=l[y]}return{dataId:n.write(g,i,s.dtype),shape:i,dtype:s.dtype}}var v2={kernelName:bo,backendName:"cpu",kernelFunc:Y8},Z8=Wt((e,t)=>Math.pow(e,t)),J8=tn(yo,Z8),Q8={kernelName:yo,backendName:"cpu",kernelFunc:J8};function eK(e){let{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:o}=n,i=Dw(r,s,o,a);return t.makeTensorInfo([i.length],a,i)}var tK={kernelName:Rl,backendName:"cpu",kernelFunc:eK},nK=ot(Rc,e=>1/e),rK={kernelName:Rc,backendName:"cpu",kernelFunc:nK};function sK(e){let{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r;ke(s,"resizeBilinear");let c=k.computeStrides(s.shape),[l,u]=i,[d,p,h,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(k.sizeFromShape([d,l,u,f])),b=[a&&l>1?p-1:p,a&&u>1?h-1:h],y=[a&&l>1?l-1:l,a&&u>1?u-1:u],v=0,x=b[0]/y[0],w=b[1]/y[1];for(let T=0;T<d;T++)for(let C=0;C<l;C++){let D;o?D=x*(C+.5)-.5:D=x*C;let F=Math.max(0,Math.floor(D)),O=D-F,$=Math.min(p-1,Math.ceil(D)),R=T*c[0]+F*c[1],N=T*c[0]+$*c[1];for(let L=0;L<u;L++){let G;o?G=w*(L+.5)-.5:G=w*L;let j=Math.max(0,Math.floor(G)),K=G-j,q=Math.min(h-1,Math.ceil(G)),Z=R+j*c[2],te=N+j*c[2],se=R+q*c[2],oe=N+q*c[2];for(let re=0;re<f;re++){let ue=m[Z+re],ne=m[te+re],he=m[se+re],ye=m[oe+re],Ce=ue+(he-ue)*K,Se=ne+(ye-ne)*K,_e=Ce+(Se-Ce)*O;g[v++]=_e}}}return n.makeTensorInfo([d,l,u,f],"float32",g)}var aK={kernelName:wo,backendName:"cpu",kernelFunc:sK};function oK(e){let{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r;ke([a,s],"resizeBilinearGrad");let i=k.computeStrides(s.shape),[c,l,u,d]=s.shape,[,p,h]=a.shape,f=new Float32Array(c*l*u*d),m=[o&&p>1?l-1:l,o&&h>1?u-1:u],g=[o&&p>1?p-1:p,o&&h>1?h-1:h],b=m[0]/g[0],y=m[1]/g[1],v=n.data.get(a.dataId).values,x=0;for(let w=0;w<c;w++){let T=w*i[0];for(let C=0;C<p;C++){let D=C*b,F=Math.floor(D),O=Math.min(Math.ceil(D),l-1),$=T+F*i[1],R=T+O*i[1],N=D-F,L=1-N;for(let G=0;G<h;G++){let j=G*y,K=Math.floor(j),q=Math.min(Math.ceil(j),u-1),Z=j-K,te=1-Z,se=$+K*i[2],oe=$+q*i[2],re=R+K*i[2],ue=R+q*i[2],ne=L*te,he=L*Z,ye=N*te,Ce=N*Z;for(let Se=0;Se<d;Se++){let _e=v[x++];f[se+Se]+=_e*ne,f[oe+Se]+=_e*he,f[re+Se]+=_e*ye,f[ue+Se]+=_e*Ce}}}}return n.makeTensorInfo([c,u,l,d],"float32",f)}var iK={kernelName:Sh,backendName:"cpu",kernelFunc:oK};function cK(e){let{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r;ke(s,"resizeNearestNeighbor");let c=k.computeStrides(s.shape),[l,u]=i,[d,p,h,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(d*l*u*f),b=[a&&l>1?p-1:p,a&&u>1?h-1:h],y=[a&&l>1?l-1:l,a&&u>1?u-1:u],v=b[0]/y[0],x=b[1]/y[1],w=0;for(let T=0;T<d;T++){let C=T*c[0];for(let D=0;D<l;D++){let F=o?v*(D+.5):v*D,O=Math.min(p-1,a?Math.round(F):Math.floor(F));o&&(O=Math.max(0,O));let $=C+O*c[1];for(let R=0;R<u;R++){let N=o?x*(R+.5):x*R,L=Math.min(h-1,a?Math.round(N):Math.floor(N));o&&(L=Math.max(0,L));let G=$+L*c[2];for(let j=0;j<f;j++){let K=m[G+j];g[w++]=K}}}}return n.makeTensorInfo([d,l,u,f],s.dtype,g)}var uK={kernelName:Pl,backendName:"cpu",kernelFunc:cK};function lK(e){let{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r;ke([a,s],"resizeNearestNeighborGrad");let i=k.computeStrides(s.shape),c=k.computeStrides(a.shape),[l,u,d,p]=s.shape,[,h,f]=a.shape,m=new Float32Array(l*u*d*p),g=n.data.get(a.dataId).values,b=[o&&h>1?u-1:u,o&&f>1?d-1:d],y=[o&&h>1?h-1:h,o&&f>1?f-1:f],v=b[0]/y[0],x=b[1]/y[1],w=1/v,T=1/x,C=Math.ceil(w)*2+2,D=Math.ceil(T)*2+2;for(let F=0;F<l;F++){let O=F*i[0];for(let $=0;$<u;$++){let R=O+$*i[1],N=Math.floor($*w),L=Math.floor(N-C/2);for(let G=0;G<d;G++){let j=R+G*i[2],K=Math.floor(G*T),q=Math.floor(K-D/2);for(let Z=0;Z<p;Z++){let te=0;for(let se=0;se<C;se++){let oe=se+L;if(oe<0||oe>=h)continue;let re=O+oe*c[1],ue=oe*v,ne=Math.min(u-1,o?Math.round(ue):Math.floor(ue));if($===ne)for(let he=0;he<D;he++){let ye=he+q;if(ye<0||ye>=f)continue;let Ce=re+ye*c[2],Se=ye*x,_e=Math.min(d-1,o?Math.round(Se):Math.floor(Se));G===_e&&(te+=g[Ce+Z])}}m[j+Z]=te}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}var dK={kernelName:Ih,backendName:"cpu",kernelFunc:lK};function pK(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;ke(s,"reverse");let o=s.shape.length,i=k.parseAxisParam(a,s.shape);if(o===0)return ls({inputs:{x:s},backend:n});let c=new Ut(s.shape,s.dtype),l=n.bufferSync(s);for(let u=0;u<c.size;u++){let d=c.indexToLoc(u),p=d.slice();i.forEach(h=>p[h]=s.shape[h]-1-p[h]),c.set(l.get(...p),...d)}return n.makeTensorInfo(c.shape,c.dtype,c.values)}var hK={kernelName:Io,backendName:"cpu",kernelFunc:pK},fK={kernelName:Zc,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:s,fillValue:a,center:o}=t,i=n,c=k.getTypedArrayFromDType(r.dtype,k.sizeFromShape(r.shape)),[l,u,d,p]=r.shape,[h,f]=_.getImageCenter(o,u,d),m=255,g=Math.sin(s),b=Math.cos(s),y=i.data.get(r.dataId).values;for(let x=0;x<l;x++){let w=x*d*u*p;for(let T=0;T<u;T++){let C=T*(d*p);for(let D=0;D<d;D++){let F=D*p;for(let O=0;O<p;O++){let $=[l,T,D,O],R=$[2],N=$[1],L=(R-h)*b-(N-f)*g,G=(R-h)*g+(N-f)*b;L=Math.round(L+h),G=Math.round(G+f);let j=a;if(typeof a!="number"&&(O===3?j=m:j=a[O]),L>=0&&L<d&&G>=0&&G<u){let q=G*(d*p),Z=L*p,te=w+q+Z+O;j=y[te]}let K=w+C+F+O;c[K]=j}}}}return{dataId:i.write(c,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},mK=ot(So,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),gK={kernelName:So,backendName:"cpu",kernelFunc:mK};function x2(e,t,n,r,s,a,o,i,c,l){let u=[r/s,s],d=e.values,p=t.values;if(r===0)return Be(n,t.dtype);let h=Be(u,t.dtype);h.values.fill(c);for(let f=0;f<a;f++){let m=[],g=0;for(let b=0;b<o;b++){let y=d[f*o+b];m.push(y),g+=y*i[b]}if(g<0||g>=r/s)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let b=0;b<s;b++)l?h.values[g*s+b]+=p[f*s+b]:h.values[g*s+b]=t.rank===0?p[0]:p[f*s+b]}return h}function bK(e){let{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:o}=r,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:d}=_.calculateShapes(a,s,o),p=!0,h=n.bufferSync(s),f=n.bufferSync(a),m=x2(h,f,o,d,l,c,i,u,0,p);return n.makeTensorInfo(o,m.dtype,m.values)}var yK={kernelName:Oc,backendName:"cpu",kernelFunc:bK};function vK(e){let{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;ke([r,s,a],"select");let o=r.shape.length,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,u=Sr(s.dtype,a.dtype),d=k.makeZerosTypedArray(k.sizeFromShape(s.shape),u),p=0,h=o===0||o>1||s.shape.length===1?1:k.sizeFromShape(s.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<h;m++)i[f]===1?d[p++]=c[f]:d[p++]=l[f];return n.makeTensorInfo(s.shape,u,d)}var xK={kernelName:Mc,backendName:"cpu",kernelFunc:vK},wK=_.SELU_SCALEALPHA,kK=_.SELU_SCALE,IK=ot(Lc,e=>e>=0?kK*e:wK*(Math.exp(e)-1)),SK={kernelName:Lc,backendName:"cpu",kernelFunc:IK},TK=ot(Wc,e=>e<0?-1:e>0?1:0),CK={kernelName:Wc,backendName:"cpu",kernelFunc:TK},NK=ot(Co,e=>Math.sin(e)),_K={kernelName:Co,backendName:"cpu",kernelFunc:NK},EK=ot(zc,e=>Math.sinh(e)),AK={kernelName:zc,backendName:"cpu",kernelFunc:EK},DK=11920928955078125e-23,w2=Math.log(DK)+2,FK=ot(Vc,e=>{let t=e>-w2,n=e<w2,r=Math.exp(e),s;return n?s=r:t?s=e:s=Math.log(1+r),s}),$K={kernelName:Vc,backendName:"cpu",kernelFunc:FK};function RK(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r;ke([s],"spaceToBatchND");let i=k.sizeFromShape(a),c=[[0,0]];c.push(...o);for(let T=1+a.length;T<s.shape.length;++T)c.push([0,0]);let l=v2.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:c,constantValue:0}}),u=_.getReshaped(l.shape,a,i,!1),d=_.getPermuted(u.length,a.length,!1),p=_.getReshapedPermuted(l.shape,a,i,!1),m=Nt({inputs:{x:l},backend:n,attrs:{shape:u}}),y=fr({inputs:{x:m},backend:n,attrs:{perm:d}}),w=Nt({inputs:{x:y},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),w}var PK={kernelName:Uc,backendName:"cpu",kernelFunc:RK};function OK(e){let{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${s.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(o.dataId).values[0],[d,p,h,f,m]=jC(i,r.shape,r.dtype,c,s.dtype,l,u);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],s.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}var MK={kernelName:Ol,backendName:"cpu",kernelFunc:OK};function LK(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${s.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.data.get(s.dataId).values),i=n.data.get(r.dataId).values,c=Array.from(n.data.get(a.dataId).values),[l,u,d]=qC(i,r.shape,r.dtype,o,c);return[n.makeTensorInfo(u,r.dtype,l),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var BK={kernelName:Hc,backendName:"cpu",kernelFunc:LK};function zK(e){let{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${s.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,[l,u]=Fw(o,r.shape,r.dtype,i,c,!0);return n.makeTensorInfo(u,r.dtype,l)}var WK={kernelName:Ml,backendName:"cpu",kernelFunc:zK};function VK(e){let{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${s.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,[l,u]=Fw(o,r.shape,r.dtype,i,c);return n.makeTensorInfo(u,r.dtype,l)}var UK={kernelName:Ll,backendName:"cpu",kernelFunc:VK};function GK(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=_.calculateShapes(a,s,i),h=!1,f=n.bufferSync(s),m=n.bufferSync(a),g=n.data.get(o.dataId).values[0],b=x2(f,m,i,p,u,l,c,d,g,h);return n.makeTensorInfo(i,b.dtype,b.values)}var HK={kernelName:Th,backendName:"cpu",kernelFunc:GK};function jK(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=r,i=k.parseAxisParam(o,s.shape)[0],c=_.prepareSplitSize(s,a,i),l=new Array(s.shape.length).fill(0),u=s.shape.slice();return c.map(d=>{let p=[...u];p[i]=d;let h=pi({inputs:{x:s},backend:n,attrs:{begin:l,size:p}});return l[i]+=d,h})}var qK={kernelName:Gc,backendName:"cpu",kernelFunc:jK},KK={kernelName:Bl,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t;ke(n,"square");let s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let i=0;i<s.length;++i){let c=s[i];a[i]=c*c}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},XK=ot(ea,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),YK={kernelName:ea,backendName:"cpu",kernelFunc:XK};function ZK(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:o,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=r;ke(s,"stridedSlice");let{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=Gt.sliceInfo(s.shape,a,o,i,c,l,u,d,p),w;if(m)w=Nt({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||b){k.assert(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);let T=Gt.computeOutShape(y,v,x),C=pi({inputs:{x:s},backend:n,attrs:{begin:y,size:T}});w=Nt({inputs:{x:C},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(C)}else{let T=n.bufferSync(s),C=XC(h,T,x,y);w=n.makeTensorInfo(f,C.dtype,C.values)}return w}var JK={kernelName:jc,backendName:"cpu",kernelFunc:ZK};function QK(e){let{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=r,{data:u,dataSplits:d}=t,p=n.data.get(u.dataId).values,h=n.data.get(d.dataId).values,[f,m]=YC(p,h,s,a,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var eX={kernelName:Ch,backendName:"cpu",kernelFunc:QK};function tX(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.data.get(a.dataId).values,c=n.data.get(o.dataId).values[0],[l,u,d]=ZC(i,c,s),p=u.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var nX={kernelName:Nh,backendName:"cpu",kernelFunc:tX};function rX(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");let o=n.data.get(a.dataId).values,i=JC(o,s);return n.makeTensorInfo(a.shape,"int32",i)}var sX={kernelName:_h,backendName:"cpu",kernelFunc:rX},aX=ot($o,e=>Math.tan(e)),oX={kernelName:$o,backendName:"cpu",kernelFunc:aX},iX=ot(Ro,e=>Math.tanh(e)),cX={kernelName:Ro,backendName:"cpu",kernelFunc:iX};function uX(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;ke(s,"tile");let o=e2(n.bufferSync(s),a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}var lX={kernelName:Qs,backendName:"cpu",kernelFunc:uX};function dX(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:o}=r;ke(s,"topk");let i=n.data.get(s.dataId).values,[c,l]=n2(i,s.shape,s.dtype,a,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}var pX={kernelName:qc,backendName:"cpu",kernelFunc:dX};function hX(e){let{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=n,[u,d,p,h]=s.shape,[f,m]=l!=null?l:[d,p],g=[u,f,m,h],b=k.computeStrides(s.shape),y=b[0],v=b[1],x=b[2],w=k.getTypedArrayFromDType(s.dtype,k.sizeFromShape(g));w.fill(c);let T=r.data.get(s.dataId).values,C=r.data.get(a.dataId).values;for(let F=0;F<u;++F){let O=a.shape[0]===1?C:C.subarray(F*8,F*8+8);for(let $=0;$<f;++$)for(let R=0;R<m;++R)for(let N=0;N<h;++N){let L,G=O[6]*R+O[7]*$+1;if(G===0)continue;let j=(O[0]*R+O[1]*$+O[2])/G,K=(O[3]*R+O[4]*$+O[5])/G,q=k2(j,p,i),Z=k2(K,d,i);switch(o){case"nearest":L=vX(T,d,p,y,v,x,F,Z,q,N,c);break;case"bilinear":L=xX(T,d,p,y,v,x,F,Z,q,N,c);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}let te=F*y+$*v+R*x+N;w[te]=L}return r.makeTensorInfo(g,s.dtype,w)}return{dataId:r.write(w,g,s.dtype),shape:s.shape,dtype:s.dtype}}var fX={kernelName:Kc,backendName:"cpu",kernelFunc:hX};function k2(e,t,n){switch(n){case"reflect":return mX(e,t);case"wrap":return gX(e,t);case"nearest":return yX(e,t);case"constant":default:return bX(e,t)}}function mX(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let r=2*t;n<r&&(n=r*Math.trunc(-n/r)+n),n=n<-t?n+r:-n-1}else if(n>t-1)if(t<=1)n=0;else{let r=2*t;n-=r*Math.trunc(n/r),n>=t&&(n=r-n-1)}return k.clamp(0,n,t-1)}function gX(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let r=t-1;n+=t*(Math.trunc(-n/r)+1)}else if(n>t-1)if(t<=1)n=0;else{let r=t-1;n-=t*Math.trunc(n/r)}return k.clamp(0,n,t-1)}function bX(e,t){return e}function yX(e,t){return k.clamp(0,e,t-1)}function Bd(e,t,n,r,s,a,o,i,c,l,u){let d=o*r+i*s+c*a+l;return 0<=i&&i<t&&0<=c&&c<n?e[d]:u}function vX(e,t,n,r,s,a,o,i,c,l,u){let d=Math.round(i),p=Math.round(c);return Bd(e,t,n,r,s,a,o,d,p,l,u)}function xX(e,t,n,r,s,a,o,i,c,l,u){let d=Math.floor(i),p=Math.floor(c),h=d+1,f=p+1,m=(f-c)*Bd(e,t,n,r,s,a,o,d,p,l,u)+(c-p)*Bd(e,t,n,r,s,a,o,d,f,l,u),g=(f-c)*Bd(e,t,n,r,s,a,o,h,p,l,u)+(c-p)*Bd(e,t,n,r,s,a,o,h,f,l,u);return(h-i)*m+(i-d)*g}function wX(e){let{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;ke(a,"unique");let o=r.data.get(a.dataId).values,{outputValues:i,outputShape:c,indices:l}=r2(o,s,a.shape,a.dtype);return[r.makeTensorInfo(c,a.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}var kX={kernelName:Eh,backendName:"cpu",kernelFunc:wX};function IX(e){let{inputs:t,backend:n,attrs:r}=e,{value:s}=t,{axis:a}=r;a<0&&(a+=s.shape.length);let o=s.shape.length,i=s.shape[a],c=new Array(o-1),l=0;for(let h=0;h<o;h++)h!==a&&(c[l++]=s.shape[h]);let u=new Array(o).fill(0),d=s.shape.slice();d[a]=1;let p=new Array(i);for(let h=0;h<p.length;h++){u[a]=h;let f=pi({inputs:{x:s},backend:n,attrs:{begin:u,size:d}});p[h]=Nt({inputs:{x:f},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(f)}return p}var SX={kernelName:Xc,backendName:"cpu",kernelFunc:IX};function TX(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:o}=r;ke(s,"unsortedSegmentSum");let i=s.shape.length,c=a.shape.length,l=[],u=[],d=i-c,p=a;for(let f=0;f<d;++f){let m=hm({inputs:{input:p},backend:n,attrs:{dim:f+1}});p=m,u.push(m)}for(let f=0;f<o;++f){let m=k.createScalarValue(f,"int32"),g=n.makeTensorInfo([],"int32",m),b=TC({inputs:{a:g,b:p},backend:n}),y=ka({inputs:{x:b},backend:n,attrs:{dtype:"float32"}}),v=dm({inputs:{a:y,b:s},backend:n}),x=Ld({inputs:{x:v},backend:n,attrs:{axis:0,keepDims:!1}});l.push(x),u.push(g),u.push(b),u.push(y),u.push(v),u.push(x)}let h=y2({inputs:l,backend:n,attrs:{axis:0}});return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var CX={kernelName:zl,backendName:"cpu",kernelFunc:TX},NX=[R5,N6,O5,L5,$6,z5,V5,G5,j5,K5,Y5,J5,ej,rj,aj,cj,lj,pj,fj,F5,gj,yj,xj,kj,D6,P6,Sj,_6,Cj,_j,Dj,$j,Ej,Mj,Bj,Pj,Wj,Uj,Hj,qj,Xj,Zj,Jj,eq,nq,sq,aq,iq,oq,Mw,lq,T5,pq,O6,xq,M6,wq,B6,Nq,_q,Aq,W6,$q,Pq,Mq,Bq,Wq,U6,H6,E6,Uq,Nj,Hq,qq,Xq,C5,q6,X6,Zq,Z6,Qq,n8,s8,i8,u8,d8,Q6,f8,g8,y8,x8,k8,p8,S8,C8,t5,_8,D8,P8,r5,a5,L8,W8,G8,i5,j8,K8,X8,v2,Q8,_5,l5,tK,A6,rK,E5,A5,D5,aK,iK,uK,dK,hK,fK,gK,p5,yK,xK,SK,f5,CK,_K,AK,m5,$8,$K,PK,MK,BK,WK,UK,HK,qK,y5,KK,x5,YK,JK,eX,nX,sX,S5,cq,oX,cX,lX,pX,c5,fX,kX,SX,CX,q8];for(let e of NX)Vl(e);var I2={};Ae(I2,{assertNotComplex:()=>Eu,bindCanvasToFramebuffer:()=>BX,bindColorTextureToFramebuffer:()=>bm,bindTextureToProgramUniformSampler:()=>B2,bindTextureUnit:()=>O2,bindVertexBufferToProgramAttribute:()=>Vw,callAndCheck:()=>be,canBeRepresented:()=>T2,createFragmentShader:()=>_2,createFramebuffer:()=>P2,createProgram:()=>E2,createStaticIndexBuffer:()=>F2,createStaticVertexBuffer:()=>D2,createTexture:()=>$2,createVertexShader:()=>N2,getBatchDim:()=>fi,getExtensionOrThrow:()=>Vd,getFramebufferErrorMessage:()=>z2,getMaxTexturesInShader:()=>G2,getNumChannels:()=>MX,getProgramUniformLocation:()=>L2,getProgramUniformLocationOrThrow:()=>M2,getRowsCols:()=>mi,getShapeAs3D:()=>ym,getTextureShapeFromLogicalShape:()=>V2,getWebGLDisjointQueryTimerVersion:()=>H2,getWebGLErrorMessage:()=>C2,getWebGLMaxTextureSize:()=>U2,hasExtension:()=>gr,isCapableOfRenderingToFloatTexture:()=>j2,isDownloadFloatTextureEnabled:()=>q2,isReshapeFree:()=>Gd,isWebGLFenceEnabled:()=>K2,isWebGLVersionEnabled:()=>Gw,linkProgram:()=>A2,resetMaxTextureSize:()=>zX,resetMaxTexturesInShader:()=>WX,unbindColorTextureFromFramebuffer:()=>Uw,unbindTextureUnit:()=>LX,validateFramebuffer:()=>Ud,validateProgram:()=>gm,validateTextureSize:()=>R2});var hi={},zw={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function S2(e,t){hi[e]=t}function ds(e){if(!(e in hi)){let n=EX(e);if(n!==null)hi[e]=n;else return console.log("Could not get context for WebGL version",e),null}let t=hi[e];return t==null||t.isContextLost()?(delete hi[e],ds(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),hi[e])}function _X(e){if(typeof OffscreenCanvas!="undefined"&&e===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function EX(e){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=_X(e);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete hi[e]},!1),e===1?t.getContext("webgl",zw)||t.getContext("experimental-webgl",zw):t.getContext("webgl2",zw)}var zd;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(zd||(zd={}));var mr;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(mr||(mr={}));var on;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(on||(on={}));function Wd(e,t){return[t,e]}function AX(e,t){return e*t}function mm(e){let t=k.sizeFromShape(e),n=Math.ceil(t/4);return k.sizeToSquarishShape(n)}function _u(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function DX(e,t){let[n,r]=_u(e,t);return n*r*4}function Ww(e,t){let n=e,r,s,a,o,i,c,l,u,d,p;return Q().getNumber("WEBGL_VERSION")===2?(r=n.R32F,s=n.R16F,a=n.RGBA16F,o=n.RGBA32F,i=n.RED,l=4,u=1,d=n.HALF_FLOAT,p=n.FLOAT,c=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,o=n.RGBA,i=e.RGBA,l=4,u=4,d=t!=null?t.HALF_FLOAT_OES:null,p=e.FLOAT,c=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:p}}function be(e,t){let n=t();return Q().getBool("DEBUG")&&FX(e),n}function FX(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+C2(e,t))}var $X=596e-10,RX=65504;function T2(e){return!!(Q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||$X<Math.abs(e)&&Math.abs(e)<RX)}function C2(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Vd(e,t){return Ds(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function N2(e,t){let n=Ds(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(be(e,()=>e.shaderSource(n,t)),be(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function _2(e,t){let n=Ds(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(be(e,()=>e.shaderSource(n,t)),be(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw OX(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var PX=/ERROR: [0-9]+:([0-9]+):/g;function OX(e,t){let n=PX.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let r=+n[1],s=e.split(`
`),a=s.length.toString().length+2,o=s.map((d,p)=>k.rightPad((p+1).toString(),a)+d),i=0;for(let d=0;d<o.length;d++)i=Math.max(o[d].length,i);let c=o.slice(0,r-1),l=o.slice(r-1,r),u=o.slice(r);console.log(c.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${k.rightPad(l[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function E2(e){return Ds(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function A2(e,t){if(be(e,()=>e.linkProgram(t)),e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function gm(e,t){if(be(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function D2(e,t){let n=Ds(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return be(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),be(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function F2(e,t){let n=Ds(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return be(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),be(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function MX(){return Q().getNumber("WEBGL_VERSION")===2?1:4}function $2(e){return Ds(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function R2(e,t){let n=Q().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let r=`[${e}x${t}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(e>n||t>n){let r=`[${e}x${t}]`,s=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+s+".")}}function P2(e){return Ds(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Vw(e,t,n,r,s,a,o){let i=e.getAttribLocation(t,n);return i===-1?!1:(be(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),be(e,()=>e.vertexAttribPointer(i,s,e.FLOAT,!1,a,o)),be(e,()=>e.enableVertexAttribArray(i)),!0)}function O2(e,t,n){W2(e,n),be(e,()=>e.activeTexture(e.TEXTURE0+n)),be(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function LX(e,t){W2(e,t),be(e,()=>e.activeTexture(e.TEXTURE0+t)),be(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function M2(e,t,n){return Ds(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function L2(e,t,n){return e.getUniformLocation(t,n)}function B2(e,t,n,r){be(e,()=>O2(e,t,r)),be(e,()=>e.uniform1i(n,r))}function BX(e){be(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),be(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),be(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function bm(e,t,n){be(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),be(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Uw(e,t){be(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),be(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Ud(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+z2(e,t))}function z2(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Ds(e,t,n){let r=be(e,()=>t());if(r==null)throw new Error(n);return r}function W2(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){let s=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${s}.`)}}function fi(e,t=2){return k.sizeFromShape(e.slice(0,e.length-t))}function mi(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function ym(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[fi(e),...mi(e)]),t}function V2(e,t=!1){let n=Q().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,e=e.map((s,a)=>a>=e.length-2?k.nearestLargerEven(e[a]):e[a]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=k.squeezeShape(e).newShape);let r=k.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(e.length===2&&e[0]<=n&&e[1]<=n)return e;if(e.length===3&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let s=fi(e),a=2,o=2;return e.length&&([a,o]=mi(e)),r=s*(a/2)*(o/2),k.sizeToSquarishShape(r).map(i=>i*2)}return k.sizeToSquarishShape(r)}function vm(e){return e%2==0}function Gd(e,t){if(e=e.slice(-2),t=t.slice(-2),k.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r||vm(n)&&vm(r)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&vm(e[0])&&vm(t[0])}var xm,wm;function U2(e){if(xm==null){let t=ds(e);xm=t.getParameter(t.MAX_TEXTURE_SIZE)}return xm}function zX(){xm=null}function WX(){wm=null}function G2(e){if(wm==null){let t=ds(e);wm=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,wm)}function H2(e){if(e===0)return 0;let t,n=ds(e);return gr(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:gr(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function gr(e,t){return e.getExtension(t)!=null}function Gw(e){try{if(ds(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function j2(e){if(e===0)return!1;let t=ds(e);if(e===1){if(!gr(t,"OES_texture_float"))return!1}else if(!gr(t,"EXT_color_buffer_float"))return!1;return Hw(t)}function q2(e){if(e===0)return!1;let t=ds(e);if(e===1){if(!gr(t,"OES_texture_float")||!gr(t,"WEBGL_color_buffer_float"))return!1}else{if(gr(t,"EXT_color_buffer_float"))return Hw(t);let r="EXT_color_buffer_half_float";if(gr(t,r)){let s=t.getExtension(r);return VX(t,s)}return!1}return Hw(t)}function Hw(e){let t=Ww(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,r,s,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),o}function VX(e,t){let n=Ww(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);let s=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,s,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(o),i}function K2(e){return e!==2?!1:ds(e).fenceSync!=null}function Eu(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&k.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Ne=Q();Ne.registerFlag("HAS_WEBGL",()=>Ne.getNumber("WEBGL_VERSION")>0);Ne.registerFlag("WEBGL_VERSION",()=>Gw(2)?2:Gw(1)?1:0);Ne.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ne.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ne.get("WEBGL_VERSION")===2);Ne.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ne.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ne.registerFlag("WEBGL_PACK",()=>Ne.getBool("HAS_WEBGL"));Ne.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_CLIP",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_REDUCE",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_CONV_IM2COL",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>U2(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>G2(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=Ne.getNumber("WEBGL_VERSION");return e===0?0:H2(e)});Ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ne.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Yl.isMobile());Ne.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>j2(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ne.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ne.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ne.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>q2(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_FENCE_API_ENABLED",()=>K2(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ne.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ne.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});Ne.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Yl.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});Ne.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ne.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ne.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ne.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function In(){let e,t,n,r,s,a,o,i,c,l;return Q().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",o="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,c="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",o="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,c=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:c,defineRound:l}}function gi(e,t,n="index"){let r=k.computeStrides(t);return r.map((s,a)=>{let o=`int ${e[a]} = ${n} / ${s}`,i=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${s}`:`index -= ${e[a]} * ${s}`;return`${o}; ${i};`}).join("")}function km(e,t,n="index"){let r=k.computeStrides(t);return r.map((s,a)=>{let o=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,i=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${o}; ${i};`}).join("")}function UX(e,t){let n=e.length,r=e.map(a=>`${t}[${a}]`),s=new Array(n-1);s[n-2]=r[n-1];for(let a=n-3;a>=0;--a)s[a]=`(${s[a+1]} * ${r[a+1]})`;return s}function GX(e,t,n="index"){let r=e.map((a,o)=>o),s=UX(r,t);return s.map((a,o)=>{let i=`int ${e[o]} = ${n} / ${s[o]}`,c=o===s.length-1?`int ${e[o+1]} = ${n} - ${e[o]} * ${s[o]}`:`index -= ${e[o]} * ${s[o]}`;return`${i}; ${c};`}).join("")}function jw(e){let t=k.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function qw(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var X2=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:Y2}=_;function HX(e,t,n){let r=[];if(e.forEach(h=>{let f=k.sizeFromShape(h.shapeInfo.logicalShape);if(h.shapeInfo.isUniform?r.push(`uniform float ${h.name}${f>1?`[${f}]`:""};`):(r.push(`uniform sampler2D ${h.name};`),r.push(`uniform int offset${h.name};`)),n.enableShapeUniforms){let{uniformShape:m}=Kw(n.packedInputs,h.shapeInfo.logicalShape,h.shapeInfo.texShape);switch(m.length){case 1:r.push(`uniform int ${h.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${h.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${h.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${h.name}Shape;`);break;default:break}r.push(`uniform ivec2 ${h.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break;default:break}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(h=>{r.push(`uniform ${h.type} ${h.name}${h.arrayIndex?`[${h.arrayIndex}]`:""};`)});let s=r.join(`
`),a=e.map(h=>jX(h,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),o=t.texShape,i=In(),c=XX(i),l,u,d=JX(i);return t.isPacked?(l=qX(t.logicalShape,o,n.enableShapeUniforms),u=ZX(i)):(l=KX(t.logicalShape,o,n.enableShapeUniforms),u=YX(i)),n.packedInputs&&(d+=n7),[d,c,u,s,l,a,n.userCode].join(`
`)}function Au(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return f7(e,t);case 1:return g7(e,t);case 2:return y7(e,t);case 3:return x7(e,t);case 4:return k7(e,t);case 5:return I7(e);case 6:return S7(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function Z2(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return h7(e);case 1:return m7(e,t);case 2:return b7(e,t);case 3:return v7(e,t);default:return w7(e,t)}}function jX(e,t,n=!1,r){let s="";n?s+=Z2(e,r):s+=Au(e,r);let a=e.shapeInfo.logicalShape,o=t.logicalShape;return a.length<=o.length&&(n?s+=T7(e,t):s+=C7(e,t)),s}function qX(e,t,n){switch(e.length){case 0:return J2();case 1:return r7(e,t,n);case 2:return d7(e,t,n);case 3:return a7(e,t,n);default:return i7(e,t,n)}}function KX(e,t,n){switch(e.length){case 0:return J2();case 1:return s7(e,t,n);case 2:return p7(e,t,n);case 3:return o7(e,t,n);case 4:return c7(e,t,n);case 5:return u7(e,t);case 6:return l7(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function XX(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function YX(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function ZX(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function JX(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${QX}
    ${e7}
    ${t7}
  `}var QX=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,e7=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,t7=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,n7=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function J2(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function r7(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return r[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function s7(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function a7(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec3(b, r, c);
    }
  `}function o7(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${km(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let r=gi(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function i7(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2),o=a,i="",c="b, r, c";for(let l=2;l<e.length-1;l++)o*=e[e.length-l-1],i=`
      int b${l} = index / ${o};
      index -= b${l} * ${o};
    `+i,c=`b${l}, `+c;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${i}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec${e.length}(${c});
    }
  `}function c7(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${km(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let r=gi(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function u7(e,t){let n=gi(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function l7(e,t){let n=gi(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function d7(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(k.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;let s=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec2(r, c);
    }
  `}function p7(e,t,n){return k.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function bi(e){return`offset${e}`}function h7(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=In();return`
    vec4 ${n}() {
      return ${r.texture2D}(${t}, halfCR);
    }
  `}function f7(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[s,a]=e.shapeInfo.texShape;if(s===1&&a===1)return`
      float ${r}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=bi(n);if(t)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});
      return sampleTexture(${n}, uv);
    }
  `;let[i,c]=e.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${i}, ${c}, ${o});
      return sampleTexture(${n}, uv);
    }
  `}function m7(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=In();if(t)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${n}, uv);
    }
  `;let o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${a.texture2D}(${n}, uv);
    }
  `}function g7(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${Du(e)}
      }
    `;let s=e.shapeInfo.texShape,a=s[0],o=s[1];if(o===1&&a===1)return`
      float ${r}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=bi(n);return o===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);
        return sampleTexture(${n}, uv);
      }
    `:a===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${a}, ${o}, index + ${i});
      return sampleTexture(${n}, uv);
    }
  `}function b7(e,t){let n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,o=a[0],i=a[1],c=In();if(a!=null&&k.arraysEqual(n,a))return t?`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${c.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);

        return ${c.texture2D}(${r}, uv);
      }
    `;if(t)return`
    vec4 ${s}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${c.texture2D}(${r}, uv);
    }
  `;let l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=Math.ceil(n[1]/2);return`
    vec4 ${s}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${l[0]}, ${l[1]}, row, col);
      return ${c.texture2D}(${r}, uv);
    }
  `}function y7(e,t){let n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(a!=null&&k.arraysEqual(n,a)){if(t)return`
      float ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;let p=a[0],h=a[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${h}.0, ${p}.0);
      return sampleTexture(${r}, uv);
    }
  `}let{newShape:o,keptDims:i}=k.squeezeShape(n),c=o;if(c.length<n.length){let p=Fu(e,c),h=["row","col"];return`
      ${Au(p,t)}
      float ${s}(int row, int col) {
        return ${s}(${$u(h,i)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${Du(e)}
      }
    `;let l=a[0],u=a[1],d=bi(r);return u===1?t?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${r}, uv);
    }
  `:l===1?t?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:t?`
      float ${s}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${d};
    vec2 uv = uvFromFlat(${l}, ${u}, index);
    return sampleTexture(${r}, uv);
  }
`}function v7(e,t){let n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(n[0]===1){let p=n.slice(1),h=[1,2],f=Fu(e,p),m=["b","row","col"];return`
        ${Z2(f,t)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${$u(m,h)});
        }
      `}let i=In();if(t)return`
    vec4 ${s}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${r}, uv);
    }
  `;let c=o[0],l=o[1],u=Math.ceil(n[2]/2),d=u*Math.ceil(n[1]/2);return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${c}, ${l}, ${d}, ${u}, b, row, col);
      return ${i.texture2D}(${r}, uv);
    }
  `}function x7(e,t){let n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],o=n[2],{newShape:i,keptDims:c}=k.squeezeShape(n),l=i;if(l.length<n.length){let m=Fu(e,l),g=["row","col","depth"];return`
        ${Au(m,t)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${$u(g,c)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${o}, 1)));
        ${Du(e)}
      }
    `;let u=e.shapeInfo.texShape,d=u[0],p=u[1],h=e.shapeInfo.flatOffset;if(p===a&&h==null)return t?`
      float ${s}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${d}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(p===o&&h==null)return t?`
      float ${s}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `;let f=bi(r);return t?`
    float ${s}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * ${a} + col * ${o} + depth + ${f};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${p}, index);
        return sampleTexture(${r}, uv);
      }
  `}function w7(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=In();if(t)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);
    }
  `;let a=e.shapeInfo.logicalShape,o=a.length,i=e.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=c[0],u=c[1],d=Math.ceil(a[o-1]/2),p=d*Math.ceil(a[o-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<o-1;m++)h=`int b${m}, `+h,p*=a[o-m-1],f=`b${m} * ${p} + `+f;return`
    vec4 ${r}(${h}) {
      int index = ${f};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${l});
      return ${s.texture2D}(${n}, uv);
    }
  `}function k7(e,t){let n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],o=n[2]*a,i=n[1]*o,{newShape:c,keptDims:l}=k.squeezeShape(n);if(c.length<n.length){let y=Fu(e,c),v=["row","col","depth","depth2"];return`
      ${Au(y,t)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${$u(v,l)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${o}, ${a}, 1)));
        ${Du(e)}
      }
    `;let u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(h===i&&u==null)return t?`
      float ${s}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(h===a&&u==null)return t?`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${r}, uv);
      }
    `;let b=bi(r);return t?`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${p}, ${h}, index + ${b});
      return sampleTexture(${r}, uv);
    }
  `}function I7(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,o=t[2]*a,i=t[1]*o,{newShape:c,keptDims:l}=k.squeezeShape(t);if(c.length<t.length){let m=Fu(e,c),g=["row","col","depth","depth2","depth3"];return`
      ${Au(m)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${$u(g,l)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${o}, ${a}, ${s})) +
          depth3;
        ${Du(e)}
      }
    `;let u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1];if(h===i&&u==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${a}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(h===s&&u==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=bi(n);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} + depth * ${a} +
          depth2 * ${s} + depth3 + ${f};
      vec2 uv = uvFromFlat(${p}, ${h}, index);
      return sampleTexture(${n}, uv);
    }
  `}function S7(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=k.squeezeShape(t);if(s.length<t.length){let g=Fu(e,s),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${Au(g)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${$u(b,a)});
      }
    `}let o=t[5],i=t[4]*o,c=t[3]*i,l=t[2]*c,u=t[1]*l;if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${l}, ${c}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${Du(e)}
      }
    `;let d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===u&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${c}, ${i}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===o&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=bi(n);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${l} + depth * ${c} +
          depth2 * ${i} + depth3 * ${o} + depth4 + ${m};
      vec2 uv = uvFromFlat(${h}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function Du(e){let t=e.name,n=k.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function T7(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=Y2(e.shapeInfo.logicalShape,t.logicalShape),c=mt(o),l=o-a,u,d=["x","y","z","w","u","v"];a===0?u="":o<2&&i.length>=1?u="coords = 0;":u=i.map(y=>`coords.${d[y+l]} = 0;`).join(`
`);let p="";o<2&&a>0?p="coords":p=e.shapeInfo.logicalShape.map((y,v)=>`coords.${d[v+l]}`).join(", ");let h="return outputValue;",m=k.sizeFromShape(e.shapeInfo.logicalShape)===1,b=k.sizeFromShape(t.logicalShape)===1;if(a===1&&!m&&!b)h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!b)o===1?h=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:h=`
        return vec4(outputValue.x);
      `;else if(i.length){let y=a-2,v=a-1;i.indexOf(y)>-1&&i.indexOf(v)>-1?h="return vec4(outputValue.x);":i.indexOf(y)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(v)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${s}() {
      ${c} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${r}(${p});
      ${h}
    }
  `}function C7(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,c=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===c&&e.shapeInfo.flatOffset==null&&k.arraysEqual(o,a))return`
      float ${s}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let l=mt(c),u=Y2(e.shapeInfo.logicalShape,t.logicalShape),d=c-i,p,h=["x","y","z","w","u","v"];i===0?p="":c<2&&u.length>=1?p="coords = 0;":p=u.map(m=>`coords.${h[m+d]} = 0;`).join(`
`);let f="";return c<2&&i>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${h[g+d]}`).join(", "),`
    float ${s}() {
      ${l} coords = getOutputCoords();
      ${p}
      return get${r}(${f});
    }
  `}function mt(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Kw(e,t,n){let{newShape:r,keptDims:s}=k.squeezeShape(t),a=t.length,o=e&&a===3&&t[0]===1,i=o?t.slice(1):r,c=!e&&a>1&&!k.arraysEqual(t,n)&&r.length<a||o;return{useSqueezeShape:c,uniformShape:c?i:t,keptDims:s}}function Fu(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function $u(e,t){return t.map(n=>e[n]).join(", ")}function N7(e,t,n,r){let s=n.map((x,w)=>{let T={logicalShape:x.shape,texShape:x.isUniform?null:x.texData.texShape,isUniform:x.isUniform,isPacked:x.isUniform?!1:x.texData.isPacked,flatOffset:null};return x.texData!=null&&x.texData.slice!=null&&x.texData.slice.flatOffset>0&&(T.flatOffset=x.texData.slice.flatOffset),{name:t.variableNames[w],shapeInfo:T}}),a=s.map(x=>x.shapeInfo),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},i=HX(s,o,t),c=_2(e.gl,i),l=e.createProgram(c),u=null,d=e.getUniformLocation(l,"NAN",!1);Q().getNumber("WEBGL_VERSION")===1&&(u=e.getUniformLocation(l,"INFINITY",!1));let p=!1,h={},f={},m={};for(let x=0;x<t.variableNames.length;x++){let w=t.variableNames[x];h[w]=e.getUniformLocation(l,w,p),h[`offset${w}`]=e.getUniformLocation(l,`offset${w}`,p),t.enableShapeUniforms&&(f[`${w}Shape`]=e.getUniformLocation(l,`${w}Shape`,p),m[`${w}TexShape`]=e.getUniformLocation(l,`${w}TexShape`,p))}let g,b,y;t.enableShapeUniforms&&(g=e.getUniformLocation(l,"outShape",p),y=e.getUniformLocation(l,"outShapeStrides",p),b=e.getUniformLocation(l,"outTexShape",p));let v=[];return t.customUniforms&&t.customUniforms.forEach((x,w)=>{v[w]=e.getUniformLocation(l,x.name,p)}),{program:t,fragmentShader:c,source:i,webGLProgram:l,uniformLocations:h,customUniformLocations:v,inShapeInfos:a,outShapeInfo:o,infLoc:u,nanLoc:d,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:y,outTexShapeLocation:b}}function Q2(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,r)=>{let s=n.logicalShape,a=t[r],o=a.shape;if(!k.arraysEqual(s,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${o} must match`);if(n.isUniform&&a.isUniform)return;let i=n.texShape,c=a.isUniform?null:a.texData.texShape;if(!k.arraysEqual(i,c))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${c} must match`)})}function _7(e,t,n,r,s){t.program.enableShapeUniforms||(Q2(t.inShapeInfos,n),Q2([t.outShapeInfo],[r]));let a=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a,o[0],o[1]):e.setOutputMatrixTexture(a,o[0],o[1]),e.setProgram(t.webGLProgram),Q().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((c,l)=>{let u=t.program.variableNames[l],d=t.uniformLocations[u],p=t.uniformLocations[`offset${u}`],h=t.inShapesLocations[`${u}Shape`],f=t.inTexShapesLocations[`${u}TexShape`];if(h){let{uniformShape:m}=Kw(t.program.packedInputs,c.shape,c.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(h,new Int32Array(m));break;case 2:e.gl.uniform2iv(h,new Int32Array(m));break;case 3:e.gl.uniform3iv(h,new Int32Array(m));break;case 4:e.gl.uniform4iv(h,new Int32Array(m));break;default:break}}if(f&&e.gl.uniform2i(f,c.texData.texShape[0],c.texData.texShape[1]),d!=null){if(c.isUniform){if(k.sizeFromShape(c.shape)<2)e.gl.uniform1f(d,c.uniformValues[0]);else{let m=c.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(d,m)}return}c.texData.slice!=null&&p!=null&&e.gl.uniform1i(p,c.texData.slice.flatOffset),e.setInputMatrixTexture(c.texData.texture,d,l)}});let i=t.outShapeLocation;if(i)switch(r.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(r.shape));break;default:break}if(t.outShapeStridesLocation){let c=k.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(c));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(c));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(c));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s&&t.program.customUniforms.forEach((c,l)=>{let u=t.customUniformLocations[l],d=s[l];if(c.type==="float")e.gl.uniform1fv(u,d);else if(c.type==="vec2")e.gl.uniform2fv(u,d);else if(c.type==="vec3")e.gl.uniform3fv(u,d);else if(c.type==="vec4")e.gl.uniform4fv(u,d);else if(c.type==="int")e.gl.uniform1iv(u,d);else if(c.type==="ivec2")e.gl.uniform2iv(u,d);else if(c.type==="ivec3")e.gl.uniform3iv(u,d);else if(c.type==="ivec4")e.gl.uniform4iv(u,d);else throw Error(`uniform type ${c.type} is not supported yet.`)}),e.executeProgram()}function E7(e,t,n){let r="";t.concat(n).forEach(o=>{let i=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!o.isUniform){let c=o.texData.texShape,{useSqueezeShape:l,uniformShape:u,keptDims:d}=Kw(e.packedInputs,o.shape,c),p="",h="",f="";if(u.length===1&&e.packedInputs){let w=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)];p=`${w[0]>1}_${w[1]>1}`}else if(u.length===2&&!e.packedInputs)h=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!e.packedInputs){let w=k.computeStrides(u);f=`${w[0]===c[1]}_${w[w.length-1]===c[1]}`}let m=o.shape.length,g=u.length===2&&k.arraysEqual(o.shape,c),b=k.sizeFromShape(o.shape)===1,y=_.getBroadcastDims(o.shape,n.shape),v=!e.packedInputs&&m===n.shape.length&&k.arraysEqual(c,n.texData.texShape),x=e.packedInputs||u.length>2?"":`${c[0]>1}_${c[1]>1}`;r+=`${m}_${v}_${l?d:""}_${u.length}_${b}_${y}_${g}_${p}_${h}_${f}_${x}_${i}`}else{let c=o.isUniform?"uniform":o.texData.texShape;r+=`${o.shape}_${c}_${i}`}});let s=e.userCode,a=e.constructor.name;return a+="_"+r+"_"+s+`${Q().getNumber("WEBGL_VERSION")}`,a}function Wn(e){return Q().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var A7=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=zd.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=In();this.outputShape=e,this.enableShapeUniforms=Wn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?km(["r","c","d"],e):gi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},D7=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=zd.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=In();this.outputShape=e,this.enableShapeUniforms=Wn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?km(["r","c","d"],e):gi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},F7=class{constructor(e){this.variableNames=["A"],this.outTexUsage=mr.DOWNLOAD;let t=In();this.outputShape=e,this.userCode=`
      ${X2}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},$7=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=mr.DOWNLOAD;let t=In();this.outputShape=e,this.userCode=`
      ${X2}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},R7=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=In();this.outputShape=e,this.enableShapeUniforms=Wn(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?qw():jw(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${r}, 0., 0., 0.);
      }
    `}},P7=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=In();this.outputShape=e,this.enableShapeUniforms=Wn(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let o=0;o<=1;o++){let i=a*2+o;r+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${i}] = values[0];
            } else if (offset == 1) {
              result[${i}] = values[1];
            } else if (offset == 2) {
              result[${i}] = values[2];
            } else {
              result[${i}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?qw():jw(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${n.output} = ${s};
        }
    `}},eN={};Ae(eN,{bindVertexProgramAttributeStreams:()=>uN,createBufferFromOutputTexture:()=>pN,createFloat16MatrixTexture:()=>aN,createFloat16PackedMatrixTexture:()=>cN,createFloat32MatrixTexture:()=>sN,createIndexBuffer:()=>rN,createPackedMatrixTexture:()=>iN,createUnsignedBytesMatrixTexture:()=>oN,createVertexBuffer:()=>nN,createVertexShader:()=>tN,downloadByteEncodedFloatMatrixFromOutputTexture:()=>fN,downloadFloat32MatrixFromBuffer:()=>hN,downloadMatrixFromPackedOutputTexture:()=>gN,downloadPackedMatrixFromBuffer:()=>mN,getInternalFormatForFloat16MatrixTexture:()=>Yw,getInternalFormatForFloat16PackedMatrixTexture:()=>Qw,getInternalFormatForFloat32MatrixTexture:()=>Xw,getInternalFormatForPackedMatrixTexture:()=>Jw,getInternalFormatForUnsignedBytesMatrixTexture:()=>Zw,uploadDenseMatrixToTexture:()=>lN,uploadPixelDataToTexture:()=>dN});function tN(e){let t=In(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return N2(e,n)}function nN(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return D2(e,t)}function rN(e){let t=new Uint16Array([0,1,2,2,1,3]);return F2(e,t)}function Hd(e,t,n,r,s,a){R2(t,n);let o=$2(e),i=e.TEXTURE_2D;return be(e,()=>e.bindTexture(i,o)),be(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),be(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),be(e,()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST)),be(e,()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST)),Q().getNumber("WEBGL_VERSION")===1?be(e,()=>e.texImage2D(i,0,r,t,n,0,s,a,null)):be(e,()=>e.texStorage2D(i,1,r,t,n)),be(e,()=>e.bindTexture(e.TEXTURE_2D,null)),o}function Xw(e){return e.internalFormatFloat}function sN(e,t,n,r){let[s,a]=Wd(t,n);return Hd(e,s,a,Xw(r),r.textureFormatFloat,e.FLOAT)}function Yw(e){return e.internalFormatHalfFloat}function aN(e,t,n,r){let[s,a]=Wd(t,n);return Hd(e,s,a,Yw(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function Zw(e){return e.downloadTextureFormat}function oN(e,t,n,r){let[s,a]=Wd(t,n);return Hd(e,s,a,Zw(r),e.RGBA,e.UNSIGNED_BYTE)}function Jw(e){return e.internalFormatPackedFloat}function iN(e,t,n,r){let[s,a]=_u(t,n);return Hd(e,s,a,Jw(r),e.RGBA,e.FLOAT)}function Qw(e){return e.internalFormatPackedHalfFloat}function cN(e,t,n,r){let[s,a]=_u(t,n);return Hd(e,s,a,Qw(r),e.RGBA,r.textureTypeHalfFloat)}function uN(e,t,n){let r=0,s=3*4,a=3*4+2*4;return be(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Vw(e,t,"clipSpacePos",n,3,a,r)&&Vw(e,t,"uv",n,2,a,s)}function lN(e,t,n,r,s,a){be(e,()=>e.bindTexture(e.TEXTURE_2D,t));let o,i,c;s instanceof Uint8Array?(o=new Uint8Array(n*r*4),i=e.UNSIGNED_BYTE,c=e.RGBA):(o=new Float32Array(n*r*4),i=e.FLOAT,c=a.internalFormatPackedFloat),o.set(s),Q().getNumber("WEBGL_VERSION")===2?be(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,i,o)):be(e,()=>e.texImage2D(e.TEXTURE_2D,0,c,n,r,0,e.RGBA,i,o)),be(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function dN(e,t,n){be(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?Q().getNumber("WEBGL_VERSION")===2?(be(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)),e.flush()):be(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):Q().getNumber("WEBGL_VERSION")===2?(be(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)),e.flush()):be(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),be(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function pN(e,t,n,r){let s=e.createBuffer();be(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s));let i=4*4*t*n;return be(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)),be(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),be(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),s}function hN(e,t,n){let r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function fN(e,t,n,r){let[s,a]=Wd(t,n),o=4,i=new Uint8Array(AX(t*n,o));return be(e,()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function mN(e,t,n,r,s,a,o,i){let c=e,l=new Float32Array(DX(a,o));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}function gN(e,t,n){let r=new Float32Array(t*n*4);return be(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}var bN=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=Q().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,S2(t,e)):this.gl=ds(t);let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(Q().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Vd(this.gl,s),gr(this.gl,a))this.textureHalfFloatExtension=Vd(this.gl,a);else if(Q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),gr(this.gl,r))this.colorBufferHalfFloatExtension=Vd(this.gl,r);else if(Q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",gr(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(gr(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=nN(this.gl),this.indexBuffer=rN(this.gl),this.framebuffer=P2(this.gl),this.textureConfig=Ww(this.gl,this.textureHalfFloatExtension)}get debug(){return Q().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;be(e,()=>e.finish()),be(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),be(e,()=>e.deleteFramebuffer(this.framebuffer)),be(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),be(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),be(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),sN(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),aN(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),oN(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),dN(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),lN(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),cN(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),iN(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Uw(this.gl,this.framebuffer),this.outputTexture=null),be(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>fN(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return mN(this.gl,e,t,n,r,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return hN(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=pN(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Q().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=r.clientWaitSync(s,0,0);return a===r.ALREADY_SIGNALED||a===r.CONDITION_SATISFIED},t=s}else Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>gN(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=tN(t));let n=E2(t);return be(t,()=>t.attachShader(n,this.vertexShader)),be(t,()=>t.attachShader(n,e)),A2(t,n),this.debug&&gm(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=uN(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&be(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&gm(this.gl,this.program),be(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?M2(this.gl,e,t):L2(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),be(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),B2(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,s]=_u(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&gm(this.gl,this.program),Ud(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),be(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),be(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Vd(this.gl,Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,r=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(r.TIME_ELAPSED_EXT,s),s}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await k.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,r=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),r=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=O7(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&k.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),bm(this.gl,e,this.framebuffer),this.debug&&Ud(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(bm(this.gl,this.outputTexture,this.framebuffer),this.debug&&Ud(this.gl)):Uw(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;bm(r,e,this.framebuffer),this.debug&&Ud(r),this.outputTexture=e,be(r,()=>r.viewport(0,0,t,n)),be(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),be(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function O7(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:M7,bincountImpl:yN,bincountReduceImpl:L7,ceilImpl:B7,concatImpl:z7,equalImpl:W7,expImpl:V7,expm1Impl:U7,floorImpl:G7,gatherNdImpl:H7,gatherV2Impl:j7,greaterImpl:q7,greaterEqualImpl:K7,lessImpl:X7,lessEqualImpl:Y7,linSpaceImpl:Z7,logImpl:J7,maxImpl:Q7,maximumImpl:e9,minimumImpl:t9,multiplyImpl:n9,negImpl:r9,notEqualImpl:s9,prodImpl:a9,rangeImpl:o9,rsqrtImpl:i9,sigmoidImpl:c9,simpleAbsImpl:vN,sliceImpl:u9,sparseFillEmptyRowsImpl:l9,sparseReshapeImpl:d9,sparseSegmentReductionImpl:xN,sqrtImpl:p9,stridedSliceImpl:h9,stringNGramsImpl:f9,stringSplitImpl:m9,stringToHashBucketFastImpl:g9,subImpl:b9,tileImpl:y9,topKImpl:v9,transposeImpl:e1,uniqueImpl:x9}=vC;function wN(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function Sn(e,t){return t===1?[e]:wN(e,t)}function w9(e,t){if(e===1)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}var k9=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Wn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=Sn("rc",this.rank),n=mt(this.rank),r=this.getOutOfBoundsCondition(t),s=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${n===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)s=`${e[e.length-1-a]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc),
              rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1),
              0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},kN=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Wn(this.outputShape.length);let n="";for(let r=0;r<4;r++){let s="thisRC = rc;";r%2==1&&(s+="thisRC.z += 1;"),r>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${I9(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?qw():jw(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function I9(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?GX(["r","c","d"],"inputShape"):gi(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var S9=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let r=SN(t,n),s=TN(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let a=IN(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let i=this.freeTextures[s].shift();return this.usedTextures[s].push(i),i}let o;return r===on.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===on.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===on.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===on.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===on.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,n,r){if(this.freeTextures==null)return;let s=SN(n,r),a=TN(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);let o=IN(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),i=Q().get("WEBGL_DELETE_TEXTURE_THRESHOLD");i!==-1&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;let c=this.usedTextures[a],l=c.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(l,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function T9(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function IN(e,t,n,r,s){let a=C9(t,r),o;if(s){let[c,l]=_u(e[0],e[1]);o=c*l}else{let[c,l]=Wd(e[0],e[1]);o=c*l}let i=T9(n,a);return o*i}function C9(e,t){switch(e){case on.PACKED_2X2_FLOAT32:return Jw(t);case on.PACKED_2X2_FLOAT16:return Qw(t);case on.UNPACKED_FLOAT32:return Xw(t);case on.UNPACKED_FLOAT16:return Yw(t);case on.PACKED_4X1_UNSIGNED_BYTE:return Zw(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function N9(e){return Q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?on.PACKED_2X2_FLOAT32:on.UNPACKED_FLOAT32:e?on.PACKED_2X2_FLOAT16:on.UNPACKED_FLOAT16}function SN(e,t){if(e===mr.UPLOAD)return on.PACKED_2X2_FLOAT32;if(e===mr.RENDER||e==null)return N9(t);if(e===mr.DOWNLOAD||e===mr.PIXELS)return on.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function TN(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var Sa=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Wn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},qr="if (isnan(x)) return x;",_9="return x;",CN="return abs(x);",E9="return (x >= 0.0) ? x : (exp(x) - 1.0);",A9=qr+`
  return (x < 0.0) ? 0.0 : x;
`,D9=qr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Im="return x;",F9="return 1.0 / (1.0 + exp(-1.0 * x));",$9="return x;",R9=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,P9=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,O9=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,M9="return 1.0 / (1.0 + exp(-1.0 * x));",Ru=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Wn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},L9=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Wn(this.outputShape.length);let t=e.length,n=Sn("rc",t),r=mt(t),s=w9(t,n),a=n.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}},B9=rs.whereImpl,z9=1e-7,W9=1e-4,Sm={};function V9(e){return e in Sm||(Sm[e]={}),Sm[e]}var U9=Q().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),G9=600;function H9(){return Q().global.screen==null?1024:Q().global.screen.height*Q().global.screen.width*window.devicePixelRatio*G9/1024/1024}var Tm=class extends wl{constructor(e){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Q().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(e==null){let t=ds(Q().getNumber("WEBGL_VERSION"));this.binaryCache=V9(Q().getNumber("WEBGL_VERSION")),this.gpgpu=new bN(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new S9(this.gpgpu),this.numMBBeforeWarning=H9(),this.texData=new jp(this,ks())}nextDataId(){return Tm.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Q().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Q().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:mr.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,r,s){if(Q().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:mr.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:o,isPacked:i}=t;if(a!=null){let d;i?d=new Ru(o,Im):d=new Sa(o,Im);let p=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:r}],r),h=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),h}if(n!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return n;let c=this.activeTimers!=null,l;c&&(l=k.now());let u;if(r==="complex64"){let d=this.readSync(s.real.dataId),p=this.readSync(s.imag.dataId);u=_.mergeRealAndImagArrays(d,p)}else u=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=k.now()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(f=>h.push(f))}let t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:o,isPacked:i}=t;if(s!=null){let h;i?h=new Ru(r,Im):h=new Sa(r,Im);let f=this.runWebGLProgram(h,[{dataId:e,shape:r,dtype:a}],a),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(n!=null)return this.convertAndCacheOnCPU(e);if(Q().getBool("DEBUG")&&!Q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&Q().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,l;if(a!=="complex64"&&Q().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let h=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(h.texture,...mm(r))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let u;if(a==="complex64"){let h=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),f=h[0],m=h[1];u=_.mergeRealAndImagArrays(f,m)}else if(c==null)u=this.getValuesFromTexture(e);else{let h=k.sizeFromShape(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,h)}if(l!=null&&this.disposeIntermediateTensorInfo(l),c!=null){let h=this.gpgpu.gl;be(h,()=>h.deleteBuffer(c))}let d=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(h=>h(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ks().removeDataId(e,this),this.pendingDeletes--),d}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(r=>k.decodeString(r))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Be(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!T2(n))throw Q().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=k.sizeFromShape(t);if(Q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let d=this.decode(e),p=this.texData.get(d.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(p.texture,...mm(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(d),h}let a=Q().getBool("WEBGL_PACK")&&r===!0,o=a?ym(t):t,i=a?new $7(o):new F7(o),c=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),l=this.texData.get(c.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(c),u}timerAvailable(){return Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){let t=this.activeTimers,n=[],r=!1;this.programTimersStack==null?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=k.flatten(this.activeTimers.map(i=>i.query)).filter(i=>i!=null),a=k.flatten(this.activeTimers.map(i=>i.name)).filter(i=>i!=null);this.activeTimers=t,r&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let i=await Promise.all(s);o.kernelMs=k.sum(i),o.getExtraProfileInfo=()=>i.map((c,l)=>({name:a[l],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:k.now(),endMs:null}}endTimer(e){return Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=k.now(),e)}async getQueryTime(e){if(Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));let l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=U9){return Q().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&k.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){_.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return B9(e.shape,t)}packedUnaryOp(e,t,n){let r=new Ru(e.shape,t),s=this.compileAndRun(r,[e],n);return ks().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let r=vN(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(Q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,CN,e.dtype);let t=new Sa(e.shape,CN),n=this.compileAndRun(t,[e]);return ks().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if(t==="string"&&n!=null&&n.length>0&&k.isString(n[0])){let s=n.map(a=>k.encodeString(a));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:r}=this.makeTensorInfo(e,t,n);return ks().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){let t=new L9(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new k9(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[fi(e.shape),...mi(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[fi(t),...mi(t)],a=new kN(s,n),o=!0,i=[n],c=this.runWebGLProgram(a,[r],e.dtype,i,o);return{dataId:c.dataId,shape:t,dtype:c.dtype}}decode(e){let t=this.texData.get(e),{isPacked:n,shape:r,dtype:s}=t,a=ym(r),o,i=mm(a);n?o=new D7(a):o=new A7(a);let c=!0,l=[i],u=this.runWebGLProgram(o,[{shape:a,dtype:s,dataId:e}],s,l,c);return{dtype:s,shape:r,dataId:u.dataId}}runWebGLProgram(e,t,n,r,s=!1){let a=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(a.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===zd.DENSE){let m=mm(e.outputShape);o.texShape=m.map(g=>g*2)}if(e.outTexUsage!=null&&(o.usage=e.outTexUsage),k.sizeFromShape(a.shape)===0)return o.values=k.getTypedArrayFromDType(a.dtype,0),a;let i=[],c=t.map(m=>{if(m.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let g=this.texData.get(m.dataId);if(g.texture==null){if(!e.packedInputs&&k.sizeFromShape(m.shape)<=Q().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:m.shape,texData:null,isUniform:!0,uniformValues:g.values};e.packedInputs&&(g.isPacked=!0,g.shape=m.shape)}if(this.uploadToGPU(m.dataId),!!g.isPacked!=!!e.packedInputs)m=g.isPacked?this.unpackTensor(m):this.packTensor(m),i.push(m),g=this.texData.get(m.dataId);else if(g.isPacked&&!Gd(g.shape,m.shape)){let b=m,y=m.shape;m.shape=g.shape,m=this.packedReshape(m,y),i.push(m),g=this.texData.get(m.dataId),b.shape=y}return{shape:m.shape,texData:g,isUniform:!1}});this.uploadToGPU(a.dataId);let l={shape:a.shape,texData:o,isUniform:!1},u=E7(e,c,l),d=this.getAndSaveBinary(u,()=>N7(this.gpgpu,e,c,l)),p=this.activeTimers!=null,h;p&&(h=this.startTimer()),_7(this.gpgpu,d,c,l,r),i.forEach(m=>this.disposeIntermediateTensorInfo(m)),p&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));let f=Q().get("WEBGL_FLUSH_THRESHOLD");if(f>0){let m=k.now();m-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=m)}if(!Q().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&s===!1){let m=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),m}return a}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Q().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=M(()=>{if(!Q().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Q().getBool("DEBUG");Q().set("DEBUG",!1);let t=this.abs(Ie(1e-8)).dataSync()[0];if(Q().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?z9:W9}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:o,isPacked:i}=t;if(a!=null)return;let c=this.activeTimers!=null,l;c&&(l=k.now());let u=t.texShape;if(u==null&&(u=V2(n,i),t.texShape=u),s!=null){let d=ym(n),p,h=u[1],f=u[0],m=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(i||!m)&&([h,f]=_u(u[0],u[1])),i?p=new P7(d,m):p=new R7(d,m);let g=m?[f,h]:u,b=this.makeTensorInfo(g,r),y=this.texData.get(b.dataId);m?y.usage=mr.PIXELS:y.usage=mr.UPLOAD,y.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),h,f,s);let v=[[f,h]],x=!0,w=this.runWebGLProgram(p,[b],r,v,x),T=this.texData.get(w.dataId);t.texture=T.texture,t.texShape=T.texShape,t.isPacked=T.isPacked,t.usage=T.usage,this.disposeIntermediateTensorInfo(b),this.texData.delete(w.dataId),t.values=null,c&&(this.uploadWaitMs+=k.now()-l)}else{let d=this.acquireTexture(u,o,r,i);t.texture=d}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),t!=null&&(n.values=j9(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*k.bytesPerElement(t)}};Tm.nextDataId=0;function j9(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let r=0;r<n.length;++r)n[r]=Math.round(e[r]);return n}else throw new Error(`Unknown dtype ${t}`)}var q9="3.12.0";function NN(){Q().set("WEBGL_FORCE_F16_TEXTURES",!0)}Yl.isBrowser()&&Vh("webgl",()=>new Tm,2);var K9={forceHalfFloat:NN},_N=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,Pu=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=_.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=Wn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},Cm=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,jd=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=_.assertAndGetBroadcastShape(t,n);let s=this.outputShape.length;this.enableShapeUniforms=Wn(s);let a="";if(r)if(s===0||k.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${mt(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=Sn("coords",s);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${i[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${i[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${i[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${i[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function sr(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var X9={kernelName:so,backendName:"webgl",kernelFunc:sr};function Ta(e){let{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(a.dataId),i=sr({inputs:{x:r},backend:n}),c=sr({inputs:{x:s},backend:n});return o.complexTensorInfos={real:i,imag:c},a}var Y9={kernelName:th,backendName:"webgl",kernelFunc:Ta},EN="return (a < 0.) ? b * a : a;",AN=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Z9(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,o=n.makeTensorInfo([],"float32",k.createScalarValue(a,"float32")),i=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jd(AN,s.shape,o.shape):new Pu(EN,s.shape,o.shape),c=n.runWebGLProgram(i,[s,o],"float32");return n.disposeIntermediateTensorInfo(o),c}var J9={kernelName:ao,backendName:"webgl",kernelFunc:Z9},DN="return (a < 0.) ? b * a : a;",FN=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Q9(e){let{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jd(FN,r.shape,s.shape):new Pu(DN,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}var eY={kernelName:vo,backendName:"webgl",kernelFunc:Q9},$N="if (isnan(x)) return x;",tY=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,nY=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Xe({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{let{x:o}=s,i=a,c=r||o.dtype;if(i.shouldExecuteOnCPU([o])&&n!=null){let d=i.texData.get(o.dataId),p=n(d.values,c);return i.makeTensorInfo(o.shape,c,p)}let l=Q().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,u;return l?u=new Ru(o.shape,t):u=new Sa(o.shape,e),i.runWebGLProgram(u,[o],c)}}function cn({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:o,backend:i})=>{let{a:c,b:l}=o,u=i;if(r&&c.dtype==="complex64"){let f=u.texData.get(c.dataId),m=u.texData.get(l.dataId),[g,b]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(v=>{let[x,w]=v,T={dataId:x.dataId,dtype:x.dtype,shape:c.shape},C={dataId:w.dataId,dtype:w.dtype,shape:l.shape},D=new Pu(e,c.shape,l.shape);return u.runWebGLProgram(D,[T,C],Sr(x.dtype,w.dtype))}),y=Ta({inputs:{real:g,imag:b},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(b),y}let d=a||Sr(c.dtype,l.dtype);if((c.dtype==="string"||l.dtype==="string"||u.shouldExecuteOnCPU([c,l]))&&s!=null){let f=u.texData.get(c.dataId).values,m=u.texData.get(l.dataId).values,g=c.dtype==="string"?_.fromUint8ToStringArray(f):f,b=c.dtype==="string"?_.fromUint8ToStringArray(m):m,[y,v]=s(c.shape,l.shape,g,b,d),x=u.makeTensorInfo(v,d),w=u.texData.get(x.dataId);return w.values=y,x}let p=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,h;return p?h=new jd(t,c.shape,l.shape,n):h=new Pu(e,c.shape,l.shape),u.runWebGLProgram(h,[c,l],d)}}function Nm(e,t=!1){if(e==="linear")return t?$9:_9;if(e==="relu")return t?P9:A9;if(e==="elu")return t?R9:E9;if(e==="relu6")return t?O9:D9;if(e==="prelu")return t?FN:DN;if(e==="leakyrelu")return t?AN:EN;if(e==="sigmoid")return t?M9:F9;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var RN=class{constructor(e,t,n,r=!1,s=!1,a=!1,o=null,i=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Wn(this.outputShape.length);let l=r?e[1]:e[2],u=Math.ceil(l/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=s?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";o&&(i?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:c?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:m=`vec4 activation(vec4 x) {
          ${o}
        }`,g="result = activation(result);");let b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let y="rc.x",v="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(v=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${u}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${u}; i++) {
          int batchA = ${y};
          int batchB = ${v};
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${f[0]});
          result += (${h[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${g}

        setOutput(result);
      }
    `}},PN={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},ON=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=_.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},MN="return a * b;";function t1(e){let{inputs:t,backend:n}=e,{a:r,b:s}=t,a=_.upcastType(r.dtype,s.dtype);if(r.dtype==="complex64"){let i=n.texData.get(r.dataId),c=n.texData.get(s.dataId),l=new ON(PN.REAL,r.shape,s.shape),u=new ON(PN.IMAG,r.shape,s.shape),d=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:r.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:s.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:s.shape}],p=n.runWebGLProgram(l,d,"float32"),h=n.runWebGLProgram(u,d,"float32"),f=Ta({inputs:{real:p,imag:h},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}if(n.shouldExecuteOnCPU([r,s])){let i=n.texData.get(r.dataId),c=n.texData.get(s.dataId),[l,u]=n9(r.shape,s.shape,i.values,c.values,a),d=n.makeTensorInfo(u,a),p=n.texData.get(d.dataId);return p.values=l,d}let o;return Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new jd(MN,r.shape,s.shape):o=new Pu(MN,r.shape,s.shape),n.runWebGLProgram(o,[r,s],a)}var rY={kernelName:mo,backendName:"webgl",kernelFunc:t1};function sY(e,t,n){let r=[fi(e.shape),...mi(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[fi(t),...mi(t)],o=new kN(a,r),i=!0,c=[r],l=n.runWebGLProgram(o,[s],e.dtype,c,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}function ge(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,o=n,i=k.sizeFromShape(s.shape),c=k.inferFromImplicitShape(a,i),l=k.sizeFromShape(c);k.assert(i===l,()=>`The new shape (${c}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let u=o.texData.get(s.dataId);return u.isPacked&&!Gd(s.shape,c)&&!(u.texture!==null&&Gd(u.shape,c))?sY(s,c,o):(o.incRef(s.dataId),{dataId:s.dataId,shape:c,dtype:s.dtype})}var aY={kernelName:Pc,backendName:"webgl",kernelFunc:ge},LN=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let o=Math.floor(n/4)*4,i=n%4,c="sumValue += dot(values, ones);";if(t!=null){let u=1/t;c=`sumValue += dot(values * ${k.isInt(u)?u.toPrecision(2):u}, ones);`}let l="";s%n>0&&(l=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${o};
        if (${i===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${i===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${i===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}},oY=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let o="0.0",i="";t==="prod"?o="1.0":t==="min"?(o="1.0 / 1e-20",i="min"):t==="max"&&(o="-1.0 / 1e-20",i="max");let c=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?c="sumValue":t==="prod"?c="prodValue":t==="all"?c="allValue":t==="any"&&(c="anyValue");let l=Math.floor(n/4)*4,u=n%4,d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${i}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${i}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(o="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(o="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let h="";s%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${l};
        if (${u===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${u===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${u===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${c});
      }
    `}};function iY(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],r=_.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}function yi(e,t,n,r){let s=iY(e.shape),a=e;for(let o=0;o<s.length;o++){let{inSize:i,windowSize:c,outSize:l}=s[o],u,d;n==="mean"?u=o===0?new LN({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},i):new LN({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l}):u=new oY({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},n),d=a,a=r.runWebGLProgram(u,[a],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return a}var cY=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let r=mt(this.rank),s=uY(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function uY(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let s=0;s<e.length;s++)r[e[s]]=n[s];return r.join()}var lY=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=mt(this.rank),s=wN("rc",this.rank),a=new Array(this.rank);for(let l=0;l<t.length;l++)a[t[l]]=s[l];let o=`vec2(${a.slice(-2).join()})`,i=`++${s[this.rank-1]} < ${n[this.rank-1]}`,c=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${i}) {
        result[1] = ${c};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${c};
        if(${i}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}};function _m(e,t,n){let r=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lY(e.shape,t):new cY(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function dY(e,t,n,r){let s=t,a=e.shape.length,o=k.parseAxisParam(s,e.shape),i=o,c=_.getAxesPermutation(i,a),l=c!=null,u=e;l&&(u=_m(e,c,r),i=_.getInnerMostAxes(i.length,a)),_.assertAxesAreInnerMostDims("sum",i,a);let[d,p]=_.computeOutAndReduceShapes(u.shape,i),h=d;n&&(h=_.expandShapeToKeepDim(d,o));let f=k.sizeFromShape(p),g=k.sizeFromShape(e.shape)/f,b=ge({inputs:{x:u},attrs:{shape:[g,f]},backend:r}),y=Mh(e.dtype),v=yi(b,y,"sum",r),x=ge({inputs:{x:v},attrs:{shape:h},backend:r});return r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(v),l&&r.disposeIntermediateTensorInfo(u),x}function Em(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;return dY(s,a,o,n)}var pY={kernelName:Eo,backendName:"webgl",kernelFunc:Em};function Tn(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,o=n,i=s.shape.length,c=new Array(i);for(let u=0;u<c.length;u++)c[u]=s.shape[a[u]];let l;if(o.shouldExecuteOnCPU([s])){let d=o.texData.get(s.dataId).values,p=e1(d,s.shape,s.dtype,a,c);l=o.makeTensorInfo(c,s.dtype);let h=o.texData.get(l.dataId);h.values=p}else l=_m(s,a,o);return l}var hY={kernelName:Po,backendName:"webgl",kernelFunc:Tn},BN=1e3;function Am({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}){let l=e.shape.length,u=t.shape.length,d=n?e.shape[l-2]:e.shape[l-1],p=r?t.shape[u-1]:t.shape[u-2],h=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[u-2]:t.shape[u-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),b=k.sizeFromShape(m),y=k.sizeFromShape(g),x=su.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);k.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);let w=n?[b,d,h]:[b,h,d],T=r?[y,f,p]:[y,p,f],C=ge({inputs:{x:e},backend:s,attrs:{shape:w}}),D=ge({inputs:{x:t},backend:s,attrs:{shape:T}}),F=[C,D],O=Math.max(b,y),$=n?C.shape[1]:C.shape[2],R=a!=null,N=o!=null,L=c==="leakyrelu",G=c!=null?Nm(c,!0):null,j=R||N||L||G!=null,K;if((h===1||f===1)&&$>BN&&j===!1){let Z=C,te=D;n&&(Z=Tn({inputs:{x:C},backend:s,attrs:{perm:[0,2,1]}}),F.push(Z)),r&&(te=Tn({inputs:{x:D},backend:s,attrs:{perm:[0,2,1]}}),F.push(te));let se=f!==1,oe=f===1,re=Z;se&&(re=ge({inputs:{x:Z},backend:s,attrs:{shape:[O,$,1]}}),F.push(re));let ue=f===1?2:1,ne=te;oe&&(ne=ge({inputs:{x:te},backend:s,attrs:{shape:[O,1,$]}}),F.push(ne));let he=t1({inputs:{a:re,b:ne},backend:s});K=Em({inputs:{x:he},backend:s,attrs:{axis:ue,keepDims:!0}}),F.push(he)}else{let Z=Sr(e.dtype,t.dtype),te=new RN(w,T,[O,h,f],n,r,R,G,N,L),se=[C,D];if(a!=null&&se.push(a),N&&se.push(o),L){let oe=s.makeTensorInfo([],"float32",k.createScalarValue(i,"float32"));se.push(oe),F.push(oe)}K=s.runWebGLProgram(te,se,Z)}let q=ge({inputs:{x:K},backend:s,attrs:{shape:x}});F.push(K);for(let Z of F)s.disposeIntermediateTensorInfo(Z);return q}function fY(e){let{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:d}=r;return Am({a:s,b:a,transposeA:c,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}var mY={kernelName:Oo,backendName:"webgl",kernelFunc:fY},zN="return abs(x);";function gY(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){let a=n.texData.get(r.dataId),o=vN(a.values);return n.makeTensorInfo(r.shape,r.dtype,o)}let s;return Q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new Ru(r.shape,zN):s=new Sa(r.shape,zN),n.runWebGLProgram(s,[r],r.dtype)}var bY={kernelName:Yi,backendName:"webgl",kernelFunc:gY},yY=qr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,vY=Xe({opSnippet:yY}),xY={kernelName:Zi,backendName:"webgl",kernelFunc:vY},wY=qr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,kY=Xe({opSnippet:wY}),IY={kernelName:Ji,backendName:"webgl",kernelFunc:kY},WN="return a + b;",SY=cn({opSnippet:WN,packedOpSnippet:WN,supportsComplex:!0,cpuKernelImpl:M7}),TY={kernelName:Zs,backendName:"webgl",kernelFunc:SY},CY=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let r=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}},NY=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let r=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}};function Dm(e){let{inputs:t,backend:n}=e,r=t;if(r.length===1)return sr({inputs:{x:r[0]},backend:n});if(r.length>Q().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let c=Math.floor(r.length/2),l=Dm({inputs:r.slice(0,c),backend:n}),u=Dm({inputs:r.slice(c),backend:n});return Dm({inputs:[l,u],backend:n})}let s=r.map(c=>c.dtype).reduce((c,l)=>Sr(c,l)),a=r.map(c=>c.shape),i=Q().getBool("WEBGL_PACK")?new NY(r[0].shape,a):new CY(r[0].shape,a);return n.runWebGLProgram(i,r,s)}var _Y={kernelName:Ba,backendName:"webgl",kernelFunc:Dm};function EY(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,c=k.parseAxisParam(a,s.shape),l=c,u=_.getAxesPermutation(l,i),d=s;u!=null&&(d=Tn({inputs:{x:s},backend:n,attrs:{perm:u}}),l=_.getInnerMostAxes(l.length,i)),_.assertAxesAreInnerMostDims("all",l,i);let[p,h]=_.computeOutAndReduceShapes(d.shape,l),f=k.sizeFromShape(h),m=ge({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=yi(m,m.dtype,"all",n),b;if(o){let y=_.expandShapeToKeepDim(p,c);b=ge({inputs:{x:g},backend:n,attrs:{shape:y}})}else b=ge({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),b}var AY={kernelName:Qi,backendName:"webgl",kernelFunc:EY};function DY(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,c=k.parseAxisParam(a,s.shape),l=c,u=_.getAxesPermutation(l,i),d=s;u!=null&&(d=Tn({inputs:{x:s},backend:n,attrs:{perm:u}}),l=_.getInnerMostAxes(l.length,i)),_.assertAxesAreInnerMostDims("any",l,i);let[p,h]=_.computeOutAndReduceShapes(d.shape,l),f=k.sizeFromShape(h),m=ge({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=yi(m,m.dtype,"any",n),b;if(o){let y=_.expandShapeToKeepDim(p,c);b=ge({inputs:{x:g},backend:n,attrs:{shape:y}})}else b=ge({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),b}var FY={kernelName:ec,backendName:"webgl",kernelFunc:DY},$Y=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];let o=t==="max"?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${i};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},RY=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,k.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");let o=this.outputShape,i=o.length,c=mt(i),l=Sn("coords",i),u,d;if(a===1){d=i+1;let C=mt(d);u=`
        ${C} sourceLocR = ${C}(${l.join()}, 0);
        ++${l[i-1]};
        ${C} sourceLocG = ${C}(${l.join()}, 0);
        ++${l[i-2]};
        ${C} sourceLocA = ${C}(${l.join()}, 0);
        --${l[i-1]};
        ${C} sourceLocB = ${C}(${l.join()}, 0);
        --${l[i-2]};`}else d=i,u=`
        ${c} sourceLocR = coords;
        ++${l[i-1]};
        ${c} sourceLocG = coords;
        ++${l[i-2]};
        ${c} sourceLocA = coords;
        --${l[i-1]};
        ${c} sourceLocB = coords;
        --${l[i-2]};`;let p=["x","y","z","w","u","v"].slice(0,d),h="."+p[d-1],f=p.map(C=>"int "+C),m=Sn("sourceLocR",d-1).concat("inIdx.r"),g=Sn("sourceLocG",d-1).concat("inIdx.g"),b=Sn("sourceLocB",d-1).concat("inIdx.b"),y=Sn("sourceLocA",d-1).concat("inIdx.a"),v=n==="max"?"greaterThan":"lessThan",x=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${y.join()})));`,w=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,T=r?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${T}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${l[i-1]} < ${o[i-1]-1};
        bool hasNextRow = ${l[i-2]} < ${o[i-2]-1};
        ${u}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${w};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${x}
          vec4 candidate = ${w};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function VN(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];r!=null&&(s=r.shape[0],a=r.shape[1]);let o=_.computeOptimalWindowSize(a),i={windowSize:o,inSize:a,batchSize:s,outSize:Math.ceil(a/o)},c=new $Y(i,n,r==null),l=[t];r!=null&&l.push(r);let u=e.runWebGLProgram(c,l,"int32");if(u.shape[1]===1)return u;let d=VN(e,t,n,u);return e.disposeIntermediateTensorInfo(u),d}function UN(e,t,n,r=null){let s=r!=null?r.shape:t.shape,a=s[s.length-1],o=_.computeOptimalWindowSize(a),i=new RY(s,o,n,r==null),c=r==null?[t]:[t,r],l=e.runWebGLProgram(i,c,"int32");if(l.shape.length===t.shape.length){let u=UN(e,t,n,l);return e.disposeIntermediateTensorInfo(l),u}return l}function GN(e,t,n,r){let s=[n];if(_.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!Q().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let a=[],o=e.texData.get(t.dataId),i=o!==null&&o.isPacked,c=t;i&&(c=e.unpackTensor(t),a.push(c));let[l,u]=_.computeOutAndReduceShapes(c.shape,s),d=k.sizeFromShape(u),p=ge({inputs:{x:c},backend:e,attrs:{shape:[-1,d]}});a.push(p);let h=VN(e,p,r);a.push(h);let f=ge({inputs:{x:h},backend:e,attrs:{shape:l}});return a.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return UN(e,t,r)}function PY(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r,o=k.parseAxisParam(a,s.shape),i=_.getAxesPermutation(o,s.shape.length),c=s,l=[];i!=null&&(c=Tn({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(c),o=_.getInnerMostAxes(o.length,c.shape.length)),_.assertAxesAreInnerMostDims("argMax",[o[0]],c.shape.length);let u=GN(n,c,o[0],"max");return l.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var OY={kernelName:za,backendName:"webgl",kernelFunc:PY};function MY(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r,o=k.parseAxisParam(a,s.shape),i=_.getAxesPermutation(o,s.shape.length),c=s,l=[];i!=null&&(c=Tn({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(c),o=_.getInnerMostAxes(o.length,c.shape.length)),_.assertAxesAreInnerMostDims("argMin",[o[0]],c.shape.length);let u=GN(n,c,o[0],"min");return l.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var LY={kernelName:Sl,backendName:"webgl",kernelFunc:MY},BY=qr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,zY=Xe({opSnippet:BY}),WY={kernelName:tc,backendName:"webgl",kernelFunc:zY},VY=qr+"return log(x + sqrt(x * x + 1.0));",UY=Xe({opSnippet:VY}),GY={kernelName:nc,backendName:"webgl",kernelFunc:UY},HY=qr+`
  return atan(x);
`,jY=Xe({opSnippet:HY}),qY={kernelName:rc,backendName:"webgl",kernelFunc:jY},KY=tY+`
  return atan(a, b);
`,XY=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+nY+`
  return result;
`,YY=cn({opSnippet:KY,packedOpSnippet:XY}),ZY={kernelName:ac,backendName:"webgl",kernelFunc:YY},JY=qr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,QY=Xe({opSnippet:JY}),eZ={kernelName:sc,backendName:"webgl",kernelFunc:QY},qd=class{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideHeight,i=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,b="0.0";if(f||(b="-1.0 / 1e-20"),n){let C=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${i});
        const ivec2 pads = ivec2(${p}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${u};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${C} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?s?m:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let y="max",v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(v="avgValue / count");let x=Math.floor(a/4)*4,w=a%4,T=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${y}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${p}, ${h});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${u};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${x}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${T}
          }

          int xC = xCCorner + ${x};
          if (${w===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${w===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${w===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${T}
          }
        }
        setOutput(${v});
      }
    `}},n1=class{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;let y=t==="avg",v="0.0";if(y||(v="-1.0 / 1e-20"),n){let F=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${i}, ${c});
        const ivec3 pads = ivec3(${m}, ${g}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${u}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${F} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / count");let T=Math.floor(a/4)*4,C=a%4,D=`
      if (${y}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${i}, ${c});
      const ivec3 pads = ivec3(${m}, ${g}, ${b});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${T}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${D}
            }

            int xC = xCCorner + ${T};
            if (${C===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${D}
            } else if (${C===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${D}
            } else if (${C===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${D}
            }
          }
          setOutput(${w});
        }
      }
    `}};function tZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Eu(s,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:c}=r,l=1;k.assert(_.eitherStridesOrDilationsAreOne(o,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);let u=_.computePool2DInfo(s.shape,a,o,l,i,c);if(u.filterWidth===1&&u.filterHeight===1&&k.arraysEqual(u.inShape,u.outShape))return sr({inputs:{x:s},backend:n});let d=new qd(u,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}var nZ={kernelName:Wa,backendName:"webgl",kernelFunc:tZ};function rZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=r,u=[1,1,1],d=_.computePool3DInfo(s.shape,a,o,u,i,c,l),p=new n1(d,"avg",!1);return n.runWebGLProgram(p,[s],"float32")}var sZ={kernelName:Tl,backendName:"webgl",kernelFunc:rZ},aZ=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.top,u=c-1-e.padInfo.left,d=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${u});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},oZ=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=u-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
            wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function iZ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=r,d=[1,1,1],p=_.computePool3DInfo(o.shape,i,c,d,l,u),h=new oZ(p);return n.runWebGLProgram(h,[s],o.dtype)}var cZ={kernelName:Jp,backendName:"webgl",kernelFunc:iZ};function uZ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a;Eu([s,a],"avgPoolGrad");let{filterSize:i,strides:c,pad:l}=r,u=_.computePool2DInfo(o.shape,i,c,1,l),d=new aZ(u);return n.runWebGLProgram(d,[s],o.dtype)}var lZ={kernelName:Zp,backendName:"webgl",kernelFunc:uZ};function dZ(e){let{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;return Am({a:s,b:a,transposeA:o,transposeB:i,backend:n})}var pZ={kernelName:Va,backendName:"webgl",kernelFunc:dZ},hZ=class{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],_.assertAndGetBroadcastShape(e,t),_.assertAndGetBroadcastShape(e,n);let o="0.0";r!=null&&(_.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";s!=null&&(_.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${i};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},fZ=class{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],_.assertAndGetBroadcastShape(e,t),_.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";r!=null&&(_.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";s!=null&&(_.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${i};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}},mZ=({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:s,variance:a,offset:o,scale:i}=e;k.assert(s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k.assert(o==null||s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k.assert(i==null||s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:c}=n;c==null&&(c=.001);let l=[r,s,a],u=null;o!=null&&(u=o.shape,l.push(o));let d=null;i!=null&&(d=i.shape,l.push(i));let p=Q().getBool("WEBGL_PACK_NORMALIZATION")?new fZ(r.shape,s.shape,a.shape,u,d,c):new hZ(r.shape,s.shape,a.shape,u,d,c);return t.runWebGLProgram(p,l,l[0].dtype)},gZ={kernelName:no,backendName:"webgl",kernelFunc:mZ},bZ=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=mt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=yZ(this.rank),r,s=e.map((a,o)=>`sourceLoc.${r1[o]} = start[${o}] + coords.${r1[o]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${n}));
      }
    `}},r1=["x","y","z","w","u","v"];function yZ(e){if(e===1)return"sourceLoc";if(e<=6)return r1.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var vZ=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=mt(this.rank),n=Sn("coords",this.rank),r=Sn("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,o=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${a};
        --${r[this.rank-1]};
      }
    `,i=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${a};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((l,u)=>`start[${u}]`).join()});`:e.map((l,u)=>`${r[u]} = ${n[u]} + start[${u}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${o}
        ${i}
        setOutput(result);
      }
    `}};function xZ(e,t,n,r){let s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),o=r.texData.get(a.dataId);Object.assign(o,s),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=Gt.computeFlatOffset(t,k.computeStrides(e.shape));s.slice&&(i+=s.slice.flatOffset),o.slice={flatOffset:i,origDataId:s.slice&&s.slice.origDataId||e.dataId};let c=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,c+1),a}function Ou(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:o}=r,[i,c]=Gt.parseSliceParams(s,a,o);if(Gt.assertParamsValid(s,i,c),k.sizeFromShape(c)===0)return n.makeTensorInfo(c,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||s.dtype==="string"){let d=n.texData.get(s.dataId),p=u9(d.values,i,c,s.shape,s.dtype);return n.makeTensorInfo(c,s.dtype,p)}let{isPacked:l}=n.texData.get(s.dataId),u=Gt.isSliceContinous(s.shape,i,c);if(l||!u){let d=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vZ(c):new bZ(c),p=[i];return n.runWebGLProgram(d,[s],s.dtype,p)}return n.uploadToGPU(s.dataId),xZ(s,i,c,n)}var wZ={kernelName:Bc,backendName:"webgl",kernelFunc:Ou},kZ=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r;k.assert(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((y,v)=>y*v),c=_.getReshaped(s.shape,a,i),l=_.getPermuted(c.length,a.length),u=_.getReshapedPermuted(s.shape,a,i),d=_.getSliceBeginCoords(o,a.length),p=_.getSliceSize(u,o,a.length),h=[],f=ge({inputs:{x:s},backend:n,attrs:{shape:c}}),m=Tn({inputs:{x:f},backend:n,attrs:{perm:l}}),g=ge({inputs:{x:m},backend:n,attrs:{shape:u}}),b=Ou({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach(y=>n.disposeIntermediateTensorInfo(y)),b},IZ={kernelName:oc,backendName:"webgl",kernelFunc:kZ};function SZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o}=r,i=n.readSync(s.dataId),c=n.readSync(a.dataId),l=yN(i,c,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,l)}var TZ={kernelName:Qp,backendName:"webgl",kernelFunc:SZ};function CZ(e){let{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),o=n.readSync(s.dataId),i=_.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var NZ={kernelName:eh,backendName:"webgl",kernelFunc:CZ},_Z="return float(a != b);",HN=cn({opSnippet:_Z,cpuKernelImpl:s9,dtype:"bool"}),EZ={kernelName:Nc,backendName:"webgl",kernelFunc:HN};function Kd(e){let{inputs:t,backend:n}=e,{input:r}=t,s=n.texData.get(r.dataId);return sr({inputs:{x:s.complexTensorInfos.real},backend:n})}var AZ={kernelName:kh,backendName:"webgl",kernelFunc:Kd},DZ="return float(int(x));";function FZ(e,t){let n=new Sa(e.shape,DZ),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function s1(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if(a==="complex64"){if(s.dtype==="complex64")return sr({inputs:{x:s},backend:n});let o=St(s.shape),i=s1({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),c=Ta({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeIntermediateTensorInfo(i),c}if(s.dtype==="complex64"){let o=Kd({inputs:{input:s},backend:n}),i=s1({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!k.hasEncodingLoss(s.dtype,a)){let o=sr({inputs:{x:s},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return FZ(s,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",k.getTypedArrayFromDType("bool",1)),c=HN({inputs:{a:s,b:o},backend:n});return n.disposeIntermediateTensorInfo(o),c}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}var $Z={kernelName:Ua,backendName:"webgl",kernelFunc:s1},jN="return ceil(x);",RZ=Xe({opSnippet:jN,packedOpSnippet:jN,cpuKernelImpl:B7}),PZ={kernelName:Ga,backendName:"webgl",kernelFunc:RZ},OZ=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},MZ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function LZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:o}=r,i;Q().getBool("WEBGL_PACK_CLIP")?i=new MZ(s.shape):i=new OZ(s.shape);let c=[[a],[o]];return n.runWebGLProgram(i,[s],s.dtype,c)}var BZ={kernelName:Js,backendName:"webgl",kernelFunc:LZ},zZ=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function qN(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function WZ(e){let{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new zZ(r.shape),o=[qN(r,s.complexTensorInfos.real),qN(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}var VZ={kernelName:Cl,backendName:"webgl",kernelFunc:WZ},UZ=class{constructor(e){this.outputShape=[],this.outputShape=_.computeOutShape(e,1),this.variableNames=e.map((a,o)=>`T${o}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let o=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${o}));`)}let r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},GZ=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=_.computeOutShape(e,t);let n=this.outputShape,r=n.length,s=mt(r),a=Sn("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((f,m)=>`T${m}`);let i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];let c=o[t],l=o.slice(-2),u=o.join(),d=`if (${c} < ${i[0]}) {
        return getChannel(
            getT0(${u}), vec2(${l.join()}));
        }`;for(let f=1;f<i.length;f++){let m=i[f-1];d+=`
        if (${c} < ${i[f]}  && ${c} >= ${i[f-1]}) {
          return getChannel(
            getT${f}(${Fm(o,c,m)}),
            vec2(${Fm(l,c,m)}));
        }`}let p=i.length,h=i[i.length-1];d+=`
        return getChannel(
          getT${p}(${Fm(o,c,h)}),
          vec2(${Fm(l,c,h)}));`,this.userCode=`
      float getValue(${o.map(f=>"int "+f)}) {
        ${d}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[r-1]} = ${a[r-1]} + 1;
        if (${a[r-1]} < ${n[r-1]}) {
          result.g = getValue(${a});
        }

        ${a[r-2]} = ${a[r-2]} + 1;
        if (${a[r-2]} < ${n[r-2]}) {
          result.a = getValue(${a});
        }

        ${a[r-1]} = ${a[r-1]} - 1;
        if (${a[r-2]} < ${n[r-2]} &&
            ${a[r-1]} < ${n[r-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function Fm(e,t,n){let r=e.indexOf(t);return e.map((a,o)=>o===r?`${a} - ${n}`:a).join()}function $m(e){let{inputs:t,backend:n}=e,{input:r}=t,s=n.texData.get(r.dataId);return sr({inputs:{x:s.complexTensorInfos.imag},backend:n})}var HZ={kernelName:mh,backendName:"webgl",kernelFunc:$m};function Mu(e,t,n){let r=e[0].dtype;if(r==="complex64"){let u=e.map(m=>Kd({inputs:{input:m},backend:n})),d=e.map(m=>$m({inputs:{input:m},backend:n})),p=Mu(u,t,n),h=Mu(d,t,n),f=Ta({inputs:{real:p,imag:h},backend:n});return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),d.forEach(m=>n.disposeIntermediateTensorInfo(m)),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}let s=n.shouldExecuteOnCPU(e);if(r==="string"&&(s=!0),s){let u=e.map(b=>{let y=k.sizeFromShape(b.shape.slice(t));return ge({inputs:{x:b},backend:n,attrs:{shape:[-1,y]}})}),d=u.map(b=>({vals:n.readSync(b.dataId),shape:b.shape})),p=_.computeOutShape(u.map(b=>b.shape),1),h=u[0].shape[0]===1,f=z7(d,p,r,h),m=_.computeOutShape(e.map(b=>b.shape),t),g=n.makeTensorInfo(m,r,f);return u.forEach(b=>n.disposeIntermediateTensorInfo(b)),g}if(e.length>Q().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(e.length/2),d=Mu(e.slice(0,u),t,n),p=Mu(e.slice(u),t,n),h=Mu([d,p],t,n);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),h}if(Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let u=new GZ(e.map(d=>d.shape),t);return n.runWebGLProgram(u,e,r)}let{tensors2D:a,outShape:o}=jZ(e,t,n),i=new UZ(a.map(u=>u.shape)),c=n.runWebGLProgram(i,a,r);a.forEach(u=>n.disposeIntermediateTensorInfo(u));let l=ge({inputs:{x:c},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(c),l}function jZ(e,t,n){let r=_.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>ge({inputs:{x:a},attrs:{shape:[-1,k.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:r}}function KN(e){let{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=k.parseAxisParam(s,t[0].shape)[0],o=_.computeOutShape(t.map(l=>l.shape),a);if(k.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(l=>k.sizeFromShape(l.shape)>0);if(i.length===1)return sr({inputs:{x:i[0]},backend:n});let c=i.map(l=>l.shape);return _.assertParamsConsistent(c,a),Mu(i,a,n)}var qZ={kernelName:ic,backendName:"webgl",kernelFunc:KN},XN=class{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,b=m?2:3,y=m?3:1,v="",x="";n&&(r?v=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?v=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:v=`
          float activation(float x) {
            ${n}
          }
        `,x="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${v}

      const ivec2 strides = ivec2(${i}, ${c});
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${y}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${u};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${w}
        ${x}
        setOutput(result);
      }
    `}},KZ=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${a}, ${o});
      const ivec3 pads = ivec3(${t}, ${n}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${u}; wF++) {
          int xF = xFCorner + wF * ${i};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},XZ=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Wn(this.outputShape.length);let{dataFormat:n}=t,r=In(),s=n==="channelsLast",a=s?0:1,o=s?1:2,i=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,c="";for(let l=0;l<=1;l++)for(let u=0;u<=1;u++)c+=`
          blockIndex = rc.y + ${u};
          pos = rc.x + ${l};

          ${i}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+u}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+u}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${r.output} = result;
      }
    `}};function YN({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let c=e.shape,l=r.texData.get(e.dataId),u=n.inChannels,d=c[0]*c[1]*c[2],p=n.outChannels,h=n.dataFormat==="channelsLast",f=!1,m=!1,g,b=[];if(!((d===1||p===1)&&u>BN)&&l.isPacked&&h&&l.texture!=null&&c[2]%2!=0&&k.arraysEqual(l.shape.slice(-3),c.slice(-3))){let x=c[0]*c[1]*(c[2]+1),w={dataId:e.dataId,shape:[1,x,n.inChannels],dtype:e.dtype},T=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,k.assert(Gd(l.shape,w.shape),()=>`packed reshape ${l.shape} to ${w.shape} isn't free`);let C=ge({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(C);let D=Am({a:w,b:C,backend:r,transposeA:f,transposeB:m,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),F=r.texData.get(D.dataId);k.assert(F.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=T,F.shape=n.outShape,g=sr({inputs:{x:D},backend:r}),g.shape=n.outShape,b.push(D)}else{let x=h?c[0]*c[1]*c[2]:c[0]*c[2]*c[3],w=ge({inputs:{x:e},backend:r,attrs:{shape:[1,x,n.inChannels]}}),T=ge({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),C=Am({a:w,b:T,transposeA:f,transposeB:m,backend:r,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o});g=ge({inputs:{x:C},backend:r,attrs:{shape:n.outShape}}),b.push(w),b.push(T),b.push(C)}for(let x of b)r.disposeIntermediateTensorInfo(x);return g}function ZN({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:c,filterHeight:l,inChannels:u,outWidth:d,outHeight:p,dataFormat:h}=n,f=h==="channelsLast",m=c*l*u,g=p*d,b=[m,g],y=!0,v=!1,x=[],w=ge({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),T=ge({inputs:{x:t},backend:r,attrs:{shape:[1,m,k.sizeFromShape(t.shape)/m]}});x.push(w),x.push(T);let C=new XZ(b,n),D=[w.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],F=r.runWebGLProgram(C,[w],"float32",D),O=ge({inputs:{x:F},backend:r,attrs:{shape:[1,b[0],b[1]]}});x.push(F),x.push(O);let $=s!=null,R=a!=null,N=i==="leakyrelu",L=i?Nm(i,!0):null,G=new RN(O.shape,T.shape,[1,g,n.outChannels],y,v,$,L,R,N),j=[O,T];if(s&&j.push(s),R&&j.push(a),N){let te=r.makeTensorInfo([],"float32",k.createScalarValue(o,"float32"));j.push(te),x.push(te)}let K=r.runWebGLProgram(G,j,"float32"),q=f?[1,p,d,n.outChannels]:[1,n.outChannels,p,d],Z=ge({inputs:{x:K},backend:r,attrs:{shape:q}});x.push(K);for(let te of x)r.disposeIntermediateTensorInfo(te);return Z}function YZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=r,d=_.convertConv2DDataFormat(c),p=_.computeConv2DInfo(s.shape,a.shape,o,l,i,u,!1,d),h;if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))h=YN({x:s,filter:a,convInfo:p,backend:n});else if(Q().getBool("WEBGL_CONV_IM2COL")&&s.shape[0]===1)h=ZN({x:s,filter:a,convInfo:p,backend:n});else{let m=new XN(p);h=n.runWebGLProgram(m,[s,a],"float32")}let f=ge({inputs:{x:h},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(h),f}var ZZ={kernelName:Ha,backendName:"webgl",kernelFunc:YZ},JZ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},QZ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dataFormat==="channelsLast",o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,c=a?1:2,l=a?2:3,u=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${u}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},eJ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${s};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},tJ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,c=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${i}, ${c}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function nJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=r,d=_.convertConv2DDataFormat(c),p=_.computeConv2DInfo(s.shape,u,o,1,i,l,!1,d),h=new JZ(p);return n.runWebGLProgram(h,[s,a],"float32")}var rJ={kernelName:nh,backendName:"webgl",kernelFunc:nJ};function sJ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=r,d=_.convertConv2DDataFormat(l),p=_.computeConv2DInfo(o,a.shape,i,1,c,u,!1,d),h=new QZ(p);return n.runWebGLProgram(h,[s,a],"float32")}var aJ={kernelName:ja,backendName:"webgl",kernelFunc:sJ};function oJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:c}=r,l=_.computeConv3DInfo(s.shape,a.shape,o,c,i),u=new KZ(l);return n.runWebGLProgram(u,[s,a],"float32")}var iJ={kernelName:Nl,backendName:"webgl",kernelFunc:oJ};function cJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,filterShape:c}=r,l=_.computeConv3DInfo(s.shape,c,o,1,i),u=new eJ(l);return n.runWebGLProgram(u,[s,a],"float32")}var uJ={kernelName:rh,backendName:"webgl",kernelFunc:cJ};function lJ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:o,strides:i,inputShape:c}=r,l=_.computeConv3DInfo(c,a.shape,i,1,o),u=new tJ(l);return n.runWebGLProgram(u,[s,a],"float32")}var dJ={kernelName:sh,backendName:"webgl",kernelFunc:lJ},pJ=$N+`
  return cos(x);
`,hJ=Xe({opSnippet:pJ}),fJ={kernelName:qa,backendName:"webgl",kernelFunc:hJ},mJ=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,gJ=Xe({opSnippet:mJ}),bJ={kernelName:Ka,backendName:"webgl",kernelFunc:gJ},yJ=class{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,o,i,c]=e,[l]=t,[u,d]=n;this.outputShape=[l,u,d,c];let p=r==="bilinear"?1:0,[h,f]=[`${o-1}.0`,`${i-1}.0`],[m,g,b]=u>1?[`${(o-1)/(u-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[y,v,x]=d>1?[`${(i-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${y});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${v};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${x};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},vJ=e=>{let{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:o}=t,{cropSize:i,method:c,extrapolationValue:l}=r,u=new yJ(s.shape,a.shape,i,c,l);return n.runWebGLProgram(u,[s,a,o],"float32")},xJ={kernelName:cc,backendName:"webgl",kernelFunc:vJ},JN=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let r=e.length,s=t?"0.0":`getX(${QN(r,"coords")})`,a=e[e.length-1],o="",i="";t?(o=n?`end != ${a-1}`:"end != 0",i=n?"end + 1":"end - 1"):(o=n?`end + pow2 < ${a}`:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${mt(r)} coords = getOutputCoords();
        int end = ${e_(r,"coords")};
        float val = ${s};
        int pow2 = int(pow(2.0, index));
        if (${o}) {
          int idx = ${i};
          ${e_(r,"coords")} = idx;
          val += getX(${QN(r,"coords")});
        }
        setOutput(val);
      }
    `}};function QN(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function e_(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function wJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r,c=s.shape.length,l=_.getAxesPermutation([a],c),u=s;l!=null&&(u=Tn({inputs:{x:s},backend:n,attrs:{perm:l}}));let d=_.getInnerMostAxes(1,c)[0];if(d!==c-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${a}`);let p=u.shape[d],h=sr({inputs:{x:u},backend:n});for(let f=0;f<=Math.ceil(Math.log2(p))-1;f++){let m=new JN(u.shape,!1,i),g=[[f]],b=h;h=n.runWebGLProgram(m,[h],h.dtype,g),n.disposeIntermediateTensorInfo(b)}if(o){let f=new JN(u.shape,o,i),m=h;h=n.runWebGLProgram(f,[h],h.dtype),n.disposeIntermediateTensorInfo(m)}if(l!=null){let f=_.getUndoAxesPermutation(l),m=Tn({inputs:{x:h},backend:n,attrs:{perm:f}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),m}return h}var kJ={kernelName:Xa,backendName:"webgl",kernelFunc:wJ};function IJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o,binaryOutput:i}=r;if(s.shape.length===1){let c=n.readSync(s.dataId),l=n.readSync(a.dataId),u=yN(c,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}else if(s.shape.length===2){let c=n.bufferSync(s),l=n.bufferSync(a),u=L7(c,l,o,i);return n.makeTensorInfo(u.shape,a.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}var SJ={kernelName:ah,backendName:"webgl",kernelFunc:IJ},TJ=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function CJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:o}=r,i=s.shape[0],c=o==="NHWC"?s.shape[1]:s.shape[2],l=o==="NHWC"?s.shape[2]:s.shape[3],u=o==="NHWC"?s.shape[3]:s.shape[1],d=c*a,p=l*a,h=u/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=new TJ(f,a,o);return n.runWebGLProgram(m,[s],s.dtype)}var NJ={kernelName:uc,backendName:"webgl",kernelFunc:CJ},t_=class{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Wn(this.outputShape.length);let a=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels,c="",l="";n&&(r?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:c=`
          float activation(float x) {
            ${n}
          }
        `,l="result = activation(result);");let u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${u}
        ${l}
        setOutput(result);
      }
    `}},n_=class{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Wn(this.outputShape.length);let a=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,d=u,p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)p+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;p+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let g=0;g<u;g++)p+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(d+1)/2;g++){let b=g*2;if(p+=`
          xC = xCCorner + ${b*c};
          `,i===1){if(b<u&&(o%2==1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,c===1&&b>0?p+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<u)){let y=o%2==0?k.nearestLargerEven(c):c;c%2==0&&o%2==1||c%2!=0&&o%2!=1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${y};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,c>1&&(p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                      xTexelC${b} = getX(batch, xR, xCOffset, d1);
                      xTexelC${b}Ready = 1;
                    }
                    `),p+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                  `):y===1?p+=`
                    xC${b+1} = xTexelC${b};
                    `:p+=`
                    xCOffset = xC + ${y};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<u&&(o%2==1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<u&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<u&&(p+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<u&&(p+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<u&&(p+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let h="",f="";n&&(r?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:h=`vec4 activation(vec4 x) {
          ${n}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function _J(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:c,dimRoundingMode:l}=r,u=c;u==null&&(u=[1,1]),k.assert(_.eitherStridesOrDilationsAreOne(o,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let d=_.computeConv2DInfo(s.shape,a.shape,o,u,i,l,!0),p;Q().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?p=new n_(d):p=new t_(d);let h=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[s,a],"float32",h)}var EJ={kernelName:Ya,backendName:"webgl",kernelFunc:_J},AJ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},DJ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${i}; dm++) {
              int d2 = d1 * ${i} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function FJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=r,d=_.computeConv2DInfo(s.shape,u,o,i,c,l,!0),p=new AJ(d);return n.runWebGLProgram(p,[s,a],"float32")}var $J={kernelName:oh,backendName:"webgl",kernelFunc:FJ};function RJ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=r,d=_.computeConv2DInfo(u,a.shape,o,i,c,l,!0),p=new DJ(d);return n.runWebGLProgram(p,[s,a],"float32")}var PJ={kernelName:ih,backendName:"webgl",kernelFunc:RJ},OJ=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function MJ(e){let{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=k.sizeFromShape(r.shape),o=ge({inputs:{x:r},backend:n,attrs:{shape:[a]}}),i=new OJ(a),c=n.runWebGLProgram(i,[o],o.dtype),l=ge({inputs:{x:c},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),l}var LJ={kernelName:ch,backendName:"webgl",kernelFunc:MJ},BJ=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:c,dilationWidth:l}=e,{top:u,left:d}=r;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${a});
      const ivec2 pads = ivec2(${u}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${i}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function zJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:c}=r,l=_.computeDilation2DInfo(s.shape,a.shape,o,i,"NHWC",c),u,d=new BJ(l);u=n.runWebGLProgram(d,[s,a],"float32");let p=ge({inputs:{x:u},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(u),p}var WJ={kernelName:_l,backendName:"webgl",kernelFunc:zJ};function VJ(e){let{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:o,summedDims:i,idDims:c}=_.decodeEinsumEquation(s,a.length);_.checkEinsumDimSizes(o.length,c,a);let{path:l,steps:u}=_.getEinsumComputePath(i,c),d=u.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:b,expandDims:y}=_.getEinsumPermutation(h,c[g]),v;_.isIdentityPermutation(b)?v=a[g]:(v=Tn({inputs:{x:a[g]},backend:n,attrs:{perm:b}}),f.push(v));let x=v.shape.slice();for(let w=0;w<y.length;++w)x.splice(y[w],0,1);k.arraysEqual(v.shape,x)||(v=ge({inputs:{x:v},backend:n,attrs:{shape:x}}),f.push(v)),p===null?p=v:(p=t1({inputs:{a:v,b:p},backend:n}),f.push(p))}m<d-1&&(l[m]>=0&&(p=Em({inputs:{x:p},backend:n,attrs:{axis:l[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}var UJ={kernelName:dh,backendName:"webgl",kernelFunc:VJ},GJ="return (x >= 0.0) ? x : (exp(x) - 1.0);",HJ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,jJ=Xe({opSnippet:GJ,packedOpSnippet:HJ}),qJ={kernelName:Ja,backendName:"webgl",kernelFunc:jJ},KJ="return (b >= 1.0) ? a : a * (b + 1.0);",XJ=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,YJ=e=>{let{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jd(XJ,r.shape,s.shape):new Pu(KJ,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)},ZJ={kernelName:ph,backendName:"webgl",kernelFunc:YJ},JJ=`
  return vec4(equal(a, b));
`,QJ="return float(a == b);",eQ=cn({opSnippet:QJ,packedOpSnippet:JJ,dtype:"bool",cpuKernelImpl:W7}),tQ={kernelName:dc,backendName:"webgl",kernelFunc:eQ},nQ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${_.ERF_P};
  float a1 = ${_.ERF_A1};
  float a2 = ${_.ERF_A2};
  float a3 = ${_.ERF_A3};
  float a4 = ${_.ERF_A4};
  float a5 = ${_.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,rQ=Xe({opSnippet:nQ}),sQ={kernelName:lc,backendName:"webgl",kernelFunc:rQ},r_="return exp(x);",s_=Xe({opSnippet:r_,packedOpSnippet:r_,cpuKernelImpl:V7,dtype:"float32"}),aQ={kernelName:Qa,backendName:"webgl",kernelFunc:s_};function a1(e){let{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),c=s;return s<0&&(k.assert(-(o+1)<=s,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),c=o+s+1),i.splice(c,0,1),ge({inputs:{x:a},backend:r,attrs:{shape:i}})}var oQ={kernelName:pc,backendName:"webgl",kernelFunc:a1},a_="return exp(x) - 1.0;",iQ=Xe({opSnippet:a_,packedOpSnippet:a_,cpuKernelImpl:U7}),cQ={kernelName:hc,backendName:"webgl",kernelFunc:iQ},o_=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0",o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function i_(e,t,n){let r=n.texData.get(e.dataId),s=k.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],o=s/a,i=ge({inputs:{x:e},backend:n,attrs:{shape:[o,a]}}),c=i.shape,l=new o_("real",c,t),u=new o_("imag",c,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:c},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:c}],p=n.runWebGLProgram(l,d,"float32"),h=n.runWebGLProgram(u,d,"float32"),f=Ta({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);let m=ge({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}function uQ(e){let{inputs:t,backend:n}=e,{input:r}=t;return i_(r,!1,n)}var lQ={kernelName:hh,backendName:"webgl",kernelFunc:uQ},dQ=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Xd(e){let{backend:t,attrs:n}=e,{shape:r,value:s}=n,{dtype:a}=n;if(a=a||k.inferDtype(s),a==="string"){let o=k.getArrayFromDType(a,k.sizeFromShape(r));return o.fill(s),t.makeTensorInfo(r,a,o)}else{let o=new dQ(r,s),i=[[s]];return t.runWebGLProgram(o,[],a,i)}}var pQ={kernelName:El,backendName:"webgl",kernelFunc:Xd},hQ=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},fQ={kernelName:fc,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,s=new hQ(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},c_="return floor(x);",mQ=Xe({opSnippet:c_,packedOpSnippet:c_,cpuKernelImpl:G7}),gQ={kernelName:eo,backendName:"webgl",kernelFunc:mQ},bQ=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,yQ=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,vQ=cn({opSnippet:bQ,packedOpSnippet:yQ,dtype:"int32"}),xQ={kernelName:to,backendName:"webgl",kernelFunc:vQ},wQ=class{constructor(e){this.variableNames=["A"];let t=In(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},kQ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=In(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},IQ={kernelName:Ah,backendName:"webgl",kernelFunc:SQ},Lu;function SQ(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:s}=t,{numChannels:a}=r,o=typeof HTMLVideoElement!="undefined"&&s instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&s instanceof HTMLImageElement,[c,l]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],u=[l,c],d=[l,c,a];(i||o)&&(Lu==null&&(Lu=document.createElement("canvas").getContext("2d")),Lu.canvas.width=c,Lu.canvas.height=l,Lu.drawImage(s,0,0,c,l),s=Lu.canvas);let p=n.makeTensorInfo(u,"int32");n.texData.get(p.dataId).usage=mr.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);let h=Q().getBool("WEBGL_PACK")?new kQ(d):new wQ(d),f=n.runWebGLProgram(h,[p],"int32");return n.disposeData(p.dataId),f}function TQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=_.convertConv2DDataFormat(u),g=_.computeConv2DInfo(s.shape,a.shape,c,d,l,p,!1,m),b,y=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))b=YN({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else if(Q().getBool("WEBGL_CONV_IM2COL")&&s.shape[0]===1)b=ZN({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else{let x=o!=null,w=i!=null,T=h==="leakyrelu",C=h?Nm(h,!1):null,D=new XN(g,x,C,w,T),F=[s,a];if(o&&F.push(o),i&&F.push(i),T){let O=n.makeTensorInfo([],"float32",k.createScalarValue(f,"float32"));F.push(O),y.push(O)}b=n.runWebGLProgram(D,F,"float32")}let v=ge({inputs:{x:b},backend:n,attrs:{shape:g.outShape}});return y.push(b),y.forEach(x=>n.disposeIntermediateTensorInfo(x)),v}var CQ={kernelName:Mo,backendName:"webgl",kernelFunc:TQ};function NQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dilations:u,dimRoundingMode:d,activation:p,leakyreluAlpha:h}=r,f=[],m=u;m==null&&(m=[1,1]),k.assert(_.eitherStridesOrDilationsAreOne(c,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${m}'`);let g=_.computeConv2DInfo(s.shape,a.shape,c,m,l,d,!0),b=Q().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,y=p?Nm(p,b):null,v=[s,a],x=o!=null,w=i!=null,T=p==="leakyrelu";if(x&&v.push(o),w&&v.push(i),T){let O=n.makeTensorInfo([],"float32",k.createScalarValue(h,"float32"));v.push(O),f.push(O)}let C;b?C=new n_(g,x,y,w,T):C=new t_(g,x,y,w,T);let D=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],F=n.runWebGLProgram(C,v,"float32",D);return f.forEach(O=>n.disposeIntermediateTensorInfo(O)),F}var _Q={kernelName:Lo,backendName:"webgl",kernelFunc:NQ},EQ=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let r=mt(t.length),s=mt(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${r} strides = ${r}(${this.strides});
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function AQ(e){let{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,o=a[a.length-1],i=k.sizeFromShape(r.shape),[c,l,u,d]=_.prepareAndValidate(r,s),p=ge({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),h=ge({inputs:{x:r},backend:n,attrs:{shape:[k.sizeFromShape(r.shape)/u,u]}});if(n.shouldExecuteOnCPU([r,s])||r.dtype==="string"){let b=n.readSync(s.dataId),y=n.bufferSync(r),v=H7(b,y,r.dtype,l,o,u,d,r.shape,i);return n.makeTensorInfo(c,r.dtype,v.values)}let f=new EQ(o,d,[l,u]),m=n.runWebGLProgram(f,[h,p],h.dtype),g=ge({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}var DQ={kernelName:gc,backendName:"webgl",kernelFunc:AQ},FQ=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=mt(this.rank),r=$Q(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function $Q(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<e.length;s++)s===2?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[s]}`);return r.join()}function u_(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:o,batchDims:i}=r,c=k.parseAxisParam(o,s.shape)[0],l=n.readSync(a.dataId),u=s.shape[c];for(let x=0;x<l.length;++x){let w=l[x];k.assert(w<=u-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${u-1}]`)}let d=_.segment_util.collectGatherOpShapeInfo(s,a,c,i),p=k.sizeFromShape(a.shape),h=[],f=ge({inputs:{x:s},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=ge({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}});h.push(f),h.push(m);let g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize];if(n.shouldExecuteOnCPU([s,a])||s.dtype==="string"){let x=n.bufferSync(m),w=n.bufferSync(f),T=j7(w,x,g);return h.forEach(C=>n.disposeIntermediateTensorInfo(C)),n.makeTensorInfo(d.outputShape,T.dtype,T.values)}let b=new FQ(f.shape,g),y=n.runWebGLProgram(b,[f,m],f.dtype);h.push(y);let v=ge({inputs:{x:y},backend:n,attrs:{shape:d.outputShape}});return h.forEach(x=>n.disposeIntermediateTensorInfo(x)),v}var RQ={kernelName:mc,backendName:"webgl",kernelFunc:u_},PQ="return float(a > b);",OQ=`
  return vec4(greaterThan(a, b));
`,MQ=cn({opSnippet:PQ,packedOpSnippet:OQ,cpuKernelImpl:q7,dtype:"bool"}),LQ={kernelName:bc,backendName:"webgl",kernelFunc:MQ},BQ="return float(a >= b);",zQ=`
  return vec4(greaterThanEqual(a, b));
`,WQ=cn({opSnippet:BQ,packedOpSnippet:zQ,dtype:"bool",cpuKernelImpl:K7}),VQ={kernelName:ro,backendName:"webgl",kernelFunc:WQ};function UQ(e){let{inputs:t,backend:n}=e,{input:r}=t;return i_(r,!0,n)}var GQ={kernelName:fh,backendName:"webgl",kernelFunc:UQ},HQ="return float(!isnan(x) && !isinf(x));",jQ=Xe({opSnippet:HQ,dtype:"bool"}),qQ={kernelName:yc,backendName:"webgl",kernelFunc:jQ},KQ="return float(isinf(x));",XQ=Xe({opSnippet:KQ,dtype:"bool"}),YQ={kernelName:vc,backendName:"webgl",kernelFunc:XQ},ZQ="return float(isnan(x));",JQ=Xe({opSnippet:ZQ,dtype:"bool"}),QQ={kernelName:xc,backendName:"webgl",kernelFunc:JQ},eee="return float(a < b);",tee=`
  return vec4(lessThan(a, b));
`,nee=cn({opSnippet:eee,packedOpSnippet:tee,cpuKernelImpl:X7,dtype:"bool"}),ree={kernelName:wc,backendName:"webgl",kernelFunc:nee},see="return float(a <= b);",aee=`
  return vec4(lessThanEqual(a, b));
`,oee=cn({opSnippet:see,packedOpSnippet:aee,cpuKernelImpl:Y7,dtype:"bool"}),iee={kernelName:kc,backendName:"webgl",kernelFunc:oee};function cee(e){let{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,o=Z7(r,s,a);return t.makeTensorInfo([o.length],"float32",o)}var uee={kernelName:gh,backendName:"webgl",kernelFunc:cee},lee=`if (x < 0.0) return NAN;
  return log(x);`,dee=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,pee=Xe({opSnippet:lee,packedOpSnippet:dee,cpuKernelImpl:J7}),hee={kernelName:oo,backendName:"webgl",kernelFunc:pee},fee="return log(1.0 + x);",mee=Xe({opSnippet:fee}),gee={kernelName:Ic,backendName:"webgl",kernelFunc:mee},bee="return float(a >= 1.0 && b >= 1.0);",yee=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,vee=cn({opSnippet:bee,packedOpSnippet:yee,dtype:"bool"}),xee={kernelName:Sc,backendName:"webgl",kernelFunc:vee},wee="return float(!(x >= 1.0));",kee=Xe({opSnippet:wee}),Iee={kernelName:Al,backendName:"webgl",kernelFunc:kee},See="return float(a >= 1.0 || b >= 1.0);",Tee=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Cee=cn({opSnippet:See,packedOpSnippet:Tee,dtype:"bool"}),Nee={kernelName:Dl,backendName:"webgl",kernelFunc:Cee},_ee=class{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];let a=t,o=e[3]-1;this.outputShape=e;let i,c=`float(${n}) + float(${r}) * sum`;s===.5?i=`inversesqrt(${c})`:s===1?i=`1.0/(${c})`:i=`exp(log(${c}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${i};
        setOutput(val);
      }
    `}},Eee=class{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,o=e[3]-1;this.outputShape=e;let i,c=`float(${n}) + float(${r}) * sum`;s===.5?i=`inversesqrt(${c})`:s===1?i=`1.0/(${c})`:i=`exp(log(${c}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${i};
        setOutput(result);
      }
    `}},Aee=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:o,alpha:i,beta:c}=r,l=Q().getBool("WEBGL_PACK_NORMALIZATION")?new Eee(s.shape,a,o,i,c):new _ee(s.shape,a,o,i,c);return n.runWebGLProgram(l,[s],s.dtype)},Dee={kernelName:Fl,backendName:"webgl",kernelFunc:Aee},Fee=class{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${s})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},$ee=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:o}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=r,d=new Fee(s.shape,i,c,l,u);return n.runWebGLProgram(d,[s,a,o],s.dtype)},Ree={kernelName:bh,backendName:"webgl",kernelFunc:$ee};function Pee(e,t,n,r){let s=k.sizeFromShape(t),o=k.sizeFromShape(e.shape)/s,i=ge({inputs:{x:e},attrs:{shape:[o,s]},backend:r}),c=yi(i,e.dtype,"max",r),l=ge({inputs:{x:c},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(c),l}function l_(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:o}=r,i=s.shape.length,c=k.parseAxisParam(a,s.shape),l=c,u=_.getAxesPermutation(l,i),d=u!=null,p=n.shouldExecuteOnCPU([s]),h=s;if(d){if(p){let v=n.texData.get(h.dataId).values,x=new Array(i);for(let C=0;C<x.length;C++)x[C]=s.shape[u[C]];let w=e1(v,s.shape,s.dtype,u,x);h=n.makeTensorInfo(x,s.dtype);let T=n.texData.get(h.dataId);T.values=w}else h=_m(s,u,n);l=_.getInnerMostAxes(l.length,i)}_.assertAxesAreInnerMostDims("max",l,i);let[f,m]=_.computeOutAndReduceShapes(h.shape,l),g=f;o&&(g=_.expandShapeToKeepDim(f,c));let b;if(p){let v=n.texData.get(h.dataId).values,x=Q7(v,k.sizeFromShape(m),g,s.dtype);b=n.makeTensorInfo(g,s.dtype);let w=n.texData.get(b.dataId);w.values=x}else b=Pee(h,m,g,n);return d&&n.disposeIntermediateTensorInfo(h),b}var Oee={kernelName:io,backendName:"webgl",kernelFunc:l_},Mee=_N+`
  return max(a, b);
`,Lee=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Cm+`
  return result;
`,Bee=cn({opSnippet:Mee,packedOpSnippet:Lee,cpuKernelImpl:e9}),zee={kernelName:co,backendName:"webgl",kernelFunc:Bee};function Wee(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Eu(s,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:c}=r,l=1;k.assert(_.eitherStridesOrDilationsAreOne(o,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);let u=_.computePool2DInfo(s.shape,a,o,l,i,c);if(u.filterWidth===1&&u.filterHeight===1&&k.arraysEqual(u.inShape,u.outShape))return sr({inputs:{x:s},backend:n});let d=new qd(u,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}var Vee={kernelName:uo,backendName:"webgl",kernelFunc:Wee};function Uee(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dataFormat:c,dimRoundingMode:l}=r,u=[1,1,1],d=_.computePool3DInfo(s.shape,a,o,u,i,l,c),p=new n1(d,"max",!1);return n.runWebGLProgram(p,[s],s.dtype)}var Gee={kernelName:$l,backendName:"webgl",kernelFunc:Uee},Hee=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=s-1-e.padInfo.top,i=a-1-e.padInfo.left,c=s*a-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},jee=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=i-1-e.padInfo.front,d=c-1-e.padInfo.top,p=l-1-e.padInfo.left,h=i*c*l-1;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${i};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function qee(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=r,d=[1,1,1],p=_.computePool3DInfo(o.shape,i,c,d,l,u),h=new n1(p,"max",!0),f=n.runWebGLProgram(h,[o],o.dtype),m=new jee(p),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}var Kee={kernelName:vh,backendName:"webgl",kernelFunc:qee};function Xee(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:o}=t,i=a;Eu([a,o],"maxPoolGrad");let{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=r,p=_.computePool2DInfo(i.shape,c,l,1,u,d),h=!0,f=new qd(p,"max",h),m=n.runWebGLProgram(f,[i],i.dtype),g=new Hee(p),b=n.runWebGLProgram(g,[s,m],i.dtype);return n.disposeIntermediateTensorInfo(m),b}var Yee={kernelName:yh,backendName:"webgl",kernelFunc:Xee};function Zee(e,t,n,r){let s=new qd(n,"max",!1),a=r.runWebGLProgram(s,[e],"float32");s=new qd(n,"max",!0,!0,t);let o=r.runWebGLProgram(s,[e],"float32");return[a,o]}var Jee={kernelName:xh,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:s,strides:a,pad:o,includeBatchInIndex:i}=t,c=n;k.assert(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let l=[1,1];k.assert(_.eitherStridesOrDilationsAreOne(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let u=_.computePool2DInfo(r.shape,s,a,l,o),[d,p]=Zee(r,i,u,c);return[d,p]}};function Qee(e,t,n,r){let s=k.sizeFromShape(t),o=k.sizeFromShape(e.shape)/s,i=ge({inputs:{x:e},attrs:{shape:[o,s]},backend:r}),c=yi(i,"float32","mean",r),l=ge({inputs:{x:c},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(c),l}var ete={kernelName:lo,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:s,axis:a}=t,o=n,i=r.shape.length,c=k.parseAxisParam(a,r.shape),l=c,u=_.getAxesPermutation(l,i),d=u!=null,p=o.shouldExecuteOnCPU([r]),h=[],f=r;if(d){if(p){let x=o.texData.get(f.dataId).values,w=new Array(i);for(let D=0;D<w.length;D++)w[D]=r.shape[u[D]];let T=e1(x,r.shape,r.dtype,u,w);f=o.makeTensorInfo(w,r.dtype);let C=o.texData.get(f.dataId);C.values=T}else f=_m(r,u,o);h.push(f),l=_.getInnerMostAxes(l.length,i)}_.assertAxesAreInnerMostDims("sum",l,i);let[m,g]=_.computeOutAndReduceShapes(f.shape,l),b=m;s&&(b=_.expandShapeToKeepDim(m,c));let y=Qee(f,g,b,o);for(let v of h)o.disposeIntermediateTensorInfo(v);return y}};function tte(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,c=k.parseAxisParam(a,s.shape),l=c,u=_.getAxesPermutation(l,i),d=s;u!=null&&(d=Tn({inputs:{x:s},backend:n,attrs:{perm:u}}),l=_.getInnerMostAxes(l.length,s.shape.length)),_.assertAxesAreInnerMostDims("min",l,i);let[p,h]=_.computeOutAndReduceShapes(d.shape,l),f=k.sizeFromShape(h),m=ge({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=yi(m,m.dtype,"min",n),b;if(o){let y=_.expandShapeToKeepDim(p,c);b=ge({inputs:{x:g},backend:n,attrs:{shape:y}})}else b=ge({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),b}var nte={kernelName:po,backendName:"webgl",kernelFunc:tte},rte=_N+`
  return min(a, b);
`,ste=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Cm+`
  return result;
`,ate=cn({opSnippet:rte,packedOpSnippet:ste,cpuKernelImpl:t9}),ote={kernelName:ho,backendName:"webgl",kernelFunc:ate},ite=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((l,u)=>l[0]+e[u]+l[1]);let r=e.length,s=mt(r),a=t.map(l=>l[0]).join(","),o=t.map((l,u)=>l[0]+e[u]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),c=n==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${o});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${i}));
      }
    `}},cte=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,f)=>h[0]+e[f]+h[1]);let r=e.length,s=mt(r),a=t.map(h=>h[0]).join(","),o=t.map((h,f)=>h[0]+e[f]).join(","),i=Sn("rc",r),c=Sn("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,u=r===1?"source":`vec2(${c.slice(-2).join()})`,d=n==="reflect"?0:1,p="";if(r===1){let h=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${s} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${c.join()}), ${u});
        ${i[r-1]} += 1;
        if(${l}) {
          ${h}
          result[1] = getChannel(getX(${c.join()}), ${u});
        }
      `}else{let h=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${s} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${c.join()}), ${u});
        ${i[r-1]} += 1;
        if(${l}) {
          ${h}
          result[1] = getChannel(getX(${c.join()}), ${u});
        }
        rc = outputLoc;
        ${i[r-2]} += 1;
        if(${i[r-2]} < ${this.outputShape[r-2]}) {
          ${h}
          result[2] = getChannel(getX(${c.join()}), ${u});
          ${i[r-1]} += 1;
          if(${l}) {
            ${h}
            result[3] = getChannel(getX(${c.join()}), ${u});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${o});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}},ute=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:s,mode:a}=n,o=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new cte(r.shape,s,a):new ite(r.shape,s,a);return t.runWebGLProgram(o,[r],r.dtype)},lte={kernelName:fo,backendName:"webgl",kernelFunc:ute},dte=`if (b == 0.0) return NAN;
  return mod(a, b);`,pte=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+Cm+`
  return result;
`,hte=cn({opSnippet:dte,packedOpSnippet:pte}),fte={kernelName:Tc,backendName:"webgl",kernelFunc:hte},mte=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},gte=`
if (a == b) {
  return 1.0;
};
return a / b;`,bte=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,d_=cn({opSnippet:gte,packedOpSnippet:bte,checkOutOfBounds:!0}),yte={kernelName:Za,backendName:"webgl",kernelFunc:d_},p_="return a - b;",h_=cn({opSnippet:p_,packedOpSnippet:p_,supportsComplex:!0,cpuKernelImpl:b9}),vte={kernelName:Fo,backendName:"webgl",kernelFunc:h_};function f_(e){let{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,o=k.parseAxisParam([a],s.shape),i=l_({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),c=_.expandShapeToKeepDim(i.shape,o),l=ge({inputs:{x:i},backend:n,attrs:{shape:c}}),u=h_({inputs:{a:s,b:l},backend:n}),d=s_({inputs:{x:u},backend:n}),p=Em({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),h=ge({inputs:{x:p},backend:n,attrs:{shape:c}}),f=d_({inputs:{a:d,b:h},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}var xte={kernelName:Ao,backendName:"webgl",kernelFunc:f_};function wte(e){let{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:o,normalized:i}=r,c=i?s:f_({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=c.shape[0],u=c.shape[1],d=new mte(l,u,a),p=[[o]],h=n.runWebGLProgram(d,[c],"int32",p);return i||n.disposeIntermediateTensorInfo(c),h}var kte={kernelName:wh,backendName:"webgl",kernelFunc:wte},m_="return -x;";function Ite(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){let a=n.texData.get(r.dataId),[o,i]=r9(a.values,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,o)}let s;return Q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new Ru(r.shape,m_):s=new Sa(r.shape,m_),n.runWebGLProgram(s,[r],r.dtype)}var Ste={kernelName:Cc,backendName:"webgl",kernelFunc:Ite},Tte=rs.nonMaxSuppressionV3Impl;function Cte(e){_.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=r,l=n.readSync(s.dataId),u=n.readSync(a.dataId),{selectedIndices:d}=Tte(l,u,o,i,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var Nte={kernelName:_c,backendName:"webgl",kernelFunc:Cte},_te=rs.nonMaxSuppressionV4Impl;function Ete(e){_.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=r,u=n.readSync(s.dataId),d=n.readSync(a.dataId),{selectedIndices:p,validOutputs:h}=_te(u,d,o,i,c,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var Ate={kernelName:Ec,backendName:"webgl",kernelFunc:Ete},Dte=rs.nonMaxSuppressionV5Impl;function Fte(e){_.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=r,u=n.readSync(s.dataId),d=n.readSync(a.dataId),p=o,h=i,f=c,m=l,{selectedIndices:g,selectedScores:b}=Dte(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var $te={kernelName:Ac,backendName:"webgl",kernelFunc:Fte},Rte=class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${n}),
                      float(index == coords.y)));
      }
    `}},Pte=e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:o,offValue:i}=r,c=k.sizeFromShape(s.shape),l=new Rte(c,a,o,i),u=ge({inputs:{x:s},backend:n,attrs:{shape:[c]}}),d=n.runWebGLProgram(l,[u],s.dtype);n.disposeIntermediateTensorInfo(u);let p=[...s.shape,a],h=ge({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),h},Ote={kernelName:go,backendName:"webgl",kernelFunc:Pte};function Rm(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="complex64"){let s=Kd({inputs:{input:r},backend:n}),a=Rm({inputs:{x:s},backend:n}),o=$m({inputs:{input:r},backend:n}),i=Rm({inputs:{x:o},backend:n}),c=Ta({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}else return Xd({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:n})}var Mte={kernelName:Yc,backendName:"webgl",kernelFunc:Rm};function g_(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){let s=Kd({inputs:{input:r},backend:n}),a=g_({inputs:{x:s},backend:n}),o=$m({inputs:{input:r},backend:n}),i=Rm({inputs:{x:o},backend:n}),c=Ta({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}else return Xd({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}var Lte={kernelName:Dc,backendName:"webgl",kernelFunc:g_};function Bte(e){let{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(t.length===1)return a1({inputs:{input:t[0]},backend:n,attrs:{dim:s}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{k.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),k.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],c=t.map(u=>{let d=a1({inputs:{input:u},backend:n,attrs:{dim:s}});return i.push(d),d}),l=KN({inputs:c,backend:n,attrs:{axis:s}});return i.forEach(u=>n.disposeIntermediateTensorInfo(u)),l}var zte={kernelName:Fc,backendName:"webgl",kernelFunc:Bte},Wte=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((c,l)=>c[0]+e[l]+c[1]);let r=e.length,s=mt(r),a=t.map(c=>c[0]).join(","),o=t.map((c,l)=>c[0]+e[l]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${o});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${i}));
        }
      }
    `}},Vte=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let r=e.length,s=mt(r),a=t.map(f=>f[0]).join(","),o=t.map((f,m)=>f[0]+e[m]).join(","),i=Sn("rc",r),c=Sn("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,u=r===1?"source":`vec2(${c.slice(-2).join()})`,d=[`${s} rc = outputLoc;`,`${i[r-1]} += 1;
       if(${l}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${i[r-2]} += 1;
       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${i[r-1]} += 1;
         if(${l}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let f=0,m=r===1?2:4;f<m;f++)h+=`
        ${d[f]}
        if (${p}) {
          result[${f}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${f}] = getChannel(getX(${c.join()}), ${u});
        }
      `;h+=r===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${o});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},b_=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:o}=r;if(k.sizeFromShape(s.shape)===0){let l=a.map((u,d)=>u[0]+s.shape[d]+u[1]);return Xd({backend:n,attrs:{shape:l,value:o,dtype:s.dtype}})}let i=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Vte(s.shape,a,o):new Wte(s.shape,a,o),c=[[o]];return n.runWebGLProgram(i,[s],s.dtype,c)},Ute={kernelName:bo,backendName:"webgl",kernelFunc:b_},Gte=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Hte=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+Cm+`
  return result;
`,jte=cn({opSnippet:Gte,packedOpSnippet:Hte}),qte={kernelName:yo,backendName:"webgl",kernelFunc:jte};function Kte(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,c=[],l=k.parseAxisParam(a,s.shape),u=l,d=_.getAxesPermutation(u,i),p=s;d!=null&&(p=Tn({inputs:{x:s},backend:n,attrs:{perm:d}}),u=_.getInnerMostAxes(u.length,i),c.push(p)),_.assertAxesAreInnerMostDims("prod",u,i);let h;if(n.shouldExecuteOnCPU([p])){let f=n.texData.get(p.dataId).values,{outVals:m,outShape:g,outDtype:b}=a9(p.shape,p.dtype,f,u);h=n.makeTensorInfo(g,b,m)}else{let[f,m]=_.computeOutAndReduceShapes(p.shape,u),g=k.sizeFromShape(m),b=ge({inputs:{x:p},backend:n,attrs:{shape:[-1,g]}}),y=Mh(s.dtype),v=yi(b,y,"prod",n);h=ge({inputs:{x:v},backend:n,attrs:{shape:f}}),c.push(b),c.push(v)}if(o){c.push(h);let f=_.expandShapeToKeepDim(h.shape,l);h=ge({inputs:{x:h},backend:n,attrs:{shape:f}})}return c.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var Xte={kernelName:$c,backendName:"webgl",kernelFunc:Kte},y_=e=>{let{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:o}=n,i=o9(r,s,a,o);return t.makeTensorInfo([i.length],o,i)},Yte={kernelName:Rl,backendName:"webgl",kernelFunc:y_},Zte="return 1.0 / x;",Jte=Xe({opSnippet:Zte}),Qte={kernelName:Rc,backendName:"webgl",kernelFunc:Jte},ene=qr+`
  return (x < 0.0) ? 0.0 : x;
`,tne=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,nne=Xe({opSnippet:ene,packedOpSnippet:tne}),rne={kernelName:xo,backendName:"webgl",kernelFunc:nne},sne=qr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,ane=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,one=Xe({opSnippet:sne,packedOpSnippet:ane}),ine={kernelName:ko,backendName:"webgl",kernelFunc:one},cne=class{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];let[a,o,i,c]=e;this.outputShape=[a,t,n,c];let l=[r&&t>1?o-1:o,r&&n>1?i-1:i],u=[r&&t>1?t-1:t,r&&n>1?n-1:n],d;s?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/u[0]},
          ${l[1]/u[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},une=class{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,c]=e;this.outputShape=[a,t,n,c];let l=[r&&t>1?o-1:o,r&&n>1?i-1:i],u=[r&&t>1?t-1:t,r&&n>1?n-1:n],d;s?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/u[0]},
          ${l[1]/u[1]},
          ${l[1]/u[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function lne(e){let{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[c,l]=i,u=Q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new une(s.shape,c,l,a,o):new cne(s.shape,c,l,a,o);return n.runWebGLProgram(u,[s],"float32")}var dne={kernelName:wo,backendName:"webgl",kernelFunc:lne},pne=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,s]=t,[,a,o]=e,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],c=[n&&a>1?a-1:a,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],d=1/l,p=1/u,h=Math.ceil(d)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${u});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function hne(e){let{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r,i=new pne(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var fne={kernelName:Sh,backendName:"webgl",kernelFunc:hne},mne=class{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];let[a,o,i,c]=e;this.outputShape=[a,t,n,c];let l=[r&&t>1?o-1:o,r&&n>1?i-1:i],u=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0",p;s?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/u[0]},
          ${l[1]/u[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},gne=class{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,c]=e;this.outputShape=[a,t,n,c];let l=[r&&t>1?o-1:o,r&&n>1?i-1:i],u=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0",p;s?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/u[0]},
          ${l[1]/u[1]},
          ${l[1]/u[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function bne(e){let{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[c,l]=i,u=Q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new gne(s.shape,c,l,a,o):new mne(s.shape,c,l,a,o);return n.runWebGLProgram(u,[s],s.dtype)}var yne={kernelName:Pl,backendName:"webgl",kernelFunc:bne},vne=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,s]=t,[,a,o]=e,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],c=[n&&a>1?a-1:a,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],d=1/l,p=1/u,h=Math.ceil(d)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${u});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${i[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${i[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function xne(e){let{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r,i=new vne(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var wne={kernelName:Ih,backendName:"webgl",kernelFunc:xne},kne=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let r=o=>t.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,s=e.map((o,i)=>r(i)).join(","),a=mt(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}},Ine=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=Sn("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=mt(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${i(r.slice())};
          if(${s}){
            result.g = ${c(r.slice())};
          }
          if(${a}) {
            result.b = ${l(r.slice())};
            if(${s}) {
              result.a = ${u(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function i(h){return d(h)}function c(h){return h[n-1]="("+h[n-1]+" + 1)",d(h)}function l(h){return h[n-2]="("+h[n-2]+" + 1)",d(h)}function u(h){return h[n-1]="("+h[n-1]+" + 1)",h[n-2]="("+h[n-2]+" + 1)",d(h)}function d(h){let f=e.map((b,y)=>p(y,h)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function p(h,f){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${f[h]} - 1`:`${f[h]}`}}};function Sne(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,o=s.shape.length,i=k.parseAxisParam(a,s.shape);if(o===0)return sr({inputs:{x:s},backend:n});let c=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ine(s.shape,i):new kne(s.shape,i);return n.runWebGLProgram(c,[s],s.dtype)}var Tne={kernelName:Io,backendName:"webgl",kernelFunc:Sne},Cne=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let s="";typeof t=="number"?s=`float outputValue = ${t.toFixed(2)};`:s=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Nne={kernelName:Zc,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:s,fillValue:a,center:o}=t,i=n,c=new Cne(r.shape,a),[l,u]=_.getImageCenter(o,r.shape[1],r.shape[2]),d=[[l,u,Math.sin(s),Math.cos(s)]];return i.runWebGLProgram(c,[r],r.dtype,d)}},_ne=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Ene=Xe({opSnippet:_ne}),Ane={kernelName:So,backendName:"webgl",kernelFunc:Ene},Dne="return inversesqrt(x);",Fne=Xe({opSnippet:Dne,cpuKernelImpl:i9}),$ne={kernelName:To,backendName:"webgl",kernelFunc:Fne},v_=class{constructor(e,t,n,r,s,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let i=mt(s.length),c=mt(a.length),l="";n===1?l="i":n===2&&(l="i, j");let u=`getIndices(${l})`,d="";r===1?d="i":r===2&&(d="i, coords[1]");let p=`getUpdates(${d})`,h=t>1?"strides[j]":"strides";this.userCode=`
        ${i} strides = ${i}(${s});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${u});
              flattenedIndex += index * ${h};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function Rne(e){let{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:o}=r,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:d}=_.calculateShapes(a,s,o),p=[d/l,l];if(d===0)return n.makeTensorInfo(o,s.dtype);let h=ge({inputs:{x:s},backend:n,attrs:{shape:[c,i]}}),f=ge({inputs:{x:a},backend:n,attrs:{shape:[c,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new v_(c,i,h.shape.length,f.shape.length,u,p),b=n.runWebGLProgram(g,[f,h,m],f.dtype),y=ge({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),y}var Pne={kernelName:Oc,backendName:"webgl",kernelFunc:Rne},One=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let r,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",r="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],c=[];for(let l=0;l<t.length;l++)c.push(`${o[l]}`),l<e&&i.push(`${o[l]}`);r=i.join(),s=c.join()}let a=mt(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function Mne(e){let{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,o=new One(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(o,[r,s,a],Sr(s.dtype,a.dtype))}var Lne={kernelName:Mc,backendName:"webgl",kernelFunc:Mne},Bne=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${_.SELU_SCALEALPHA};
  float scale = ${_.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,zne=Xe({opSnippet:Bne}),Wne={kernelName:Lc,backendName:"webgl",kernelFunc:zne},x_="return 1.0 / (1.0 + exp(-1.0 * x));",Vne=Xe({opSnippet:x_,packedOpSnippet:x_,cpuKernelImpl:c9}),Une={kernelName:No,backendName:"webgl",kernelFunc:Vne},Gne=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Hne=Xe({opSnippet:Gne}),jne={kernelName:Wc,backendName:"webgl",kernelFunc:Hne},qne=$N+`
  return sin(x);
`,Kne=Xe({opSnippet:qne}),Xne={kernelName:Co,backendName:"webgl",kernelFunc:Kne},Yne=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Zne=Xe({opSnippet:Yne}),Jne={kernelName:zc,backendName:"webgl",kernelFunc:Zne},Qne=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,ere=Xe({opSnippet:Qne}),tre={kernelName:Vc,backendName:"webgl",kernelFunc:ere},nre=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r;k.assert(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((b,y)=>b*y),c=[[0,0]];c.push(...o);for(let b=1+a.length;b<s.shape.length;++b)c.push([0,0]);let l=[],u=b_({inputs:{x:s},backend:n,attrs:{paddings:c,constantValue:0}}),d=_.getReshaped(u.shape,a,i,!1),p=_.getPermuted(d.length,a.length,!1),h=_.getReshapedPermuted(u.shape,a,i,!1),f=ge({inputs:{x:u},backend:n,attrs:{shape:d}}),m=Tn({inputs:{x:f},backend:n,attrs:{perm:p}}),g=ge({inputs:{x:m},backend:n,attrs:{shape:h}});return l.push(u),l.push(f),l.push(m),l.forEach(b=>n.disposeIntermediateTensorInfo(b)),g},rre={kernelName:Uc,backendName:"webgl",kernelFunc:nre};function sre(e){let{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${s.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.readSync(r.dataId),c=n.readSync(s.dataId),l=n.readSync(a.dataId),u=n.readSync(o.dataId)[0],[d,p,h,f,m]=l9(i,r.shape,r.dtype,c,s.dtype,l,u);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],s.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}var are={kernelName:Ol,backendName:"webgl",kernelFunc:sre};function ore(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.readSync(s.dataId)),i=n.readSync(r.dataId),c=Array.from(n.readSync(a.dataId)),[l,u,d]=d9(i,r.shape,r.dtype,o,c);return[n.makeTensorInfo(u,r.dtype,l),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var ire={kernelName:Hc,backendName:"webgl",kernelFunc:ore};function cre(e){let{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${s.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);let o=n.readSync(r.dataId),i=n.readSync(s.dataId),c=n.readSync(a.dataId),[l,u]=xN(o,r.shape,r.dtype,i,c,!0);return n.makeTensorInfo(u,r.dtype,l)}var ure={kernelName:Ml,backendName:"webgl",kernelFunc:cre};function lre(e){let{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${s.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);let o=n.readSync(r.dataId),i=n.readSync(s.dataId),c=n.readSync(a.dataId),[l,u]=xN(o,r.shape,r.dtype,i,c);return n.makeTensorInfo(u,r.dtype,l)}var dre={kernelName:Ll,backendName:"webgl",kernelFunc:lre};function pre(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:c,numUpdates:l,strides:u,outputSize:d}=_.calculateShapes(a,s,i),p=!1,h=new v_(l,c,s.shape.length,a.shape.length,u,[d,1],p),f=n.runWebGLProgram(h,[a,s,o],a.dtype),m=ge({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),m}var hre={kernelName:Th,backendName:"webgl",kernelFunc:pre};function fre(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=r,i=k.parseAxisParam(o,s.shape)[0],c=_.prepareSplitSize(s,a,i),l=s.shape.length,u=new Array(l).fill(0),d=s.shape.slice();return c.map(p=>{let h=[...d];h[i]=p;let f=Ou({inputs:{x:s},backend:n,attrs:{begin:u,size:h}});return u[i]+=p,f})}var mre={kernelName:Gc,backendName:"webgl",kernelFunc:fre},w_="return sqrt(x);",gre=Xe({opSnippet:w_,packedOpSnippet:w_,cpuKernelImpl:p9}),bre={kernelName:_o,backendName:"webgl",kernelFunc:gre},yre="return x * x;",vre=Xe({opSnippet:yre}),xre={kernelName:Bl,backendName:"webgl",kernelFunc:vre},k_="return (a - b) * (a - b);",wre=cn({opSnippet:k_,packedOpSnippet:k_}),kre={kernelName:Do,backendName:"webgl",kernelFunc:wre};function Ire({inputs:e,attrs:t,backend:n}){let{x:r}=e,s=qr+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,a=new Sa(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}var Sre={kernelName:ea,backendName:"webgl",kernelFunc:Ire},Tre=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,s=mt(n.length),a=mt(n.length),o="";if(r===1)o="coords * strides + begin";else{let i=0;o=n.map((c,l)=>(i++,n.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${i-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${e});
      ${s} strides = ${s}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}};function Cre(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:o,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=r,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=Gt.sliceInfo(s.shape,a,o,i,c,l,u,d,p),w;if(m)w=ge({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||b){k.assert(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);let C=Gt.computeOutShape(y,v,x),D=Ou({inputs:{x:s},backend:n,attrs:{begin:y,size:C}});w=ge({inputs:{x:D},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(D)}else if(n.shouldExecuteOnCPU([s])){let D=n.readSync(s.dataId),F=Be(s.shape,s.dtype,D),O=h9(h,F,x,y);w=n.makeTensorInfo(f,s.dtype,O.values)}else{let D=new Tre(y,x,h);w=n.runWebGLProgram(D,[s],s.dtype)}let T=ge({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),T}var Nre={kernelName:jc,backendName:"webgl",kernelFunc:Cre};function _re(e){let{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=r,{data:u,dataSplits:d}=t,p=n.readSync(u.dataId),h=n.readSync(d.dataId),[f,m]=f9(p,h,s,a,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var Ere={kernelName:Ch,backendName:"webgl",kernelFunc:_re};function Are(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.readSync(a.dataId),c=n.readSync(o.dataId)[0],[l,u,d]=m9(i,c,s),p=u.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var Dre={kernelName:Nh,backendName:"webgl",kernelFunc:Are};function Fre(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");let o=n.readSync(a.dataId),i=g9(o,s);return n.makeTensorInfo(a.shape,"int32",i)}var $re={kernelName:_h,backendName:"webgl",kernelFunc:Fre},Rre="return tan(x);",Pre=Xe({opSnippet:Rre}),Ore={kernelName:$o,backendName:"webgl",kernelFunc:Pre},Mre=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Lre=Xe({opSnippet:Mre}),Bre={kernelName:Ro,backendName:"webgl",kernelFunc:Lre},zre=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let r=mt(this.rank),s=Wre(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function Wre(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<e.length;s++)r.push(`imod(${n[s]}, ${e[s]})`);return r.join()}function I_(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if(s.dtype==="string"||s.shape.length>5){let c=n.readSync(s.dataId),l=s.dtype==="string"?c.map(p=>k.decodeString(p)):c,u=Be(s.shape,s.dtype,l),d=y9(u,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let o=new zre(s.shape,a);return n.runWebGLProgram(o,[s],s.dtype)}var Vre={kernelName:Qs,backendName:"webgl",kernelFunc:I_},Ure=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Gre=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function vi(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function S_(e){let t=1;for(;t<e;)t*=2;return t}function Hre(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:o}=r,i=Q().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=Q().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,u=l[l.length-1];if(n.shouldExecuteOnCPU([s])||u<i||a>c){let O=n.readSync(s.dataId),[$,R]=v9(O,l,s.dtype,a,o);return[n.makeTensorInfo($.shape,$.dtype,$.values),n.makeTensorInfo(R.shape,R.dtype,R.values)]}if(a===0)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(u===1)return[s,Xd({attrs:{shape:l,dtype:"int32",value:0},backend:n})];let d=n.texData.get(s.dataId),p=d!==null&&d.isPacked,h=p?n.unpackTensor(s):s,m=k.sizeFromShape(l)/u,g=ge({inputs:{x:h},attrs:{shape:[m,u]},backend:n});p&&vi(n,h);let b=S_(a),y=S_(u),v=null,x=()=>v===null?[g,g]:[g,v],w=(O,$,R)=>{let N=x(),L=new Ure(R),j=[[u],[v===null?1:0],[Number.NEGATIVE_INFINITY],[O],[$]],K=v;v=n.runWebGLProgram(L,N,"int32",j),vi(n,K)};for(let O=1;O<b;O*=2){let $=O*2;for(let R=O;R>=1;R/=2)w($,R,[m,y])}for(let O=y;O>b;O/=2){let $=x(),R=new Gre([m,O/2]),L=[[u],[v===null?1:0],[b]],G=v;v=n.runWebGLProgram(R,$,"int32",L),vi(n,G);let j=b/2,K=j*2;for(let q=j;q>=1;q/=2)w(K,q,v.shape)}let T=v;v=Ou({inputs:{x:v},backend:n,attrs:{begin:0,size:[m,a]}}),vi(n,T);let C=u_({inputs:{x:g,indices:v},backend:n,attrs:{axis:1,batchDims:1}});vi(n,g);let D=l.slice(0,-1);D.push(a),T=v,v=ge({inputs:{x:v},attrs:{shape:D},backend:n}),vi(n,T);let F=C;return C=ge({inputs:{x:C},attrs:{shape:D},backend:n}),vi(n,F),[C,v]}var jre={kernelName:qc,backendName:"webgl",kernelFunc:Hre},qre=class{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;let o=n==="nearest"?1:2,i;switch(r){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${i} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Kre(e){let{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=r,[u,d,p,h]=s.shape,[f,m]=l!=null?l:[d,p],g=[u,f,m,h],b=new qre(d,p,o,i,c,g);return n.runWebGLProgram(b,[s,a],"float32")}var Xre={kernelName:Kc,backendName:"webgl",kernelFunc:Kre};function Yre(e){let{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;Eu(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let o=r.readSync(a.dataId),{outputValues:i,outputShape:c,indices:l}=x9(o,s,a.shape,a.dtype);return[r.makeTensorInfo(c,a.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}var Zre={kernelName:Eh,backendName:"webgl",kernelFunc:Yre};function Jre(e){let{inputs:t,backend:n,attrs:r}=e,{value:s}=t,{axis:a}=r;a<0&&(a+=s.shape.length);let o=s,i=o.shape.length,c=s.shape[a],l=new Array(i-1),u=0;for(let m=0;m<i;m++)m!==a&&(l[u++]=o.shape[m]);let d=[],p=new Array(i).fill(0),h=o.shape.slice();h[a]=1;let f=new Array(c);for(let m=0;m<f.length;m++){p[a]=m;let g=Ou({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),b=ge({inputs:{x:g},backend:n,attrs:{shape:l}});f[m]=b,d.push(g)}return d.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var Qre={kernelName:Xc,backendName:"webgl",kernelFunc:Jre},ese=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,o=a*Math.ceil(s/n);this.outputShape=[r,o];let i="0.0",c="sumValue",l=Math.floor(n/4)*4,u=n%4,d=`
        sumValue += dot(values, segFilter);
    `,p="";s%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let h="";s%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${i};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${l};
        if (${u===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${c});
      }
    `}};function tse(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:o}=r,i=s.shape.length,c=[],l=0,u=_.getAxesPermutation([l],i),d=s;u!=null&&(d=Tn({inputs:{x:s},backend:n,attrs:{perm:u}}),c.push(d),l=_.getInnerMostAxes(1,i)[0]);let p=_.segment_util.computeOutShape(d.shape,l,o),h=k.sizeFromShape([d.shape[l]]),f=ge({inputs:{x:d},backend:n,attrs:{shape:[-1,h]}});c.push(f);let m=Mh(s.dtype),g=(x,w,T,C,D)=>{let F=x.shape[0],O=x.shape[1],$=_.segment_util.segOpComputeOptimalWindowSize(O,D),R={windowSize:$,inSize:O,batchSize:F,numSegments:D},N=new ese(R,w),L=n.compileAndRun(N,[x,T],C);if(c.push(L),L.shape[1]===D)return L;let G=y_({backend:n,attrs:{start:0,stop:D,step:1,dtype:"float32"}}),j=I_({inputs:{x:G},backend:n,attrs:{reps:[O/$]}});return c.push(G),c.push(j),g(L,w,j,C,D)},b=g(f,"unsortedSegmentSum",a,m,o),y=ge({inputs:{x:b},backend:n,attrs:{shape:p}}),v=y;if(u!=null){c.push(y);let x=_.getUndoAxesPermutation(u);v=Tn({inputs:{x:v},backend:n,attrs:{perm:x}})}return c.forEach(x=>n.disposeIntermediateTensorInfo(x)),v}var nse={kernelName:zl,backendName:"webgl",kernelFunc:tse},rse=[Dee,Ree,mY,bY,xY,IY,TY,_Y,AY,FY,OY,LY,WY,GY,ZY,qY,eZ,sZ,nZ,cZ,lZ,pZ,gZ,IZ,TZ,NZ,$Z,PZ,BZ,VZ,Y9,qZ,rJ,aJ,ZZ,uJ,dJ,iJ,fJ,bJ,xJ,kJ,SJ,NJ,$J,PJ,EJ,LJ,WJ,UJ,qJ,ZJ,tQ,sQ,aQ,oQ,cQ,lQ,pQ,fQ,gQ,xQ,IQ,CQ,_Q,DQ,RQ,LQ,VQ,X9,GQ,HZ,qQ,YQ,QQ,J9,ree,iee,uee,gee,hee,xee,Iee,Nee,Oee,Gee,Vee,Kee,Yee,Jee,zee,ete,nte,ote,lte,fte,kte,rY,Ste,Nte,Ate,$te,EZ,Ote,Lte,zte,Ute,qte,eY,Xte,Yte,AZ,yte,Qte,ine,rne,aY,dne,fne,yne,wne,Tne,Nne,Ane,$ne,Pne,Lne,Wne,Une,jne,Xne,Jne,wZ,xte,tre,rre,are,ire,ure,dre,hre,mre,bre,xre,kre,Sre,Nre,Ere,Dre,$re,vte,pY,Ore,Bre,Vre,jre,Xre,hY,Zre,Qre,nse,Mte];for(let e of rse)Vl(e);var $t;(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})($t||($t={}));var Yd;(function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"})(Yd||(Yd={}));var T_;function sse(e){T_=e.wasm.cwrap(Oo,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function ase(e){let{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t;if(s.dtype!=="float32"||a.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:d}=r,p=n.dataIdMap.get(s.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=0;if(o!=null){let D=n.dataIdMap.get(o.dataId);if(D.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${D.shape.length}.`);f=D.id}let m=i==null?0:n.dataIdMap.get(i.dataId).id,g=Yd[u];if(g==null)throw new Error(`${u} activation not yet supported for FusedConv2D in the wasm backend.`);let b=c?s.shape[2]:s.shape[1],y=l?a.shape[1]:a.shape[2],v=su.assertAndGetBroadcastShape(s.shape.slice(0,-2),a.shape.slice(0,-2)),x=n.makeOutput([...v,b,y],s.dtype),w=n.dataIdMap.get(x.dataId).id,T=new Uint8Array(new Int32Array(s.shape).buffer),C=new Uint8Array(new Int32Array(a.shape).buffer);return T_(p,T,s.shape.length,h,C,a.shape.length,c,l,g,f,m,d||0,w),x}var ose={kernelName:Oo,backendName:"wasm",setupFunc:sse,kernelFunc:ase};function un(e,t){let n;function r(a){n=a.wasm.cwrap(e,null,["number","number","number"])}function s(a){let{backend:o,inputs:{x:i}}=a,c=o.dataIdMap.get(i.dataId).id,l=o.makeOutput(i.shape,t||i.dtype),u=o.dataIdMap.get(l.dataId).id;return k.sizeFromShape(l.shape)===0||n(c,$t[i.dtype],u),l}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:s}}var ise=un(Yi);function Cn(e,t,n){let r;function s(o){r=o.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function a(o){let{backend:i,inputs:c}=o,{a:l,b:u}=c,d=i.dataIdMap.get(l.dataId).id,p=i.dataIdMap.get(u.dataId).id,h=n!=null?n:l.dtype,f=_.assertAndGetBroadcastShape(l.shape,u.shape),m=i.makeOutput(f,h);if(k.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(l.shape).buffer),b=new Uint8Array(new Int32Array(u.shape).buffer),y=i.dataIdMap.get(m.dataId).id;return(()=>r(d,g,l.shape.length,p,b,u.shape.length,$t[l.dtype],y))(),m}return{kernelName:e,backendName:"wasm",setupFunc:s,kernelFunc:a}}var cse=!0,use=Cn(Zs,cse),C_;function lse(e){C_=e.wasm.cwrap(Ba,null,["array","number","number","number"])}function dse(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(k.sizeFromShape(r.shape)===0)return r;let s=t.map(i=>n.dataIdMap.get(i.dataId).id),a=new Uint8Array(new Int32Array(s).buffer),o=n.dataIdMap.get(r.dataId).id;return C_(a,s.length,$t[r.dtype],o),r}var pse={kernelName:Ba,backendName:"wasm",setupFunc:lse,kernelFunc:dse};function Pm(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),s=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(s),r}var hse={kernelName:so,backendName:"wasm",kernelFunc:Pm},N_;function fse(e){N_=e.wasm.cwrap(Po,null,["number","array","number","number","number","array","number"])}function Bu(e){let{inputs:t,backend:n,attrs:r}=e,[s,a]=gse(t.x.shape,r.perm),o=!0;for(let f=0;f<a.length;f++)a[f]!==f&&(o=!1);let i=mse(t.x.shape,r.perm),c={dataId:t.x.dataId,shape:s,dtype:t.x.dtype};if(o){let f=Pm({inputs:t,backend:n});return f.shape=i,f}let l=n.makeOutput(i,c.dtype),u=n.dataIdMap.get(c.dataId).id,d=n.dataIdMap.get(l.dataId).id,p=new Uint8Array(new Int32Array(a).buffer),h=new Uint8Array(new Int32Array(c.shape).buffer);return N_(u,h,c.shape.length,$t[c.dtype],d,p,a.length),l}function mse(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}function gse(e,t){let n=[],r=[];for(let s=0;s<e.length;++s)e[s]!==1&&n.push(e[s]),e[t[s]]!==1&&r.push(t[s]);for(let s=0;s<r.length;++s){let a=-1;for(let o=0;o<r.length;++o)r[o]>=s&&(a===-1||r[a]>r[o])&&(a=o);r[a]=s}return[n,r]}var bse={kernelName:Po,backendName:"wasm",kernelFunc:Bu,setupFunc:fse};function Ca(e,t,n){let r=e.shape,s=e.shape.length,a=k.parseAxisParam(t,r),o=a,i=_.getAxesPermutation(o,s),c=null,l=!1;if(i!=null){let u=new Array(s);for(let h=0;h<u.length;h++)u[h]=r[i[h]];o=_.getInnerMostAxes(o.length,s),c=Bu({inputs:{x:e},attrs:{perm:i},backend:n});let d=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(c.dataId).id!==d&&(l=!0)}return{transposed:c,originalAxes:a,axes:o,inputWasTransposed:l}}var __;function yse(e){__=e.wasm.cwrap(Qi,null,["number, number, number"])}function vse(e){let{backend:t,inputs:n,attrs:r}=e,{axis:s,keepDims:a}=r,{x:o}=n,c=t.dataIdMap.get(o.dataId).id,l=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Ca(o,s,t);if(h){let v=t.dataIdMap.get(u.dataId).id;l=u,c=v}let f=l.shape.length;_.assertAxesAreInnerMostDims("all",d,f);let[m,g]=_.computeOutAndReduceShapes(l.shape,d),b=k.sizeFromShape(g),y=t.makeOutput(m,o.dtype);if(k.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;__(c,b,v)}if(h&&t.disposeData(u.dataId),a){let v=_.expandShapeToKeepDim(y.shape,p);y.shape=v}return y}var xse={kernelName:Qi,backendName:"wasm",setupFunc:yse,kernelFunc:vse},E_;function wse(e){E_=e.wasm.cwrap(ec,null,["number, number, number"])}function kse(e){let{backend:t,inputs:n,attrs:r}=e,{axis:s,keepDims:a}=r,{x:o}=n,c=t.dataIdMap.get(o.dataId).id,l=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Ca(o,s,t);if(h){let v=t.dataIdMap.get(u.dataId).id;l=u,c=v}let f=l.shape.length;_.assertAxesAreInnerMostDims("any",d,f);let[m,g]=_.computeOutAndReduceShapes(l.shape,d),b=k.sizeFromShape(g),y=t.makeOutput(m,o.dtype);if(k.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;E_(c,b,v)}if(h&&t.disposeData(u.dataId),a){let v=_.expandShapeToKeepDim(y.shape,p);y.shape=v}return y}var Ise={kernelName:ec,backendName:"wasm",setupFunc:wse,kernelFunc:kse},A_;function Sse(e){A_=e.wasm.cwrap(za,null,["number","number","number","number","number"])}function Tse(e){let{backend:t,inputs:n,attrs:r}=e,{axis:s}=r,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=o,c=a,{transposed:l,axes:u,inputWasTransposed:d}=Ca(a,s,t);if(d){let b=t.dataIdMap.get(l.dataId).id;b!==o&&(c=l,i=b)}let p=c.shape.slice(0,-1),h=t.makeOutput(p,"int32"),f=t.dataIdMap.get(h.dataId).id,m=k.sizeFromShape(h.shape),g=c.shape[u[0]];return A_(i,$t[c.dtype],m,g,f),d&&t.disposeData(l.dataId),h}var Cse={kernelName:za,backendName:"wasm",kernelFunc:Tse,setupFunc:Sse},D_;function Nse(e){D_=e.wasm.cwrap(Wa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function _se(e){let{inputs:t,attrs:n,backend:r}=e,s=t.x,a=r.dataIdMap.get(s.dataId).id,{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=n,u=_.computePool2DInfo(s.shape,o,i,1,c,l),d=u.filterHeight,p=u.filterWidth,h=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,b=u.strideHeight,y=u.strideWidth,v=u.inChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);if(u.dilationWidth!==1||u.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${u.dilationHeight}, ${u.dilationWidth}].`);let x=r.makeOutput(u.outShape,"float32"),w=r.dataIdMap.get(x.dataId).id;return D_(a,s.shape[0],s.shape[1],s.shape[2],d,p,h,f,m,g,b,y,v,w),x}var Ese={kernelName:Wa,backendName:"wasm",setupFunc:Nse,kernelFunc:_se};function Vn(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:s}=n,a=k.sizeFromShape(r.shape),o=k.inferFromImplicitShape(s,a);return k.assert(a===k.sizeFromShape(o),()=>`new shape: ${o}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:o,dtype:r.dtype}}var Ase={kernelName:Pc,backendName:"wasm",kernelFunc:Vn},F_;function Dse(e){F_=e.wasm.cwrap(Va,null,["number","array","number","number","array","number","number","number","number"])}function Fse(e){let{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;if(s.dtype!=="float32"||a.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let c=s.shape.length,l=a.shape.length,u=o?s.shape[c-2]:s.shape[c-1],d=i?a.shape[l-1]:a.shape[l-2],p=o?s.shape[c-1]:s.shape[c-2],h=i?a.shape[l-2]:a.shape[l-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=k.sizeFromShape(f),b=k.sizeFromShape(m),v=su.assertAndGetBroadcastShape(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,h]);k.assert(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let x=o?[g,u,p]:[g,p,u],w=i?[b,h,d]:[b,d,h],T=Vn({inputs:{x:s},backend:n,attrs:{shape:x}}),C=Vn({inputs:{x:a},backend:n,attrs:{shape:w}}),D=n.dataIdMap.get(T.dataId).id,F=n.dataIdMap.get(C.dataId).id,O=o?T.shape[2]:T.shape[1],$=i?C.shape[1]:C.shape[2],R=Math.max(g,b),N=n.makeOutput([R,O,$],T.dtype),L=n.dataIdMap.get(N.dataId).id,G=new Uint8Array(new Int32Array(T.shape).buffer),j=new Uint8Array(new Int32Array(C.shape).buffer);return F_(D,G,T.shape.length,F,j,C.shape.length,o,i,L),n.disposeData(T.dataId),n.disposeData(C.dataId),N.shape=v,N}var $se={kernelName:Va,backendName:"wasm",setupFunc:Dse,kernelFunc:Fse};function xi(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:s}=e,[a,o]=Gt.parseSliceParams(t,n,r),i=Gt.isSliceContinous(t.shape,a,o),c=s.readSync(t.dataId),l=s.makeOutput(o,t.dtype),u=k.computeStrides(t.shape),d=s.dataIdMap.get(l.dataId);if(i){let f=Gt.computeFlatOffset(a,u);return t.dtype==="string"?d.stringBytes=c.slice(f,f+k.sizeFromShape(o)):s.typedArrayFromHeap(l).set(c.subarray(f,f+k.sizeFromShape(o))),l}if(t.dtype==="string"){let f=pm(c,a,o,t.shape,t.dtype);return d.stringBytes=f,l}let p=s.typedArrayFromHeap(l),h=t.shape.length;if(h===2)Rse(c,u[0],p,a,o);else if(h===3)Pse(c,u[0],u[1],p,a,o);else if(h===4)Ose(c,u[0],u[1],u[2],p,a,o);else{let f=pm(c,a,o,t.shape,t.dtype);p.set(f)}return l}function Rse(e,t,n,r,s){let a=0,o=r[0],i=r[1],c=o+s[0];for(let l=o;l<c;l++){let u=l*t+i;n.set(e.subarray(u,u+s[1]),a),a+=s[1]}}function Pse(e,t,n,r,s,a){let o=0,i=s[0],c=s[1],l=s[2],u=i+a[0],d=c+a[1];for(let p=i;p<u;p++)for(let h=c;h<d;h++){let f=p*t+h*n+l;r.set(e.subarray(f,f+a[2]),o),o+=a[2]}}function Ose(e,t,n,r,s,a,o){let i=0,c=a[0],l=a[1],u=a[2],d=c+o[0],p=l+o[1],h=u+o[2],f=a[3];for(let m=c;m<d;m++)for(let g=l;g<p;g++)for(let b=u;b<h;b++){let y=m*t+g*n+b*r+f;s.set(e.subarray(y,y+o[3]),i),i+=o[3]}}var Mse={kernelName:Bc,backendName:"wasm",kernelFunc:xi};function Lse(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r,i=a.reduce((b,y)=>b*y),c=_.getReshaped(s.shape,a,i),l=_.getPermuted(c.length,a.length),u=_.getReshapedPermuted(s.shape,a,i),d=_.getSliceBeginCoords(o,a.length),p=_.getSliceSize(u,o,a.length),h=Vn({inputs:{x:s},backend:n,attrs:{shape:c}}),f=Bu({inputs:{x:h},backend:n,attrs:{perm:l}}),m=Vn({inputs:{x:f},backend:n,attrs:{shape:u}}),g=xi({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),g}var Bse={kernelName:oc,backendName:"wasm",kernelFunc:Lse};function Zd(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,s=r.makeOutput(t.shape,n),a=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(s).set(a),s}var zse={kernelName:Ua,backendName:"wasm",kernelFunc:Zd},Wse=un(Ga),$_;function Vse(e){$_=e.wasm.cwrap(Js,null,["number","number","number","number"])}function Use(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:o}=r,i=n.dataIdMap.get(s.dataId).id,c=n.makeOutput(s.shape,s.dtype),l=n.dataIdMap.get(c.dataId).id;return $_(i,a,o,l),c}var Gse={kernelName:Js,backendName:"wasm",setupFunc:Vse,kernelFunc:Use};function R_(e){let{inputs:t,backend:n}=e,r=k.parseAxisParam(e.attrs.axis,t[0].shape)[0],s=_.computeOutShape(t.map(h=>h.shape),r),a=t.filter(h=>k.sizeFromShape(h.shape)>0);if(a.length===1)return Pm({inputs:{x:a[0]},backend:n});let o=n.makeOutput(s,t[0].dtype);if(k.sizeFromShape(s)===0)return o;let i=a.map(h=>h.shape);if(_.assertParamsConsistent(i,r),a[0].dtype==="string"){let h=a.map(v=>{let x=k.sizeFromShape(v.shape.slice(r));return Vn({inputs:{x:v},backend:n,attrs:{shape:[-1,x]}})}),f=h.map(v=>({vals:n.readSync(v.dataId),shape:v.shape}));s=_.computeOutShape(h.map(v=>v.shape),1);let m=h[0].shape[0]===1,g=_w(f,s,t[0].dtype,m),b=_.computeOutShape(a.map(v=>v.shape),r);o.shape=b;let y=n.dataIdMap.get(o.dataId);return y.stringBytes=_.fromStringArrayToUint8(g),h.forEach(v=>n.disposeData(v.dataId)),o}let c=k.sizeFromShape(a[0].shape.slice(0,r)),l=0,u=a.map(h=>{let f=k.sizeFromShape(h.shape.slice(r));return l+=f,f}),d=a.map(h=>n.typedArrayFromHeap(h)),p=n.typedArrayFromHeap(o);for(let h=0;h<c;h++){let f=h*l;for(let m=0;m<d.length;m++){let g=u[m],b=h*g,y=d[m].subarray(b,b+g);p.set(y,f),f+=g}}return o}var Hse={kernelName:ic,backendName:"wasm",kernelFunc:R_},P_;function jse(e){P_=e.wasm.cwrap(Ha,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function qse(e){let{inputs:t,attrs:n,backend:r}=e,{x:s,filter:a}=t,o=r.dataIdMap.get(s.dataId).id,i=r.dataIdMap.get(a.dataId).id,{strides:c,dilations:l,pad:u,dimRoundingMode:d,dataFormat:p}=n,h=_.convertConv2DDataFormat(p),f=_.computeConv2DInfo(s.shape,a.shape,c,l,u,d,!1,h),m=f.filterHeight,g=f.filterWidth,b=f.padInfo.top,y=f.padInfo.right,v=f.padInfo.bottom,x=f.padInfo.left,w=f.dilationHeight,T=f.dilationWidth,C=f.strideHeight,D=f.strideWidth,F=f.inChannels,O=f.outChannels,$=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let R=r.makeOutput(f.outShape,"float32"),N=r.dataIdMap.get(R.dataId).id;return P_(o,s.shape[0],s.shape[1],s.shape[2],i,m,g,b,y,v,x,$,w,T,C,D,F,O,N),R}var Kse={kernelName:Ha,backendName:"wasm",setupFunc:jse,kernelFunc:qse},O_;function Xse(e){O_=e.wasm.cwrap(ja,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Yse(e){let{backend:t,inputs:n,attrs:r}=e,{dy:s,filter:a}=n,{strides:o,pad:i,dataFormat:c,dimRoundingMode:l,inputShape:u}=r,d=1,p=_.convertConv2DDataFormat(c),h=_.computeConv2DInfo(u,a.shape,o,d,i,l,!1,p),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:b,inHeight:y,inWidth:v,outChannels:x,outHeight:w,outWidth:T,strideHeight:C,strideWidth:D}=h,F=m-1-h.padInfo.top,O=g-1-h.padInfo.left,$=h.dataFormat==="channelsLast",R=k.computeStrides(h.inShape),N=k.computeStrides(s.shape),[L,G,j]=k.computeStrides(a.shape),K=R[0],q=$?R[1]:R[2],Z=$?R[2]:1,te=$?1:R[1],se=N[0],oe=$?N[1]:N[2],re=$?N[2]:1,ue=$?1:N[1],ne=t.makeOutput(h.inShape,"float32"),he=t.dataIdMap.get(ne.dataId).id,ye=t.dataIdMap.get(s.dataId).id,Ce=t.dataIdMap.get(a.dataId).id;return O_(ye,Ce,f,m,g,y,v,b,w,T,x,C,D,F,O,L,G,j,K,q,Z,te,se,oe,re,ue,he),ne}var Zse={kernelName:ja,backendName:"wasm",setupFunc:Xse,kernelFunc:Yse},Jse=un(qa),Qse=un(Ka),o1;(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(o1||(o1={}));var M_;function eae(e){M_=e.wasm.cwrap(cc,null,["number","number","number","number","array","number","number","number","number","number"])}function tae(e){let{backend:t,inputs:n,attrs:r}=e,{method:s,extrapolationValue:a,cropSize:o}=r,{image:i,boxes:c,boxInd:l}=n,u=c.shape[0],[d,p]=o,h=[u,d,p,i.shape[3]],f=t.dataIdMap.get(i.dataId),m;i.dtype!=="float32"&&(m=Zd({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,b=t.dataIdMap.get(c.dataId).id,y=t.dataIdMap.get(l.dataId).id,v=t.makeOutput(h,"float32"),x=t.dataIdMap.get(v.dataId).id,w=new Uint8Array(new Int32Array(i.shape).buffer);return M_(g,b,y,u,w,d,p,o1[s],a,x),m!=null&&t.disposeData(m.dataId),v}var nae={kernelName:cc,backendName:"wasm",setupFunc:eae,kernelFunc:tae},L_;function rae(e){L_=e.wasm.cwrap(Xa,null,["number","number","number","number","number","number"])}function sae(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r,c=s.shape.length;k.assert(s.dtype==="float32"||s.dtype==="int32",()=>`cumsum does not support ${s.dtype} tensors in the WASM backend`);let l=_.getAxesPermutation([a],c),u=s;l!==null&&(u=Bu({inputs:{x:s},attrs:{perm:l},backend:n}));let d=_.getInnerMostAxes(1,c)[0];_.assertAxesAreInnerMostDims("cumsum",[d],c);let p=n.makeOutput(u.shape,u.dtype),h=u.shape[d],f=n.dataIdMap.get(u.dataId).id,m=n.dataIdMap.get(p.dataId).id;L_(f,o?1:0,i?1:0,h,m,$t[s.dtype]);let g=p;if(l!==null){let b=_.getUndoAxesPermutation(l);g=Bu({inputs:{x:p},attrs:{perm:b},backend:n}),n.disposeData(u.dataId),n.disposeData(p.dataId)}return g}var aae={kernelName:Xa,backendName:"wasm",setupFunc:rae,kernelFunc:sae},B_;function oae(e){B_=e.wasm.cwrap(uc,null,["number","number","number","array","number","array","array","number","number"])}function iae(e){let{backend:t,inputs:n,attrs:r}=e,{x:s}=n,{blockSize:a,dataFormat:o}=r,i=s.shape[0],c=o==="NHWC"?s.shape[1]:s.shape[2],l=o==="NHWC"?s.shape[2]:s.shape[3],u=o==="NHWC"?s.shape[3]:s.shape[1],d=c*a,p=l*a,h=u/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=t.makeOutput(f,"float32"),b=t.dataIdMap.get(s.dataId).id,y=new Uint8Array(new Int32Array(k.computeStrides(s.shape)).buffer),v=new Uint8Array(new Int32Array(f).buffer),x=new Uint8Array(new Int32Array(k.computeStrides(f)).buffer),w=t.dataIdMap.get(m.dataId).id;return B_(b,a,o==="NHWC"?1:0,y,s.shape.length-1,v,x,f.length,w),m}var cae={kernelName:uc,backendName:"wasm",setupFunc:oae,kernelFunc:iae},z_;function uae(e){z_=e.wasm.cwrap(Ya,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function lae(e){let{inputs:t,attrs:n,backend:r}=e,{x:s,filter:a}=t,o=r.dataIdMap.get(s.dataId).id,i=r.dataIdMap.get(a.dataId).id,{strides:c,dilations:l,pad:u,dimRoundingMode:d}=n,p=l==null?[1,1]:l,h=_.computeConv2DInfo(s.shape,a.shape,c,p,u,d,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,b=h.padInfo.right,y=h.padInfo.bottom,v=h.padInfo.left,x=h.dilationHeight,w=h.dilationWidth,T=h.strideHeight,C=h.strideWidth,D=h.inChannels,F=h.outChannels,O=h.padInfo.type==="SAME"?1:0;if(h.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let $=r.makeOutput(h.outShape,"float32"),R=r.dataIdMap.get($.dataId).id;return z_(o,s.shape[0],s.shape[1],s.shape[2],i,f,m,g,b,y,v,O,x,w,T,C,D,F,R),$}var dae={kernelName:Ya,backendName:"wasm",setupFunc:uae,kernelFunc:lae},pae=un(Ja),hae=!1,fae=Cn(dc,hae,"bool"),mae=un(Qa,"float32");function i1(e){let{inputs:t,attrs:n,backend:r}=e,{input:s}=t,{dim:a}=n,o=s.shape.length,i=s.shape.slice(),c=a;return a<0&&(k.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),c=o+a+1),i.splice(c,0,1),Vn({inputs:{x:s},backend:r,attrs:{shape:i}})}var gae={kernelName:pc,backendName:"wasm",kernelFunc:i1};function W_(e){let{attrs:{shape:t,value:n,dtype:r},backend:s}=e,a=s.makeOutput(t,r);return s.typedArrayFromHeap(a).fill(n),a}var bae={kernelName:El,backendName:"wasm",kernelFunc:W_},V_;function yae(e){V_=e.wasm.cwrap(fc,null,["number","number","number","number","number","number"])}function vae(e){let{inputs:t,backend:n}=e,{image:r}=t,s=n.makeOutput(r.shape,r.dtype),a=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(s.dataId).id,[i,c,l,u]=r.shape;return V_(a,i,c,l,u,o),s}var xae={kernelName:fc,backendName:"wasm",kernelFunc:vae,setupFunc:yae},wae=un(eo),kae=!1,Iae=Cn(to,kae),U_;function Sae(e){U_=e.wasm.cwrap(no,null,["number","number","number","number","number","number","number"])}function Tae(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:s}=r,{x:a,mean:o,variance:i,offset:c,scale:l}=n,u=t.dataIdMap.get(a.dataId).id,d=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(i.dataId).id,h=c!=null?t.dataIdMap.get(c.dataId).id:0,f=l!=null?t.dataIdMap.get(l.dataId).id:0,m=t.makeOutput(a.shape,a.dtype);if(k.sizeFromShape(a.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return U_(u,d,p,h,f,s,g),m}var Cae={kernelName:no,backendName:"wasm",setupFunc:Sae,kernelFunc:Tae},G_;function Nae(e){G_=e.wasm.cwrap(Mo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function _ae(e){let{inputs:t,attrs:n,backend:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dilations:u,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=_.computeConv2DInfo(s.shape,a.shape,c,u,l,p),g=Yd[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let b=r.dataIdMap.get(s.dataId).id,y=r.dataIdMap.get(a.dataId).id,v=m.outChannels,x=0;if(o!=null){let re=r.dataIdMap.get(o.dataId);if(re.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${re.shape.length}.`);if(re.shape[0]!==v)throw new Error(`FusedConv2D bias shape (${re.shape}) does not match the number of output channels (${v})`);x=re.id}let w=m.filterHeight,T=m.filterWidth,C=m.padInfo.top,D=m.padInfo.right,F=m.padInfo.bottom,O=m.padInfo.left,$=m.dilationHeight,R=m.dilationWidth,N=m.strideHeight,L=m.strideWidth,G=m.inChannels,j=m.padInfo.type==="SAME"?1:0,K=m.batchSize,q=m.inHeight,Z=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let te=r.makeOutput(m.outShape,"float32"),se=r.dataIdMap.get(te.dataId).id,oe=i==null?0:r.dataIdMap.get(i.dataId).id;return G_(b,K,q,Z,y,w,T,x,C,D,F,O,j,$,R,N,L,G,v,g,oe,f||0,se),te}var Eae={kernelName:Mo,backendName:"wasm",setupFunc:Nae,kernelFunc:_ae},H_;function Aae(e){H_=e.wasm.cwrap(Lo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Dae(e){let{inputs:t,attrs:n,backend:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dilations:u,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=_.computeConv2DInfo(s.shape,a.shape,c,u,l,p,!0),g=Yd[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let b=r.dataIdMap.get(s.dataId).id,y=r.dataIdMap.get(a.dataId).id,v=m.outChannels,x=0;if(o!=null){let re=r.dataIdMap.get(o.dataId);if(re.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${re.shape.length}.`);if(re.shape[0]!==v)throw new Error(`FusedDepthwiseConv2D bias shape (${re.shape}) does not match the number of output channels (${v})`);x=re.id}let w=m.filterHeight,T=m.filterWidth,C=m.padInfo.top,D=m.padInfo.right,F=m.padInfo.bottom,O=m.padInfo.left,$=m.dilationHeight,R=m.dilationWidth,N=m.strideHeight,L=m.strideWidth,G=m.inChannels,j=m.padInfo.type==="SAME"?1:0,K=m.batchSize,q=m.inHeight,Z=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let te=r.makeOutput(m.outShape,"float32"),se=r.dataIdMap.get(te.dataId).id,oe=i==null?0:r.dataIdMap.get(i.dataId).id;return H_(b,K,q,Z,y,w,T,x,C,D,F,O,j,$,R,N,L,G,v,g,oe,f||0,se),te}var Fae={kernelName:Lo,backendName:"wasm",setupFunc:Aae,kernelFunc:Dae},j_;function $ae(e){j_=e.wasm.cwrap(gc,null,["number","number","number","number","number","number","array","number"])}function Rae(e){let{backend:t,inputs:n}=e,{params:r,indices:s}=n,[a,o,i,c]=xy.prepareAndValidate(r,s),l=t.makeOutput(a,r.dtype);if(o===0)return l;let u=s.shape,d=u[u.length-1],h=t.dataIdMap.get(r.dataId).id,m=t.dataIdMap.get(s.dataId).id,g=new Uint8Array(new Int32Array(c).buffer),b=t.dataIdMap.get(l.dataId).id;return j_(h,$t[r.dtype],m,o,d,i,g,b),l}var Pae={kernelName:gc,backendName:"wasm",setupFunc:$ae,kernelFunc:Rae},q_;function Oae(e){q_=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Mae(e){let{backend:t,inputs:n,attrs:r}=e,{x:s,indices:a}=n,{axis:o,batchDims:i}=r,c=k.parseAxisParam(o,s.shape)[0],l=t.readSync(a.dataId),u=s.shape[c];for(let F=0;F<l.length;++F){let O=l[F];k.assert(O<=u-1&&O>=0,()=>`GatherV2: the index value ${O} is not in [0, ${u-1}]`)}let d=_.segment_util.collectGatherOpShapeInfo(s,a,c,i),p=Vn({inputs:{x:s},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),h=k.sizeFromShape(a.shape),f=Vn({inputs:{x:a},attrs:{shape:[d.batchSize,h/d.batchSize]},backend:t}),m=[d.batchSize,d.outerSize,h/d.batchSize,d.sliceSize],g=t.makeOutput(m,s.dtype);if(k.sizeFromShape(s.shape)===0)return g;let b=p.shape.length-1,v=t.dataIdMap.get(p.dataId).id,w=t.dataIdMap.get(f.dataId).id,T=t.dataIdMap.get(g.dataId).id,C=new Uint8Array(new Int32Array(k.computeStrides(p.shape)).buffer),D=new Uint8Array(new Int32Array(k.computeStrides(m)).buffer);return q_(v,$t[s.dtype],C,b,w,d.batchSize,D,T),t.disposeData(p.dataId),t.disposeData(f.dataId),g.shape=d.outputShape,g}var Lae={kernelName:mc,backendName:"wasm",setupFunc:Oae,kernelFunc:Mae},Bae=!1,zae=Cn(bc,Bae,"bool"),Wae=!1,Vae=Cn(ro,Wae,"bool"),K_;function Uae(e){K_=e.wasm.cwrap(ao,null,["number","number","number","number"])}function Gae(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,s=r.dataIdMap.get(t.dataId).id,a=r.makeOutput(t.shape,"float32");if(k.sizeFromShape(t.shape)!==0){let o=r.dataIdMap.get(a.dataId).id;K_(s,$t[t.dtype],n,o)}return a}var Hae={kernelName:ao,backendName:"wasm",setupFunc:Uae,kernelFunc:Gae},jae=!1,qae=Cn(wc,jae,"bool"),Kae=!1,Xae=Cn(kc,Kae,"bool"),Yae=un(oo),Zae=!1,Jae=Cn(Sc,Zae,"bool"),X_;function Qae(e){X_=e.wasm.cwrap(io,null,["number","number","number","number"])}function eoe(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:s,keepDims:a}=r,{x:o}=n,c=t.dataIdMap.get(o.dataId).id,l=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Ca(o,s,t);if(h){let v=t.dataIdMap.get(u.dataId).id;l=u,c=v}let f=l.shape.length;_.assertAxesAreInnerMostDims("max",d,f);let[m,g]=_.computeOutAndReduceShapes(l.shape,d),b=k.sizeFromShape(g),y=t.makeOutput(m,o.dtype);if(k.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;X_(c,$t[o.dtype],b,v)}if(h&&t.disposeData(u.dataId),a){let v=_.expandShapeToKeepDim(y.shape,p);y.shape=v}return y}var toe={kernelName:io,backendName:"wasm",setupFunc:Qae,kernelFunc:eoe},noe=!1,roe=Cn(co,noe),Y_;function soe(e){Y_=e.wasm.cwrap(uo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function aoe(e){let{inputs:t,attrs:n,backend:r}=e,s=t.x,a=r.dataIdMap.get(s.dataId).id;k.assert(s.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${s.dtype}.`);let{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=n,u=_.computePool2DInfo(s.shape,o,i,1,c,l),d=u.filterHeight,p=u.filterWidth,h=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,b=u.dilationHeight,y=u.dilationWidth,v=u.strideHeight,x=u.strideWidth,w=u.inChannels,T=u.outChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);let C=r.makeOutput(u.outShape,"float32"),D=r.dataIdMap.get(C.dataId).id;return Y_(a,s.shape[0],s.shape[1],s.shape[2],d,p,h,f,m,g,b,y,v,x,w,T,D),C}var ooe={kernelName:uo,backendName:"wasm",setupFunc:soe,kernelFunc:aoe},Z_;function ioe(e){Z_=e.wasm.cwrap(lo,null,["number, number, number"])}function coe(e){let{backend:t,inputs:n,attrs:r}=e,{axis:s,keepDims:a}=r,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,c=i,l=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Ca(o,s,t),f=d;if(h){let x=t.dataIdMap.get(u.dataId).id;x!==i&&(l=u,c=x,f=_.getInnerMostAxes(f.length,l.shape.length))}_.assertAxesAreInnerMostDims("mean",f,l.shape.length);let[m,g]=_.computeOutAndReduceShapes(l.shape,f),b=k.sizeFromShape(g),y=l;l.dtype!=="float32"&&(y=Zd({backend:t,inputs:{x:l},attrs:{dtype:"float32"}}),c=t.dataIdMap.get(y.dataId).id);let v=t.makeOutput(m,"float32");if(k.sizeFromShape(l.shape)!==0){let x=t.dataIdMap.get(v.dataId).id;Z_(c,b,x)}if(h&&t.disposeData(u.dataId),a){let x=_.expandShapeToKeepDim(v.shape,p);v.shape=x}return l.dtype!=="float32"&&t.disposeData(y.dataId),v}var uoe={kernelName:lo,backendName:"wasm",setupFunc:ioe,kernelFunc:coe},J_;function loe(e){J_=e.wasm.cwrap(po,null,["number","number","number","number"])}function doe(e){let{backend:t,inputs:n,attrs:r}=e,{axis:s,keepDims:a}=r,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,c=i,l=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Ca(o,s,t);if(h){let v=t.dataIdMap.get(u.dataId).id;v!==i&&(l=u,c=v)}let f=l.shape.length;_.assertAxesAreInnerMostDims("min",d,f);let[m,g]=_.computeOutAndReduceShapes(l.shape,d),b=k.sizeFromShape(g),y=t.makeOutput(m,l.dtype);if(k.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;J_(c,$t[o.dtype],b,v)}if(h&&t.disposeData(u.dataId),a){let v=_.expandShapeToKeepDim(y.shape,p);y.shape=v}return y}var poe={kernelName:po,backendName:"wasm",setupFunc:loe,kernelFunc:doe},hoe=!1,foe=Cn(ho,hoe),c1;(function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"})(c1||(c1={}));var Q_;function moe(e){Q_=e.wasm.cwrap(fo,null,["number","array","number","number","array","array","number","number"])}function goe(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:s}}=e,a=r.map((f,m)=>f[0]+t.shape[m]+f[1]),o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),c=n.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),u=r.map(f=>f[0]),d=r.map(f=>f[1]),p=new Uint8Array(new Int32Array(u).buffer),h=new Uint8Array(new Int32Array(d).buffer);return Q_(o,l,t.shape.length,$t[t.dtype],p,h,c1[s],c),i}var boe={kernelName:fo,backendName:"wasm",kernelFunc:goe,setupFunc:moe},yoe=!0,voe=Cn(mo,yoe),xoe=un(Cc);function u1(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],s=n[1],a=n[2],o=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:s,pSelectedScores:a,pValidOutputs:o}}var eE;function woe(e){eE=e.wasm.cwrap(_c,"number",["number","number","number","number","number"])}function koe(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:s,maxOutputSize:a,scoreThreshold:o}=r,{boxes:i,scores:c}=n,l=t.dataIdMap.get(i.dataId).id,u=t.dataIdMap.get(c.dataId).id,d=eE(l,u,a,s,o),{pSelectedIndices:p,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=u1(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",p)}var Ioe={kernelName:_c,backendName:"wasm",setupFunc:woe,kernelFunc:koe},tE;function Soe(e){tE=e.wasm.cwrap(Ec,"number",["number","number","number","number","number","bool"])}function Toe(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:s,maxOutputSize:a,scoreThreshold:o,padToMaxOutputSize:i}=r,{boxes:c,scores:l}=n,u=t.dataIdMap.get(c.dataId).id,d=t.dataIdMap.get(l.dataId).id,p=tE(u,d,a,s,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=u1(t,p);t.wasm._free(m);let b=t.makeOutput([f],"int32",h),y=t.makeOutput([],"int32",g);return[b,y]}var Coe={kernelName:Ec,backendName:"wasm",setupFunc:Soe,kernelFunc:Toe},nE;function Noe(e){nE=e.wasm.cwrap(Ac,"number",["number","number","number","number","number","number"])}function _oe(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:s,maxOutputSize:a,scoreThreshold:o,softNmsSigma:i}=r,{boxes:c,scores:l}=n,u=t.dataIdMap.get(c.dataId).id,d=t.dataIdMap.get(l.dataId).id,p=nE(u,d,a,s,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=u1(t,p);t.wasm._free(g);let b=t.makeOutput([f],"int32",h),y=t.makeOutput([f],"float32",m);return[b,y]}var Eoe={kernelName:Ac,backendName:"wasm",setupFunc:Noe,kernelFunc:_oe},Aoe=!1,Doe=Cn(Nc,Aoe,"bool"),rE;function Foe(e){rE=e.wasm.cwrap(go,null,["number","number","number","number","number"])}function $oe(e){let{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:o,offValue:i}=r,c=n.makeOutput([...s.shape,a],"int32"),l=n.dataIdMap.get(c.dataId).id,d=n.dataIdMap.get(s.dataId).id;return rE(d,a,o,i,l),c}var Roe={kernelName:go,backendName:"wasm",setupFunc:Foe,kernelFunc:$oe};function Poe(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}var Ooe={kernelName:Dc,backendName:"wasm",kernelFunc:Poe};function Moe(e){let{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(t.length===1)return i1({inputs:{input:t[0]},backend:n,attrs:{dim:s}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{k.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),k.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],c=t.map(u=>{let d=i1({inputs:{input:u},backend:n,attrs:{dim:s}});return i.push(d),d}),l=R_({inputs:c,backend:n,attrs:{axis:s}});return i.forEach(u=>n.disposeData(u.dataId)),l}var Loe={kernelName:Fc,backendName:"wasm",kernelFunc:Moe},sE;function Boe(e){sE=e.wasm.cwrap(bo,null,["number","array","number","number","array","array","number","number"])}function zoe(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:s}}=e,a=r.map((m,g)=>m[0]+t.shape[g]+m[1]);if(k.sizeFromShape(t.shape)===0)return W_({backend:n,attrs:{shape:a,value:s,dtype:t.dtype}});let o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),l=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map(m=>m[0]),p=r.map(m=>m[1]),h=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(p).buffer);return sE(o,u,t.shape.length,$t[t.dtype],h,f,s,l),i}var aE={kernelName:bo,backendName:"wasm",kernelFunc:zoe,setupFunc:Boe},Woe=!1,Voe=Cn(yo,Woe),oE;function Uoe(e){oE=e.wasm.cwrap(vo,null,["number","number","number"])}function Goe(e){let{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(s.dataId).id,i=a,c=r,l=c;c.dtype!=="float32"&&(l=Zd({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),i=n.dataIdMap.get(l.dataId).id);let u=n.makeOutput(r.shape,"float32"),d=n.dataIdMap.get(u.dataId).id;return oE(i,o,d),c.dtype!=="float32"&&n.disposeData(l.dataId),u}var Hoe={kernelName:vo,backendName:"wasm",setupFunc:Uoe,kernelFunc:Goe},iE;function joe(e){iE=e.wasm.cwrap($c,null,["number","number","number","number"])}function qoe(e){let{backend:t,inputs:n,attrs:r}=e,{axis:s,keepDims:a}=r,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,c=i,l=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Ca(o,s,t),f=d;if(h){let v=t.dataIdMap.get(u.dataId).id;v!==i&&(l=u,c=v,f=_.getInnerMostAxes(f.length,l.shape.length))}_.assertAxesAreInnerMostDims("prod",f,l.shape.length);let[m,g]=_.computeOutAndReduceShapes(l.shape,f),b=k.sizeFromShape(g),y=t.makeOutput(m,l.dtype);if(k.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;iE(c,b,$t[y.dtype],v)}if(h&&t.disposeData(u.dataId),a){let v=_.expandShapeToKeepDim(y.shape,p);y.shape=v}return y}var Koe={kernelName:$c,backendName:"wasm",setupFunc:joe,kernelFunc:qoe},Xoe=e=>{let{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:o}=n,i=Dw(r,s,a,o),c=t.makeOutput([i.length],o);return t.typedArrayFromHeap(c).set(i),c},Yoe={kernelName:Rl,backendName:"wasm",kernelFunc:Xoe},Zoe=!0,Joe=Cn(Za,Zoe),Qoe=un(xo),eie=un(ko),cE;function tie(e){cE=e.wasm.cwrap(wo,null,["number","number","number","number","number","number","number","number","number","number"])}function nie(e){let{backend:t,inputs:n,attrs:r}=e,{images:s}=n,{alignCorners:a,halfPixelCenters:o,size:i}=r,[c,l]=i,[u,d,p,h]=s.shape,f=[u,c,l,h],m=t.dataIdMap.get(s.dataId),g;m.dtype!=="float32"&&(g=Zd({backend:t,inputs:{x:s},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let b=m.id,y=t.makeOutput(f,"float32");if(k.sizeFromShape(s.shape)===0)return y;let v=t.dataIdMap.get(y.dataId).id;return cE(b,u,d,p,h,c,l,a?1:0,o?1:0,v),g!=null&&t.disposeData(g.dataId),y}var rie={kernelName:wo,backendName:"wasm",setupFunc:tie,kernelFunc:nie},uE;function sie(e){uE=e.wasm.cwrap(Io,null,["number","array","number","array","number","number"])}function aie(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,o=k.parseAxisParam(a,s.shape);if(s.shape.length===0)return Pm({inputs:{x:s},backend:n});let i=n.makeOutput(s.shape,s.dtype),c=n.dataIdMap.get(s.dataId).id,l=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(o).buffer),d=new Uint8Array(new Int32Array(s.shape).buffer);uE(c,u,o.length,d,s.shape.length,l);let p=Vn({inputs:{x:i},attrs:{shape:s.shape},backend:n});return n.disposeData(i.dataId),p}var oie={kernelName:Io,backendName:"wasm",kernelFunc:aie,setupFunc:sie},lE;function iie(e){lE=e.wasm.cwrap(Zc,null,["number","number","number","number","number","number","number","number","array","number","number"])}function cie(e){let{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{radians:a,fillValue:o,center:i}=r,c=n.makeOutput(s.shape,s.dtype),l=n.dataIdMap.get(s.dataId).id,u=n.dataIdMap.get(c.dataId).id,[d,p,h,f]=s.shape,[m,g]=_.getImageCenter(i,p,h),b=o===0,y=255,v=typeof o=="number"?[o,o,o,b?0:y]:[...o,y],x=new Uint8Array(new Int32Array(v).buffer);return lE(l,d,p,h,f,a,m,g,x,v.length,u),c}var uie={kernelName:Zc,backendName:"wasm",kernelFunc:cie,setupFunc:iie},lie=un(So),die=un(To),dE;function pie(e){dE=e.wasm.cwrap(Oc,null,["number","number","number","number","number","number","array","number","number"])}function hie(e){let{backend:t,inputs:n,attrs:r}=e,{indices:s,updates:a}=n,{shape:o}=r,i=t.makeOutput(o,a.dtype);if(k.sizeFromShape(o)===0)return i;let{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=wy.calculateShapes(a,s,o),f=t.dataIdMap.get(s.dataId).id,g=t.dataIdMap.get(a.dataId).id,b=new Uint8Array(new Int32Array(d).buffer),y=t.dataIdMap.get(i.dataId).id;return dE(f,g,$t[a.dtype],c,l,u,b,p,y),i}var fie={kernelName:Oc,backendName:"wasm",setupFunc:pie,kernelFunc:hie},pE;function mie(e){pE=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function gie(e){let{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,o=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(s.shape,s.dtype),u=n.dataIdMap.get(l.dataId).id,d=r.shape.length,p=s.shape.length,h=d===0||d>1||p===1?1:k.sizeFromShape(s.shape.slice(1));return pE(o,i,c,h,u),l}var bie={kernelName:Mc,backendName:"wasm",kernelFunc:gie,setupFunc:mie},hE;function yie(e){hE=e.wasm.cwrap(No,null,["number","number"])}function vie(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),a=t.dataIdMap.get(s.dataId).id;return k.sizeFromShape(s.shape)===0||hE(r,a),s}var xie={kernelName:"Sigmoid",backendName:"wasm",setupFunc:yie,kernelFunc:vie},wie=un(Co),fE;function kie(e){fE=e.wasm.cwrap(Ao,null,["number","number","number","number"])}function Iie(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,s=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(a.dataId).id,i=n.shape[r],c=k.sizeFromShape(n.shape)/i;return k.sizeFromShape(a.shape)===0||fE(s,o,i,c),a}var Sie={kernelName:Ao,backendName:"wasm",setupFunc:kie,kernelFunc:Iie};function Tie(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r,i=k.sizeFromShape(a),c=[[0,0]];c.push(...o);for(let T=1+a.length;T<s.shape.length;++T)c.push([0,0]);let l=aE.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:c,constantValue:0}}),u=_.getReshaped(l.shape,a,i,!1),d=_.getPermuted(u.length,a.length,!1),p=_.getReshapedPermuted(l.shape,a,i,!1),m=Vn({inputs:{x:l},backend:n,attrs:{shape:u}}),y=Bu({inputs:{x:m},backend:n,attrs:{perm:d}}),w=Vn({inputs:{x:y},backend:n,attrs:{shape:p}});return n.disposeData(l.dataId),n.disposeData(m.dataId),n.disposeData(y.dataId),w}var Cie={kernelName:Uc,backendName:"wasm",kernelFunc:Tie},mE;function Nie(e){mE=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function _ie(e){let{backend:t,inputs:n}=e,{indices:r,values:s,denseShape:a,defaultValue:o}=n,i=r.shape[0],c=r.shape[1],l=t.readSync(a.dataId)[0],u=[i+l,c],d=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(o.dataId).id,f=t.makeOutput(u,r.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(u.slice(0,1),s.dtype),b=t.dataIdMap.get(g.dataId).id,y=t.makeOutput([l],"bool"),v=t.dataIdMap.get(y.dataId).id,x=t.makeOutput([i],r.dtype),w=t.dataIdMap.get(x.dataId).id,T=t.makeOutput([4],"int32"),C=t.dataIdMap.get(T.dataId).id,D=mE(d,p,$t[s.dtype],i,l,c,h,m,b,v,w,C),F=t.readSync(T.dataId),O;switch(F[0]){case 1:{O=_.getSparseFillEmptyRowsIndicesDenseShapeMismatch(F[1]);break}case 2:{O=_.getSparseFillEmptyRowsNegativeIndexErrorMessage(F[1],F[2]);break}case 3:O=_.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(F[1],F[2],F[3]);break;default:O=""}if(t.disposeData(T.dataId),O)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(y.dataId),t.disposeData(x.dataId),new Error(O);let $=f,R=g;return D!==u[0]&&($=xi({inputs:{x:f},attrs:{begin:0,size:[D,c]},backend:t}),R=xi({inputs:{x:g},attrs:{begin:0,size:D},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[$,R,y,x]}var Eie={kernelName:Ol,backendName:"wasm",setupFunc:Nie,kernelFunc:_ie},gE;function Aie(e){gE=e.wasm.cwrap(Hc,null,["number","number","number","number","number","number","number"])}function Die(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:s,newShape:a}=n;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${s.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=t.dataIdMap.get(r.dataId).id,i=t.dataIdMap.get(s.dataId).id,c=t.dataIdMap.get(a.dataId).id,l=r.shape[0],u=k.sizeFromShape(a.shape),d=t.makeOutput([l,u],r.dtype),p=t.dataIdMap.get(d.dataId).id,h=t.makeOutput([u],a.dtype),f=t.dataIdMap.get(h.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;gE(o,i,c,l,p,f,g);let b=t.readSync(m.dataId),y;switch(b[0]){case 0:{y=_.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(b[1],b[2]);break}case 1:{y=_.getSparseReshapeNegativeOutputDimErrorMessage(b[1],b[2]);break}case 2:y=_.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let v=Array.from(t.readSync(s.dataId)),x=Array.from(t.readSync(h.dataId));y=_.getSparseReshapeInputOutputMultipleErrorMessage(v,x);break}case 4:{let v=Array.from(t.readSync(s.dataId)),x=Array.from(t.readSync(h.dataId));y=_.getSparseReshapeInputOutputMismatchErrorMessage(v,x);break}default:y=""}if(t.disposeData(m.dataId),y)throw t.disposeData(d.dataId),t.disposeData(h.dataId),new Error(y);return[d,h]}var Fie={kernelName:Hc,backendName:"wasm",setupFunc:Aie,kernelFunc:Die},bE;function yE(e){bE=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function vE(e,t){let{backend:n,inputs:r}=e,{data:s,indices:a,segmentIds:o}=r,i=a.shape[0],c=n.readSync(o.dataId,i-1,i)[0],u=i>0?c+1:0;if(u<0)throw new Error(_.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=s.shape.slice();d[0]=u;let p=n.dataIdMap.get(s.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(d,s.dtype),g=n.dataIdMap.get(m.dataId).id,b=n.makeOutput([4],"int32"),y=n.dataIdMap.get(b.dataId).id;bE(p,$t[s.dtype],s.shape[0],h,f,g,y,t,0);let v=n.readSync(b.dataId),x;switch(v[0]){case 0:{x=_.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{x=_.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:x=_.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(v[1],v[2]);break;case 3:x=_.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(v[1],v[2],v[3]);break;default:x=""}if(n.disposeData(b.dataId),x)throw n.disposeData(m.dataId),new Error(x);return m}function $ie(e){return vE(e,!0)}var Rie={kernelName:Ml,backendName:"wasm",setupFunc:yE,kernelFunc:$ie};function Pie(e){return vE(e,!1)}var Oie={kernelName:Ll,backendName:"wasm",setupFunc:yE,kernelFunc:Pie};function Mie(e){let{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=n,i=k.parseAxisParam(o,s.shape)[0],c=_.prepareSplitSize(s,a,i),l=new Array(s.shape.length).fill(0),u=s.shape.slice();return c.map(d=>{let p=[...u];p[i]=d;let h=xi({inputs:{x:s},attrs:{begin:l,size:p},backend:r});return l[i]+=d,h})}var Lie={kernelName:Gc,backendName:"wasm",kernelFunc:Mie},Bie=un(_o),zie=un(Bl),Wie=!0,Vie=Cn(Do,Wie),xE;function Uie(e){xE=e.wasm.cwrap(ea,null,["number","number","number","number"])}function Gie(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:s}=r,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=t.makeOutput(a.shape,a.dtype),c=t.dataIdMap.get(i.dataId).id;return xE(o,s,$t[a.dtype],c),i}var Hie={kernelName:ea,backendName:"wasm",setupFunc:Uie,kernelFunc:Gie},wE;function jie(e){wE=e.wasm.cwrap(jc,null,["number","array","number","array","array","array","array","array","number","number"])}function qie(e){let{backend:t,inputs:n,attrs:r}=e,{x:s}=n,{begin:a,end:o,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=r,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=Gt.sliceInfo(s.shape,a,o,i,c,l,u,d,p),w;if(m)w=Vn({inputs:{x:s},backend:t,attrs:{shape:f}});else if(g||b){k.assert(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);let T=Gt.computeOutShape(y,v,x),C=xi({inputs:{x:s},backend:t,attrs:{begin:y,size:T}});w=Vn({inputs:{x:C},backend:t,attrs:{shape:f}}),t.disposeData(C.dataId)}else{let T=t.makeOutput(h,"float32"),C=t.dataIdMap.get(s.dataId).id,D=new Uint8Array(new Int32Array(k.computeStrides(s.shape)).buffer),F=new Uint8Array(new Int32Array(y).buffer),O=new Uint8Array(new Int32Array(v).buffer),$=new Uint8Array(new Int32Array(x).buffer),R=new Uint8Array(new Int32Array(h).buffer),N=new Uint8Array(new Int32Array(k.computeStrides(h)).buffer),L=t.dataIdMap.get(T.dataId).id;wE(C,D,s.shape.length,F,O,$,R,N,h.length,L),w=Vn({inputs:{x:T},backend:t,attrs:{shape:f}}),t.disposeData(T.dataId)}return w}var Kie={kernelName:jc,backendName:"wasm",setupFunc:jie,kernelFunc:qie},Xie=!0,Yie=Cn(Fo,Xie),kE;function Zie(e){kE=e.wasm.cwrap(Eo,null,["number","number","number","number"])}function Jie(e){let{backend:t,inputs:n,attrs:r}=e,{axis:s,keepDims:a}=r,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,c=i,l=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Ca(o,s,t),f=d;if(h){let v=t.dataIdMap.get(u.dataId).id;v!==i&&(l=u,c=v,f=_.getInnerMostAxes(f.length,l.shape.length))}_.assertAxesAreInnerMostDims("sum",f,l.shape.length);let[m,g]=_.computeOutAndReduceShapes(l.shape,f),b=k.sizeFromShape(g),y=t.makeOutput(m,l.dtype);if(k.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;kE(c,b,$t[y.dtype],v)}if(h&&t.disposeData(u.dataId),a){let v=_.expandShapeToKeepDim(y.shape,p);y.shape=v}return y}var Qie={kernelName:Eo,backendName:"wasm",setupFunc:Zie,kernelFunc:Jie},ece=un($o),tce=un(Ro),IE;function nce(e){IE=e.wasm.cwrap(Qs,null,["number","array","number","array","number","number"])}function rce(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,a=n.dataIdMap.get(s.dataId).id,{reps:o}=r,i=new Array(s.shape.length);for(let p=0;p<i.length;p++)i[p]=s.shape[p]*o[p];let c=new Uint8Array(new Int32Array(s.shape).buffer),l=new Uint8Array(new Int32Array(i).buffer),u=n.makeOutput(i,s.dtype),d=n.dataIdMap.get(u.dataId).id;return IE(a,c,s.shape.length,l,i.length,$t[u.dtype],d),u}var sce={kernelName:Qs,backendName:"wasm",setupFunc:nce,kernelFunc:rce},SE;function ace(e){SE=e.wasm.cwrap(qc,null,["number","array","number","number","number","bool","number","number"])}var oce=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:s,sorted:a}=n,o=t.dataIdMap.get(r.dataId).id,i=new Uint8Array(new Int32Array(r.shape).buffer),c=r.shape.slice();c[c.length-1]=s;let l=t.makeOutput(c,r.dtype),u=t.dataIdMap.get(l.dataId).id,d=t.makeOutput(c,"int32"),p=t.dataIdMap.get(d.dataId).id;return SE(o,i,r.shape.length,$t[r.dtype],s,a,u,p),[l,d]},ice={kernelName:qc,backendName:"wasm",setupFunc:ace,kernelFunc:oce},TE;function cce(e){TE=e.wasm.cwrap(Kc,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function uce(e){let{backend:t,inputs:n,attrs:r}=e,{image:s,transforms:a}=n,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=r,[u,d,p,h]=s.shape,[f,m]=l!=null?l:[d,p],g=[u,f,m,h],b=new Uint8Array(new Int32Array(k.computeStrides(s.shape)).buffer),y=t.makeOutput(g,s.dtype),v=t.dataIdMap.get(y.dataId).id,w=t.dataIdMap.get(s.dataId).id,C=t.dataIdMap.get(a.dataId).id,D=o==="nearest"?1:2,F;switch(i){case"constant":F=1;break;case"reflect":F=2;break;case"wrap":F=3;break;case"nearest":F=4;break;default:F=1;break}return TE(w,C,a.shape[0]>1,u,f,m,h,p,d,b,s.shape.length-1,D,F,c,v),y}var lce={kernelName:Kc,backendName:"wasm",setupFunc:cce,kernelFunc:uce};function dce(e){let{inputs:t,backend:n,attrs:r}=e,{value:s}=t,{axis:a}=r;a<0&&(a+=s.shape.length);let o=s.shape[a],i=s.shape.length,c=new Array(i-1),l=0;for(let h=0;h<i;h++)h!==a&&(c[l++]=s.shape[h]);let u=new Array(o),d=new Array(i).fill(0),p=s.shape.slice();p[a]=1;for(let h=0;h<u.length;h++)d[a]=h,u[h]=xi({inputs:{x:s},attrs:{begin:d,size:p},backend:n});return u.map(({dataId:h,dtype:f})=>({dataId:h,dtype:f,shape:c}))}var pce={kernelName:Xc,backendName:"wasm",kernelFunc:dce};function hce(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}var fce={kernelName:Yc,backendName:"wasm",kernelFunc:hce},mce=[ise,use,pse,xse,Ise,Cse,Ese,$se,Bse,zse,Wse,Gse,Hse,Kse,Zse,Jse,Qse,nae,aae,cae,dae,pae,fae,mae,gae,bae,xae,wae,Iae,ose,Cae,Eae,Fae,Pae,Lae,zae,Vae,hse,Hae,qae,Xae,Yae,Jae,toe,roe,ooe,uoe,poe,foe,boe,voe,xoe,Ioe,Coe,Eoe,Doe,Roe,Ooe,Loe,aE,Voe,Hoe,Koe,Yoe,Joe,Qoe,eie,Ase,rie,oie,uie,die,lie,fie,bie,xie,wie,Mse,Sie,Cie,Eie,Fie,Rie,Oie,Lie,Bie,zie,Vie,Hie,Kie,Yie,Qie,ece,tce,sce,ice,lce,bse,pce,fce];for(let e of mce)Vl(e);var l1=Q();l1.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));l1.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(l1.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var CE=Oa(BD()),gce='var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}',bce=Oa(zD()),NE=class extends wl{constructor(e){super();this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(EE),p1=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new jp(this,ks())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=k.now();return e(),{kernelMs:k.now()-t}}move(e,t,n,r,s){let a=this.dataIdNextNumber++;if(r==="string"){let l=t;this.dataIdMap.set(e,{id:a,stringBytes:l,shape:n,dtype:r,memoryOffset:null,refCount:s});return}let o=k.sizeFromShape(n),i=o*k.bytesPerElement(r),c=this.wasm._malloc(i);this.dataIdMap.set(e,{id:a,memoryOffset:c,shape:n,dtype:r,refCount:s}),this.wasm.tfjs.registerTensor(a,o,c),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),c)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:r,dtype:s,shape:a,stringBytes:o}=this.dataIdMap.get(e);if(s==="string")return(t==null||t===0)&&(n==null||n>=o.length)?o:o.slice(t,n);t=t||0,n=n||k.sizeFromShape(a);let i=k.bytesPerElement(s),c=this.wasm.HEAPU8.slice(r+t*i,r+n*i);return xce(c.buffer,s)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(n==null)r=this.write(null,e,t);else{let s=this.dataIdNextNumber++;r={id:s},this.dataIdMap.set(r,{id:s,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=k.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,a,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(n),a=k.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,s,a);case"int32":return new Int32Array(r,s,a);case"bool":return new Uint8Array(r,s,a);default:throw new Error(`Unknown dtype ${t}`)}}};function yce(e){return(t,n)=>(k.fetch(e,{credentials:"same-origin"}).then(r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then(s=>{WebAssembly.instantiate(s,t).then(a=>{n(a.instance,a.module)})})}),{})}function _E(e,t,n){if(Om!=null)return Om;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),Qd!=null&&Qd[r]!=null?Qd[r]:n+r}async function vce(){let[e,t]=await Promise.all([Q().getAsync("WASM_HAS_SIMD_SUPPORT"),Q().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,r)=>{let s={};s.locateFile=(i,c)=>{if(i.endsWith(".worker.js")){let l=gce,u=new Blob([l],{type:"application/javascript"});return URL.createObjectURL(u)}return i.endsWith(".wasm")?_E(e,t,Jd!=null?Jd:c):c+i},d1&&(s.instantiateWasm=yce(_E(e,t,Jd!=null?Jd:"")));let a=!1;s.onAbort=()=>{if(a||ep)return;ep=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let o;t&&e&&Om==null?(s.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+CE.default.toString()],{type:"text/javascript"}),o=(0,CE.default)(s)):o=(0,bce.default)(s),o.then(i=>{a=!0,ep=!1;let c=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",c,["number"]),dispose:i.cwrap("dispose",c,[])},n({wasm:i})})})}function xce(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var wce=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Om=null,Jd=null,Qd={},ep=!1,d1=!1;function kce(e,t=!1){if(_y("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),ep)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Om=e,d1=t}function Ice(e,t=!1){if(ep)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")Jd=e;else{Qd=e;let n=wce.filter(r=>Qd[r]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}d1=t}var EE=-1,p1=-1;function Sce(e){EE=e}function Tce(){if(p1===-1)throw new Error("WASM backend not initialized.");return p1}var Cce="3.12.0",Nce=2;Vh("wasm",async()=>{let{wasm:e}=await vce();return new NE(e)},Nce);var _ce="3.12.0",Ece="3.12.0",Ace="3.12.0",Dce="3.12.0",Fce="3.12.0",$ce="3.12.0",Rce="3.12.0",Pce="3.12.0",Oce={tfjs:_ce,"tfjs-core":Ece,"tfjs-data":Ace,"tfjs-layers":Dce,"tfjs-converter":Fce,"tfjs-backend-cpu":$ce,"tfjs-backend-webgl":Rce,"tfjs-backend-wasm":Pce};var L1={};Up(L1,{AnchorPosition:()=>fs,DrawBox:()=>zm,DrawBoxOptions:()=>N1,DrawFaceLandmarks:()=>M1,DrawFaceLandmarksOptions:()=>O1,DrawTextField:()=>_a,DrawTextFieldOptions:()=>ap,drawContour:()=>Fs,drawDetections:()=>Hce,drawFaceExpressions:()=>Yce,drawFaceLandmarks:()=>Jce});function Fs(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach(({x:r,y:s},a)=>{let o=t[a];e.moveTo(o.x,o.y),e.lineTo(r,s)}),n){let r=t[t.length-1],s=t[0];if(!r||!s)return;e.moveTo(r.x,r.y),e.lineTo(s.x,s.y)}e.stroke()}var b1={};Up(b1,{computeReshapedDimensions:()=>g1,getCenterPoint:()=>Ii,isDimensions:()=>Lm,isEven:()=>Mm,isFloat:()=>m1,isTensor:()=>wi,isTensor1D:()=>Mce,isTensor2D:()=>f1,isTensor3D:()=>$s,isTensor4D:()=>br,isValidNumber:()=>Kr,isValidProbablitiy:()=>zu,range:()=>ps,round:()=>ki});var Nn=class{constructor(t,n){if(!Kr(t)||!Kr(n))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:t,height:n})}`);this._width=t,this._height=n}get width(){return this._width}get height(){return this._height}reverse(){return new Nn(1/this.width,1/this.height)}};function wi(e,t){return e instanceof Ee&&e.shape.length===t}function Mce(e){return wi(e,1)}function f1(e){return wi(e,2)}function $s(e){return wi(e,3)}function br(e){return wi(e,4)}function m1(e){return e%1!=0}function Mm(e){return e%2==0}function ki(e,t=2){let n=10**t;return Math.floor(e*n)/n}function Lm(e){return e&&e.width&&e.height}function g1({width:e,height:t},n){let r=n/Math.max(t,e);return new Nn(Math.round(e*r),Math.round(t*r))}function Ii(e){return e.reduce((t,n)=>t.add(n),new Pe(0,0)).div(new Pe(e.length,e.length))}function ps(e,t,n){return Array(e).fill(0).map((r,s)=>t+s*n)}function Kr(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||e===0}function zu(e){return Kr(e)&&e>=0&&e<=1}var Pe=class{constructor(t,n){this._x=t,this._y=n}get x(){return this._x}get y(){return this._y}add(t){return new Pe(this.x+t.x,this.y+t.y)}sub(t){return new Pe(this.x-t.x,this.y-t.y)}mul(t){return new Pe(this.x*t.x,this.y*t.y)}div(t){return new Pe(this.x/t.x,this.y/t.y)}abs(){return new Pe(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new Pe(Math.floor(this.x),Math.floor(this.y))}};var ut=class{static isRect(t){return!!t&&[t.x,t.y,t.width,t.height].every(Kr)}static assertIsValidBox(t,n,r=!1){if(!ut.isRect(t))throw new Error(`${n} - invalid box: ${JSON.stringify(t)}, expected object with properties x, y, width, height`);if(!r&&(t.width<0||t.height<0))throw new Error(`${n} - width (${t.width}) and height (${t.height}) must be positive numbers`)}constructor(t,n=!0){let r=t||{},s=[r.left,r.top,r.right,r.bottom].every(Kr),a=[r.x,r.y,r.width,r.height].every(Kr);if(!a&&!s)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(r)}`);let[o,i,c,l]=a?[r.x,r.y,r.width,r.height]:[r.left,r.top,r.right-r.left,r.bottom-r.top];ut.assertIsValidBox({x:o,y:i,width:c,height:l},"Box.constructor",n),this._x=o,this._y=i,this._width=c,this._height=l}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new Pe(this.left,this.top)}get topRight(){return new Pe(this.right,this.top)}get bottomLeft(){return new Pe(this.left,this.bottom)}get bottomRight(){return new Pe(this.right,this.bottom)}round(){let[t,n,r,s]=[this.x,this.y,this.width,this.height].map(a=>Math.round(a));return new ut({x:t,y:n,width:r,height:s})}floor(){let[t,n,r,s]=[this.x,this.y,this.width,this.height].map(a=>Math.floor(a));return new ut({x:t,y:n,width:r,height:s})}toSquare(){let{x:t,y:n,width:r,height:s}=this,a=Math.abs(r-s);return r<s&&(t-=a/2,r+=a),s<r&&(n-=a/2,s+=a),new ut({x:t,y:n,width:r,height:s})}rescale(t){let n=Lm(t)?t.width:t,r=Lm(t)?t.height:t;return new ut({x:this.x*n,y:this.y*r,width:this.width*n,height:this.height*r})}pad(t,n){let[r,s,a,o]=[this.x-t/2,this.y-n/2,this.width+t,this.height+n];return new ut({x:r,y:s,width:a,height:o})}clipAtImageBorders(t,n){let{x:r,y:s,right:a,bottom:o}=this,i=Math.max(r,0),c=Math.max(s,0),l=a-i,u=o-c,d=Math.min(l,t-i),p=Math.min(u,n-c);return new ut({x:i,y:c,width:d,height:p}).floor()}shift(t,n){let{width:r,height:s}=this,a=this.x+t,o=this.y+n;return new ut({x:a,y:o,width:r,height:s})}padAtBorders(t,n){let r=this.width+1,s=this.height+1,a=1,o=1,i=r,c=s,l=this.left,u=this.top,d=this.right,p=this.bottom;return d>n&&(i=-d+n+r,d=n),p>t&&(c=-p+t+s,p=t),l<1&&(c=2-l,l=1),u<1&&(c=2-u,u=1),{dy:o,edy:c,dx:a,edx:i,y:u,ey:p,x:l,ex:d,w:r,h:s}}calibrate(t){return new ut({left:this.left+t.left*this.width,top:this.top+t.top*this.height,right:this.right+t.right*this.width,bottom:this.bottom+t.bottom*this.height}).toSquare().round()}};var Wu=class extends ut{constructor(t,n,r,s,a=!1){super({left:t,top:n,right:r,bottom:s},a)}};var Na=class{constructor(t,n,r,s,a){this._imageDims=new Nn(a.width,a.height),this._score=t,this._classScore=n,this._className=r,this._box=new ut(s).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new ut(this._box).rescale(this.imageDims.reverse())}forSize(t,n){return new Na(this.score,this.classScore,this.className,this.relativeBox,{width:t,height:n})}};var xt=class extends Na{constructor(t,n,r){super(t,t,"",n,r)}forSize(t,n){let{score:r,relativeBox:s,imageDims:a}=super.forSize(t,n);return new xt(r,s,a)}};function y1(e,t,n=!0){let r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left)),s=Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top)),a=r*s;return n?a/(e.area+t.area-a):a/Math.min(e.area,t.area)}function v1(e){let t=e.map(i=>i.x),n=e.map(i=>i.y),r=t.reduce((i,c)=>c<i?c:i,1/0),s=n.reduce((i,c)=>c<i?c:i,1/0),a=t.reduce((i,c)=>i<c?c:i,0),o=n.reduce((i,c)=>i<c?c:i,0);return new Wu(r,s,a,o)}function x1(e,t,n,r=!0){let s=t.map((o,i)=>({score:o,boxIndex:i})).sort((o,i)=>o.score-i.score).map(o=>o.boxIndex),a=[];for(;s.length>0;){let o=s.pop();a.push(o);let i=s,c=[];for(let l=0;l<i.length;l++){let u=i[l],d=e[o],p=e[u];c.push(y1(d,p,r))}s=s.filter((l,u)=>c[u]<=n)}return a}function Xr(e,t){return M(()=>{let[n,r,s]=t,a=xn([...e.shape.slice(0,3),1],n,"float32"),o=xn([...e.shape.slice(0,3),1],r,"float32"),i=xn([...e.shape.slice(0,3),1],s,"float32"),c=et([a,o,i],3);return fe(e,c)})}function w1(e,t=!1){return M(()=>{let[n,r]=e.shape.slice(1);if(n===r)return e;let s=Math.abs(n-r),a=Math.round(s*(t?.5:1)),o=n>r?2:1,i=p=>{let h=e.shape.slice();return h[o]=p,xn(h,0,"float32")},c=i(a),l=s-c.shape[o],d=[t&&l?i(l):null,e,c].filter(p=>!!p).map(p=>ce(p,"float32"));return et(d,o)})}function Lce(e){let t=e.slice();for(let n=t.length-1;n>0;n--){let r=Math.floor(Math.random()*(n+1)),s=t[n];t[n]=t[r],t[r]=s}return t}function tp(e){return 1/(1+Math.exp(-e))}function Bce(e){return Math.log(e/(1-e))}var Vu=class extends ut{constructor(t,n,r,s,a=!1){super({x:t,y:n,width:r,height:s},a)}};var zce=.5,Wce=.43,Vce=.45,yr=class{constructor(t,n,r=new Pe(0,0)){let{width:s,height:a}=n;this._imgDims=new Nn(s,a),this._shift=r,this._positions=t.map(o=>o.mul(new Pe(s,a)).add(r))}get shift(){return new Pe(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map(t=>t.sub(this._shift).div(new Pe(this.imageWidth,this.imageHeight)))}forSize(t,n){return new this.constructor(this.relativePositions,{width:t,height:n})}shiftBy(t,n){return new this.constructor(this.relativePositions,this._imgDims,new Pe(t,n))}shiftByPoint(t){return this.shiftBy(t.x,t.y)}align(t,n={}){if(t){let a=t instanceof xt?t.box.floor():new ut(t);return this.shiftBy(a.x,a.y).align(null,n)}let{useDlibAlignment:r,minBoxPadding:s}={useDlibAlignment:!1,minBoxPadding:.2,...n};return r?this.alignDlib():this.alignMinBbox(s)}alignDlib(){let t=this.getRefPointsForAlignment(),[n,r,s]=t,a=d=>s.sub(d).magnitude(),o=(a(n)+a(r))/2,i=Math.floor(o/Vce),c=Ii(t),l=Math.floor(Math.max(0,c.x-zce*i)),u=Math.floor(Math.max(0,c.y-Wce*i));return new Vu(l,u,Math.min(i,this.imageWidth+l),Math.min(i,this.imageHeight+u))}alignMinBbox(t){let n=v1(this.positions);return n.pad(n.width*t,n.height*t)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}};var AE=class extends yr{getRefPointsForAlignment(){let t=this.positions;return[t[0],t[1],Ii([t[3],t[4]])]}};var Uu=class extends yr{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(Ii)}};var np=class{constructor(t,n){this._label=t,this._distance=n}get label(){return this._label}get distance(){return this._distance}toString(t=!0){return`${this.label}${t?` (${ki(this.distance)})`:""}`}};var rp=class extends ut{static assertIsValidLabeledBox(t,n){if(ut.assertIsValidBox(t,n),!Kr(t.label))throw new Error(`${n} - expected property label (${t.label}) to be a number`)}constructor(t,n){super(t);this._label=n}get label(){return this._label}};var Rs=class{constructor(t,n){if(typeof t!="string")throw new Error("LabeledFaceDescriptors - constructor expected label to be a string");if(!Array.isArray(n)||n.some(r=>!(r instanceof Float32Array)))throw new Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array");this._label=t,this._descriptors=n}get label(){return this._label}get descriptors(){return this._descriptors}toJSON(){return{label:this.label,descriptors:this.descriptors.map(t=>Array.from(t))}}static fromJSON(t){let n=t.descriptors.map(r=>new Float32Array(r));return new Rs(t.label,n)}};var DE=class extends rp{static assertIsValidPredictedBox(t,n){if(rp.assertIsValidLabeledBox(t,n),!zu(t.score)||!zu(t.classScore))throw new Error(`${n} - expected properties score (${t.score}) and (${t.classScore}) to be a number between [0, 1]`)}constructor(t,n,r,s){super(t,n);this._score=r,this._classScore=s}get score(){return this._score}get classScore(){return this._classScore}};function hs(e){return e.detection instanceof xt}function Si(e,t){return{...e,...{detection:t}}}function k1(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function sp(){return typeof global=="object"&&typeof process!="undefined"&&process.versions!=null&&process.versions.node!=null}function Bm(e){let t="";if(!e&&sp())try{e=pD("fs")}catch(r){t=r.toString()}return{readFile:e?r=>new Promise((s,a)=>{e.readFile(r,(o,i)=>o?a(o):s(i))}):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function I1(){let e=global.Canvas||global.HTMLCanvasElement,t=global.Image||global.HTMLImageElement,n=global.Video||global.HTMLVideoElement,r=()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},s=()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},a=()=>{if(n)return new n;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},o=global.fetch,i=Bm();return{Canvas:e||class{},CanvasRenderingContext2D:global.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:global.ImageData||class{},Video:global.HTMLVideoElement||class{},createCanvasElement:r,createImageElement:s,createVideoElement:a,fetch:o,...i}}function S1(){return typeof window=="object"&&typeof document!="undefined"&&typeof HTMLImageElement!="undefined"&&typeof HTMLCanvasElement!="undefined"&&typeof HTMLVideoElement!="undefined"&&typeof ImageData!="undefined"&&typeof CanvasRenderingContext2D!="undefined"}var nn;function Uce(){if(!nn)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return nn}function T1(e){nn=e}function C1(){return S1()?T1(k1()):sp()?T1(I1()):null}function Gce(e){if(nn||C1(),!nn)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=nn.Canvas,Image:n=nn.Image}=e;nn.Canvas=t,nn.Image=n,nn.createCanvasElement=e.createCanvasElement||(()=>new t),nn.createImageElement=e.createImageElement||(()=>new n),nn.ImageData=e.ImageData||nn.ImageData,nn.Video=e.Video||nn.Video,nn.fetch=e.fetch||nn.fetch,nn.readFile=e.readFile||nn.readFile}var tt={getEnv:Uce,setEnv:T1,initialize:C1,createBrowserEnv:k1,createFileSystem:Bm,createNodejsEnv:I1,monkeyPatch:Gce,isBrowser:S1,isNodejs:sp};C1();function Ti(e){return!tt.isNodejs()&&typeof e=="string"?document.getElementById(e):e}function Un(e){let{Canvas:t,CanvasRenderingContext2D:n}=tt.getEnv();if(e instanceof n)return e;let r=Ti(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let s=r.getContext("2d");if(!s)throw new Error("resolveContext2d - canvas 2d context is null");return s}var fs;(function(s){s.TOP_LEFT="TOP_LEFT",s.TOP_RIGHT="TOP_RIGHT",s.BOTTOM_LEFT="BOTTOM_LEFT",s.BOTTOM_RIGHT="BOTTOM_RIGHT"})(fs||(fs={}));var ap=class{constructor(t={}){let{anchorPosition:n,backgroundColor:r,fontColor:s,fontSize:a,fontStyle:o,padding:i}=t;this.anchorPosition=n||fs.TOP_LEFT,this.backgroundColor=r||"rgba(0, 0, 0, 0.5)",this.fontColor=s||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=o||"Georgia",this.padding=i||4}},_a=class{constructor(t,n,r={}){this.text=typeof t=="string"?[t]:t instanceof _a?t.text:t,this.anchor=n,this.options=new ap(r)}measureWidth(t){let{padding:n}=this.options;return this.text.map(r=>t.measureText(r).width).reduce((r,s)=>r<s?s:r,0)+2*n}measureHeight(){let{fontSize:t,padding:n}=this.options;return this.text.length*t+2*n}getUpperLeft(t,n){let{anchorPosition:r}=this.options,s=r===fs.BOTTOM_RIGHT||r===fs.TOP_RIGHT,a=r===fs.BOTTOM_LEFT||r===fs.BOTTOM_RIGHT,o=this.measureWidth(t),i=this.measureHeight(),c=s?this.anchor.x-o:this.anchor.x,l=a?this.anchor.y-i:this.anchor.y;if(n){let{width:u,height:d}=n,p=Math.max(Math.min(c,u-o),0),h=Math.max(Math.min(l,d-i),0);return{x:p,y:h}}return{x:c,y:l}}draw(t){let n=Ti(t),r=Un(n),{backgroundColor:s,fontColor:a,fontSize:o,fontStyle:i,padding:c}=this.options;r.font=`${o}px ${i}`;let l=this.measureWidth(r),u=this.measureHeight();r.fillStyle=s;let d=this.getUpperLeft(r,n);r.fillRect(d.x,d.y,l,u),r.fillStyle=a,this.text.forEach((p,h)=>{let f=c+d.x,m=c+d.y+(h+1)*o;r.fillText(p,f,m)})}};var N1=class{constructor(t={}){let{boxColor:n,lineWidth:r,label:s,drawLabelOptions:a}=t;this.boxColor=n||"rgba(0, 0, 255, 1)",this.lineWidth=r||2,this.label=s;let o={anchorPosition:fs.BOTTOM_LEFT,backgroundColor:this.boxColor};this.drawLabelOptions=new ap({...o,...a})}},zm=class{constructor(t,n={}){this.box=new ut(t),this.options=new N1(n)}draw(t){let n=Un(t),{boxColor:r,lineWidth:s}=this.options,{x:a,y:o,width:i,height:c}=this.box;n.strokeStyle=r,n.lineWidth=s,n.strokeRect(a,o,i,c);let{label:l}=this.options;l&&new _a([l],{x:a-s/2,y:o},this.options.drawLabelOptions).draw(t)}};function Hce(e,t){(Array.isArray(t)?t:[t]).forEach(r=>{let s=r instanceof xt?r.score:hs(r)?r.detection.score:void 0,a=r instanceof xt?r.box:hs(r)?r.detection.box:new ut(r),o=s?`${ki(s)}`:void 0;new zm(a,{label:o}).draw(e)})}function op(e){let{Image:t,Video:n}=tt.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function _1(e){return new Promise((t,n)=>{(e instanceof tt.getEnv().Canvas||op(e))&&t(null);function r(a){!a.currentTarget||(a.currentTarget.removeEventListener("load",s),a.currentTarget.removeEventListener("error",r),n(a))}function s(a){!a.currentTarget||(a.currentTarget.removeEventListener("load",s),a.currentTarget.removeEventListener("error",r),t(a))}e.addEventListener("load",s),e.addEventListener("error",r)})}function E1(e){return new Promise((t,n)=>{e instanceof Blob||n(new Error("bufferToImage - expected buf to be of type: Blob"));let r=new FileReader;r.onload=()=>{typeof r.result!="string"&&n(new Error("bufferToImage - expected reader.result to be a string, in onload"));let s=tt.getEnv().createImageElement();s.onload=()=>t(s),s.onerror=n,s.src=r.result},r.onerror=n,r.readAsDataURL(e)})}function Ci(e){let{Image:t,Video:n}=tt.getEnv();return e instanceof t?new Nn(e.naturalWidth,e.naturalHeight):e instanceof n?new Nn(e.videoWidth,e.videoHeight):new Nn(e.width,e.height)}function Ni({width:e,height:t}){let{createCanvasElement:n}=tt.getEnv(),r=n();return r.width=e,r.height=t,r}function ip(e,t){let{ImageData:n}=tt.getEnv();if(!(e instanceof n)&&!op(e))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:r,height:s}=t||Ci(e),a=Ni({width:r,height:s});return e instanceof n?Un(a).putImageData(e,0,0):Un(a).drawImage(e,0,0,r,s),a}async function A1(e,t){let n=t||tt.getEnv().createCanvasElement(),[r,s,a]=e.shape.slice(br(e)?1:0),o=M(()=>e.as3D(r,s,a).toInt());return await Go.toPixels(o,n),o.dispose(),n}function Wm(e){let{Image:t,Canvas:n,Video:r}=tt.getEnv();return e instanceof t||e instanceof n||e instanceof r}function D1(e,t,n=!1){let{Image:r,Canvas:s}=tt.getEnv();if(!(e instanceof r||e instanceof s))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return Ni({width:1,height:1});let a=Ci(e),o=t/Math.max(a.height,a.width),i=o*a.width,c=o*a.height,l=Ni({width:t,height:t}),u=e instanceof s?e:ip(e),d=Math.abs(i-c)/2,p=n&&i<c?d:0,h=n&&c<i?d:0;return u.width>0&&u.height>0&&Un(l).drawImage(u,p,h,i,c),l}var Ps=class{constructor(t,n=!1){this._imageTensors=[];this._canvases=[];this._treatAsBatchInput=!1;this._inputDimensions=[];this._inputSize=0;if(!Array.isArray(t))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${t}`);this._treatAsBatchInput=n,this._batchSize=t.length,t.forEach((r,s)=>{if($s(r)){this._imageTensors[s]=r,this._inputDimensions[s]=r.shape;return}if(br(r)){let o=r.shape[0];if(o!==1)throw new Error(`NetInput - tf.Tensor4D with batchSize ${o} passed, but not supported in input array`);this._imageTensors[s]=r,this._inputDimensions[s]=r.shape.slice(1);return}let a=r instanceof tt.getEnv().Canvas?r:ip(r);this._canvases[s]=a,this._inputDimensions[s]=[a.height,a.width,3]})}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return ps(this.batchSize,0,1).map((t,n)=>this.getReshapedInputDimensions(n))}getInput(t){return this.canvases[t]||this.imageTensors[t]}getInputDimensions(t){return this._inputDimensions[t]}getInputHeight(t){return this._inputDimensions[t][0]}getInputWidth(t){return this._inputDimensions[t][1]}getReshapedInputDimensions(t){if(typeof this.inputSize!="number")throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");let n=this.getInputWidth(t),r=this.getInputHeight(t);return g1({width:n,height:r},this.inputSize)}toBatchTensor(t,n=!0){return this._inputSize=t,M(()=>{let r=ps(this.batchSize,0,1).map(a=>{let o=this.getInput(a);if(o instanceof Ee){let i=br(o)?o:mn(o);return i=w1(i,n),(i.shape[1]!==t||i.shape[2]!==t)&&(i=er.resizeBilinear(i,[t,t],!1,!1)),i.as3D(t,t,3)}if(o instanceof tt.getEnv().Canvas)return Go.fromPixels(D1(o,t,n));throw new Error(`toBatchTensor - at batchIdx ${a}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${o}`)});return Ot(r.map(a=>ce(a,"float32"))).as4D(this.batchSize,t,t,3)})}};async function bt(e){if(e instanceof Ps)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=s=>Array.isArray(e)?` at input index ${s}:`:"",r=t.map(Ti);return r.forEach((s,a)=>{if(!Wm(s)&&!$s(s)&&!br(s))throw typeof t[a]=="string"?new Error(`toNetInput -${n(a)} string passed, but could not resolve HTMLElement for element id ${t[a]}`):new Error(`toNetInput -${n(a)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(br(s)){let o=s.shape[0];if(o!==1)throw new Error(`toNetInput -${n(a)} tf.Tensor4D with batchSize ${o} passed, but not supported in input array`)}}),await Promise.all(r.map(s=>Wm(s)&&_1(s))),new Ps(r,Array.isArray(e))}async function Gu(e,t){let{Canvas:n}=tt.getEnv(),r=e;if(!(e instanceof n)){let o=await bt(e);if(o.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let i=o.getInput(0);r=i instanceof n?i:await A1(i)}let s=Un(r);return t.map(o=>o instanceof xt?o.forSize(r.width,r.height).box.floor():o).map(o=>o.clipAtImageBorders(r.width,r.height)).map(({x:o,y:i,width:c,height:l})=>{let u=Ni({width:c,height:l});return c>0&&l>0&&Un(u).putImageData(s.getImageData(o,i,c,l),0,0),u})}async function Hu(e,t){if(!$s(e)&&!br(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(br(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return M(()=>{let[n,r,s]=e.shape.slice(br(e)?1:0);return t.map(i=>i instanceof xt?i.forSize(r,n).box:i).map(i=>i.clipAtImageBorders(r,n)).map(({x:i,y:c,width:l,height:u})=>pu(e.as3D(n,r,s),[c,i,0],[u,l,s]))})}async function Os(e,t){let{fetch:n}=tt.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}async function jce(e){let t=await Os(e),n=await t.blob();if(!n.type.startsWith("image/"))throw new Error(`fetchImage - expected blob type to be of type image/*, instead have: ${n.type}, for url: ${t.url}`);return E1(n)}async function F1(e){return(await Os(e)).json()}async function qce(e){return new Float32Array(await(await Os(e)).arrayBuffer())}function FE(e){return new Promise((t,n)=>{e instanceof Blob||n(new Error("bufferToVideo - expected buf to be of type: Blob"));let r=tt.getEnv().createVideoElement();r.oncanplay=()=>t(r),r.onerror=n,r.playsInline=!0,r.muted=!0,r.src=URL.createObjectURL(e),r.play()})}async function Kce(e){let t=await Os(e),n=await t.blob();if(!n.type.startsWith("video/"))throw new Error(`fetchVideo - expected blob type to be of type video/*, instead have: ${n.type}, for url: ${t.url}`);return FE(n)}function Vm(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if(e==="/")return{modelBaseUri:"/",manifestUri:`/${n}`};let r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"";e=e.replace(r,"");let s=e.split("/").filter(i=>i),a=e.endsWith(".json")?s[s.length-1]:n,o=r+(e.endsWith(".json")?s.slice(0,s.length-1):s).join("/");return o=e.startsWith("/")?`/${o}`:o,{modelBaseUri:o,manifestUri:o==="/"?`/${a}`:`${o}/${a}`}}async function $1(e,t){let{manifestUri:n,modelBaseUri:r}=Vm(e,t),s=await F1(n);return Yt.loadWeights(s,r)}function Xce(e,t,n=!1){let{width:r,height:s}=n?Ci(t):t;return e.width=r,e.height=s,{width:r,height:s}}var ln=class{constructor(t){this._params=void 0;this._paramMappings=[];this._name=t}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(t){let{obj:n,objProp:r}=this.traversePropertyPath(t);return n[r]}reassignParamFromPath(t,n){let{obj:r,objProp:s}=this.traversePropertyPath(t);r[s].dispose(),r[s]=n}getParamList(){return this._paramMappings.map(({paramPath:t})=>({path:t,tensor:this.getParamFromPath(t)}))}getTrainableParams(){return this.getParamList().filter(t=>t.tensor instanceof ra)}getFrozenParams(){return this.getParamList().filter(t=>!(t.tensor instanceof ra))}variable(){this.getFrozenParams().forEach(({path:t,tensor:n})=>{this.reassignParamFromPath(t,n.variable())})}freeze(){this.getTrainableParams().forEach(({path:t,tensor:n})=>{let r=Kn(n.dataSync());n.dispose(),this.reassignParamFromPath(t,r)})}dispose(t=!0){this.getParamList().forEach(n=>{if(t&&n.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${n.path}`);n.tensor.dispose()}),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map(({tensor:t})=>Array.from(t.dataSync())).reduce((t,n)=>t.concat(n)))}async load(t){if(t instanceof Float32Array){this.extractWeights(t);return}await this.loadFromUri(t)}async loadFromUri(t){if(t&&typeof t!="string")throw new Error(`${this._name}.loadFromUri - expected model uri`);let n=await $1(t,this.getDefaultModelName());this.loadFromWeightMap(n)}async loadFromDisk(t){if(t&&typeof t!="string")throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:n}=tt.getEnv(),{manifestUri:r,modelBaseUri:s}=Vm(t,this.getDefaultModelName()),a=l=>Promise.all(l.map(u=>n(u).then(d=>d.buffer))),o=Yt.weightsLoaderFactory(a),i=JSON.parse((await n(r)).toString()),c=await o(i,s);this.loadFromWeightMap(c)}loadFromWeightMap(t){let{paramMappings:n,params:r}=this.extractParamsFromWeightMap(t);this._paramMappings=n,this._params=r}extractWeights(t){let{paramMappings:n,params:r}=this.extractParams(t);this._paramMappings=n,this._params=r}traversePropertyPath(t){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let n=t.split("/").reduce((a,o)=>{if(!a.nextObj.hasOwnProperty(o))throw new Error(`traversePropertyPath - object does not have property ${o}, for path ${t}`);return{obj:a.nextObj,objProp:o,nextObj:a.nextObj[o]}},{nextObj:this.params}),{obj:r,objProp:s}=n;if(!r||!s||!(r[s]instanceof Ee))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${t}`);return{obj:r,objProp:s}}};function Gn(e,t,n){return M(()=>{let r=ei(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=Y(r,t.bias),r})}function Um(e,t,n=!1){return M(()=>{let r=qe(n?Y(Rt(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):Gn(e,t.conv0,[2,2])),s=Gn(r,t.conv1,[1,1]),a=qe(Y(r,s)),o=Gn(a,t.conv2,[1,1]);return qe(Y(r,Y(s,o)))})}function cp(e,t,n=!1,r=!0){return M(()=>{let s=qe(n?Y(Rt(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):Gn(e,t.conv0,r?[2,2]:[1,1])),a=Gn(s,t.conv1,[1,1]),o=qe(Y(s,a)),i=Gn(o,t.conv2,[1,1]),c=qe(Y(s,Y(a,i))),l=Gn(c,t.conv3,[1,1]);return qe(Y(s,Y(a,Y(i,l))))})}function _i(e,t,n="same",r=!1){return M(()=>{let s=Y(Rt(e,t.filters,[1,1],n),t.bias);return r?qe(s):s})}function _n(e,t){Object.keys(e).forEach(n=>{t.some(r=>r.originalPath===n)||e[n].dispose()})}function ju(e,t){return(n,r,s,a)=>{let o=Br(e(n*r*s*s),[s,s,n,r]),i=He(e(r));return t.push({paramPath:`${a}/filters`},{paramPath:`${a}/bias`}),{filters:o,bias:i}}}function Gm(e,t){return(n,r,s)=>{let a=Lr(e(n*r),[n,r]),o=He(e(r));return t.push({paramPath:`${s}/weights`},{paramPath:`${s}/bias`}),{weights:a,bias:o}}}var Hm=class{constructor(t,n,r){this.depthwise_filter=t;this.pointwise_filter=n;this.bias=r}};function qu(e,t){return(n,r,s)=>{let a=Br(e(3*3*n),[3,3,n,1]),o=Br(e(n*r),[1,1,n,r]),i=He(e(r));return t.push({paramPath:`${s}/depthwise_filter`},{paramPath:`${s}/pointwise_filter`},{paramPath:`${s}/bias`}),new Hm(a,o,i)}}function Ku(e){return t=>{let n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),s=e(`${t}/bias`,1);return new Hm(n,r,s)}}function ar(e,t){return(n,r,s)=>{let a=e[n];if(!wi(a,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${a}`);return t.push({originalPath:n,paramPath:s||n}),a}}function En(e){let t=e;function n(s){let a=t.slice(0,s);return t=t.slice(s),a}function r(){return t}return{extractWeights:n,getRemainingWeights:r}}function jm(e,t){let n=ju(e,t),r=qu(e,t);function s(o,i,c,l=!1){let u=l?n(o,i,3,`${c}/conv0`):r(o,i,`${c}/conv0`),d=r(i,i,`${c}/conv1`),p=r(i,i,`${c}/conv2`);return{conv0:u,conv1:d,conv2:p}}function a(o,i,c,l=!1){let{conv0:u,conv1:d,conv2:p}=s(o,i,c,l),h=r(i,i,`${c}/conv3`);return{conv0:u,conv1:d,conv2:p,conv3:h}}return{extractDenseBlock3Params:s,extractDenseBlock4Params:a}}function $E(e){let t=[],{extractWeights:n,getRemainingWeights:r}=En(e),{extractDenseBlock4Params:s}=jm(n,t),a=s(3,32,"dense0",!0),o=s(32,64,"dense1"),i=s(64,128,"dense2"),c=s(128,256,"dense3");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:a,dense1:o,dense2:i,dense3:c}}}function qm(e){return t=>{let n=e(`${t}/filters`,4),r=e(`${t}/bias`,1);return{filters:n,bias:r}}}function Km(e,t){let n=ar(e,t),r=qm(n),s=Ku(n);function a(i,c=!1){let l=c?r(`${i}/conv0`):s(`${i}/conv0`),u=s(`${i}/conv1`),d=s(`${i}/conv2`);return{conv0:l,conv1:u,conv2:d}}function o(i,c=!1){let l=c?r(`${i}/conv0`):s(`${i}/conv0`),u=s(`${i}/conv1`),d=s(`${i}/conv2`),p=s(`${i}/conv3`);return{conv0:l,conv1:u,conv2:d,conv3:p}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:o}}function RE(e){let t=[],{extractDenseBlock4Params:n}=Km(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return _n(e,t),{params:r,paramMappings:t}}var up=class extends ln{constructor(){super("FaceFeatureExtractor")}forwardInput(t){let{params:n}=this;if(!n)throw new Error("FaceFeatureExtractor - load model before inference");return M(()=>{let r=ce(t.toBatchTensor(112,!0),"float32"),a=Xr(r,[122.782,117.001,104.298]).div(255),o=cp(a,n.dense0,!0);return o=cp(o,n.dense1),o=cp(o,n.dense2),o=cp(o,n.dense3),o=lr(o,[7,7],[2,2],"valid"),o})}async forward(t){return this.forwardInput(await bt(t))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(t){return RE(t)}extractParams(t){return $E(t)}};function lp(e,t){return M(()=>Y(De(e,t.weights),t.bias))}function PE(e,t,n){let r=[],{extractWeights:s,getRemainingWeights:a}=En(e),i=Gm(s,r)(t,n,"fc");if(a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:r,params:{fc:i}}}function OE(e){let t=[],n=ar(e,t);function r(a){let o=n(`${a}/weights`,2),i=n(`${a}/bias`,1);return{weights:o,bias:i}}let s={fc:r("fc")};return _n(e,t),{params:s,paramMappings:t}}function Xm(e){let t={},n={};return Object.keys(e).forEach(r=>{let s=r.startsWith("fc")?n:t;s[r]=e[r]}),{featureExtractorMap:t,classifierMap:n}}var dp=class extends ln{constructor(t,n){super(t);this._faceFeatureExtractor=n}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(t){let{params:n}=this;if(!n)throw new Error(`${this._name} - load model before inference`);return M(()=>{let r=t instanceof Ps?this.faceFeatureExtractor.forwardInput(t):t;return lp(r.as2D(r.shape[0],-1),n.fc)})}dispose(t=!0){this.faceFeatureExtractor.dispose(t),super.dispose(t)}loadClassifierParams(t){let{params:n,paramMappings:r}=this.extractClassifierParams(t);this._params=n,this._paramMappings=r}extractClassifierParams(t){return PE(t,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(t){let{featureExtractorMap:n,classifierMap:r}=Xm(t);return this.faceFeatureExtractor.loadFromWeightMap(n),OE(r)}extractParams(t){let n=this.getClassifierChannelsIn(),r=this.getClassifierChannelsOut(),s=r*n+r,a=t.slice(0,t.length-s),o=t.slice(t.length-s);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(o)}};var R1=["neutral","happy","sad","angry","fearful","disgusted","surprised"],Ea=class{constructor(t){this.neutral=0;this.happy=0;this.sad=0;this.angry=0;this.fearful=0;this.disgusted=0;this.surprised=0;if(t.length!==7)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${t.length}`);R1.forEach((n,r)=>{this[n]=t[r]})}asSortedArray(){return R1.map(t=>({expression:t,probability:this[t]})).sort((t,n)=>n.probability-t.probability)}};var Ym=class extends dp{constructor(t=new up){super("FaceExpressionNet",t)}forwardInput(t){return M(()=>Mr(this.runNet(t)))}async forward(t){return this.forwardInput(await bt(t))}async predictExpressions(t){let n=await bt(t),r=await this.forwardInput(n),s=await Promise.all(ht(r).map(async o=>{let i=o.dataSync();return o.dispose(),i}));r.dispose();let a=s.map(o=>new Ea(o));return n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function P1(e){return e.expressions instanceof Ea}function Zm(e,t){return{...e,...{expressions:t}}}function Yce(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach(a=>{let o=a instanceof Ea?a:P1(a)?a.expressions:void 0;if(!o)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let c=o.asSortedArray().filter(d=>d.probability>n),l=hs(a)?a.detection.box.bottomLeft:r||new Pe(0,0);new _a(c.map(d=>`${d.expression} (${ki(d.probability)})`),l).draw(e)})}function Ei(e){return hs(e)&&e.landmarks instanceof yr&&e.unshiftedLandmarks instanceof yr&&e.alignedRect instanceof xt}function Zce(e){let t=(i,c,l,u)=>Math.atan2(u-c,l-i)%Math.PI,n=i=>i*180/Math.PI,r={roll:void 0,pitch:void 0,yaw:void 0};if(!e||!e._positions||e._positions.length!==68)return r;let s=e._positions;r.roll=-t(s[36]._x,s[36]._y,s[45]._x,s[45]._y),r.pitch=t(0,Math.abs(s[0]._x-s[30]._x)/s[30]._x,Math.PI,Math.abs(s[16]._x-s[30]._x)/s[30]._x);let a=s.reduce((i,c)=>i<c._y?i:c._y,1/0),o=s.reduce((i,c)=>i>c._y?i:c._y,-1/0);return r.yaw=Math.PI*(e._imgDims._height/(o-a)/1.4-1),r}function Xu(e,t){let{box:n}=e.detection,r=t.shiftBy(n.x,n.y),s=r.align(),{imageDims:a}=e.detection,o=new xt(e.detection.score,s.rescale(a.reverse()),a),i=Zce(t);return{...e,...{landmarks:r,unshiftedLandmarks:t,alignedRect:o,angle:i}}}var O1=class{constructor(t={}){let{drawLines:n=!0,drawPoints:r=!0,lineWidth:s,lineColor:a,pointSize:o,pointColor:i}=t;this.drawLines=n,this.drawPoints=r,this.lineWidth=s||1,this.pointSize=o||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},M1=class{constructor(t,n={}){this.faceLandmarks=t,this.options=new O1(n)}draw(t){let n=Un(t),{drawLines:r,drawPoints:s,lineWidth:a,lineColor:o,pointSize:i,pointColor:c}=this.options;if(r&&this.faceLandmarks instanceof Uu&&(n.strokeStyle=o,n.lineWidth=a,Fs(n,this.faceLandmarks.getJawOutline()),Fs(n,this.faceLandmarks.getLeftEyeBrow()),Fs(n,this.faceLandmarks.getRightEyeBrow()),Fs(n,this.faceLandmarks.getNose()),Fs(n,this.faceLandmarks.getLeftEye(),!0),Fs(n,this.faceLandmarks.getRightEye(),!0),Fs(n,this.faceLandmarks.getMouth(),!0)),s){n.strokeStyle=c,n.fillStyle=c;let l=u=>{n.beginPath(),n.arc(u.x,u.y,i,0,2*Math.PI),n.fill()};this.faceLandmarks.positions.forEach(l)}}};function Jce(e,t){(Array.isArray(t)?t:[t]).forEach(r=>{let s=r instanceof yr?r:Ei(r)?r.landmarks:void 0;if(!s)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new M1(s).draw(e)})}var ME="1.6.2";function eue(e,t){let n=ju(e,t),r=qu(e,t);function s(o,i,c){let l=r(o,i,`${c}/separable_conv0`),u=r(i,i,`${c}/separable_conv1`),d=n(o,i,1,`${c}/expansion_conv`);return{separable_conv0:l,separable_conv1:u,expansion_conv:d}}function a(o,i){let c=r(o,o,`${i}/separable_conv0`),l=r(o,o,`${i}/separable_conv1`),u=r(o,o,`${i}/separable_conv2`);return{separable_conv0:c,separable_conv1:l,separable_conv2:u}}return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:s,extractMainBlockParams:a}}function LE(e,t){let n=[],{extractWeights:r,getRemainingWeights:s}=En(e),{extractConvParams:a,extractSeparableConvParams:o,extractReductionBlockParams:i,extractMainBlockParams:c}=eue(r,n),l=a(3,32,3,"entry_flow/conv_in"),u=i(32,64,"entry_flow/reduction_block_0"),d=i(64,128,"entry_flow/reduction_block_1"),p={conv_in:l,reduction_block_0:u,reduction_block_1:d},h={};ps(t,0,1).forEach(b=>{h[`main_block_${b}`]=c(128,`middle_flow/main_block_${b}`)});let f=i(128,256,"exit_flow/reduction_block"),m=o(256,512,"exit_flow/separable_conv"),g={reduction_block:f,separable_conv:m};if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:n,params:{entry_flow:p,middle_flow:h,exit_flow:g}}}function tue(e,t){let n=ar(e,t),r=qm(n),s=Ku(n);function a(i){let c=s(`${i}/separable_conv0`),l=s(`${i}/separable_conv1`),u=r(`${i}/expansion_conv`);return{separable_conv0:c,separable_conv1:l,expansion_conv:u}}function o(i){let c=s(`${i}/separable_conv0`),l=s(`${i}/separable_conv1`),u=s(`${i}/separable_conv2`);return{separable_conv0:c,separable_conv1:l,separable_conv2:u}}return{extractConvParams:r,extractSeparableConvParams:s,extractReductionBlockParams:a,extractMainBlockParams:o}}function BE(e,t){let n=[],{extractConvParams:r,extractSeparableConvParams:s,extractReductionBlockParams:a,extractMainBlockParams:o}=tue(e,n),i=r("entry_flow/conv_in"),c=a("entry_flow/reduction_block_0"),l=a("entry_flow/reduction_block_1"),u={conv_in:i,reduction_block_0:c,reduction_block_1:l},d={};ps(t,0,1).forEach(m=>{d[`main_block_${m}`]=o(`middle_flow/main_block_${m}`)});let p=a("exit_flow/reduction_block"),h=s("exit_flow/separable_conv"),f={reduction_block:p,separable_conv:h};return _n(e,n),{params:{entry_flow:u,middle_flow:d,exit_flow:f},paramMappings:n}}function zE(e,t,n){return Y(Rt(e,t.filters,n,"same"),t.bias)}function B1(e,t,n=!0){let r=n?qe(e):e;return r=Gn(r,t.separable_conv0,[1,1]),r=Gn(qe(r),t.separable_conv1,[1,1]),r=Pt(r,[3,3],[2,2],"same"),r=Y(r,zE(e,t.expansion_conv,[2,2])),r}function nue(e,t){let n=Gn(qe(e),t.separable_conv0,[1,1]);return n=Gn(qe(n),t.separable_conv1,[1,1]),n=Gn(qe(n),t.separable_conv2,[1,1]),n=Y(n,e),n}var z1=class extends ln{constructor(t){super("TinyXception");this._numMainBlocks=t}forwardInput(t){let{params:n}=this;if(!n)throw new Error("TinyXception - load model before inference");return M(()=>{let r=ce(t.toBatchTensor(112,!0),"float32"),a=Xr(r,[122.782,117.001,104.298]).div(255),o=qe(zE(a,n.entry_flow.conv_in,[2,2]));return o=B1(o,n.entry_flow.reduction_block_0,!1),o=B1(o,n.entry_flow.reduction_block_1),ps(this._numMainBlocks,0,1).forEach(i=>{o=nue(o,n.middle_flow[`main_block_${i}`])}),o=B1(o,n.exit_flow.reduction_block),o=qe(Gn(o,n.exit_flow.separable_conv,[1,1])),o})}async forward(t){return this.forwardInput(await bt(t))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(t){return BE(t,this._numMainBlocks)}extractParams(t){return LE(t,this._numMainBlocks)}};function WE(e){let t=[],{extractWeights:n,getRemainingWeights:r}=En(e),s=Gm(n,t),a=s(512,1,"fc/age"),o=s(512,2,"fc/gender");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:a,gender:o}}}}function VE(e){let t=[],n=ar(e,t);function r(a){let o=n(`${a}/weights`,2),i=n(`${a}/bias`,1);return{weights:o,bias:i}}let s={fc:{age:r("fc/age"),gender:r("fc/gender")}};return _n(e,t),{params:s,paramMappings:t}}var Ms;(function(n){n.FEMALE="female",n.MALE="male"})(Ms||(Ms={}));var Jm=class extends ln{constructor(t=new z1(2)){super("AgeGenderNet");this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(t){let{params:n}=this;if(!n)throw new Error(`${this._name} - load model before inference`);return M(()=>{let r=t instanceof Ps?this.faceFeatureExtractor.forwardInput(t):t,s=lr(r,[7,7],[2,2],"valid").as2D(r.shape[0],-1),a=lp(s,n.fc.age).as1D(),o=lp(s,n.fc.gender);return{age:a,gender:o}})}forwardInput(t){return M(()=>{let{age:n,gender:r}=this.runNet(t);return{age:n,gender:Mr(r)}})}async forward(t){return this.forwardInput(await bt(t))}async predictAgeAndGender(t){let n=await bt(t),r=await this.forwardInput(n),s=ht(r.age),a=ht(r.gender),o=s.map((c,l)=>({ageTensor:c,genderTensor:a[l]})),i=await Promise.all(o.map(async({ageTensor:c,genderTensor:l})=>{let u=c.dataSync()[0],d=l.dataSync()[0],p=d>.5,h=p?Ms.MALE:Ms.FEMALE,f=p?d:1-d;return c.dispose(),l.dispose(),{age:u,gender:h,genderProbability:f}}));return r.age.dispose(),r.gender.dispose(),n.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(t=!0){this.faceFeatureExtractor.dispose(t),super.dispose(t)}loadClassifierParams(t){let{params:n,paramMappings:r}=this.extractClassifierParams(t);this._params=n,this._paramMappings=r}extractClassifierParams(t){return WE(t)}extractParamsFromWeightMap(t){let{featureExtractorMap:n,classifierMap:r}=Xm(t);return this.faceFeatureExtractor.loadFromWeightMap(n),VE(r)}extractParams(t){let n=512*1+1+(512*2+2),r=t.slice(0,t.length-n),s=t.slice(t.length-n);return this.faceFeatureExtractor.extractWeights(r),this.extractClassifierParams(s)}};var pp=class extends dp{postProcess(t,n,r){let s=r.map(({width:o,height:i})=>{let c=n/Math.max(i,o);return{width:o*c,height:i*c}}),a=s.length;return M(()=>{let o=(d,p)=>Ot([xn([68],d,"float32"),xn([68],p,"float32")],1).as2D(1,136).as1D(),i=(d,p)=>{let{width:h,height:f}=s[d];return p(h,f)?Math.abs(h-f)/2:0},c=d=>i(d,(p,h)=>p<h),l=d=>i(d,(p,h)=>h<p);return t.mul(xn([a,136],n,"float32")).sub(Ot(Array.from(Array(a),(d,p)=>o(c(p),l(p))))).div(Ot(Array.from(Array(a),(d,p)=>o(s[p].width,s[p].height))))})}forwardInput(t){return M(()=>{let n=this.runNet(t);return this.postProcess(n,t.inputSize,t.inputDimensions.map(([r,s])=>({height:r,width:s})))})}async forward(t){return this.forwardInput(await bt(t))}async detectLandmarks(t){let n=await bt(t),r=M(()=>ht(this.forwardInput(n))),s=await Promise.all(r.map(async(a,o)=>{let i=Array.from(a.dataSync()),c=i.filter((u,d)=>Mm(d)),l=i.filter((u,d)=>!Mm(d));return new Uu(Array(68).fill(0).map((u,d)=>new Pe(c[d],l[d])),{height:n.getInputHeight(o),width:n.getInputWidth(o)})}));return r.forEach(a=>a.dispose()),n.isBatchInput?s:s[0]}getClassifierChannelsOut(){return 136}};var Yu=class extends pp{constructor(t=new up){super("FaceLandmark68Net",t)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};function UE(e){let t=[],{extractDenseBlock3Params:n}=Km(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return _n(e,t),{params:r,paramMappings:t}}function GE(e){let t=[],{extractWeights:n,getRemainingWeights:r}=En(e),{extractDenseBlock3Params:s}=jm(n,t),a=s(3,32,"dense0",!0),o=s(32,64,"dense1"),i=s(64,128,"dense2");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:a,dense1:o,dense2:i}}}var W1=class extends ln{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(t){let{params:n}=this;if(!n)throw new Error("TinyFaceFeatureExtractor - load model before inference");return M(()=>{let r=ce(t.toBatchTensor(112,!0),"float32"),a=Xr(r,[122.782,117.001,104.298]).div(255),o=Um(a,n.dense0,!0);return o=Um(o,n.dense1),o=Um(o,n.dense2),o=lr(o,[14,14],[2,2],"valid"),o})}async forward(t){return this.forwardInput(await bt(t))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(t){return UE(t)}extractParams(t){return GE(t)}};var Qm=class extends pp{constructor(t=new W1){super("FaceLandmark68TinyNet",t)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}};var HE=class extends Yu{};function jE(e,t){return Y(V(e,t.weights),t.biases)}function V1(e,t,n,r,s="same"){let{filters:a,bias:o}=t.conv,i=Rt(e,a,n,s);return i=Y(i,o),i=jE(i,t.scale),r?qe(i):i}function qE(e,t){return V1(e,t,[1,1],!0)}function U1(e,t){return V1(e,t,[1,1],!1)}function eg(e,t){return V1(e,t,[2,2],!0,"valid")}function rue(e,t){function n(i,c,l){let u=e(i),d=u.length/(c*l*l);if(m1(d))throw new Error(`depth has to be an integer: ${d}, weights.length: ${u.length}, numFilters: ${c}, filterSize: ${l}`);return M(()=>Re(Br(u,[c,d,l,l]),[2,3,1,0]))}function r(i,c,l,u){let d=n(i,c,l),p=He(e(c));return t.push({paramPath:`${u}/filters`},{paramPath:`${u}/bias`}),{filters:d,bias:p}}function s(i,c){let l=He(e(i)),u=He(e(i));return t.push({paramPath:`${c}/weights`},{paramPath:`${c}/biases`}),{weights:l,biases:u}}function a(i,c,l,u){let d=r(i,c,l,`${u}/conv`),p=s(c,`${u}/scale`);return{conv:d,scale:p}}function o(i,c,l,u,d=!1){let p=a((d?.5:1)*i,c,l,`${u}/conv1`),h=a(i,c,l,`${u}/conv2`);return{conv1:p,conv2:h}}return{extractConvLayerParams:a,extractResidualLayerParams:o}}function KE(e){let{extractWeights:t,getRemainingWeights:n}=En(e),r=[],{extractConvLayerParams:s,extractResidualLayerParams:a}=rue(t,r),o=s(4704,32,7,"conv32_down"),i=a(9216,32,3,"conv32_1"),c=a(9216,32,3,"conv32_2"),l=a(9216,32,3,"conv32_3"),u=a(36864,64,3,"conv64_down",!0),d=a(36864,64,3,"conv64_1"),p=a(36864,64,3,"conv64_2"),h=a(36864,64,3,"conv64_3"),f=a(147456,128,3,"conv128_down",!0),m=a(147456,128,3,"conv128_1"),g=a(147456,128,3,"conv128_2"),b=a(589824,256,3,"conv256_down",!0),y=a(589824,256,3,"conv256_1"),v=a(589824,256,3,"conv256_2"),x=a(589824,256,3,"conv256_down_out"),w=M(()=>Re(Lr(t(256*128),[128,256]),[1,0]));if(r.push({paramPath:"fc"}),n().length!==0)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:o,conv32_1:i,conv32_2:c,conv32_3:l,conv64_down:u,conv64_1:d,conv64_2:p,conv64_3:h,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:b,conv256_1:y,conv256_2:v,conv256_down_out:x,fc:w},paramMappings:r}}function sue(e,t){let n=ar(e,t);function r(o){let i=n(`${o}/scale/weights`,1),c=n(`${o}/scale/biases`,1);return{weights:i,biases:c}}function s(o){let i=n(`${o}/conv/filters`,4),c=n(`${o}/conv/bias`,1),l=r(o);return{conv:{filters:i,bias:c},scale:l}}function a(o){return{conv1:s(`${o}/conv1`),conv2:s(`${o}/conv2`)}}return{extractConvLayerParams:s,extractResidualLayerParams:a}}function XE(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=sue(e,t),s=n("conv32_down"),a=r("conv32_1"),o=r("conv32_2"),i=r("conv32_3"),c=r("conv64_down"),l=r("conv64_1"),u=r("conv64_2"),d=r("conv64_3"),p=r("conv128_down"),h=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),b=r("conv256_2"),y=r("conv256_down_out"),{fc:v}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!f1(v))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${v}`);let x={conv32_down:s,conv32_1:a,conv32_2:o,conv32_3:i,conv64_down:c,conv64_1:l,conv64_2:u,conv64_3:d,conv128_down:p,conv128_1:h,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:b,conv256_down_out:y,fc:v};return _n(e,t),{params:x,paramMappings:t}}function Yr(e,t){let n=qE(e,t.conv1);return n=U1(n,t.conv2),n=Y(n,e),n=qe(n),n}function hp(e,t){let n=eg(e,t.conv1);n=U1(n,t.conv2);let r=lr(e,2,2,"valid"),s=St(r.shape),a=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){let i=[...n.shape];i[1]=1;let c=St(i);n=et([n,c],1);let l=[...n.shape];l[2]=1;let u=St(l);n=et([n,u],2)}return r=a?et([r,s],3):r,n=Y(r,n),n=qe(n),n}var Zu=class extends ln{constructor(){super("FaceRecognitionNet")}forwardInput(t){let{params:n}=this;if(!n)throw new Error("FaceRecognitionNet - load model before inference");return M(()=>{let r=ce(t.toBatchTensor(150,!0),"float32"),a=Xr(r,[122.782,117.001,104.298]).div(255),o=eg(a,n.conv32_down);o=Pt(o,3,2,"valid"),o=Yr(o,n.conv32_1),o=Yr(o,n.conv32_2),o=Yr(o,n.conv32_3),o=hp(o,n.conv64_down),o=Yr(o,n.conv64_1),o=Yr(o,n.conv64_2),o=Yr(o,n.conv64_3),o=hp(o,n.conv128_down),o=Yr(o,n.conv128_1),o=Yr(o,n.conv128_2),o=hp(o,n.conv256_down),o=Yr(o,n.conv256_1),o=Yr(o,n.conv256_2),o=hp(o,n.conv256_down_out);let i=o.mean([1,2]);return De(i,n.fc)})}async forward(t){return this.forwardInput(await bt(t))}async computeFaceDescriptor(t){var a;if((a=t==null?void 0:t.shape)==null?void 0:a.some(o=>o<=0))return new Float32Array(128);let n=await bt(t),r=M(()=>ht(this.forwardInput(n))),s=await Promise.all(r.map(o=>o.data()));return r.forEach(o=>o.dispose()),n.isBatchInput?s:s[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(t){return XE(t)}extractParams(t){return KE(t)}};function aue(e){let t=new Zu;return t.extractWeights(e),t}function tg(e,t){return{...e,...{descriptor:t}}}function oue(e){return typeof e.age=="number"}function ng(e,t){return{...e,...{age:t}}}function iue(e){return(e.gender===Ms.MALE||e.gender===Ms.FEMALE)&&zu(e.genderProbability)}function rg(e,t,n){return{...e,...{gender:t,genderProbability:n}}}function cue(e,t){function n(c,l){let u=Br(e(3*3*c),[3,3,c,1]),d=He(e(c)),p=He(e(c)),h=He(e(c)),f=He(e(c));return t.push({paramPath:`${l}/filters`},{paramPath:`${l}/batch_norm_scale`},{paramPath:`${l}/batch_norm_offset`},{paramPath:`${l}/batch_norm_mean`},{paramPath:`${l}/batch_norm_variance`}),{filters:u,batch_norm_scale:d,batch_norm_offset:p,batch_norm_mean:h,batch_norm_variance:f}}function r(c,l,u,d,p){let h=Br(e(c*l*u*u),[u,u,c,l]),f=He(e(l));return t.push({paramPath:`${d}/filters`},{paramPath:`${d}/${p?"batch_norm_offset":"bias"}`}),{filters:h,bias:f}}function s(c,l,u,d){let{filters:p,bias:h}=r(c,l,u,d,!0);return{filters:p,batch_norm_offset:h}}function a(c,l,u){let d=n(c,`${u}/depthwise_conv`),p=s(c,l,1,`${u}/pointwise_conv`);return{depthwise_conv:d,pointwise_conv:p}}function o(){let c=s(3,32,3,"mobilenetv1/conv_0"),l=a(32,64,"mobilenetv1/conv_1"),u=a(64,128,"mobilenetv1/conv_2"),d=a(128,128,"mobilenetv1/conv_3"),p=a(128,256,"mobilenetv1/conv_4"),h=a(256,256,"mobilenetv1/conv_5"),f=a(256,512,"mobilenetv1/conv_6"),m=a(512,512,"mobilenetv1/conv_7"),g=a(512,512,"mobilenetv1/conv_8"),b=a(512,512,"mobilenetv1/conv_9"),y=a(512,512,"mobilenetv1/conv_10"),v=a(512,512,"mobilenetv1/conv_11"),x=a(512,1024,"mobilenetv1/conv_12"),w=a(1024,1024,"mobilenetv1/conv_13");return{conv_0:c,conv_1:l,conv_2:u,conv_3:d,conv_4:p,conv_5:h,conv_6:f,conv_7:m,conv_8:g,conv_9:b,conv_10:y,conv_11:v,conv_12:x,conv_13:w}}function i(){let c=s(1024,256,1,"prediction_layer/conv_0"),l=s(256,512,3,"prediction_layer/conv_1"),u=s(512,128,1,"prediction_layer/conv_2"),d=s(128,256,3,"prediction_layer/conv_3"),p=s(256,128,1,"prediction_layer/conv_4"),h=s(128,256,3,"prediction_layer/conv_5"),f=s(256,64,1,"prediction_layer/conv_6"),m=s(64,128,3,"prediction_layer/conv_7"),g=r(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),b=r(512,9,1,"prediction_layer/box_predictor_0/class_predictor"),y=r(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),v=r(1024,18,1,"prediction_layer/box_predictor_1/class_predictor"),x=r(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),w=r(512,18,1,"prediction_layer/box_predictor_2/class_predictor"),T=r(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),C=r(256,18,1,"prediction_layer/box_predictor_3/class_predictor"),D=r(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),F=r(256,18,1,"prediction_layer/box_predictor_4/class_predictor"),O=r(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),$=r(128,18,1,"prediction_layer/box_predictor_5/class_predictor");return{conv_0:c,conv_1:l,conv_2:u,conv_3:d,conv_4:p,conv_5:h,conv_6:f,conv_7:m,box_predictor_0:{box_encoding_predictor:g,class_predictor:b},box_predictor_1:{box_encoding_predictor:y,class_predictor:v},box_predictor_2:{box_encoding_predictor:x,class_predictor:w},box_predictor_3:{box_encoding_predictor:T,class_predictor:C},box_predictor_4:{box_encoding_predictor:D,class_predictor:F},box_predictor_5:{box_encoding_predictor:O,class_predictor:$}}}return{extractMobilenetV1Params:o,extractPredictionLayerParams:i}}function YE(e){let t=[],{extractWeights:n,getRemainingWeights:r}=En(e),{extractMobilenetV1Params:s,extractPredictionLayerParams:a}=cue(n,t),o=s(),i=a(),l={extra_dim:zh(n(5118*4),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:o,prediction_layer:i,output_layer:l},paramMappings:t}}function uue(e,t){let n=ar(e,t);function r(l,u,d){let p=n(`${l}/Conv2d_${u}_pointwise/weights`,4,`${d}/filters`),h=n(`${l}/Conv2d_${u}_pointwise/convolution_bn_offset`,1,`${d}/batch_norm_offset`);return{filters:p,batch_norm_offset:h}}function s(l){let u=`mobilenetv1/conv_${l}`,d=`MobilenetV1/Conv2d_${l}_depthwise`,p=`${u}/depthwise_conv`,h=`${u}/pointwise_conv`,f=n(`${d}/depthwise_weights`,4,`${p}/filters`),m=n(`${d}/BatchNorm/gamma`,1,`${p}/batch_norm_scale`),g=n(`${d}/BatchNorm/beta`,1,`${p}/batch_norm_offset`),b=n(`${d}/BatchNorm/moving_mean`,1,`${p}/batch_norm_mean`),y=n(`${d}/BatchNorm/moving_variance`,1,`${p}/batch_norm_variance`);return{depthwise_conv:{filters:f,batch_norm_scale:m,batch_norm_offset:g,batch_norm_mean:b,batch_norm_variance:y},pointwise_conv:r("MobilenetV1",l,h)}}function a(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:s(1),conv_2:s(2),conv_3:s(3),conv_4:s(4),conv_5:s(5),conv_6:s(6),conv_7:s(7),conv_8:s(8),conv_9:s(9),conv_10:s(10),conv_11:s(11),conv_12:s(12),conv_13:s(13)}}function o(l,u){let d=n(`${l}/weights`,4,`${u}/filters`),p=n(`${l}/biases`,1,`${u}/bias`);return{filters:d,bias:p}}function i(l){let u=o(`Prediction/BoxPredictor_${l}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${l}/box_encoding_predictor`),d=o(`Prediction/BoxPredictor_${l}/ClassPredictor`,`prediction_layer/box_predictor_${l}/class_predictor`);return{box_encoding_predictor:u,class_predictor:d}}function c(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:i(0),box_predictor_1:i(1),box_predictor_2:i(2),box_predictor_3:i(3),box_predictor_4:i(4),box_predictor_5:i(5)}}return{extractMobilenetV1Params:a,extractPredictionLayerParams:c}}function ZE(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=uue(e,t),s=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!$s(s))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${s}`);let a={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:s}};return _n(e,t),{params:a,paramMappings:t}}function Fr(e,t,n){return M(()=>{let r=Rt(e,t.filters,n,"same");return r=Y(r,t.batch_norm_offset),Jt(r,0,6)})}var lue=.0010000000474974513;function due(e,t,n){return M(()=>{let r=ua(e,t.filters,n,"same");return r=Is(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,lue),Jt(r,0,6)})}function pue(e){return[2,4,6,12].some(t=>t===e)?[2,2]:[1,1]}function JE(e,t){return M(()=>{let n,r=Fr(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach((a,o)=>{let i=o+1,c=pue(i);r=due(r,a.depthwise_conv,c),r=Fr(r,a.pointwise_conv,[1,1]),i===11&&(n=r)}),n===null)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}})}function hue(e,t,n){let r=e.arraySync(),s=Math.min(r[t][0],r[t][2]),a=Math.min(r[t][1],r[t][3]),o=Math.max(r[t][0],r[t][2]),i=Math.max(r[t][1],r[t][3]),c=Math.min(r[n][0],r[n][2]),l=Math.min(r[n][1],r[n][3]),u=Math.max(r[n][0],r[n][2]),d=Math.max(r[n][1],r[n][3]),p=(o-s)*(i-a),h=(u-c)*(d-l);if(p<=0||h<=0)return 0;let f=Math.max(s,c),m=Math.max(a,l),g=Math.min(o,u),b=Math.min(i,d),y=Math.max(g-f,0)*Math.max(b-m,0);return y/(p+h-y)}function QE(e,t,n,r,s){let a=e.shape[0],o=Math.min(n,a),i=t.map((u,d)=>({score:u,boxIndex:d})).filter(u=>u.score>s).sort((u,d)=>d.score-u.score),c=u=>u<=r?1:0,l=[];return i.forEach(u=>{if(l.length>=o)return;let d=u.score;for(let p=l.length-1;p>=0;--p){let h=hue(e,u.boxIndex,l[p]);if(h!==0&&(u.score*=c(h),u.score<=s))break}d===u.score&&l.push(u.boxIndex)}),l}function fue(e){let t=ht(Re(e,[1,0])),n=[fe(t[2],t[0]),fe(t[3],t[1])],r=[Y(t[0],me(n[0],2)),Y(t[1],me(n[1],2))];return{sizes:n,centers:r}}function mue(e,t){let{sizes:n,centers:r}=fue(e),s=ht(Re(t,[1,0])),a=me(V(fn(me(s[2],5)),n[0]),2),o=Y(V(me(s[0],10),n[0]),r[0]),i=me(V(fn(me(s[3],5)),n[1]),2),c=Y(V(me(s[1],10),n[1]),r[1]);return Re(Ot([fe(o,a),fe(c,i),Y(o,a),Y(c,i)]),[1,0])}function eA(e,t,n){return M(()=>{let r=e.shape[0],s=mue(U(Pn(n.extra_dim,[r,1,1]),[-1,4]),U(e,[-1,4]));s=U(s,[r,s.shape[0]/r,4]);let a=dr(ze(t,[0,0,1],[-1,-1,-1])),o=ze(a,[0,0,0],[-1,-1,1]);o=U(o,[r,o.shape[1]]);let i=ht(s),c=ht(o);return{boxes:i,scores:c}})}function Ai(e,t){return M(()=>{let n=e.shape[0],r=U(_i(e,t.box_encoding_predictor),[n,-1,1,4]),s=U(_i(e,t.class_predictor),[n,-1,3]);return{boxPredictionEncoding:r,classPrediction:s}})}function tA(e,t,n){return M(()=>{let r=Fr(e,n.conv_0,[1,1]),s=Fr(r,n.conv_1,[2,2]),a=Fr(s,n.conv_2,[1,1]),o=Fr(a,n.conv_3,[2,2]),i=Fr(o,n.conv_4,[1,1]),c=Fr(i,n.conv_5,[2,2]),l=Fr(c,n.conv_6,[1,1]),u=Fr(l,n.conv_7,[2,2]),d=Ai(t,n.box_predictor_0),p=Ai(e,n.box_predictor_1),h=Ai(s,n.box_predictor_2),f=Ai(o,n.box_predictor_3),m=Ai(c,n.box_predictor_4),g=Ai(u,n.box_predictor_5),b=et([d.boxPredictionEncoding,p.boxPredictionEncoding,h.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),y=et([d.classPrediction,p.classPrediction,h.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1);return{boxPredictions:b,classPredictions:y}})}var $r=class{constructor({minConfidence:t,maxResults:n}={}){this._name="SsdMobilenetv1Options";if(this._minConfidence=t||.5,this._maxResults=n||100,typeof this._minConfidence!="number"||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if(typeof this._maxResults!="number")throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}};var Di=class extends ln{constructor(){super("SsdMobilenetv1")}forwardInput(t){let{params:n}=this;if(!n)throw new Error("SsdMobilenetv1 - load model before inference");return M(()=>{let r=ce(t.toBatchTensor(512,!1),"float32"),s=fe(me(r,127.5),1),a=JE(s,n.mobilenetv1),{boxPredictions:o,classPredictions:i}=tA(a.out,a.conv11,n.prediction_layer);return eA(o,i,n.output_layer)})}async forward(t){return this.forwardInput(await bt(t))}async locateFaces(t,n={}){let{maxResults:r,minConfidence:s}=new $r(n),a=await bt(t),{boxes:o,scores:i}=this.forwardInput(a),c=o[0],l=i[0];for(let v=1;v<o.length;v++)o[v].dispose(),i[v].dispose();let u=Array.from(l.dataSync()),p=QE(c,u,r,.5,s),h=a.getReshapedInputDimensions(0),f=a.inputSize,m=f/h.width,g=f/h.height,b=c.arraySync(),y=p.map(v=>{let[x,w]=[Math.max(0,b[v][0]),Math.min(1,b[v][2])].map(D=>D*g),[T,C]=[Math.max(0,b[v][1]),Math.min(1,b[v][3])].map(D=>D*m);return new xt(u[v],new Vu(T,x,C-T,w-x),{height:a.getInputHeight(0),width:a.getInputWidth(0)})});return c.dispose(),l.dispose(),y}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(t){return ZE(t)}extractParams(t){return YE(t)}};function nA(e){let t=new Di;return t.extractWeights(e),t}function gue(e){return nA(e)}var rA=class extends Di{};var sA=.4,aA=[new Pe(.738768,.874946),new Pe(2.42204,2.65704),new Pe(4.30971,7.04493),new Pe(10.246,4.59428),new Pe(12.6868,11.8741)],oA=[new Pe(1.603231,2.094468),new Pe(6.041143,7.080126),new Pe(2.882459,3.518061),new Pe(4.266906,5.178857),new Pe(9.041765,10.66308)],iA=[117.001,114.697,97.404],cA="tiny_yolov2_model",uA="tiny_yolov2_separable_conv_model";var sg=e=>typeof e=="number";function G1(e){if(!e)throw new Error(`invalid config: ${e}`);if(typeof e.withSeparableConvs!="boolean")throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!sg(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every(t=>typeof t=="string"))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map(t=>t||{}).every(t=>sg(t.x)&&sg(t.y)))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||e.meanRgb.length!==3||!e.meanRgb.every(sg)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}function Ju(e){return M(()=>{let t=V(e,Ie(.10000000149011612));return Y(qe(fe(e,t)),t)})}function Ls(e,t){return M(()=>{let n=pr(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Rt(n,t.conv.filters,[1,1],"valid"),n=fe(n,t.bn.sub),n=V(n,t.bn.truediv),n=Y(n,t.conv.bias),Ju(n)})}function Bs(e,t){return M(()=>{let n=pr(e,[[0,0],[1,1],[1,1],[0,0]]);return n=ei(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=Y(n,t.bias),Ju(n)})}function bue(e,t){let n=ju(e,t);function r(o,i){let c=He(e(o)),l=He(e(o));return t.push({paramPath:`${i}/sub`},{paramPath:`${i}/truediv`}),{sub:c,truediv:l}}function s(o,i,c){let l=n(o,i,3,`${c}/conv`),u=r(i,`${c}/bn`);return{conv:l,bn:u}}let a=qu(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:s,extractSeparableConvParams:a}}function lA(e,t,n,r){let{extractWeights:s,getRemainingWeights:a}=En(e),o=[],{extractConvParams:i,extractConvWithBatchNormParams:c,extractSeparableConvParams:l}=bue(s,o),u;if(t.withSeparableConvs){let[d,p,h,f,m,g,b,y,v]=r,x=t.isFirstLayerConv2d?i(d,p,3,"conv0"):l(d,p,"conv0"),w=l(p,h,"conv1"),T=l(h,f,"conv2"),C=l(f,m,"conv3"),D=l(m,g,"conv4"),F=l(g,b,"conv5"),O=y?l(b,y,"conv6"):void 0,$=v?l(y,v,"conv7"):void 0,R=i(v||y||b,5*n,1,"conv8");u={conv0:x,conv1:w,conv2:T,conv3:C,conv4:D,conv5:F,conv6:O,conv7:$,conv8:R}}else{let[d,p,h,f,m,g,b,y,v]=r,x=c(d,p,"conv0"),w=c(p,h,"conv1"),T=c(h,f,"conv2"),C=c(f,m,"conv3"),D=c(m,g,"conv4"),F=c(g,b,"conv5"),O=c(b,y,"conv6"),$=c(y,v,"conv7"),R=i(v,5*n,1,"conv8");u={conv0:x,conv1:w,conv2:T,conv3:C,conv4:D,conv5:F,conv6:O,conv7:$,conv8:R}}if(a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{params:u,paramMappings:o}}function yue(e,t){let n=ar(e,t);function r(i){let c=n(`${i}/sub`,1),l=n(`${i}/truediv`,1);return{sub:c,truediv:l}}function s(i){let c=n(`${i}/filters`,4),l=n(`${i}/bias`,1);return{filters:c,bias:l}}function a(i){let c=s(`${i}/conv`),l=r(`${i}/bn`);return{conv:c,bn:l}}let o=Ku(n);return{extractConvParams:s,extractConvWithBatchNormParams:a,extractSeparableConvParams:o}}function dA(e,t){let n=[],{extractConvParams:r,extractConvWithBatchNormParams:s,extractSeparableConvParams:a}=yue(e,n),o;if(t.withSeparableConvs){let i=t.filterSizes&&t.filterSizes.length||9;o={conv0:t.isFirstLayerConv2d?r("conv0"):a("conv0"),conv1:a("conv1"),conv2:a("conv2"),conv3:a("conv3"),conv4:a("conv4"),conv5:a("conv5"),conv6:i>7?a("conv6"):void 0,conv7:i>8?a("conv7"):void 0,conv8:r("conv8")}}else o={conv0:s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:s("conv6"),conv7:s("conv7"),conv8:r("conv8")};return _n(e,n),{params:o,paramMappings:n}}var ms=class{constructor({inputSize:t,scoreThreshold:n}={}){this._name="TinyYolov2Options";if(this._inputSize=t||416,this._scoreThreshold=n||.5,typeof this._inputSize!="number"||this._inputSize%32!=0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if(typeof this._scoreThreshold!="number"||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}};var H1=class extends ln{constructor(t){super("TinyYolov2");G1(t),this._config=t}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(t,n){let r=Ls(t,n.conv0);return r=Pt(r,[2,2],[2,2],"same"),r=Ls(r,n.conv1),r=Pt(r,[2,2],[2,2],"same"),r=Ls(r,n.conv2),r=Pt(r,[2,2],[2,2],"same"),r=Ls(r,n.conv3),r=Pt(r,[2,2],[2,2],"same"),r=Ls(r,n.conv4),r=Pt(r,[2,2],[2,2],"same"),r=Ls(r,n.conv5),r=Pt(r,[2,2],[1,1],"same"),r=Ls(r,n.conv6),r=Ls(r,n.conv7),_i(r,n.conv8,"valid",!1)}runMobilenet(t,n){let r=this.config.isFirstLayerConv2d?Ju(_i(t,n.conv0,"valid",!1)):Bs(t,n.conv0);return r=Pt(r,[2,2],[2,2],"same"),r=Bs(r,n.conv1),r=Pt(r,[2,2],[2,2],"same"),r=Bs(r,n.conv2),r=Pt(r,[2,2],[2,2],"same"),r=Bs(r,n.conv3),r=Pt(r,[2,2],[2,2],"same"),r=Bs(r,n.conv4),r=Pt(r,[2,2],[2,2],"same"),r=Bs(r,n.conv5),r=Pt(r,[2,2],[1,1],"same"),r=n.conv6?Bs(r,n.conv6):r,r=n.conv7?Bs(r,n.conv7):r,_i(r,n.conv8,"valid",!1)}forwardInput(t,n){let{params:r}=this;if(!r)throw new Error("TinyYolov2 - load model before inference");return M(()=>{let s=ce(t.toBatchTensor(n,!1),"float32");return s=this.config.meanRgb?Xr(s,this.config.meanRgb):s,s=s.div(255),this.config.withSeparableConvs?this.runMobilenet(s,r):this.runTinyYolov2(s,r)})}async forward(t,n){return this.forwardInput(await bt(t),n)}async detect(t,n={}){let{inputSize:r,scoreThreshold:s}=new ms(n),a=await bt(t),o=await this.forwardInput(a,r),i=M(()=>ht(o)[0].expandDims()),c={width:a.getInputWidth(0),height:a.getInputHeight(0)},l=await this.extractBoxes(i,a.getReshapedInputDimensions(0),s);o.dispose(),i.dispose();let u=l.map(g=>g.box),d=l.map(g=>g.score),p=l.map(g=>g.classScore),h=l.map(g=>this.config.classes[g.label]);return x1(u.map(g=>g.rescale(r)),d,this.config.iouThreshold,!0).map(g=>new Na(d[g],p[g],h[g],u[g],c))}getDefaultModelName(){return""}extractParamsFromWeightMap(t){return dA(t,this.config)}extractParams(t){let n=this.config.filterSizes||H1.DEFAULT_FILTER_SIZES,r=n?n.length:void 0;if(r!==7&&r!==8&&r!==9)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${r} filterSizes in config`);return lA(t,this.config,this.boxEncodingSize,n)}async extractBoxes(t,n,r){let{width:s,height:a}=n,o=Math.max(s,a),i=o/s,c=o/a,l=t.shape[1],u=this.config.anchors.length,[d,p,h]=M(()=>{let b=t.reshape([l,l,u,this.boxEncodingSize]),y=b.slice([0,0,0,0],[l,l,u,4]),v=b.slice([0,0,0,4],[l,l,u,1]),x=this.withClassScores?Mr(b.slice([0,0,0,5],[l,l,u,this.config.classes.length]),3):Ie(0);return[y,v,x]}),f=[],m=await p.array(),g=await d.array();for(let b=0;b<l;b++)for(let y=0;y<l;y++)for(let v=0;v<u;v++){let x=tp(m[b][y][v][0]);if(!r||x>r){let w=(y+tp(g[b][y][v][0]))/l*i,T=(b+tp(g[b][y][v][1]))/l*c,C=Math.exp(g[b][y][v][2])*this.config.anchors[v].x/l*i,D=Math.exp(g[b][y][v][3])*this.config.anchors[v].y/l*c,F=w-C/2,O=T-D/2,$={row:b,col:y,anchor:v},{classScore:R,label:N}=this.withClassScores?await this.extractPredictedClass(h,$):{classScore:1,label:0};f.push({box:new Wu(F,O,F+C,O+D),score:x,classScore:x*R,label:N,...$})}}return d.dispose(),p.dispose(),h.dispose(),f}async extractPredictedClass(t,n){let{row:r,col:s,anchor:a}=n,o=await t.array();return Array(this.config.classes.length).fill(0).map((i,c)=>o[r][s][a][c]).map((i,c)=>({classScore:i,label:c})).reduce((i,c)=>i.classScore>c.classScore?i:c)}},Qu=H1;Qu.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var el=class extends Qu{constructor(t=!0){let n={withSeparableConvs:t,iouThreshold:sA,classes:["face"],...t?{anchors:oA,meanRgb:iA}:{anchors:aA,withClassScores:!0}};super(n)}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(t,n){return(await this.detect(t,n)).map(s=>new xt(s.score,s.relativeBox,{width:s.imageWidth,height:s.imageHeight}))}getDefaultModelName(){return this.withSeparableConvs?uA:cA}extractParamsFromWeightMap(t){return super.extractParamsFromWeightMap(t)}};function vue(e,t=!0){let n=new el(t);return n.extractWeights(e),n}var ag=class extends ms{constructor(){super(...arguments);this._name="TinyFaceDetectorOptions"}};var Rr=class{async then(t){return t(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function Fi(e,t,n,r,s=({alignedRect:a})=>a){let a=e.map(c=>Ei(c)?s(c):c.detection),o=r||(t instanceof Ee?await Hu(t,a):await Gu(t,a)),i=await n(o);return o.forEach(c=>c instanceof Ee&&c.dispose()),i}async function tl(e,t,n,r,s){return Fi([e],t,async a=>n(a[0]),r,s)}var pA=.4,hA=[new Pe(1.603231,2.094468),new Pe(6.041143,7.080126),new Pe(2.882459,3.518061),new Pe(4.266906,5.178857),new Pe(9.041765,10.66308)],fA=[117.001,114.697,97.404];var nl=class extends Qu{constructor(){let t={withSeparableConvs:!0,iouThreshold:pA,classes:["face"],anchors:hA,meanRgb:fA,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]};super(t)}get anchors(){return this.config.anchors}async locateFaces(t,n){return(await this.detect(t,n)).map(s=>new xt(s.score,s.relativeBox,{width:s.imageWidth,height:s.imageHeight}))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(t){return super.extractParamsFromWeightMap(t)}};var nt={ssdMobilenetv1:new Di,tinyFaceDetector:new nl,tinyYolov2:new el,faceLandmark68Net:new Yu,faceLandmark68TinyNet:new Qm,faceRecognitionNet:new Zu,faceExpressionNet:new Ym,ageGenderNet:new Jm},mA=(e,t)=>nt.ssdMobilenetv1.locateFaces(e,t),xue=(e,t)=>nt.tinyFaceDetector.locateFaces(e,t),wue=(e,t)=>nt.tinyYolov2.locateFaces(e,t),gA=e=>nt.faceLandmark68Net.detectLandmarks(e),kue=e=>nt.faceLandmark68TinyNet.detectLandmarks(e),Iue=e=>nt.faceRecognitionNet.computeFaceDescriptor(e),Sue=e=>nt.faceExpressionNet.predictExpressions(e),Tue=e=>nt.ageGenderNet.predictAgeAndGender(e),bA=e=>nt.ssdMobilenetv1.load(e),Cue=e=>nt.tinyFaceDetector.load(e),Nue=e=>nt.tinyYolov2.load(e),_ue=e=>nt.faceLandmark68Net.load(e),Eue=e=>nt.faceLandmark68TinyNet.load(e),Aue=e=>nt.faceRecognitionNet.load(e),Due=e=>nt.faceExpressionNet.load(e),Fue=e=>nt.ageGenderNet.load(e),$ue=bA,Rue=mA,Pue=gA;var j1=class extends Rr{constructor(t,n,r){super();this.parentTask=t;this.input=n;this.extractedFaces=r}},rl=class extends j1{async run(){let t=await this.parentTask,n=await Fi(t,this.input,async r=>Promise.all(r.map(s=>nt.faceExpressionNet.predictExpressions(s))),this.extractedFaces);return t.map((r,s)=>Zm(r,n[s]))}withAgeAndGender(){return new al(this,this.input)}},sl=class extends j1{async run(){let t=await this.parentTask;if(!t)return;let n=await tl(t,this.input,r=>nt.faceExpressionNet.predictExpressions(r),this.extractedFaces);return Zm(t,n)}withAgeAndGender(){return new ol(this,this.input)}},$i=class extends rl{withAgeAndGender(){return new Pi(this,this.input)}withFaceDescriptors(){return new Aa(this,this.input)}},Ri=class extends sl{withAgeAndGender(){return new Oi(this,this.input)}withFaceDescriptor(){return new Da(this,this.input)}};var q1=class extends Rr{constructor(t,n,r){super();this.parentTask=t;this.input=n;this.extractedFaces=r}},al=class extends q1{async run(){let t=await this.parentTask,n=await Fi(t,this.input,async r=>Promise.all(r.map(s=>nt.ageGenderNet.predictAgeAndGender(s))),this.extractedFaces);return t.map((r,s)=>{let{age:a,gender:o,genderProbability:i}=n[s];return ng(rg(r,o,i),a)})}withFaceExpressions(){return new rl(this,this.input)}},ol=class extends q1{async run(){let t=await this.parentTask;if(!t)return;let{age:n,gender:r,genderProbability:s}=await tl(t,this.input,a=>nt.ageGenderNet.predictAgeAndGender(a),this.extractedFaces);return ng(rg(t,r,s),n)}withFaceExpressions(){return new sl(this,this.input)}},Pi=class extends al{withFaceExpressions(){return new $i(this,this.input)}withFaceDescriptors(){return new Aa(this,this.input)}},Oi=class extends ol{withFaceExpressions(){return new Ri(this,this.input)}withFaceDescriptor(){return new Da(this,this.input)}};var og=class extends Rr{constructor(t,n){super();this.parentTask=t;this.input=n}},Aa=class extends og{async run(){let t=await this.parentTask;return(await Fi(t,this.input,r=>Promise.all(r.map(s=>nt.faceRecognitionNet.computeFaceDescriptor(s))),null,r=>r.landmarks.align(null,{useDlibAlignment:!0}))).map((r,s)=>tg(t[s],r))}withFaceExpressions(){return new $i(this,this.input)}withAgeAndGender(){return new Pi(this,this.input)}},Da=class extends og{async run(){let t=await this.parentTask;if(!t)return;let n=await tl(t,this.input,r=>nt.faceRecognitionNet.computeFaceDescriptor(r),null,r=>r.landmarks.align(null,{useDlibAlignment:!0}));return tg(t,n)}withFaceExpressions(){return new Ri(this,this.input)}withAgeAndGender(){return new Oi(this,this.input)}};var ig=class extends Rr{constructor(t,n,r){super();this.parentTask=t;this.input=n;this.useTinyLandmarkNet=r}get landmarkNet(){return this.useTinyLandmarkNet?nt.faceLandmark68TinyNet:nt.faceLandmark68Net}},cg=class extends ig{async run(){let t=await this.parentTask,n=t.map(a=>a.detection),r=this.input instanceof Ee?await Hu(this.input,n):await Gu(this.input,n),s=await Promise.all(r.map(a=>this.landmarkNet.detectLandmarks(a)));return r.forEach(a=>a instanceof Ee&&a.dispose()),t.map((a,o)=>Xu(a,s[o]))}withFaceExpressions(){return new $i(this,this.input)}withAgeAndGender(){return new Pi(this,this.input)}withFaceDescriptors(){return new Aa(this,this.input)}},ug=class extends ig{async run(){let t=await this.parentTask;if(!t)return;let{detection:n}=t,r=this.input instanceof Ee?await Hu(this.input,[n]):await Gu(this.input,[n]),s=await this.landmarkNet.detectLandmarks(r[0]);return r.forEach(a=>a instanceof Ee&&a.dispose()),Xu(t,s)}withFaceExpressions(){return new Ri(this,this.input)}withAgeAndGender(){return new Oi(this,this.input)}withFaceDescriptor(){return new Da(this,this.input)}};var lg=class extends Rr{constructor(t,n=new $r){super();this.input=t;this.options=n}},fp=class extends lg{async run(){let{input:t,options:n}=this,r;if(n instanceof ag)r=nt.tinyFaceDetector.locateFaces(t,n);else if(n instanceof $r)r=nt.ssdMobilenetv1.locateFaces(t,n);else if(n instanceof ms)r=nt.tinyYolov2.locateFaces(t,n);else throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");return r}runAndExtendWithFaceDetections(){return new Promise((t,n)=>{this.run().then(r=>t(r.map(s=>Si({},s)))).catch(r=>n(r))})}withFaceLandmarks(t=!1){return new cg(this.runAndExtendWithFaceDetections(),this.input,t)}withFaceExpressions(){return new rl(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new al(this.runAndExtendWithFaceDetections(),this.input)}},dg=class extends lg{async run(){let t=await new fp(this.input,this.options),n=t[0];return t.forEach(r=>{r.score>n.score&&(n=r)}),n}runAndExtendWithFaceDetection(){return new Promise(async t=>{let n=await this.run();t(n?Si({},n):void 0)})}withFaceLandmarks(t=!1){return new ug(this.runAndExtendWithFaceDetection(),this.input,t)}withFaceExpressions(){return new sl(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new ol(this.runAndExtendWithFaceDetection(),this.input)}};function Oue(e,t=new $r){return new dg(e,t)}function pg(e,t=new $r){return new fp(e,t)}async function yA(e,t){return pg(e,new $r(t?{minConfidence:t}:{})).withFaceLandmarks().withFaceDescriptors()}async function Mue(e,t={}){return pg(e,new ms(t)).withFaceLandmarks().withFaceDescriptors()}var Lue=yA;function K1(e,t){if(e.length!==t.length)throw new Error("euclideanDistance: arr1.length !== arr2.length");let n=Array.from(e),r=Array.from(t);return Math.sqrt(n.map((s,a)=>s-r[a]).reduce((s,a)=>s+a**2,0))}var hg=class{constructor(t,n=.6){this._distanceThreshold=n;let r=Array.isArray(t)?t:[t];if(!r.length)throw new Error("FaceRecognizer.constructor - expected atleast one input");let s=1,a=()=>`person ${s++}`;this._labeledDescriptors=r.map(o=>{if(o instanceof Rs)return o;if(o instanceof Float32Array)return new Rs(a(),[o]);if(o.descriptor&&o.descriptor instanceof Float32Array)return new Rs(a(),[o.descriptor]);throw new Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>")})}get labeledDescriptors(){return this._labeledDescriptors}get distanceThreshold(){return this._distanceThreshold}computeMeanDistance(t,n){return n.map(r=>K1(r,t)).reduce((r,s)=>r+s,0)/(n.length||1)}matchDescriptor(t){return this.labeledDescriptors.map(({descriptors:n,label:r})=>new np(r,this.computeMeanDistance(t,n))).reduce((n,r)=>n.distance<r.distance?n:r)}findBestMatch(t){let n=this.matchDescriptor(t);return n.distance<this._distanceThreshold?n:new np("unknown",n.distance)}toJSON(){return{distanceThreshold:this._distanceThreshold,labeledDescriptors:this._labeledDescriptors.map(t=>t.toJSON())}}static fromJSON(t){let n=t.labeledDescriptors.map(r=>Rs.fromJSON(r));return new hg(n,t.distanceThreshold)}};function Bue(e){let t=new nl;return t.extractWeights(e),t}function vA(e,t){let{width:n,height:r}=new Nn(t.width,t.height);if(n<=0||r<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:r})}`);if(Array.isArray(e))return e.map(s=>vA(s,{width:n,height:r}));if(Ei(e)){let s=e.detection.forSize(n,r),a=e.unshiftedLandmarks.forSize(s.box.width,s.box.height);return Xu(Si(e,s),a)}return hs(e)?Si(e,e.detection.forSize(n,r)):e instanceof yr||e instanceof xt?e.forSize(n,r):e}var zue=ME;return Wue;})();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
