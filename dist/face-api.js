
  /*
  Face-API
  homepage: <https://github.com/vladmandic/face-api>
  author: <https://github.com/vladmandic>'
  */

var faceapi=(()=>{var C_=Object.defineProperty;var nd=(e,t)=>{for(var n in t)C_(e,n,{get:t[n],enumerable:!0})};var nse={};nd(nse,{AgeGenderNet:()=>rf,BoundingBox:()=>gu,Box:()=>lt,ComposableTask:()=>wa,ComputeAllFaceDescriptorsTask:()=>ys,ComputeFaceDescriptorsTaskBase:()=>hf,ComputeSingleFaceDescriptorTask:()=>bs,DetectAllFaceLandmarksTask:()=>ff,DetectAllFacesTask:()=>$p,DetectFaceLandmarksTaskBase:()=>mf,DetectFacesTaskBase:()=>yf,DetectSingleFaceLandmarksTask:()=>gf,DetectSingleFaceTask:()=>bf,Dimensions:()=>bn,FACE_EXPRESSION_LABELS:()=>dw,FaceDetection:()=>gt,FaceDetectionNet:()=>bC,FaceExpressionNet:()=>nf,FaceExpressions:()=>gs,FaceLandmark68Net:()=>Nu,FaceLandmark68TinyNet:()=>sf,FaceLandmarkNet:()=>iC,FaceLandmarks:()=>ra,FaceLandmarks5:()=>HS,FaceLandmarks68:()=>bu,FaceMatch:()=>wp,FaceMatcher:()=>vf,FaceRecognitionNet:()=>Su,Gender:()=>Er,LabeledBox:()=>kp,LabeledFaceDescriptors:()=>Cr,NetInput:()=>_r,NeuralNetwork:()=>ln,ObjectDetection:()=>ms,Point:()=>De,PredictedBox:()=>jS,Rect:()=>yu,SsdMobilenetv1:()=>ro,SsdMobilenetv1Options:()=>va,TinyFaceDetector:()=>Au,TinyFaceDetectorOptions:()=>df,TinyYolov2:()=>Eu,TinyYolov2Options:()=>or,allFaces:()=>ese,allFacesSsdMobilenetv1:()=>DC,allFacesTinyYolov2:()=>Zre,awaitMediaLoaded:()=>iw,bufferToImage:()=>ow,computeFaceDescriptor:()=>zre,createCanvas:()=>Zi,createCanvasFromMedia:()=>Np,createFaceDetectionNet:()=>$re,createFaceRecognitionNet:()=>wre,createSsdMobilenetv1:()=>yC,createTinyFaceDetector:()=>tse,createTinyYolov2:()=>Mre,detectAllFaces:()=>xf,detectFaceLandmarks:()=>AC,detectFaceLandmarksTiny:()=>Lre,detectLandmarks:()=>Jre,detectSingleFace:()=>Qre,draw:()=>JS,env:()=>rt,euclideanDistance:()=>Nw,extendWithAge:()=>uf,extendWithFaceDescriptor:()=>lf,extendWithFaceDetection:()=>Yi,extendWithFaceExpressions:()=>af,extendWithFaceLandmarks:()=>Tu,extendWithGender:()=>cf,extractFaceTensors:()=>vu,extractFaces:()=>xu,fetchImage:()=>cre,fetchJson:()=>cw,fetchNetWeights:()=>pre,fetchOrThrow:()=>eo,getContext2dOrThrow:()=>Dn,getMediaDimensions:()=>Qi,imageTensorToCanvas:()=>lw,imageToSquare:()=>uw,inverseSigmoid:()=>are,iou:()=>Xv,isMediaElement:()=>qm,isMediaLoaded:()=>Tp,isWithAge:()=>kre,isWithFaceDetection:()=>sr,isWithFaceExpressions:()=>hw,isWithFaceLandmarks:()=>no,isWithGender:()=>Ire,loadAgeGenderModel:()=>Kre,loadFaceDetectionModel:()=>Xre,loadFaceExpressionModel:()=>qre,loadFaceLandmarkModel:()=>Gre,loadFaceLandmarkTinyModel:()=>Hre,loadFaceRecognitionModel:()=>jre,loadSsdMobilenetv1Model:()=>$C,loadTinyFaceDetectorModel:()=>Vre,loadTinyYolov2Model:()=>Ure,loadWeightMap:()=>pw,locateFaces:()=>Yre,matchDimensions:()=>dre,minBbox:()=>Yv,nets:()=>Ze,nonMaxSuppression:()=>Jv,normalize:()=>La,padToSquare:()=>Qv,predictAgeAndGender:()=>Bre,recognizeFaceExpressions:()=>Wre,resizeResults:()=>RC,resolveInput:()=>Ji,shuffleArray:()=>nre,sigmoid:()=>vp,ssdMobilenetv1:()=>FC,tf:()=>Lw,tinyFaceDetector:()=>Pre,tinyYolov2:()=>Ore,toNetInput:()=>ht,utils:()=>GS,validateConfig:()=>ww,version:()=>sse});var Lw={};nd(Lw,{Abs:()=>So,Acos:()=>Co,Acosh:()=>_o,AdadeltaOptimizer:()=>Eh,AdagradOptimizer:()=>Fh,AdamOptimizer:()=>Ah,AdamaxOptimizer:()=>$h,Add:()=>Br,AddN:()=>Ts,All:()=>ld,Any:()=>ud,ArgMax:()=>Ns,ArgMin:()=>Xu,Asin:()=>Eo,Asinh:()=>Fo,Atan:()=>Ao,Atan2:()=>Do,Atanh:()=>$o,AvgPool:()=>Ss,AvgPool3D:()=>Yu,AvgPool3DGrad:()=>pd,AvgPoolGrad:()=>cd,BackendWasm:()=>VS,BatchMatMul:()=>Cs,BatchToSpaceND:()=>Ju,Bincount:()=>dd,BroadcastTo:()=>t0,Callback:()=>PI,CallbackList:()=>R1,Cast:()=>_s,Ceil:()=>Es,ClipByValue:()=>Vr,Complex:()=>hd,ComplexAbs:()=>Qu,Concat:()=>Ro,Conv2D:()=>Fs,Conv2DBackpropFilter:()=>md,Conv2DBackpropInput:()=>As,Conv3D:()=>Zu,Conv3DBackpropFilterV2:()=>fd,Conv3DBackpropInputV2:()=>gd,Cos:()=>$s,Cosh:()=>Mo,CropAndResize:()=>Po,Cumsum:()=>Ds,CustomCallback:()=>P1,DataStorage:()=>rd,DenseBincount:()=>yd,DepthToSpace:()=>Oo,DepthwiseConv2dNative:()=>Rs,DepthwiseConv2dNativeBackpropFilter:()=>bd,DepthwiseConv2dNativeBackpropInput:()=>xd,Diag:()=>vd,Dilation2D:()=>ec,Dilation2DBackpropFilter:()=>kd,Dilation2DBackpropInput:()=>wd,ENV:()=>Wg,EarlyStopping:()=>LI,Elu:()=>Lo,EluGrad:()=>Id,Environment:()=>Zw,Equal:()=>Wo,Erf:()=>zo,Exp:()=>Ps,ExpandDims:()=>Bo,Expm1:()=>Vo,FFT:()=>Td,Fill:()=>tc,FlipLeftRight:()=>Uo,Floor:()=>Os,FloorDiv:()=>Ls,FromPixels:()=>zd,FusedBatchNorm:()=>zs,FusedConv2D:()=>yi,FusedDepthwiseConv2D:()=>bi,GatherNd:()=>Ho,GatherV2:()=>Go,GraphModel:()=>mT,Greater:()=>jo,GreaterEqual:()=>Ws,History:()=>M1,IFFT:()=>Nd,Identity:()=>Bs,Imag:()=>Sd,InputSpec:()=>Yt,IsFinite:()=>qo,IsInf:()=>Ko,IsNan:()=>Xo,KernelBackend:()=>ju,LRN:()=>rc,LRNGrad:()=>_d,LayerVariable:()=>E1,LayersModel:()=>wr,LeakyRelu:()=>Vs,Less:()=>Yo,LessEqual:()=>Jo,LinSpace:()=>Cd,Log:()=>Us,Log1p:()=>Qo,LogSoftmax:()=>n0,LogicalAnd:()=>Zo,LogicalNot:()=>nc,LogicalOr:()=>ac,Max:()=>Gs,MaxPool:()=>js,MaxPool3D:()=>sc,MaxPool3DGrad:()=>Fd,MaxPoolGrad:()=>Ed,MaxPoolWithArgmax:()=>Ad,Maximum:()=>Hs,Mean:()=>qs,Min:()=>Ks,Minimum:()=>Xs,MirrorPad:()=>ic,Mod:()=>el,MomentumOptimizer:()=>Dh,Multinomial:()=>$d,Multiply:()=>Ys,Neg:()=>tl,NonMaxSuppressionV3:()=>al,NonMaxSuppressionV4:()=>rl,NonMaxSuppressionV5:()=>sl,NotEqual:()=>nl,OP_SCOPE_SUFFIX:()=>h0,OneHot:()=>Js,OnesLike:()=>il,Optimizer:()=>br,Pack:()=>ol,PadV2:()=>Qs,Pool:()=>IE,Pow:()=>Zs,Prelu:()=>ei,Prod:()=>ll,RMSPropOptimizer:()=>Rh,RNN:()=>er,Range:()=>oc,Rank:()=>qg,Real:()=>Dd,RealDiv:()=>Ms,Reciprocal:()=>ul,Reduction:()=>mn,Relu:()=>ti,Relu6:()=>ai,Reshape:()=>cl,ResizeBilinear:()=>ni,ResizeBilinearGrad:()=>Md,ResizeNearestNeighbor:()=>lc,ResizeNearestNeighborGrad:()=>Rd,Reverse:()=>ri,RotateWithOffset:()=>Tl,Round:()=>si,Rsqrt:()=>ii,SGDOptimizer:()=>Oc,ScatterNd:()=>pl,Select:()=>dl,Selu:()=>hl,Sequential:()=>Xl,Sigmoid:()=>li,Sign:()=>gl,Sin:()=>oi,Sinh:()=>fl,Slice:()=>ml,Softmax:()=>pi,Softplus:()=>yl,SpaceToBatchND:()=>uc,SparseToDense:()=>Pd,SplitV:()=>bl,Sqrt:()=>ui,Square:()=>cc,SquaredDifference:()=>di,Step:()=>Gr,StridedSlice:()=>xl,Sub:()=>hi,Sum:()=>ci,SymbolicTensor:()=>Aa,Tan:()=>vl,Tanh:()=>mi,Tensor:()=>Ee,TensorBuffer:()=>Lt,Tile:()=>Ur,TopK:()=>wl,Transform:()=>Od,Transpose:()=>fi,Unique:()=>Ld,Unpack:()=>kl,UnsortedSegmentSum:()=>pc,Variable:()=>Hr,ZerosLike:()=>Il,_FusedMatMul:()=>gi,abs:()=>zt,acos:()=>by,acosh:()=>xy,add:()=>J,addN:()=>Y0,all:()=>Zd,any:()=>Ic,argMax:()=>Tc,argMin:()=>vy,asin:()=>wy,asinh:()=>ky,atan:()=>Iy,atan2:()=>Ty,atanh:()=>Ny,avgPool:()=>Qn,avgPool3d:()=>_y,backend:()=>X0,backend_util:()=>_,basicLSTMCell:()=>n$,batchNorm:()=>fr,batchNorm2d:()=>ek,batchNorm3d:()=>tk,batchNorm4d:()=>nk,batchToSpaceND:()=>Sc,bincount:()=>ak,booleanMaskAsync:()=>iM,broadcastTo:()=>Cc,browser:()=>ki,buffer:()=>Me,callbacks:()=>XB,cast:()=>ue,ceil:()=>Ey,clipByValue:()=>Kt,clone:()=>Xr,complex:()=>jr,concat:()=>Je,concat1d:()=>rk,concat2d:()=>sk,concat3d:()=>ik,concat4d:()=>ok,constraints:()=>n1,conv1d:()=>th,conv2d:()=>At,conv2dTranspose:()=>nh,conv3d:()=>Ay,conv3dTranspose:()=>T$,copyRegisteredKernels:()=>SE,cos:()=>_c,cosh:()=>ah,cosineWindow:()=>ab,cumsum:()=>rh,customGrad:()=>ja,data:()=>gT,denseBincount:()=>uk,deprecationWarn:()=>yy,depthToSpace:()=>$y,depthwiseConv2d:()=>Qr,deregisterOp:()=>JB,device_util:()=>vc,diag:()=>$$,dilation2d:()=>Dy,disableDeprecationWarnings:()=>mA,dispose:()=>Ae,disposeVariables:()=>fA,div:()=>ye,divNoNan:()=>Ry,dot:()=>ck,dropout:()=>Ak,elu:()=>Rl,enableDebugMode:()=>hA,enableProdMode:()=>dA,enclosingPowerOfTwo:()=>$k,engine:()=>Ua,env:()=>Z,equal:()=>Zr,erf:()=>My,exp:()=>dn,expandDims:()=>hn,expm1:()=>Py,eye:()=>Oy,fft:()=>Mc,fill:()=>Cn,findBackend:()=>kA,findBackendFactory:()=>IA,floor:()=>Ml,floorDiv:()=>Qd,fused:()=>ns,gather:()=>Ni,gatherND:()=>Fk,gather_util:()=>cy,getBackend:()=>vA,getGradient:()=>Gg,getKernel:()=>Wd,getKernelsForBackend:()=>Bd,grad:()=>oD,grads:()=>lD,greater:()=>pa,greaterEqual:()=>es,ifft:()=>Bl,imag:()=>sh,image:()=>Xa,inTopKAsync:()=>yM,initializers:()=>u1,input:()=>k1,io:()=>jt,irfft:()=>vh,isFinite:()=>pk,isInf:()=>dk,isNaN:()=>hk,keep:()=>qt,kernel_impls:()=>Ya,layers:()=>w1,leakyRelu:()=>Ec,less:()=>ih,lessEqual:()=>Si,linalg:()=>Gk,linspace:()=>mk,loadGraphModel:()=>Y4,loadLayersModel:()=>fB,localResponseNormalization:()=>Ly,log:()=>Pn,log1p:()=>oh,logSigmoid:()=>gk,logSoftmax:()=>uh,logSumExp:()=>By,logicalAnd:()=>da,logicalNot:()=>Fc,logicalOr:()=>ch,logicalXor:()=>vk,losses:()=>RP,matMul:()=>ze,math:()=>E0,max:()=>Zn,maxPool:()=>$t,maxPool3d:()=>Vy,maxPoolWithArgmax:()=>wk,maximum:()=>qa,mean:()=>Ct,memory:()=>Yd,metrics:()=>DI,min:()=>Ol,minimum:()=>Ll,mirrorPad:()=>Uy,mod:()=>Gy,model:()=>hB,models:()=>RI,moments:()=>ph,movingAverage:()=>uM,mul:()=>W,multiRNNCell:()=>OD,multinomial:()=>kk,neg:()=>St,nextFrame:()=>Mh,norm:()=>Th,notEqual:()=>_i,oneHot:()=>Fl,ones:()=>Ka,onesLike:()=>On,op:()=>O,outerProduct:()=>VD,pad:()=>ea,pad1d:()=>HD,pad2d:()=>qD,pad3d:()=>XD,pad4d:()=>JD,pool:()=>Ik,pow:()=>gr,prelu:()=>$c,print:()=>I0,prod:()=>dh,profile:()=>gA,rand:()=>iR,randomGamma:()=>cR,randomNormal:()=>Tk,randomUniform:()=>zl,range:()=>hh,ready:()=>xA,real:()=>Dc,reciprocal:()=>qy,registerBackend:()=>Jd,registerCallbackConstructor:()=>gB,registerGradient:()=>a0,registerKernel:()=>hc,registerOp:()=>YB,regularizers:()=>MI,relu:()=>qe,relu6:()=>mh,removeBackend:()=>wA,reshape:()=>U,reverse:()=>Ln,reverse1d:()=>xR,reverse2d:()=>wR,reverse3d:()=>IR,reverse4d:()=>NR,rfft:()=>Pc,round:()=>Ky,rsqrt:()=>fh,scalar:()=>ve,scatterND:()=>Ek,scatter_util:()=>py,selu:()=>gh,separableConv2d:()=>Ei,sequential:()=>mB,serialization:()=>re,setBackend:()=>bA,setPlatform:()=>TA,setWasmPath:()=>Jae,setWasmPaths:()=>Qae,setdiff1dAsync:()=>Nk,sigmoid:()=>ca,sign:()=>Xy,signal:()=>DP,sin:()=>yh,sinh:()=>bh,slice:()=>Be,slice1d:()=>xh,slice2d:()=>Yy,slice3d:()=>Wl,slice4d:()=>Rc,slice_util:()=>an,softmax:()=>Na,softplus:()=>Pl,spaceToBatchND:()=>Ac,sparseToDense:()=>nb,spectral:()=>$P,split:()=>zn,sqrt:()=>rn,square:()=>ot,squaredDifference:()=>wh,squeeze:()=>ts,stack:()=>Dt,step:()=>Vl,stridedSlice:()=>Jy,sub:()=>he,sum:()=>Se,sumOutType:()=>Hd,tan:()=>Qy,tanh:()=>Dl,tensor:()=>Yn,tensor1d:()=>Qe,tensor2d:()=>Sa,tensor3d:()=>Kd,tensor4d:()=>Ca,tensor5d:()=>JR,tensor6d:()=>QR,tensor_util:()=>Ia,test_util:()=>H0,tidy:()=>D,tile:()=>Ha,time:()=>yA,topk:()=>Zy,train:()=>Ai,transpose:()=>Ve,truncatedNormal:()=>kh,unique:()=>Ih,unregisterGradient:()=>NE,unregisterKernel:()=>TE,unsortedSegmentSum:()=>eb,unstack:()=>ut,upcastType:()=>ua,util:()=>w,valueAndGrad:()=>uD,valueAndGrads:()=>cD,variable:()=>Sk,variableGrads:()=>fk,version:()=>aee,version_converter:()=>fT,version_core:()=>K0,version_layers:()=>sm,version_wasm:()=>Zae,where:()=>Sn,whereAsync:()=>tb,zeros:()=>xt,zerosLike:()=>Ge});var __=Object.create,ad=Object.defineProperty,E_=Object.getPrototypeOf,F_=Object.prototype.hasOwnProperty,A_=Object.getOwnPropertyNames,$_=Object.getOwnPropertyDescriptor,D_=e=>ad(e,"__esModule",{value:!0}),Tt=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Le=(e,t)=>{for(var n in t)ad(e,n,{get:t[n],enumerable:!0})},R_=(e,t,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of A_(t))!F_.call(e,a)&&a!=="default"&&ad(e,a,{get:()=>t[a],enumerable:!(n=$_(t,a))||n.enumerable});return e},Io=e=>R_(D_(ad(e!=null?__(E_(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),M_=Tt(()=>{}),P_=Tt((e,t)=>{(function(n,a,r){function s(c){var u=this,p=l();u.next=function(){var d=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=d-(u.c=d|0)},u.c=1,u.s0=p(" "),u.s1=p(" "),u.s2=p(" "),u.s0-=p(c),u.s0<0&&(u.s0+=1),u.s1-=p(c),u.s1<0&&(u.s1+=1),u.s2-=p(c),u.s2<0&&(u.s2+=1),p=null}function i(c,u){return u.c=c.c,u.s0=c.s0,u.s1=c.s1,u.s2=c.s2,u}function o(c,u){var p=new s(c),d=u&&u.state,h=p.next;return h.int32=function(){return p.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&i(d,p),h.state=function(){return i(p,{})}),h}function l(){var c=4022871197,u=function(p){p=p.toString();for(var d=0;d<p.length;d++){c+=p.charCodeAt(d);var h=.02519603282416938*c;c=h>>>0,h-=c,h*=c,c=h>>>0,h-=c,c+=h*4294967296}return(c>>>0)*23283064365386963e-26};return u}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),O_=Tt((e,t)=>{(function(n,a,r){function s(l){var c=this,u="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var d=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^d^d>>>8},l===(l|0)?c.x=l:u+=l;for(var p=0;p<u.length+64;p++)c.x^=u.charCodeAt(p)|0,c.next()}function i(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c}function o(l,c){var u=new s(l),p=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,p&&(typeof p=="object"&&i(p,u),d.state=function(){return i(u,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),L_=Tt((e,t)=>{(function(n,a,r){function s(l){var c=this,u="";c.next=function(){var d=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(d^d<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,l===(l|0)?c.x=l:u+=l;for(var p=0;p<u.length+64;p++)c.x^=u.charCodeAt(p)|0,p==u.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function i(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c.v=l.v,c.d=l.d,c}function o(l,c){var u=new s(l),p=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,p&&(typeof p=="object"&&i(p,u),d.state=function(){return i(u,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),z_=Tt((e,t)=>{(function(n,a,r){function s(l){var c=this;c.next=function(){var p=c.x,d=c.i,h,m,f;return h=p[d],h^=h>>>7,m=h^h<<24,h=p[d+1&7],m^=h^h>>>10,h=p[d+3&7],m^=h^h>>>3,h=p[d+4&7],m^=h^h<<7,h=p[d+7&7],h=h^h<<13,m^=h^h<<9,p[d]=m,c.i=d+1&7,m};function u(p,d){var h,m,f=[];if(d===(d|0))m=f[0]=d;else for(d=""+d,h=0;h<d.length;++h)f[h&7]=f[h&7]<<15^d.charCodeAt(h)+f[h+1&7]<<13;for(;f.length<8;)f.push(0);for(h=0;h<8&&f[h]===0;++h);for(h==8?m=f[7]=-1:m=f[h],p.x=f,p.i=0,h=256;h>0;--h)p.next()}u(c,l)}function i(l,c){return c.x=l.x.slice(),c.i=l.i,c}function o(l,c){l==null&&(l=+new Date);var u=new s(l),p=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,p&&(p.x&&i(p,u),d.state=function(){return i(u,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),W_=Tt((e,t)=>{(function(n,a,r){function s(l){var c=this;c.next=function(){var p=c.w,d=c.X,h=c.i,m,f;return c.w=p=p+1640531527|0,f=d[h+34&127],m=d[h=h+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=d[h]=f^m,c.i=h,f+(p^p>>>16)|0};function u(p,d){var h,m,f,g,y,b=[],x=128;for(d===(d|0)?(m=d,d=null):(d=d+"\0",m=0,x=Math.max(x,d.length)),f=0,g=-32;g<x;++g)d&&(m^=d.charCodeAt((g+32)%d.length)),g===0&&(y=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,g>=0&&(y=y+1640531527|0,h=b[g&127]^=m+y,f=h==0?f+1:0);for(f>=128&&(b[(d&&d.length||0)&127]=-1),f=127,g=4*128;g>0;--g)m=b[f+34&127],h=b[f=f+1&127],m^=m<<13,h^=h<<17,m^=m>>>15,h^=h>>>12,b[f]=m^h;p.w=y,p.X=b,p.i=f}u(c,l)}function i(l,c){return c.i=l.i,c.w=l.w,c.X=l.X.slice(),c}function o(l,c){l==null&&(l=+new Date);var u=new s(l),p=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,p&&(p.X&&i(p,u),d.state=function(){return i(u,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),B_=Tt((e,t)=>{(function(n,a,r){function s(l){var c=this,u="";c.next=function(){var d=c.b,h=c.c,m=c.d,f=c.a;return d=d<<25^d>>>7^h,h=h-m|0,m=m<<24^m>>>8^f,f=f-d|0,c.b=d=d<<20^d>>>12^h,c.c=h=h-m|0,c.d=m<<16^h>>>16^f,c.a=f-d|0},c.a=0,c.b=0,c.c=2654435769|0,c.d=1367130551,l===Math.floor(l)?(c.a=l/4294967296|0,c.b=l|0):u+=l;for(var p=0;p<u.length+20;p++)c.b^=u.charCodeAt(p)|0,c.next()}function i(l,c){return c.a=l.a,c.b=l.b,c.c=l.c,c.d=l.d,c}function o(l,c){var u=new s(l),p=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,p&&(typeof p=="object"&&i(p,u),d.state=function(){return i(u,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),zw=Tt(()=>{}),V_=Tt((e,t)=>{(function(n,a){var r=this,s=256,i=6,o=52,l="random",c=a.pow(s,i),u=a.pow(2,o),p=u*2,d=s-1,h;function m(T,k,S){var F=[];k=k==!0?{entropy:!0}:k||{};var A=b(y(k.entropy?[T,v(n)]:T==null?x():T,3),F),R=new f(F),P=function(){for(var z=R.g(i),V=c,G=0;z<u;)z=(z+G)*s,V*=s,G=R.g(1);for(;z>=p;)z/=2,V/=2,G>>>=1;return(z+G)/V};return P.int32=function(){return R.g(4)|0},P.quick=function(){return R.g(4)/4294967296},P.double=P,b(v(R.S),n),(k.pass||S||function(z,V,G,H){return H&&(H.S&&g(H,R),z.state=function(){return g(R,{})}),G?(a[l]=z,V):z})(P,A,"global"in k?k.global:this==a,k.state)}a["seed"+l]=m;function f(T){var k,S=T.length,F=this,A=0,R=F.i=F.j=0,P=F.S=[];for(S||(T=[S++]);A<s;)P[A]=A++;for(A=0;A<s;A++)P[A]=P[R=d&R+T[A%S]+(k=P[A])],P[R]=k;(F.g=function(z){for(var V,G=0,H=F.i,K=F.j,j=F.S;z--;)V=j[H=d&H+1],G=G*s+j[d&(j[H]=j[K=d&K+V])+(j[K]=V)];return F.i=H,F.j=K,G})(s)}function g(T,k){return k.i=T.i,k.j=T.j,k.S=T.S.slice(),k}function y(T,k){var S=[],F=typeof T,A;if(k&&F=="object")for(A in T)try{S.push(y(T[A],k-1))}catch(R){}return S.length?S:F=="string"?T:T+"\0"}function b(T,k){for(var S=T+"",F,A=0;A<S.length;)k[d&A]=d&(F^=k[d&A]*19)+S.charCodeAt(A++);return v(k)}function x(){try{var T;return h&&(T=h.randomBytes)?T=T(s):(T=new Uint8Array(s),(r.crypto||r.msCrypto).getRandomValues(T)),v(T)}catch(F){var k=r.navigator,S=k&&k.plugins;return[+new Date,r,S,r.screen,v(n)]}}function v(T){return String.fromCharCode.apply(0,T)}if(b(a.random(),n),typeof t=="object"&&t.exports){t.exports=m;try{h=zw()}catch(T){}}else typeof define=="function"&&define.amd&&define(function(){return m})})([],Math)}),Ww=Tt((e,t)=>{var n=P_(),a=O_(),r=L_(),s=z_(),i=W_(),o=B_(),l=V_();l.alea=n,l.xor128=a,l.xorwow=r,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}),U_=Tt((e,t)=>{(function(n,a,r){function s(c){var u=this,p=l();u.next=function(){var d=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=d-(u.c=d|0)},u.c=1,u.s0=p(" "),u.s1=p(" "),u.s2=p(" "),u.s0-=p(c),u.s0<0&&(u.s0+=1),u.s1-=p(c),u.s1<0&&(u.s1+=1),u.s2-=p(c),u.s2<0&&(u.s2+=1),p=null}function i(c,u){return u.c=c.c,u.s0=c.s0,u.s1=c.s1,u.s2=c.s2,u}function o(c,u){var p=new s(c),d=u&&u.state,h=p.next;return h.int32=function(){return p.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&i(d,p),h.state=function(){return i(p,{})}),h}function l(){var c=4022871197,u=function(p){p=String(p);for(var d=0;d<p.length;d++){c+=p.charCodeAt(d);var h=.02519603282416938*c;c=h>>>0,h-=c,h*=c,c=h>>>0,h-=c,c+=h*4294967296}return(c>>>0)*23283064365386963e-26};return u}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),G_=Tt((e,t)=>{(function(n,a,r){function s(l){var c=this,u="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var d=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^d^d>>>8},l===(l|0)?c.x=l:u+=l;for(var p=0;p<u.length+64;p++)c.x^=u.charCodeAt(p)|0,c.next()}function i(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c}function o(l,c){var u=new s(l),p=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,p&&(typeof p=="object"&&i(p,u),d.state=function(){return i(u,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),H_=Tt((e,t)=>{(function(n,a,r){function s(l){var c=this,u="";c.next=function(){var d=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(d^d<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,l===(l|0)?c.x=l:u+=l;for(var p=0;p<u.length+64;p++)c.x^=u.charCodeAt(p)|0,p==u.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function i(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c.v=l.v,c.d=l.d,c}function o(l,c){var u=new s(l),p=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,p&&(typeof p=="object"&&i(p,u),d.state=function(){return i(u,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),j_=Tt((e,t)=>{(function(n,a,r){function s(l){var c=this;c.next=function(){var p=c.x,d=c.i,h,m,f;return h=p[d],h^=h>>>7,m=h^h<<24,h=p[d+1&7],m^=h^h>>>10,h=p[d+3&7],m^=h^h>>>3,h=p[d+4&7],m^=h^h<<7,h=p[d+7&7],h=h^h<<13,m^=h^h<<9,p[d]=m,c.i=d+1&7,m};function u(p,d){var h,m,f=[];if(d===(d|0))m=f[0]=d;else for(d=""+d,h=0;h<d.length;++h)f[h&7]=f[h&7]<<15^d.charCodeAt(h)+f[h+1&7]<<13;for(;f.length<8;)f.push(0);for(h=0;h<8&&f[h]===0;++h);for(h==8?m=f[7]=-1:m=f[h],p.x=f,p.i=0,h=256;h>0;--h)p.next()}u(c,l)}function i(l,c){return c.x=l.x.slice(),c.i=l.i,c}function o(l,c){l==null&&(l=+new Date);var u=new s(l),p=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,p&&(p.x&&i(p,u),d.state=function(){return i(u,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),q_=Tt((e,t)=>{(function(n,a,r){function s(l){var c=this;c.next=function(){var p=c.w,d=c.X,h=c.i,m,f;return c.w=p=p+1640531527|0,f=d[h+34&127],m=d[h=h+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=d[h]=f^m,c.i=h,f+(p^p>>>16)|0};function u(p,d){var h,m,f,g,y,b=[],x=128;for(d===(d|0)?(m=d,d=null):(d=d+"\0",m=0,x=Math.max(x,d.length)),f=0,g=-32;g<x;++g)d&&(m^=d.charCodeAt((g+32)%d.length)),g===0&&(y=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,g>=0&&(y=y+1640531527|0,h=b[g&127]^=m+y,f=h==0?f+1:0);for(f>=128&&(b[(d&&d.length||0)&127]=-1),f=127,g=4*128;g>0;--g)m=b[f+34&127],h=b[f=f+1&127],m^=m<<13,h^=h<<17,m^=m>>>15,h^=h>>>12,b[f]=m^h;p.w=y,p.X=b,p.i=f}u(c,l)}function i(l,c){return c.i=l.i,c.w=l.w,c.X=l.X.slice(),c}function o(l,c){l==null&&(l=+new Date);var u=new s(l),p=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,p&&(p.X&&i(p,u),d.state=function(){return i(u,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),K_=Tt((e,t)=>{(function(n,a,r){function s(l){var c=this,u="";c.next=function(){var d=c.b,h=c.c,m=c.d,f=c.a;return d=d<<25^d>>>7^h,h=h-m|0,m=m<<24^m>>>8^f,f=f-d|0,c.b=d=d<<20^d>>>12^h,c.c=h=h-m|0,c.d=m<<16^h>>>16^f,c.a=f-d|0},c.a=0,c.b=0,c.c=2654435769|0,c.d=1367130551,l===Math.floor(l)?(c.a=l/4294967296|0,c.b=l|0):u+=l;for(var p=0;p<u.length+20;p++)c.b^=u.charCodeAt(p)|0,c.next()}function i(l,c){return c.a=l.a,c.b=l.b,c.c=l.c,c.d=l.d,c}function o(l,c){var u=new s(l),p=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,p&&(typeof p=="object"&&i(p,u),d.state=function(){return i(u,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),X_=Tt((e,t)=>{(function(n,a,r){var s=256,i=6,o=52,l="random",c=r.pow(s,i),u=r.pow(2,o),p=u*2,d=s-1,h;function m(T,k,S){var F=[];k=k==!0?{entropy:!0}:k||{};var A=b(y(k.entropy?[T,v(a)]:T==null?x():T,3),F),R=new f(F),P=function(){for(var z=R.g(i),V=c,G=0;z<u;)z=(z+G)*s,V*=s,G=R.g(1);for(;z>=p;)z/=2,V/=2,G>>>=1;return(z+G)/V};return P.int32=function(){return R.g(4)|0},P.quick=function(){return R.g(4)/4294967296},P.double=P,b(v(R.S),a),(k.pass||S||function(z,V,G,H){return H&&(H.S&&g(H,R),z.state=function(){return g(R,{})}),G?(r[l]=z,V):z})(P,A,"global"in k?k.global:this==r,k.state)}function f(T){var k,S=T.length,F=this,A=0,R=F.i=F.j=0,P=F.S=[];for(S||(T=[S++]);A<s;)P[A]=A++;for(A=0;A<s;A++)P[A]=P[R=d&R+T[A%S]+(k=P[A])],P[R]=k;(F.g=function(z){for(var V,G=0,H=F.i,K=F.j,j=F.S;z--;)V=j[H=d&H+1],G=G*s+j[d&(j[H]=j[K=d&K+V])+(j[K]=V)];return F.i=H,F.j=K,G})(s)}function g(T,k){return k.i=T.i,k.j=T.j,k.S=T.S.slice(),k}function y(T,k){var S=[],F=typeof T,A;if(k&&F=="object")for(A in T)try{S.push(y(T[A],k-1))}catch(R){}return S.length?S:F=="string"?T:T+"\0"}function b(T,k){for(var S=T+"",F,A=0;A<S.length;)k[d&A]=d&(F^=k[d&A]*19)+S.charCodeAt(A++);return v(k)}function x(){try{var T;return h&&(T=h.randomBytes)?T=T(s):(T=new Uint8Array(s),(n.crypto||n.msCrypto).getRandomValues(T)),v(T)}catch(F){var k=n.navigator,S=k&&k.plugins;return[+new Date,n,S,n.screen,v(a)]}}function v(T){return String.fromCharCode.apply(0,T)}if(b(r.random(),a),typeof t=="object"&&t.exports){t.exports=m;try{h=zw()}catch(T){}}else typeof define=="function"&&define.amd?define(function(){return m}):r["seed"+l]=m})(typeof self!="undefined"?self:e,[],Math)}),Bw=Tt((e,t)=>{var n=U_(),a=G_(),r=H_(),s=j_(),i=q_(),o=K_(),l=X_();l.alea=n,l.xor128=a,l.xorwow=r,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}),Y_=Tt(()=>{}),Hu=Tt(()=>{}),J_=Tt(()=>{}),Q_=Tt(()=>{}),Z_=Tt((e,t)=>{var n=function(){var a=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(a=a||__filename),function(r){r=r||{};function s(){return ee.buffer!=We&&tn(ee.buffer),wn}function i(){return ee.buffer!=We&&tn(ee.buffer),It}function o(){return ee.buffer!=We&&tn(ee.buffer),kn}function l(){return ee.buffer!=We&&tn(ee.buffer),Kn}function c(){return ee.buffer!=We&&tn(ee.buffer),pn}var u=typeof r!="undefined"?r:{},p,d;u.ready=new Promise(function(N,C){p=N,d=C});var h={},m;for(m in u)u.hasOwnProperty(m)&&(h[m]=u[m]);var f=[],g="./this.program",y=function(N,C){throw C},b=!1,x=!1,v=!1,T=!1;b=typeof window=="object",x=typeof importScripts=="function",v=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",T=!b&&!v&&!x;var k=u.ENVIRONMENT_IS_PTHREAD||!1;k&&(We=u.buffer);var S="";function F(N){return u.locateFile?u.locateFile(N,S):S+N}var A,R,P,z,V,G;if(v){x?S=Hu().dirname(S)+"/":S=__dirname+"/",A=function(N,C){return V||(V=require("fs")),G||(G=Hu()),N=G.normalize(N),V.readFileSync(N,C?null:"utf8")},P=function(N){var C=A(N,!0);return C.buffer||(C=new Uint8Array(C)),me(C.buffer),C},process.argv.length>1&&(g=process.argv[1].replace(/\\/g,"/")),f=process.argv.slice(2),process.on("uncaughtException",function(N){if(!(N instanceof Gu))throw N}),process.on("unhandledRejection",cr),y=function(N){process.exit(N)},u.inspect=function(){return"[Emscripten Module object]"};var H;try{H=J_()}catch(N){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),N}global.Worker=H.Worker}else T?(typeof read!="undefined"&&(A=function(N){return read(N)}),P=function(N){var C;return typeof readbuffer=="function"?new Uint8Array(readbuffer(N)):(C=read(N,"binary"),me(typeof C=="object"),C)},typeof scriptArgs!="undefined"?f=scriptArgs:typeof arguments!="undefined"&&(f=arguments),typeof quit=="function"&&(y=function(N){quit(N)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(b||x)&&(x?S=self.location.href:typeof document!="undefined"&&document.currentScript&&(S=document.currentScript.src),typeof a!="undefined"&&a&&(S=a),S.indexOf("blob:")!==0?S=S.substr(0,S.lastIndexOf("/")+1):S="",v?(A=function(N,C){return V||(V=require("fs")),G||(G=Hu()),N=G.normalize(N),V.readFileSync(N,C?null:"utf8")},P=function(N){var C=A(N,!0);return C.buffer||(C=new Uint8Array(C)),me(C.buffer),C}):(A=function(N){var C=new XMLHttpRequest;return C.open("GET",N,!1),C.send(null),C.responseText},x&&(P=function(N){var C=new XMLHttpRequest;return C.open("GET",N,!1),C.responseType="arraybuffer",C.send(null),new Uint8Array(C.response)}),R=function(N,C,L){var q=new XMLHttpRequest;q.open("GET",N,!0),q.responseType="arraybuffer",q.onload=function(){if(q.status==200||q.status==0&&q.response){C(q.response);return}L()},q.onerror=L,q.send(null)}),z=function(N){document.title=N});v&&typeof performance=="undefined"&&(global.performance=Q_().performance);var K=u.print||console.log.bind(console),j=u.printErr||console.warn.bind(console);for(m in h)h.hasOwnProperty(m)&&(u[m]=h[m]);h=null,u.arguments&&(f=u.arguments),u.thisProgram&&(g=u.thisProgram),u.quit&&(y=u.quit);var te=Atomics.load,Q=Atomics.store,se=Atomics.compareExchange,ne;u.wasmBinary&&(ne=u.wasmBinary);var ie=u.noExitRuntime||!0;typeof WebAssembly!="object"&&cr("no native wasm support detected");var ee,pe,oe=!1,fe;function me(N,C){N||cr("Assertion failed: "+C)}function we(N){var C=u["_"+N];return me(C,"Cannot call unknown function "+N+", make sure it is exported"),C}function Te(N,C,L,q,de){var le={string:function(Nn){var ko=0;if(Nn!=null&&Nn!==0){var Ow=(Nn.length<<2)+1;ko=xo(Ow),nt(Nn,ko,Ow)}return ko},array:function(Nn){var ko=xo(Nn.length);return Xe(Nn,ko),ko}};function ce(Nn){return C==="string"?Fe(Nn):C==="boolean"?Boolean(Nn):Nn}var be=we(N),at=[],Gt=0;if(q)for(var Pt=0;Pt<q.length;Pt++){var Lr=le[L[Pt]];Lr?(Gt===0&&(Gt=Uu()),at[Pt]=Lr(q[Pt])):at[Pt]=q[Pt]}var wo=be.apply(null,at);return wo=ce(wo),Gt!==0&&bo(Gt),wo}function _e(N,C,L,q){L=L||[];var de=L.every(function(ce){return ce==="number"}),le=C!=="string";return le&&de&&!q?we(N):function(){return Te(N,C,L,arguments,q)}}function Re(N,C,L){for(var q=C+L,de="";!(C>=q);){var le=N[C++];if(!le)return de;if(!(le&128)){de+=String.fromCharCode(le);continue}var ce=N[C++]&63;if((le&224)==192){de+=String.fromCharCode((le&31)<<6|ce);continue}var be=N[C++]&63;if((le&240)==224?le=(le&15)<<12|ce<<6|be:le=(le&7)<<18|ce<<12|be<<6|N[C++]&63,le<65536)de+=String.fromCharCode(le);else{var at=le-65536;de+=String.fromCharCode(55296|at>>10,56320|at&1023)}}return de}function Fe(N,C){return N?Re(i(),N,C):""}function tt(N,C,L,q){if(!(q>0))return 0;for(var de=L,le=L+q-1,ce=0;ce<N.length;++ce){var be=N.charCodeAt(ce);if(be>=55296&&be<=57343){var at=N.charCodeAt(++ce);be=65536+((be&1023)<<10)|at&1023}if(be<=127){if(L>=le)break;C[L++]=be}else if(be<=2047){if(L+1>=le)break;C[L++]=192|be>>6,C[L++]=128|be&63}else if(be<=65535){if(L+2>=le)break;C[L++]=224|be>>12,C[L++]=128|be>>6&63,C[L++]=128|be&63}else{if(L+3>=le)break;C[L++]=240|be>>18,C[L++]=128|be>>12&63,C[L++]=128|be>>6&63,C[L++]=128|be&63}}return C[L]=0,L-de}function nt(N,C,L){return tt(N,i(),C,L)}function it(N){for(var C=0,L=0;L<N.length;++L){var q=N.charCodeAt(L);q>=55296&&q<=57343&&(q=65536+((q&1023)<<10)|N.charCodeAt(++L)&1023),q<=127?++C:q<=2047?C+=2:q<=65535?C+=3:C+=4}return C}function Xe(N,C){s().set(N,C)}function mt(N,C){return N%C>0&&(N+=C-N%C),N}var We,wn,It,qn,en,kn,Kn,Mn,pn;function tn(N){We=N,u.HEAP8=wn=new Int8Array(N),u.HEAP16=qn=new Int16Array(N),u.HEAP32=kn=new Int32Array(N),u.HEAPU8=It=new Uint8Array(N),u.HEAPU16=en=new Uint16Array(N),u.HEAPU32=Kn=new Uint32Array(N),u.HEAPF32=Mn=new Float32Array(N),u.HEAPF64=pn=new Float64Array(N)}var Wa=u.INITIAL_MEMORY||16777216;if(k)ee=u.wasmMemory,We=u.buffer;else if(u.wasmMemory)ee=u.wasmMemory;else if(ee=new WebAssembly.Memory({initial:Wa/65536,maximum:2147483648/65536,shared:!0}),!(ee.buffer instanceof SharedArrayBuffer))throw j("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),v&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");ee&&(We=ee.buffer),Wa=We.byteLength,tn(We);var sa,ia=[],$r=[],lr=[],Dr=[],co=[],ka=!1,Dp=!1;k||$r.push({func:function(){Xp()}}),k&&(ka=!0);function wf(){if(!k){if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)Pp(u.preRun.shift());ho(ia)}}function Rp(){ka=!0,ho($r)}function kf(){k||ho(lr)}function Mp(){k||(Dp=!0)}function In(){if(!k){if(u.postRun)for(typeof u.postRun=="function"&&(u.postRun=[u.postRun]);u.postRun.length;)If(u.postRun.shift());ho(co)}}function Pp(N){ia.unshift(N)}function If(N){co.unshift(N)}var ur=0,Rr=null,xs=null;function Tf(N){me(!k,"addRunDependency cannot be used in a pthread worker"),ur++,u.monitorRunDependencies&&u.monitorRunDependencies(ur)}function Nf(N){if(ur--,u.monitorRunDependencies&&u.monitorRunDependencies(ur),ur==0&&(Rr!==null&&(clearInterval(Rr),Rr=null),xs)){var C=xs;xs=null,C()}}u.preloadedImages={},u.preloadedAudios={};function cr(N){u.onAbort&&u.onAbort(N),k&&console.error("Pthread aborting at "+new Error().stack),N+="",j(N),oe=!0,fe=1,N="abort("+N+"). Build with -s ASSERTIONS=1 for more info.";var C=new WebAssembly.RuntimeError(N);throw d(C),C}function Op(N,C){return String.prototype.startsWith?N.startsWith(C):N.indexOf(C)===0}var po="data:application/octet-stream;base64,";function Lp(N){return Op(N,po)}var Sf="file://";function zp(N){return Op(N,Sf)}var Tn="tfjs-backend-wasm-threaded-simd.wasm";Lp(Tn)||(Tn=F(Tn));function Cf(N){try{if(N==Tn&&ne)return new Uint8Array(ne);if(P)return P(N);throw"both async and sync fetching of the wasm failed"}catch(C){cr(C)}}function Wp(){if(!ne&&(b||x)){if(typeof fetch=="function"&&!zp(Tn))return fetch(Tn,{credentials:"same-origin"}).then(function(N){if(!N.ok)throw"failed to load wasm binary file at '"+Tn+"'";return N.arrayBuffer()}).catch(function(){return Cf(Tn)});if(R)return new Promise(function(N,C){R(Tn,function(L){N(new Uint8Array(L))},C)})}return Promise.resolve().then(function(){return Cf(Tn)})}function _f(){var N={a:bg};function C(ce,be){var at=ce.exports;if(u.asm=at,sa=u.asm.F,pe=be,!k){var Gt=ke.unusedWorkers.length;ke.unusedWorkers.forEach(function(Pt){ke.loadWasmModuleToWorker(Pt,function(){--Gt||Nf("wasm-instantiate")})})}}k||Tf("wasm-instantiate");function L(ce){C(ce.instance,ce.module)}function q(ce){return Wp().then(function(be){return WebAssembly.instantiate(be,N)}).then(ce,function(be){j("failed to asynchronously prepare wasm: "+be),cr(be)})}function de(){return!ne&&typeof WebAssembly.instantiateStreaming=="function"&&!Lp(Tn)&&!zp(Tn)&&typeof fetch=="function"?fetch(Tn,{credentials:"same-origin"}).then(function(ce){var be=WebAssembly.instantiateStreaming(ce,N);return be.then(L,function(at){return j("wasm streaming compile failed: "+at),j("falling back to ArrayBuffer instantiation"),q(L)})}):q(L)}if(u.instantiateWasm)try{var le=u.instantiateWasm(N,C);return le}catch(ce){return j("Module.instantiateWasm callback failed with error: "+ce),!1}return de().catch(d),{}}var Bp={8991:function(N,C){setTimeout(function(){Aw(N,C)},0)}};function Ef(){ke.initRuntime()}function ho(N){for(;N.length>0;){var C=N.shift();if(typeof C=="function"){C(u);continue}var L=C.func;typeof L=="number"?C.arg===void 0?sa.get(L)():sa.get(L)(C.arg):L(C.arg===void 0?null:C.arg)}}function mo(N,C){if(N<=0||N>s().length||N&!0||C<0)return-28;if(C==0)return 0;C>=2147483647&&(C=Infinity);var L=Atomics.load(o(),vo>>2),q=0;if(L==N){var de=Atomics.compareExchange(o(),vo>>2,L,0);if(de==L&&(--C,q=1,C<=0))return 1}var le=Atomics.notify(o(),N>>2,C);if(le>=0)return le+q;throw"Atomics.notify returned an unexpected value "+le}u._emscripten_futex_wake=mo;function Ff(N){if(k)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!N)throw"Internal Error! Null pthread_ptr in killThread!";o()[N+12>>2]=0;var C=ke.pthreads[N];C.worker.terminate(),ke.freeThreadData(C),ke.runningWorkers.splice(ke.runningWorkers.indexOf(C.worker),1),C.worker.pthread=void 0}function Af(N){if(k)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!N)throw"Internal Error! Null pthread_ptr in cancelThread!";var C=ke.pthreads[N];C.worker.postMessage({cmd:"cancel"})}function $f(N){if(k)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!N)throw"Internal Error! Null pthread_ptr in cleanupThread!";o()[N+12>>2]=0;var C=ke.pthreads[N];if(C){var L=C.worker;ke.returnWorkerToPool(L)}}var ke={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var N=8,C=0;C<N;++C)ke.allocateUnusedWorker()},initRuntime:function(){for(var N=ws(228),C=0;C<228/4;++C)l()[N/4+C]=0;o()[N+12>>2]=N;var L=N+152;o()[L>>2]=L;for(var q=ws(512),C=0;C<128;++C)l()[q/4+C]=0;Atomics.store(l(),N+100>>2,q),Atomics.store(l(),N+40>>2,N),ed(N,!x,1),Fw(N)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;ke.threadExitHandlers.length>0;)ke.threadExitHandlers.pop()();k&&yo()&&Ew()},threadExit:function(N){var C=yo();C&&(Atomics.store(l(),C+4>>2,N),Atomics.store(l(),C+0>>2,1),Atomics.store(l(),C+56>>2,1),Atomics.store(l(),C+60>>2,0),ke.runExitHandlers(),mo(C+0,2147483647),ed(0,0,0),k&&postMessage({cmd:"exit"}))},threadCancel:function(){ke.runExitHandlers();var N=yo();Atomics.store(l(),N+4>>2,-1),Atomics.store(l(),N+0>>2,1),mo(N+0,2147483647),ed(0,0,0),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var N in ke.pthreads){var C=ke.pthreads[N];C&&C.worker&&ke.returnWorkerToPool(C.worker)}ke.pthreads={};for(var L=0;L<ke.unusedWorkers.length;++L){var q=ke.unusedWorkers[L];q.terminate()}ke.unusedWorkers=[];for(var L=0;L<ke.runningWorkers.length;++L){var q=ke.runningWorkers[L],C=q.pthread;ke.freeThreadData(C),q.terminate()}ke.runningWorkers=[]},freeThreadData:function(N){if(N){if(N.threadInfoStruct){var C=o()[N.threadInfoStruct+100>>2];o()[N.threadInfoStruct+100>>2]=0,Vu(C),Vu(N.threadInfoStruct)}N.threadInfoStruct=0,N.allocatedOwnStack&&N.stackBase&&Vu(N.stackBase),N.stackBase=0,N.worker&&(N.worker.pthread=null)}},returnWorkerToPool:function(N){ke.runWithoutMainThreadQueuedCalls(function(){delete ke.pthreads[N.pthread.threadInfoStruct],ke.unusedWorkers.push(N),ke.runningWorkers.splice(ke.runningWorkers.indexOf(N),1),ke.freeThreadData(N.pthread),N.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(N){o()[Pw>>2]=0;try{N()}finally{o()[Pw>>2]=1}},receiveObjectTransfer:function(N){},loadWasmModuleToWorker:function(N,C){N.onmessage=function(L){var q=L.data,de=q.cmd;if(N.pthread&&(ke.currentProxiedOperationCallerThread=N.pthread.threadInfoStruct),q.targetThread&&q.targetThread!=yo()){var le=ke.pthreads[q.targetThread];le?le.worker.postMessage(L.data,q.transferList):console.error('Internal error! Worker sent a message "'+de+'" to target pthread '+q.targetThread+", but that thread no longer exists!"),ke.currentProxiedOperationCallerThread=void 0;return}if(de==="processQueuedMainThreadWork")Dg();else if(de==="spawnThread")qp(L.data);else if(de==="cleanupThread")$f(q.thread);else if(de==="killThread")Ff(q.thread);else if(de==="cancelThread")Af(q.thread);else if(de==="loaded")N.loaded=!0,C&&C(N),N.runPthread&&(N.runPthread(),delete N.runPthread);else if(de==="print")K("Thread "+q.threadId+": "+q.text);else if(de==="printErr")j("Thread "+q.threadId+": "+q.text);else if(de==="alert")alert("Thread "+q.threadId+": "+q.text);else if(de==="exit"){var ce=N.pthread&&Atomics.load(l(),N.pthread.threadInfoStruct+64>>2);ce&&ke.returnWorkerToPool(N)}else if(de==="exitProcess")try{S_(q.returnCode)}catch(be){if(be instanceof Gu)return;throw be}else de==="cancelDone"?ke.returnWorkerToPool(N):de==="objectTransfer"?ke.receiveObjectTransfer(L.data):L.data.target==="setimmediate"?N.postMessage(L.data):j("worker sent an unknown command "+de);ke.currentProxiedOperationCallerThread=void 0},N.onerror=function(L){j("pthread sent an error! "+L.filename+":"+L.lineno+": "+L.message)},v&&(N.on("message",function(L){N.onmessage({data:L})}),N.on("error",function(L){N.onerror(L)}),N.on("exit",function(L){})),N.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||a,wasmMemory:ee,wasmModule:pe})},allocateUnusedWorker:function(){var N=F("tfjs-backend-wasm-threaded-simd.worker.js");ke.unusedWorkers.push(new Worker(N))},getNewWorker:function(){return ke.unusedWorkers.length==0&&(ke.allocateUnusedWorker(),ke.loadWasmModuleToWorker(ke.unusedWorkers[0])),ke.unusedWorkers.length>0?ke.unusedWorkers.pop():null},busySpinWait:function(N){for(var C=performance.now()+N;performance.now()<C;);}};function Df(N,C){Rw(N,C),bo(N)}u.establishStackSpace=Df;function Rf(){return ie}u.getNoExitRuntime=Rf;function Mf(N,C){return sa.get(N)(C)}u.invokeEntryPoint=Mf;function Pf(N,C,L,q){cr("Assertion failed: "+Fe(N)+", at: "+[C?Fe(C):"unknown filename",L,q?Fe(q):"unknown function"])}function Of(N,C){var L=_main(N,C)}var vs;v?vs=function(){var N=process.hrtime();return N[0]*1e3+N[1]/1e6}:k?vs=function(){return performance.now()-u.__performance_now_clock_drift}:typeof dateNow!="undefined"?vs=dateNow:vs=function(){return performance.now()};function Lf(N){return o()[Cw()>>2]=N,N}function zf(N,C){if(k)return Mr(1,1,N,C)}function Wf(N,C){if(N==C)postMessage({cmd:"processQueuedMainThreadWork"});else if(k)postMessage({targetThread:N,cmd:"processThreadQueue"});else{var L=ke.pthreads[N],q=L&&L.worker;if(!q)return;q.postMessage({cmd:"processThreadQueue"})}return 1}function Bf(){cr()}function Vf(N,C,L){var q=qf(C,L);return Bp[N].apply(null,q)}function Uf(N,C){}function Gf(N,C,L){if(N<=0||N>s().length||N&!0)return-28;if(b){if(Atomics.load(o(),N>>2)!=C)return-6;for(var q=performance.now(),de=q+L,le=Atomics.exchange(o(),vo>>2,N);;){if(q=performance.now(),q>de)return le=Atomics.exchange(o(),vo>>2,0),-73;if(le=Atomics.exchange(o(),vo>>2,0),le==0)break;if(Dg(),Atomics.load(o(),N>>2)!=C)return-6;le=Atomics.exchange(o(),vo>>2,N)}return 0}else{var ce=Atomics.wait(o(),N>>2,C,L);if(ce==="timed-out")return-73;if(ce==="not-equal")return-6;if(ce==="ok")return 0;throw"Atomics.wait returned an unexpected value "+ce}}function Hf(N,C,L){i().copyWithin(N,C,C+L)}function jf(){return v?require("os").cpus().length:navigator.hardwareConcurrency}function Mr(N,C){for(var L=arguments.length-2,q=Uu(),de=L,le=xo(de*8),ce=le>>3,be=0;be<L;be++){var at=arguments[2+be];c()[ce+be]=at}var Gt=Dw(N,de,le,C);return bo(q),Gt}var Pu=[],Ou=[];function qf(N,C){Ou.length=0;var L;for(C>>=2;L=i()[N++];){var q=L<105;q&&C&1&&C++,Ou.push(q?c()[C++>>1]:o()[C]),++C}return Ou}function Kf(N,C,L){Pu.length=C;for(var q=L>>3,de=0;de<C;de++)Pu[de]=c()[q+de];var le=N<0,ce=le?Bp[-N-1]:yg[N];return ce.apply(null,Pu)}function Xf(){return i().length}function Yf(N){try{return ee.grow(N-We.byteLength+65535>>>16),tn(ee.buffer),1}catch(C){}}function Jf(N){var C=Xf();if(N<=C)return!1;var L=2147483648;if(N>L)return!1;for(var q=1;q<=4;q*=2){var de=C*(1+.2/q);de=Math.min(de,N+100663296);var le=Math.min(L,mt(Math.max(N,de),65536)),ce=Yf(le);if(ce)return!0}return!1}var Oe={inEventHandler:0,removeAllEventListeners:function(){for(var N=Oe.eventHandlers.length-1;N>=0;--N)Oe._removeHandler(N);Oe.eventHandlers=[],Oe.deferredCalls=[]},registerRemoveEventListeners:function(){Oe.removeEventListenersRegistered||(Dr.push(Oe.removeAllEventListeners),Oe.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(N,C,L){function q(ce,be){if(ce.length!=be.length)return!1;for(var at in ce)if(ce[at]!=be[at])return!1;return!0}for(var de in Oe.deferredCalls){var le=Oe.deferredCalls[de];if(le.targetFunction==N&&q(le.argsList,L))return}Oe.deferredCalls.push({targetFunction:N,precedence:C,argsList:L}),Oe.deferredCalls.sort(function(ce,be){return ce.precedence<be.precedence})},removeDeferredCalls:function(N){for(var C=0;C<Oe.deferredCalls.length;++C)Oe.deferredCalls[C].targetFunction==N&&(Oe.deferredCalls.splice(C,1),--C)},canPerformEventHandlerRequests:function(){return Oe.inEventHandler&&Oe.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(Oe.canPerformEventHandlerRequests())for(var N=0;N<Oe.deferredCalls.length;++N){var C=Oe.deferredCalls[N];Oe.deferredCalls.splice(N,1),--N,C.targetFunction.apply(null,C.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(N,C){for(var L=0;L<Oe.eventHandlers.length;++L)Oe.eventHandlers[L].target==N&&(!C||C==Oe.eventHandlers[L].eventTypeString)&&Oe._removeHandler(L--)},_removeHandler:function(N){var C=Oe.eventHandlers[N];C.target.removeEventListener(C.eventTypeString,C.eventListenerFunc,C.useCapture),Oe.eventHandlers.splice(N,1)},registerOrRemoveHandler:function(N){var C=function(q){++Oe.inEventHandler,Oe.currentEventHandler=N,Oe.runDeferredCalls(),N.handlerFunc(q),Oe.runDeferredCalls(),--Oe.inEventHandler};if(N.callbackfunc)N.eventListenerFunc=C,N.target.addEventListener(N.eventTypeString,C,N.useCapture),Oe.eventHandlers.push(N),Oe.registerRemoveEventListeners();else for(var L=0;L<Oe.eventHandlers.length;++L)Oe.eventHandlers[L].target==N.target&&Oe.eventHandlers[L].eventTypeString==N.eventTypeString&&Oe._removeHandler(L--)},queueEventHandlerOnThread_iiii:function(N,C,L,q,de){var le=Uu(),ce=xo(12);o()[ce>>2]=L,o()[ce+4>>2]=q,o()[ce+8>>2]=de,Rg(0,N,637534208,C,q,ce),bo(le)},getTargetThreadForEventCallback:function(N){switch(N){case 1:return 0;case 2:return ke.currentProxiedOperationCallerThread;default:return N}},getNodeNameForTarget:function(N){return N?N==window?"#window":N==screen?"#screen":N&&N.nodeName?N.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Qf(N){var C=it(N)+1,L=ws(C);return nt(N,L,C),L}function Zf(N,C,L,q){var de=Uu(),le=xo(12),ce=0;C&&(ce=Qf(C)),o()[le>>2]=ce,o()[le+4>>2]=L,o()[le+8>>2]=q,Rg(0,N,657457152,0,ce,le),bo(de)}function eg(N,C,L,q){C=C?Fe(C):"",Zf(N,C,L,q)}function tg(N){return N>2?Fe(N):N}var ng=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function ag(N){N=tg(N);var C=ng[N]||(typeof document!="undefined"?document.querySelector(N):void 0);return C}function Lu(N){return ag(N)}function Vp(N,C,L){var q=Lu(N);if(!q)return-4;if(q.canvasSharedPtr&&(o()[q.canvasSharedPtr>>2]=C,o()[q.canvasSharedPtr+4>>2]=L),q.offscreenCanvas||!q.controlTransferredOffscreen){q.offscreenCanvas&&(q=q.offscreenCanvas);var de=!1;if(q.GLctxObject&&q.GLctxObject.GLctx){var le=q.GLctxObject.GLctx.getParameter(2978);de=le[0]===0&&le[1]===0&&le[2]===q.width&&le[3]===q.height}q.width=C,q.height=L,de&&q.GLctxObject.GLctx.viewport(0,0,C,L)}else if(q.canvasSharedPtr){var ce=o()[q.canvasSharedPtr+8>>2];return eg(ce,N,C,L),1}else return-4;return 0}function Up(N,C,L){return k?Mr(2,1,N,C,L):Vp(N,C,L)}function rg(N,C,L){var q=Lu(N);return q?Vp(N,C,L):Up(N,C,L)}function sg(N){}function ig(N,C){}function og(N){var C=N.getExtension("ANGLE_instanced_arrays");if(C)return N.vertexAttribDivisor=function(L,q){C.vertexAttribDivisorANGLE(L,q)},N.drawArraysInstanced=function(L,q,de,le){C.drawArraysInstancedANGLE(L,q,de,le)},N.drawElementsInstanced=function(L,q,de,le,ce){C.drawElementsInstancedANGLE(L,q,de,le,ce)},1}function lg(N){var C=N.getExtension("OES_vertex_array_object");if(C)return N.createVertexArray=function(){return C.createVertexArrayOES()},N.deleteVertexArray=function(L){C.deleteVertexArrayOES(L)},N.bindVertexArray=function(L){C.bindVertexArrayOES(L)},N.isVertexArray=function(L){return C.isVertexArrayOES(L)},1}function ug(N){var C=N.getExtension("WEBGL_draw_buffers");if(C)return N.drawBuffers=function(L,q){C.drawBuffersWEBGL(L,q)},1}function cg(N){return!!(N.multiDrawWebgl=N.getExtension("WEBGL_multi_draw"))}var et={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(N){et.lastError||(et.lastError=N)},getNewId:function(N){for(var C=et.counter++,L=N.length;L<C;L++)N[L]=null;return C},getSource:function(N,C,L,q){for(var de="",le=0;le<C;++le){var ce=q?o()[q+le*4>>2]:-1;de+=Fe(o()[L+le*4>>2],ce<0?void 0:ce)}return de},createContext:function(N,C){var L=N.getContext("webgl",C);if(!L)return 0;var q=et.registerContext(L,C);return q},registerContext:function(N,C){var L=ws(8);o()[L+4>>2]=yo();var q={handle:L,attributes:C,version:C.majorVersion,GLctx:N};return N.canvas&&(N.canvas.GLctxObject=q),et.contexts[L]=q,(typeof C.enableExtensionsByDefault=="undefined"||C.enableExtensionsByDefault)&&et.initExtensions(q),L},makeContextCurrent:function(N){return et.currentContext=et.contexts[N],u.ctx=Pr=et.currentContext&&et.currentContext.GLctx,!(N&&!Pr)},getContext:function(N){return et.contexts[N]},deleteContext:function(N){et.currentContext===et.contexts[N]&&(et.currentContext=null),typeof Oe=="object"&&Oe.removeAllHandlersOnTarget(et.contexts[N].GLctx.canvas),et.contexts[N]&&et.contexts[N].GLctx.canvas&&(et.contexts[N].GLctx.canvas.GLctxObject=void 0),Vu(et.contexts[N].handle),et.contexts[N]=null},initExtensions:function(N){if(N||(N=et.currentContext),!N.initExtensionsDone){N.initExtensionsDone=!0;var C=N.GLctx;og(C),lg(C),ug(C),C.disjointTimerQueryExt=C.getExtension("EXT_disjoint_timer_query"),cg(C);var L=C.getSupportedExtensions()||[];L.forEach(function(q){q.indexOf("lose_context")<0&&q.indexOf("debug")<0&&C.getExtension(q)})}},populateUniformTable:function(N){for(var C=et.programs[N],L=et.programInfos[N]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},q=L.uniforms,de=Pr.getProgramParameter(C,35718),le=0;le<de;++le){var ce=Pr.getActiveUniform(C,le),be=ce.name;L.maxUniformLength=Math.max(L.maxUniformLength,be.length+1),be.slice(-1)=="]"&&(be=be.slice(0,be.lastIndexOf("[")));var at=Pr.getUniformLocation(C,be);if(at){var Gt=et.getNewId(et.uniforms);q[be]=[ce.size,Gt],et.uniforms[Gt]=at;for(var Pt=1;Pt<ce.size;++Pt){var Lr=be+"["+Pt+"]";at=Pr.getUniformLocation(C,Lr),Gt=et.getNewId(et.uniforms),et.uniforms[Gt]=at}}}}},pg=["default","low-power","high-performance"];function dg(N,C){var L=C>>2,q=o()[L+(24>>2)],de={alpha:!!o()[L+(0>>2)],depth:!!o()[L+(4>>2)],stencil:!!o()[L+(8>>2)],antialias:!!o()[L+(12>>2)],premultipliedAlpha:!!o()[L+(16>>2)],preserveDrawingBuffer:!!o()[L+(20>>2)],powerPreference:pg[q],failIfMajorPerformanceCaveat:!!o()[L+(28>>2)],majorVersion:o()[L+(32>>2)],minorVersion:o()[L+(36>>2)],enableExtensionsByDefault:o()[L+(40>>2)],explicitSwapControl:o()[L+(44>>2)],proxyContextToMainThread:o()[L+(48>>2)],renderViaOffscreenBackBuffer:o()[L+(52>>2)]},le=Lu(N);if(!le||de.explicitSwapControl)return 0;var ce=et.createContext(le,de);return ce}function hg(N,C){return dg(N,C)}var fo={mappings:{},buffers:[null,[],[]],printChar:function(N,C){var L=fo.buffers[N];C===0||C===10?((N===1?K:j)(Re(L,0)),L.length=0):L.push(C)},varargs:void 0,get:function(){fo.varargs+=4;var N=o()[fo.varargs-4>>2];return N},getStr:function(N){var C=Fe(N);return C},get64:function(N,C){return N}};function Gp(N){return k?Mr(3,1,N):0}function Hp(N,C,L,q,de){if(k)return Mr(4,1,N,C,L,q,de)}function jp(N,C,L,q){if(k)return Mr(5,1,N,C,L,q);for(var de=0,le=0;le<L;le++){for(var ce=o()[C+le*8>>2],be=o()[C+(le*8+4)>>2],at=0;at<be;at++)fo.printChar(N,i()[ce+at]);de+=be}return o()[q>>2]=de,0}function mg(N){var C=ke.threadExitHandlers.pop();N&&C()}function fg(N,C){ke.threadExitHandlers.push(function(){sa.get(N)(C)})}function qp(N){if(k)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var C=ke.getNewWorker();if(C.pthread!==void 0)throw"Internal error!";if(!N.pthread_ptr)throw"Internal error, no pthread ptr!";ke.runningWorkers.push(C);for(var L=ws(128*4),q=0;q<128;++q)o()[L+q*4>>2]=0;var de=N.stackBase+N.stackSize,le=ke.pthreads[N.pthread_ptr]={worker:C,stackBase:N.stackBase,stackSize:N.stackSize,allocatedOwnStack:N.allocatedOwnStack,threadInfoStruct:N.pthread_ptr},ce=le.threadInfoStruct>>2;Atomics.store(l(),ce+(64>>2),N.detached),Atomics.store(l(),ce+(100>>2),L),Atomics.store(l(),ce+(40>>2),le.threadInfoStruct),Atomics.store(l(),ce+(80>>2),N.stackSize),Atomics.store(l(),ce+(76>>2),de),Atomics.store(l(),ce+(104>>2),N.stackSize),Atomics.store(l(),ce+(104+8>>2),de),Atomics.store(l(),ce+(104+12>>2),N.detached);var be=_w(),at=be+40;Atomics.store(l(),ce+(172>>2),at),C.pthread=le;var Gt={cmd:"run",start_routine:N.startRoutine,arg:N.arg,threadInfoStruct:N.pthread_ptr,stackBase:N.stackBase,stackSize:N.stackSize};C.runPthread=function(){Gt.time=performance.now(),C.postMessage(Gt,N.transferList)},C.loaded&&(C.runPthread(),delete C.runPthread)}function gg(N,C,L,q){if(typeof SharedArrayBuffer=="undefined")return j("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!N)return j("pthread_create called with a null thread pointer!"),28;var de=[],le=0;if(k&&(de.length===0||le))return $w(687865856,N,C,L,q);if(le)return le;var ce=0,be=0,at=0;C&&C!=-1?(ce=o()[C>>2],ce+=81920,be=o()[C+8>>2],at=o()[C+12>>2]!==0):ce=2097152;var Gt=be==0;Gt?be=Mw(16,ce):(be-=ce,me(be>0));for(var Pt=ws(228),Lr=0;Lr<228>>2;++Lr)l()[(Pt>>2)+Lr]=0;o()[N>>2]=Pt,o()[Pt+12>>2]=Pt;var wo=Pt+152;o()[wo>>2]=wo;var Nn={stackBase:be,stackSize:ce,allocatedOwnStack:Gt,detached:at,startRoutine:L,pthread_ptr:Pt,arg:q,transferList:de};return k?(Nn.cmd="spawnThread",postMessage(Nn,de)):qp(Nn),0}function Kp(N){if(k)return Mr(6,1,N);switch(N){case 30:return 16384;case 85:var C=2147483648;return C/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return Lf(28),-1}k||ke.initMainThreadBlock();var Pr,yg=[null,zf,Up,Gp,Hp,jp,Kp],bg={e:Pf,r:Of,x:Wf,b:Bf,y:Vf,j:Uf,c:Gf,d:mo,f:vs,p:Hf,z:jf,u:Kf,q:Jf,v:rg,i:sg,t:ig,w:hg,m:Gp,n:Hp,g:jp,o:Ef,a:ee||u.wasmMemory,k:mg,l:fg,h:gg,s:Kp},Sw=_f(),Xp=u.___wasm_call_ctors=function(){return(Xp=u.___wasm_call_ctors=u.asm.A).apply(null,arguments)},xg=u._init=function(){return(xg=u._init=u.asm.B).apply(null,arguments)},vg=u._register_tensor=function(){return(vg=u._register_tensor=u.asm.C).apply(null,arguments)},wg=u._dispose_data=function(){return(wg=u._dispose_data=u.asm.D).apply(null,arguments)},kg=u._dispose=function(){return(kg=u._dispose=u.asm.E).apply(null,arguments)},Ig=u._Abs=function(){return(Ig=u._Abs=u.asm.G).apply(null,arguments)},Tg=u._Add=function(){return(Tg=u._Add=u.asm.H).apply(null,arguments)},Ng=u._AddN=function(){return(Ng=u._AddN=u.asm.I).apply(null,arguments)},Sg=u._ArgMax=function(){return(Sg=u._ArgMax=u.asm.J).apply(null,arguments)},Cg=u._AvgPool=function(){return(Cg=u._AvgPool=u.asm.K).apply(null,arguments)},_g=u._BatchMatMul=function(){return(_g=u._BatchMatMul=u.asm.L).apply(null,arguments)},Eg=u._Ceil=function(){return(Eg=u._Ceil=u.asm.M).apply(null,arguments)},Fg=u._ClipByValue=function(){return(Fg=u._ClipByValue=u.asm.N).apply(null,arguments)},Ag=u._Conv2D=function(){return(Ag=u._Conv2D=u.asm.O).apply(null,arguments)},Yp=u._Conv2DBackpropInput=function(){return(Yp=u._Conv2DBackpropInput=u.asm.P).apply(null,arguments)},Jp=u._Cos=function(){return(Jp=u._Cos=u.asm.Q).apply(null,arguments)},zu=u._CropAndResize=function(){return(zu=u._CropAndResize=u.asm.R).apply(null,arguments)},go=u._Cumsum=function(){return(go=u._Cumsum=u.asm.S).apply(null,arguments)},$g=u._DepthToSpace=function(){return($g=u._DepthToSpace=u.asm.T).apply(null,arguments)},Wu=u._DepthwiseConv2dNative=function(){return(Wu=u._DepthwiseConv2dNative=u.asm.U).apply(null,arguments)},X=u._Equal=function(){return(X=u._Equal=u.asm.V).apply(null,arguments)},ae=u._Exp=function(){return(ae=u._Exp=u.asm.W).apply(null,arguments)},Ne=u._FlipLeftRight=function(){return(Ne=u._FlipLeftRight=u.asm.X).apply(null,arguments)},Ye=u._Floor=function(){return(Ye=u._Floor=u.asm.Y).apply(null,arguments)},Et=u._FloorDiv=function(){return(Et=u._FloorDiv=u.asm.Z).apply(null,arguments)},yt=u._FusedBatchNorm=function(){return(yt=u._FusedBatchNorm=u.asm._).apply(null,arguments)},Ue=u._FusedConv2D=function(){return(Ue=u._FusedConv2D=u.asm.$).apply(null,arguments)},He=u._FusedDepthwiseConv2D=function(){return(He=u._FusedDepthwiseConv2D=u.asm.aa).apply(null,arguments)},nn=u._Gather=function(){return(nn=u._Gather=u.asm.ba).apply(null,arguments)},pr=u._GatherNd=function(){return(pr=u._GatherNd=u.asm.ca).apply(null,arguments)},dr=u._Greater=function(){return(dr=u._Greater=u.asm.da).apply(null,arguments)},Qp=u._GreaterEqual=function(){return(Qp=u._GreaterEqual=u.asm.ea).apply(null,arguments)},Bu=u._LeakyRelu=function(){return(Bu=u._LeakyRelu=u.asm.fa).apply(null,arguments)},Xn=u._Less=function(){return(Xn=u._Less=u.asm.ga).apply(null,arguments)},Or=u._LessEqual=function(){return(Or=u._LessEqual=u.asm.ha).apply(null,arguments)},Zp=u._Log=function(){return(Zp=u._Log=u.asm.ia).apply(null,arguments)},MC=u._LogicalAnd=function(){return(MC=u._LogicalAnd=u.asm.ja).apply(null,arguments)},PC=u._Max=function(){return(PC=u._Max=u.asm.ka).apply(null,arguments)},OC=u._MaxPool=function(){return(OC=u._MaxPool=u.asm.la).apply(null,arguments)},LC=u._Maximum=function(){return(LC=u._Maximum=u.asm.ma).apply(null,arguments)},zC=u._Mean=function(){return(zC=u._Mean=u.asm.na).apply(null,arguments)},WC=u._Min=function(){return(WC=u._Min=u.asm.oa).apply(null,arguments)},BC=u._Minimum=function(){return(BC=u._Minimum=u.asm.pa).apply(null,arguments)},VC=u._Multiply=function(){return(VC=u._Multiply=u.asm.qa).apply(null,arguments)},UC=u._Neg=function(){return(UC=u._Neg=u.asm.ra).apply(null,arguments)},GC=u._NonMaxSuppressionV3=function(){return(GC=u._NonMaxSuppressionV3=u.asm.sa).apply(null,arguments)},HC=u._NonMaxSuppressionV4=function(){return(HC=u._NonMaxSuppressionV4=u.asm.ta).apply(null,arguments)},jC=u._NonMaxSuppressionV5=function(){return(jC=u._NonMaxSuppressionV5=u.asm.ua).apply(null,arguments)},qC=u._NotEqual=function(){return(qC=u._NotEqual=u.asm.va).apply(null,arguments)},KC=u._OneHot=function(){return(KC=u._OneHot=u.asm.wa).apply(null,arguments)},XC=u._PadV2=function(){return(XC=u._PadV2=u.asm.xa).apply(null,arguments)},YC=u._Pow=function(){return(YC=u._Pow=u.asm.ya).apply(null,arguments)},JC=u._Prelu=function(){return(JC=u._Prelu=u.asm.za).apply(null,arguments)},QC=u._Prod=function(){return(QC=u._Prod=u.asm.Aa).apply(null,arguments)},ZC=u._RealDiv=function(){return(ZC=u._RealDiv=u.asm.Ba).apply(null,arguments)},e_=u._Relu=function(){return(e_=u._Relu=u.asm.Ca).apply(null,arguments)},t_=u._Relu6=function(){return(t_=u._Relu6=u.asm.Da).apply(null,arguments)},n_=u._ResizeBilinear=function(){return(n_=u._ResizeBilinear=u.asm.Ea).apply(null,arguments)},a_=u._Reverse=function(){return(a_=u._Reverse=u.asm.Fa).apply(null,arguments)},r_=u._RotateWithOffset=function(){return(r_=u._RotateWithOffset=u.asm.Ga).apply(null,arguments)},s_=u._Round=function(){return(s_=u._Round=u.asm.Ha).apply(null,arguments)},i_=u._Rsqrt=function(){return(i_=u._Rsqrt=u.asm.Ia).apply(null,arguments)},o_=u._ScatterNd=function(){return(o_=u._ScatterNd=u.asm.Ja).apply(null,arguments)},l_=u._SelectV2=function(){return(l_=u._SelectV2=u.asm.Ka).apply(null,arguments)},u_=u._Sigmoid=function(){return(u_=u._Sigmoid=u.asm.La).apply(null,arguments)},c_=u._Sin=function(){return(c_=u._Sin=u.asm.Ma).apply(null,arguments)},p_=u._Softmax=function(){return(p_=u._Softmax=u.asm.Na).apply(null,arguments)},d_=u._Sqrt=function(){return(d_=u._Sqrt=u.asm.Oa).apply(null,arguments)},h_=u._Square=function(){return(h_=u._Square=u.asm.Pa).apply(null,arguments)},m_=u._SquaredDifference=function(){return(m_=u._SquaredDifference=u.asm.Qa).apply(null,arguments)},f_=u._Step=function(){return(f_=u._Step=u.asm.Ra).apply(null,arguments)},g_=u._StridedSlice=function(){return(g_=u._StridedSlice=u.asm.Sa).apply(null,arguments)},y_=u._Sub=function(){return(y_=u._Sub=u.asm.Ta).apply(null,arguments)},b_=u._Sum=function(){return(b_=u._Sum=u.asm.Ua).apply(null,arguments)},x_=u._Tanh=function(){return(x_=u._Tanh=u.asm.Va).apply(null,arguments)},v_=u._Tile=function(){return(v_=u._Tile=u.asm.Wa).apply(null,arguments)},w_=u._TopK=function(){return(w_=u._TopK=u.asm.Xa).apply(null,arguments)},k_=u._Transpose=function(){return(k_=u._Transpose=u.asm.Ya).apply(null,arguments)},I_=u.__FusedMatMul=function(){return(I_=u.__FusedMatMul=u.asm.Za).apply(null,arguments)},ws=u._malloc=function(){return(ws=u._malloc=u.asm._a).apply(null,arguments)},Vu=u._free=function(){return(Vu=u._free=u.asm.$a).apply(null,arguments)},Cw=u.___errno_location=function(){return(Cw=u.___errno_location=u.asm.ab).apply(null,arguments)},_w=u._emscripten_get_global_libc=function(){return(_w=u._emscripten_get_global_libc=u.asm.bb).apply(null,arguments)},yo=u._pthread_self=function(){return(yo=u._pthread_self=u.asm.cb).apply(null,arguments)},Ew=u.___pthread_tsd_run_dtors=function(){return(Ew=u.___pthread_tsd_run_dtors=u.asm.db).apply(null,arguments)},Dg=u._emscripten_main_thread_process_queued_calls=function(){return(Dg=u._emscripten_main_thread_process_queued_calls=u.asm.eb).apply(null,arguments)},T_=u._emscripten_current_thread_process_queued_calls=function(){return(T_=u._emscripten_current_thread_process_queued_calls=u.asm.fb).apply(null,arguments)},Fw=u._emscripten_register_main_browser_thread_id=function(){return(Fw=u._emscripten_register_main_browser_thread_id=u.asm.gb).apply(null,arguments)},Aw=u.__emscripten_do_dispatch_to_thread=function(){return(Aw=u.__emscripten_do_dispatch_to_thread=u.asm.hb).apply(null,arguments)},$w=u._emscripten_sync_run_in_main_thread_4=function(){return($w=u._emscripten_sync_run_in_main_thread_4=u.asm.ib).apply(null,arguments)},Dw=u._emscripten_run_in_main_runtime_thread_js=function(){return(Dw=u._emscripten_run_in_main_runtime_thread_js=u.asm.jb).apply(null,arguments)},Rg=u.__emscripten_call_on_thread=function(){return(Rg=u.__emscripten_call_on_thread=u.asm.kb).apply(null,arguments)},N_=u._emscripten_tls_init=function(){return(N_=u._emscripten_tls_init=u.asm.lb).apply(null,arguments)},ed=u.__emscripten_thread_init=function(){return(ed=u.__emscripten_thread_init=u.asm.mb).apply(null,arguments)},Uu=u.stackSave=function(){return(Uu=u.stackSave=u.asm.nb).apply(null,arguments)},bo=u.stackRestore=function(){return(bo=u.stackRestore=u.asm.ob).apply(null,arguments)},xo=u.stackAlloc=function(){return(xo=u.stackAlloc=u.asm.pb).apply(null,arguments)},Rw=u._emscripten_stack_set_limits=function(){return(Rw=u._emscripten_stack_set_limits=u.asm.qb).apply(null,arguments)},Mw=u._memalign=function(){return(Mw=u._memalign=u.asm.rb).apply(null,arguments)},Pw=u.__emscripten_allow_main_runtime_queued_calls=9880,vo=u.__emscripten_main_thread_futex=11368;u.cwrap=_e,u.PThread=ke,u.PThread=ke,u.wasmMemory=ee,u.ExitStatus=Gu;var td;function Gu(N){this.name="ExitStatus",this.message="Program terminated with exit("+N+")",this.status=N}xs=function N(){td||Mg(),td||(xs=N)};function Mg(N){if(N=N||f,ur>0)return;if(k){p(u),postMessage({cmd:"loaded"});return}if(wf(),ur>0)return;function C(){td||(td=!0,u.calledRun=!0,!oe&&(Rp(),kf(),p(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),In()))}u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),C()},1)):C()}u.run=Mg;function S_(N,C){if(!(C&&ie&&N===0)){if(!C&&k)throw postMessage({cmd:"exitProcess",returnCode:N}),new Gu(N);ie||(ke.terminateAllThreads(),fe=N,Mp(),u.onExit&&u.onExit(N),oe=!0),y(N,new Gu(N))}}if(u.preInit)for(typeof u.preInit=="function"&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();return k&&(ie=!1,ke.initWorker()),Mg(),r.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}),eE=Tt((e,t)=>{var n=function(){var a=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(a=a||__filename),function(r){r=r||{};var s=typeof r!="undefined"?r:{},i,o;s.ready=new Promise(function(X,ae){i=X,o=ae});var l={},c;for(c in s)s.hasOwnProperty(c)&&(l[c]=s[c]);var u=[],p="./this.program",d=function(X,ae){throw ae},h=!1,m=!1,f=!1,g=!1;h=typeof window=="object",m=typeof importScripts=="function",f=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g=!h&&!f&&!m;var y="";function b(X){return s.locateFile?s.locateFile(X,y):y+X}var x,v,T,k,S,F;f?(m?y=Hu().dirname(y)+"/":y=__dirname+"/",x=function(X,ae){return S||(S=require("fs")),F||(F=Hu()),X=F.normalize(X),S.readFileSync(X,ae?null:"utf8")},T=function(X){var ae=x(X,!0);return ae.buffer||(ae=new Uint8Array(ae)),K(ae.buffer),ae},process.argv.length>1&&(p=process.argv[1].replace(/\\/g,"/")),u=process.argv.slice(2),process.on("uncaughtException",function(X){if(!(X instanceof $g))throw X}),process.on("unhandledRejection",ka),d=function(X){process.exit(X)},s.inspect=function(){return"[Emscripten Module object]"}):g?(typeof read!="undefined"&&(x=function(X){return read(X)}),T=function(X){var ae;return typeof readbuffer=="function"?new Uint8Array(readbuffer(X)):(ae=read(X,"binary"),K(typeof ae=="object"),ae)},typeof scriptArgs!="undefined"?u=scriptArgs:typeof arguments!="undefined"&&(u=arguments),typeof quit=="function"&&(d=function(X){quit(X)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(h||m)&&(m?y=self.location.href:typeof document!="undefined"&&document.currentScript&&(y=document.currentScript.src),a&&(y=a),y.indexOf("blob:")!==0?y=y.substr(0,y.lastIndexOf("/")+1):y="",x=function(X){var ae=new XMLHttpRequest;return ae.open("GET",X,!1),ae.send(null),ae.responseText},m&&(T=function(X){var ae=new XMLHttpRequest;return ae.open("GET",X,!1),ae.responseType="arraybuffer",ae.send(null),new Uint8Array(ae.response)}),v=function(X,ae,Ne){var Ye=new XMLHttpRequest;Ye.open("GET",X,!0),Ye.responseType="arraybuffer",Ye.onload=function(){if(Ye.status==200||Ye.status==0&&Ye.response){ae(Ye.response);return}Ne()},Ye.onerror=Ne,Ye.send(null)},k=function(X){document.title=X});var A=s.print||console.log.bind(console),R=s.printErr||console.warn.bind(console);for(c in l)l.hasOwnProperty(c)&&(s[c]=l[c]);l=null,s.arguments&&(u=s.arguments),s.thisProgram&&(p=s.thisProgram),s.quit&&(d=s.quit);var P;s.wasmBinary&&(P=s.wasmBinary);var z=s.noExitRuntime||!0;typeof WebAssembly!="object"&&ka("no native wasm support detected");var V,G=!1,H;function K(X,ae){X||ka("Assertion failed: "+ae)}function j(X){var ae=s["_"+X];return K(ae,"Cannot call unknown function "+X+", make sure it is exported"),ae}function te(X,ae,Ne,Ye,Et){var yt={string:function(Xn){var Or=0;if(Xn!=null&&Xn!==0){var Zp=(Xn.length<<2)+1;Or=zu(Zp),pe(Xn,Or,Zp)}return Or},array:function(Xn){var Or=zu(Xn.length);return oe(Xn,Or),Or}};function Ue(Xn){return ae==="string"?ie(Xn):ae==="boolean"?Boolean(Xn):Xn}var He=j(X),nn=[],pr=0;if(Ye)for(var dr=0;dr<Ye.length;dr++){var Qp=yt[Ne[dr]];Qp?(pr===0&&(pr=Yp()),nn[dr]=Qp(Ye[dr])):nn[dr]=Ye[dr]}var Bu=He.apply(null,nn);return Bu=Ue(Bu),pr!==0&&Jp(pr),Bu}function Q(X,ae,Ne,Ye){Ne=Ne||[];var Et=Ne.every(function(Ue){return Ue==="number"}),yt=ae!=="string";return yt&&Et&&!Ye?j(X):function(){return te(X,ae,Ne,arguments,Ye)}}var se=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function ne(X,ae,Ne){for(var Ye=ae+Ne,Et=ae;X[Et]&&!(Et>=Ye);)++Et;if(Et-ae>16&&X.subarray&&se)return se.decode(X.subarray(ae,Et));for(var yt="";ae<Et;){var Ue=X[ae++];if(!(Ue&128)){yt+=String.fromCharCode(Ue);continue}var He=X[ae++]&63;if((Ue&224)==192){yt+=String.fromCharCode((Ue&31)<<6|He);continue}var nn=X[ae++]&63;if((Ue&240)==224?Ue=(Ue&15)<<12|He<<6|nn:Ue=(Ue&7)<<18|He<<12|nn<<6|X[ae++]&63,Ue<65536)yt+=String.fromCharCode(Ue);else{var pr=Ue-65536;yt+=String.fromCharCode(55296|pr>>10,56320|pr&1023)}}return yt}function ie(X,ae){return X?ne(Te,X,ae):""}function ee(X,ae,Ne,Ye){if(!(Ye>0))return 0;for(var Et=Ne,yt=Ne+Ye-1,Ue=0;Ue<X.length;++Ue){var He=X.charCodeAt(Ue);if(He>=55296&&He<=57343){var nn=X.charCodeAt(++Ue);He=65536+((He&1023)<<10)|nn&1023}if(He<=127){if(Ne>=yt)break;ae[Ne++]=He}else if(He<=2047){if(Ne+1>=yt)break;ae[Ne++]=192|He>>6,ae[Ne++]=128|He&63}else if(He<=65535){if(Ne+2>=yt)break;ae[Ne++]=224|He>>12,ae[Ne++]=128|He>>6&63,ae[Ne++]=128|He&63}else{if(Ne+3>=yt)break;ae[Ne++]=240|He>>18,ae[Ne++]=128|He>>12&63,ae[Ne++]=128|He>>6&63,ae[Ne++]=128|He&63}}return ae[Ne]=0,Ne-Et}function pe(X,ae,Ne){return ee(X,Te,ae,Ne)}function oe(X,ae){we.set(X,ae)}function fe(X,ae){return X%ae>0&&(X+=ae-X%ae),X}var me,we,Te,_e,Re,Fe,tt,nt,it;function Xe(X){me=X,s.HEAP8=we=new Int8Array(X),s.HEAP16=_e=new Int16Array(X),s.HEAP32=Fe=new Int32Array(X),s.HEAPU8=Te=new Uint8Array(X),s.HEAPU16=Re=new Uint16Array(X),s.HEAPU32=tt=new Uint32Array(X),s.HEAPF32=nt=new Float32Array(X),s.HEAPF64=it=new Float64Array(X)}var mt=s.INITIAL_MEMORY||16777216,We,wn=[],It=[],qn=[],en=[],kn=!1;It.push({func:function(){Wp()}});function Kn(){if(s.preRun)for(typeof s.preRun=="function"&&(s.preRun=[s.preRun]);s.preRun.length;)Wa(s.preRun.shift());Rr(wn)}function Mn(){kn=!0,Rr(It)}function pn(){Rr(qn)}function tn(){if(s.postRun)for(typeof s.postRun=="function"&&(s.postRun=[s.postRun]);s.postRun.length;)sa(s.postRun.shift());Rr(en)}function Wa(X){wn.unshift(X)}function sa(X){en.unshift(X)}var ia=0,$r=null,lr=null;function Dr(X){ia++,s.monitorRunDependencies&&s.monitorRunDependencies(ia)}function co(X){if(ia--,s.monitorRunDependencies&&s.monitorRunDependencies(ia),ia==0&&($r!==null&&(clearInterval($r),$r=null),lr)){var ae=lr;lr=null,ae()}}s.preloadedImages={},s.preloadedAudios={};function ka(X){s.onAbort&&s.onAbort(X),X+="",R(X),G=!0,H=1,X="abort("+X+"). Build with -s ASSERTIONS=1 for more info.";var ae=new WebAssembly.RuntimeError(X);throw o(ae),ae}function Dp(X,ae){return String.prototype.startsWith?X.startsWith(ae):X.indexOf(ae)===0}var wf="data:application/octet-stream;base64,";function Rp(X){return Dp(X,wf)}var kf="file://";function Mp(X){return Dp(X,kf)}var In="tfjs-backend-wasm.wasm";Rp(In)||(In=b(In));function Pp(X){try{if(X==In&&P)return new Uint8Array(P);if(T)return T(X);throw"both async and sync fetching of the wasm failed"}catch(ae){ka(ae)}}function If(){if(!P&&(h||m)){if(typeof fetch=="function"&&!Mp(In))return fetch(In,{credentials:"same-origin"}).then(function(X){if(!X.ok)throw"failed to load wasm binary file at '"+In+"'";return X.arrayBuffer()}).catch(function(){return Pp(In)});if(v)return new Promise(function(X,ae){v(In,function(Ne){X(new Uint8Array(Ne))},ae)})}return Promise.resolve().then(function(){return Pp(In)})}function ur(){var X={a:Tn};function ae(Ue,He){var nn=Ue.exports;s.asm=nn,V=s.asm.g,Xe(V.buffer),We=s.asm.m,co("wasm-instantiate")}Dr("wasm-instantiate");function Ne(Ue){ae(Ue.instance)}function Ye(Ue){return If().then(function(He){return WebAssembly.instantiate(He,X)}).then(Ue,function(He){R("failed to asynchronously prepare wasm: "+He),ka(He)})}function Et(){return!P&&typeof WebAssembly.instantiateStreaming=="function"&&!Rp(In)&&!Mp(In)&&typeof fetch=="function"?fetch(In,{credentials:"same-origin"}).then(function(Ue){var He=WebAssembly.instantiateStreaming(Ue,X);return He.then(Ne,function(nn){return R("wasm streaming compile failed: "+nn),R("falling back to ArrayBuffer instantiation"),Ye(Ne)})}):Ye(Ne)}if(s.instantiateWasm)try{var yt=s.instantiateWasm(X,ae);return yt}catch(Ue){return R("Module.instantiateWasm callback failed with error: "+Ue),!1}return Et().catch(o),{}}function Rr(X){for(;X.length>0;){var ae=X.shift();if(typeof ae=="function"){ae(s);continue}var Ne=ae.func;typeof Ne=="number"?ae.arg===void 0?We.get(Ne)():We.get(Ne)(ae.arg):Ne(ae.arg===void 0?null:ae.arg)}}function xs(){ka()}function Tf(X,ae,Ne){Te.copyWithin(X,ae,ae+Ne)}function Nf(){return Te.length}function cr(X){try{return V.grow(X-me.byteLength+65535>>>16),Xe(V.buffer),1}catch(ae){}}function Op(X){var ae=Nf(),Ne=2147483648;if(X>Ne)return!1;for(var Ye=1;Ye<=4;Ye*=2){var Et=ae*(1+.2/Ye);Et=Math.min(Et,X+100663296);var yt=Math.min(Ne,fe(Math.max(X,Et),65536)),Ue=cr(yt);if(Ue)return!0}return!1}var po={mappings:{},buffers:[null,[],[]],printChar:function(X,ae){var Ne=po.buffers[X];ae===0||ae===10?((X===1?A:R)(ne(Ne,0)),Ne.length=0):Ne.push(ae)},varargs:void 0,get:function(){po.varargs+=4;var X=Fe[po.varargs-4>>2];return X},getStr:function(X){var ae=ie(X);return ae},get64:function(X,ae){return X}};function Lp(X){return 0}function Sf(X,ae,Ne,Ye,Et){}function zp(X,ae,Ne,Ye){for(var Et=0,yt=0;yt<Ne;yt++){for(var Ue=Fe[ae+yt*8>>2],He=Fe[ae+(yt*8+4)>>2],nn=0;nn<He;nn++)po.printChar(X,Te[Ue+nn]);Et+=He}return Fe[Ye>>2]=Et,0}var Tn={a:xs,d:Tf,e:Op,f:Lp,c:Sf,b:zp},Cf=ur(),Wp=s.___wasm_call_ctors=function(){return(Wp=s.___wasm_call_ctors=s.asm.h).apply(null,arguments)},_f=s._init=function(){return(_f=s._init=s.asm.i).apply(null,arguments)},Bp=s._register_tensor=function(){return(Bp=s._register_tensor=s.asm.j).apply(null,arguments)},Ef=s._dispose_data=function(){return(Ef=s._dispose_data=s.asm.k).apply(null,arguments)},ho=s._dispose=function(){return(ho=s._dispose=s.asm.l).apply(null,arguments)},mo=s._Abs=function(){return(mo=s._Abs=s.asm.n).apply(null,arguments)},Ff=s._Add=function(){return(Ff=s._Add=s.asm.o).apply(null,arguments)},Af=s._AddN=function(){return(Af=s._AddN=s.asm.p).apply(null,arguments)},$f=s._ArgMax=function(){return($f=s._ArgMax=s.asm.q).apply(null,arguments)},ke=s._AvgPool=function(){return(ke=s._AvgPool=s.asm.r).apply(null,arguments)},Df=s._BatchMatMul=function(){return(Df=s._BatchMatMul=s.asm.s).apply(null,arguments)},Rf=s._Ceil=function(){return(Rf=s._Ceil=s.asm.t).apply(null,arguments)},Mf=s._ClipByValue=function(){return(Mf=s._ClipByValue=s.asm.u).apply(null,arguments)},Pf=s._Conv2D=function(){return(Pf=s._Conv2D=s.asm.v).apply(null,arguments)},Of=s._Conv2DBackpropInput=function(){return(Of=s._Conv2DBackpropInput=s.asm.w).apply(null,arguments)},vs=s._Cos=function(){return(vs=s._Cos=s.asm.x).apply(null,arguments)},Lf=s._CropAndResize=function(){return(Lf=s._CropAndResize=s.asm.y).apply(null,arguments)},zf=s._Cumsum=function(){return(zf=s._Cumsum=s.asm.z).apply(null,arguments)},Wf=s._DepthToSpace=function(){return(Wf=s._DepthToSpace=s.asm.A).apply(null,arguments)},Bf=s._DepthwiseConv2dNative=function(){return(Bf=s._DepthwiseConv2dNative=s.asm.B).apply(null,arguments)},Vf=s._Equal=function(){return(Vf=s._Equal=s.asm.C).apply(null,arguments)},Uf=s._Exp=function(){return(Uf=s._Exp=s.asm.D).apply(null,arguments)},Gf=s._FlipLeftRight=function(){return(Gf=s._FlipLeftRight=s.asm.E).apply(null,arguments)},Hf=s._Floor=function(){return(Hf=s._Floor=s.asm.F).apply(null,arguments)},jf=s._FloorDiv=function(){return(jf=s._FloorDiv=s.asm.G).apply(null,arguments)},Mr=s._FusedBatchNorm=function(){return(Mr=s._FusedBatchNorm=s.asm.H).apply(null,arguments)},Pu=s._FusedConv2D=function(){return(Pu=s._FusedConv2D=s.asm.I).apply(null,arguments)},Ou=s._FusedDepthwiseConv2D=function(){return(Ou=s._FusedDepthwiseConv2D=s.asm.J).apply(null,arguments)},qf=s._Gather=function(){return(qf=s._Gather=s.asm.K).apply(null,arguments)},Kf=s._GatherNd=function(){return(Kf=s._GatherNd=s.asm.L).apply(null,arguments)},Xf=s._Greater=function(){return(Xf=s._Greater=s.asm.M).apply(null,arguments)},Yf=s._GreaterEqual=function(){return(Yf=s._GreaterEqual=s.asm.N).apply(null,arguments)},Jf=s._LeakyRelu=function(){return(Jf=s._LeakyRelu=s.asm.O).apply(null,arguments)},Oe=s._Less=function(){return(Oe=s._Less=s.asm.P).apply(null,arguments)},Qf=s._LessEqual=function(){return(Qf=s._LessEqual=s.asm.Q).apply(null,arguments)},Zf=s._Log=function(){return(Zf=s._Log=s.asm.R).apply(null,arguments)},eg=s._LogicalAnd=function(){return(eg=s._LogicalAnd=s.asm.S).apply(null,arguments)},tg=s._Max=function(){return(tg=s._Max=s.asm.T).apply(null,arguments)},ng=s._MaxPool=function(){return(ng=s._MaxPool=s.asm.U).apply(null,arguments)},ag=s._Maximum=function(){return(ag=s._Maximum=s.asm.V).apply(null,arguments)},Lu=s._Mean=function(){return(Lu=s._Mean=s.asm.W).apply(null,arguments)},Vp=s._Min=function(){return(Vp=s._Min=s.asm.X).apply(null,arguments)},Up=s._Minimum=function(){return(Up=s._Minimum=s.asm.Y).apply(null,arguments)},rg=s._Multiply=function(){return(rg=s._Multiply=s.asm.Z).apply(null,arguments)},sg=s._Neg=function(){return(sg=s._Neg=s.asm._).apply(null,arguments)},ig=s._NonMaxSuppressionV3=function(){return(ig=s._NonMaxSuppressionV3=s.asm.$).apply(null,arguments)},og=s._NonMaxSuppressionV4=function(){return(og=s._NonMaxSuppressionV4=s.asm.aa).apply(null,arguments)},lg=s._NonMaxSuppressionV5=function(){return(lg=s._NonMaxSuppressionV5=s.asm.ba).apply(null,arguments)},ug=s._NotEqual=function(){return(ug=s._NotEqual=s.asm.ca).apply(null,arguments)},cg=s._OneHot=function(){return(cg=s._OneHot=s.asm.da).apply(null,arguments)},et=s._PadV2=function(){return(et=s._PadV2=s.asm.ea).apply(null,arguments)},pg=s._Pow=function(){return(pg=s._Pow=s.asm.fa).apply(null,arguments)},dg=s._Prelu=function(){return(dg=s._Prelu=s.asm.ga).apply(null,arguments)},hg=s._Prod=function(){return(hg=s._Prod=s.asm.ha).apply(null,arguments)},fo=s._RealDiv=function(){return(fo=s._RealDiv=s.asm.ia).apply(null,arguments)},Gp=s._Relu=function(){return(Gp=s._Relu=s.asm.ja).apply(null,arguments)},Hp=s._Relu6=function(){return(Hp=s._Relu6=s.asm.ka).apply(null,arguments)},jp=s._ResizeBilinear=function(){return(jp=s._ResizeBilinear=s.asm.la).apply(null,arguments)},mg=s._Reverse=function(){return(mg=s._Reverse=s.asm.ma).apply(null,arguments)},fg=s._RotateWithOffset=function(){return(fg=s._RotateWithOffset=s.asm.na).apply(null,arguments)},qp=s._Round=function(){return(qp=s._Round=s.asm.oa).apply(null,arguments)},gg=s._Rsqrt=function(){return(gg=s._Rsqrt=s.asm.pa).apply(null,arguments)},Kp=s._ScatterNd=function(){return(Kp=s._ScatterNd=s.asm.qa).apply(null,arguments)},Pr=s._SelectV2=function(){return(Pr=s._SelectV2=s.asm.ra).apply(null,arguments)},yg=s._Sigmoid=function(){return(yg=s._Sigmoid=s.asm.sa).apply(null,arguments)},bg=s._Sin=function(){return(bg=s._Sin=s.asm.ta).apply(null,arguments)},Sw=s._Softmax=function(){return(Sw=s._Softmax=s.asm.ua).apply(null,arguments)},Xp=s._Sqrt=function(){return(Xp=s._Sqrt=s.asm.va).apply(null,arguments)},xg=s._Square=function(){return(xg=s._Square=s.asm.wa).apply(null,arguments)},vg=s._SquaredDifference=function(){return(vg=s._SquaredDifference=s.asm.xa).apply(null,arguments)},wg=s._Step=function(){return(wg=s._Step=s.asm.ya).apply(null,arguments)},kg=s._StridedSlice=function(){return(kg=s._StridedSlice=s.asm.za).apply(null,arguments)},Ig=s._Sub=function(){return(Ig=s._Sub=s.asm.Aa).apply(null,arguments)},Tg=s._Sum=function(){return(Tg=s._Sum=s.asm.Ba).apply(null,arguments)},Ng=s._Tanh=function(){return(Ng=s._Tanh=s.asm.Ca).apply(null,arguments)},Sg=s._Tile=function(){return(Sg=s._Tile=s.asm.Da).apply(null,arguments)},Cg=s._TopK=function(){return(Cg=s._TopK=s.asm.Ea).apply(null,arguments)},_g=s._Transpose=function(){return(_g=s._Transpose=s.asm.Fa).apply(null,arguments)},Eg=s.__FusedMatMul=function(){return(Eg=s.__FusedMatMul=s.asm.Ga).apply(null,arguments)},Fg=s._malloc=function(){return(Fg=s._malloc=s.asm.Ha).apply(null,arguments)},Ag=s._free=function(){return(Ag=s._free=s.asm.Ia).apply(null,arguments)},Yp=s.stackSave=function(){return(Yp=s.stackSave=s.asm.Ja).apply(null,arguments)},Jp=s.stackRestore=function(){return(Jp=s.stackRestore=s.asm.Ka).apply(null,arguments)},zu=s.stackAlloc=function(){return(zu=s.stackAlloc=s.asm.La).apply(null,arguments)};s.cwrap=Q;var go;function $g(X){this.name="ExitStatus",this.message="Program terminated with exit("+X+")",this.status=X}lr=function X(){go||Wu(),go||(lr=X)};function Wu(X){if(X=X||u,ia>0||(Kn(),ia>0))return;function ae(){go||(go=!0,s.calledRun=!0,!G&&(Mn(),pn(),i(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),tn()))}s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),ae()},1)):ae()}if(s.run=Wu,s.preInit)for(typeof s.preInit=="function"&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();return Wu(),r.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}),tE=1e-7,nE=1e-4,rd=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},ju=class{refCount(e){return oa("refCount")}incRef(e){return oa("incRef")}timerAvailable(){return!0}time(e){return oa("time")}read(e){return oa("read")}readSync(e){return oa("readSync")}numDataIds(){return oa("numDataIds")}disposeData(e,t){return oa("disposeData")}write(e,t,n){return oa("write")}move(e,t,n,a,r){return oa("move")}memory(){return oa("memory")}floatPrecision(){return oa("floatPrecision")}epsilon(){return this.floatPrecision()===32?tE:nE}dispose(){return oa("dispose")}};function oa(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Vw(e){let t=e.length,n=0,a=0;for(;t>0;)a=Math.random()*t|0,t--,n=e[t],e[t]=e[a],e[a]=n}function aE(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,a,r,s=0;for(;n>0;)s=Math.random()*n|0,n--,a=e[n],r=t[n],e[n]=e[s],t[n]=t[s],e[s]=a,t[s]=r}function qu(e,t,n){return Math.max(e,Math.min(t,n))}function rE(e){return e%2==0?e:e+1}function sE(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function iE(e,t){let n=Math.random();return t*n+(1-n)*e}function oE(e,t){let n=0;for(let a=0;a<e.length;a++){let r=Number(e[a])-Number(t[a]);n+=r*r}return n}function $(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function un(e,t,n=""){$(hr(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function ks(e){$(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Is(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||cn(e)&&!n)for(let a=0;a<e.length;++a)Is(e[a],t,n);else t.push(e);return t}function Ot(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function lE(e){return e.length===0}function hr(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Ht(e){return e%1==0}function uE(e){if(Math.tanh!=null)return Math.tanh(e);if(e===Infinity)return 1;if(e===-Infinity)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function cE(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function pE(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Vw(t),t}function Ku(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function dE(e,t=a=>0,n){return new Promise((a,r)=>{let s=0,i=()=>{if(e()){a();return}s++;let o=t(s);if(n!=null&&s>=n){r();return}setTimeout(i,o)};i()})}function hE(e,t){let n=1,a=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(e[s]===-1){if(a!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${a} and dim ${s}`);a=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(a===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[a]=t/n,r}function la(e,t){let n=t.length;return e=e==null?t.map((a,r)=>r):[].concat(e),$(e.every(a=>a>=-n&&a<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),$(e.every(a=>Ht(a)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(a=>a<0?n+a:a)}function Uw(e,t){let n=[],a=[],r=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||r?null:la(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(s!=null){if(s[i]===o&&e[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(s[i]==null||s[i]>o)&&e[o]===1&&(n.push(e[o]),a.push(o)),s[i]<=o&&i++}e[o]!==1&&(n.push(e[o]),a.push(o))}return{newShape:n,keptDims:a}}function Gw(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function Hw(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function jw(e,t){for(let n=0;n<e.length;n++){let a=e[n];if(isNaN(a)||!isFinite(a))throw Error(`A tensor of type ${t} being uploaded contains ${a}.`)}}function qw(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function mE(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function cn(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function Pg(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function Kw(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function zr(e){return typeof e=="string"||e instanceof String}function Xw(e){return typeof e=="boolean"}function Yw(e){return typeof e=="number"}function sd(e){return Array.isArray(e)?sd(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":Yw(e)?"float32":zr(e)?"string":Xw(e)?"bool":"float32"}function Wr(e){return!!(e&&e.constructor&&e.call&&e.apply)}function id(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function To(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function Jw(e,t,n){let a=new Array;if(t.length===1){let r=t[0];for(let s=0;s<r;s++)a[s]=n[e+s]}else{let r=t[0],s=t.slice(1),i=s.reduce((o,l)=>o*l);for(let o=0;o<r;o++)a[o]=Jw(e+o*i,s,n)}return a}function No(e,t){if(e.length===0)return t[0];let n=e.reduce((a,r)=>a*r);if(n===0)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return Jw(0,e,t)}function Og(e,t){let n=od(e,t);for(let a=0;a<n.length;a++)n[a]=1;return n}function od(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function fE(e,t){let n=e.reduce((a,r)=>a*r,1);if(t==null||t==="float32")return No(e,new Float32Array(n));if(t==="int32")return No(e,new Int32Array(n));if(t==="bool")return No(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Lg(e){e.forEach(t=>{$(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function gE(e,t,n){if(t===0)return 0;if(t===1)return e[0];let a=e[e.length-1];for(let r=0;r<e.length-1;++r)a+=n[r]*e[r];return a}function yE(e,t,n){if(t===0)return[];if(t===1)return[e];let a=new Array(t);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(e/n[r]),e-=a[r]*n[r];return a[a.length-1]=e,a}function zg(e){return e&&e.then&&typeof e.then=="function"}var Qw="tfjsflags",Zw=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let a=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${a}.`),this.set(e,a)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(zg(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=bE(this.global.location.search);Qw in e&&e[Qw].split(",").forEach(t=>{let[n,a]=t.split(":");this.urlFlags[n]=xE(n,a)})}};function bE(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...a)=>(vE(t,a[0],a[1]),a.join("="))),t}function vE(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function xE(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function Z(){return Wg}var Wg=null;function wE(e){Wg=e}var Bg;function e0(){if(Bg==null){let e;if(typeof window!="undefined")e=window;else if(typeof global!="undefined")e=global;else if(typeof process!="undefined")e=process;else if(typeof self!="undefined")e=self;else throw new Error("Could not find a global object");Bg=e}return Bg}function kE(){let e=e0();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function Vg(e,t){let n=kE();if(n.has(e))return n.get(e);{let a=t();return n.set(e,a),n.get(e)}}var So="Abs",Co="Acos",_o="Acosh",Br="Add",Ts="AddN",ld="All",ud="Any",Ns="ArgMax",Xu="ArgMin",Eo="Asin",Fo="Asinh",Ao="Atan",$o="Atanh",Do="Atan2",Ss="AvgPool",cd="AvgPoolGrad",Yu="AvgPool3D",pd="AvgPool3DGrad",Cs="BatchMatMul",Ju="BatchToSpaceND",dd="Bincount",t0="BroadcastTo",_s="Cast",Es="Ceil",Vr="ClipByValue",hd="Complex",Qu="ComplexAbs",Ro="Concat",Fs="Conv2D",md="Conv2DBackpropFilter",As="Conv2DBackpropInput",Zu="Conv3D",fd="Conv3DBackpropFilterV2",gd="Conv3DBackpropInputV2",$s="Cos",Mo="Cosh",Ds="Cumsum",Po="CropAndResize",yd="DenseBincount",Oo="DepthToSpace",Rs="DepthwiseConv2dNative",bd="DepthwiseConv2dNativeBackpropFilter",xd="DepthwiseConv2dNativeBackpropInput",vd="Diag",ec="Dilation2D",wd="Dilation2DBackpropInput",kd="Dilation2DBackpropFilter",Ms="RealDiv",Lo="Elu",Id="EluGrad",zo="Erf",Wo="Equal",Ps="Exp",Bo="ExpandDims",Vo="Expm1",Td="FFT",tc="Fill",Uo="FlipLeftRight",Os="Floor",Ls="FloorDiv",zs="FusedBatchNorm",Go="GatherV2",Ho="GatherNd",jo="Greater",Ws="GreaterEqual",Bs="Identity",Nd="IFFT",Sd="Imag",qo="IsFinite",Ko="IsInf",Xo="IsNan",Vs="LeakyRelu",Yo="Less",Jo="LessEqual",Cd="LinSpace",Us="Log",Qo="Log1p",Zo="LogicalAnd",nc="LogicalNot",ac="LogicalOr",n0="LogSoftmax",rc="LRN",_d="LRNGrad",Gs="Max",Hs="Maximum",js="MaxPool",Ed="MaxPoolGrad",sc="MaxPool3D",Fd="MaxPool3DGrad",Ad="MaxPoolWithArgmax",qs="Mean",Ks="Min",Xs="Minimum",ic="MirrorPad",el="Mod",$d="Multinomial",Ys="Multiply",tl="Neg",nl="NotEqual",al="NonMaxSuppressionV3",rl="NonMaxSuppressionV4",sl="NonMaxSuppressionV5",il="OnesLike",Js="OneHot",ol="Pack",Qs="PadV2",IE="Pool",Zs="Pow",ei="Prelu",ll="Prod",oc="Range",Dd="Real",ul="Reciprocal",ti="Relu",cl="Reshape",lc="ResizeNearestNeighbor",Rd="ResizeNearestNeighborGrad",ni="ResizeBilinear",Md="ResizeBilinearGrad",ai="Relu6",ri="Reverse",si="Round",ii="Rsqrt",pl="ScatterNd",dl="Select",hl="Selu",ml="Slice",oi="Sin",fl="Sinh",gl="Sign",li="Sigmoid",yl="Softplus",ui="Sqrt",ci="Sum",uc="SpaceToBatchND",bl="SplitV",pi="Softmax",di="SquaredDifference",cc="Square",hi="Sub",Pd="SparseToDense",xl="StridedSlice",vl="Tan",mi="Tanh",Ur="Tile",wl="TopK",Od="Transform",fi="Transpose",Ld="Unique",kl="Unpack",pc="UnsortedSegmentSum",Il="ZerosLike",Gr="Step",zd="FromPixels",Tl="RotateWithOffset",gi="_FusedMatMul",yi="FusedConv2D",bi="FusedDepthwiseConv2D",Nl=Vg("kernelRegistry",()=>new Map),dc=Vg("gradRegistry",()=>new Map);function Wd(e,t){let n=Ug(e,t);return Nl.get(n)}function Gg(e){return dc.get(e)}function Bd(e){let t=Nl.entries(),n=[];for(;;){let{done:a,value:r}=t.next();if(a)break;let[s,i]=r,[o]=s.split("_");o===e&&n.push(i)}return n}function hc(e){let{kernelName:t,backendName:n}=e,a=Ug(t,n);Nl.has(a)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),Nl.set(a,e)}function a0(e){let{kernelName:t}=e;dc.has(t)&&Z().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),dc.set(t,e)}function TE(e,t){let n=Ug(e,t);if(!Nl.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Nl.delete(n)}function NE(e){if(!dc.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);dc.delete(e)}function SE(e,t){Bd(e).forEach(n=>{let a=Object.assign({},n,{backendName:t});hc(a)})}function Ug(e,t){return`${t}_${e}`}var w={};Le(w,{arraysEqual:()=>hr,assert:()=>$,assertNonNegativeIntegerDimensions:()=>Lg,assertNonNull:()=>ks,assertShapesMatch:()=>un,bytesFromStringArray:()=>Kw,bytesPerElement:()=>Pg,checkConversionForErrors:()=>jw,clamp:()=>qu,computeStrides:()=>To,createScalarValue:()=>CE,createShuffledIndices:()=>pE,decodeString:()=>Ud,distSquared:()=>oE,encodeString:()=>fc,fetch:()=>_E,flatten:()=>Is,getArrayFromDType:()=>Hw,getTypedArrayFromDType:()=>Gw,hasEncodingLoss:()=>mE,indexToLoc:()=>yE,inferDtype:()=>sd,inferFromImplicitShape:()=>hE,isBoolean:()=>Xw,isFunction:()=>Wr,isInt:()=>Ht,isNumber:()=>Yw,isPromise:()=>zg,isScalarShape:()=>lE,isString:()=>zr,isTypedArray:()=>cn,isValidDtype:()=>qw,locToIndex:()=>gE,makeOnesTypedArray:()=>Og,makeZerosNestedTypedArray:()=>fE,makeZerosTypedArray:()=>od,nearestDivisor:()=>id,nearestLargerEven:()=>rE,now:()=>mc,parseAxisParam:()=>la,randUniform:()=>iE,repeatedTry:()=>dE,rightPad:()=>Ku,shuffle:()=>Vw,shuffleCombo:()=>aE,sizeFromShape:()=>Ot,sizeToSquarishShape:()=>cE,squeezeShape:()=>Uw,sum:()=>sE,tanh:()=>uE,toNestedArray:()=>No,toTypedArray:()=>Vd});function CE(e,t){return t==="string"?fc(e):Vd([e],t)}function EE(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function Vd(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Is(e)),Z().getBool("DEBUG")&&jw(e,t),EE(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let a=0;a<n.length;++a)Math.round(e[a])!==0&&(n[a]=1);return n}else throw new Error(`Unknown data type ${t}`)}function mc(){return Z().platform.now()}function _E(e,t){return Z().platform.fetch(e,t)}function fc(e,t="utf-8"){return t=t||"utf-8",Z().platform.encode(e,t)}function Ud(e,t="utf-8"){return t=t||"utf-8",Z().platform.decode(e,t)}var $E=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new AE)}profileKernel(e,t,n){let a,r=()=>{a=n()},s,i=mc();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(r);else{r();for(let o of a)o.dataSync();s=Promise.resolve({kernelMs:mc()-i})}if(Z().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<a.length;o++){let l=a[o];l.data().then(c=>{FE(c,l.dtype,e)})}return{kernelName:e,outputs:a,inputs:t,timeMs:s.then(o=>o.kernelMs),extraInfo:s.then(o=>o.getExtraProfileInfo!=null?o.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:s}=e;n.forEach(i=>{Promise.all([i.data(),a,s]).then(o=>{this.logger.logKernelProfile(t,i,o[0],o[1],r,o[2])})})}};function FE(e,t,n){if(t!=="float32")return!1;for(let a=0;a<e.length;a++){let r=e[a];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var AE=class{logKernelProfile(e,t,n,a,r,s){let i=typeof a=="number"?Ku(`${a}ms`,9):a.error,o=Ku(e,25),l=t.rank,c=t.size,u=Ku(t.shape.toString(),14),p="";for(let d in r){let h=r[d];if(h!=null){let m=h.shape||t.shape,f=m.length;p+=`${d}: ${f}D ${f>0?m:""} `}}console.log(`%c${o}	%c${i}	%c${l}D ${u}	%c${c}	%c${p}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function DE(e,t,n){let a={},r={};for(let l=0;l<t.length;l++)a[t[l].id]=!0;for(let l=0;l<e.length;l++){let c=e[l],u=c.inputs;for(let p in u){let d=u[p],h=!1;for(let m=0;m<t.length;m++)if(a[d.id]){c.outputs.forEach(f=>a[f.id]=!0),h=!0,r[c.id]=!0;break}if(h)break}}let s={};s[n.id]=!0;let i={};for(let l=e.length-1;l>=0;l--){let c=e[l],u=c.inputs;for(let p=0;p<c.outputs.length;p++)if(s[c.outputs[p].id]){for(let d in u)s[u[d].id]=!0,i[c.id]=!0;break}}let o=[];for(let l=0;l<e.length;l++){let c=e[l];if(r[c.id]&&i[c.id]){let u={};for(let d in c.inputs){let h=c.inputs[d];a[h.id]&&(u[d]=h)}let p=Object.assign({},c);p.inputs=u,p.outputs=c.outputs,o.push(p)}}return o}function RE(e,t,n,a){for(let r=t.length-1;r>=0;r--){let s=t[r],i=[];if(s.outputs.forEach(l=>{let c=e[l.id];c!=null?i.push(c):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let l in s.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);let c=n(()=>o[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);let u=s.inputs[l];if(!hr(c.shape,u.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(e[u.id]==null)e[u.id]=c;else{let p=e[u.id];e[u.id]=a(p,c),p.dispose()}}}}var r0=20,gc=3,Hg=7;function PE(e,t,n,a){let r=To(t),s=ME(e,t,n,r),i=t.length,o=Gd(e,t,n,r,s),l=["Tensor"];return a&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(c=>"    "+c).join(`
`)),l.join(`
`)}function ME(e,t,n,a){let r=Ot(t),s=a[a.length-1],i=new Array(s).fill(0),o=t.length,l=n==="complex64"?bc(e):e;if(o>1)for(let c=0;c<r/s;c++){let u=c*s;for(let p=0;p<s;p++)i[p]=Math.max(i[p],yc(l[u+p],0,n).length)}return i}function yc(e,t,n){let a;return Array.isArray(e)?a=`${parseFloat(e[0].toFixed(Hg))} + ${parseFloat(e[1].toFixed(Hg))}j`:zr(e)?a=`'${e}'`:n==="bool"?a=s0(e):a=parseFloat(e.toFixed(Hg)).toString(),Ku(a,t)}function s0(e){return e===0?"false":"true"}function Gd(e,t,n,a,r,s=!0){let i=n==="complex64"?2:1,o=t[0],l=t.length;if(l===0){if(n==="complex64"){let f=bc(e);return[yc(f[0],0,n)]}return n==="bool"?[s0(e[0])]:[e[0].toString()]}if(l===1){if(o>r0){let g=gc*i,y=Array.from(e.slice(0,g)),b=Array.from(e.slice((o-gc)*i,o*i));return n==="complex64"&&(y=bc(y),b=bc(b)),["["+y.map((x,v)=>yc(x,r[v],n)).join(", ")+", ..., "+b.map((x,v)=>yc(x,r[o-gc+v],n)).join(", ")+"]"]}let f=n==="complex64"?bc(e):Array.from(e);return["["+f.map((g,y)=>yc(g,r[y],n)).join(", ")+"]"]}let c=t.slice(1),u=a.slice(1),p=a[0]*i,d=[];if(o>r0){for(let f=0;f<gc;f++){let g=f*p,y=g+p;d.push(...Gd(e.slice(g,y),c,n,u,r,!1))}d.push("...");for(let f=o-gc;f<o;f++){let g=f*p,y=g+p;d.push(...Gd(e.slice(g,y),c,n,u,r,f===o-1))}}else for(let f=0;f<o;f++){let g=f*p,y=g+p;d.push(...Gd(e.slice(g,y),c,n,u,r,f===o-1))}let h=l===2?",":"";d[0]="["+d[0]+h;for(let f=1;f<d.length-1;f++)d[f]=" "+d[f]+h;let m=`,
`;for(let f=2;f<l;f++)m+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":m),d}function bc(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Lt=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Ot(e),n!=null){let a=n.length;$(a===this.size,()=>`Length of values '${a}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Hw(t,this.size),this.strides=To(e)}set(e,...t){t.length===0&&(t=[0]),$(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let a of e){if(a<0||a>=this.shape[t]){let r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let n=e[e.length-1];for(let a=0;a<e.length-1;++a)n+=this.strides[a]*e[a];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ba().makeTensor(this.values,this.shape,this.dtype)}},Ba=null,Sl=null,OE=null;function LE(e){Ba=e}function zE(e){Sl=e}function WE(e){OE=e}var Ee=class{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Ot(e),this.strides=To(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Sl.buffer(this.shape,this.dtype,e)}bufferSync(){return Sl.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return No(this.shape,e)}arraySync(){return No(this.shape,this.dataSync())}async data(){this.throwIfDisposed();let e=Ba().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>Ud(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();let e=Ba().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Ud(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Ba().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ba().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Sl.print(this,e)}clone(){return this.throwIfDisposed(),Sl.clone(this)}toString(e=!1){let t=this.dataSync();return PE(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Sl.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ba().makeVariable(this,e,t,n)}};Object.defineProperty(Ee,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function Y(){return Vg("Tensor",()=>Ee)}Y();var Hr=class extends Ee{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a);this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!hr(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ba().disposeTensor(this),this.dataId=e.dataId,Ba().incRef(this,null)}dispose(){Ba().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Hr,Symbol.hasInstance,{value:e=>e instanceof Ee&&e.assign!=null&&e.assign instanceof Function});var Ia={};Le(Ia,{assertTypesMatch:()=>i0,getTensorsInContainer:()=>jg,isTensorInList:()=>BE,makeTypesMatch:()=>Nt});var qg;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(qg||(qg={}));var Kg;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(Kg||(Kg={}));var Xg;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(Xg||(Xg={}));var Yg;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(Yg||(Yg={}));var Jg;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(Jg||(Jg={}));var VE={float32:Yg,int32:Kg,bool:Xg,complex64:Jg};function ua(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return VE[e][t]}function Hd(e){return ua(e,"int32")}function Nt(e,t){if(e.dtype===t.dtype)return[e,t];let n=ua(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function i0(e,t){$(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function BE(e,t){return t.some(n=>n.id===e.id)}function jg(e){let t=[],n=new Set;return o0(e,t,n),t}function o0(e,t,n){if(e==null)return;if(e instanceof Ee){t.push(e);return}if(!UE(e))return;let a=e;for(let r in a){let s=a[r];n.has(s)||(n.add(s),o0(s,t,n))}}function UE(e){return Array.isArray(e)||typeof e=="object"}function Qg(e){return e.kernelName!=null}var l0=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},xc=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new l0}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new $E(this.backendInstance),!0}setupRegisteredKernels(){Bd(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Bd(e).forEach(t=>{t.disposeFunc!=null&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof ju)&&typeof n.then=="function"){let a=++this.pendingBackendInitId,r=n.then(s=>a<this.pendingBackendInitId?!1:(this.registry[e]=s,this.pendingBackendInit=null,!0)).catch(s=>(a<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(s.stack||s.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),s=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let a;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(a),()=>(a=t(),a instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),a))}scopedRun(e,t,n){e();try{let a=n();return t(),a}catch(a){throw t(),a}}nextTensorId(){return xc.nextTensorId++}nextVariableId(){return xc.nextVariableId++}clone(e){let t=M.runKernel(Bs,{x:e}),n={x:e},a=s=>({x:()=>{let i="float32",o={x:s},l={dtype:i};return M.runKernel(_s,o,l)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],a,r,{}),t}runKernel(e,t,n){if(Wd(e,this.backendName)==null)throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let a=this.backend.numDataIds(),r=0;n.forEach(o=>{r+=o.dtype==="complex64"?3:1});let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=a-t-r-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],a=this.isTapeOn(),r=this.state.numBytes,s=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let o,l=Qg(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Qg(e)){let{kernelName:h,inputs:m,attrs:f}=e;this.backendName==null&&this.backend;let g=Wd(h,this.backendName);$(g!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),i=()=>{let y=this.backend.numDataIds();o=g.kernelFunc({inputs:m,attrs:f,backend:this.backend});let b=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,y,b);let x=b.map(v=>{if(v.rank!=null)return v;let{dataId:T,shape:k,dtype:S}=v;return this.makeTensorFromDataId(T,k,S)});if(a){let v=this.getTensorsForGradient(h,m,x);n=this.saveTensorsForBackwardMode(v)}return x}}else{let{forwardFunc:h}=e,m=f=>{!a||(n=f.map(g=>this.keep(this.clone(g))))};i=()=>{let f=this.backend.numDataIds();o=this.tidy(()=>h(this.backend,m));let g=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,f,g),g}}let{inputs:c,attrs:u}=e,p=Qg(e)?null:e.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(d=this.profiler.profileKernel(l,c,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs)}),a&&this.addTapeNode(l,c,t,p,n,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(h=>c[h]!=null?c[h].shape:null),outputShapes:t.map(h=>h.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(e,t,n){let a=Gg(e);if(a!=null){let r=a.inputsToSave||[],s=a.outputsToSave||[],i;a.saveAllInputs?($(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(l=>t[l])):i=r.map(l=>t[l]);let o=n.filter((l,c)=>s[c]);return i.concat(o)}return[]}makeTensor(e,t,n,a){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;n==="string"&&zr(e[0])&&(r=e.map(o=>fc(o)));let s=a.write(r,t,n),i=new Ee(t,n,s,this.nextTensorId());if(this.trackTensor(i,a),n==="string"){let o=this.state.tensorInfo.get(s),l=Kw(r);this.state.numBytes+=l-o.bytes,o.bytes=l}return i}makeTensorFromDataId(e,t,n,a){n=n||"float32";let r=new Ee(t,n,e,this.nextTensorId());return this.trackTensor(r,a),r}makeVariable(e,t=!0,n,a){n=n||this.nextVariableId().toString(),a!=null&&a!==e.dtype&&(e=e.cast(a));let r=new Hr(e,t,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*Pg(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Hr||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*Pg(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(a=>a.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,a,r,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=Gg(e);o!=null&&(a=o.gradFunc),a!=null&&(i.gradient=l=>(l=l.map((c,u)=>{if(c==null){let p=n[u],d=od(p.size,p.dtype);return this.makeTensor(d,p.shape,p.dtype)}return c}),a(l.length>1?l:l[0],r,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=jg(e),n=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){let s=this.state.activeScope.track[r];!s.kept&&!n.has(s.id)&&s.dispose()}let a=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===a.id&&this.track(r)})}gradients(e,t,n,a=!1){if($(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));$(r instanceof Ee,()=>"The result y returned by f() must be a tensor.");let s=DE(this.state.activeTape,t,r);if(!a&&s.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[r.id]=n==null?GE(r.shape):n,RE(i,s,l=>this.tidy(l),HE);let o=t.map(l=>i[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let c of l.saved)c.dispose()}),this.state.activeTape=null),{value:r,grads:o}})}customGrad(e){return $(Wr(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{$(t.every(i=>i instanceof Ee),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,a={};t.forEach((i,o)=>{a[o]=i});let r=(i,o)=>(n=e(...t,o),$(n.value instanceof Ee,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),$(Wr(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),s=(i,o)=>{let l=n.gradFunc(i,o),c=Array.isArray(l)?l:[l];$(c.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),$(c.every(p=>p instanceof Ee),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let u={};return c.forEach((p,d)=>{u[d]=()=>p}),u};return this.runKernelFunc({forwardFunc:r,backwardsFunc:s,inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){let t=mc(),n=await this.backend.time(e);return n.wallMs=mc()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new l0;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};xc.nextTensorId=0;xc.nextVariableId=0;function GE(e){let t=Og(Ot(e),"float32");return M.makeTensor(t,e,"float32")}function u0(){let e=e0();if(e._tfengine==null){let t=new Zw(e);e._tfengine=new xc(t)}return wE(e._tfengine.ENV),LE(()=>e._tfengine),e._tfengine}var M=u0();function HE(e,t){let n={a:e,b:t};return M.runKernel(Br,n)}var vc={};Le(vc,{isBrowser:()=>c0,isMobile:()=>jE});function qE(){return typeof navigator!="undefined"&&navigator!=null}function jE(){if(qE()){let e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function c0(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var Ta=Z();Ta.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Ta.registerFlag("IS_BROWSER",()=>c0());Ta.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");Ta.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Ta.registerFlag("PROD",()=>!1);Ta.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Ta.getBool("DEBUG"));Ta.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Ta.registerFlag("IS_TEST",()=>!1);Ta.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Ta.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);function Va(e,t){let n=e;if(cn(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let a=[];for(;Array.isArray(n)||cn(n)&&t!=="string";)a.push(n.length),n=n[0];return Array.isArray(e)&&Z().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&p0(e,a,[]),a}function p0(e,t,n){if(n=n||[],!Array.isArray(e)&&!cn(e)){$(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}$(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),$(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let a=t.slice(1);for(let r=0;r<e.length;++r)p0(e[r],a,n.concat(r))}function d0(e,t,n,a){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${a}' must be ${e} tensor, but got ${t} tensor`)}}function E(e,t,n,a="numeric"){if(e instanceof Ee)return d0(a,e.dtype,t,n),e;let r=sd(e);if(r!=="string"&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),d0(a,r,t,n),e==null||!cn(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let o=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${o}'`)}let s=Va(e,r);!cn(e)&&!Array.isArray(e)&&(e=[e]);let i=r!=="string"?Vd(e,r):Is(e,[],!0);return M.makeTensor(i,s,r)}function wc(e,t,n,a="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((r,s)=>E(r,`${t}[${s}]`,n,a))}var h0="__op";function O(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+h0;let r=(...s)=>{M.startScope(n);try{let i=a(...s);return zg(i)&&console.error("Cannot return a Promise inside of tidy."),M.endScope(i),i}catch(i){throw M.endScope(null),i}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}function KE(e,t){let n=E(e,"real","complex"),a=E(t,"imag","complex");un(n.shape,a.shape,`real and imag shapes, ${n.shape} and ${a.shape}, must match in call to tf.complex().`);let r={real:n,imag:a};return M.runKernel(hd,r)}var jr=O({complex_:KE});function qr(e,t,n,a){if(a==null&&(a=sd(e)),a==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!cn(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Lg(t);let r=Ot(t),s=Ot(n);$(r===s,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${s}`);for(let i=0;i<n.length;++i){let o=n[i],l=i===n.length-1?o!==Ot(t.slice(i)):!0;$(n[i]===t[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!cn(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=a!=="string"?Vd(e,a):Is(e,[],!0),M.makeTensor(e,t,a)}function Yn(e,t,n){let a=Va(e,n);return qr(e,t,a,n)}var Zg={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},jd=4;async function YE(e,t){let n=[],a=[],r=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);for(let i=0;i<r.length;++i){let o=r[i],l=Array.isArray(e)?e[i].tensor:e[o];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);let c={name:o,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let u=new Promise(async p=>{let d=await l.bytes(),h=d.reduce((g,y)=>g+y.length,0)+jd*d.length,m=new Uint8Array(h),f=0;for(let g=0;g<d.length;g++){let y=d[g],b=new Uint8Array(new Uint32Array([y.length]).buffer);m.set(b,f),f+=jd,m.set(y,f),f+=y.length}p(m)});a.push(u)}else a.push(l.data());t!=null&&(c.group=t),n.push(c)}let s=await Promise.all(a);return{data:XE(s),specs:n}}function m0(e,t){let n={},a,r=0;for(let s of t){let i=s.name,o=s.dtype,l=s.shape,c=Ot(l),u;if("quantization"in s){let p=s.quantization;if(p.dtype==="uint8"||p.dtype==="uint16"){if(!("min"in p&&"scale"in p))throw new Error(`Weight ${s.name} with quantization ${p.dtype} doesn't have corresponding metadata min and scale.`)}else if(p.dtype==="float16"){if(o!=="float32")throw new Error(`Weight ${s.name} is quantized with ${p.dtype} which only supports weights of type float32 not ${o}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${p.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let d=Zg[p.dtype],h=e.slice(r,r+c*d),m=p.dtype==="uint8"?new Uint8Array(h):new Uint16Array(h);if(o==="float32")if(p.dtype==="uint8"||p.dtype==="uint16"){u=new Float32Array(m.length);for(let f=0;f<m.length;f++){let g=m[f];u[f]=g*p.scale+p.min}}else if(p.dtype==="float16")a===void 0&&(a=JE()),u=a(m);else throw new Error(`Unsupported quantization type ${p.dtype} for weight type float32.`);else if(o==="int32"){if(p.dtype!=="uint8"&&p.dtype!=="uint16")throw new Error(`Unsupported quantization type ${p.dtype} for weight type int32.`);u=new Int32Array(m.length);for(let f=0;f<m.length;f++){let g=m[f];u[f]=Math.round(g*p.scale+p.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);r+=c*d}else if(o==="string"){let p=Ot(s.shape);u=[];for(let d=0;d<p;d++){let h=new Uint32Array(e.slice(r,r+jd))[0];r+=jd;let m=new Uint8Array(e.slice(r,r+h));u.push(m),r+=h}}else{let p=Zg[o],d=e.slice(r,r+c*p);if(o==="float32")u=new Float32Array(d);else if(o==="int32")u=new Int32Array(d);else if(o==="bool")u=new Uint8Array(d);else if(o==="complex64"){u=new Float32Array(d);let h=new Float32Array(u.length/2),m=new Float32Array(u.length/2);for(let y=0;y<h.length;y++)h[y]=u[y*2],m[y]=u[y*2+1];let f=Yn(h,l,"float32"),g=Yn(m,l,"float32");n[i]=jr(f,g),f.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);r+=c*p}o!=="complex64"&&(n[i]=Yn(u,l,o))}return n}function XE(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(s=>{if(t+=s.byteLength,n.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let a=new Uint8Array(t),r=0;return n.forEach(s=>{a.set(new Uint8Array(s.buffer),r),r+=s.byteLength}),a.buffer}var ey=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function f0(e){return ey?Buffer.byteLength(e):new Blob([e]).size}function QE(e){if(ey)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let a=0,r=t.length;a<r;a++)n+=String.fromCharCode(t[a]);return btoa(n)}function ZE(e){if(ey){let a=Buffer.from(e,"base64");return a.buffer.slice(a.byteOffset,a.byteOffset+a.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let a=0;a<t.length;++a)n.set([t.charCodeAt(a)],a);return n.buffer}function ty(e){if(e.length===1)return e[0];let t=0;e.forEach(r=>{t+=r.byteLength});let n=new Uint8Array(t),a=0;return e.forEach(r=>{n.set(new Uint8Array(r),a),a+=r.byteLength}),n.buffer}function g0(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function kc(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:f0(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:f0(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function eF(){let e=n=>{let a=n<<13,r=0;for(;(a&8388608)==0;)r-=8388608,a<<=1;return a&=~8388608,r+=947912704,a|r},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function tF(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function nF(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function JE(){let e=eF(),t=tF(),n=nF();return a=>{let r=new ArrayBuffer(4*a.length),s=new Uint32Array(r);for(let i=0;i<a.length;i++){let o=a[i],l=e[n[o>>10]+(o&1023)]+t[o>>10];s[i]=l}return new Float32Array(r)}}var Ft=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Ft.instance==null&&(Ft.instance=new Ft),Ft.instance}static registerSaveRouter(e){Ft.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ft.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ft.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ft.getHandlers(e,"load",t)}static getHandlers(e,t,n){let a=[];return(t==="load"?Ft.getInstance().loadRouters:Ft.getInstance().saveRouters).forEach(r=>{let s=r(e,n);s!==null&&a.push(s)}),a}},aF=e=>Ft.registerSaveRouter(e),rF=e=>Ft.registerLoadRouter(e),sF=e=>Ft.getSaveHandlers(e),iF=(e,t)=>Ft.getLoadHandlers(e,t),ny="tensorflowjs",ay=1,xi="models_store",Kr="model_info_store";function y0(){if(!Z().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window=="undefined"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ry(e){let t=e.result;t.createObjectStore(xi,{keyPath:"modelPath"}),t.createObjectStore(Kr,{keyPath:"modelPath"})}var vi=class{constructor(e){if(this.indexedDB=y0(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,a)=>{let r=this.indexedDB.open(ny,ay);r.onupgradeneeded=()=>ry(r),r.onsuccess=()=>{let s=r.result;if(t==null){let i=s.transaction(xi,"readonly"),o=i.objectStore(xi).get(this.modelPath);o.onsuccess=()=>{if(o.result==null)return s.close(),a(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(o.result.modelArtifacts)},o.onerror=l=>(s.close(),a(o.error)),i.oncomplete=()=>s.close()}else{let i=kc(t),o=s.transaction(Kr,"readwrite"),l=o.objectStore(Kr),c=l.put({modelPath:this.modelPath,modelArtifactsInfo:i}),u;c.onsuccess=()=>{u=s.transaction(xi,"readwrite");let p=u.objectStore(xi).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});p.onsuccess=()=>n({modelArtifactsInfo:i}),p.onerror=d=>{l=o.objectStore(Kr);let h=l.delete(this.modelPath);h.onsuccess=()=>(s.close(),a(p.error)),h.onerror=m=>(s.close(),a(p.error))}},c.onerror=p=>(s.close(),a(c.error)),o.oncomplete=()=>{u==null?s.close():u.oncomplete=()=>s.close()}}},r.onerror=s=>a(r.error)})}};vi.URL_SCHEME="indexeddb://";var b0=e=>Z().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(vi.URL_SCHEME)?oF(e.slice(vi.URL_SCHEME.length)):null;Ft.registerSaveRouter(b0);Ft.registerLoadRouter(b0);function oF(e){return new vi(e)}function lF(e){return e.startsWith(vi.URL_SCHEME)?e.slice(vi.URL_SCHEME.length):e}var uF=class{constructor(){this.indexedDB=y0()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(ny,ay);n.onupgradeneeded=()=>ry(n),n.onsuccess=()=>{let a=n.result,r=a.transaction(Kr,"readonly"),s=r.objectStore(Kr).getAll();s.onsuccess=()=>{let i={};for(let o of s.result)i[o.modelPath]=o.modelArtifactsInfo;e(i)},s.onerror=i=>(a.close(),t(s.error)),r.oncomplete=()=>a.close()},n.onerror=a=>t(n.error)})}async removeModel(e){return e=lF(e),new Promise((t,n)=>{let a=this.indexedDB.open(ny,ay);a.onupgradeneeded=()=>ry(a),a.onsuccess=()=>{let r=a.result,s=r.transaction(Kr,"readwrite"),i=s.objectStore(Kr),o=i.get(e),l;o.onsuccess=()=>{if(o.result==null)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let c=i.delete(e),u=()=>{l=r.transaction(xi,"readwrite");let p=l.objectStore(xi).delete(e);p.onsuccess=()=>t(o.result.modelArtifactsInfo),p.onerror=d=>n(o.error)};c.onsuccess=u,c.onerror=p=>(u(),r.close(),n(o.error))}},o.onerror=c=>(r.close(),n(o.error)),s.oncomplete=()=>{l==null?r.close():l.oncomplete=()=>r.close()}},a.onerror=r=>n(a.error)})}},mr="/",Cl="tensorflowjs_models",x0="info",cF="model_topology",pF="weight_specs",dF="weight_data",hF="model_metadata";function v0(e){return{info:[Cl,e,x0].join(mr),topology:[Cl,e,cF].join(mr),weightSpecs:[Cl,e,pF].join(mr),weightData:[Cl,e,dF].join(mr),modelMetadata:[Cl,e,hF].join(mr)}}function mF(e){let t=e.split(mr);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(mr)}function fF(e){return e.startsWith(wi.URL_SCHEME)?e.slice(wi.URL_SCHEME.length):e}var wi=class{constructor(e){if(!Z().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=v0(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),a=kc(e);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,QE(e.weightData));let r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return e.signature!=null&&(r.signature=e.signature),e.userDefinedMetadata!=null&&(r.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(r.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:a}}catch(r){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(a==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=a;let r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){let i=JSON.parse(r);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer)}let s=this.LS.getItem(this.keys.weightData);if(s==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=ZE(s),t}};wi.URL_SCHEME="localstorage://";var w0=e=>Z().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(wi.URL_SCHEME)?gF(e.slice(wi.URL_SCHEME.length)):null;Ft.registerSaveRouter(w0);Ft.registerLoadRouter(w0);function gF(e){return new wi(e)}var yF=class{constructor(){$(Z().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),$(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Cl+mr,n=mr+x0;for(let a=0;a<this.LS.length;++a){let r=this.LS.key(a);if(r.startsWith(t)&&r.endsWith(n)){let s=mF(r);e[s]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=fF(e);let t=v0(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),n}},_l="://",Jn=class{constructor(){this.managers={}}static getInstance(){return Jn.instance==null&&(Jn.instance=new Jn),Jn.instance}static registerManager(e,t){$(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(_l)&&(e=e.slice(0,e.indexOf(_l))),$(e.length>0,()=>"scheme must not be an empty string.");let n=Jn.getInstance();$(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function qd(e){if(e.indexOf(_l)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Jn.getSchemes().join(",")}`);return{scheme:e.split(_l)[0],path:e.split(_l)[1]}}async function k0(e,t,n=!1){$(e!==t,()=>`Old path and new path are the same: '${e}'`);let a=Ft.getLoadHandlers(e);$(a.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),$(a.length<2,()=>`Copying failed because more than one (${a.length}) load handlers for source URL ${e}.`);let r=a[0],s=Ft.getSaveHandlers(t);$(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),$(s.length<2,()=>`Copying failed because more than one (${a.length}) save handlers for destination URL ${t}.`);let i=s[0],o=qd(e).scheme,l=qd(e).path,c=o===qd(e).scheme,u=await r.load();n&&c&&await Jn.getManager(o).removeModel(l);let p=await i.save(u);return n&&!c&&await Jn.getManager(o).removeModel(l),p.modelArtifactsInfo}async function bF(){let e=Jn.getSchemes(),t={};for(let n of e){let a=await Jn.getManager(n).listModels();for(let r in a){let s=n+_l+r;t[s]=a[r]}}return t}async function xF(e){let t=qd(e);return Jn.getManager(t.scheme).removeModel(t.path)}async function vF(e,t){return k0(e,t,!1)}async function wF(e,t){return k0(e,t,!0)}var kF=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(Z().get("IS_BROWSER")){Z().setPlatform("browser",new kF);try{Jn.registerManager(wi.URL_SCHEME,new yF)}catch(e){}try{Jn.registerManager(vi.URL_SCHEME,new uF)}catch(e){}}var IF={importFetch:()=>M_()},sy,TF=class{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return Z().global.fetch!=null?Z().global.fetch(e,t):(sy==null&&(sy=IF.importFetch()),sy(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};Z().get("IS_NODE")&&Z().setPlatform("node",new TF);function Me(e,t="float32",n){return t=t||"float32",Lg(e),new Lt(e,t,n)}function NF(e,t){let n=E(e,"x","cast");if(!qw(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let a={x:n},r={dtype:t};return M.runKernel(_s,a,r)}var ue=O({cast_:NF});function SF(e){let t={x:E(e,"x","clone","string_or_numeric")};return M.runKernel(Bs,t)}var Xr=O({clone_:SF});function I0(e,t=!1){console.log(e.toString(t))}u0();var CF={buffer:Me,cast:ue,clone:Xr,print:I0};zE(CF);var jt={};Le(jt,{browserFiles:()=>_F,browserHTTPRequest:()=>FF,concatenateArrayBuffers:()=>ty,copyModel:()=>vF,decodeWeights:()=>m0,encodeWeights:()=>YE,fromMemory:()=>AF,getLoadHandlers:()=>iF,getModelArtifactsInfoForJSON:()=>kc,getSaveHandlers:()=>sF,http:()=>oy,isHTTPScheme:()=>iy,listModels:()=>bF,loadWeights:()=>EF,moveModel:()=>wF,registerLoadRouter:()=>rF,registerSaveRouter:()=>aF,removeModel:()=>xF,weightsLoaderFactory:()=>T0,withSaveHandler:()=>$F});var DF="model",RF=".json",MF=".weights.bin";function N0(e){return new Promise(t=>setTimeout(t)).then(e)}var El=class{constructor(e){if(!Z().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(El.URL_SCHEME)&&(e=e.slice(El.URL_SCHEME.length)),(e==null||e.length===0)&&(e=DF),this.modelTopologyFileName=e+RF,this.weightDataFileName=e+MF}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};e.signature!=null&&(a.signature=e.signature),e.userDefinedMetadata!=null&&(a.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(a.modelInitializer=e.modelInitializer);let r=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),s=this.jsonAnchor==null?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=r,await N0(()=>s.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await N0(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:kc(e)}}}};El.URL_SCHEME="downloads://";var PF=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){let e=this.files[0],t=this.files.slice(1);return new Promise((n,a)=>{let r=new FileReader;r.onload=s=>{let i=JSON.parse(s.target.result),o=i.modelTopology;if(o==null){a(new Error(`modelTopology field is missing from file ${e.name}`));return}t.length===0&&n({modelTopology:o});let l=i.weightsManifest;if(l==null){a(new Error(`weightManifest field is missing from file ${e.name}`));return}let c;try{c=this.checkManifestAndWeightFiles(l,t)}catch(h){a(h);return}let u=[],p=[],d=[];l.forEach(h=>{h.paths.forEach(m=>{p.push(m),d.push(null)}),u.push(...h.weights)}),l.forEach(h=>{h.paths.forEach(m=>{let f=new FileReader;f.onload=g=>{let y=g.target.result,b=p.indexOf(m);if(d[b]=y,d.indexOf(null)===-1){let x={modelTopology:o,weightSpecs:u,weightData:ty(d),format:i.format,generatedBy:i.generatedBy,convertedBy:i.convertedBy};i.signature!=null&&(x.signature=i.signature),i.userDefinedMetadata!=null&&(x.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(x.modelInitializer=i.modelInitializer),n(x)}},f.onerror=g=>a(`Failed to weights data from file of path '${m}'.`),f.readAsArrayBuffer(c[m])})})},r.onerror=s=>a(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(e)})}checkManifestAndWeightFiles(e,t){let n=[],a=t.map(s=>g0(s.name)),r={};for(let s of e)s.paths.forEach(i=>{let o=g0(i);if(n.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(n.push(o),a.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);r[i]=t[a.indexOf(o)]});if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return r}},LF=e=>Z().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(El.URL_SCHEME)?OF(e.slice(El.URL_SCHEME.length)):null;Ft.registerSaveRouter(LF);function OF(e="model"){return new El(e)}function _F(e){return new PF(e)}function S0(e,t,n,a){i(e),n=n==null?0:n,a=a==null?1:a,o(n,a);let r=0,s=l=>(l.then(c=>{let u=n+ ++r/e.length*(a-n);return t(u),c}),l);function i(l){$(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function o(l,c){$(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),$(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),$(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(e.map(s))}async function C0(e,t){t==null&&(t={});let n=t.fetchFunc==null?Z().platform.fetch:t.fetchFunc,a=e.map(c=>n(c,t.requestInit,{isBinary:!0})),r=0,s=.5,i=(t.onProgress==null?await Promise.all(a):await S0(a,t.onProgress,r,s)).map(c=>c.arrayBuffer()),o=.5,l=1;return t.onProgress==null?await Promise.all(i):await S0(i,t.onProgress,o,l)}async function EF(e,t="",n,a){return T0(r=>C0(r,{requestInit:a}))(e,t,n)}function T0(e){return async(t,n="",a)=>{let r=t.map(()=>!1),s={},i=a!=null?a.map(()=>!1):[],o=[];if(t.forEach((h,m)=>{let f=0;h.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,b=Zg[y]*Ot(g.shape),x=()=>{r[m]=!0,s[m]==null&&(s[m]=[]),s[m].push({manifestEntry:g,groupOffset:f,sizeBytes:b})};a!=null?a.forEach((v,T)=>{v===g.name&&(x(),i[T]=!0)}):x(),o.push(g.name),f+=b})}),!i.every(h=>h)){let h=a.filter((m,f)=>!i[f]);throw new Error(`Could not find weights in manifest with names: ${h.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let l=r.reduce((h,m,f)=>(m&&h.push(f),h),[]),c=[];l.forEach(h=>{t[h].paths.forEach(m=>{let f=n+(n.endsWith("/")?"":"/")+m;c.push(f)})});let u=await e(c),p={},d=0;return l.forEach(h=>{let m=t[h].paths.length,f=0;for(let x=0;x<m;x++)f+=u[d+x].byteLength;let g=new ArrayBuffer(f),y=new Uint8Array(g),b=0;for(let x=0;x<m;x++){let v=new Uint8Array(u[d+x]);y.set(v,b),b+=v.byteLength}s[h].forEach(x=>{let v=g.slice(x.groupOffset,x.groupOffset+x.sizeBytes),T=m0(v,[x.manifestEntry]);for(let k in T)p[k]=T[k]}),d+=m}),p}}var zF="application/octet-stream",WF="application/json",ly=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?($(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Z().platform.fetch,$(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&$(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};e.signature!=null&&(a.signature=e.signature),e.userDefinedMetadata!=null&&(a.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(a.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(a)],{type:WF}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:zF}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:kc(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(h){let m=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?m+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":m+=" Please make sure the server is serving valid JSON for this request.",new Error(m)}let n=t.modelTopology,a=t.weightsManifest,r=t.generatedBy,s=t.convertedBy,i=t.format,o=t.signature,l=t.userDefinedMetadata;if(n==null&&a==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let c,u;a!=null&&([c,u]=await this.loadWeights(a));let p={modelTopology:n,weightSpecs:c,weightData:u,generatedBy:r,convertedBy:s,format:i};o!=null&&(p.signature=o),l!=null&&(p.userDefinedMetadata=l);let d=t.modelInitializer;return d&&(p.modelInitializer=d),p}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=BF(t),r=this.weightPathPrefix||n,s=[];for(let c of e)s.push(...c.weights);let i=[],o=[];for(let c of e)for(let u of c.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(u)):i.push(r+u+a);this.weightUrlConverter&&i.push(...await Promise.all(o));let l=await C0(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,ty(l)]}};ly.URL_SCHEME_REGEX=/^https?:\/\//;function BF(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),a=e.substring(0,t),r=n>t?e.substring(n):"";return[a+"/",r]}function iy(e){return e.match(ly.URL_SCHEME_REGEX)!=null}var _0=(e,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(a=>iy(a)):n=iy(e),n)return oy(e,t)}return null};Ft.registerSaveRouter(_0);Ft.registerLoadRouter(_0);function oy(e,t){return new ly(e,t)}function FF(e,t){return oy(e,t)}var uy=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},VF=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function AF(e,t,n,a){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new uy(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new uy({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new uy({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a}))}function $F(e){return new VF(e)}var E0={};Le(E0,{confusionMatrix:()=>UF});function GF(e,t,n=!1,a=!1){let r=E(e,"a","matMul"),s=E(t,"b","matMul");[r,s]=Nt(r,s);let i={a:r,b:s},o={transposeA:n,transposeB:a};return M.runKernel(Cs,i,o)}var ze=O({matMul_:GF});function HF(e,t,n=1,a=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let r={indices:E(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:a};return M.runKernel(Js,r,s)}var Fl=O({oneHot_:HF});function jF(e,t){let n=E(e,"x","transpose");if(t==null&&(t=n.shape.map((s,i)=>i).reverse()),$(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(s=>{$(s>=0&&s<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let a={x:n},r={perm:t};return M.runKernel(fi,a,r)}var Ve=O({transpose_:jF});function qF(e,t,n){let a=E(e,"labels","confusionMatrix"),r=E(t,"predictions","confusionMatrix");$(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),$(a.rank===1,()=>`Expected the rank of labels to be 1, but got ${a.rank}`),$(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),$(a.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${a.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),$(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let s=Fl(ue(a,"int32"),n),i=Fl(ue(r,"int32"),n),o=Ve(s),l=ze(o,i);return ue(l,"int32")}var UF=O({confusionMatrix_:qF}),ki={};Le(ki,{fromPixels:()=>YF,fromPixelsAsync:()=>KF,toPixels:()=>XF});function Kd(e,t,n){if(ks(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let a=Va(e,n);if(a.length!==3&&a.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(a.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return qr(e,t,a,n)}var Al;function F0(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&e instanceof ImageData)a=!0;else if(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)s=!0;else if(e.getContext!=null)i=!0;else if(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(r){let d=2;if(r&&e.readyState<d)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(Wd(zd,M.backendName)!=null){let d={pixels:e},h={numChannels:t};return M.runKernel(zd,d,h)}let[l,c]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height],u;i?u=e.getContext("2d").getImageData(0,0,l,c).data:a||n?u=e.data:(s||r||o)&&(Al==null&&(Al=document.createElement("canvas").getContext("2d")),Al.canvas.width=l,Al.canvas.height=c,Al.drawImage(e,0,0,l,c),u=Al.getImageData(0,0,l,c).data);let p;if(t===4)p=new Int32Array(u);else{let d=l*c;p=new Int32Array(d*t);for(let h=0;h<d;h++)for(let m=0;m<t;++m)p[h*t+m]=u[h*4+m]}return Kd(p,[c,l,t],"int32")}function JF(e){return e!=null&&e.data instanceof Uint8Array}function QF(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function ZF(e){return e!=null&&e.width!==0&&e.height!==0}function eA(e){return QF()&&!(e instanceof ImageBitmap)&&ZF(e)&&!JF(e)}async function KF(e,t=3){let n=null;if(Z().getBool("WRAP_TO_IMAGEBITMAP")&&eA(e)){let a;try{a=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){a=null}a!=null&&a.width===e.width&&a.height===e.height?n=a:n=e}else n=e;return F0(n,t)}async function XF(e,t){let n=E(e,"img","toPixels");if(!(e instanceof Ee)){let c=n;n=ue(c,"int32"),c.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[a,r]=n.shape.slice(0,2),s=n.rank===2?1:n.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let i=await n.data(),o=n.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*a*4);for(let c=0;c<a*r;++c){let u=[0,0,0,255];for(let d=0;d<s;d++){let h=i[c*s+d];if(n.dtype==="float32"){if(h<0||h>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${h}.`)}else if(n.dtype==="int32"&&(h<0||h>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${h}.`);s===1?(u[0]=h*o,u[1]=h*o,u[2]=h*o):u[d]=h*o}let p=c*4;l[p+0]=Math.round(u[0]),l[p+1]=Math.round(u[1]),l[p+2]=Math.round(u[2]),l[p+3]=Math.round(u[3])}if(t!=null){t.width=r,t.height=a;let c=t.getContext("2d"),u=new ImageData(l,r,a);c.putImageData(u,0,0)}return n!==e&&n.dispose(),l}var YF=O({fromPixels_:F0}),cy={};Le(cy,{prepareAndValidate:()=>A0});function A0(e,t){let n=e.shape.length,a=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(a<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${a}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[a-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[a-1]} vs. ${n}`);if(Ot(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,s=r[r.length-1],i=1;for(let p=0;p<r.length-1;++p)i*=r[p];let o=e.shape,l=r.slice();l.pop();let c=1;for(let p=s;p<n;++p)c*=o[p],l.push(o[p]);let u=[...To(e.shape).map(p=>p/c),1].slice(0,s);return[l,i,c,u]}var py={};Le(py,{calculateShapes:()=>$0,validateInput:()=>hy,validateUpdateShape:()=>dy});function dy(e,t,n){let a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${a}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(s+` update.rank < ${r}. `);if(e.length<a+(n.rank-r))throw new Error(s+` Output shape length < ${a+(n.rank-r)}`);if(n.rank!==r+e.length-a)throw new Error(s+` update.rank != ${r+e.length-a}`);for(let i=0;i<r;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-r;++i)if(n.shape[i+r]!==e[i+a])throw new Error(s+` updates.shape[${i+r}] (${n.shape[i+r]}) != shape[${i+r}] (${e[i+r]})`)}function hy(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}dy(n,t,e)}function $0(e,t,n){let a=t.shape.length,r=a>1?t.shape[a-1]:1,s=n.length,i=1;for(let p=r;p<s;++p)i*=n[p];let o=r<1?1:r,l=Ot(t.shape)/o,c=[...To(n.slice(0,r)),1],u=Ot(n);return{sliceRank:r,numUpdates:l,sliceSize:i,strides:c,outputSize:u}}var an={};Le(an,{assertParamsValid:()=>tA,computeFlatOffset:()=>aA,computeOutShape:()=>D0,getNormalizedAxes:()=>M0,isSliceContinous:()=>nA,maskToAxes:()=>Xd,parseSliceParams:()=>B0,sliceInfo:()=>rA,startForAxis:()=>z0,startIndicesWithElidedDims:()=>P0,stopForAxis:()=>W0,stopIndicesWithElidedDims:()=>O0,stridesForAxis:()=>L0,stridesWithElidedDims:()=>R0});function tA(e,t,n){let a=e.shape.length;$(a===t.length,()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`),$(a===n.length,()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`);for(let r=0;r<a;++r)$(t[r]+n[r]<=e.shape[r],()=>`Error in slice${a}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function Xd(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function D0(e,t,n){let a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function R0(e,t,n,a){let r=[...e];for(let s=r.length;s<a.length;s++)r.push(1);for(let s=0;s<n;s++)s===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function V0(e,t,n){return n<=e?n:n-(t-1)}function U0(e,t){let n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function M0(e,t,n,a,r,s,i,o,l){let c=e.length,u=new Array(c),p=new Array(c),d=new Array(c);if(t.length&&n>0){let h=t[0],m=n+1;u=P0(i,h,m,a,e),p=O0(o,h,m,r,e),d=R0(s,h,m,e)}else for(let h=0;h<c;h++)u[h]=z0(i,a,s,e,h,l),p[h]=W0(o,r,s,e,h,l),d[h]=L0(s,h,l);return{begin:u,end:p,strides:d}}function P0(e,t,n,a,r){let s=[...r],i=U0(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{let l=V0(t,n,o),c=a[l];e&1<<l&&(c=0),s[o]=c}return s}function O0(e,t,n,a,r){let s=[...r],i=U0(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{let l=V0(t,n,o),c=a[l];e&1<<l&&(c=Number.MAX_SAFE_INTEGER),s[o]=c}for(let o=0;o<s.length;o++){let l=r[o];s[o]<0&&(s[o]+=l),s[o]=qu(0,s[o],r[o])}return s}function L0(e,t,n){let a=e[t];return(n&1<<t||a==null)&&(a=1),a}function z0(e,t,n,a,r,s){let i=t[r],o=n[r]||1;(e&1<<r||s&1<<r||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let l=a[r];return i<0&&(i+=l),i=qu(0,i,l-1),i}function W0(e,t,n,a,r,s){let i=t[r],o=n[r]||1;(e&1<<r||s&1<<r||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let l=a[r];return i<0&&(i+=l),o>0?i=qu(0,i,l):i=qu(-1,i,l-1),i}function nA(e,t,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function aA(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function B0(e,t,n){let a,r=e.shape.length;typeof t=="number"?a=[t,...new Array(r-1).fill(0)]:t.length<r?a=t.concat(new Array(r-t.length).fill(0)):a=t.slice(),a.forEach(i=>{$(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return n==null?s=new Array(r).fill(-1):typeof n=="number"?s=[n,...new Array(r-1).fill(-1)]:n.length<r?s=n.concat(new Array(r-n.length).fill(-1)):s=n,s=s.map((i,o)=>i>=0?i:($(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),e.shape[o]-a[o])),[a,s]}function rA(e,t,n,a,r,s,i,o,l){let c=t.slice(),u=n.slice(),p=a;a==null&&(p=new Array(c.length));let d=Xd(i);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(i!==0&&o!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(i!==0&&l!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let h=e.length-c.length,m=Xd(o),f=e.slice();m.forEach(k=>{c[k]=0,u[k]=1,f.splice(k,0,1)});let{begin:g,end:y,strides:b}=M0(f,d,h,c,u,p,r,s,i);c=g,u=y,p=b;let x=Xd(l);x.forEach(k=>{u[k]=c[k]+1,p[k]=1});let v=D0(c,u,p),T=v.filter((k,S)=>x.indexOf(S)===-1);return{nonStrided:p.every(k=>k===1),$begin:c,$end:u,$strides:p,size:v,newShape:f,outShape:T}}var re={};Le(re,{Serializable:()=>G0,SerializationMap:()=>Ii,registerClass:()=>Yr});var G0=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Ii=class{constructor(){this.classNameMap={}}static getMap(){return Ii.instance==null&&(Ii.instance=new Ii),Ii.instance}static register(e){Ii.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Yr(e){$(e.className!=null,()=>"Class being registered does not have the static className property defined."),$(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),$(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Ii.register(e)}var H0={};Le(H0,{TEST_EPSILON_FLOAT16:()=>j0,encodeStrings:()=>q0,expectArrayBuffersEqual:()=>cA,expectArraysClose:()=>sA,expectArraysEqual:()=>oA,expectNumbersClose:()=>lA,expectPromiseToFail:()=>iA,expectValuesInRange:()=>uA,testEpsilon:()=>my});var pA=.001,j0=.1;function sA(e,t,n){return n==null&&(n=my()),fy(e,t,(a,r)=>gy(a,r,n))}function my(){return M.backend.floatPrecision()===32?pA:j0}function fy(e,t,n){let a=!0;if((cn(e)||cn(t))&&(a=!1),cn(e)&&cn(t)&&(a=!0),a){let i=e.constructor.name,o=t.constructor.name;if(i!==o)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${o}`)}if(Array.isArray(e)&&Array.isArray(t)){let i=Va(e),o=Va(t);if(!hr(i,o))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${o}]`)}let r=cn(e)?e:Is(e),s=cn(t)?t:Is(t);if(r.length!==s.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${s.length}.
Actual:   ${r}.
Expected: ${s}.`);for(let i=0;i<s.length;++i){let o=r[i],l=s[i];if(!n(o,l))throw new Error(`Arrays differ: actual[${i}] = ${o}, expected[${i}] = ${l}.
Actual:   ${r}.
Expected: ${s}.`)}}function iA(e,t){e().then(()=>t.fail(),()=>t())}function oA(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return zr(e)||zr(e[0])||zr(t)||zr(t[0])?fy(e,n,(a,r)=>a==r):fy(e,t,(a,r)=>gy(a,r,0))}function lA(e,t,n){if(n==null&&(n=my()),!gy(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function gy(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function uA(e,t,n){for(let a=0;a<e.length;a++)if(e[a]<t||e[a]>n)throw new Error(`Value out of range:${e[a]} low: ${t}, high: ${n}`)}function cA(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function q0(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?q0(n):e[t]=fc(n)}return e}var K0="3.3.0";function dA(){Z().set("PROD",!0)}function hA(){Z().set("DEBUG",!0)}function mA(){Z().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function yy(e){Z().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}WE(yy);function fA(){M.disposeVariables()}function Ua(){return M}function Yd(){return M.memory()}function gA(e){return M.profile(e)}function D(e,t){return M.tidy(e,t)}function Ae(e){jg(e).forEach(t=>t.dispose())}function qt(e){return M.keep(e)}function yA(e){return M.time(e)}function bA(e){return M.setBackend(e)}function xA(){return M.ready()}function vA(){return M.backendName}function wA(e){M.removeBackend(e)}function kA(e){return M.findBackend(e)}function IA(e){return M.findBackendFactory(e)}function Jd(e,t,n=1){return M.registerBackend(e,t,n)}function X0(){return M.backend}function TA(e,t){Z().setPlatform(e,t)}function NA(e,t){let n=E(e,"a","add"),a=E(t,"b","add");[n,a]=Nt(n,a);let r={a:n,b:a};return M.runKernel(Br,r)}var J=O({add_:NA});function SA(e,t){let n=E(e,"a","floorDiv"),a=E(t,"b","floorDiv");[n,a]=Nt(n,a);let r={a:n,b:a};return M.runKernel(Ls,r)}var Qd=O({floorDiv_:SA});function CA(e,t){let n=E(e,"a","div"),a=E(t,"b","div");if([n,a]=Nt(n,a),n.dtype==="int32"&&a.dtype==="int32")return Qd(n,a);let r={a:n,b:a},s={};return M.runKernel(Ms,r,s)}var ye=O({div_:CA});function _A(e,t){let n=E(e,"a","mul"),a=E(t,"b","mul");[n,a]=Nt(n,a);let r={a:n,b:a};return M.runKernel(Ys,r)}var W=O({mul_:_A});function EA(e){let t=E(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return M.runKernel(Qu,n)}else{let n={x:t};return M.runKernel(So,n)}}var zt=O({abs_:EA});function FA(e){let t={x:E(e,"x","acos")};return M.runKernel(Co,t)}var by=O({acos_:FA});function AA(e){let t={x:E(e,"x","acosh")};return M.runKernel(_o,t)}var xy=O({acosh_:AA});function $A(e){$(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),$(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((r,s)=>E(r,`tensors${s}`,"addN")),n=t[0];t.forEach(r=>{if(r.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!hr(r.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let a=t;return M.runKernel(Ts,a)}var Y0=O({addN_:$A});function DA(e,t=null,n=!1){let a={x:E(e,"x","all","bool")},r={axis:t,keepDims:n};return M.runKernel(ld,a,r)}var Zd=O({all_:DA});function RA(e,t=null,n=!1){let a={x:E(e,"x","any","bool")},r={axis:t,keepDims:n};return M.runKernel(ud,a,r)}var Ic=O({any_:RA});function MA(e,t=0){let n={x:E(e,"x","argMax")},a={axis:t};return M.runKernel(Ns,n,a)}var Tc=O({argMax_:MA});function PA(e,t=0){let n={x:E(e,"x","argMin")},a={axis:t};return M.runKernel(Xu,n,a)}var vy=O({argMin_:PA});function OA(e){let t={x:E(e,"x","asin")};return M.runKernel(Eo,t)}var wy=O({asin_:OA});function LA(e){let t={x:E(e,"x","asinh")};return M.runKernel(Fo,t)}var ky=O({asinh_:LA});function zA(e){let t={x:E(e,"x","atan")};return M.runKernel(Ao,t)}var Iy=O({atan_:zA});function WA(e,t){let n=E(e,"a","atan2"),a=E(t,"b","atan2");[n,a]=Nt(n,a);let r={a:n,b:a};return M.runKernel(Do,r)}var Ty=O({atan2_:WA});function BA(e){let t={x:E(e,"x","atanh")};return M.runKernel($o,t)}var Ny=O({atanh_:BA});function VA(e,t,n,a,r="NHWC",s){let i=e[3],o=[...t,i],l=J0(r);return Nc(e,o,n,s,a,null,null,l)}function Q0(e,t,n,a,r,s,i="channelsLast"){let[o,l]=eh(t),c;if(i==="channelsLast")c=[o,l,e[3],e[3]];else if(i==="channelsFirst")c=[o,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return Nc(e,c,n,a,r,s,!1,i)}function UA(e,t,n,a,r,s,i="NDHWC"){let[o,l,c]=Sy(t),u,p;if(i==="NDHWC")p="channelsLast",u=[o,l,c,e[4],e[4]];else if(i==="NCDHW")p="channelsFirst",u=[o,l,c,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return Z0(e,u,n,a,r,!1,p,s)}function Nc(e,t,n,a,r,s,i=!1,o="channelsLast"){let[l,c,u,p]=[-1,-1,-1,-1];if(o==="channelsLast")[l,c,u,p]=e;else if(o==="channelsFirst")[l,p,c,u]=e;else throw new Error(`Unknown dataFormat ${o}`);let[d,h,,m]=t,[f,g]=eh(n),[y,b]=eh(a),x=$l(d,y),v=$l(h,b),{padInfo:T,outHeight:k,outWidth:S}=GA(r,c,u,f,g,x,v,s,o),F=i?m*p:m,A;return o==="channelsFirst"?A=[l,F,k,S]:o==="channelsLast"&&(A=[l,k,S,F]),{batchSize:l,dataFormat:o,inHeight:c,inWidth:u,inChannels:p,outHeight:k,outWidth:S,outChannels:F,padInfo:T,strideHeight:f,strideWidth:g,filterHeight:d,filterWidth:h,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:A,filterShape:t}}function Z0(e,t,n,a,r,s=!1,i="channelsLast",o){let[l,c,u,p,d]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,c,u,p,d]=e;else if(i==="channelsFirst")[l,d,c,u,p]=e;else throw new Error(`Unknown dataFormat ${i}`);let[h,m,f,,g]=t,[y,b,x]=Sy(n),[v,T,k]=Sy(a),S=$l(h,v),F=$l(m,T),A=$l(f,k),{padInfo:R,outDepth:P,outHeight:z,outWidth:V}=HA(r,c,u,p,y,b,x,S,F,A,o),G=s?g*d:g,H;return i==="channelsFirst"?H=[l,G,P,z,V]:i==="channelsLast"&&(H=[l,P,z,V,G]),{batchSize:l,dataFormat:i,inDepth:c,inHeight:u,inWidth:p,inChannels:d,outDepth:P,outHeight:z,outWidth:V,outChannels:G,padInfo:R,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:h,filterHeight:m,filterWidth:f,effectiveFilterDepth:S,effectiveFilterHeight:F,effectiveFilterWidth:A,dilationDepth:v,dilationHeight:T,dilationWidth:k,inShape:e,outShape:H,filterShape:t}}function jA(e,t,n,a,r){a==null&&(a=Cy(e,t,n));let s=e[0],i=e[1],o=Ti((s-t+2*a)/n+1,r),l=Ti((i-t+2*a)/n+1,r);return[o,l]}function qA(e,t,n,a,r,s){r==null&&(r=Cy(e,t,a));let i=e[0],o=e[1],l=e[2],c=Ti((i-t+2*r)/a+1,s),u=Ti((o-t+2*r)/a+1,s),p=Ti((l-t+2*r)/a+1,s);return[c,u,p,n]}function Cy(e,t,n,a=1){let r=$l(t,a);return Math.floor((e[0]*(n-1)-n+r)/2)}function eh(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function Sy(e){return typeof e=="number"?[e,e,e]:e}function $l(e,t){return t<=1?e:e+(e-1)*(t-1)}function GA(e,t,n,a,r,s,i,o,l){let c,u,p;if(typeof e=="number"){c={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let d=jA([t,n],s,a,e,o);u=d[0],p=d[1]}else if(e==="same"){u=Math.ceil(t/a),p=Math.ceil(n/r);let d=Math.max(0,(u-1)*a+s-t),h=Math.max(0,(p-1)*r+i-n),m=Math.floor(d/2),f=d-m,g=Math.floor(h/2),y=h-g;c={top:m,bottom:f,left:g,right:y,type:"SAME"}}else if(e==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-s+1)/a),p=Math.ceil((n-i+1)/r);else if(typeof e=="object"){let d=l==="channelsLast"?e[1][0]:e[2][0],h=l==="channelsLast"?e[1][1]:e[2][1],m=l==="channelsLast"?e[2][0]:e[3][0],f=l==="channelsLast"?e[2][1]:e[3][1];c={top:d,bottom:h,left:m,right:f,type:d===0&&h===0&&m===0&&f===0?"VALID":"EXPLICIT"},u=Ti((t-s+d+h)/a+1,o),p=Ti((n-i+m+f)/r+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:c,outHeight:u,outWidth:p}}function HA(e,t,n,a,r,s,i,o,l,c,u){let p,d,h,m;if(typeof e=="number"){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let f=qA([t,n,a,1],o,1,r,e,u);d=f[0],h=f[1],m=f[2]}else if(e==="same"){d=Math.ceil(t/r),h=Math.ceil(n/s),m=Math.ceil(a/i);let f=(d-1)*r+o-t,g=(h-1)*s+l-n,y=(m-1)*i+c-a,b=Math.floor(f/2),x=f-b,v=Math.floor(g/2),T=g-v,k=Math.floor(y/2),S=y-k;p={top:v,bottom:T,left:k,right:S,front:b,back:x,type:"SAME"}}else if(e==="valid")p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/r),h=Math.ceil((n-l+1)/s),m=Math.ceil((a-c+1)/i);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outDepth:d,outHeight:h,outWidth:m}}function Ti(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Jr(e){let[t,n,a]=eh(e);return t===1&&n===1&&a===1}function Ga(e,t){return Jr(e)||Jr(t)}function J0(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function KA(e,t){let n={x:E(e,"x","reshape","string_or_numeric")},a={shape:t};return M.runKernel(cl,n,a)}var U=O({reshape_:KA});function XA(e,t,n,a,r){let s=E(e,"x","avgPool","float32"),i=1;$(Ga(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let o=s,l=!1;s.rank===3&&(l=!0,o=U(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),r!=null&&$(Ht(a),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${a}.`);let c={x:o},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r},p=M.runKernel(Ss,c,u);return p=ue(p,s.dtype),l?U(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Qn=O({avgPool_:XA});function YA(e,t,n,a,r,s="NDHWC"){let i=E(e,"x","avgPool3d","float32"),o=i,l=!1;i.rank===4&&(l=!0,o=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),$(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),r!=null&&$(Ht(a),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${a}.`);let c={x:o},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},p=M.runKernel(Yu,c,u);return p=ue(p,o.dtype),l?U(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var _y=O({avgPool3d_:YA});function JA(e,t=0){$(e.length>=1,()=>"Pass at least one tensor to concat");let n=wc(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),n.length===1)return Xr(n[0]);let a=n,r={axis:t};return M.runKernel(Ro,a,r)}var Je=O({concat_:JA});function QA(e){let t={x:E(e,"x","sigmoid")};return M.runKernel(li,t)}var ca=O({sigmoid_:QA});function ZA(e,t,n){let a=E(e,"x","slice","string_or_numeric");if(a.rank===0)throw new Error("Slicing scalar is not possible");let r={x:a},s={begin:t,size:n};return M.runKernel(ml,r,s)}var Be=O({slice_:ZA});function e$(e){let t={x:E(e,"x","tanh")};return M.runKernel(mi,t)}var Dl=O({tanh_:e$});function t$(e,t,n,a,r,s){let i=E(e,"forgetBias","basicLSTMCell"),o=E(t,"lstmKernel","basicLSTMCell"),l=E(n,"lstmBias","basicLSTMCell"),c=E(a,"data","basicLSTMCell"),u=E(r,"c","basicLSTMCell"),p=E(s,"h","basicLSTMCell"),d=Je([c,p],1),h=ze(d,o),m=J(h,l),f=m.shape[0],g=m.shape[1]/4,y=[f,g],b=Be(m,[0,0],y),x=Be(m,[0,g],y),v=Be(m,[0,g*2],y),T=Be(m,[0,g*3],y),k=J(W(ca(b),Dl(x)),W(u,ca(J(i,v)))),S=W(Dl(k),ca(T));return[k,S]}var n$=O({basicLSTMCell_:t$});function a$(e,t,n){let a=E(e,"x","batchToSpaceND"),r=t.reduce((o,l)=>o*l);$(a.rank>=1+t.length,()=>`input rank is ${a.rank} but should be > than blockShape.length ${t.length}`),$(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),$(a.shape[0]%r==0,()=>`input tensor batch is ${a.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);let s={x:a},i={blockShape:t,crops:n};return M.runKernel(Ju,s,i)}var Sc=O({batchToSpaceND_:a$});function r$(e){let t;return e.rank===0||e.rank===1?t=U(e,[1,1,1,e.size]):e.rank===2?t=U(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function s$(e,t,n,a,r,s){s==null&&(s=.001);let i=E(e,"x","batchNorm"),o=E(t,"mean","batchNorm"),l=E(n,"variance","batchNorm"),c;r!=null&&(c=E(r,"scale","batchNorm"));let u;a!=null&&(u=E(a,"offset","batchNorm")),$(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),$(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),$(c==null||o.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let p={x:r$(i),scale:c,offset:u,mean:o,variance:l},d={varianceEpsilon:s},h=M.runKernel(zs,p,d);return U(h,i.shape)}var fr=O({batchNorm_:s$});function i$(e,t,n,a,r,s){let i=E(e,"x","batchNorm"),o=E(t,"mean","batchNorm"),l=E(n,"variance","batchNorm"),c;r!=null&&(c=E(r,"scale","batchNorm"));let u;return a!=null&&(u=E(a,"offset","batchNorm")),$(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),$(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),$(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&$(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&$(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),fr(i,o,l,u,c,s)}var ek=O({batchNorm2d_:i$});function o$(e,t,n,a,r,s){let i=E(e,"x","batchNorm"),o=E(t,"mean","batchNorm"),l=E(n,"variance","batchNorm"),c;r!=null&&(c=E(r,"scale","batchNorm"));let u;return a!=null&&(u=E(a,"offset","batchNorm")),$(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),$(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),$(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&$(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&$(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),fr(i,o,l,u,c,s)}var tk=O({batchNorm3d_:o$});function l$(e,t,n,a,r,s){let i=E(e,"x","batchNorm"),o=E(t,"mean","batchNorm"),l=E(n,"variance","batchNorm"),c;r!=null&&(c=E(r,"scale","batchNorm"));let u;return a!=null&&(u=E(a,"offset","batchNorm")),$(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),$(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),$(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&$(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&$(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),fr(i,o,l,u,c,s)}var nk=O({batchNorm4d_:l$});function u$(e,t,n){let a=E(e,"x","bincount"),r=E(t,"weights","bincount");$(a.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${a.dtype}`),$(n>=0,()=>`size must be non-negative, but got ${n}.`),$(r.size===a.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${a.shape}, weights shape: ${r.shape}.`);let s={x:a,weights:r},i={size:n};return M.runKernel(dd,s,i)}var ak=O({bincount_:u$});function c$(e,t){let n=E(e,"broadcastTo","x"),a=n.shape;if(t.some(l=>!(l>0)||l%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let l=n.shape.slice();for(;l.length<t.length;)l.unshift(1);n=U(n,l)}let r=n.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(r[l]===t[l])s[l]=1;else if(n.shape[l]!==1)throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${t}].`);if(s.map((l,c)=>l>1?c:-1).filter(l=>l>=0).length===0)return Xr(n);let i={x:n},o={reps:s};return M.runKernel(Ur,i,o)}var Cc=O({broadcastTo_:c$});function p$(e){let t={x:E(e,"x","ceil")};return M.runKernel(Es,t)}var Ey=O({ceil_:p$});function d$(e,t,n){let a=E(e,"x","clipByValue");$(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);let r={x:a},s={clipValueMin:t,clipValueMax:n};return M.runKernel(Vr,r,s)}var Kt=O({clipByValue_:d$});function h$(e){return Je(e,0)}var rk=O({concat1d_:h$});function m$(e,t){return Je(e,t)}var sk=O({concat2d_:m$});function f$(e,t){return Je(e,t)}var ik=O({concat3d_:f$});function g$(e,t){return Je(e,t)}var ok=O({concat4d_:g$});function y$(e,t,n,a,r="NHWC",s=[1,1],i){let o=E(e,"x","conv2d"),l=E(t,"filter","conv2d"),c=o,u=!1;o.rank===3&&(u=!0,c=U(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),$(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),i!=null&&$(Ht(a),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);let p=r==="NHWC"?c.shape[3]:c.shape[1];$(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),$(Ga(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);let d={x:c,filter:l},h={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i},m=M.runKernel(Fs,d,h);return u?U(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var At=O({conv2d_:y$});function b$(e,t,n,a,r="NWC",s=1,i){let o=E(e,"x","conv1d"),l=E(t,"filter","conv1d"),c=o,u=!1;o.rank===2&&(u=!0,c=U(o,[1,o.shape[0],o.shape[1]])),$(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),$(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),i!=null&&$(Ht(a),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`),$(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),$(Ga(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),$(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let p=U(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=U(c,[c.shape[0],1,c.shape[1],c.shape[2]]),h=At(d,p,[1,n],a,"NHWC",[1,s],i);return u?U(h,[h.shape[2],h.shape[3]]):U(h,[h.shape[0],h.shape[2],h.shape[3]])}var th=O({conv1d_:b$});function x$(e,t,n,a,r,s="NHWC",i){$(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,c=!1;t.rank===3&&(c=!0,l=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),$(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),$(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),$(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let u=s==="NHWC"?o[3]:o[1],p=s==="NHWC"?l.shape[3]:l.shape[1];$(u===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[2]}.`),$(p===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`),i!=null&&$(Ht(r),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);let d={dy:l,filter:n},h={strides:a,pad:r,dataFormat:s,dimRoundingMode:i,inputShape:o},m=M.runKernel(As,d,h);return c?U(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Fy=O({conv2DBackpropInput_:x$});function v$(e,t,n,a,r,s){let i=E(e,"x","conv2dTranspose"),o=E(t,"filter","conv2dTranspose");return Fy(n,i,o,a,r,"NHWC",s)}var nh=O({conv2dTranspose_:v$});function w$(e,t,n,a,r="NDHWC",s=[1,1,1]){let i=E(e,"x","conv3d"),o=E(t,"filter","conv3d"),l=i,c=!1;i.rank===4&&(c=!0,l=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),$(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),$(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),$(Ga(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),$(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);let u={x:l,filter:o},p={strides:n,pad:a,dataFormat:r,dilations:s},d=M.runKernel(Zu,u,p);return c?U(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var Ay=O({conv3d_:w$});function k$(e,t,n,a,r){$(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;t.rank===4&&(o=!0,i=U(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],c=i.shape[4];$(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),$(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),$(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),$(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),$(c===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`);let u={dy:i,filter:n},p={pad:r,strides:a,inputShape:s},d=M.runKernel(gd,u,p);return o?U(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var lk=O({conv3DBackpropInput_:k$});function I$(e,t,n,a,r){let s=E(e,"x","conv3dTranspose"),i=E(t,"filter","conv3dTranspose");return lk(n,s,i,a,r)}var T$=O({conv3dTranspose_:I$});function N$(e){let t={x:E(e,"x","cos")};return M.runKernel($s,t)}var _c=O({cos_:N$});function S$(e){let t={x:E(e,"x","cosh")};return M.runKernel(Mo,t)}var ah=O({cosh_:S$});function C$(e,t=0,n=!1,a=!1){let r={x:E(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:a};return M.runKernel(Ds,r,s)}var rh=O({cumsum_:C$});function _$(e,t,n,a=!1){let r=E(e,"x","denseBincount"),s=E(t,"weights","denseBincount");$(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),$(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),$(n>=0,()=>`size must be non-negative, but got ${n}.`),$(s.size===r.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${s.shape}.`);let i={x:r,weights:s},o={size:n,binaryOutput:a};return M.runKernel(yd,i,o)}var uk=O({denseBincount_:_$});function E$(e,t,n="NHWC"){let a=E(e,"x","depthToSpace"),r=n==="NHWC"?a.shape[1]:a.shape[2],s=n==="NHWC"?a.shape[2]:a.shape[3],i=n==="NHWC"?a.shape[3]:a.shape[1];$(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${a.shape}`),$(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${a.shape}`),$(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${a.shape}`);let o={x:a},l={blockSize:t,dataFormat:n};return M.runKernel(Oo,o,l)}var $y=O({depthToSpace_:E$});function F$(e,t,n,a,r="NHWC",s=[1,1],i){let o=E(e,"x","depthwiseConv2d"),l=E(t,"filter","depthwiseConv2d"),c=o,u=!1;o.rank===3&&(u=!0,c=U(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),$(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),$(c.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),i!=null&&$(Ht(a),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);let p={x:c,filter:l},d={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i},h=M.runKernel(Rs,p,d);return u?U(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Qr=O({depthwiseConv2d_:F$});function A$(e){let t={x:E(e,"x","diag")};return M.runKernel(vd,t)}var $$=O({diag_:A$});function D$(e,t,n,a,r=[1,1],s="NHWC"){let i=E(e,"x","dilation2d"),o=E(t,"filter","dilation2d");$(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),$(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),$(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,c=!1;i.rank===3&&(l=U(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0);let u={x:l,filter:o},p={strides:n,pad:a,dilations:r},d=M.runKernel(ec,u,p);return c?U(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Dy=O({dilation2d_:D$});function R$(e,t){let n=e.length,a=[];for(let r=0;r<n;r++){let s=n-1-r,i=e[s]||1;(t[t.length-1-r]||1)>1&&i===1&&a.unshift(s)}return a}function Wt(e,t){let n=[];for(let a=0;a<t.length;a++){let r=e[e.length-a-1],s=t.length-a-1,i=t[s];(r==null||r===1&&i>1)&&n.unshift(s)}return n}function bt(e,t){let n=[],a=Math.max(e.length,t.length);for(let r=0;r<a;r++){let s=e[e.length-r-1];s==null&&(s=1);let i=t[t.length-r-1];if(i==null&&(i=1),s===1)n.unshift(i);else if(i===1)n.unshift(s);else if(s!==i){let o=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(o)}else n.unshift(s)}return n}function M$(e,t){let n=E(e,"a","equal"),a=E(t,"b","equal");[n,a]=Nt(n,a),bt(n.shape,a.shape);let r={a:n,b:a};return M.runKernel(Wo,r)}var Zr=O({equal_:M$});function P$(e,t,n){let a=E(t,"a","where"),r=E(n,"b","where"),s=E(e,"condition","where","bool"),i=bt(a.shape,r.shape),o=Cc(a,i),l=Cc(r,i);s.rank===1&&$(s.shape[0]===a.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),s.rank!==1&&un(s.shape,l.shape,"Error in where: ");let c={condition:s,t:o,e:l};return M.runKernel(dl,c)}var Sn=O({where_:P$});function O$(e){let t={x:E(e,"x","zerosLike")};return M.runKernel(Il,t)}var Ge=O({zerosLike_:O$});function L$(e,t){let n=E(e,"a","div"),a=E(t,"b","div");[n,a]=Nt(n,a);let r=ye(n,a),s=Ge(r),i=Zr(a,s);return Sn(i,s,r)}var Ry=O({divNoNan_:L$});function z$(e,t){let n=E(e,"t1","dot"),a=E(t,"t2","dot");$((n.rank===1||n.rank===2)&&(a.rank===1||a.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${a.rank}.`);let r=n.rank===1?n.size:n.shape[1],s=a.rank===1?a.size:a.shape[0];if($(r===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${s}.`),n.rank===1&&a.rank===1){let i=U(n,[1,-1]),o=U(a,[-1,1]),l=ze(i,o);return U(l,[])}else if(n.rank===1&&a.rank===2){let i=U(n,[1,-1]),o=U(a,[a.shape[0],a.shape[1]]),l=ze(i,o);return U(l,[l.size])}else if(n.rank===2&&a.rank===1){let i=U(a,[-1,1]),o=ze(n,i);return U(o,[o.size])}else{let i=U(a,[a.shape[0],a.shape[1]]);return ze(n,i)}}var ck=O({dot_:z$});function W$(e){let t={x:E(e,"x","elu")};return M.runKernel(Lo,t)}var Rl=O({elu_:W$});function B$(e){let t=E(e,"x","erf");$(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=ue(t,"float32"));let n={x:t};return M.runKernel(zo,n)}var My=O({erf_:B$});function V$(e){let t={x:E(e,"x","exp")};return M.runKernel(Ps,t)}var dn=O({exp_:V$});function U$(e,t=0){let n=E(e,"x","expandDims","string_or_numeric");$(t<=n.rank,()=>"Axis must be <= rank of the tensor");let a={input:n},r={dim:t};return M.runKernel(Bo,a,r)}var hn=O({expandDims_:U$});function G$(e){let t={x:E(e,"x","expm1")};return M.runKernel(Vo,t)}var Py=O({expm1_:G$});function H$(e,t){let n=E(e,"x","tile","string_or_numeric");$(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let a={x:n},r={reps:t};return M.runKernel(Ur,a,r)}var Ha=O({tile_:H$});function j$(e,t,n,a="float32"){t==null&&(t=e);let r=Me([e,t],a),s=e<=t?e:t;for(let o=0;o<s;++o)r.set(1,o,o);let i=U(r.toTensor(),[e,t]);if(n==null)return i;if(n.length===1)return Ha(hn(i,0),[n[0],1,1]);if(n.length===2)return Ha(hn(hn(i,0),0),[n[0],n[1],1,1]);if(n.length===3)return Ha(hn(hn(hn(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var Oy=O({eye_:j$});function Cn(e,t,n){let a={shape:e,value:t,dtype:n};return M.runKernel(tc,{},a)}function q$(e){let t={x:E(e,"x","floor")};return M.runKernel(Os,t)}var Ml=O({floor_:q$});function K$(e,t,n=0,a=0){let r=E(e,"x","gather"),s=E(t,"indices","gather","int32"),i={x:r,indices:s},o={axis:n,batchDims:a};return M.runKernel(Go,i,o)}var Ni=O({gather_:K$});function X$(e,t){let n=E(e,"a","greater"),a=E(t,"b","greater");[n,a]=Nt(n,a),bt(n.shape,a.shape);let r={a:n,b:a};return M.runKernel(jo,r)}var pa=O({greater_:X$});function Y$(e,t){let n=E(e,"a","greaterEqual"),a=E(t,"b","greaterEqual");[n,a]=Nt(n,a),bt(n.shape,a.shape);let r={a:n,b:a};return M.runKernel(Ws,r)}var es=O({greaterEqual_:Y$});function J$(e){let t={input:E(e,"input","imag")};return M.runKernel(Sd,t)}var sh=O({imag_:J$});function Q$(e){let t={x:E(e,"x","isFinite")};return M.runKernel(qo,t)}var pk=O({isFinite_:Q$});function Z$(e){let t={x:E(e,"x","isInf")};return M.runKernel(Ko,t)}var dk=O({isInf_:Z$});function eD(e){let t={x:E(e,"x","isNaN")};return M.runKernel(Xo,t)}var hk=O({isNaN_:eD});function tD(e,t=.2){let n={x:E(e,"x","leakyRelu")},a={alpha:t};return M.runKernel(Vs,n,a)}var Ec=O({leakyRelu_:tD});function nD(e,t){let n=E(e,"a","less"),a=E(t,"b","less");[n,a]=Nt(n,a),bt(n.shape,a.shape);let r={a:n,b:a};return M.runKernel(Yo,r)}var ih=O({less_:nD});function aD(e,t){let n=E(e,"a","lessEqual"),a=E(t,"b","lessEqual");[n,a]=Nt(n,a),bt(n.shape,a.shape);let r={a:n,b:a};return M.runKernel(Jo,r)}var Si=O({lessEqual_:aD});function mk(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let a={start:e,stop:t,num:n};return M.runKernel(Cd,{},a)}function rD(e,t=5,n=1,a=1,r=.5){let s=E(e,"x","localResponseNormalization");$(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),$(Ht(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;s.rank===3&&(o=!0,i=U(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},c={depthRadius:t,bias:n,alpha:a,beta:r},u=M.runKernel(rc,l,c);return o?U(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var Ly=O({localResponseNormalization_:rD});function sD(e){let t={x:E(e,"x","log")};return M.runKernel(Us,t)}var Pn=O({log_:sD});function iD(e){let t={x:E(e,"x","log1p")};return M.runKernel(Qo,t)}var oh=O({log1p_:iD});function oD(e){return $(Wr(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let a=E(t,"x","tf.grad","string_or_numeric"),r=n!=null?E(n,"dy","tf.grad"):null;return M.tidy(()=>{let{value:s,grads:i}=M.gradients(()=>e(a),[a],r);return r!=null&&un(s.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),lh(i),i[0]})}}function lD(e){return $(Wr(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{$(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let a=wc(t,"args","tf.grads","string_or_numeric"),r=n!=null?E(n,"dy","tf.grads"):null;return M.tidy(()=>{let{value:s,grads:i}=M.gradients(()=>e(...a),a,r);return r!=null&&un(s.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),lh(i),i})}}function uD(e){return $(Wr(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{$(t instanceof Ee,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),$(n==null||n instanceof Ee,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:a,value:r}=M.gradients(()=>e(t),[t],n);return lh(a),{grad:a[0],value:r}}}function cD(e){return $(Wr(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{$(Array.isArray(t)&&t.every(r=>r instanceof Ee),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),$(n==null||n instanceof Ee,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let a=M.gradients(()=>e(...t),t,n);return n!=null&&un(a.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),lh(a.grads),a}}function fk(e,t){$(Wr(e),()=>"The f passed in variableGrads(f) must be a function"),$(t==null||Array.isArray(t)&&t.every(c=>c instanceof Hr),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let c in M.registeredVariables)t.push(M.registeredVariables[c])}let a=n?t.filter(c=>!c.trainable):null,r=t.length;t=t.filter(c=>c.trainable),$(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let s=!0,{value:i,grads:o}=M.gradients(e,t,null,s);$(o.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),$(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return t.forEach((c,u)=>{o[u]!=null&&(l[c.name]=o[u])}),a!=null&&a.forEach(c=>l[c.name]=null),{value:i,grads:l}}function ja(e){return M.customGrad(e)}function lh(e){if(e.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function pD(e){let t={x:E(e,"x","neg")};return M.runKernel(tl,t)}var St=O({neg_:pD});function dD(e){let t={x:E(e,"x","softplus")};return M.runKernel(yl,t)}var Pl=O({softplus_:dD});function hD(e){let t=E(e,"x","logSigmoid");return ja(n=>({value:St(Pl(St(n))),gradFunc:a=>W(a,ca(St(n)))}))(t)}var gk=O({logSigmoid_:hD});function mD(e,t=null,n=!1){let a={x:E(e,"x","max")},r={reductionIndices:t,keepDims:n};return M.runKernel(Gs,a,r)}var Zn=O({max_:mD});function fD(e,t){let n=E(e,"a","sub"),a=E(t,"b","sub");[n,a]=Nt(n,a);let r={a:n,b:a};return M.runKernel(hi,r)}var he=O({sub_:fD});function gD(e,t=null,n=!1){let a=E(e,"x","sum");a.dtype==="bool"&&(a=ue(a,"int32"));let r={x:a},s={axis:t,keepDims:n};return M.runKernel(ci,r,s)}var Se=O({sum_:gD});function yD(e,t=-1){let n=E(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return ja((a,r)=>{let s=!0,i=Zn(a,t,!0),o=he(a,i),l=he(ue(o,"float32"),Pn(Se(dn(o),t,s)));return r([l]),{value:l,gradFunc:(c,u)=>{let[p]=u,d=!0,h=dn(p);return he(c,W(Se(c,t,d),h))}}})(n)}var uh=O({logSoftmax_:yD});function zy(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function yk(e,t,n){let a=e.length+t.length,r=[],s=0,i=0;for(let o=0;o<a;o++)n.indexOf(o)===-1?r.push(e[s++]):r.push(t[i++]);return r}function bk(e,t){let n=[],a=e.length;for(let s=0;s<a;s++)t.indexOf(s)===-1&&n.push(e[s]);let r=t.map(s=>e[s]);return[n,r]}function Ci(e,t){let n=t.map(a=>1);return yk(e,n,t)}function bD(e,t,n){$(zy(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function xk(e,t){if(zy(e,t))return null;let n=[];for(let a=0;a<t;++a)e.indexOf(a)===-1&&n.push(a);return e.forEach(a=>n.push(a)),n}function Wy(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function xD(e,t){let n=[];for(let a=t-e;a<t;++a)n.push(a);return n}function vD(e,t=null,n=!1){let a=E(e,"x","logSumExp"),r=la(t,a.shape),s=Zn(a,r,!0),i=he(a,s),o=dn(i),l=Se(o,r),c=Pn(l),u=J(U(s,c.shape),c);if(n){let p=Ci(u.shape,r);return U(u,p)}return u}var By=O({logSumExp_:vD});function wD(e,t){let n=E(e,"a","logicalAnd","bool"),a=E(t,"b","logicalAnd","bool");bt(n.shape,a.shape);let r={a:n,b:a};return M.runKernel(Zo,r)}var da=O({logicalAnd_:wD});function kD(e){let t={x:E(e,"x","logicalNot","bool")};return M.runKernel(nc,t)}var Fc=O({logicalNot_:kD});function ID(e,t){let n=E(e,"a","logicalOr","bool"),a=E(t,"b","logicalOr","bool");bt(n.shape,a.shape);let r={a:n,b:a};return M.runKernel(ac,r)}var ch=O({logicalOr_:ID});function TD(e,t){let n=E(e,"a","logicalXor","bool"),a=E(t,"b","logicalXor","bool");return bt(n.shape,a.shape),da(ch(e,t),Fc(da(e,t)))}var vk=O({logicalXor_:TD});function ND(e,t,n,a,r){let s=E(e,"x","maxPool"),i=1,o=s,l=!1;s.rank===3&&(l=!0,o=U(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),$(Ga(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),r!=null&&$(Ht(a),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${a}.`);let c={x:o},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r},p=M.runKernel(js,c,u);return l?U(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var $t=O({maxPool_:ND});function SD(e,t=[1,1,1],n,a,r,s="NDHWC"){let i=E(e,"x","maxPool3d"),o=i,l=!1;i.rank===4&&(l=!0,o=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),$(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),r!=null&&$(Ht(a),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${a}.`);let c={x:o},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},p=M.runKernel(sc,c,u);return l?U(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Vy=O({maxPool3d_:SD});function CD(e,t,n,a,r=!1){let s={x:E(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},o=M.runKernel(Ad,s,i);return{result:o[0],indexes:o[1]}}var wk=O({maxPoolWithArgmax_:CD});function _D(e,t){let n=E(e,"a","maximum"),a=E(t,"b","maximum");[n,a]=Nt(n,a),n.dtype==="bool"&&(n=ue(n,"int32"),a=ue(a,"int32")),bt(n.shape,a.shape);let r={a:n,b:a};return M.runKernel(Hs,r)}var qa=O({maximum_:_D});function ED(e,t=null,n=!1){let a={x:E(e,"x","mean")},r={axis:t,keepDims:n};return M.runKernel(qs,a,r)}var Ct=O({mean_:ED});function FD(e,t=null,n=!1){let a={x:E(e,"x","min")},r={axis:t,keepDims:n};return M.runKernel(Ks,a,r)}var Ol=O({min_:FD});function AD(e,t){let n=E(e,"a","minimum"),a=E(t,"b","minimum");[n,a]=Nt(n,a),n.dtype==="bool"&&(n=ue(n,"int32"),a=ue(a,"int32")),bt(n.shape,a.shape);let r={a:n,b:a};return M.runKernel(Xs,r)}var Ll=O({minimum_:AD});function $D(e,t,n){$(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let a=E(e,"x","mirrorPad");if(a.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");$(t.length===a.rank,()=>`Padding doesn't match input. Must be ${a.rank}. Got ${t.length}.`);let r=n==="reflect"?1:0;for(let o=0;o<a.rank;o++)$(t[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$(t[o][0]>=0&&t[o][0]<=a.shape[o]-r&&t[o][1]>=0&&t[o][1]<=a.shape[o]-r,()=>`Padding in dimension ${o} cannot be greater than or equal to ${a.shape[o]-r} or less than 0 for input of shape ${a.shape}`);let s={paddings:t,mode:n},i={x:a};return M.runKernel(ic,i,s)}var Uy=O({mirrorPad_:$D});function DD(e,t){let n=E(e,"a","mod"),a=E(t,"b","mod");[n,a]=Nt(n,a);let r={a:n,b:a};return M.runKernel(el,r)}var Gy=O({mod_:DD});function RD(e){let t=E(e,"x","square"),n={};return M.runKernel("Square",{x:t},n)}var ot=O({square_:RD});function MD(e,t=null,n=!1){e=E(e,"x","moments");let a=la(t,e.shape),r=Ct(e,a,n),s=r.shape;n||(s=Ci(r.shape,a));let i=ot(he(ue(e,"float32"),U(r,s))),o=Ct(i,a,n);return{mean:r,variance:o}}var ph=O({moments_:MD});function PD(e,t,n,a){let r=E(t,"data","multiRNNCell"),s=wc(n,"c","multiRNNCell"),i=wc(a,"h","multiRNNCell"),o=r,l=[];for(let p=0;p<e.length;p++){let d=e[p](o,s[p],i[p]);l.push(d[0]),l.push(d[1]),o=d[1]}let c=[],u=[];for(let p=0;p<l.length;p+=2)c.push(l[p]),u.push(l[p+1]);return[c,u]}var OD=O({multiRNNCell_:PD});function LD(e,t,n,a=!1){let r=E(e,"logits","multinomial"),s=r.size,i=r.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:i===1?U(r,[1,-1]):r},l={numSamples:t,seed:n,normalized:a},c=M.runKernel($d,o,l);return i===1?U(c,[c.size]):c}var kk=O({multinomial_:LD});function zD(e,t){let n=E(e,"a","notEqual"),a=E(t,"b","notEqual");[n,a]=Nt(n,a),bt(n.shape,a.shape);let r={a:n,b:a};return M.runKernel(nl,r)}var _i=O({notEqual_:zD});function xt(e,t="float32"){if(t==="complex64"){let a=xt(e,"float32"),r=xt(e,"float32");return jr(a,r)}let n=od(Ot(e),t);return M.makeTensor(n,e,t)}function Ka(e,t="float32"){if(t==="complex64"){let a=Ka(e,"float32"),r=xt(e,"float32");return jr(a,r)}let n=Og(Ot(e),t);return M.makeTensor(n,e,t)}function WD(e){let t={x:E(e,"x","onesLike")};return M.runKernel(il,t)}var On=O({onesLike_:WD});function BD(e,t){let n=E(e,"v1","outerProduct"),a=E(t,"v2","outerProduct");$(n.rank===1&&a.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${a.rank}.`);let r=U(n,[-1,1]),s=U(a,[1,-1]);return ze(r,s)}var VD=O({outerProduct_:BD});function UD(e,t,n=0){let a=E(e,"x","pad");if(a.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},s={x:a};return M.runKernel(Qs,s,r)}var ea=O({pad_:UD});function GD(e,t,n=0){return $(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),ea(e,[t],n)}var HD=O({pad1d_:GD});function jD(e,t,n=0){return $(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),ea(e,t,n)}var qD=O({pad2d_:jD});function KD(e,t,n=0){return $(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),ea(e,t,n)}var XD=O({pad3d_:KD});function YD(e,t,n=0){return $(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),ea(e,t,n)}var JD=O({pad4d_:YD});function QD(e,t,n){let a=E(e,"x","spaceToBatchND");$(a.rank>=1+t.length,()=>`input rank ${a.rank} should be > than [blockShape] ${t.length}`),$(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),$(a.shape.reduce((i,o,l)=>l>0&&l<=t.length?i&&(o+n[l-1][0]+n[l-1][1])%t[l-1]==0:i,!0),()=>`input spatial dimensions ${a.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let r={x:a},s={blockShape:t,paddings:n};return M.runKernel(uc,r,s)}var Ac=O({spaceToBatchND_:QD});function tR(e,t,n,a,r,s){r==null&&(r=[1,1]),s==null&&(s=1),a===0&&(a="valid");let i=E(e,"x","maxPool"),o=i,l=!1;i.rank===3&&(l=!0,o=U(i,[1,i.shape[0],i.shape[1],i.shape[2]])),$(Ga(s,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${r}'`);let c=Q0(o.shape,t,s,r,a),u=[c.dilationHeight,c.dilationWidth],p;a==="same"?p=eR([c.filterHeight,c.filterWidth],u):p=[[0,0],[0,0]];let d=u[0]===1&&u[1]===1,[h,m]=ZD([c.inHeight,c.inWidth],u,p),f=d?a:"valid",g=d?o:Ac(o,u,h),y=(n==="avg"?()=>Qn(g,t,s,f):()=>$t(g,t,s,f))(),b=d?y:Sc(y,u,m);return l?U(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function ZD(e,t,n){let a=n.map(u=>u[0]),r=n.map(u=>u[1]),s=e.concat(a,r),i=t.map((u,p)=>(u-s[p]%u)%u),o=r.map((u,p)=>u+i[p]),l=t.map((u,p)=>[a[p],o[p]]),c=t.map((u,p)=>[0,i[p]]);return[l,c]}function eR(e,t){let n=e.map((s,i)=>s+(s-1)*(t[i]-1)).map(s=>s-1),a=n.map(s=>Math.floor(s/2)),r=n.map((s,i)=>s-a[i]);return n.map((s,i)=>[a[i],r[i]])}var Ik=O({pool_:tR});function nR(e,t){let n=E(e,"base","pow"),a=E(t,"exp","pow");[n,a]=Nt(n,a);let r={a:n,b:a};return M.runKernel(Zs,r)}var gr=O({pow_:nR});function aR(e,t){let n=E(e,"x","prelu"),a=E(t,"alpha","prelu"),r={x:n,alpha:a};return M.runKernel(ei,r)}var $c=O({prelu_:aR});function rR(e,t=null,n=!1){let a=E(e,"x","prod");a.dtype==="bool"&&(a=ue(a,"int32"));let r={x:a},s={axis:t,keepDims:n};return M.runKernel(ll,r,s)}var dh=O({prod_:rR});function sR(e,t,n){let a=Ot(e),r=null;if(n==null||n==="float32")r=new Float32Array(a);else if(n==="int32")r=new Int32Array(a);else if(n==="bool")r=new Uint8Array(a);else throw new Error(`Unknown data type ${n}`);for(let s=0;s<a;s++)r[s]=t();return M.makeTensor(r,e,n)}var iR=O({rand_:sR}),Hy=Io(Ww()),jy=class{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let s=r||Math.random();this.random=Hy.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let a=this.nextVal;return this.nextVal=NaN,a}let e,t,n=!1;for(;!n;){let a,r,s;do a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r;while(s>=1||s===0);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*a*i,t=this.mean+this.stdDev*r*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},oR=class{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;let r=a||Math.random();this.randu=Hy.alea(r.toString()),this.randn=new jy(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,s;for(;;){do a=this.randn.nextValue(),s=1+this.c*a;while(s<=0);if(s*=s*s,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),r=this.randu(),r<t||Math.log(r)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},lR=class{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,a==null&&(a=Math.random()),typeof a=="number"&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Hy.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function uR(e,t,n=1,a="float32",r){if(n==null&&(n=1),a==null&&(a="float32"),a!=="float32"&&a!=="int32")throw new Error(`Unsupported data type ${a}`);let s=new oR(t,n,a,r),i=Me(e,a);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var cR=O({randomGamma_:uR});function pR(e,t=0,n=1,a,r){if(a!=null&&a==="bool")throw new Error(`Unsupported data type ${a}`);let s=new jy(t,n,a,!1,r),i=Me(e,a);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var Tk=O({randomNormal_:pR});function dR(e,t=0,n=1,a="float32",r){let s=Me(e,a),i=new lR(t,n,null,r);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}var zl=O({randomUniform_:dR});function hh(e,t,n=1,a="float32"){if(n===0)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:a};return M.runKernel(oc,{},r)}function hR(e){let t={input:E(e,"input","real")};return M.runKernel(Dd,t)}var Dc=O({real_:hR});function mR(e){let t={x:E(e,"x","reciprocal")};return M.runKernel(ul,t)}var qy=O({reciprocal_:mR});function fR(e){let t={x:E(e,"x","relu")};return M.runKernel(ti,t)}var qe=O({relu_:fR});function gR(e){let t={x:E(e,"x","relu6")};return M.runKernel(ai,t)}var mh=O({relu6_:gR});function yR(e,t){let n={x:E(e,"x","reverse")},a={dims:t};return M.runKernel(ri,n,a)}var Ln=O({reverse_:yR});function bR(e){let t=E(e,"x","reverse");return $(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Ln(t,0)}var xR=O({reverse1d_:bR});function vR(e,t){let n=E(e,"x","reverse");return $(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Ln(n,t)}var wR=O({reverse2d_:vR});function kR(e,t){let n=E(e,"x","reverse");return $(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Ln(n,t)}var IR=O({reverse3d_:kR});function TR(e,t){let n=E(e,"x","reverse");return $(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Ln(n,t)}var NR=O({reverse4d_:TR});function SR(e){let t={x:E(e,"x","round")};return M.runKernel(si,t)}var Ky=O({round_:SR});function CR(e){let t={x:E(e,"x","rsqrt")};return M.runKernel(ii,t)}var fh=O({rsqrt_:CR});function ve(e,t){if((cn(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&cn(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return qr(e,[],[],t)}function _R(e){let t={x:E(e,"x","selu")};return M.runKernel(hl,t)}var gh=O({selu_:_R});function ER(e,t,n,a,r,s=[1,1],i="NHWC"){let o=E(e,"x","separableConv2d"),l=E(t,"depthwiseFilter","separableConv2d"),c=E(n,"pointwiseFilter","separableConv2d"),u=o,p=!1;if(o.rank===3&&(p=!0,u=U(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");$(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),$(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),$(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),$(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),$(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);let d=l.shape[2],h=l.shape[3];$(c.shape[2]===d*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*h}, but got ${c.shape[2]}.`);let m=Qr(u,l,a,r,i,s),f=At(m,c,1,"valid",i);return p?U(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Ei=O({separableConv2d_:ER});async function FR(e,t){let n=E(e,"x","setdiff1d"),a=E(t,"y","setdiff1d");$(n.dtype===a.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${a.dtype}).`),$(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),$(a.rank===1,()=>`y should be 1D tensor, but got y (${a.shape}).`);let r=await n.data(),s=await a.data(),i=new Set(s),o=0;for(let u=0;u<r.length;u++)i.has(r[u])||o++;let l=new Lt([o],n.dtype),c=new Lt([o],"int32");for(let u=0,p=0;u<r.length;u++)i.has(r[u])||(l.values[p]=r[u],c.values[p]=u,p++);return[l.toTensor(),c.toTensor()]}var Nk=FR;function AR(e){let t={x:E(e,"x","sign")};return M.runKernel(gl,t)}var Xy=O({sign_:AR});function $R(e){let t={x:E(e,"x","sin")};return M.runKernel(oi,t)}var yh=O({sin_:$R});function DR(e){let t={x:E(e,"x","sinh")};return M.runKernel(fl,t)}var bh=O({sinh_:DR});function RR(e,t,n){let a=E(e,"x","slice1d");return $(a.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${a.rank} tensor`),Be(a,[t],[n])}var xh=O({slice1d_:RR});function MR(e,t,n){let a=E(e,"x","slice2d");return $(a.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${a.rank} tensor`),Be(a,t,n)}var Yy=O({slice2d_:MR});function PR(e,t,n){let a=E(e,"x","slice3d");return $(a.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${a.rank} tensor`),Be(a,t,n)}var Wl=O({slice3d_:PR});function OR(e,t,n){let a=E(e,"x","slice4d");return $(a.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${a.rank} tensor`),Be(a,t,n)}var Rc=O({slice4d_:OR});function LR(e,t=-1){let n=E(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let a={logits:n},r={dim:t};return M.runKernel(pi,a,r)}var Na=O({softmax_:LR});function zR(e){$(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return M.runKernel(Td,t)}var Mc=O({fft_:zR});function WR(e){$(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return M.runKernel(Nd,t)}var Bl=O({ifft_:WR});function BR(e){let t=e.shape[e.shape.length-1],n=e.size/t,a;if(t<=2){let r=U(e,[n,t]);a=Bl(r)}else{let r=[n,2*(t-1)],s=U(Dc(e),[n,t]),i=U(sh(e),[n,t]),o=Ln(Be(s,[0,1],[n,t-2]),1),l=W(Ln(Be(i,[0,1],[n,t-2]),1),ve(-1)),c=Je([s,o],1),u=Je([i,l],1),p=U(jr(c,u),[r[0],r[1]]);a=Bl(p)}if(a=Dc(a),e.rank===3&&e.shape[0]!==0){let r=a,s=e.shape[0];a=U(a,[s,a.shape[0]/s,a.shape[1]]),r.dispose()}return a}var vh=O({irfft_:BR});function VR(e,t,n=0){let a={x:E(e,"x","split")},r={numOrSizeSplits:t,axis:n};return M.runKernel(bl,a,r)}var zn=O({split_:VR});function UR(e,t){$(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],a=e.size/n,r;if(t!=null&&t<n){let m=e.shape.map(g=>0),f=e.shape.map(g=>g);f[e.shape.length-1]=t,r=Be(e,m,f),n=t}else if(t!=null&&t>n){let m=e.shape.map(f=>f);m[e.shape.length-1]=t-n,r=Je([e,xt(m)],e.shape.length-1),n=t}else r=e;let s=Ge(r),i=U(jr(r,s),[a,n]),o=Mc(i),l=Math.floor(n/2)+1,c=Dc(o),u=sh(o),p=zn(c,[l,n-l],c.shape.length-1),d=zn(u,[l,n-l],u.shape.length-1),h=r.shape.slice();return h[r.shape.length-1]=l,U(jr(p[0],d[0]),h)}var Pc=O({rfft_:UR});function GR(e){let t={x:E(e,"x","sqrt")};return M.runKernel(ui,t)}var rn=O({sqrt_:GR});function HR(e,t){let n=E(e,"a","squaredDifference"),a=E(t,"b","squaredDifference");[n,a]=Nt(n,a),bt(n.shape,a.shape);let r={a:n,b:a},s={};return M.runKernel(di,r,s)}var wh=O({squaredDifference_:HR});function jR(e,t){let n=E(e,"x","squeeze");return U(n,Uw(n.shape,t).newShape)}var ts=O({squeeze_:jR});function qR(e,t=0){let n=wc(e,"tensors","stack","string_or_numeric");$(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&$(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let a=n,r={axis:t};return M.runKernel(ol,a,r)}var Dt=O({stack_:qR});function KR(e,t=0){let n={x:E(e,"x","step")},a={alpha:t};return M.runKernel(Gr,n,a)}var Vl=O({step_:KR});function XR(e,t,n,a,r=0,s=0,i=0,o=0,l=0){let c={x:E(e,"x","stridedSlice")},u={begin:t,end:n,strides:a,beginMask:r,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return M.runKernel(xl,c,u)}var Jy=O({stridedSlice_:XR});function YR(e){let t={x:E(e,"x","tan")};return M.runKernel(vl,t)}var Qy=O({tan_:YR});function Qe(e,t){ks(e);let n=Va(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return qr(e,null,n,t)}function Sa(e,t,n){if(ks(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let a=Va(e,n);if(a.length!==2&&a.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(a.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return qr(e,t,a,n)}function Ca(e,t,n){if(ks(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let a=Va(e,n);if(a.length!==4&&a.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(a.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return qr(e,t,a,n)}function JR(e,t,n){if(ks(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let a=Va(e,n);if(a.length!==5&&a.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(a.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return qr(e,t,a,n)}function QR(e,t,n){if(ks(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let a=Va(e,n);if(a.length!==6&&a.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(a.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||a,qr(e,t,a,n)}function ZR(e,t=1,n=!0){let a=E(e,"x","topk");if(a.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let r=a.shape[a.shape.length-1];if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let s={x:a},i={k:t,sorted:n},[o,l]=M.runKernel(wl,s,i);return{values:o,indices:l}}var Zy=O({topk_:ZR});function eM(e,t=0,n=1,a,r){if(a!=null&&a==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new jy(t,n,a,!0,r),i=Me(e,a);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var kh=O({truncatedNormal_:eM});function tM(e,t=0){let n=E(e,"x","unique","string_or_numeric");$(n.rank>0,()=>"The input tensor must be at least 1D");let a={x:n},r={axis:t},[s,i]=M.runKernel(Ld,a,r);return{values:s,indices:i}}var Ih=O({unique_:tM});function nM(e,t,n){let a=E(e,"x","unsortedSegmentSum"),r=E(t,"segmentIds","unsortedSegmentSum","int32");$(Ht(n),()=>"numSegments must be of dtype int");let s={x:a,segmentIds:r},i={numSegments:n};return M.runKernel(pc,s,i)}var eb=O({unsortedSegmentSum_:nM});function aM(e,t=0){let n=E(e,"x","unstack","string_or_numeric");$(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let a={value:n},r={axis:t};return M.runKernel(kl,a,r)}var ut=O({unstack_:aM});function Sk(e,t=!0,n,a){return M.makeVariable(e,t,n,a)}function Ck(e,t){let n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);let a=Me(e,"int32"),r=Me([n.length,e.length],"int32");for(let s=0;s<n.length;s++){let i=a.indexToLoc(n[s]),o=s*e.length;r.values.set(i,o)}return r.toTensor()}async function rM(e){let t=E(e,"condition","whereAsync","bool"),n=await t.data(),a=Ck(t.shape,n);return e!==t&&t.dispose(),a}var tb=rM;async function sM(e,t,n){let a=E(e,"tensor","boolMask"),r=E(t,"mask","boolMask","bool"),s=n==null?0:n,i=r.rank,o=a.shape;$(i>0,()=>"mask cannot be scalar"),un(o.slice(s,s+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let f=s;f<s+i;f++)l*=o[f];let c=o.slice(0,s).concat([l],o.slice(s+i)),u=U(a,c),p=U(r,[-1]),d=await tb(p),h=ts(d,[1]),m=Ni(u,h,s);return e!==a&&a.dispose(),t!==r&&r.dispose(),h.dispose(),u.dispose(),p.dispose(),d.dispose(),m}var iM=sM;function oM(e,t="euclidean",n=null,a=!1){e=E(e,"x","norm");let r=_k(e,t,n),s=r.shape;if(a){let i=la(n,e.shape);s=Ci(r.shape,i)}return U(r,s)}function _k(e,t,n=null){if(e.rank===0)return zt(e);if(e.rank!==1&&n===null)return _k(U(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return Se(zt(e),n);if(t===Infinity)return Zn(zt(e),n);if(t===-Infinity)return Ol(zt(e),n);if(t==="euclidean"||t===2)return rn(Se(gr(zt(e),ve(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return Zn(Se(zt(e),n[0]),n[1]-1);if(t===Infinity)return Zn(Se(zt(e),n[1]),n[0]);if(t===-Infinity)return Ol(Se(zt(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return rn(Se(ot(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var Th=O({norm_:oM});function lM(e,t,n,a,r=!0){let s=E(e,"v","movingAverage"),i=E(t,"x","movingAverage"),o=E(n,"decay","movingAverage");i0(s,i),$(hr(s.shape,i.shape),()=>"Shape mismatch in v and x");let l=ve(1),c=he(l,o),u=W(he(i,s),c);if(r){$(a!=null,()=>"When using zeroDebias: true, step is required.");let p=E(a,"step","movingAverage");u=ye(u,he(l,gr(o,p)))}return J(s,u)}var uM=O({movingAverage_:lM});function cM(e,t,n){let a=E(e,"indices","scatterND","int32"),r=E(t,"updates","scatterND");hy(r,a,n);let s={indices:a,updates:r},i={shape:n};return M.runKernel(pl,s,i)}var Ek=O({scatterND_:cM});function pM(e,t,n,a){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function dM(e,t,n,a=0){let r=E(e,"sparseIndices","sparseToDense","int32"),s=E(t,"sparseValues","sparseToDense"),i=E(a,"defaultValue","sparseToDense",s.dtype);pM(r,s,n,i);let o={sparseIndices:r,sparseValues:s,defaultValue:i},l={outputShape:n};return M.runKernel(Pd,o,l)}var nb=O({sparseToDense_:dM});function hM(e,t){let n=E(t,"indices","gatherND","int32"),a={params:E(e,"x","gatherND"),indices:n};return M.runKernel(Ho,a)}var Fk=O({gatherND_:hM});function mM(e,t){if(t==null)return e.shape.slice();if(hr(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let a=0;a<e.shape.length;a++)t[a]==null&&e.shape[a]!=null?n.push(e.shape[a]):n.push(t[a]);return n}return t}function fM(e,t,n,a){let r=E(e,"x","dropout");if($(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),$(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof Ee?r.clone():r;let s=mM(r,n),i=1-t,o=ye(Ml(J(zl(s,0,1,"float32",a),i)),i);return W(r,o)}var Ak=O({dropout_:fM});function $k(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function ab(e,t,n){let a=1-e%2,r=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+a-1);r[s]=t-n*Math.cos(i)}return Qe(r,"float32")}async function gM(e,t,n=1){let a=E(e,"predictions","inTopK"),r=E(t,"targets","inTopK");$(a.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${a.rank}`),$(a.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${a.rank} and targets rank ${r.rank}`),un(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=a.shape[a.shape.length-1];$(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);let i=await a.data(),o=await r.data(),[l,c]=[i.length/s,s],u=Gw("bool",l);for(let p=0;p<l;p++){let d=p*c,h=i.subarray(d,d+c),m=[];for(let f=0;f<h.length;f++)m.push({value:h[f],index:f});m.sort((f,g)=>g.value-f.value),u[p]=0;for(let f=0;f<n;f++)if(m[f].index===o[p]){u[p]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),Yn(u,r.shape,"bool")}var yM=gM,ns={};Le(ns,{conv2d:()=>bM,depthwiseConv2d:()=>xM,matMul:()=>vM});function wM(e,t,n,a,r,s="NHWC",i){let o=e;e.rank===3&&(o=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=U(t,[1,t.shape[0],t.shape[1],t.shape[2]])),$(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),$(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),$(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let c=s==="NHWC"?o.shape[3]:o.shape[1],u=s==="NHWC"?l.shape[3]:l.shape[1];$(c===n[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`),$(u===n[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${n[3]}).`),i!=null&&$(Ht(r),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);let p={x:o,dy:l},d={strides:a,pad:r,dataFormat:s,dimRoundingMode:i,filterShape:n};return M.runKernel(md,p,d)}var rb=O({conv2DBackpropFilter_:wM});function Nh(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return W(e,Vl(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Sh(e,t){let n=t,a=Wt(e.shape,t.shape);return a.length>0&&(n=Se(n,a)),U(n,e.shape)}function Ch(e,t,n,a){if(t==="linear")return e;if(t==="relu")return qe(e);if(t==="elu")return Rl(e);if(t==="relu6")return mh(e);if(t==="prelu")return $c(e,n);if(t==="leakyrelu")return Ec(e,a);throw new Error(`Unknown fused activation ${t}.`)}var _h=(e,t)=>!(e>0)||t==="linear";function kM({x:e,filter:t,strides:n,pad:a,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",_h(M.state.gradientDepth,l)===!1){let T=At(e,t,n,a,r,s,i);return o!=null&&(T=J(T,o)),Ch(T,l,c,u)}let p=E(e,"x","conv2d"),d=E(t,"filter","conv2d"),h=p,m=!1;p.rank===3&&(m=!0,h=U(p,[1,p.shape[0],p.shape[1],p.shape[2]])),$(h.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),$(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),i!=null&&$(Ht(a),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`),$(h.shape[3]===d.shape[2],()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${d.shape[2]}.`),$(Ga(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),$(r==="NHWC",()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`);let f=Nc(h.shape,d.shape,n,s,a,i),g;o!=null&&(g=E(o,"bias","fused conv2d"),[g]=Nt(g,p),bt(f.outShape,g.shape));let y;c!=null&&(y=E(c,"prelu weights","fused conv2d"));let b=(T,k)=>{let[S,F,A,R]=k,P=Nh(T,A,l);$(Jr(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let z=Fy(F.shape,P,S,n,a),V=rb(F,P,S.shape,n,a),G=[z,V];if(R!=null){let H=Sh(R,P);G.push(H)}return G},x={x:h,filter:d,bias:g,preluActivationWeights:y},v={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:u};return o==null?ja((T,k,S)=>{let F=M.runKernel(yi,x,v);return S([k,T,F]),m&&(F=U(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:b}})(h,d):ja((T,k,S,F)=>{let A=M.runKernel(yi,x,v);return F([k,T,A,S]),m&&(A=U(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:b}})(h,d,g)}var bM=O({fusedConv2d_:kM});function IM(e,t,n,a,r,s=[1,1],i){let o=e;e.rank===3&&(o=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={x:o,dy:l},u={strides:a,pad:r,dimRoundingMode:i,dilations:s,filterShape:n};return M.runKernel(bd,c,u)}var Dk=O({depthwiseConv2dNativeBackpropFilter_:IM});function TM(e,t,n,a,r,s=[1,1],i){let o=t,l=!1;t.rank===3&&(l=!0,o=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={dy:o,filter:n},u={strides:a,pad:r,dimRoundingMode:i,dilations:s,inputShape:e},p=M.runKernel(xd,c,u);return l?U(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Rk=O({depthwiseConv2dNativeBackpropInput_:TM});function NM({x:e,filter:t,strides:n,pad:a,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(_h(M.state.gradientDepth,l)===!1){let T=Qr(e,t,n,a,r,s,i);return o!=null&&(T=J(T,o)),Ch(T,l,c,u)}let p=E(e,"x","depthwiseConv2d"),d=E(t,"filter","depthwiseConv2d"),h=p,m=!1;p.rank===3&&(m=!0,h=U(p,[1,p.shape[0],p.shape[1],p.shape[2]])),$(h.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),$(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),$(h.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),s==null&&(s=[1,1]),$(Ga(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),i!=null&&$(Ht(a),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${a}.`);let f=Nc(h.shape,d.shape,n,s,a,i,!0),g;o!=null&&(g=E(o,"bias","fused conv2d"),[g]=Nt(g,p),bt(f.outShape,g.shape));let y;c!=null&&(y=E(c,"prelu weights","fused depthwiseConv2d"));let b=(T,k)=>{$(Jr(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[S,F,A,R]=k,P=Nh(T,A,l),z=Rk(F.shape,P,S,n,a,s,i),V=Dk(F,P,S.shape,n,a,s,i);if(R!=null){let G=Sh(g,P);return[z,V,G]}return[z,V]},x={x:h,filter:d,bias:g,preluActivationWeights:y},v={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:u};return o==null?ja((T,k,S)=>{let F=M.runKernel(bi,x,v);return S([k,T,F]),m&&(F=U(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:b}})(h,d):ja((T,k,S,F)=>{let A=M.runKernel(bi,x,v);return F([k,T,A,S]),m&&(A=U(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:b}})(h,d,g)}var xM=O({fusedDepthwiseConv2d_:NM});function SM({a:e,b:t,transposeA:n=!1,transposeB:a=!1,bias:r,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(_h(M.state.gradientDepth,s)===!1){let R=ze(e,t,n,a);return r!=null&&(R=J(R,r)),Ch(R,s,i,o)}let l=E(e,"a","fused matMul"),c=E(t,"b","fused matMul");[l,c]=Nt(l,c);let u=n?l.shape[l.rank-2]:l.shape[l.rank-1],p=a?c.shape[c.rank-1]:c.shape[c.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],h=a?c.shape[c.rank-2]:c.shape[c.rank-1],m=l.shape.slice(0,-2),f=c.shape.slice(0,-2),g=Ot(m),y=Ot(f);$(l.rank>=2&&c.rank>=2&&l.rank===c.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${c.rank}.`),$(hr(m,f),()=>`Error in fused matMul: outer dimensions (${m}) and (${f}) of Tensors with shapes ${l.shape} and ${c.shape} must match.`),$(u===p,()=>`Error in fused matMul: inner shapes (${u}) and (${p}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${n} and transposeB=${a} must match.`);let b=l.shape.slice(0,-2).concat([d,h]),x=n?U(l,[g,u,d]):U(l,[g,d,u]),v=a?U(c,[y,h,p]):U(c,[y,p,h]),T;r!=null&&(T=E(r,"bias","fused matMul"),[T]=Nt(T,l),bt(b,T.shape));let k;i!=null&&(k=E(i,"prelu weights","fused matMul"));let S=(R,P)=>{let[z,V,G,H]=P,K=Nh(U(R,G.shape),G,s),j,te;if(!n&&!a?(j=ze(K,V,!1,!0),te=ze(z,K,!0,!1)):!n&&a?(j=ze(K,V,!1,!1),te=ze(K,z,!0,!1)):n&&!a?(j=ze(V,K,!1,!0),te=ze(z,K,!1,!1)):(j=ze(V,K,!0,!0),te=ze(K,z,!0,!0)),r!=null){let Q=Sh(H,K);return[j,te,Q]}else return[j,te]},F={a:x,b:v,bias:T,preluActivationWeights:k},A={transposeA:n,transposeB:a,activation:s,leakyreluAlpha:o};return r==null?ja((R,P,z)=>{let V=M.runKernel(gi,F,A);return z([R,P,V]),{value:U(V,b),gradFunc:S}})(x,v):ja((R,P,z,V)=>{let G=M.runKernel(gi,F,A);return V([R,P,G,z]),{value:U(G,b),gradFunc:S}})(x,v,T)}var vM=O({fusedMatMul_:SM});function CM(e){return ab(e,.54,.46)}var _M=O({hammingWindow_:CM});function EM(e){return ab(e,.5,.5)}var Mk=O({hannWindow_:EM});function FM(e,t,n,a=!1,r=0){let s=0,i=[];for(;s+t<=e.size;)i.push(Be(e,s,t)),s+=n;if(a)for(;s<e.size;){let o=s+t-e.size,l=Je([Be(e,s,t-o),Cn([o],r)]);i.push(l),s+=n}return i.length===0?Sa([],[0,t]):U(Je(i),[i.length,t])}var Pk=O({frame_:FM});function AM(e,t,n,a,r=Mk){a==null&&(a=$k(t));let s=Pk(e,t,n),i=W(s,r(t)),o=[];for(let l=0;l<s.shape[0];l++)o.push(Pc(Be(i,[l,0],[1,t]),a));return Je(o)}var $M=O({stft_:AM});function DM(e,t,n,a,r="bilinear",s=0){let i=E(e,"image","cropAndResize"),o=E(t,"boxes","cropAndResize","float32"),l=E(n,"boxInd","cropAndResize","int32"),c=o.shape[0];$(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),$(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`),$(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`),$(a.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${a.length}.`),$(a[0]>=1&&a[1]>=1,()=>`cropSize must be atleast [1,1], but was ${a}`),$(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);let u={image:i,boxes:o,boxInd:l},p={method:r,extrapolationValue:s,cropSize:a};return M.runKernel(Po,u,p)}var RM=O({cropAndResize_:DM});function MM(e){let t=E(e,"image","flipLeftRight","float32");$(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return M.runKernel(Uo,n,{})}var PM=O({flipLeftRight_:MM});function OM(e,t,n=0,a=.5){let r=E(e,"image","rotateWithOffset","float32");$(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);let s={image:r},i={radians:t,fillValue:n,center:a};return M.runKernel(Tl,s,i)}var LM=O({rotateWithOffset_:OM});function Ul(e,t,n,a,r,s){a==null&&(a=.5),r==null&&(r=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=e.shape[0];return n=Math.min(n,i),$(0<=a&&a<=1,()=>`iouThreshold must be in [0, 1], but was '${a}'`),$(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),$(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),$(t.rank===1,()=>"scores must be a 1D tensor"),$(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),$(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}function zM(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY){let s=E(e,"boxes","nonMaxSuppression"),i=E(t,"scores","nonMaxSuppression"),o=Ul(s,i,n,a,r);n=o.maxOutputSize,a=o.iouThreshold,r=o.scoreThreshold;let l={maxOutputSize:n,iouThreshold:a,scoreThreshold:r};return M.runKernel(al,{boxes:s,scores:i},l)}var WM=O({nonMaxSuppression_:zM});function VM(e,t,n){let a=BM(e,t,n),r=a<0?-(a+1):a;e.splice(r,0,t)}function BM(e,t,n){return GM(e,t,n||UM)}function UM(e,t){return e>t?1:e<t?-1:0}function GM(e,t,n){let a=0,r=e.length,s=0,i=!1;for(;a<r;){s=a+(r-a>>>1);let o=n(t,e[s]);o>0?a=s+1:(r=s,i=!o)}return i?a:-a-1}function Ok(e,t,n,a,r){return sb(e,t,n,a,r,0)}function Lk(e,t,n,a,r,s){return sb(e,t,n,a,r,0,!1,s,!0)}function zk(e,t,n,a,r,s){return sb(e,t,n,a,r,s,!0)}function sb(e,t,n,a,r,s,i=!1,o=!1,l=!1){let c=[];for(let g=0;g<t.length;g++)t[g]>r&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(Wk);let u=s>0?-.5/s:0,p=[],d=[];for(;p.length<n&&c.length>0;){let g=c.pop(),{score:y,boxIndex:b,suppressBeginIndex:x}=g;if(y<r)break;let v=!1;for(let T=p.length-1;T>=x;--T){let k=HM(e,b,p[T]);if(k>=a){v=!0;break}if(g.score=g.score*jM(a,u,k),g.score<=r)break}g.suppressBeginIndex=p.length,v||(g.score===y?(p.push(b),d.push(g.score)):g.score>r&&VM(c,g,Wk))}let h=p.length,m=n-h;o&&m>0&&(p.push(...new Array(m).fill(0)),d.push(...new Array(m).fill(0)));let f={selectedIndices:p};return i&&(f.selectedScores=d),l&&(f.validOutputs=h),f}function HM(e,t,n){let a=e.subarray(t*4,t*4+4),r=e.subarray(n*4,n*4+4),s=Math.min(a[0],a[2]),i=Math.min(a[1],a[3]),o=Math.max(a[0],a[2]),l=Math.max(a[1],a[3]),c=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),p=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),h=(o-s)*(l-i),m=(p-c)*(d-u);if(h<=0||m<=0)return 0;let f=Math.max(s,c),g=Math.max(i,u),y=Math.min(o,p),b=Math.min(l,d),x=Math.max(y-f,0)*Math.max(b-g,0);return x/(h+m-x)}function jM(e,t,n){let a=Math.exp(t*n*n);return n<=e?a:0}function Wk(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function qM(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY){let s=E(e,"boxes","nonMaxSuppressionAsync"),i=E(t,"scores","nonMaxSuppressionAsync"),o=Ul(s,i,n,a,r);n=o.maxOutputSize,a=o.iouThreshold,r=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),c=l[0],u=l[1],{selectedIndices:p}=Ok(c,u,n,a,r);return s!==e&&s.dispose(),i!==t&&i.dispose(),Qe(p,"int32")}var KM=qM;function XM(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=0){let i=E(e,"boxes","nonMaxSuppression"),o=E(t,"scores","nonMaxSuppression"),l=Ul(i,o,n,a,r,s);n=l.maxOutputSize,a=l.iouThreshold,r=l.scoreThreshold,s=l.softNmsSigma;let c={boxes:i,scores:o},u={maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s},p=M.runKernel(sl,c,u);return{selectedIndices:p[0],selectedScores:p[1]}}var YM=O({nonMaxSuppressionWithScore_:XM});async function JM(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=0){let i=E(e,"boxes","nonMaxSuppressionAsync"),o=E(t,"scores","nonMaxSuppressionAsync"),l=Ul(i,o,n,a,r,s);n=l.maxOutputSize,a=l.iouThreshold,r=l.scoreThreshold,s=l.softNmsSigma;let c=await Promise.all([i.data(),o.data()]),u=c[0],p=c[1],{selectedIndices:d,selectedScores:h}=zk(u,p,n,a,r,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Qe(d,"int32"),selectedScores:Qe(h)}}var QM=JM;function ZM(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=!1){let i=E(e,"boxes","nonMaxSuppression"),o=E(t,"scores","nonMaxSuppression"),l=Ul(i,o,n,a,r,null),c=l.maxOutputSize,u=l.iouThreshold,p=l.scoreThreshold,d={boxes:i,scores:o},h={maxOutputSize:c,iouThreshold:u,scoreThreshold:p,padToMaxOutputSize:s},m=M.runKernel(rl,d,h);return{selectedIndices:m[0],validOutputs:m[1]}}var eP=O({nonMaxSuppressionPadded_:ZM});async function tP(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=!1){let i=E(e,"boxes","nonMaxSuppressionAsync"),o=E(t,"scores","nonMaxSuppressionAsync"),l=Ul(i,o,n,a,r,null),c=l.maxOutputSize,u=l.iouThreshold,p=l.scoreThreshold,[d,h]=await Promise.all([i.data(),o.data()]),{selectedIndices:m,validOutputs:f}=Lk(d,h,c,u,p,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Qe(m,"int32"),validOutputs:ve(f,"int32")}}var nP=tP;function aP(e,t,n=!1,a=!1){let r=E(e,"images","resizeBilinear");$(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),$(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),$(a===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=r,i=!1;r.rank===3&&(i=!0,s=U(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:a,size:t},c=M.runKernel(ni,o,l);return i?U(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var Bk=O({resizeBilinear_:aP});function rP(e,t,n=!1,a=!1){let r=E(e,"images","resizeNearestNeighbor");$(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),$(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),$(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),$(a===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=r,i=!1;r.rank===3&&(i=!0,s=U(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:a,size:t},c=M.runKernel(lc,o,l);return i?U(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var Vk=O({resizeNearestNeighbor_:rP});function sP(e,t,n="nearest",a="constant",r=0,s){let i=E(e,"image","transform","float32"),o=E(t,"transforms","transform","float32");$(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),$(o.rank===2&&(o.shape[0]===i.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),$(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let l={image:i,transforms:o},c={interpolation:n,fillMode:a,fillValue:r,outputShape:s};return M.runKernel(Od,l,c)}var iP=O({transform_:sP});function oP(e,t,n){$(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),$(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let a=E(e,"a","bandPart");$(a.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${a.rank}.`);let r=a.shape,[s,i]=a.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);let o=U(hh(0,s,1,"int32"),[-1,1]),l=hh(0,i,1,"int32"),c=he(o,l),u=da(Si(c,ve(+t,"int32")),es(c,ve(-n,"int32"))),p=xt([s,i],a.dtype);return U(Dt(ut(U(a,[-1,s,i])).map(d=>Sn(u,d,p))),r)}var lP=O({bandPart_:oP});function uP(e){let t;if(Array.isArray(e)){t=!1,$(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let s=1;s<e.length;++s)$(e[s].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[s].shape[0]} vs. ${r})`)}else t=!0,e=zn(e,e.shape[0],0).map(r=>ts(r,[0]));$(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],a=e;for(let r=0;r<e.length;++r)n.push(M.tidy(()=>{let s=a[r];if(r>0)for(let i=0;i<r;++i){let o=W(Se(W(n[i],s)),n[i]);s=he(s,o)}return ye(s,Th(s,"euclidean"))}));return t?Dt(n,0):n}var cP=O({gramSchmidt_:uP});function pP(e,t=!1){if($(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return Uk(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((l,c)=>l*c),a=ut(U(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],s=[];a.forEach(l=>{let[c,u]=Uk(l,t);r.push(c),s.push(u)});let i=U(Dt(r,0),e.shape),o=U(Dt(s,0),e.shape);return[i,o]}}function Uk(e,t=!1){return M.tidy(()=>{$(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],a=e.shape[1],r=Oy(n),s=Xr(e),i=Sa([[1]],[1,1]),o=Xr(i),l=n>=a?a:n;for(let c=0;c<l;++c){let u=s,p=o,d=r;[o,s,r]=M.tidy(()=>{let h=Be(s,[c,c],[n-c,1]),m=Th(h),f=Be(s,[c,c],[1,1]),g=Sn(pa(f,0),Sa([[-1]]),Sa([[1]])),y=he(f,W(g,m)),b=ye(h,y);b.shape[0]===1?o=Xr(i):o=Je([i,Be(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let x=St(ye(ze(g,y),m)),v=Be(s,[c,0],[n-c,a]),T=W(x,o),k=Ve(o);if(c===0)s=he(v,ze(T,ze(k,v)));else{let A=he(v,ze(T,ze(k,v)));s=Je([Be(s,[0,0],[c,a]),A],0)}let S=Ve(T),F=Be(r,[0,c],[n,r.shape[1]-c]);if(c===0)r=he(F,ze(ze(F,o),S));else{let A=he(F,ze(ze(F,o),S));r=Je([Be(r,[0,0],[n,c]),A],1)}return[o,s,r]}),Ae([u,p,d])}return!t&&n>a&&(r=Be(r,[0,0],[n,a]),s=Be(s,[0,0],[a,a])),[r,s]})}var dP=O({qr_:pP}),mn;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(mn||(mn={}));function hP(e,t,n=mn.SUM_BY_NONZERO_WEIGHTS){let a=E(e,"losses","computeWeightedLoss"),r=null;t!=null&&(r=E(t,"weights","computeWeightedLoss"));let s=r==null?a:W(a,r);if(n===mn.NONE)return s;if(n===mn.SUM)return Se(s);if(n===mn.MEAN){if(r==null)return Ct(s);{let i=a.size/r.size,o=ye(Se(s),Se(r));return i>1?ye(o,ve(i)):o}}if(n===mn.SUM_BY_NONZERO_WEIGHTS){if(r==null)return ye(Se(s),ve(a.size));{let i=W(r,Ka(a.shape)),o=ue(Se(_i(i,ve(0))),"float32");return ye(Se(s),o)}}throw Error(`Unknown reduction: ${n}`)}var yr=O({computeWeightedLoss_:hP});function mP(e,t,n,a=mn.SUM_BY_NONZERO_WEIGHTS){let r=E(e,"labels","absoluteDifference"),s=E(t,"predictions","absoluteDifference"),i=null;n!=null&&(i=E(n,"weights","absoluteDifference")),un(r.shape,s.shape,"Error in absoluteDifference: ");let o=zt(he(r,s));return yr(o,i,a)}var fP=O({absoluteDifference_:mP});function gP(e,t,n,a,r=mn.SUM_BY_NONZERO_WEIGHTS){let s=E(e,"labels","cosineDistance"),i=E(t,"predictions","cosineDistance"),o=null;a!=null&&(o=E(a,"weights","cosineDistance")),un(s.shape,i.shape,"Error in cosineDistance: ");let l=ve(1),c=he(l,Se(W(s,i),n,!0));return yr(c,o,r)}var yP=O({cosineDistance_:gP});function bP(e,t,n,a=mn.SUM_BY_NONZERO_WEIGHTS){let r=E(e,"labels","hingeLoss"),s=E(t,"predictions","hingeLoss"),i=null;n!=null&&(i=E(n,"weights","hingeLoss")),un(r.shape,s.shape,"Error in hingeLoss: ");let o=ve(1);r=he(W(ve(2),r),o);let l=qe(he(o,W(r,s)));return yr(l,i,a)}var xP=O({hingeLoss_:bP});function vP(e,t,n,a=1,r=mn.SUM_BY_NONZERO_WEIGHTS){let s=E(e,"labels","huberLoss"),i=E(t,"predictions","huberLoss"),o=null;n!=null&&(o=E(n,"weights","huberLoss")),un(s.shape,i.shape,"Error in huberLoss: ");let l=ve(a),c=zt(he(i,s)),u=Ll(c,l),p=he(c,u),d=J(W(ve(.5),ot(u)),W(l,p));return yr(d,o,r)}var wP=O({huberLoss_:vP});function kP(e,t,n,a=1e-7,r=mn.SUM_BY_NONZERO_WEIGHTS){let s=E(e,"labels","logLoss"),i=E(t,"predictions","logLoss"),o=null;n!=null&&(o=E(n,"weights","logLoss")),un(s.shape,i.shape,"Error in logLoss: ");let l=ve(1),c=ve(a),u=St(W(s,Pn(J(i,c)))),p=W(he(l,s),Pn(J(he(l,i),c))),d=he(u,p);return yr(d,o,r)}var IP=O({logLoss_:kP});function TP(e,t,n,a=mn.SUM_BY_NONZERO_WEIGHTS){let r=E(e,"labels","meanSquaredError"),s=E(t,"predictions","meanSquaredError"),i=null;n!=null&&(i=E(n,"weights","meanSquaredError")),un(r.shape,s.shape,"Error in meanSquaredError: ");let o=wh(r,s);return yr(o,i,a)}var NP=O({meanSquaredError_:TP});function SP(e,t){let n=E(e,"labels","sigmoidCrossEntropyWithLogits"),a=E(t,"logits","sigmoidCrossEntropyWithLogits");un(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=qe(a),s=W(a,n),i=oh(dn(St(zt(a))));return J(he(r,s),i)}function CP(e,t,n,a=0,r=mn.SUM_BY_NONZERO_WEIGHTS){let s=E(e,"multiClassLabels","sigmoidCrossEntropy"),i=E(t,"logits","sigmoidCrossEntropy"),o=null;if(n!=null&&(o=E(n,"weights","sigmoidCrossEntropy")),un(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),a>0){let c=ve(a),u=ve(1),p=ve(.5);s=J(W(s,he(u,c)),W(p,c))}let l=SP(s,i);return yr(l,o,r)}var _P=O({sigmoidCrossEntropy_:CP});function EP(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return ja((a,r,s)=>{let i=By(r,[n],!0),o=he(ue(r,"float32"),i);s([a,o]);let l=St(W(o,a));return{value:Se(l,[n]),gradFunc:(c,u)=>{let[p,d]=u,h=Ci(c.shape,[n]);return[W(U(c,h),he(ue(p,"float32"),dn(d))),W(U(c,h),he(dn(d),ue(p,"float32")))]}}})(e,t)}function FP(e,t,n,a=0,r=mn.SUM_BY_NONZERO_WEIGHTS){let s=E(e,"onehotLabels","softmaxCrossEntropy"),i=E(t,"logits","softmaxCrossEntropy"),o=null;if(n!=null&&(o=E(n,"weights","softmaxCrossEntropy")),un(s.shape,i.shape,"Error in softmaxCrossEntropy: "),a>0){let c=ve(a),u=ve(1),p=ve(s.shape[1]);s=J(W(s,he(u,c)),ye(c,p))}let l=EP(s,i);return yr(l,o,r)}var AP=O({softmaxCrossEntropy_:FP}),$P={fft:Mc,ifft:Bl,rfft:Pc,irfft:vh},DP={hammingWindow:_M,hannWindow:Mk,frame:Pk,stft:$M},Xa={flipLeftRight:PM,resizeNearestNeighbor:Vk,resizeBilinear:Bk,rotateWithOffset:LM,cropAndResize:RM,nonMaxSuppression:WM,nonMaxSuppressionAsync:KM,nonMaxSuppressionWithScore:YM,nonMaxSuppressionWithScoreAsync:QM,nonMaxSuppressionPadded:eP,nonMaxSuppressionPaddedAsync:nP,transform:iP},Gk={bandPart:lP,gramSchmidt:cP,qr:dP},RP={absoluteDifference:fP,computeWeightedLoss:yr,cosineDistance:yP,hingeLoss:xP,huberLoss:wP,logLoss:IP,meanSquaredError:NP,sigmoidCrossEntropy:_P,softmaxCrossEntropy:AP},br=class extends G0{minimize(e,t=!1,n){let{value:a,grads:r}=this.computeGradients(e,n);if(n!=null){let s=n.map(i=>({name:i.name,tensor:r[i.name]}));this.applyGradients(s)}else this.applyGradients(r);return Ae(r),t?a:(a.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return fk(e,t)}dispose(){this.iterations_!=null&&Ae(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ve(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(br,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var Eh=class extends br{constructor(e,t,n=null){super();this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=M.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let a=M.registeredVariables[t],r=!1;this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:D(()=>Ge(a).variable(r))}),this.accumulatedUpdates[n]==null&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:D(()=>Ge(a).variable(r))});let s=Array.isArray(e)?e[n].tensor:e[t];if(s==null)return;let i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;D(()=>{let l=J(W(i,this.rho),W(ot(s),1-this.rho)),c=W(ye(rn(J(o,this.epsilon)),rn(J(i,this.epsilon))),s),u=J(W(o,this.rho),W(ot(c),1-this.rho));i.assign(l),o.assign(u);let p=J(W(c,-this.learningRate),a);a.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ae(this.accumulatedGrads.map(e=>e.variable)),Ae(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(a=>({originalName:a.name,variable:a.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(a=>({originalName:a.name,variable:a.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Eh.className="Adadelta";Yr(Eh);var Fh=class extends br{constructor(e,t=.1){super();this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let a=M.registeredVariables[t];if(this.accumulatedGrads[n]==null){let i=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:D(()=>Cn(a.shape,this.initialAccumulatorValue).variable(i))}}let r=Array.isArray(e)?e[n].tensor:e[t];if(r==null)return;let s=this.accumulatedGrads[n].variable;D(()=>{let i=J(s,ot(r));s.assign(i);let o=J(W(ye(r,rn(J(i,M.backend.epsilon()))),-this.learningRate),a);a.assign(o)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ae(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};Fh.className="Adagrad";Yr(Fh);var Ah=class extends br{constructor(e,t,n,a=null){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],D(()=>{this.accBeta1=ve(t).variable(),this.accBeta2=ve(n).variable()}),a==null&&(this.epsilon=M.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);D(()=>{let n=he(1,this.accBeta1),a=he(1,this.accBeta2);t.forEach((r,s)=>{let i=M.registeredVariables[r],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${r}/m`,variable:D(()=>Ge(i).variable(o))}),this.accumulatedSecondMoment[s]==null&&(this.accumulatedSecondMoment[s]={originalName:`${r}/v`,variable:D(()=>Ge(i).variable(o))});let l=Array.isArray(e)?e[s].tensor:e[r];if(l==null)return;let c=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,p=J(W(c,this.beta1),W(l,1-this.beta1)),d=J(W(u,this.beta2),W(ot(l),1-this.beta2)),h=ye(p,n),m=ye(d,a);c.assign(p),u.assign(d);let f=J(W(ye(h,J(rn(m),this.epsilon)),-this.learningRate),i);i.assign(f)}),this.accBeta1.assign(W(this.accBeta1,this.beta1)),this.accBeta2.assign(W(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ae(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Ae(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),D(()=>{this.accBeta1.assign(gr(this.beta1,this.iterations_+1)),this.accBeta2.assign(gr(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(a=>({originalName:a.name,variable:a.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(a=>({originalName:a.name,variable:a.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};Ah.className="Adam";Yr(Ah);var $h=class extends br{constructor(e,t,n,a=null,r=0){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],D(()=>{this.iteration=ve(0).variable(),this.accBeta1=ve(t).variable()}),a==null&&(this.epsilon=M.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);D(()=>{let n=he(1,this.accBeta1),a=ye(-this.learningRate,J(W(this.iteration,this.decay),1));t.forEach((r,s)=>{let i=M.registeredVariables[r],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${r}/m`,variable:Ge(i).variable(o)}),this.accumulatedWeightedInfNorm[s]==null&&(this.accumulatedWeightedInfNorm[s]={originalName:`${r}/v`,variable:Ge(i).variable(o)});let l=Array.isArray(e)?e[s].tensor:e[r];if(l==null)return;let c=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,p=J(W(c,this.beta1),W(l,1-this.beta1)),d=W(u,this.beta2),h=zt(l),m=qa(d,h);c.assign(p),u.assign(m);let f=J(W(ye(a,n),ye(p,J(m,this.epsilon))),i);i.assign(f)}),this.iteration.assign(J(this.iteration,1)),this.accBeta1.assign(W(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ae(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Ae(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};$h.className="Adamax";Yr($h);var Oc=class extends br{constructor(e){super();this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let a=Array.isArray(e)?e[n].tensor:e[t];if(a==null)return;let r=M.registeredVariables[t];D(()=>{let s=J(W(this.c,a),r);r.assign(s)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=qt(ve(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Oc.className="SGD";Yr(Oc);var Dh=class extends Oc{constructor(e,t,n=!1){super(e);this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=ve(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let a=M.registeredVariables[t];if(this.accumulations[n]==null){let i=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:D(()=>Ge(a).variable(i))}}let r=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];s!=null&&D(()=>{let i,o=J(W(this.m,r),s);this.useNesterov?i=J(W(this.c,J(s,W(o,this.m))),a):i=J(W(this.c,o),a),r.assign(o),a.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ae(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Dh.className="Momentum";Yr(Dh);var Rh=class extends br{constructor(e,t=.9,n=0,a=null,r=!1){super();if(this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,a==null&&(this.epsilon=M.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let a=M.registeredVariables[t],r=!1;this.accumulatedMeanSquares[n]==null&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:D(()=>Ge(a).variable(r))}),this.accumulatedMoments[n]==null&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:D(()=>Ge(a).variable(r))}),this.accumulatedMeanGrads[n]==null&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:D(()=>Ge(a).variable(r))});let s=Array.isArray(e)?e[n].tensor:e[t];if(s==null)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;D(()=>{let l=J(W(i,this.decay),W(ot(s),1-this.decay));if(this.centered){let c=this.accumulatedMeanGrads[n].variable,u=J(W(c,this.decay),W(s,1-this.decay)),p=ye(W(s,this.learningRate),rn(he(l,J(ot(u),this.epsilon)))),d=J(W(o,this.momentum),p);i.assign(l),c.assign(u),o.assign(d);let h=he(a,d);a.assign(h)}else{let c=J(W(i,this.decay),W(ot(s),1-this.decay)),u=J(W(o,this.momentum),ye(W(s,this.learningRate),rn(J(c,this.epsilon))));i.assign(c),o.assign(u);let p=he(a,u);a.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ae(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ae(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Ae(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(a=>({originalName:a.name,variable:a.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(a=>({originalName:a.name,variable:a.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(a=>({originalName:a.name,variable:a.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Rh.className="RMSProp";Yr(Rh);var Fi=class{static sgd(e){return new Oc(e)}static momentum(e,t,n=!1){return new Dh(e,t,n)}static rmsprop(e,t=.9,n=0,a=null,r=!1){return new Rh(e,t,n,a,r)}static adam(e=.001,t=.9,n=.999,a=null){return new Ah(e,t,n,a)}static adadelta(e=.001,t=.95,n=null){return new Eh(e,t,n)}static adamax(e=.002,t=.9,n=.999,a=null,r=0){return new $h(e,t,n,a,r)}static adagrad(e,t=.1){return new Fh(e,t)}},Ai={sgd:Fi.sgd,momentum:Fi.momentum,adadelta:Fi.adadelta,adagrad:Fi.adagrad,rmsprop:Fi.rmsprop,adamax:Fi.adamax,adam:Fi.adam},MP=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:e=>e())();function Mh(){return new Promise(e=>MP(()=>e()))}var _={};Le(_,{ERF_A1:()=>jP,ERF_A2:()=>qP,ERF_A3:()=>KP,ERF_A4:()=>XP,ERF_A5:()=>YP,ERF_P:()=>HP,PARALLELIZE_THRESHOLD:()=>ib,SELU_SCALE:()=>jk,SELU_SCALEALPHA:()=>Hk,applyActivation:()=>Ch,assertAndGetBroadcastShape:()=>bt,assertAxesAreInnerMostDims:()=>bD,assertParamsConsistent:()=>PP,assignToTypedArray:()=>rO,axesAreInnerMostDims:()=>zy,calculateShapes:()=>$0,combineLocations:()=>yk,complexWithEvenIndex:()=>tO,complexWithOddIndex:()=>nO,computeConv2DInfo:()=>Nc,computeConv3DInfo:()=>Z0,computeDefaultPad:()=>Cy,computeDilation2DInfo:()=>VA,computeOptimalWindowSize:()=>LP,computeOutAndReduceShapes:()=>bk,computeOutShape:()=>OP,computePool2DInfo:()=>Q0,computePool3DInfo:()=>UA,convertConv2DDataFormat:()=>J0,eitherStridesOrDilationsAreOne:()=>Ga,expandShapeToKeepDim:()=>Ci,exponent:()=>iO,exponents:()=>sO,fromStringArrayToUint8:()=>uO,fromUint8ToStringArray:()=>lO,getAxesPermutation:()=>xk,getBroadcastDims:()=>R$,getComplexWithIndex:()=>aO,getFusedBiasGradient:()=>Sh,getFusedDyActivation:()=>Nh,getImageCenter:()=>zP,getInnerMostAxes:()=>xD,getPermuted:()=>BP,getReductionAxes:()=>Wt,getReshaped:()=>WP,getReshapedPermuted:()=>VP,getSliceBeginCoords:()=>UP,getSliceSize:()=>GP,getUndoAxesPermutation:()=>Wy,log:()=>QP,mergeRealAndImagArrays:()=>ZP,prepareAndValidate:()=>A0,prepareSplitSize:()=>oO,segment_util:()=>qk,shouldFuse:()=>_h,slice_util:()=>an,splitRealAndImagArrays:()=>eO,tupleValuesAreOne:()=>Jr,upcastType:()=>ua,validateInput:()=>hy,validateUpdateShape:()=>dy,warn:()=>JP});function PP(e,t){let n=e[0].length;e.forEach((r,s)=>{$(r.length===n,()=>`Error in concat${n}D: rank of tensors[${s}] must be the same as the rank of the rest (${n})`)}),$(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let a=e[0];e.forEach((r,s)=>{for(let i=0;i<n;i++)$(i===t||r[i]===a[i],()=>`Error in concat${n}D: Shape of tensors[${s}] (${r}) does not match the shape of the rest (${a}) along the non-concatenated axis ${s}.`)})}function OP(e,t){let n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var ib=30;function LP(e){return e<=ib?e:id(e,Math.floor(Math.sqrt(e)))}function zP(e,t,n){let a=n*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[a,r]}function WP(e,t,n,a=!0){let r=[];if(a)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let s=t.length;for(let i=0;i<s;++i)r=r.concat([e[i+1]/t[i],t[i]]);r=r.concat(e.slice(s+1))}return r}function BP(e,t,n=!0){let a=[];if(n){a.push(t);for(let r=t+1;r<e;++r)r<=2*t?(a.push(r),a.push(r-(t+1))):a.push(r)}else{let r=[],s=[];for(let i=1;i<e;++i)i>=t*2+1||i%2==1?s.push(i):r.push(i);a.push(...r),a.push(0),a.push(...s)}return a}function VP(e,t,n,a=!0){let r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?a?r.push(t[s-1]*e[s]):r.push(e[s]/t[s-1]):r.push(e[s]);return r}function UP(e,t){let n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function GP(e,t,n){let a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}var Hk=1.7580993408473768,jk=1.0507009873554805,HP=.3275911,jP=.254829592,qP=-.284496736,KP=1.421413741,XP=-1.453152027,YP=1.061405429;function JP(...e){Z().getBool("IS_TEST")||console.warn(...e)}function QP(...e){Z().getBool("IS_TEST")||console.log(...e)}function ZP(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function eO(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function tO(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function nO(e){let t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function aO(e,t){let n=e[t*2],a=e[t*2+1];return{real:n,imag:a}}function rO(e,t,n,a){e[a*2]=t,e[a*2+1]=n}function sO(e,t){let n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let s=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function iO(e,t,n){let a=(n?2:-2)*Math.PI*(e/t),r=Math.cos(a),s=Math.sin(a);return{real:r,imag:s}}function oO(e,t,n=0){let a=[];if(typeof t=="number")$(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),a=new Array(t).fill(e.shape[n]/t);else{let r=t.reduce((i,o)=>(o===-1&&(i+=1),i),0);$(r<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let i=t.reduce((o,l)=>l>0?o+l:o);t[s]=e.shape[n]-i}$(e.shape[n]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),a=t}return a}var qk={};Le(qk,{collectGatherOpShapeInfo:()=>dO,computeOutShape:()=>pO,segOpComputeOptimalWindowSize:()=>cO});function cO(e,t){let n=!1,a;for(e<=ib?(a=e,n=!0):a=id(e,Math.floor(Math.sqrt(e)));!n;)a>t||a===e?n=!0:a=id(e,a+1);return a}function pO(e,t,n){let a=[],r=e.length;for(let s=0;s<r;s++)s!==t?a.push(e[s]):a.push(n);return a}function dO(e,t,n,a){let r=t.shape.length,s=e.shape.length;if(a!==0&&(a<-r||a>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${a}`);if(a<0&&(a+=r),a>s)throw new Error(`batchDims (${a}) must be less than rank(x) (
    ${s}).`);if(n<a)throw new Error(`batchDims (${a}) must be less than or equal to axis (${n}).`);for(let p=0;p<a;++p)if(e.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${e.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let i=e.shape[n],o=[],l=1,c=1,u=1;for(let p=0;p<a;++p)o.push(e.shape[p]),l*=e.shape[p];for(let p=a;p<n;p++)o.push(e.shape[p]),c*=e.shape[p];for(let p=a;p<r;p++)o.push(t.shape[p]);for(let p=n+1;p<s;p++)o.push(e.shape[p]),u*=e.shape[p];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:i,outputShape:o}}function lO(e){try{return e.map(t=>Ud(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function uO(e){return e.map(t=>fc(t))}var Ya={};Le(Ya,{nonMaxSuppressionV3Impl:()=>Ok,nonMaxSuppressionV4Impl:()=>Lk,nonMaxSuppressionV5Impl:()=>zk,whereImpl:()=>Ck});var Kk={kernelName:So,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(e,Vl(ue(n,"float32"),-1))}}},hO={kernelName:Co,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let a=ot(ue(n,"float32")),r=rn(he(ve(1),a));return St(ye(e,r))}}}},mO={kernelName:_o,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let a=rn(he(ot(ue(n,"float32")),1));return ye(e,a)}}}},fO={kernelName:Br,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=bt(n.shape,a.shape);return{a:()=>{let s=e,i=Wt(n.shape,r);return i.length>0&&(s=Se(s,i)),U(s,n.shape)},b:()=>{let s=e,i=Wt(a.shape,r);return i.length>0&&(s=Se(s,i)),U(s,a.shape)}}}},gO={kernelName:Ts,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((a,r)=>{n[r]=()=>e.clone()}),n}},yO={kernelName:Ns,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ge(n)}}},bO={kernelName:Xu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ge(n)}}},xO={kernelName:Eo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,rn(he(ve(1),ot(ue(n,"float32")))))}}},vO={kernelName:Fo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let a=rn(J(ve(1),ot(ue(n,"float32"))));return ye(e,a)}}}},wO={kernelName:Do,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=bt(n.shape,a.shape);return{a:()=>{let s=J(ot(n),ot(a)),i=W(e,ye(a,s)),o=Wt(n.shape,r);return o.length>0&&(i=Se(i,o)),U(i,n.shape)},b:()=>{let s=J(ot(n),ot(a)),i=St(W(e,ye(n,s))),o=Wt(a.shape,r);return o.length>0&&(i=Se(i,o)),U(i,a.shape)}}}},kO={kernelName:Ao,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,J(ot(ue(n,"float32")),1))}}},IO={kernelName:$o,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,he(ve(1),ot(ue(n,"float32"))))}}};function TO(e,t,n,a,r,s){let i=E(e,"dy","avgPool3dGrad"),o=E(t,"input","avgPool3dGrad"),l=i,c=o,u=!1;o.rank===4&&(u=!0,l=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),$(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),$(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),s!=null&&$(Ht(r),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);let p={dy:l,input:c},d={filterSize:n,strides:a,pad:r,dimRoundingMode:s},h=M.runKernel(pd,p,d);return u?U(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var NO=O({avgPool3dGrad_:TO}),SO={kernelName:Yu,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{filterSize:r,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>NO(e,a,r,s,i,o)}}};function CO(e,t,n,a,r){let s=E(e,"dy","avgPoolGrad"),i=E(t,"input","avgPoolGrad");$(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,l=s,c=!1;i.rank===3&&(c=!0,o=U(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=U(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),$(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let u={dy:l,input:o},p={filterSize:n,strides:a,pad:r},d=M.runKernel(cd,u,p);return c?U(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var _O=O({avgPoolGrad_:CO}),EO={kernelName:Ss,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{filterSize:r,strides:s,pad:i}=n;return{x:()=>_O(e,a,r,s,i)}}},FO={kernelName:Cs,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[a,r]=t,{transposeA:s,transposeB:i}=n;return!s&&!i?{a:()=>ze(e,r,!1,!0),b:()=>ze(a,e,!0,!1)}:!s&&i?{a:()=>ze(e,r,!1,!1),b:()=>ze(e,a,!0,!1)}:s&&!i?{a:()=>ze(r,e,!1,!0),b:()=>ze(a,e,!1,!1)}:{a:()=>ze(r,e,!0,!0),b:()=>ze(e,a,!0,!0)}}},AO={kernelName:Ju,gradFunc:(e,t,n)=>{let{blockShape:a,crops:r}=n;return{x:()=>Ac(e,a,r)}}},$O={kernelName:t0,gradFunc:(e,t,n)=>{let a=n,r=a.inputShape,s=a.shape,i=Array.from(s);for(let l=r.length-1;l>=0;l--)if(r[l]===s[l])i[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${s}].`);let o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>Se(e,o,!0)}}},DO={kernelName:_s,gradFunc:e=>({x:()=>e.clone()})},RO={kernelName:Es,gradFunc:e=>({x:()=>Ge(e)})},MO={kernelName:Vr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>Sn(da(es(a,r),Si(a,s)),e,Ge(e))}}},PO={kernelName:Qu,inputsToSave:["x"],gradFunc:Kk.gradFunc},OO={kernelName:Ro,saveAllInputs:!0,gradFunc:(e,t,n)=>{let a=t.map(o=>o.shape),{axis:r}=n,s=la(r,t[0].shape)[0],i=a.map(o=>o[s]);return zn(e,i,s).map(o=>()=>o)}},LO={kernelName:Fs,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[a,r]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return $(Jr(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Fy(a.shape,e,r,i,o,l),filter:()=>rb(a,e,r.shape,i,o,l)}}},zO={kernelName:As,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[a,r]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>At(e,r,s,i,o,1,l),filter:()=>rb(e,a,r.shape,s,i,o,l)}}};function WO(e,t,n,a,r){let s=e;e.rank===4&&(s=U(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;i.rank===4&&(i=U(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),$(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),$(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),$(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),$(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),$(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);let o={x:s,dy:i},l={strides:a,pad:r,filterShape:n};return M.runKernel(fd,o,l)}var BO=O({conv3DBackpropFilter_:WO}),VO={kernelName:Zu,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:a,strides:r,pad:s}=n;$(Jr(a),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let[i,o]=t;return{x:()=>lk(i.shape,e,o,r,s),filter:()=>BO(i,e,o.shape,r,s)}}},UO={kernelName:$s,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(St(yh(ue(n,"float32"))),e)}}},GO={kernelName:Mo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(bh(ue(n,"float32")),e)}}},HO={kernelName:Ds,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{axis:r,exclusive:s,reverse:i}=n;return{x:()=>{let o=xk([r],a.rank),l=rh(e,r,s,!i);return o!=null&&(l=Ve(l,o)),l}}}},jO={kernelName:Rs,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:a,strides:r,pad:s,dimRoundingMode:i}=n,o=a==null?[1,1]:a;$(Jr(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[l,c]=t;return $(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),$(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),$(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),$(Ga(r,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`),i!=null&&$(Ht(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`),{x:()=>Rk(l.shape,e,c,r,s,a,i),filter:()=>Dk(l,e,c.shape,r,s,a,i)}}},qO={kernelName:ec,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[a,r]=t,s={x:a,filter:r,dy:e},i={x:a,filter:r,dy:e};return{x:()=>M.runKernel(wd,s,n),filter:()=>M.runKernel(kd,i,n)}}},KO={kernelName:Lo,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,a={dy:e,y:n};return{x:()=>M.runKernel(Id,a)}}},XO={kernelName:zo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,a=W(dn(St(ot(n))),2/Math.sqrt(Math.PI));return{x:()=>W(e,a)}}},YO={kernelName:Ps,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(e,n)}}},JO={kernelName:Bo,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>U(e,n.shape)}}},QO={kernelName:Vo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(e,dn(n))}}},ZO={kernelName:Os,gradFunc:e=>({x:()=>Ge(e)})},eL={kernelName:Ls,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=bt(n.shape,a.shape);return{a:()=>{let s=ye(e,ue(a,"float32")),i=Wt(n.shape,r);return i.length>0?U(Se(s,i),n.shape):s},b:()=>{let s=W(e,ue(n,"float32")),i=Wt(a.shape,r);i.length>0&&(s=U(Se(s,i),a.shape));let o=ot(a);return St(ye(s,ue(o,"float32")))}}}},tL={kernelName:zs,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:a}=n,[r,s,i,o]=t,l=o==null?ve(1):o,c=Wt(s.shape,r.shape),u=[];if(s.rank===1){for(let f=0;f<r.shape.length-1;++f)u.push(r.shape[f]);u.push(1)}let p=he(r,s),d=W(e,l),h=fh(J(i,ve(a))),m=W(W(W(h,h),h),ve(-.5));return{x:()=>s.rank===1?U(W(W(e,Ha(U(h,[1,1,1,s.shape[0]]),u)),l),r.shape):U(W(W(e,h),l),r.shape),mean:()=>{let f=W(W(h,ve(-1)),d);return s.rank===1&&(f=Se(f,c)),U(f,s.shape)},variance:()=>{let f=W(W(m,p),d);return s.rank===1&&(f=Se(f,c)),U(f,s.shape)},scale:()=>{let f=W(p,h),g=W(e,f);return s.rank===1&&(g=Se(g,c)),U(g,s.shape)},offset:()=>{let f=e;return s.rank===1&&(f=Se(f,c)),U(f,s.shape)}}}},nL={kernelName:Go,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[a,r]=t,{axis:s}=n,i=la(s,a.shape)[0];return{x:()=>{let o=a.shape,l=r.size,c=o.slice(0,i),u=c.length,p=o.slice(s,o.length).slice(1),d=p.length,h=Xk(0,u),m=Xk(u+1,u+1+d),f=Yk([c,[l],p]),g=U(e,f),y=U(r,[l]),b=Yk([[u],h,m]),x=Ve(g,b),v=eb(x,y,a.shape[i]),T=Wy(b);return v=Ve(v,T),v},indices:()=>r}}};function Xk(e,t){let n=[];for(let a=e;a<t;++a)n.push(a);return n}function Yk(e){let t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}var aL={kernelName:Ws,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t;return{a:()=>Ge(n),b:()=>Ge(a)}}},rL={kernelName:Bs,gradFunc:e=>({x:()=>ue(e,"float32")})},sL={kernelName:qo,gradFunc:e=>({x:()=>Ge(e)})},iL={kernelName:Ko,gradFunc:e=>({x:()=>Ge(e)})},oL={kernelName:Xo,gradFunc:e=>({x:()=>Ge(e)})},lL={kernelName:Vs,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{alpha:r}=n,s=pa(a,0);return{x:()=>Sn(s,e,W(e,r))}}},uL={kernelName:Qo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,J(n,1))}}},cL={kernelName:Us,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,ue(n,"float32"))}}},pL={kernelName:n0,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a]=t,{axis:r}=n;return{logits:()=>{let s=!0,i=dn(a);return he(e,W(Se(e,r,s),i))}}}};function dL(e,t,n,a=5,r=1,s=1,i=.5){let o={x:e,y:t,dy:n},l={depthRadius:a,bias:r,alpha:s,beta:i};return M.runKernel(_d,o,l)}var hL=O({localResponseNormalizationBackprop_:dL}),mL={kernelName:rc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a,r]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>hL(a,r,e,s,i,o,l)}}};function Jk(e,t,n,a){return t.rank<n.rank&&(t=U(t,Ci(t.shape,a))),e.rank<n.rank&&(e=U(e,Ci(e.shape,a))),{x:()=>W(e,ue(Zr(n,t),e.dtype))}}var Qk={kernelName:Gs,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let a=n,{reductionIndices:r}=a,s=t[0],i=t[1],o=la(r,s.shape),l=Jk(e,i,s,o);return{x:()=>l.x()}}},fL={kernelName:Hs,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t;return{a:()=>W(e,ue(es(n,a),"float32")),b:()=>W(e,ue(ih(n,a),"float32"))}}};function gL(e,t,n,a,r,s,i){let o=E(e,"dy","maxPool3dGrad"),l=E(t,"input","maxPool3dGrad"),c=E(n,"output","maxPool3dGrad"),u=o,p=l,d=c,h=!1;l.rank===4&&(h=!0,u=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),p=U(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=U(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),$(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),$(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),$(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),i!=null&&$(Ht(s),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);let m={dy:u,input:p,output:d},f={filterSize:a,strides:r,pad:s,dimRoundingMode:i},g=M.runKernel(Fd,m,f);return h?U(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var yL=O({maxPool3dGrad_:gL}),bL={kernelName:sc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a,r]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>yL(e,a,r,s,i,o,l)}}};function xL(e,t,n,a,r,s,i){let o=E(e,"dy","maxPoolGrad"),l=E(t,"input","maxPoolGrad"),c=E(n,"output","maxPoolGrad");$(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),$(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),$(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),i!=null&&$(Ht(s),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);let u={dy:o,input:l,output:c},p={filterSize:a,strides:r,pad:s,dimRoundingMode:i};return M.runKernel(Ed,u,p)}var vL=O({maxPoolGrad_:xL}),wL={kernelName:js,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a,r]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>vL(e,a,r,s,i,o)}}},kL={kernelName:qs,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{axis:r}=n,s=la(r,a.shape),i=bk(a.shape,s)[1],o=Ot(i);return{x:()=>{let l=a.shape.slice();s.forEach(u=>{l[u]=1});let c=U(e,l);return ye(W(c,Ka(a.shape,"float32")),o)}}}},IL={kernelName:Ks,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let a=n,{axis:r}=a,[s,i]=t,o=la(r,s.shape),l=Jk(e,i,s,o);return{x:()=>l.x()}}},TL={kernelName:Xs,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t;return{a:()=>W(e,ue(Si(n,a),"float32")),b:()=>W(e,ue(pa(n,a),"float32"))}}},NL={kernelName:ic,inputsToSave:["x"],gradFunc:(e,t,n)=>{let a=t[0],{paddings:r}=n,s=r.map(i=>i[0]);return{x:()=>Be(e,s,a.shape)}}},SL={kernelName:el,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=bt(n.shape,a.shape);return{a:()=>{let s=Wt(n.shape,r);return s.length>0?U(Se(e,s),n.shape):e},b:()=>{let s=W(e,St(Ml(ye(n,a)))),i=Wt(a.shape,r);return i.length>0?U(Se(s,i),a.shape):s}}}},CL={kernelName:Ys,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=bt(n.shape,a.shape);return{a:()=>{let s=W(e,ue(a,"float32")),i=Wt(n.shape,r);return i.length>0?U(Se(s,i),n.shape):s},b:()=>{let s=W(e,ue(n,"float32")),i=Wt(a.shape,r);return i.length>0?U(Se(s,i),a.shape):s}}}},_L={kernelName:tl,gradFunc:e=>({x:()=>St(e)})},EL={kernelName:Js,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>xt(n.shape,"float32")}}},FL={kernelName:il,gradFunc:e=>({x:()=>Ge(e)})},AL={kernelName:ol,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:a}=n;return ut(e,a).map(r=>()=>r)}},Zk={kernelName:Qs,inputsToSave:["x"],gradFunc:(e,t,n)=>{let a=t[0],{paddings:r}=n,s=r.map(i=>i[0]);return{x:()=>Be(e,s,a.shape)}}},$L={kernelName:Zs,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,a,r]=t,s=n,i=a,o=bt(s.shape,i.shape);return{a:()=>{let l=ue(i,"float32"),c=W(e,W(l,gr(s,he(l,ve(1))))),u=Wt(s.shape,o);return u.length>0&&(c=Se(c,u)),U(c,s.shape)},b:()=>{let l=pa(s,0),c=Sn(l,Pn(s),Ge(s)),u=W(e,W(r,c)),p=Wt(i.shape,o);return p.length>0&&(u=Se(u,p)),U(u,i.shape)}}}},DL={kernelName:ei,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,a]=t,r=pa(n,0);return{x:()=>Sn(r,e,W(e,a)),alpha:()=>{let s=Sn(r,Ge(e),W(e,n)),i=Wt(a.shape,e.shape);return i.length>0&&(s=Se(s,i)),U(s,a.shape)}}}},RL={kernelName:Ms,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=bt(n.shape,a.shape);return{a:()=>{let s=ye(e,ue(a,"float32")),i=Wt(n.shape,r);return i.length>0?U(Se(s,i),n.shape):s},b:()=>{let s=W(e,ue(n,"float32")),i=Wt(a.shape,r);i.length>0&&(s=U(Se(s,i),a.shape));let o=ot(a);return St(ye(s,ue(o,"float32")))}}}},ML={kernelName:ul,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,St(ot(n)))}}},PL={kernelName:ai,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,a=W(Si(n,6),Vl(n));return{x:()=>W(e,ue(a,"float32"))}}},OL={kernelName:ti,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(e,ue(Vl(n),"float32"))}}},LL={kernelName:cl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>U(e,n.shape)}}},zL={kernelName:ni,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[a]=t,r={dy:e,images:a};return{images:()=>M.runKernel(Md,r,n)}}},WL={kernelName:lc,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[a]=t,r={dy:e,images:a};return{images:()=>M.runKernel(Rd,r,n)}}},BL={kernelName:ri,gradFunc:(e,t,n)=>{let{dims:a}=n,r=la(a,e.shape);return{x:()=>Ln(e,r)}}},VL={kernelName:si,gradFunc:e=>({x:()=>Ge(e)})},UL={kernelName:ii,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>St(ye(e,W(gr(n,1.5),2)))}}},GL={kernelName:dl,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>ue(Ge(n),"float32"),t:()=>W(e,ue(n,e.dtype)),e:()=>W(e,ue(Fc(n),e.dtype))}}},HL={kernelName:hl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let a=pa(n,ve(0)),r=ve(Hk),s=ve(jk),i=W(e,s),o=W(W(e,r),dn(ue(n,"float32")));return Sn(a,i,o)}}}},jL={kernelName:li,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(e,W(n,he(ve(1),n)))}}},qL={kernelName:gl,gradFunc:e=>({x:()=>Ge(e)})},KL={kernelName:oi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(_c(ue(n,"float32")),e)}}},XL={kernelName:fl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(ah(ue(n,"float32")),e)}}},YL={kernelName:ml,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{begin:r,size:s}=n,i=a.shape,[o,l]=B0(a,r,s),c=[];for(let u=0;u<e.rank;u++)c.push([o[u],i[u]-o[u]-l[u]]);return{x:()=>ea(e,c)}}},JL={kernelName:pi,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a]=t,{dim:r}=n,s=!0,i=W(e,a);return{logits:()=>he(i,W(Se(i,[r],s),a))}}},QL={kernelName:yl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(e,ca(n))}}},e1={kernelName:uc,gradFunc:(e,t,n)=>{let{blockShape:a,paddings:r}=n;return{x:()=>Sc(e,a,r)}}},t1={kernelName:bl,gradFunc:(e,t,n)=>{let{axis:a}=n;return{x:()=>Je(e,a)}}},ZL={kernelName:ui,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,W(rn(ue(n,"float32")),2))}}},e3={kernelName:cc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(e,W(ue(n,"float32"),2))}}},t3={kernelName:di,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=ve(2);return{a:()=>W(e,W(r,he(n,a))),b:()=>W(e,W(r,he(a,n)))}}},n3={kernelName:Gr,gradFunc:e=>({x:()=>Ge(e)})},a3={kernelName:hi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=bt(n.shape,a.shape);return{a:()=>{let s=e,i=Wt(n.shape,r);return i.length>0&&(s=Se(s,i)),U(s,n.shape)},b:()=>{let s=e,i=Wt(a.shape,r);return i.length>0&&(s=Se(s,i)),U(St(s),a.shape)}}}},r3={kernelName:ci,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,r=a.shape.slice(),{axis:s}=n;la(s,a.shape).forEach(l=>{r[l]=1});let i=U(e,r),o=W(i,Ka(a.shape,"float32"));return{x:()=>o}}},s3={kernelName:vl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,ot(_c(n)))}}},i3={kernelName:mi,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(he(ve(1),ot(n)),e)}}},o3={kernelName:Ur,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{reps:r}=n;return{x:()=>{let s=Ge(a);if(a.rank===1)for(let i=0;i<r[0];++i)s=J(s,Be(e,[i*a.shape[0]],[a.shape[0]]));else if(a.rank===2)for(let i=0;i<r[0];++i)for(let o=0;o<r[1];++o)s=J(s,Be(e,[i*a.shape[0],o*a.shape[1]],[a.shape[0],a.shape[1]]));else if(a.rank===3)for(let i=0;i<r[0];++i)for(let o=0;o<r[1];++o)for(let l=0;l<r[2];++l)s=J(s,Be(e,[i*a.shape[0],o*a.shape[1],l*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else if(a.rank===4)for(let i=0;i<r[0];++i)for(let o=0;o<r[1];++o)for(let l=0;l<r[2];++l)for(let c=0;c<r[3];++c)s=J(s,Be(e,[i*a.shape[0],o*a.shape[1],l*a.shape[2],c*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${a.rank} tensors yet.`);return s}}}},l3={kernelName:fi,gradFunc:(e,t,n)=>{let a=n,{perm:r}=a,s=Wy(r);return{x:()=>Ve(e,s)}}},u3={kernelName:kl,gradFunc:(e,t,n)=>{let a=n,{axis:r}=a;return{value:()=>Dt(e,r)}}},p3={kernelName:pc,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>c3(e,n)}}};function c3(e,t){let n=qa(t,Ge(t)),a=Ni(e,n),r=es(t,ve(0,"int32")),s=a.rank-r.rank;for(let o=0;o<s;++o)r=hn(r,o+1);r=da(r,Ka(a.shape,"bool"));let i=Ge(a);return Sn(r,a,i)}var d3={kernelName:Il,gradFunc:e=>({x:()=>Ge(e)})},h3=[Kk,hO,mO,fO,gO,yO,bO,xO,vO,wO,kO,IO,SO,EO,FO,AO,$O,DO,RO,MO,PO,OO,zO,LO,VO,UO,GO,HO,jO,qO,RL,KO,XO,YO,JO,QO,eL,ZO,tL,nL,aL,rL,sL,iL,oL,lL,uL,cL,pL,mL,Qk,Qk,fL,bL,wL,kL,IL,TL,NL,SL,CL,_L,EL,FL,AL,Zk,Zk,$L,DL,ML,PL,OL,LL,zL,WL,BL,VL,UL,GL,HL,jL,qL,KL,XL,YL,JL,QL,e1,e1,t1,t1,ZL,t3,e3,n3,a3,r3,s3,i3,o3,l3,u3,p3,d3];for(let e of h3)a0(e);Y().prototype.abs=function(){return this.throwIfDisposed(),zt(this)};Y().prototype.acos=function(){return this.throwIfDisposed(),by(this)};Y().prototype.acosh=function(){return this.throwIfDisposed(),xy(this)};Y().prototype.add=function(e){return this.throwIfDisposed(),J(this,e)};Y().prototype.all=function(e,t){return this.throwIfDisposed(),Zd(this,e,t)};Y().prototype.any=function(e,t){return this.throwIfDisposed(),Ic(this,e,t)};Y().prototype.argMax=function(e){return this.throwIfDisposed(),Tc(this,e)};Y().prototype.argMin=function(e){return this.throwIfDisposed(),vy(this,e)};Y().prototype.asScalar=function(){return this.throwIfDisposed(),$(this.size===1,()=>"The array must have only 1 element."),U(this,[])};Y().prototype.asType=function(e){return this.throwIfDisposed(),ue(this,e)};Y().prototype.as1D=function(){return this.throwIfDisposed(),U(this,[this.size])};Y().prototype.as2D=function(e,t){return this.throwIfDisposed(),U(this,[e,t])};Y().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),U(this,[e,t,n])};Y().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),U(this,[e,t,n,a])};Y().prototype.as5D=function(e,t,n,a,r){return this.throwIfDisposed(),U(this,[e,t,n,a,r])};Y().prototype.asin=function(){return this.throwIfDisposed(),wy(this)};Y().prototype.asinh=function(){return this.throwIfDisposed(),ky(this)};Y().prototype.atan=function(){return this.throwIfDisposed(),Iy(this)};Y().prototype.atan2=function(e){return this.throwIfDisposed(),Ty(this,e)};Y().prototype.atanh=function(){return this.throwIfDisposed(),Ny(this)};Y().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),Qn(this,e,t,n,a)};Y().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Sc(this,e,t)};Y().prototype.batchNorm=function(e,t,n,a,r){return this.throwIfDisposed(),fr(this,e,t,n,a,r)};Y().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Cc(this,e)};Y().prototype.cast=function(e){return this.throwIfDisposed(),ue(this,e)};Y().prototype.ceil=function(){return this.throwIfDisposed(),Ey(this)};Y().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Kt(this,e,t)};Y().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ee&&(e=[e]),Je([this,...e],t)};Y().prototype.conv1d=function(e,t,n,a,r,s){return this.throwIfDisposed(),th(this,e,t,n,a,r,s)};Y().prototype.conv2dTranspose=function(e,t,n,a,r){return this.throwIfDisposed(),nh(this,e,t,n,a,r)};Y().prototype.conv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),At(this,e,t,n,a,r,s)};Y().prototype.cos=function(){return this.throwIfDisposed(),_c(this)};Y().prototype.cosh=function(){return this.throwIfDisposed(),ah(this)};Y().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),rh(this,e,t,n)};Y().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),$y(this,e,t)};Y().prototype.depthwiseConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),Qr(this,e,t,n,a,r,s)};Y().prototype.dilation2d=function(e,t,n,a,r){return this.throwIfDisposed(),Dy(this,e,t,n,a,r)};Y().prototype.divNoNan=function(e){return this.throwIfDisposed(),Ry(this,e)};Y().prototype.div=function(e){return this.throwIfDisposed(),ye(this,e)};Y().prototype.dot=function(e){return this.throwIfDisposed(),ck(this,e)};Y().prototype.elu=function(){return this.throwIfDisposed(),Rl(this)};Y().prototype.equal=function(e){return this.throwIfDisposed(),Zr(this,e)};Y().prototype.erf=function(){return this.throwIfDisposed(),My(this)};Y().prototype.exp=function(){return this.throwIfDisposed(),dn(this)};Y().prototype.expandDims=function(e){return this.throwIfDisposed(),hn(this,e)};Y().prototype.expm1=function(){return this.throwIfDisposed(),Py(this)};Y().prototype.fft=function(){return this.throwIfDisposed(),Mc(this)};Y().prototype.flatten=function(){return this.throwIfDisposed(),U(this,[this.size])};Y().prototype.floor=function(){return this.throwIfDisposed(),Ml(this)};Y().prototype.floorDiv=function(e){return this.throwIfDisposed(),Qd(this,e)};Y().prototype.gather=function(e,t){return this.throwIfDisposed(),Ni(this,e,t)};Y().prototype.greaterEqual=function(e){return this.throwIfDisposed(),es(this,e)};Y().prototype.greater=function(e){return this.throwIfDisposed(),pa(this,e)};Y().prototype.ifft=function(){return this.throwIfDisposed(),Bl(this)};Y().prototype.irfft=function(){return this.throwIfDisposed(),vh(this)};Y().prototype.isFinite=function(){return this.throwIfDisposed(),pk(this)};Y().prototype.isInf=function(){return this.throwIfDisposed(),dk(this)};Y().prototype.isNaN=function(){return this.throwIfDisposed(),hk(this)};Y().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Ec(this,e)};Y().prototype.lessEqual=function(e){return this.throwIfDisposed(),Si(this,e)};Y().prototype.less=function(e){return this.throwIfDisposed(),ih(this,e)};Y().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),Ly(this,e,t,n,a)};Y().prototype.logSigmoid=function(){return this.throwIfDisposed(),gk(this)};Y().prototype.logSoftmax=function(e){return this.throwIfDisposed(),uh(this,e)};Y().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),By(this,e,t)};Y().prototype.log=function(){return this.throwIfDisposed(),Pn(this)};Y().prototype.log1p=function(){return this.throwIfDisposed(),oh(this)};Y().prototype.logicalAnd=function(e){return this.throwIfDisposed(),da(this,e)};Y().prototype.logicalNot=function(){return this.throwIfDisposed(),Fc(this)};Y().prototype.logicalOr=function(e){return this.throwIfDisposed(),ch(this,e)};Y().prototype.logicalXor=function(e){return this.throwIfDisposed(),vk(this,e)};Y().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),ze(this,e,t,n)};Y().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),$t(this,e,t,n,a)};Y().prototype.max=function(e,t){return this.throwIfDisposed(),Zn(this,e,t)};Y().prototype.maximum=function(e){return this.throwIfDisposed(),qa(this,e)};Y().prototype.mean=function(e,t){return this.throwIfDisposed(),Ct(this,e,t)};Y().prototype.min=function(e,t){return this.throwIfDisposed(),Ol(this,e,t)};Y().prototype.minimum=function(e){return this.throwIfDisposed(),Ll(this,e)};Y().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Uy(this,e,t)};Y().prototype.mod=function(e){return this.throwIfDisposed(),Gy(this,e)};Y().prototype.mul=function(e){return this.throwIfDisposed(),W(this,e)};Y().prototype.neg=function(){return this.throwIfDisposed(),St(this)};Y().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Th(this,e,t,n)};Y().prototype.notEqual=function(e){return this.throwIfDisposed(),_i(this,e)};Y().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Fl(this,e,t,n)};Y().prototype.onesLike=function(){return this.throwIfDisposed(),On(this)};Y().prototype.pad=function(e,t){return this.throwIfDisposed(),ea(this,e,t)};Y().prototype.pool=function(e,t,n,a,r){return this.throwIfDisposed(),Ik(this,e,t,n,a,r)};Y().prototype.pow=function(e){return this.throwIfDisposed(),gr(this,e)};Y().prototype.prelu=function(e){return this.throwIfDisposed(),$c(this,e)};Y().prototype.prod=function(e,t){return this.throwIfDisposed(),dh(this,e,t)};Y().prototype.reciprocal=function(){return this.throwIfDisposed(),qy(this)};Y().prototype.relu=function(){return this.throwIfDisposed(),qe(this)};Y().prototype.relu6=function(){return this.throwIfDisposed(),mh(this)};Y().prototype.reshapeAs=function(e){return this.throwIfDisposed(),U(this,e.shape)};Y().prototype.reshape=function(e){return this.throwIfDisposed(),U(this,e)};Y().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Bk(this,e,t,n)};Y().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Vk(this,e,t,n)};Y().prototype.reverse=function(e){return this.throwIfDisposed(),Ln(this,e)};Y().prototype.rfft=function(){return this.throwIfDisposed(),Pc(this)};Y().prototype.round=function(){return this.throwIfDisposed(),Ky(this)};Y().prototype.rsqrt=function(){return this.throwIfDisposed(),fh(this)};Y().prototype.selu=function(){return this.throwIfDisposed(),gh(this)};Y().prototype.separableConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),Ei(this,e,t,n,a,r,s)};Y().prototype.sigmoid=function(){return this.throwIfDisposed(),ca(this)};Y().prototype.sign=function(){return this.throwIfDisposed(),Xy(this)};Y().prototype.sin=function(){return this.throwIfDisposed(),yh(this)};Y().prototype.sinh=function(){return this.throwIfDisposed(),bh(this)};Y().prototype.slice=function(e,t){return this.throwIfDisposed(),Be(this,e,t)};Y().prototype.softmax=function(e){return this.throwIfDisposed(),Na(this,e)};Y().prototype.softplus=function(){return this.throwIfDisposed(),Pl(this)};Y().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Ac(this,e,t)};Y().prototype.split=function(e,t){return this.throwIfDisposed(),zn(this,e,t)};Y().prototype.sqrt=function(){return this.throwIfDisposed(),rn(this)};Y().prototype.square=function(){return this.throwIfDisposed(),ot(this)};Y().prototype.squaredDifference=function(e){return this.throwIfDisposed(),wh(this,e)};Y().prototype.squeeze=function(e){return this.throwIfDisposed(),ts(this,e)};Y().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof Ee?[this,e]:[this,...e];return Dt(n,t)};Y().prototype.step=function(e){return this.throwIfDisposed(),Vl(this,e)};Y().prototype.stridedSlice=function(e,t,n,a,r,s,i,o){return this.throwIfDisposed(),Jy(this,e,t,n,a,r,s,i,o)};Y().prototype.sub=function(e){return this.throwIfDisposed(),he(this,e)};Y().prototype.sum=function(e,t){return this.throwIfDisposed(),Se(this,e,t)};Y().prototype.tan=function(){return this.throwIfDisposed(),Qy(this)};Y().prototype.tanh=function(){return this.throwIfDisposed(),Dl(this)};Y().prototype.tile=function(e){return this.throwIfDisposed(),Ha(this,e)};Y().prototype.toBool=function(){return this.throwIfDisposed(),ue(this,"bool")};Y().prototype.toFloat=function(){return this.throwIfDisposed(),ue(this,"float32")};Y().prototype.toInt=function(){return this.throwIfDisposed(),ue(this,"int32")};Y().prototype.topk=function(e,t){return this.throwIfDisposed(),Zy(this,e,t)};Y().prototype.transpose=function(e){return this.throwIfDisposed(),Ve(this,e)};Y().prototype.unique=function(e){return this.throwIfDisposed(),Ih(this,e)};Y().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),eb(this,e,t)};Y().prototype.unstack=function(e){return this.throwIfDisposed(),ut(this,e)};Y().prototype.where=function(e,t){return this.throwIfDisposed(),Sn(e,this,t)};Y().prototype.zerosLike=function(){return this.throwIfDisposed(),Ge(this)};var n1={};Le(n1,{maxNorm:()=>m3,minMaxNorm:()=>y3,nonNeg:()=>g3,unitNorm:()=>f3});var ob;function Bt(){return ob==null&&(ob=X0().epsilon()),ob}function _a(){return"channelsLast"}var xr=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,xr.prototype)}},Ea=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Ea.prototype)}},B=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,B.prototype)}},$e=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,$e.prototype)}},a1=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,a1.prototype)}};function $i(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function Ja(e,t){if(!e)throw new a1(t)}function r1(e,t){let n=0;for(let a of e)a===t&&n++;return n}function _n(e){return e.length===1?e[0]:e}function ft(e){return Array.isArray(e)?e:[e]}function vr(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Di(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var ha={};function lb(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function ub(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>ub(t));else{let t=Object.keys(e);for(let n of t){let a=e[n];a!=null&&typeof a=="object"&&(!Array.isArray(a)&&a.type==="ndarray"&&typeof a.value=="number"?e[n]=a.value:ub(a))}}}function Lc(e,t={},n={},a="object",r=!1){if(typeof e=="string"){let s=e,i;if(s in n)i=n[s];else if(s in ha)i=ha[s];else if(i=t[s],i==null)throw new B(`Unknown ${a}: ${e}. This may be due to one of the following reasons:
1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=e;if(s.className==null||s.config==null)throw new B(`${a}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,o,l;if(i in n?[o,l]=n[i]:i in ha?[o,l]=ha.className:i in t&&([o,l]=t[i]),o==null)throw new B(`Unknown ${a}: ${i}. This may be due to one of the following reasons:
1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let c={};for(let h of Object.keys(ha))c[h]=ha[h];for(let h of Object.keys(n))c[h]=n[h];let u=s.config;u.customObjects=c;let p=Object.assign({},ha);for(let h of Object.keys(n))ha[h]=n[h];ub(s.config);let d=l(o,s.config,n,r);return ha=Object.assign({},p),d}else{let c=Object.assign({},ha);for(let p of Object.keys(n))ha[p]=n[p];let u=new o(s.config);return ha=Object.assign({},c),u}}}function b3(e,t){return e<t?-1:e>t?1:0}function Ph(e,t){return-1*b3(e,t)}function as(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function x3(e){if(e==null)throw new B(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function Ri(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new B(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function cb(e,t,n=0,a=Infinity){return Ja(n>=0),Ja(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every(r=>typeof r===t)}function Xt(e,t){Array.isArray(e)?(w.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,a)=>Xt(n,`element ${a+1} of ${t}`))):w.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${s1(e)}.`)}function s1(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>s1(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function v3(e,t){let n=w.now(),a;return(...r)=>{let s=w.now();return s-n<t||(n=s,a=e(...r)),a}}function i1(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}function pb(e,t){return D(()=>rn(Se(W(e,e),t,!0)))}var zc=class extends re.Serializable{getConfig(){return{}}},db=class extends zc{constructor(e){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return D(()=>{let t=pb(e,this.axis),n=Kt(t,0,this.maxValue);return W(e,ye(n,J(Bt(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};db.className="MaxNorm";re.registerClass(db);var hb=class extends zc{constructor(e){super();this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return D(()=>ye(e,J(Bt(),pb(e,this.axis))))}getConfig(){return{axis:this.axis}}};hb.className="UnitNorm";re.registerClass(hb);var mb=class extends zc{apply(e){return qe(e)}};mb.className="NonNeg";re.registerClass(mb);var fb=class extends zc{constructor(e){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return D(()=>{let t=pb(e,this.axis),n=J(W(this.rate,Kt(t,this.minValue,this.maxValue)),W(1-this.rate,t));return W(e,ye(n,J(Bt(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};fb.className="MinMaxNorm";re.registerClass(fb);var o1={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Vt(e){return lb(e)}function l1(e,t={}){return Lc(e,re.SerializationMap.getMap().classNameMap,t,"constraint")}function Ut(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in o1?o1[e]:e,config:{}};return l1(t)}else return e instanceof zc?e:l1(e)}function m3(e){return new db(e)}function f3(e){return new hb(e)}function g3(){return new mb}function y3(e){return new fb(e)}var u1={};Le(u1,{constant:()=>I3,glorotNormal:()=>F3,glorotUniform:()=>E3,heNormal:()=>A3,heUniform:()=>$3,identity:()=>C3,leCunNormal:()=>D3,leCunUniform:()=>R3,ones:()=>k3,orthogonal:()=>M3,randomNormal:()=>N3,randomUniform:()=>T3,truncatedNormal:()=>S3,varianceScaling:()=>_3,zeros:()=>w3});var P3=["channelsFirst","channelsLast"],O3=["nearest","bilinear"],L3=["valid","same","causal"],z3=["max","avg"],W3=["sum","mul","concat","ave"],Gl=new Map;function Rt(e){Ri(P3,"DataFormat",e)}function B3(e){Ri(O3,"InterpolationFormat",e)}function ta(e){Ri(L3,"PaddingMode",e)}function c1(e){Ri(z3,"PoolMode",e)}var Wc=[],p1="/";function Mi(e,t){Wc.push(e);try{let n=t();return Wc.pop(),n}catch(n){throw Wc.pop(),n}}function V3(){return Wc.length===0?"":Wc.join(p1)+p1}function h1(e){if(!d1(e))throw new Error("Not a valid tensor name: '"+e+"'");return V3()+e}function m1(e){if(!d1(e))throw new Error("Not a valid tensor name: '"+e+"'");Gl.has(e)||Gl.set(e,0);let t=Gl.get(e);if(Gl.set(e,Gl.get(e)+1),t>0){let n=`${e}_${t}`;return Gl.set(n,1),n}else return e}var U3=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function d1(e){return!!e.match(U3)}function G3(e){return e===parseInt(e.toString(),10)}function rs(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let a=1;for(let r=t;r<n;++r)a*=e[r];return a}function f1(e){return e=Array.isArray(e)?new Float32Array(e):e,Qe(e)}function Hl(e){return Ol(f1(e)).dataSync()[0]}function ss(e){return Zn(f1(e)).dataSync()[0]}function Fa(e,t){if(t<e)throw new B(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let a=e;a<t;++a)n.push(a);return n}function Bc(e,t){return e.asType(t)}function Vc(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function H3(e,t){return D(()=>{if(e.shape.length!==2)throw new B(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=Vc(e,1);return gb(n,[1,t,1])})}function j3(e){let t=[rs(e.shape)];return e.reshape(t)}function q3(e){if(e.rank<=1)throw new B(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],rs(e.shape,1)];return e.reshape(t)}function Pi(e,t,n){return D(()=>{switch(e.rank){case 1:return xh(e,t,n);case 2:return Yy(e,[t,0],[n,e.shape[1]]);case 3:return Wl(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Rc(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Be(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Be(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new B(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function yb(e,t,n){return D(()=>{switch(e.rank){case 1:return xh(e,t,n);case 2:return Yy(e,[0,t],[e.shape[0],n]);case 3:return Wl(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Rc(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new B(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Oh(e,t,n,a){return D(()=>{switch(e.rank){case 1:return xh(e,t,n);case 2:switch(a){case 1:return Pi(e,t,n);case 2:return yb(e,t,n);default:throw new B(`The axis is not within the rank of the tensor ${a}`)}case 3:switch(a){case 1:return Pi(e,t,n);case 2:return Wl(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return yb(e,t,n);default:throw new B(`The axis is not within the rank of the tensor ${a}`)}case 4:switch(a){case 1:return Pi(e,t,n);case 2:return Rc(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Rc(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return yb(e,t,n);default:throw new B(`The axis is not within the rank of the tensor ${a}`)}default:throw new B(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function bb(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),Je(e,t)}function g1(e,t){switch(e.rank){case 1:return rk([e,t]);case 2:return sk([e,t],0);case 3:return ik([e,t],0);case 4:return ok([e,t],0);default:throw new B(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function gb(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new B(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Ha(e,t)}function Lh(e,t=0,n=1,a,r){return Tk(e,t,n,a,r)}function Qa(e,t,n,a){if(e.rank<2||t.rank<2)throw new $e(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let r=e.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(r!==s)throw new $e(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2){let r=!1,s=!1;return ns.matMul({a:e,b:t,transposeA:r,transposeB:s,bias:a?xb(e.rank,a,_a()):null,activation:n})}else{let r=e.shape.slice(),s=r.pop();e=e.reshape([-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),c=[...i,o],u=Array.from({length:t.rank},(m,f)=>f===0?t.rank-2:f<=t.rank-2?f-1:f);t=t.transpose(u).reshape([l,-1]);let p=[...r,...c],d=!1,h=!1;return ns.matMul({a:e,b:t,transposeA:d,transposeB:h,bias:a?xb(e.rank,a,_a()):null,activation:n}).reshape(p)}}function y1(e,t,n){return D(()=>(Array.isArray(t)?t=Qe(t,"int32"):t=t.toInt(),Ni(e,t,n)))}function Uc(e){return W(e,e)}function xb(e,t,n){let a=t.shape;if(t.rank!==1&&t.rank!==e)throw new B(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return a.length===1?t.reshape([1,a[0],1,1,1]):t.reshape([1,a[3],a[0],a[1],a[2]]);if(n==="channelsLast")return a.length===1?t.reshape([1,1,1,1,a[0]]):t.reshape([1].concat(a))}else if(e===4){if(n==="channelsFirst")return a.length===1?t.reshape([1,a[0],1,1]):t.reshape([1,a[2],a[0],a[1]]);if(n==="channelsLast")return a.length===1?t.reshape([1,1,1,a[0]]):t.reshape([1].concat(a))}else if(e===3){if(n==="channelsFirst")return a.length===1?t.reshape([1,a[0],1]):t.reshape([1,a[1],a[0]]);if(n==="channelsLast")return a.length===1?t.reshape([1,1,a[0]]):t.reshape([1].concat(a))}else if(e<3)return t;throw new B(`Unsupported input rank by biasAdd: ${t.rank}`)}function Za(e,t,n){return D(()=>(n==null&&(n=_a()),Rt(n),e.add(xb(e.rank,t,n))))}function K3(e,t=1){if(t!==1)throw new $e(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Rl(e)}function X3(e){return D(()=>ye(e,zt(e).add(1)))}function b1(e,t,n,a){return D(()=>Ak(e,t,n,a))}function Y3(e){return D(()=>{let t=J(.5,W(.2,e));return Kt(t,0,1)})}function Gc(e,t,n=!1){return n?e():t()}var J3=["fanIn","fanOut","fanAvg"],Q3=["normal","uniform","truncatedNormal"];function Z3(e){Ri(J3,"FanMode",e)}function ez(e){Ri(Q3,"Distribution",e)}var ma=class extends re.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},vb=class extends ma{apply(e,t){return xt(e,t)}};vb.className="Zeros";re.registerClass(vb);var zh=class extends ma{apply(e,t){return Ka(e,t)}};zh.className="Ones";re.registerClass(zh);var wb=class extends ma{constructor(e){super();if(typeof e!="object")throw new B(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new B(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return D(()=>W(ve(this.value),Ka(e,t)))}getConfig(){return{value:this.value}}};wb.className="Constant";re.registerClass(wb);var kb=class extends ma{constructor(e){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return zl(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};kb.className="RandomUniform";re.registerClass(kb);var Ib=class extends ma{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new $e(`randomNormal does not support dType ${t}.`);return Lh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Ib.className="RandomNormal";re.registerClass(Ib);var Tb=class extends ma{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new $e(`truncatedNormal does not support dType ${t}.`);return kh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Tb.className="TruncatedNormal";re.registerClass(Tb);var Nb=class extends ma{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return D(()=>{if(e.length!==2||e[0]!==e[1])throw new B("Identity matrix initializer can only be used for 2D square matrices.");return W(this.gain,Oy(e[0]))})}getConfig(){return{gain:this.gain}}};Nb.className="Identity";re.registerClass(Nb);function tz(e,t="channelsLast"){let n,a;if(Rt(t),e.length===2)n=e[0],a=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let r=rs(e,2);n=e[1]*r,a=e[0]*r}else if(t==="channelsLast"){let r=rs(e,0,e.length-2);n=e[e.length-2]*r,a=e[e.length-1]*r}}else{let r=rs(e);n=Math.sqrt(r),a=Math.sqrt(r)}return[n,a]}var En=class extends ma{constructor(e){super();if(e.scale<0)throw new B(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,Z3(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,ez(this.distribution),this.seed=e.seed}apply(e,t){let n=tz(e),a=n[0],r=n[1],s=this.scale;if(this.mode==="fanIn"?s/=Math.max(1,a):this.mode==="fanOut"?s/=Math.max(1,r):s/=Math.max(1,(a+r)/2),this.distribution==="normal"){let i=Math.sqrt(s);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new $e(`${this.getClassName()} does not support dType ${t}.`);return kh(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*s);return zl(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};En.className="VarianceScaling";re.registerClass(En);var Wh=class extends En{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return En.className}};Wh.className="GlorotUniform";re.registerClass(Wh);var Bh=class extends En{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return En.className}};Bh.className="GlorotNormal";re.registerClass(Bh);var Vh=class extends En{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return En.className}};Vh.className="HeNormal";re.registerClass(Vh);var Uh=class extends En{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return En.className}};Uh.className="HeUniform";re.registerClass(Uh);var Gh=class extends En{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return En.className}};Gh.className="LeCunNormal";re.registerClass(Gh);var Hh=class extends En{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return En.className}};Hh.className="LeCunNormal";re.registerClass(Hh);var Sb=class extends ma{constructor(e){super();if(this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new $e("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return D(()=>{if(e.length<2)throw new $e("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,a=Lh(n,0,1,"float32"),r=Gk.gramSchmidt(a);return e[0]>e[1]&&(r=r.transpose()),W(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}};Sb.className="Orthogonal";re.registerClass(Sb);var x1={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function v1(e,t={}){return Lc(e,re.SerializationMap.getMap().classNameMap,t,"initializer")}function _t(e){return lb(e)}function vt(e){if(typeof e=="string"){let t=e in x1?x1[e]:e;if(t==="GlorotNormal")return new Bh;if(t==="GlorotUniform")return new Wh;if(t==="HeNormal")return new Vh;if(t==="HeUniform")return new Uh;if(t==="LeCunNormal")return new Gh;if(t==="LeCunUniform")return new Hh;{let n={};return n.className=t,n.config={},v1(n)}}else return e instanceof ma?e:v1(e)}function w3(){return new vb}function k3(){return new zh}function I3(e){return new wb(e)}function T3(e){return new kb(e)}function N3(e){return new Ib(e)}function S3(e){return new Tb(e)}function C3(e){return new Nb(e)}function _3(e){return new En(e)}function E3(e){return new Wh(e)}function F3(e){return new Bh(e)}function A3(e){return new Vh(e)}function $3(e){return new Uh(e)}function D3(e){return new Gh(e)}function R3(e){return new Hh(e)}function M3(e){return new Sb(e)}var w1={};Le(w1,{Layer:()=>je,RNN:()=>er,RNNCell:()=>Hc,activation:()=>yz,add:()=>Sz,alphaDropout:()=>uW,average:()=>Cz,averagePooling1d:()=>Cb,averagePooling2d:()=>_b,averagePooling3d:()=>Eb,avgPool1d:()=>Pz,avgPool2d:()=>Lz,avgPool3d:()=>Wz,avgPooling1d:()=>Oz,avgPooling2d:()=>zz,avgPooling3d:()=>Bz,batchNormalization:()=>Dz,bidirectional:()=>tW,concatenate:()=>_z,conv1d:()=>uz,conv2d:()=>cz,conv2dTranspose:()=>pz,conv3d:()=>dz,convLstm2d:()=>Jz,convLstm2dCell:()=>Qz,cropping2D:()=>mz,dense:()=>bz,depthwiseConv2d:()=>gz,dot:()=>$z,dropout:()=>xz,elu:()=>az,embedding:()=>Nz,flatten:()=>wz,gaussianDropout:()=>lW,gaussianNoise:()=>oW,globalAveragePooling1d:()=>Vz,globalAveragePooling2d:()=>Uz,globalMaxPool1d:()=>aW,globalMaxPool2d:()=>rW,globalMaxPooling1d:()=>I1,globalMaxPooling2d:()=>T1,gru:()=>Hz,gruCell:()=>jz,input:()=>k1,inputLayer:()=>nz,layerNormalization:()=>Rz,leakyReLU:()=>sz,lstm:()=>qz,lstmCell:()=>Kz,masking:()=>cW,maxPool1d:()=>sW,maxPool2d:()=>iW,maxPooling1d:()=>N1,maxPooling2d:()=>S1,maxPooling3d:()=>Gz,maximum:()=>Ez,minimum:()=>Fz,multiply:()=>Az,permute:()=>Tz,prelu:()=>iz,reLU:()=>rz,repeatVector:()=>kz,reshape:()=>Iz,rnn:()=>Zz,separableConv2d:()=>hz,simpleRNN:()=>Xz,simpleRNNCell:()=>Yz,softmax:()=>oz,spatialDropout1d:()=>vz,stackedRNNCells:()=>eW,thresholdedReLU:()=>lz,timeDistributed:()=>nW,upSampling2d:()=>fz,zeroPadding2d:()=>Mz});var pW=0;function C1(){return pW++}var jh={};function qh(e=""){return e in jh||(jh[e]=0),jh[e]+=1,e+jh[e].toString()}function Fb(e){return Array.isArray(e)&&Array.isArray(e[0])}function Kh(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Pe(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new B(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function ct(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new B(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function Xh(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((a,r)=>a*r);return t}var _1="Variable",E1=class{constructor(e,t="float32",n=_1,a=!0,r=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=C1(),n=n==null?_1:n,this.originalName=h1(n),this.name=m1(this.originalName),this.trainable_=a,this.constraint=r,this.val=Sk(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),dW(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function dW(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function Ab(e){return e.map(t=>t.read())}function $b(e){e.forEach(t=>{t[0].write(t[1])})}var Yt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Aa=class{constructor(e,t,n,a,r,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=i,this.id=C1(),s!=null&&(this.originalName=h1(s),this.name=m1(this.originalName)),this.rank=t.length}},hW=0,Yh=class{constructor(e,t){this.callArgs=t,this.id=hW++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},mW=0,je=class extends re.Serializable{constructor(e={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=mW++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=vr(n)+"_"+qh(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),n=[r].concat(e.inputShape)}this.batchInputShape=n;let a=e.dtype;a==null&&(a=e.inputDType),a==null&&(a="float32"),this.dtype=a}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Ea(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new B(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return _n(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return _n(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new xr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new xr(`Layer ${this.name} is not connected, no input to return.`);return _n(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new xr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new xr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return _n(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=ft(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=ft(this.inputSpec);if(e.length!==t.length)throw new B(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let a=e[n],r=t[n];if(r==null)continue;let s=a.rank;if(r.ndim!=null&&s!==r.ndim)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${s}`);if(r.maxNDim!=null&&s>r.maxNDim)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${s}`);if(r.minNDim!=null&&s<r.minNDim)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${s}.`);if(r.dtype!=null&&a.dtype!==r.dtype)throw new B(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${a.dtype}.`);if(r.axes){let i=a.shape;for(let o in r.axes){let l=Number(o),c=r.axes[o],u=l>=0?i[l]:i[i.length+l];if(c!=null&&[c,null].indexOf(u)===-1)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${c} but got shape ${i}.`)}}if(r.shape!=null)for(let i=0;i<r.shape.length;++i){let o=r.shape[i],l=a.shape[i];if(o!=null&&l!=null&&o!==l)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${a.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=ft(e),a=!0;for(let s of n)if(!(s instanceof Aa)){a=!1;break}let r=!0;for(let s of n)if(s instanceof Aa){r=!1;break}if(a===r)throw new B("Arguments to apply() must be all SymbolicTensors or all Tensors");return Mi(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let s=[];for(let i of ft(e))s.push(i.shape);this.build(_n(s)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let s=this.call(e,t),i=ft(s),o=[];for(let l of i)n.indexOf(l)!==-1&&(l=l.clone()),o.push(l);if(s=_n(o),this.activityRegularizer!=null)throw new $e("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}else{let s=fW(e),i=this.computeOutputShape(s),o,l=gW(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?s[0]:s),i!=null&&i.length>0&&Array.isArray(i[0])?o=i.map((c,u)=>new Aa(l,c,this,ft(e),t,this.name,u)):o=new Aa(l,i,this,ft(e),t,this.name),this.addInboundNode(e,o,null,null,s,i,t),this._refCount++,this.activityRegularizer!=null)throw new $e("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,a)=>{n!=null&&e[a]!=null&&e[a]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new xr(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new xr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Ea(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Xh(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Ab(e?this.trainableWeights:this.weights)}setWeights(e){D(()=>{let t=this.weights;if(t.length!==e.length)throw new B(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],a=Ab(t);for(let r=0;r<a.length;++r){let s=a[r],i=t[r],o=e[r];if(!w.arraysEqual(s.shape,o.shape))throw new B(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}$b(n)})}addWeight(e,t,n,a,r,s,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new B(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(a=vt("zeros"));let o=a.apply(t,n),l=new E1(o,n,e,s,i);return o.dispose(),r!=null&&this.addLoss(()=>r.apply(l.read())),s==null&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=ft(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,a,r,s,i=null){let o=ft(e);t=ft(t),n=ft(n),a=ft(a),r=Kh(r),s=Kh(s);let l=[],c=[],u=[];for(let p of o)l.push(p.sourceLayer),c.push(p.nodeIndex),u.push(p.tensorIndex);new Yh({outboundLayer:this,inboundLayers:l,nodeIndices:c,tensorIndices:u,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:s},i);for(let p=0;p<t.length;p++)t[p].sourceLayer=this,t[p].nodeIndex=this.inboundNodes.length-1,t[p].tensorIndex=p}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount==0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function fW(e){e=ft(e);let t=[];for(let n of e)t.push(n.shape);return _n(t)}function gW(e){return"float32"}function F1(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let a=t.inboundNodes[n];if(a.inboundLayers.length===0)return a.inputTensors;{let r=[];for(let s=0;s<a.inboundLayers.length;s++){let i=a.inputTensors[s],o=a.inboundLayers[s],l=a.nodeIndices[s],c=F1(i,o,l);for(let u of c)r.indexOf(u)===-1&&r.push(u)}return r}}}var jl=class extends je{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:qh("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new B("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new B("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new B("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let a=new Aa(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Yh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new B(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};jl.className="InputLayer";re.registerClass(jl);function A1(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new B("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new jl({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function is(e){if(e==null)return;let t=[],n=[],a=[];for(let r in e){let s=e[r];if(typeof s!="number"){let i=s;t.push(i.data()),n.push(r),a.push(i)}}if(t.length>0){let r=await Promise.all(t);for(let s=0;s<r.length;++s)e[n[s]]=r[s][0];Ae(a)}}function $1(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var D1;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(D1||(D1={}));var yW=125,ql=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},R1=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},bW=class extends ql{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let a in t){let r=t[a];if(typeof r=="number")this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+r*n;else{let s;a in this.totals?s=this.totals[a]:this.totals[a]=0;let i=D(()=>J(this.totals[a],W(r,n)));this.totals[a]=i,s!=null&&s.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:D(()=>{let a=W(ye(1,this.seen),this.totals[n]);t[n]=a,this.totals[n].dispose(),qt(t[n])}))}},M1=class extends ql{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let s=this.history[r];for(let i=0;i<s.length;++i)if(typeof s[i]!="number"){let o=s[i];e.push(o.data()),t.push(r),n.push(i)}}let a=await Promise.all(e);for(let r=0;r<a.length;++r)this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=a[r][0]}},P1=class extends ql{constructor(e,t){super();if(this.currentEpoch=0,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=yW),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");w.isNumber(this.yieldEvery)&&(this.maybeWait=v3(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let a=[];this.yield!=null&&(await is(n),a.push(this.yield(e,t,n))),a.push(Mh()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await is(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await is(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(Mh()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await is(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await is(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(Mh()):w.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await is(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await is(e),await this.trainEnd(e))}};function O1(e,t){return e==null&&(e={}),e instanceof ql?[e]:Array.isArray(e)&&e[0]instanceof ql?e:ft(e).map(n=>new P1(n,t))}var fa=class{constructor(){}static registerCallbackConstructor(e,t){w.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),fa.checkForDuplicate(t),fa.constructors[e]==null&&(fa.constructors[e]=[]),fa.constructors[e].push(t)}static checkForDuplicate(e){for(let t in fa.constructors)fa.constructors[+t].forEach(n=>{if(n===e)throw new B("Duplicate callback constructor.")})}static clear(){fa.constructors={}}static createCallbacks(e){let t=[];for(let n in fa.constructors){let a=+n;e>=a&&t.push(...fa.constructors[a])}return t.map(n=>new n)}};fa.constructors={};function L1(e,t,n,a,r,s,i,o,l){let c=new M1,u=[new bW,...fa.createCallbacks(t)];e!=null&&u.push(...e),u.push(c);let p=new R1(u);return p.setParams({epochs:n,initialEpoch:a,samples:r,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:p,history:c}}function $a(e,t={},n=!1){return Lc(e,re.SerializationMap.getMap().classNameMap,t,"layer",n)}function Jh(e,t){return D(()=>{e.dtype!=="float32"&&(e=e.asType("float32"));let n=Se(Uc(e),t,!0),a=Cn(n.shape,Bt()),r=rn(qa(n,a));return ye(e,r)})}function Oi(e,t){return D(()=>Ct(Uc(he(t,e)),-1))}function Qh(e,t){return D(()=>Ct(zt(he(t,e)),-1))}function Kl(e,t){return D(()=>{let n=he(e,t),a=Kt(zt(e),Bt(),Number.MAX_VALUE),r=zt(ye(n,a));return W(100,Ct(r,-1))})}function xW(e,t){return D(()=>{let n=Kt(t,Bt(),Number.MAX_VALUE),a=Pn(J(1,n)),r=Kt(e,Bt(),Number.MAX_VALUE),s=Pn(J(1,r));return Ct(Uc(he(a,s)),-1)})}function vW(e,t){return D(()=>{let n=qa(0,he(1,W(e,t)));return Ct(Uc(n),-1)})}function wW(e,t){return D(()=>{let n=qa(0,he(1,W(e,t)));return Ct(n,-1)})}function kW(e,t){return D(()=>{let n=Se(W(e,t),-1),a=Zn(W(he(1,e),t),-1);return qa(0,J(1,he(a,n)))})}function IW(e,t){return D(()=>{let n=Math.log(2),a=he(t,e),r=he(J(a,Pl(W(-2,a))),n);return Ct(r,-1)})}function jc(e,t,n=!1){return D(()=>{if(n)t=Na(t);else{let a=Se(t,t.shape.length-1,!0);t=ye(t,a)}return t=Kt(t,Bt(),1-Bt()),St(Se(W(e.toFloat(),Pn(t)),t.shape.length-1))})}function Zh(e,t,n=!1){return D(()=>{let a=Ml(j3(e)).toInt();t=Kt(t,Bt(),1-Bt());let r=t.shape,s=Fl(a,r[r.length-1]).reshape(r);return jc(s,t,n)})}function TW(e,t){if(!w.arraysEqual(e.shape,t.shape))throw new B(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return D(()=>{let n=t.relu(),a=t.abs().neg();return n.sub(t.mul(e)).add(a.exp().log1p())})}function em(e,t){return D(()=>{let n;return n=Kt(t,Bt(),1-Bt()),n=Pn(ye(n,he(1,n))),Ct(TW(e,n),-1)})}function NW(e,t){return D(()=>{let n=Kt(e,Bt(),1),a=Kt(t,Bt(),1);return Se(W(e,Pn(ye(n,a))),-1)})}function SW(e,t){return D(()=>{let n=Pn(J(Bt(),t));return Ct(he(t,W(e,n)),-1)})}function Db(e,t){return D(()=>{let n=Jh(e,-1),a=Jh(t,-1),r=W(n,a);return St(Se(r,-1))})}var tm={meanSquaredError:Oi,meanAbsoluteError:Qh,meanAbsolutePercentageError:Kl,meanSquaredLogarithmicError:xW,squaredHinge:vW,hinge:wW,categoricalHinge:kW,logcosh:IW,categoricalCrossentropy:jc,sparseCategoricalCrossentropy:Zh,binaryCrossentropy:em,kullbackLeiblerDivergence:NW,poisson:SW,cosineProximity:Db};function Rb(e){if(typeof e=="string"){if(e in tm)return tm[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new B(t)}else return e}function Mb(e,t){return D(()=>{let n=W(.5,On(t)),a=Bc(pa(t,n),e.dtype);return Ct(Zr(e,a),-1)})}function Pb(e,t){return D(()=>Bc(Zr(Tc(e,-1),Tc(t,-1)),"float32"))}function z1(e,t){return D(()=>da(e.equal(1),t.equal(1)).sum().cast("float32"))}function CW(e,t){return D(()=>da(e.equal(1),t.equal(0)).sum().cast("float32"))}function _W(e,t){return D(()=>da(e.equal(0),t.equal(1)).sum().cast("float32"))}function W1(e,t){return D(()=>{let n=z1(e,t),a=_W(e,t),r=n.add(a);return Sn(pa(r,0),n.div(r),0).cast("float32")})}function EW(e,t){return D(()=>{let n=z1(e,t),a=CW(e,t),r=n.add(a);return Sn(pa(r,0),n.div(r),0).cast("float32")})}function B1(e,t){return em(e,t)}function V1(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),t=t.argMax(-1),t.dtype!==e.dtype&&(t=t.asType(e.dtype)),Zr(e,t).asType("float32")}var FW=Oi,AW=Oi,$W=Qh,DW=Qh,RW=Kl,MW=Kl,Ob=jc,PW=Db,U1=Zh,nm={binaryAccuracy:Mb,categoricalAccuracy:Pb,precision:W1,categoricalCrossentropy:Ob,sparseCategoricalCrossentropy:U1,mse:FW,MSE:AW,mae:$W,MAE:DW,mape:RW,MAPE:MW,cosine:PW};function OW(e){if(typeof e=="string"&&e in nm)return nm[e];if(typeof e!="string"&&e!=null)return e;throw new B(`Unknown metric ${e}`)}function am(e){if(Ja(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(tm))if(tm[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(nm))if(nm[n]===e){t=n;break}return t!==void 0?t:e.name}}function LW(e){let t={Adagrad:()=>Ai.adagrad(.01),Adadelta:()=>Ai.adadelta(1,.95,Bt()),Adam:()=>Ai.adam(.001,.9,.999,Bt()),Adamax:()=>Ai.adamax(.002,.9,.999,Bt(),0),RMSProp:()=>Ai.rmsprop(.001,.9,0,Bt()),SGD:()=>Ai.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new B(`Unknown Optimizer ${e}`)}var G1=1*1024*1024;function H1(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!Lb(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let a=JSON.stringify(e);a.length>G1&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${a.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${G1}.`)}}function Lb(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!Lb(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!Lb(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function UW(e,t,n,a=console.log){let r=WW(e),s=["Layer (type)","Output shape","Param #"];r?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(u=>Math.floor(t*u)));let i;if(!r){s.push("Receives inputs"),i=[];for(let u in e.nodesByDepth)i.push(...e.nodesByDepth[u])}a("_".repeat(t)),rm(s,n,a),a("=".repeat(t));let o=e.layers;for(let u=0;u<o.length;++u)r?BW(o[u],n,a):VW(o[u],n,i,a),a((u===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=zW(e),c=Xh(e.nonTrainableWeights);a(`Total params: ${l+c}`),a(`Trainable params: ${l}`),a(`Non-trainable params: ${c}`),a("_".repeat(t))}function zW(e){let t;return e.collectedTrainableWeights!=null?t=Xh(e.collectedTrainableWeights):t=Xh(e.trainableWeights),t}function WW(e){let t=!0,n=[],a=[];for(let r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(let r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}a.push(...r)}if(t)for(let r of e.layers){let s=!1;for(let i of r.inboundNodes)if(a.indexOf(i)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function rm(e,t,n=console.log){let a="";for(let r=0;r<e.length;++r)r>0&&(a=a.slice(0,a.length-1)+" "),a+=e[r],a=a.slice(0,t[r]),a+=" ".repeat(t[r]-a.length);n(a)}function BW(e,t,n){let a;try{a=JSON.stringify(e.outputShape)}catch(o){a="multiple"}let r=e.name,s=e.getClassName(),i=[`${r} (${s})`,a,e.countParams().toString()];rm(i,t,n)}function VW(e,t,n,a){let r;try{r=JSON.stringify(e.outputShape)}catch(u){r="multiple"}let s=[];for(let u of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(u)===-1))for(let p=0;p<u.inboundLayers.length;++p){let d=u.inboundLayers[p].name,h=u.nodeIndices[p],m=u.tensorIndices[p];s.push(`${d}[${h}][${m}]`)}let i=e.name,o=e.getClassName(),l=s.length===0?"":s[0],c=[`${i} (${o})`,r,e.countParams().toString(),l];rm(c,t,a);for(let u=1;u<s.length;++u)rm(["","","",s[u]],t,a)}function j1(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function qc(e,t){if(e===null)return null;if(typeof e=="string")return Di(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],a=e.length;for(let r=0;r<a;++r){let s=e[r];j1(t,r,s)?n.push(s):n.push(qc(s,t))}return n}else{let n={};for(let a of Object.keys(e)){let r=e[a];if(a==="name"&&typeof r=="string")n[a]=r;else{let s=Di(a);n[s]=qc(r,s)}}return n}}function zb(e,t){if(e==null)return null;if(typeof e=="string")return vr(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],a=e.length;for(let r=0;r<a;++r){let s=e[r];j1(t,r,s)?n.push(s):n.push(zb(s,t))}return n}else{let n={};for(let a of Object.keys(e)){let r=e[a],s=vr(a);(a==="name"||a==="className")&&typeof r=="string"?n[s]=r:n[s]=zb(r,a)}return n}}var sm="3.3.0";function GW(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return ue(t,e.dtype)}catch(n){throw new B(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var Li=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Li)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=GW(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new B(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Aa){if(this.id2Value[e.id]==null)throw new B(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new B(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Aa){if(this.id2Value[e.id]==null)throw new B(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new B(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Ae(this.id2Mask)}},Wb={},q1={};function Kc(e,t,n,a){let r=n==null?!1:n.training,s=Array.isArray(e),i=s?e:[e],o=i.map(m=>m.name),l=[],c=t.names();for(let m of o)c.indexOf(m)!==-1?l.push(t.getValue(m)):l.push(null);a!=null&&(a.maxNumTensors=-Infinity,a.minNumTensors=Infinity);let u=o.join(",")+"|"+t.names().join(","),p,d;if(Wb[u]==null){let m=HW(i,t);p=m.sorted,d=m.recipientCounts,Wb[u]=p,q1[u]=d}p=Wb[u],d={},r||Object.assign(d,q1[u]);let h=new Li(t);for(let m=0;m<p.length;++m){if(a!=null){let A=Yd().numTensors;A>a.maxNumTensors&&(a.maxNumTensors=A),A<a.minNumTensors&&(a.minNumTensors=A)}let f=p[m],g=f.sourceLayer;if(g instanceof jl)continue;let y=[],b=[],x=[],v=!1;for(let A of f.inputs){let R=h.getValue(A),P=h.getMask(A);y.push(R),b.push(P),P!=null&&(v=!0),r||(d[A.name]--,d[A.name]===0&&!t.hasKey(A)&&o.indexOf(A.name)===-1&&!R.isDisposed&&A.sourceLayer.stateful!==!0&&x.push(R))}v&&(n=n||{},n.mask=b[0]);let T=ft(g.apply(y,n)),k=null;g.supportsMasking&&(k=g.computeMask(y,b));let S=jW(f),F=Array.isArray(S)?S:[S];for(let A=0;A<F.length;++A){h.hasKey(F[A])||h.add(F[A],T[A],Array.isArray(k)?k[0]:k);let R=o.indexOf(F[A].name);R!==-1&&(l[R]=T[A])}r||Ae(x)}return h.disposeMasks(),s?l:l[0]}function HW(e,t){w.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],a={};if(e.length===1){let r=K1(e[0],t);n=r.sorted,a=r.recipientMap}else{let r=new Set;for(let s of e){let{sorted:i,recipientMap:o}=K1(s,t);for(let l of i)r.has(l.name)||(n.push(l),r.add(l.name));for(let l in o)a[l]==null&&(a[l]=new Set),o[l].forEach(c=>a[l].add(c))}}return{sorted:n,recipientCounts:qW(a)}}function qW(e){let t={};for(let n in e)t[n]=e[n].size;return t}function K1(e,t){let n=new Set,a=[],r={};for(let o of t.names())n.add(o);let s=[],i=[];for(s.push(e);s.length>0;){let o=s[s.length-1];if(n.has(o.name)){s.pop();continue}let l=i[i.length-1]===s.length-1;if(o.inputs.length===0||l)s.pop(),a.push(o),n.add(o.name),l&&i.pop();else{i.push(s.length-1);for(let c of o.inputs)r[c.name]==null&&(r[c.name]=new Set),r[c.name].add(o.name),!n.has(c.name)&&s.push(c)}}return{sorted:a,recipientMap:r}}function jW(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let a=0;a<e.sourceLayer.inboundNodes.length;++a)for(let r of e.sourceLayer.inboundNodes[a].outputTensors)if(r.id===e.id){n=a;break}t=e.sourceLayer.getOutputAt(n)}return t}var tr=class extends je{constructor(e){super({});if(this.containerNodes=new Set,this.name=e.name,this.name==null){let y=this.getClassName().toLowerCase();this.name=qh(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],as(this.inputs).length!==this.inputs.length)throw new B(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);as(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let b=y.sourceLayer,x=y.nodeIndex,v=y.tensorIndex;this.outputLayers.push(b),this.outputLayersNodeIndices.push(x),this.outputLayersTensorIndices.push(v)}for(let y of this.inputs){let b=y.sourceLayer,x=y.nodeIndex,v=y.tensorIndex;Ja(x===0,"input layer has >1 nodes"),Ja(v===0,"input layer has >1 tensors"),this.inputLayers.push(b),this.inputLayersNodeIndices.push(x),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let b=this.inputLayers[y];if(!(b instanceof jl))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${b.getClassName()}.`);this.inputNames.push(b.name),this.feedInputShapes.push(b.batchInputShape),this.feedInputNames.push(b.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let t={},n={},a={},r={},s={},i=[],o=(y,b,x,v,T,k)=>{(v==null||T==null||k==null)&&(v=y.sourceLayer,T=y.nodeIndex,k=y.tensorIndex);let S=v.inboundNodes[T];if(x.indexOf(S)!==-1)throw new Ea(`The tensor ${y.name} at layer "${v.name}" is part of a cycle.`);if(b.indexOf(S)!==-1)return;this.containerNodes.add(tr.nodeKey(v,T)),v.id in s||(s[v.id]=Object.keys(s).length),x.indexOf(S)===-1&&x.push(S);let F=S.inboundLayers.length;for(let A=0;A<F;A++){let R=S.inputTensors[A],P=S.inboundLayers[A],z=S.nodeIndices[A],V=S.tensorIndices[A];o(R,b,x,P,z,V)}for(b.push(S);x.indexOf(S)>=0;)x.splice(x.indexOf(S),1);i.push(S)},l=[],c=[];for(let y of this.outputs)o(y,l,c);let u=i.slice().reverse();for(let y of u){n[y.id]=y,y.id in t||(t[y.id]=0);let b=t[y.id],x=a[y.outboundLayer.id]==null?0:a[y.outboundLayer.id];b=Math.max(b,x),a[y.outboundLayer.id]=b,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=b;for(let v=0;v<y.inboundLayers.length;v++){let T=y.inboundLayers[v],k=y.nodeIndices[v],S=T.inboundNodes[k],F=t[S.id]==null?0:t[S.id];t[S.id]=Math.max(b+1,F),n[S.id]=S}}let p={};for(let y in t){let b=t[y];b in p||(p[b]=[]),p[b].push(n[y])}let d={};for(let y in a){let b=a[y];b in d||(d[b]=[]),d[b].push(r[y])}let h=Object.keys(d).map(y=>parseInt(y,10)).sort(Ph);this.layers=[];for(let y of h){let b=d[y];b.sort((x,v)=>{let T=s[x.id],k=s[v.id];return T<k?-1:T>k?1:0});for(let x of b)x instanceof tr&&this.internalContainerRefs.push(x),this.layers.push(x)}this.layersByDepth=d,h=Object.keys(p).map(y=>parseInt(y,10)).sort(Ph);let m=this.inputs.slice(),f=[];for(let y of h)for(let b of p[y]){let x=b.outboundLayer;if(x!=null){for(let v of b.inputTensors)if(m.indexOf(v)===-1)throw new Ea(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${x.name}". The following previous layers were accessed without issue: ${f}`);for(let v of b.outputTensors)m.push(v);f.push(x.name)}}this.nodesByDepth=p;let g=this.layers.map(y=>y.name);for(let y of g){let b=g.filter(x=>x===y).length;if(b!==1)throw new Ea(`The name "${y}" is used ${b} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Yh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new B("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},a=0;for(let s of this.layers)for(let i of s.weights){if(n[i.originalName]!=null)throw new B(`Duplicate weight name: ${i.originalName}`);n[i.originalName]=i,a++}let r=[];for(let s in e){let i=s;if(n[s]==null){let o=s.split("/");i=o.slice(0,-2).concat([o[o.length-1]]).join("/")}if(n[i]!=null)r.push([n[i],e[s]]);else if(t)throw new B(`Provided weight data has no target variable: ${s}`);delete n[i]}if(t){let s=[];for(let i in n)s.push(i);if(s.length>0)throw new B(`${s.length} of ${a} weights are not set: ${s}`)}$b(r)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${sm}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=zb(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return D(()=>{e=ft(e);let n=new Li;for(let a=0;a<this.inputs.length;++a)n.add(this.inputs[a],e[a]);return Kc(this.outputs,n,t)})}computeMask(e,t){return D(()=>{e=ft(e);let n;return t==null?n=$i(null,e.length):n=ft(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=Kh(e);if(t.length!==this.inputLayers.length)throw new B(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let o=this.inputLayers[i],l=t[i],c=o.name+"_0_0";n[c]=l}let a=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Ph);if(a.length>1)for(let i of a){let o=this.nodesByDepth[i];for(let l of o){let c=l.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(c.id)!==-1)continue;let u=[];for(let m=0;m<l.inboundLayers.length;m++){let f=l.inboundLayers[m],g=l.nodeIndices[m],y=l.tensorIndices[m],b=`${f.name}_${g}_${y}`,x=n[b];u.push(x)}let p=c.computeOutputShape(_n(u)),d=Kh(p),h=c.inboundNodes.indexOf(l);for(let m=0;m<d.length;m++){let f=`${c.name}_${h}_${m}`;n[f]=d[m]}}}let r=[],s=[];for(let i=0;i<this.outputLayers.length;i++){let o=this.outputLayers[i],l=this.outputLayersNodeIndices[i],c=this.outputLayersTensorIndices[i],u=`${o.name}_${l}_${c}`;s.push(u)}for(let i=0;i<s.length;i++){let o=s[i];Ja(o in n),r.push(n[o])}return _n(r)}runInternalGraph(e,t){t==null&&(t=$i(null,e.length));let n={};for(let o=0;o<this.inputs.length;++o){let l=this.inputs[o],c=e[o],u=t[o];n[l.id]=[c,u]}let a=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(Ph);for(let o of a){let l=this.nodesByDepth[o];for(let c of l){let u=c.outboundLayer,p=c.inputTensors,d=c.outputTensors,h=new Array;for(let m of p)m.id in n&&h.push(n[m.id]);if(h.length===p.length){let m={},f,g,y,b;if(c.callArgs!=null&&(m=c.callArgs),h.length===1){let[x,v]=h[0];m.mask==null&&(m.mask=v),y=ft(u.call(x,m)),b=ft(u.computeMask(x,v)),f=[x],g=[v]}else f=h.map(x=>x[0]),g=h.map(x=>x[1]),m.mask==null&&(m.mask=g),y=ft(u.call(f,m)),b=ft(u.computeMask(f,g));if(u.activityRegularizer)throw new $e("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let x=0;x<d.length;++x){let v=d[x],T=y[x],k=b[x];n[v.id]=[T,k]}}}}let r=[],s=[],i=[];for(let o of this.outputs){Ja(o.id in n,`Could not compute output ${o.name} : ${o.id}`);let[l,c]=n[o.id];i.push(l.shape),r.push(l),s.push(c)}return[r,s,i]}buildNodeConversionMap(e){let t={},n;for(let a of this.layers){n=a instanceof tr?1:0;for(let r=0;r<a.inboundNodes.length;r++){let s=tr.nodeKey(a,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new B(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new B("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new B(`No such layer: ${e}`)}calculateLosses(){return D(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let a=tr.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let s of this.layers){let i=s.getClassName(),o=s.getConfig(),l=[];for(let u=0;u<s.inboundNodes.length;u++){let p=s.inboundNodes[u],d=tr.nodeKey(s,u),h={};if(this.containerNodes.has(d)){if(p.callArgs)try{JSON.stringify(p.callArgs),h=p.callArgs}catch(m){console.warn(`Layer ${s.name} was passed non-serializable keyword arguments: ${p.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(p.inboundLayers.length>0){let m=[];for(let f=0;f<p.inboundLayers.length;f++){let g=p.inboundLayers[f],y=p.nodeIndices[f],b=p.tensorIndices[f],x=tr.nodeKey(g,y),v=t[x];v==null&&(v=0),m.push([g.name,v,b,h])}l.push(m)}}}let c={};c.name=s.name,c.className=i,c.config=o,c.inboundNodes=l,n.push(c)}e.layers=n;let a=[];for(let s=0;s<this.inputLayers.length;s++){let i=this.inputLayers[s],o=this.inputLayersNodeIndices[s],l=tr.nodeKey(i,o);if(!this.containerNodes.has(l))continue;let c=t[l];c==null&&(c=0);let u=this.inputLayersTensorIndices[s];a.push([i.name,c,u])}e.inputLayers=a;let r=[];for(let s=0;s<this.outputLayers.length;s++){let i=this.outputLayers[s],o=this.outputLayersNodeIndices[s],l=tr.nodeKey(i,o);if(!this.containerNodes.has(l))continue;let c=t[l];c==null&&(c=0);let u=this.outputLayersTensorIndices[s];r.push([i.name,c,u])}return e.outputLayers=r,e}static fromConfig(e,t,n={},a=!1){let r={},s={};function i(f,g){f.name in s?s[f.name].push(g):s[f.name]=[g]}function o(f,g){let y=[],b;for(let x of g){let v=x[0],T=x[1],k=x[2];if(b=x[3]==null?{}:x[3],!(v in r)){i(f,g);return}let S=r[v];if(S.inboundNodes.length<=T){i(f,g);return}let F=S.inboundNodes[T];y.push(F.outputTensors[k])}y.length>0&&f.apply(_n(y),b)}function l(f){let g=f.name,y=$a(f,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(a),r[g]=y,f.inboundNodes.forEach(b=>{if(!(b instanceof Array))throw new B(`Corrupted configuration, expected array for nodeData: ${b}`);i(y,b)})}let c=t.name,u=t.layers;for(let f of u)l(f);for(;!x3(s);)for(let f of u){let g=r[f.name];if(g.name in s){let y=s[g.name];delete s[g.name];for(let b of y)o(g,b)}}let p=[],d=[],h=t.inputLayers;for(let f of h){let g=f[0],y=f[1],b=f[2];Ja(g in r);let x=r[g].inboundNodes[y].outputTensors;p.push(x[b])}let m=t.outputLayers;for(let f of m){let g=f[0],y=f[1],b=f[2];Ja(g in r);let x=r[g].inboundNodes[y].outputTensors;d.push(x[b])}return new e({inputs:p,outputs:d,name:c})}get stateful(){if(this._stateful)throw new B("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){D(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function KW(e,t,n){let a=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>null);if(a===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${a} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let r=[];return t.forEach(s=>{s in e?r.push(e[s]):r.push(null)}),r}else throw new Error(`The model has multiple (${a}) outputs, so ${n} must be either an array with ${a} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function X1(e,t){return KW(e,t,"classWeight")}async function Y1(e,t,n,a){if(t!=null||a!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let r=D(()=>{if(e.shape.length===1)return e.clone();if(e.shape.length===2)if(e.shape[1]>1){let o=1;return e.argMax(o)}else{if(e.shape[1]===1)return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await r.data());Ae(r);let i=[];return s.forEach(o=>{if(n[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(n[o])}),Qe(i,"float32")}else return null}function XW(e,t){return W(e,t)}var YW=32;function Q1(e,t){let n,a,r=t;n=r.xs,a=r.ys,w.assert(n!=null&&a!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=J1("input",e.inputNames,n),i=J1("output",e.outputNames,a),o=s[0].shape[0];w.assert(s.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),w.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<s.length;l++)w.assert(s[l].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${s[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let l=0;l<i.length;l++)w.assert(i[l].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:s,ys:i}}function J1(e,t,n){if(n instanceof Ee)return[n];if(Array.isArray(n))return w.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let a=[];for(let r of t){if(n[r]==null)throw new B(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);a.push(n[r])}return a}}function JW(e){if(e.length===3)throw new $e("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function ZW(e,t,n){let a=n.batchesPerEpoch!=null;if(w.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),w.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),w.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),w.assert(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),w.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let r=n.validationData!=null,s,i;if(r)if(Z1(n.validationData))w.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=JW(n.validationData);s=g.xs,i=g.ys}let o=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),c;r?c=l.slice().concat(l.map(g=>"val_"+g)):c=l.slice();let u=O1(n.callbacks,n.yieldEvery),p=n.verbose==null?1:n.verbose,{callbackList:d,history:h}=L1(u,p,n.epochs,null,null,QW(t,n),null,r,c);d.setModel(e),e.history=h,await d.onTrainBegin(),e.stopTraining_=!1;let m=n.initialEpoch==null?0:n.initialEpoch,f=await t.iterator();for(;m<n.epochs;){let g={};await d.onEpochBegin(m);let y=0,b=0;for(a||(f=await t.iterator());a?y<n.batchesPerEpoch:!0;){let x=await f.next();if(a&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:v,ys:T}=Q1(e,x.value),k={};k.batch=b,k.size=v[0].shape[0],await d.onBatchBegin(b,k);let S=[];if(n.classWeight!=null){let R=X1(n.classWeight,e.outputNames);for(let P=0;P<R.length;++P)S.push(await Y1(T[P],null,R[P]))}let F=v.concat(T).concat(S),A=o(F);Ae(F);for(let R=0;R<l.length;++R){let P=l[R],z=A[R];k[P]=z,qt(z)}await d.onBatchEnd(b,k),$1(k),b++,y++}if(a?y>=n.batchesPerEpoch:x.done){if(r){let v;Z1(n.validationData)?v=ft(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):v=ft(e.evaluate(s,i,{batchSize:n.validationBatchSize==null?YW:n.validationBatchSize,verbose:0}));for(let T=0;T<e.metricsNames.length;++T)g[`val_${e.metricsNames[T]}`]=v[T]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(m,g),m++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function QW(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function Z1(e){return typeof e.iterator=="function"}function eB(e){return typeof e.next=="function"}async function tB(e,t,n){n=n||{};let a=n.batches!=null,r=e.testFunction,s=[];if(n.verbose>0)throw new $e("Verbose mode is not implemented yet.");w.assert(!a||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let i=eB(t)?t:await t.iterator(),o=0,l=0;for(;a?l<n.batches:!0;){let c=await i.next();if(s=D(()=>{if(c.value){let{xs:u,ys:p}=Q1(e,c.value),d=u.concat(p),h=D(()=>r(d));if(Ae(d),l===0)for(let f=0;f<h.length;++f)s.push(ve(0));let m=d[0].shape[0];for(let f=0;f<h.length;++f){let g=h[f],y=s[f];s[f]=D(()=>J(s[f],W(m,g))),l>0&&Ae(y)}Ae(h),o+=m,++l}return s}),c.done){a&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<s.length;++c){let u=s[c];s[c]=ye(s[c],o),Ae(u)}return _n(s)}function Bb(e){w.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function Xc(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(a=>Pi(a,t,n-t)):Pi(e,t,n-t)}function Vb(e,t){return D(()=>e==null?null:Array.isArray(e)?e.map(n=>Vb(n,t)):y1(e,t.dtype==="int32"?t:t.toInt()))}function Ub(e,t){let n=[],a=0,r=null;for(;a<e;)r=a+t,r>=e&&(r=e),n.push([a,r]),a=r;return n}async function nB(e,t,n,a,r,s,i,o,l,c,u,p,d,h,m){r==null&&(r=32),s==null&&(s=1),u==null&&(u=!0),d==null&&(d=0);let f=!1;if(l!=null&&c!=null&&(f=!0),m!=null&&(f=!0,h==null))throw new B("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,r,h,"steps_per_epoch"),y;g!=null&&(y=Fa(0,g)),i==null&&(i=1);let{callbackList:b,history:x}=L1(o,i,s,d,g,h,r,f,p);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let v=d;v<s;++v){await b.onEpochBegin(v);let T={};if(h!=null)throw new $e("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new $e("batch shuffling is not implemneted yet");u&&w.shuffle(y);let k=Qe(y),S=Ub(g,r);for(let F=0;F<S.length;++F){let A={};if(await b.onBatchBegin(F,A),D(()=>{let R=S[F][0],P=S[F][1],z=Pi(k,R,P-R);A.batch=F,A.size=P-R;let V=Vb(n,z),G=t(V);for(let H=0;H<a.length;++H){let K=a[H],j=G[H];A[K]=j,qt(j)}if(F===S.length-1&&f){let H=e.testLoop(l,c,r);for(let K=0;K<a.length;++K){let j=a[K],te=H[K];qt(te),T["val_"+j]=te}}}),await b.onBatchEnd(F,A),$1(A),e.stopTraining_)break}k.dispose()}if(await b.onEpochEnd(v,T),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}async function aB(e,t,n,a={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let r,s,i,o,l,c,u;try{let p=a.batchSize==null?32:a.batchSize;Bb(p);let d=!1,h=await e.standardizeUserData(t,n,a.sampleWeight,a.classWeight,d,p);r=h[0],s=h[1],u=h[2];let m=!1,f;if(a.validationData!=null&&a.validationData.length>0){if(m=!0,a.validationData.length===2)i=a.validationData[0],o=a.validationData[1];else throw a.validationData.length===3?new $e("validationData including sample weights is not supported yet."):new B(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${a.validationData} is invalid.`);let k=!0,S=await e.standardizeUserData(i,o,null,null,k,p);l=S[0],c=S[1],f=l.concat(c)}else if(a.validationSplit!=null&&a.validationSplit>0&&a.validationSplit<1){m=!0;let k=Math.floor(r[0].shape[0]*(1-a.validationSplit)),S=r[0].shape[0];l=Xc(r,k,S),r=Xc(r,0,k),c=Xc(s,k,S),s=Xc(s,0,k),f=l.concat(c)}else a.validationSteps!=null&&(m=!0);let g=r.concat(s).concat(u);e.checkTrainableWeightsConsistency();let y=e.makeTrainFunction(),b=e.getDedupedMetricsNames(),x,v;m?(e.makeTestFunction(),x=e.testFunction,v=b.slice().concat(b.map(k=>"val_"+k))):(x=null,f=[],v=b.slice());let T=O1(a.callbacks,a.yieldEvery);return await nB(e,y,g,b,p,a.epochs,a.verbose,T,x,f,a.shuffle,v,a.initialEpoch,null,null)}finally{e.isTraining=!1,zi(r,t),zi(s,n),zi(l,i),zi(c,o),u!=null&&Ae(u)}}function eI(e){let t=[];e instanceof Ee&&(e=[e]);for(let n=0;n<e.length;++n){let a=e[n];if(a.rank===1)t.push(Vc(a,1));else{if(a.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function zi(e,t){if(e==null)return;let n=[];if(t instanceof Ee)n.push(t.id);else if(Array.isArray(t))t.forEach(r=>n.push(r.id));else if(t!=null)for(let r in t){let s=t[r];n.push(s.id)}let a=[];if(e instanceof Ee)n.indexOf(e.id)===-1&&a.push(e);else if(Array.isArray(e))e.forEach(r=>{n.indexOf(r.id)===-1&&a.push(r)});else if(e!=null)for(let r in e){let s=e[r];n.indexOf(s.id)===-1&&a.push(s)}a.forEach(r=>{r.isDisposed||r.dispose()})}function rB(e){return e instanceof Ee}function Gb(e){return Array.isArray(e)}function tI(e){return!rB(e)&&!Gb(e)}function nI(e,t,n,a=!0,r=""){if(t==null||t.length===0){if(e!=null){let i=!1;if(Gb(e)&&e.length>0)i=!0;else if(tI(e)){for(let o in e)if(e.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new B(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(i=>null);let s;if(tI(e)){e=e,s=[];for(let i of t){if(e[i]==null)throw new B(`No data provided for "${i}". Need data for each key in: ${t}`);s.push(e[i])}}else if(Gb(e)){if(e=e,e.length!==t.length)throw new B(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new B(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=eI(s),n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=s[i];if(o.shape.length!==n[i].length)throw new B(`Error when checking ${r}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<n[i].length;++l){if(l===0&&!a)continue;let c=o.shape[l],u=n[i][l];if(u!=null&&u>=0&&c!==u)throw new B(`Error when checking ${r}: expected ${t[i]} to have shape [${n[i]}], but got array with shape [${o.shape}].`)}}return s}function sB(e,t,n){let a=as(e.map(s=>s.shape[0]));a.sort();let r=as(t.map(s=>s.shape[0]));if(r.sort(),a.length>1)throw new B(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(r.length>1)throw new B(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(a.length>0&&r.length>0&&!w.arraysEqual(a,r))throw new B(`Input Tensors should have the same number of samples as target Tensors. Found ${a[0]} input sample(s) and ${r[0]} target sample(s).`)}function iB(e,t,n){let a=[Oi,em,jc];for(let r=0;r<e.length;++r){let s=e[r],i=t[r],o=n[r];if(i!=null){if(i===jc&&s.shape[s.shape.length-1]===1)throw new B(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(a.indexOf(i)!==-1){let l=s.shape.slice(1),c=o.slice(1);for(let u=0;u<l.length;++u){let p=l[u],d=c[u];if(d!=null&&p!==d)throw new B(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function aI(e,t,n,a=!0,r=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new B(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new B(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=s[i];if(o.shape.length!==n[i].length)throw new B(`Error when checking ${r}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<n[i].length;++l){if(l===0&&!a)continue;let c=o.shape[l],u=n[i][l];if(u!=null&&u!==c)throw new B(`Error when checking ${r}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function oB(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(a=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(a=>n);{let a=[];for(let r of t){let s=n.hasOwnProperty(r)?n[r]:[];Array.isArray(s)||(s=[s]),a.push(s)}return a}}var lB="layers-model",wr=class extends tr{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new B("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");UW(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=LW(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof br))throw new B("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let s in e.loss)if(this.outputNames.indexOf(s)===-1)throw new B(`Unknown entry in loss dictionary: "${s}". Only expected the following keys: ${this.outputNames}`);for(let s of this.outputNames)e.loss[s]==null&&console.warn(`Output "${s}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${s} during training`),t.push(Rb(e.loss[s]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new B(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(s=>Rb(s))}else{let s=Rb(e.loss);this.outputs.forEach(i=>{t.push(s)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){let i=this.internalOutputShapes[s],o=this.outputNames[s];this.feedOutputNames.push(o),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[s])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Mi("loss",()=>{for(let s=0;s<this.outputs.length;++s){if(n.indexOf(s)!==-1)continue;let i=this.lossFunctions[s];this.outputs.length>1&&(this.metricsTensors.push([i,s]),this.metricsNames.push(this.outputNames[s]+"_loss"))}});let a=oB(e.metrics,this.outputNames),r=(s,i,o)=>{this.outputNames.length>1&&(i=this.outputNames[s]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([o,s])};Mi("metric",()=>{for(let s=0;s<this.outputs.length;++s){if(n.indexOf(s)!==-1)continue;let i=a[s];(o=>{let l="",c,u,p;for(let d of o){if(typeof d=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(d)!==-1){let m=this.internalOutputShapes[s];m[m.length-1]===1||this.lossFunctions[s]===em?["accuracy","acc"].indexOf(d)!==-1?u=Mb:["crossentropy","ce"].indexOf(d)!==-1&&(u=B1):this.lossFunctions[s]===Zh?["accuracy","acc"].indexOf(d)!==-1?u=V1:["crossentropy","ce"].indexOf(d)!==-1&&(u=U1):["accuracy","acc"].indexOf(d)!==-1?u=Pb:["crossentropy","ce"].indexOf(d)!==-1&&(u=Ob);let f;["accuracy","acc"].indexOf(d)!==-1?f="acc":["crossentropy","ce"].indexOf(d)!==-1&&(f="ce"),p=u,c=l+f}else p=OW(d),c=l+am(d);let h;Mi(c,()=>{h=p}),r(s,c,h)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let a=n.batchSize==null?32:n.batchSize;Bb(a);let r=!0,s=this.standardizeUserDataXY(e,t,r,a);try{let i=s[0].concat(s[1]);this.makeTestFunction();let o=this.testFunction,l=this.testLoop(o,i,a,n.verbose,n.steps);return _n(l)}finally{zi(s[0],e),zi(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),tB(this,e,t)}checkNumSamples(e,t,n,a="steps"){let r;if(n!=null){if(r=null,t!=null)throw new B(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new B(`Either the input data should have a defined shape, or ${a} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new B("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),a=n?t:[t],r=this.retrieveSymbolicTensors(a),s=new Li;if(e instanceof Ee&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new B(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let o=0;o<this.inputs.length;++o)s.add(this.inputs[o],e[o])}else for(let o of this.inputs){let l=e[o.name];if(l==null)throw new B(`No value is provided for the model's input ${o.name}`);s.add(o,l)}let i=Kc(r,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=$i(null,e.length),n=e.length;for(let a of this.layers){let r=Array.isArray(a.output)?a.output:[a.output],s=r.map(i=>i.name);for(let i=0;i<e.length;++i){let o=s.indexOf(e[i]);if(o!==-1&&(t[i]=r[o],n--),n===0)break}if(n===0)break}if(n>0){let a=[];throw t.forEach((r,s)=>{r==null&&a.push(e[s])}),new B(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(a)}`)}return t}predictLoop(e,t=32,n=!1){return D(()=>{let a=this.checkNumSamples(e);if(n)throw new $e("Verbose predictLoop() is not implemented yet.");let r=Ub(a,t),s=this.outputs.map(i=>[]);for(let i=0;i<r.length;++i)D(()=>{let o=r[i][0],l=r[i][1],c=Xc(e,o,l),u=[];if(Array.isArray(c))for(let d=0;d<c.length;++d)u.push({key:this.inputs[d],value:c[d]});else u.push({key:this.inputs[0],value:c});let p=new Li(u);return Kc(this.outputs,p)}).forEach((o,l)=>s[l].push(o));return _n(s.map(i=>Je(i,0)))})}predict(e,t={}){let n=eI(e);aI(n,this.inputNames,this.feedInputShapes,!1);try{let a=t.batchSize==null?32:t.batchSize;return Bb(a),this.predictLoop(n,a)}finally{zi(n,e)}}predictOnBatch(e){aI(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,a){if(this.optimizer_==null)throw new Ea("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let s=0;s<this.feedOutputShapes.length;++s){let i=this.feedOutputShapes[s];this.feedLossFns[s]===Zh?r.push(i.slice(0,i.length-1).concat([1])):r.push(i)}if(e=nI(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=nI(t,this.feedOutputNames,r,!1,"target"),sB(e,t,null),iB(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&a!=null&&a>0&&e[0].shape[0]%a!=0)throw new B(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,a,r=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,r,s);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(a!=null){let c=X1(a,this.outputNames);l=[];for(let u=0;u<c.length;++u)l.push(await Y1(o[u],null,c[u]))}return[i,o,l]}testLoop(e,t,n,a=0,r){return D(()=>{let s=this.checkNumSamples(t,n,r,"steps"),i=[];if(a>0)throw new $e("Verbose mode is not implemented yet.");if(r!=null)throw new $e("steps mode in testLoop() is not implemented yet");{let o=Ub(s,n),l=Qe(Fa(0,s));for(let c=0;c<o.length;++c){let u=o[c][0],p=o[c][1],d=Pi(l,u,p-u),h=Vb(t,d),m=e(h);if(c===0)for(let f=0;f<m.length;++f)i.push(ve(0));for(let f=0;f<m.length;++f){let g=m[f];i[f]=J(i[f],W(p-u,g))}}for(let c=0;c<i.length;++c)i[c]=ye(i[c],s)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let a=e[n],r=a;r1(e,a)>1&&(r+=`_${r1(e.slice(0,n),a)}`),t.push(r)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),s=[],i=()=>{let c=[];for(let h=0;h<this.inputs.length;++h)c.push({key:this.inputs[h],value:n[h]});let u=new Li(c),p=Kc(this.outputs,u,{training:!0}),d;for(let h=0;h<this.lossFunctions.length;++h){let m=this.lossFunctions[h](a[h],p[h]);r[h]!=null&&(m=XW(m,r[h]));let f=Ct(m);t.push(f),h===0?d=m:d=J(d,m)}for(let h=0;h<this.metricsTensors.length;++h){let m;if(this.outputs.length>1&&h<this.outputs.length)m=t[h];else{let f=this.metricsTensors[h][0],g=this.metricsTensors[h][1];m=Ct(f(a[g],p[g]))}qt(m),s.push(m)}return d=Ct(d),this.calculateLosses().forEach(h=>{d=J(d,h)}),d},o=this.collectedTrainableWeights.map(c=>c.read()),l=!0;return[this.optimizer_.minimize(i,l,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>D(()=>{let t=[],n,a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let l=0;l<this.inputs.length;++l)s.push({key:this.inputs[l],value:a[l]});let i=new Li(s),o=Kc(this.outputs,i);for(let l=0;l<this.lossFunctions.length;++l){let c=this.lossFunctions[l],u=Ct(c(r[l],o[l]));l===0?n=u:n=J(n,u),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let c=this.metricsTensors[l][0],u=this.metricsTensors[l][1],p=Ct(c(r[u],o[u]));t.push(p)}return t})}async fit(e,t,n={}){return aB(this,e,t,n)}async fitDataset(e,t){return ZW(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),a=n[0],r=n[1],s=this.makeTrainFunction()(a.concat(r)),i=[];for(let o of s){let l=await o.data();i.push(l[0])}return Ae(s),_n(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let s=0;s<a.length;++s)n&&!a[s].trainable||t.push({name:a[s].originalName,tensor:r[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=Yd().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Yd().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=vr(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>vr(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let a of t)if(typeof n[a]=="string")e[a]=vr(n[a]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[vr(am(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>vr(am(e)));{let e={};for(let t in this.metrics)e[t]=vr(am(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=qc(e.optimizer_config),n=$a(t),a;if(typeof e.loss=="string")a=Di(e.loss);else if(Array.isArray(e.loss))a=e.loss.map(s=>Di(s));else if(e.loss!=null){a={};for(let s in e.loss)a[s]=Di(e.loss[s])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(s=>Di(s));else if(e.metrics!=null){r={};for(let s in e.metrics)r[s]=Di(e.metrics[s])}this.compile({loss:a,metrics:r,optimizer:n})}async save(e,t){if(typeof e=="string"){let i=jt.getSaveHandlers(e);if(i.length===0)throw new B(`Cannot find any save handlers for URL '${e}'`);if(i.length>1)throw new B(`Found more than one (${i.length}) save handlers for URL '${e}'`);e=i[0]}if(e.save==null)throw new B("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await jt.encodeWeights(this.getNamedWeights(t)),a=!1,r=null,s={modelTopology:this.toJSON(r,a),format:lB,generatedBy:`TensorFlow.js tfjs-layers v${sm}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){s.trainingConfig=this.getTrainingConfig();let i="optimizer",{data:o,specs:l}=await jt.encodeWeights(await this.optimizer.getWeights(),i);n.specs.push(...l),n.data=jt.concatenateArrayBuffers([n.data,o])}if(this.userDefinedMetadata!=null){let i=!0;H1(this.userDefinedMetadata,this.name,i),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=n.data,s.weightSpecs=n.specs,e.save(s)}setUserDefinedMetadata(e){H1(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};wr.className="Model";re.registerClass(wr);var rI=class extends wr{};rI.className="Functional";re.registerClass(rI);async function uB(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let a=qc(n),r=$a(a,t);if(e.weightsManifest!=null){let s=await jt.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(o=>o.originalName)),i={};for(let o of r.weights)i[o.originalName]=s[o.originalName];r.loadWeights(i),Ae(s)}return r}async function pB(e,t){if(t==null&&(t={}),typeof e=="string"){let n=jt.getLoadHandlers(e,t);if(n.length===0)n.push(jt.browserHTTPRequest(e,t));else if(n.length>1)throw new B(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return cB(e,void 0,t)}async function cB(e,t,n){if(n==null&&(n={}),e.load==null)throw new B("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let a=await e.load(),r=a.modelTopology;r.model_config!=null&&(r=r.model_config);let s=n.strict==null?!0:n.strict,i=a.weightData!=null&&a.weightSpecs!=null&&s,o=$a(qc(r),t,i),l=a.trainingConfig;if(l!=null&&o.loadTrainingConfig(l),a.userDefinedMetadata!=null&&o.setUserDefinedMetadata(a.userDefinedMetadata),a.weightData!=null){if(a.weightSpecs==null)throw new B("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:c,optimizerWeights:u}=dB(a.weightData,a.weightSpecs);o.loadWeights(c,s),o.optimizer!=null&&u.length>0&&await o.optimizer.setWeights(u),Ae(c),Ae(u.map(p=>p.tensor))}return o}function dB(e,t){let n=jt.decodeWeights(e,t),a={},r=[];return t.forEach(s=>{s.group==="optimizer"?r.push({name:s.name,tensor:n[s.name]}):a[s.name]=n[s.name]}),{modelWeights:a,optimizerWeights:r}}var Xl=class extends wr{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:qh("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new B(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof Xl||e instanceof wr,n;if(t){if(n=e,n.outputs.length!==1)throw new B("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new B("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new B("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let a=A1({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(a)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new B(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new B("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=F1(this.outputs[0])}this.inboundNodes=[],new Yh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:$i(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(a=>a.shape),outputShapes:this.outputs[0].shape})}else{let a=e.apply(this.outputs[0]);if(Array.isArray(a))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[a],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(ct(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new wr({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Ea("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Ea("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Ea("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Ea("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},a=!1){let r,s={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new B("Legacy serialization format not supported yet.");r=t}else w.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof Xl))throw new $e(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let o of r){let l=$a(o,void 0,a);a&&l.setFastWeightInitDuringBuild(!0),i.add(l)}return i}set stopTraining(e){if(this.model==null)throw new B("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new B("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};Xl.className="Sequential";re.registerClass(Xl);function hB(e){return new wr(e)}function mB(e){return new Xl(e)}function fB(e,t){return t==null&&(t={}),pB(e,t)}function k1(e){return A1(e)}function gB(e,t){fa.registerCallbackConstructor(e,t)}var Wn=class extends re.Serializable{getConfig(){return{}}},sI=class extends Wn{apply(e,t=1){return K3(e,t)}};sI.className="elu";re.registerClass(sI);var iI=class extends Wn{apply(e){return gh(e)}};iI.className="selu";re.registerClass(iI);var oI=class extends Wn{apply(e){return qe(e)}};oI.className="relu";re.registerClass(oI);var lI=class extends Wn{apply(e){return D(()=>Ll(6,qe(e)))}};lI.className="relu6";re.registerClass(lI);var uI=class extends Wn{apply(e){return e}};uI.className="linear";re.registerClass(uI);var cI=class extends Wn{apply(e){return ca(e)}};cI.className="sigmoid";re.registerClass(cI);var pI=class extends Wn{apply(e){return Y3(e)}};pI.className="hardSigmoid";re.registerClass(pI);var dI=class extends Wn{apply(e){return Pl(e)}};dI.className="softplus";re.registerClass(dI);var hI=class extends Wn{apply(e){return X3(e)}};hI.className="softsign";re.registerClass(hI);var mI=class extends Wn{apply(e){return Dl(e)}};mI.className="tanh";re.registerClass(mI);var Hb=class extends Wn{apply(e,t=-1){return Na(e,t)}};Hb.className="softmax";re.registerClass(Hb);var fI=class extends Wn{apply(e,t=-1){return uh(e,t)}};fI.className="logSoftmax";re.registerClass(fI);var gI=class extends Wn{apply(e,t=1){return D(()=>ca(e.mul(t)).mul(e))}};gI.className="swish";re.registerClass(gI);function os(e){return e.getClassName()}function jb(e,t={}){return Lc(e,re.SerializationMap.getMap().classNameMap,t,"activation")}function ls(e){if(e==null){let t={};return t.className="linear",t.config={},jb(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},jb(t)}else return e instanceof Wn?e:jb(e)}function qb(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var yI=class extends re.Serializable{},Yc=class extends yI{constructor(e){super();qb(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return D(()=>{let t=xt([1]);return this.hasL1&&(t=J(t,Se(W(this.l1,zt(e))))),this.hasL2&&(t=J(t,Se(W(this.l2,Uc(e))))),t.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Yc.className="L1L2";re.registerClass(Yc);function yB(e){return qb(e),new Yc({l1:e!=null?e.l1:null,l2:0})}function bB(e){return qb(e),new Yc({l2:e!=null?e.l2:null,l1:0})}var bI={l1l2:"L1L2"};function pt(e){return lb(e)}function xI(e,t={}){return Lc(e,re.SerializationMap.getMap().classNameMap,t,"regularizer")}function wt(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in bI?bI[e]:e,config:{}};return xI(t)}else return e instanceof yI?e:xI(e)}var Kb=class extends je{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Pe(e);let n=qe(e);return this.maxValue!=null&&(n=Kt(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Kb.className="ReLU";re.registerClass(Kb);var Xb=class extends je{constructor(e){super(e==null?{}:e);this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Pe(e);return Ec(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Xb.className="LeakyReLU";re.registerClass(Xb);var Yb=class extends je{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=vt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=wt(e.alphaRegularizer),this.alphaConstraint=Ut(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new B(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=ct(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let a of this.sharedAxes)t[a-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let a=1;a<e.length;++a)n[a]=e[a];this.inputSpec=[new Yt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Pe(e),$c(e,this.alpha.read())}getConfig(){let e={alphaInitializer:_t(this.alphaInitializer),alphaRegularizer:pt(this.alphaRegularizer),alphaConstraint:Vt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Yb.className="PReLU";re.registerClass(Yb);var Jb=class extends je{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new $e(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Pe(e);return Rl(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Jb.className="ELU";re.registerClass(Jb);var Qb=class extends je{constructor(e){super(e==null?{}:e);this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Pe(e);return n.mul(Bc(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Qb.className="ThresholdedReLU";re.registerClass(Qb);var Zb=class extends je{constructor(e){super(e==null?{}:e);this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new Hb().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Pe(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Zb.className="Softmax";re.registerClass(Zb);function Yl(e,t,n){if(typeof e=="number")return $i(e,t);if(e.length!==t)throw new B(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){let r=e[a];if(!G3(r))throw new B(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function Da(e,t,n,a,r=1){if(e==null)return e;let s=t+(t-1)*(r-1),i;return n==="same"?i=e:i=e-s+1,Math.floor((i+a-1)/a)}function im(e,t,n,a){if(e==null)return null;if(a==="valid")e=e*t+ss([n-t,0]);else if(a==="same")e=e*t;else throw new B(`Unsupport padding mode: ${a}.`);return e}function ex(e,t){return D(()=>(Rt(t),t==="channelsFirst"?Ve(e,[0,2,3,1]):e))}function vI(e,t){return D(()=>(Rt(t),t==="channelsFirst"?Ve(e,[0,2,3,4,1]):e))}function xB(e,t,n,a=1,r="valid",s,i=1){return D(()=>{if(s==null&&(s=_a()),Rt(s),e.shape.length!==3)throw new B(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new B(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new B(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(s==="channelsFirst"&&(e=Ve(e,[0,2,1])),r==="causal")throw new $e("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=th(e,t,a,r==="same"?"same":"valid","NWC",i);return n!=null&&(o=Za(o,n)),o})}function wI(e,t,n,a=[1,1],r="valid",s,i,o=null){return D(()=>{if(s==null&&(s=_a()),Rt(s),e.rank!==3&&e.rank!==4)throw new B(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new B(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=ex(e,s);if(r==="causal")throw new $e("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=ns.conv2d({x:l,filter:t,strides:a,pad:r==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),s==="channelsFirst"&&(l=Ve(l,[0,3,1,2])),l})}function vB(e,t,n,a=[1,1,1],r="valid",s,i){return D(()=>{if(s==null&&(s=_a()),Rt(s),e.rank!==4&&e.rank!==5)throw new B(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new B(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=vI(e,s);if(r==="causal")throw new $e("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Ay(o,t,a,r==="same"?"same":"valid","NDHWC",i),n!=null&&(o=Za(o,n)),s==="channelsFirst"&&(o=Ve(o,[0,4,1,2,3])),o})}var tx=class extends je{constructor(e,t){super(t);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",tx.verifyArgs(t),this.rank=e,Xt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new $e(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Yl(t.kernelSize,e,"kernelSize"),this.strides=Yl(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,ta(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Rt(this.dataFormat),this.activation=ls(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=vt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ut(t.biasConstraint),this.biasRegularizer=wt(t.biasRegularizer),this.activityRegularizer=wt(t.activityRegularizer),this.dilationRate=Yl(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new B(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new B(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new B(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Ja("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!cb(e.kernelSize,"number",1,3))throw new B(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:os(this.activation),useBias:this.useBias,biasInitializer:_t(this.biasInitializer),biasRegularizer:pt(this.biasRegularizer),activityRegularizer:pt(this.activityRegularizer),biasConstraint:Vt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Jc=class extends tx{constructor(e,t){super(e,t);this.kernel=null,Jc.verifyArgs(t),this.filters=t.filters,Xt(this.filters,"filters"),this.kernelInitializer=vt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ut(t.kernelConstraint),this.kernelRegularizer=wt(t.kernelRegularizer)}build(e){e=ct(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new B(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return D(()=>{e=Pe(e);let n,a=this.bias==null?null:this.bias.read(),r=i1(this.activation.getClassName());if(r!=null&&this.rank===2)n=wI(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=xB(e,this.kernel.read(),a,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=wI(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=vB(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new $e("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=ct(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){let s=Da(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(s)}let a=[e[0]];return this.dataFormat==="channelsLast"?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){let e={filters:this.filters,kernelInitializer:_t(this.kernelInitializer),kernelRegularizer:pt(this.kernelRegularizer),kernelConstraint:Vt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new B(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},Qc=class extends Jc{constructor(e){super(2,e);Qc.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!cb(e.kernelSize,"number",1,2))throw new B(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};Qc.className="Conv2D";re.registerClass(Qc);var om=class extends Jc{constructor(e){super(3,e);om.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new B(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};om.className="Conv3D";re.registerClass(om);var nx=class extends Qc{constructor(e){super(e);if(this.inputSpec=[new Yt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new B(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=ct(e),e.length!==4)throw new B("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new B("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Yt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return D(()=>{let n=Pe(e);if(n.shape.length!==4)throw new B(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let a=n.shape,r=a[0],s,i;this.dataFormat==="channelsFirst"?(s=2,i=3):(s=1,i=2);let o=a[s],l=a[i],c=this.kernelSize[0],u=this.kernelSize[1],p=this.strides[0],d=this.strides[1],h=im(o,p,c,this.padding),m=im(l,d,u,this.padding),f=[r,h,m,this.filters];this.dataFormat!=="channelsLast"&&(n=Ve(n,[0,2,3,1]));let g=nh(n,this.kernel.read(),f,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=Ve(g,[0,3,1,2])),this.bias!=null&&(g=Za(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=ct(e);let t=e.slice(),n,a,r;this.dataFormat==="channelsFirst"?(n=1,a=2,r=3):(n=3,a=1,r=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[a]=im(t[a],o,s,this.padding),t[r]=im(t[r],l,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};nx.className="Conv2DTranspose";re.registerClass(nx);var kI=class extends Jc{constructor(e,t){super(e,t);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new B("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new B("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new B(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=vt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=wt(t.depthwiseRegularizer),this.depthwiseConstraint=Ut(t.depthwiseConstraint),this.pointwiseInitializer=vt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=wt(t.pointwiseRegularizer),this.pointwiseConstraint=Ut(t.pointwiseConstraint)}build(e){if(e=ct(e),e.length<this.rank+2)throw new B(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new B(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let i=0;i<this.rank;++i)r.push(1);r.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Yt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return D(()=>{e=Pe(e);let n;if(this.rank===1)throw new $e("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Ve(e,[0,2,3,1])),n=Ei(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=Za(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Ve(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=_t(this.depthwiseInitializer),e.pointwiseInitializer=_t(this.pointwiseInitializer),e.depthwiseRegularizer=pt(this.depthwiseRegularizer),e.pointwiseRegularizer=pt(this.pointwiseRegularizer),e.depthwiseConstraint=Vt(this.depthwiseConstraint),e.pointwiseConstraint=Vt(this.pointwiseConstraint),e}};kI.className="SeparableConv";var ax=class extends kI{constructor(e){super(2,e)}};ax.className="SeparableConv2D";re.registerClass(ax);var lm=class extends Jc{constructor(e){super(1,e);lm.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!cb(e.kernelSize,"number",1,1))throw new B(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};lm.className="Conv1D";re.registerClass(lm);var rx=class extends je{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return D(()=>{if(e=Pe(e),this.dataFormat==="channelsLast"){let n=Oh(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Oh(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=Oh(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Oh(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};rx.className="Cropping2D";re.registerClass(rx);var sx=class extends je{constructor(e){super(e);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Rt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,B3(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return D(()=>{let n=Pe(e),a=n.shape;if(this.dataFormat==="channelsFirst"){n=Ve(n,[0,2,3,1]);let r=this.size[0]*a[2],s=this.size[1]*a[3],i=this.interpolation==="nearest"?n.resizeNearestNeighbor([r,s]):n.resizeBilinear([r,s]);return Ve(i,[0,3,1,2])}else{let r=this.size[0]*a[1],s=this.size[1]*a[2];return this.interpolation==="nearest"?n.resizeNearestNeighbor([r,s]):n.resizeBilinear([r,s])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};sx.className="UpSampling2D";re.registerClass(sx);function wB(e,t,n=[1,1],a="valid",r,s){return D(()=>{r==null&&(r=_a()),Rt(r);let i=ex(e,r);if(e.rank!==4)throw new B(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new B(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Qr(i,t,n,a==="same"?"same":"valid","NHWC",s),r==="channelsFirst"&&(i=Ve(i,[0,3,1,2])),i})}var ix=class extends tx{constructor(e){super(2,e);this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=vt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ut(e.depthwiseConstraint),this.depthwiseRegularizer=wt(e.depthwiseRegularizer)}build(e){if(e=ct(e),e.length<4)throw new B(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new B(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return D(()=>{e=Pe(e);let n=wB(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=Za(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=ct(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],a=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Da(t,this.kernelSize[0],this.padding,this.strides[0]),s=Da(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],a,r,s]:[e[0],r,s,a]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=_t(this.depthwiseInitializer),e.depthwiseRegularizer=pt(this.depthwiseRegularizer),e.depthwiseConstraint=Vt(this.depthwiseRegularizer),e}};ix.className="DepthwiseConv2D";re.registerClass(ix);function II(e,t,n,a){if(Array.isArray(e)){if(t!=null||n!=null)throw new B("When inputs is an array, neither initialState or constants should be provided");a!=null&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(s){return s==null||Array.isArray(s)?s:[s]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function TI(e,t,n,a=!1,r,s,i=!1,o=!1){return D(()=>{let l=t.shape.length;if(l<3)throw new B(`Input should be at least 3D, but is ${l}D.`);let c=[1,0].concat(Fa(2,l));if(t=Ve(t,c),s!=null)throw new $e("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=r.asType("bool").asType("float32"),r.rank===l-1&&(r=hn(r,-1)),r=Ve(r,c)),a&&(t=Ln(t,0),r!=null&&(r=Ln(r,0)));let u=[],p,d=n,h=t.shape[0],m=ut(t),f;r!=null&&(f=ut(r));for(let y=0;y<h;++y){let b=m[y],x=D(()=>e(b,d));if(r==null)p=x[0],d=x[1];else{let v=D(()=>{let T=f[y],k=On(T).sub(T),S=x[0].mul(T).add(d[0].mul(k)),F=d.map((A,R)=>x[1][R].mul(T).add(A.mul(k)));return{output:S,newStates:F}});p=v.output,d=v.newStates}o&&u.push(p)}let g;return o&&(g=Dt(u,1)),[p,g,d]})}var er=class extends je{constructor(e){super(e);let t;if(e.cell==null)throw new B("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new um({cells:e.cell}):t=e.cell,t.stateSize==null)throw new B("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Yt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Fa(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Fb(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],a;if(this.returnSequences?a=[e[0],e[1],n]:a=[e[0],n],this.returnState){let r=[];for(let s of t)r.push([e[0],s]);return[a].concat(r)}else return a}computeMask(e,t){return D(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let a=this.states.map(r=>null);return[n].concat(a)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){let t=null;if(this.numConstants!=null)throw new $e("Constants support is not implemented in RNN yet.");Fb(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,a=e.slice(2);this.inputSpec[0]=new Yt({shape:[n,null,...a]});let r=[e[0]].concat(e.slice(2));if(t!=null)throw new $e("Constants support is not implemented in RNN yet.");this.cell.build(r);let s;if(Array.isArray(this.cell.stateSize)?s=this.cell.stateSize:s=[this.cell.stateSize],this.stateSpec!=null){if(!w.arraysEqual(this.stateSpec.map(i=>i.shape[i.shape.length-1]),s))throw new B(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map(i=>new Yt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){D(()=>{if(!this.stateful)throw new xr("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new B("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>xt([n,a])):this.states_=[xt([n,this.cell.stateSize])];else if(e==null)Ae(this.states_),this.keptStates!=null&&(Ae(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>xt([n,a])):this.states_[0]=xt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new B(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Ae(this.states_);for(let a=0;a<this.states_.length;++a){let r=e[a],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[a]:this.cell.stateSize,i=[n,s];if(!w.arraysEqual(r.shape,i))throw new B(`State ${a} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[a]=r}}this.states_=this.states_.map(a=>qt(a.clone()))})}apply(e,t){let n=t==null?null:t.initialState,a=t==null?null:t.constants;t==null&&(t={});let r=II(e,n,a,this.numConstants);e=r.inputs,n=r.initialState,a=r.constants;let s=[],i=[];if(n!=null){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(let o of n)this.stateSpec.push(new Yt({shape:o.shape}));i=i.concat(this.stateSpec)}if(a!=null&&(t.constants=a,s=s.concat(a),this.numConstants=a.length),s[0]instanceof Aa){let o=[e].concat(s),l=this.inputSpec.concat(i),c=this.inputSpec;this.inputSpec=l;let u=super.apply(o,t);return this.inputSpec=c,u}else return super.apply(e,t)}call(e,t){return D(()=>{let n=t==null?null:t.mask,a=t==null?null:t.training,r=t==null?null:t.initialState;e=Pe(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==s)throw new B(`RNN Layer has ${s} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:a},o=TI((d,h)=>{let m=this.cell.call([d].concat(h),i);return[m[0],m.slice(1)]},e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],c=o[1],u=o[2];this.stateful&&this.resetStates(u,a);let p=this.returnSequences?c:l;return this.returnState?[p].concat(u):p})}getInitialState(e){return D(()=>{let t=xt(e.shape);return t=Se(t,[1,2]),t=Vc(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?gb(t,[1,n]):t):this.cell.stateSize>1?[gb(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===er.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){let a=t.cell,r=$a(a,n);return new e(Object.assign(t,{cell:r}))}};er.className="RNN";re.registerClass(er);var Hc=class extends je{},cm=class extends Hc{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Xt(this.units,"units"),this.activation=ls(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=vt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=vt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=vt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=wt(e.kernelRegularizer),this.recurrentRegularizer=wt(e.recurrentRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.kernelConstraint=Ut(e.kernelConstraint),this.recurrentConstraint=Ut(e.recurrentConstraint),this.biasConstraint=Ut(e.biasConstraint),this.dropout=Hl([1,ss([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Hl([1,ss([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ct(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return D(()=>{if(e=e,e.length!==2)throw new B(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let a=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=us({ones:()=>On(e),rate:this.dropout,training:a})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=us({ones:()=>On(n),rate:this.recurrentDropout,training:a}));let r,s=this.dropoutMask,i=this.recurrentDropoutMask;s!=null?r=Qa(W(e,s),this.kernel.read()):r=Qa(e,this.kernel.read()),this.bias!=null&&(r=Za(r,this.bias.read())),i!=null&&(n=W(n,i));let o=J(r,Qa(n,this.recurrentKernel.read()));return this.activation!=null&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:os(this.activation),useBias:this.useBias,kernelInitializer:_t(this.kernelInitializer),recurrentInitializer:_t(this.recurrentInitializer),biasInitializer:_t(this.biasInitializer),kernelRegularizer:pt(this.kernelRegularizer),recurrentRegularizer:pt(this.recurrentRegularizer),biasRegularizer:pt(this.biasRegularizer),activityRegularizer:pt(this.activityRegularizer),kernelConstraint:Vt(this.kernelConstraint),recurrentConstraint:Vt(this.recurrentConstraint),biasConstraint:Vt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};cm.className="SimpleRNNCell";re.registerClass(cm);var ox=class extends er{constructor(e){e.cell=new cm(e),super(e)}call(e,t){return D(()=>{this.cell.dropoutMask!=null&&(Ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,a=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})})}static fromConfig(e,t){return new e(t)}};ox.className="SimpleRNN";re.registerClass(ox);var pm=class extends Hc{constructor(e){super(e);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new B("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Xt(this.units,"units"),this.activation=ls(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ls(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=vt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=vt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=vt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=wt(e.kernelRegularizer),this.recurrentRegularizer=wt(e.recurrentRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.kernelConstraint=Ut(e.kernelConstraint),this.recurrentConstraint=Ut(e.recurrentConstraint),this.biasConstraint=Ut(e.biasConstraint),this.dropout=Hl([1,ss([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Hl([1,ss([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ct(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return D(()=>{if(e=e,e.length!==2)throw new B(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=us({ones:()=>On(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=us({ones:()=>On(a),rate:this.recurrentDropout,training:n,count:3}));let r=this.dropoutMask,s=this.recurrentDropoutMask,i,o,l;0<this.dropout&&this.dropout<1&&(e=W(e,r[0]));let c=Qa(e,this.kernel.read());this.useBias&&(c=Za(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=W(a,s[0]));let u=this.recurrentKernel.read(),[p,d]=zn(u,[2*this.units,this.units],u.rank-1),h=Qa(a,p),[m,f,g]=zn(c,3,c.rank-1),[y,b]=zn(h,2,h.rank-1);i=this.recurrentActivation.apply(J(m,y)),o=this.recurrentActivation.apply(J(f,b));let x=Qa(W(o,a),d);l=this.activation.apply(J(g,x));let v=J(W(i,a),W(J(1,St(i)),l));return[v,v]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:os(this.activation),recurrentActivation:os(this.recurrentActivation),useBias:this.useBias,kernelInitializer:_t(this.kernelInitializer),recurrentInitializer:_t(this.recurrentInitializer),biasInitializer:_t(this.biasInitializer),kernelRegularizer:pt(this.kernelRegularizer),recurrentRegularizer:pt(this.recurrentRegularizer),biasRegularizer:pt(this.biasRegularizer),activityRegularizer:pt(this.activityRegularizer),kernelConstraint:Vt(this.kernelConstraint),recurrentConstraint:Vt(this.recurrentConstraint),biasConstraint:Vt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};pm.className="GRUCell";re.registerClass(pm);var lx=class extends er{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new pm(e),super(e)}call(e,t){return D(()=>{this.cell.dropoutMask!=null&&(Ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,a=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};lx.className="GRU";re.registerClass(lx);var Zc=class extends Hc{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Xt(this.units,"units"),this.activation=ls(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ls(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=vt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=vt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=vt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=wt(e.kernelRegularizer),this.recurrentRegularizer=wt(e.recurrentRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.kernelConstraint=Ut(e.kernelConstraint),this.recurrentConstraint=Ut(e.recurrentConstraint),this.biasConstraint=Ut(e.biasConstraint),this.dropout=Hl([1,ss([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Hl([1,ss([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=ct(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let a;if(this.useBias){if(this.unitForgetBias){let r=this.biasInitializer,s=this.units;a=new(t=class extends ma{apply(i,o){let l=r.apply([s]),c=new zh().apply([s]),u=r.apply([s*2]);return g1(g1(l,c),u)}},t.className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return D(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new B(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let a=e[1],r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=us({ones:()=>On(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=us({ones:()=>On(a),rate:this.recurrentDropout,training:n,count:4}));let s=this.dropoutMask,i=this.recurrentDropoutMask,o,l,c,u;0<this.dropout&&this.dropout<1&&(e=W(e,s[0]));let p=Qa(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=W(a,i[0])),p=J(p,Qa(a,this.recurrentKernel.read())),this.useBias&&(p=Za(p,this.bias.read()));let[d,h,m,f]=zn(p,4,p.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(h),c=J(W(l,r),W(o,this.activation.apply(m))),u=this.recurrentActivation.apply(f);let g=W(u,this.activation.apply(c));return[g,g,c]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:os(this.activation),recurrentActivation:os(this.recurrentActivation),useBias:this.useBias,kernelInitializer:_t(this.kernelInitializer),recurrentInitializer:_t(this.recurrentInitializer),biasInitializer:_t(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:pt(this.kernelRegularizer),recurrentRegularizer:pt(this.recurrentRegularizer),biasRegularizer:pt(this.biasRegularizer),activityRegularizer:pt(this.activityRegularizer),kernelConstraint:Vt(this.kernelConstraint),recurrentConstraint:Vt(this.recurrentConstraint),biasConstraint:Vt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};Zc.className="LSTMCell";re.registerClass(Zc);var ux=class extends er{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Zc(e),super(e)}call(e,t){return D(()=>{this.cell.dropoutMask!=null&&(Ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,a=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};ux.className="LSTM";re.registerClass(ux);var um=class extends Hc{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return D(()=>{e=e;let n=e.slice(1),a=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?a.push(n.splice(0,i.stateSize.length)):a.push(n.splice(0,1));a.reverse();let r=[],s;for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=a[i],i===0?s=[e[0]].concat(n):s=[s[0]].concat(n),s=o.call(s,t),r.push(s.slice(1))}n=[];for(let i of r.slice().reverse())n.push(...i);return[s[0]].concat(n)})}build(e){Fb(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,a)=>{Mi(`RNNCell_${a}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=a=>({className:a.getClassName(),config:a.getConfig()}),n={cells:this.cells.map(t)};return Object.assign({},e,n)}static fromConfig(e,t,n={}){let a=[];for(let r of t.cells)a.push($a(r,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return Ab(e)}setWeights(e){let t=[];for(let n of this.cells){let a=n.weights.length,r=e.splice(a);for(let s=0;s<n.weights.length;++s)t.push([n.weights[s],r[s]])}$b(t)}};um.className="StackedRNNCells";re.registerClass(um);function us(e){let{ones:t,rate:n,training:a=!1,count:r=1}=e,s=()=>b1(t(),n),i=()=>Gc(s,t,a);return!r||r<=1?qt(i().clone()):Array(r).fill(void 0).map(i).map(o=>qt(o.clone()))}var kB=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]]);return n},NI=class extends er{constructor(e){if(e.unroll)throw new $e("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new $e("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Yt({ndim:5})]}call(e,t){return D(()=>{if(this.cell.dropoutMask!=null&&(Ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new B("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,a=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return D(()=>{let{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)],s=xt(r);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){D(()=>{if(!this.stateful)throw new xr("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(n[0]==null)throw new B("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>xt(r)):this.states_=[xt(r)];else if(e==null)Ae(this.states_),this.keptStates!=null&&(Ae(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>xt(r)):this.states_[0]=xt(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new B(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ae(this.states_);for(let s=0;s<this.states_.length;++s){let i=e[s],o=r;if(!w.arraysEqual(i.shape,o))throw new B(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${i.shape}`);this.states_[s]=i}}this.states_=this.states_.map(s=>qt(s.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:a,padding:r,strides:s,dilationRate:i}=this.cell,o=t==="channelsFirst",l=e[o?3:2],c=e[o?4:3],u=Da(l,a[0],r,s[0],i[0]),p=Da(c,a[1],r,s[1],i[1]);return[...e.slice(0,2),...o?[n,u,p]:[u,p,n]]}};NI.className="ConvRNN2D";var dm=class extends Zc{constructor(e){let{filters:t,kernelSize:n,strides:a,padding:r,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t}));this.filters=t,Xt(this.filters,"filters"),this.kernelSize=Yl(n,2,"kernelSize"),this.kernelSize.forEach(o=>Xt(o,"kernelSize")),this.strides=Yl(a||1,2,"strides"),this.strides.forEach(o=>Xt(o,"strides")),this.padding=r||"valid",ta(this.padding),this.dataFormat=s||"channelsLast",Rt(this.dataFormat),this.dilationRate=Yl(i||1,2,"dilationRate"),this.dilationRate.forEach(o=>Xt(o,"dilationRate"))}build(e){var t;e=ct(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new B(`The channel dimension of the input should be defined. Found ${e[n]}`);let a=e[n],r=4,s=this.kernelSize.concat([a,this.filters*r]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let o;if(this.unitForgetBias){let l=this.biasInitializer,c=this.filters;o=new(t=class extends ma{apply(u,p){let d=l.apply([c]),h=Ka([c]),m=l.apply([c*2]);return bb([d,h,m])}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,o,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return D(()=>{if(e.length!==3)throw new B(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,a=e[0],r=e[1],s=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=us({ones:()=>On(a),rate:this.dropout,training:n,count:i}));let o=this.dropoutMask,l=(Q,se,ne)=>!se||!se[ne]?Q:W(se[ne],Q),c=l(a,o,0),u=l(a,o,1),p=l(a,o,2),d=l(a,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=us({ones:()=>On(r),rate:this.recurrentDropout,training:n,count:i}));let h=this.recurrentDropoutMask,m=l(r,h,0),f=l(r,h,1),g=l(r,h,2),y=l(r,h,3),b=3,[x,v,T,k]=zn(this.kernel.read(),i,b),[S,F,A,R]=this.useBias?zn(this.bias.read(),i):[null,null,null,null];c=this.inputConv(c,x,S,this.padding),u=this.inputConv(u,v,F,this.padding),p=this.inputConv(p,T,A,this.padding),d=this.inputConv(d,k,R,this.padding);let[P,z,V,G]=zn(this.recurrentKernel.read(),i,b);m=this.recurrentConv(m,P),f=this.recurrentConv(f,z),g=this.recurrentConv(g,V),y=this.recurrentConv(y,G);let H=this.recurrentActivation.apply(J(c,m)),K=this.recurrentActivation.apply(J(u,f)),j=J(W(K,s),W(H,this.activation.apply(J(p,g)))),te=W(this.recurrentActivation.apply(J(d,y)),this.activation.apply(j));return[te,te,j]})}getConfig(){let e=super.getConfig(),{units:t}=e,n=kB(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,a)}inputConv(e,t,n,a){let r=At(e,t,this.strides,a||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?Za(r,n,this.dataFormat):r}recurrentConv(e,t){return At(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};dm.className="ConvLSTM2DCell";re.registerClass(dm);var cx=class extends NI{constructor(e){let t=new dm(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};cx.className="ConvLSTM2D";re.registerClass(cx);var hm=class extends je{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(this.noiseShape[a]==null?t[a]:this.noiseShape[a]);return n}call(e,t){return D(()=>{this.invokeCallHook(e,t);let n=Pe(e);if(0<this.rate&&this.rate<1){let a=t.training==null?!1:t.training,r=this.getNoiseShape(n);return Gc(()=>b1(n,this.rate,r,this.seed),()=>n,a)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};hm.className="Dropout";re.registerClass(hm);var px=class extends hm{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};px.className="SpatialDropout1D";re.registerClass(px);var dx=class extends je{constructor(e){super(e);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Xt(this.units,"units"),this.activation=ls(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=vt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=vt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ut(e.kernelConstraint),this.biasConstraint=Ut(e.biasConstraint),this.kernelRegularizer=wt(e.kernelRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.activityRegularizer=wt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=ct(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=ct(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return D(()=>{this.invokeCallHook(e,t);let n=Pe(e),a=i1(this.activation.getClassName()),r;return a!=null?r=Qa(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=Qa(n,this.kernel.read()),this.bias!=null&&(r=Za(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){let e={units:this.units,activation:os(this.activation),useBias:this.useBias,kernelInitializer:_t(this.kernelInitializer),biasInitializer:_t(this.biasInitializer),kernelRegularizer:pt(this.kernelRegularizer),biasRegularizer:pt(this.biasRegularizer),activityRegularizer:pt(this.activityRegularizer),kernelConstraint:Vt(this.kernelConstraint),biasConstraint:Vt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};dx.className="Dense";re.registerClass(dx);var hx=class extends je{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=ct(e);for(let t of e.slice(1))if(t==null)throw new B(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],rs(e,1)]}call(e,t){return D(()=>{this.invokeCallHook(e,t);let n=Pe(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let a=[0];for(let r=2;r<n.rank;++r)a.push(r);a.push(1),n=n.transpose(a)}return q3(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};hx.className="Flatten";re.registerClass(hx);var mx=class extends je{constructor(e){super(e);this.supportsMasking=!0,this.activation=ls(e.activation)}call(e,t){return D(()=>{this.invokeCallHook(e,t);let n=Pe(e);return this.activation.apply(n)})}getConfig(){let e={activation:os(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};mx.className="Activation";re.registerClass(mx);var fx=class extends je{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return D(()=>(e=Pe(e),H3(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};fx.className="RepeatVector";re.registerClass(fx);var gx=class extends je{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",a=t.slice(),r=1,s=null;for(let o=0;o<a.length;++o){let l=a[o];if(this.isUnknown(l))if(s===null)s=o;else throw new B("Can only specifiy one unknown dimension.");else r*=l}let i=rs(e);if(s!==null){if(r===0||i%r!=0)throw new B(n);a[s]=i/r}else if(i!==r)throw new B(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return D(()=>{this.invokeCallHook(e,t);let n=Pe(e),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return n.reshape(r)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};gx.className="Reshape";re.registerClass(gx);var yx=class extends je{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Fa(1,e.dims.length+1);if(!w.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Yt({ndim:this.dims.length+1})]}computeOutputShape(e){e=ct(e);let t=e.slice();return this.dims.forEach((n,a)=>{t[a+1]=e[n]}),t}call(e,t){return Ve(Pe(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};yx.className="Permute";re.registerClass(yx);var bx=class extends je{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Pe(e),a=-1;return Ic(_i(n,this.maskValue),a)}call(e,t){return D(()=>{this.invokeCallHook(e,t);let n=Pe(e),a=-1,r=!0,s=Ic(_i(n,this.maskValue),a,r);return n.mul(s.asType(n.dtype))})}};bx.className="Masking";re.registerClass(bx);var xx=class extends je{constructor(e){super(e);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ft(e.inputLength))}this.inputDim=e.inputDim,Xt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Xt(this.outputDim,"outputDim"),this.embeddingsInitializer=vt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=wt(e.embeddingsRegularizer),this.activityRegularizer=wt(e.activityRegularizer),this.embeddingsConstraint=Ut(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return D(()=>this.maskZero?(e=Pe(e),_i(e,Ge(e))):null)}computeOutputShape(e){if(e=ct(e),this.inputLength==null)return[...e,this.outputDim];let t=ft(this.inputLength);if(t.length!==e.length-1)throw new B(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let a=0;a<t.length;++a){let r=t[a],s=e[a+1];if(r!=null&&s!=null&&r!==s)throw new B(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return D(()=>{this.invokeCallHook(e,t);let n=Pe(e);return n.dtype!=="int32"&&(n=Bc(n,"int32")),y1(this.embeddings.read(),n.as1D()).reshape(ct(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:_t(this.embeddingsInitializer),embeddingsRegularizer:pt(this.embeddingsRegularizer),activityRegularizer:pt(this.activityRegularizer),embeddingsConstraint:Vt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};xx.className="Embedding";re.registerClass(xx);var Wi=class extends je{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new $e}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){let r=e[e.length-t.length+a],s=t[a];if(r==null||s==null||r<0||s<0)n.push(null);else if(r===1)n.push(s);else if(s===1)n.push(r);else{if(r!==s)throw new B("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ct(e)]),e=e,e.length<2)throw new B(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=as(t),t.length>1)throw new B(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){let s=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}let a=e.map(r=>r.length);e.indexOf(null)===-1&&as(a).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return D(()=>{if(e=e,this.reshapeRequired){let n=[],a=e.map(r=>r.rank);if(a.indexOf(null)===-1){let r=ss(a);for(let s of e){let i=s.rank;for(let o=0;o<r-i;++o)s=Vc(s,1);n.push(s)}return this.mergeFunction(n)}else{let r=!1;for(let o of e){let l=o.rank;if(l==null){let c=o.shape,u=c[0],p=c.slice(1).concat([u]),d=o.reshape([u].concat(rs(c.slice(1))));d=Ve(d,[1,0]),d=d.reshape(p),n.push(d),r=!0}else if(l>1){let c=Fa(1,l).concat([0]);n.push(Ve(o,c)),r=!0}else n.push(o)}let s=this.mergeFunction(n),i=s.rank;if(r){if(i==null){let o=s.shape,l=o.length,c=o[l-1],u=[c].concat(o.slice(0,o.length-1));s=Ve(s.reshape([-1,c]),[1,0]).reshape(u)}else if(i>1){let o=[i-1].concat(Fa(0,i-1));s=Ve(s,o)}}return s}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let a=1;a<e.length;++a){let r=e[a]==null?null:e[a].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let a of e)a!=null&&a[0]!==null&&n.push(a[0]);return n=as(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return D(()=>{if(t==null)return null;if(!Array.isArray(t))throw new B("`mask` should be an Array");if(!Array.isArray(e))throw new B("`inputs` should be an Array");if(t.length!==e.length)throw new B(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(a=>a==null))return null;t=t.map(a=>a==null?a:hn(a,0));let n=t[0];for(let a=1;a<t.length-1;++a)n=da(n,t[a]);return n})}},vx=class extends Wi{constructor(e){super(e)}mergeFunction(e){return D(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=J(t,e[n]);return t})}};vx.className="Add";re.registerClass(vx);var wx=class extends Wi{constructor(e){super(e)}mergeFunction(e){return D(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=W(t,e[n]);return t})}};wx.className="Multiply";re.registerClass(wx);var kx=class extends Wi{constructor(e){super(e)}mergeFunction(e){return D(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=J(t,e[n]);return W(1/e.length,t)})}};kx.className="Average";re.registerClass(kx);var Ix=class extends Wi{constructor(e){super(e)}mergeFunction(e){return D(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=qa(t,e[n]);return t})}};Ix.className="Maximum";re.registerClass(Ix);var Tx=class extends Wi{constructor(e){super(e)}mergeFunction(e){return D(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ll(t,e[n]);return t})}};Tx.className="Minimum";re.registerClass(Tx);var Nx=class extends Wi{constructor(e){super(e);this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new B("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let a of e)if(a!=null){t=!1;break}if(t)return;let n=[];for(let a=0;a<e.length;++a){let r=e[a].slice();r.splice(this.axis,1);let s=!1;for(let i of n)if(w.arraysEqual(i,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new B("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return D(()=>bb(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new B("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(let r of t.slice(1)){if(n[a]==null||r[a]==null){n[a]=null;break}n[a]+=r[a]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new B("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new B("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new B(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return D(()=>{let n=!0;if(t.forEach(s=>{if(s!=null){n=!1;return}}),n)return null;let a=[];for(let s=0;s<e.length;++s)t[s]==null?a.push(On(e[s]).asType("bool")):t[s].rank<e[s].rank?a.push(hn(t[s],-1)):a.push(t[s]);let r=Je(a,this.axis);return Zd(r,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Nx.className="Concatenate";re.registerClass(Nx);function ep(e,t){for(;e<0;)e+=t;return e}function IB(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new $e("batchDot is not implemented for tensors of 4D or higher rank yet");if(w.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),w.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new $e("batchDot is not implemented for complex64-type Tensors yet.");let a=e.shape.length,r=t.shape.length;n==null&&(n=[a-1,r-2]);let s=n;return D(()=>{let i;if(a>r){i=a-r;let l=[];for(let c=0;c<i;++c)l.push(1);t=t.reshape(t.shape.concat(l))}else if(r>a){i=r-a;let l=[];for(let c=0;c<i;++c)l.push(1);e=e.reshape(e.shape.concat(l))}else i=0;let o;if(e.shape.length===2&&t.shape.length===2)s[0]===s[1]?o=e.mul(t).sum(s[0]):o=e.transpose([1,0]).mul(t).sum(s[1]);else{let l=s[0]!==e.shape.length-1,c=s[1]===t.shape.length-1;o=e.matMul(t,l,c)}if(i>0){let l;a>r?l=a+r-3:l=a-1;let c=[];for(let u=l;u<l+i;++u)c.push(u);o=o.squeeze(c)}return o.shape.length===1&&(o=o.expandDims(1)),o})}var Sx=class extends Wi{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new $e("Dot layer does not support tensors of 4D or higher rank yet.");let a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new B(`Dimension incompatibility: ${t[a[0]]} !== ${n[a[1]]}`)}mergeFunction(e){if(e.length!==2)throw new B(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],a;return Array.isArray(this.axes)?a=this.axes.map((r,s)=>ep(r,e[s].shape.length)):a=[ep(this.axes,t.shape.length),ep(this.axes,n.shape.length)],this.normalize&&(t=Jh(t,a[0]),n=Jh(n,a[1])),IB(t,n,a)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[ep(this.axes,e.length),ep(this.axes,t.length)],n}computeOutputShape(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new $e("Dot layer does not support tensors of 4D or higher rank yet.");let a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);let r=t.concat(n);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Sx.className="Dot";re.registerClass(Sx);var Cx=class extends je{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return D(()=>{this.invokeCallHook(e,t);let n=Pe(e);return Gc(()=>Lh(n.shape,0,this.stddev).add(n),()=>n,t.training||!1)})}};Cx.className="GaussianNoise";re.registerClass(Cx);var _x=class extends je{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return D(()=>{this.invokeCallHook(e,t);let n=Pe(e);return this.rate>0&&this.rate<1?Gc(()=>{let a=Math.sqrt(this.rate/(1-this.rate));return n.mul(Lh(n.shape,1,a))},()=>n,t.training||!1):n})}};_x.className="GaussianDropout";re.registerClass(_x);var Ex=class extends je{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Pe(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return D(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return Gc(()=>{let a=Pe(e),r=1.6732632423543772,s=1.0507009873554805,i=-r*s,o=es(zl(n),this.rate);o=Bc(o,"float32");let l=((1-this.rate)*(1+this.rate*i**2))**-.5,c=-l*i*this.rate;return a.mul(o).add(o.add(-1).mul(i)).mul(l).add(c)},()=>Pe(e),t.training||!1)}return e})}};Ex.className="AlphaDropout";re.registerClass(Ex);function tp(e,t,n,a,r,s=.001){let i;if(e.rank===2)i=ek(e,t,n,a,r,s);else if(e.rank===3)i=tk(e,t,n,a,r,s);else if(e.rank===4)i=nk(e,t,n,a,r,s);else throw new $e(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return i}function TB(e,t,n,a,r=.001){return D(()=>{let s=ph(e,a),i=s.mean,o=s.variance;return[tp(e,i,o,n,t,r),i,o]})}function NB(e,t,n,a,r=.001){return D(()=>{let s=ph(e,a),i=s.mean,o=s.variance,l=[];for(let h of Fa(0,e.rank))a.indexOf(h)!==-1?l.push(1):l.push(e.shape[h]);let c=i.reshape(l),u=o.reshape(l),p=t==null?null:t.reshape(l),d=n==null?null:n.reshape(l);return[tp(e,c,u,d,p,r),i,o]})}function SB(e,t,n,a,r=.001){return w.arraysEqual(a.slice().sort(),Fa(0,e.rank-1))?TB(e,t,n,a,r):NB(e,t,n,a,r)}var Fx=class extends je{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=vt(e.betaInitializer||"zeros"),this.gammaInitializer=vt(e.gammaInitializer||"ones"),this.movingMeanInitializer=vt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=vt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ut(e.betaConstraint),this.gammaConstraint=Ut(e.gammaConstraint),this.betaRegularizer=wt(e.betaRegularizer),this.gammaRegularizer=wt(e.gammaRegularizer)}build(e){e=ct(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new B(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Yt({ndim:e.length,axes:{[t]:n}})];let a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return D(()=>{let n=t.training==null?!1:t.training,a=Pe(e),r=a.shape,s=r.length,i=Fa(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=$i(1,s);l[o]=r[o];let c=i.slice();c.sort();let u=!w.arraysEqual(c,Fa(0,s).slice(0,s-1)),p=()=>{if(u){let g=this.movingMean.read().reshape(l),y=this.movingVariance.read().reshape(l),b=this.center?this.beta.read().reshape(l):null,x=this.scale?this.gamma.read().reshape(l):null;return tp(a,g,y,b,x,this.epsilon)}else return tp(a,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return p();let[d,h,m]=SB(a,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(g,y,b)=>{D(()=>{let x=1-b,v=g.read(),T=v.sub(y).mul(x);g.write(v.sub(T))})};return(()=>{f(this.movingMean,h,this.momentum),f(this.movingVariance,m,this.momentum)})(),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:_t(this.betaInitializer),gammaInitializer:_t(this.gammaInitializer),movingMeanInitializer:_t(this.movingMeanInitializer),movingVarianceInitializer:_t(this.movingVarianceInitializer),betaRegularizer:pt(this.betaRegularizer),gammaRegularizer:pt(this.gammaRegularizer),betaConstraint:Vt(this.betaConstraint),gammaConstraint:Vt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Fx.className="BatchNormalization";re.registerClass(Fx);var Ax=class extends je{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=vt(e.betaInitializer||"zeros"),this.gammaInitializer=vt(e.gammaInitializer||"ones"),this.betaRegularizer=wt(e.betaRegularizer),this.gammaRegularizer=wt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=ct(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(let r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==as(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(r=>e[r]),a=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(e,t){let n=Pe(e),a=n.shape,r=a.length;return D(()=>{let s=!0,{mean:i,variance:o}=ph(n,this.axis,s),l=$i(1,r);for(let m of this.axis)l[m]=a[m];let c=m=>m!=null&&m.shape.length!==r&&this.axis!==[r-1]?m.reshape(l):m,u=c(this.gamma.read()),p=c(this.beta.read()),d=[],h=[];for(let m=0;m<r;++m)this.axis.indexOf(m)!==-1?(d.push(a[m]),h.push(1)):(d.push(1),h.push(a[m]));return i=i.tile(d),o=o.tile(d),u=u.tile(h),p=p.tile(h),tp(n,i,o,p,u,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:_t(this.betaInitializer),gammaInitializer:_t(this.gammaInitializer),betaRegularizer:pt(this.betaRegularizer),gammaRegularizer:pt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Ax.className="LayerNormalization";re.registerClass(Ax);function CB(e,t,n){return D(()=>{if(e.rank!==4)throw new B(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new B("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=_a()),n!=="channelsLast"&&n!=="channelsFirst")throw new B(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let a;return n==="channelsFirst"?a=[[0,0],[0,0],t[0],t[1]]:a=[[0,0],t[0],t[1],[0,0]],ea(e,a)})}var $x=class extends je{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?_a():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new B(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new B(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new B(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Yt({ndim:4})]}computeOutputShape(e){e=ct(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return D(()=>CB(Pe(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};$x.className="ZeroPadding2D";re.registerClass($x);function mm(e,t,n,a,r,s){return D(()=>{Rt(r),c1(s),ta(a),n==null&&(n=[1,1]),a==null&&(a="valid"),r==null&&(r=_a()),s==null&&(s="max"),e=ex(e,r);let i,o=a==="same"?"same":"valid";return s==="max"?i=$t(e,t,n,o):i=Qn(e,t,n,o),r==="channelsFirst"&&(i=Ve(i,[0,3,1,2])),i})}function SI(e,t,n,a,r,s){return D(()=>{Rt(r),c1(s),ta(a),n==null&&(n=[1,1,1]),a==null&&(a="valid"),r==null&&(r=_a()),s==null&&(s="max"),e=vI(e,r);let i,o=a==="same"?"same":"valid";return s==="max"?i=Vy(e,t,n,o):i=_y(e,t,n,o),r==="channelsFirst"&&(i=Ve(i,[0,4,1,2,3])),i})}var CI=class extends je{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new B(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Xt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new B(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Xt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,ta(this.padding),this.inputSpec=[new Yt({ndim:3})]}computeOutputShape(e){e=ct(e);let t=Da(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return D(()=>{this.invokeCallHook(e,t),e=Vc(Pe(e),2);let n=this.poolingFunction(Pe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ts(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},Dx=class extends CI{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Rt(r),ta(a),mm(e,t,n,a,r,"max")}};Dx.className="MaxPooling1D";re.registerClass(Dx);var Rx=class extends CI{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Rt(r),ta(a),mm(e,t,n,a,r,"avg")}};Rx.className="AveragePooling1D";re.registerClass(Rx);var _I=class extends je{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new B(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Xt(this.poolSize,"poolSize"),Xt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Rt(this.dataFormat),ta(this.padding),this.inputSpec=[new Yt({ndim:4})]}computeOutputShape(e){e=ct(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Da(t,this.poolSize[0],this.padding,this.strides[0]),n=Da(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return D(()=>(this.invokeCallHook(e,t),this.poolingFunction(Pe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Mx=class extends _I{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Rt(r),ta(a),mm(e,t,n,a,r,"max")}};Mx.className="MaxPooling2D";re.registerClass(Mx);var Px=class extends _I{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Rt(r),ta(a),mm(e,t,n,a,r,"avg")}};Px.className="AveragePooling2D";re.registerClass(Px);var EI=class extends je{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new B(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Xt(this.poolSize,"poolSize"),Xt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Rt(this.dataFormat),ta(this.padding),this.inputSpec=[new Yt({ndim:5})]}computeOutputShape(e){e=ct(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],a=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Da(t,this.poolSize[0],this.padding,this.strides[0]),n=Da(n,this.poolSize[1],this.padding,this.strides[1]),a=Da(a,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return D(()=>(this.invokeCallHook(e,t),this.poolingFunction(Pe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Ox=class extends EI{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Rt(r),ta(a),SI(e,t,n,a,r,"max")}};Ox.className="MaxPooling3D";re.registerClass(Ox);var Lx=class extends EI{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Rt(r),ta(a),SI(e,t,n,a,r,"avg")}};Lx.className="AveragePooling3D";re.registerClass(Lx);var FI=class extends je{constructor(e){super(e);this.inputSpec=[new Yt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new $e}},zx=class extends FI{constructor(e){super(e||{})}call(e,t){return D(()=>{let n=Pe(e);return Ct(n,1)})}};zx.className="GlobalAveragePooling1D";re.registerClass(zx);var Wx=class extends FI{constructor(e){super(e||{})}call(e,t){return D(()=>{let n=Pe(e);return Zn(n,1)})}};Wx.className="GlobalMaxPooling1D";re.registerClass(Wx);var AI=class extends je{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Rt(this.dataFormat),this.inputSpec=[new Yt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new $e}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Bx=class extends AI{call(e,t){return D(()=>{let n=Pe(e);return this.dataFormat==="channelsLast"?Ct(n,[1,2]):Ct(n,[2,3])})}};Bx.className="GlobalAveragePooling2D";re.registerClass(Bx);var Vx=class extends AI{call(e,t){return D(()=>{let n=Pe(e);return this.dataFormat==="channelsLast"?Zn(n,[1,2]):Zn(n,[2,3])})}};Vx.className="GlobalMaxPooling2D";re.registerClass(Vx);var $I=class extends je{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let a=t.layer,r=$a(a,n);delete t.layer;let s={layer:r};return Object.assign(s,t),new e(s)}},Ux=class extends $I{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=ct(e),e.length<3)throw new B(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=ct(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return D(()=>(e=Pe(e),TI((n,a)=>[Pe(this.layer.call(n,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};Ux.className="TimeDistributed";re.registerClass(Ux);function _B(e){Ri(W3,"BidirectionalMergeMode",e)}var EB="concat",Gx=class extends $I{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=$a(n),t.goBackwards=t.goBackwards!==!0;let a={};if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=$a(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?EB:e.mergeMode,_B(this.mergeMode),e.weights)throw new $e("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,a,r;return this.returnState&&(r=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,a=[n]):this.mergeMode==null?a=[n,n.slice()]:a=[n],this.returnState?this.mergeMode==null?a.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):_n(a)}apply(e,t){let n=t==null?null:t.initialState,a=t==null?null:t.constants;t==null&&(t={});let r=II(e,n,a,this.numConstants);if(e=r.inputs,n=r.initialState,a=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&a==null)return super.apply(e,t);let s=[],i=[];if(n!=null){let l=n.length;if(l%2>0)throw new B("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let c=n.map(u=>new Yt({shape:u.shape}));this.forwardLayer.stateSpec=c.slice(0,l/2),this.backwardLayer.stateSpec=c.slice(l/2),i.push(...c)}if(a!=null)throw new $e("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof Aa;for(let l of s)if(l instanceof Aa!==o)throw new B("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let l=[e].concat(s),c=this.inputSpec.concat(i),u=this.inputSpec;this.inputSpec=c;let p=super.apply(l,t);return this.inputSpec=u,p}else return super.apply(e,t)}call(e,t){return D(()=>{let n=t.initialState,a,r;if(n==null)a=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let o=n.slice(0,n.length/2),l=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let s;this.returnState&&(Array.isArray(a)&&(s=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=Ln(r,1));let i;return this.mergeMode==="concat"?i=bb([a,r]):this.mergeMode==="sum"?i=J(a,r):this.mergeMode==="ave"?i=W(.5,J(a,r)):this.mergeMode==="mul"?i=W(a,r):this.mergeMode==null&&(i=[a,r]),this.returnState?this.mergeMode==null?i.concat(s):[i].concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Mi(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Mi(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let a=this.forwardLayer.states.map(r=>null);return Array.isArray(n)?n.concat(a).concat(a):[n].concat(a).concat(a)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=$a(t.layer);if(delete t.layer,t.numConstants!=null)throw new $e("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let a=t;return a.layer=n,new e(a)}};Gx.className="Bidirectional";re.registerClass(Gx);function nz(e){return new jl(e)}function az(e){return new Jb(e)}function rz(e){return new Kb(e)}function sz(e){return new Xb(e)}function iz(e){return new Yb(e)}function oz(e){return new Zb(e)}function lz(e){return new Qb(e)}function uz(e){return new lm(e)}function cz(e){return new Qc(e)}function pz(e){return new nx(e)}function dz(e){return new om(e)}function hz(e){return new ax(e)}function mz(e){return new rx(e)}function fz(e){return new sx(e)}function gz(e){return new ix(e)}function yz(e){return new mx(e)}function bz(e){return new dx(e)}function xz(e){return new hm(e)}function vz(e){return new px(e)}function wz(e){return new hx(e)}function kz(e){return new fx(e)}function Iz(e){return new gx(e)}function Tz(e){return new yx(e)}function Nz(e){return new xx(e)}function Sz(e){return new vx(e)}function Cz(e){return new kx(e)}function _z(e){return new Nx(e)}function Ez(e){return new Ix(e)}function Fz(e){return new Tx(e)}function Az(e){return new wx(e)}function $z(e){return new Sx(e)}function Dz(e){return new Fx(e)}function Rz(e){return new Ax(e)}function Mz(e){return new $x(e)}function Cb(e){return new Rx(e)}function Pz(e){return Cb(e)}function Oz(e){return Cb(e)}function _b(e){return new Px(e)}function Lz(e){return _b(e)}function zz(e){return _b(e)}function Eb(e){return new Lx(e)}function Wz(e){return Eb(e)}function Bz(e){return Eb(e)}function Vz(e){return new zx(e)}function Uz(e){return new Bx(e)}function I1(e){return new Wx(e)}function T1(e){return new Vx(e)}function N1(e){return new Dx(e)}function S1(e){return new Mx(e)}function Gz(e){return new Ox(e)}function Hz(e){return new lx(e)}function jz(e){return new pm(e)}function qz(e){return new ux(e)}function Kz(e){return new Zc(e)}function Xz(e){return new ox(e)}function Yz(e){return new cm(e)}function Jz(e){return new cx(e)}function Qz(e){return new dm(e)}function Zz(e){return new er(e)}function eW(e){return new um(e)}function tW(e){return new Gx(e)}function nW(e){return new Ux(e)}var aW=I1,rW=T1,sW=N1,iW=S1;function oW(e){return new Cx(e)}function lW(e){return new _x(e)}function uW(e){return new Ex(e)}function cW(e){return new bx(e)}var DI={};Le(DI,{MAPE:()=>WB,MSE:()=>UB,binaryAccuracy:()=>FB,binaryCrossentropy:()=>AB,categoricalAccuracy:()=>DB,categoricalCrossentropy:()=>RB,cosineProximity:()=>OB,mape:()=>BB,meanAbsoluteError:()=>LB,meanAbsolutePercentageError:()=>zB,meanSquaredError:()=>VB,mse:()=>GB,precision:()=>MB,recall:()=>PB,sparseCategoricalAccuracy:()=>$B});function FB(e,t){return Mb(e,t)}function AB(e,t){return B1(e,t)}function $B(e,t){return V1(e,t)}function DB(e,t){return Pb(e,t)}function RB(e,t){return Ob(e,t)}function MB(e,t){return W1(e,t)}function PB(e,t){return EW(e,t)}function OB(e,t){return Db(e,t)}function LB(e,t){return Qh(e,t)}function zB(e,t){return Kl(e,t)}function WB(e,t){return Kl(e,t)}function BB(e,t){return Kl(e,t)}function VB(e,t){return Oi(e,t)}function UB(e,t){return Oi(e,t)}function GB(e,t){return Oi(e,t)}var RI={};Le(RI,{modelFromJSON:()=>uB});var MI={};Le(MI,{l1:()=>jB,l1l2:()=>HB,l2:()=>qB});function HB(e){return new Yc(e)}function jB(e){return yB(e)}function qB(e){return bB(e)}var PI=class extends ql{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof wr))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function fm(e,t){return e<t}function OI(e,t){return e>t}var LI=class extends PI{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new $e("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=fm:this.mode==="max"?this.monitorFunc=OI:this.monitor.indexOf("acc")!==-1?this.monitorFunc=OI:this.monitorFunc=fm,this.monitorFunc===fm&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===fm?Infinity:-Infinity}async onEpochEnd(e,t){await is(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function KB(e){return new LI(e)}var XB={earlyStopping:KB},Ra;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(Ra||(Ra={}));var zI;(function(e){let t;(function(n){n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(zI||(zI={}));var Hx={};function YB(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};Hx[e]=n}function WI(e){return Hx[e]}function JB(e){delete Hx[e]}function I(e,t,n,a,r){let s=t.inputParams[e];if(s&&s.inputIndexStart!==void 0){let o=s.inputIndexStart,l=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?o+1:s.inputIndexEnd;if(s.type==="tensor")return Fn(t.inputNames[s.inputIndexStart],n,a,r);if(s.type==="tensors")return t.inputNames.slice(o,l).map(p=>Fn(p,n,a,r));let c=Fn(t.inputNames.slice(o)[0],n,a,r),u=c.dataSync();return s.type==="number"?u[0]:w.toNestedArray(c.shape,u)}let i=t.attrParams[e];return i&&i.value}function Fn(e,t,n,a){let[r,s]=Bn(e);if(a!=null){let o=a.getHashTableHandleByName(r);if(o!=null)return o}let i=n.currentContextIds.find(o=>!!t[gm(r,o)]);return i!==void 0?t[gm(r,i)][s]:void 0}function QB(e,t,n){return t[gm(e,n.currentContextId)]}function kr(e,t){let[n,a]=Bn(e);return[gm(n,t&&t.currentContextId),a]}function gm(e,t){return t?`${e}-${t}`:e}function Bn(e){let t=e.split(":");return t.length===1?[e,0]:[t[0],Number(t[t.length-1])]}function ym(e,t,n){let a=I("pad",e,t,n);if(a==="explicit"){a=I("explicitPaddings",e,t,n);let r=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)r[s][0]=a[s*2],r[s][1]=a[s*2+1];return r}return a}function Ir(e){return e.kept?e:Xr(e)}var BI={};Le(BI,{json:()=>ZB});var ZB=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],VI={};Le(VI,{json:()=>e4});var e4=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],UI={};Le(UI,{json:()=>t4});var t4=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],GI={};Le(GI,{json:()=>n4});var n4=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],HI={};Le(HI,{json:()=>a4});var a4=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],jI={};Le(jI,{json:()=>r4});var r4=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],qI={};Le(qI,{json:()=>s4});var s4=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],KI={};Le(KI,{json:()=>i4});var i4=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],XI={};Le(XI,{json:()=>o4});var o4=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],YI={};Le(YI,{json:()=>l4});var l4=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],JI={};Le(JI,{json:()=>u4});var u4=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],QI={};Le(QI,{json:()=>c4});var c4=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ZI={};Le(ZI,{json:()=>p4});var p4=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],eT={};Le(eT,{json:()=>d4});var d4=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],tT={};Le(tT,{json:()=>h4});var h4=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],nT={};Le(nT,{json:()=>m4});var m4=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],aT={};Le(aT,{json:()=>f4});var f4=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}],sT=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[BI,VI,UI,GI,HI,jI,qI,JI,YI,KI,QI,ZI,eT,tT,nT,aT,XI],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,a)=>(n[a.tfOpName]=a,n),{})}transformGraph(e,t={}){let n=e.node,a=[],r=[],s=[],i=n.reduce((m,f)=>(m[f.name]=this.mapNode(f),f.op.startsWith("Placeholder")?a.push(m[f.name]):f.op==="Const"?r.push(m[f.name]):(f.input==null||f.input.length===0)&&s.push(m[f.name]),m),{}),o=[],l=[],c={},u={};t!=null&&(c=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));let p=Object.keys(i);p.forEach(m=>{let f=i[m];f.inputNames.forEach(g=>{let[y]=kr(g);f.inputs.push(i[y]),i[y].children.push(f)})}),Object.keys(u).length===0?p.forEach(m=>{let f=i[m];f.children.length===0&&l.push(f)}):Object.keys(u).forEach(m=>{let[f]=kr(m),g=i[f];g!=null&&(g.signatureKey=u[m],l.push(g))}),Object.keys(c).length>0?Object.keys(c).forEach(m=>{let[f]=kr(m),g=i[f];g&&(g.signatureKey=c[m],o.push(g))}):o=a;let d={};e.library!=null&&e.library.function!=null&&(d=e.library.function.reduce((m,f)=>(m[f.signature.name]=this.mapFunction(f),m),{}));let h={nodes:i,inputs:o,outputs:l,weights:r,placeholders:a,signature:t,functions:d};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=WI(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(a=>a.startsWith("^")?a.substr(1):a),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((a,r)=>(a[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},a),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((a,r)=>{let s=r.type,i;switch(r.type){case"string":i=jx(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=jx(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":i=ev(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=ev(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":i=Kx(e.attr,r.tfName,r.defaultValue||0),i===void 0&&!!r.tfDeprecatedName&&(i=Kx(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":i=Zx(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Zx(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":i=qx(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=qx(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":i=nv(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=nv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":i=Qx(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Qx(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":i=tv(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=tv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":i=Yx(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Yx(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":i=Jx(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Jx(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":i=rT(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=rT(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return a[r.name]={value:i,type:s},a},{})),n}mapFunction(e){let t=e.nodeDef,n=[],a=[],r={};t!=null&&(r=t.reduce((c,u)=>(c[u.name]=this.mapNode(u),u.op==="Const"&&a.push(c[u.name]),c),{}));let s=[],i=[];e.signature.inputArg.forEach(c=>{let[u]=kr(c.name),p={name:u,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Xx(c.type),type:"dtype"}},children:[]};p.signatureKey=c.name,s.push(p),r[u]=p}),Object.keys(r).forEach(c=>{let u=r[c];u.inputNames.forEach(p=>{let[d]=kr(p);u.inputs.push(r[d]),r[d].children.push(u)})});let o=e.ret;e.signature.outputArg.forEach(c=>{let[u,p]=kr(o[c.name]),d=r[u];d!=null&&(d.defaultOutput=p,i.push(d))});let l=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:i,weights:a,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function g4(e){let t=Z().global;if(typeof t.atob!="undefined")return t.atob(e);if(typeof Buffer!="undefined")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function iT(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):g4(e);return t?n:n.toLowerCase()}function jx(e,t,n,a=!1){let r=e[t];return r!=null?iT(r.s,a):n}function qx(e,t,n){let a=e[t];return a?a.b:n}function Kx(e,t,n){let a=e[t]||{},r=a.i!=null?a.i:a.f!=null?a.f:n;return typeof r=="number"?r:parseInt(r,10)}function Xx(e){switch(typeof e=="string"&&(e=Ra[e]),e){case Ra.DT_FLOAT:return"float32";case Ra.DT_INT32:case Ra.DT_INT64:case Ra.DT_INT8:case Ra.DT_UINT8:return"int32";case Ra.DT_BOOL:return"bool";case Ra.DT_DOUBLE:return"float32";case Ra.DT_STRING:return"string";default:return null}}function rT(e,t,n){let a=e[t];return a&&a.func?a.func.name:n}function Yx(e,t,n){let a=e[t];return a&&a.type?Xx(a.type):n}function Jx(e,t,n){let a=e[t];return a&&a.list&&a.list.type?a.list.type.map(r=>Xx(r)):n}function oT(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function Qx(e,t,n){let a=e[t];return a&&a.shape?oT(a.shape):n}function Zx(e,t,n){let a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):n}function ev(e,t,n,a=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map(s=>iT(s,a)):n}function tv(e,t,n){let a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map(r=>oT(r)):n}function nv(e,t,n){let a=e[t];return a&&a.list&&a.list.b?a.list.b:n}var y4=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(a=>this.getInput(a)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((a,r)=>(a[r]=this.getAttr(r),a),{}))}getInput(e){return Fn(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return Fn(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return Kx(this.node.rawAttrs,e,t);if(n.s!=null)return jx(this.node.rawAttrs,e,t);if(n.b!=null)return qx(this.node.rawAttrs,e,t);if(n.shape!=null)return Qx(this.node.rawAttrs,e,t);if(n.type!=null)return Yx(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return Zx(this.node.rawAttrs,e,t);if(n.list.s!=null)return ev(this.node.rawAttrs,e,t);if(n.list.shape!=null)return tv(this.node.rawAttrs,e,t);if(n.list.b!=null)return nv(this.node.rawAttrs,e,t);if(n.list.type!=null)return Jx(this.node.rawAttrs,e,t)}return t}},b4=(e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[J(I("a",e,t,n),I("b",e,t,n))];case"AddN":return[Y0(I("tensors",e,t,n))];case"FloorMod":case"Mod":return[Gy(I("a",e,t,n),I("b",e,t,n))];case"Mul":return[W(I("a",e,t,n),I("b",e,t,n))];case"RealDiv":case"Div":return[ye(I("a",e,t,n),I("b",e,t,n))];case"DivNoNan":return[Ry(I("a",e,t,n),I("b",e,t,n))];case"FloorDiv":return[Qd(I("a",e,t,n),I("b",e,t,n))];case"Sub":return[he(I("a",e,t,n),I("b",e,t,n))];case"Minimum":return[Ll(I("a",e,t,n),I("b",e,t,n))];case"Maximum":return[qa(I("a",e,t,n),I("b",e,t,n))];case"Pow":return[gr(I("a",e,t,n),I("b",e,t,n))];case"SquaredDifference":return[wh(I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},x4=(e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[zt(I("x",e,t,n))];case"Acos":return[by(I("x",e,t,n))];case"Acosh":return[xy(I("x",e,t,n))];case"Asin":return[wy(I("x",e,t,n))];case"Asinh":return[ky(I("x",e,t,n))];case"Atan":return[Iy(I("x",e,t,n))];case"Atan2":return[Ty(I("x",e,t,n),I("y",e,t,n))];case"Atanh":return[Ny(I("x",e,t,n))];case"Ceil":return[Ey(I("x",e,t,n))];case"Complex":return[jr(I("real",e,t,n),I("imag",e,t,n))];case"Cos":return[_c(I("x",e,t,n))];case"Cosh":return[ah(I("x",e,t,n))];case"Elu":return[Rl(I("x",e,t,n))];case"Erf":return[My(I("x",e,t,n))];case"Exp":return[dn(I("x",e,t,n))];case"Expm1":return[Py(I("x",e,t,n))];case"Floor":return[Ml(I("x",e,t,n))];case"Log":return[Pn(I("x",e,t,n))];case"Log1p":return[oh(I("x",e,t,n))];case"Imag":return[sh(I("x",e,t,n))];case"Neg":return[St(I("x",e,t,n))];case"Reciprocal":return[qy(I("x",e,t,n))];case"Real":return[Dc(I("x",e,t,n))];case"Relu":return[qe(I("x",e,t,n))];case"Round":return[Ky(I("x",e,t,n))];case"Selu":return[gh(I("x",e,t,n))];case"Sigmoid":return[ca(I("x",e,t,n))];case"Sin":return[yh(I("x",e,t,n))];case"Sign":return[Xy(I("x",e,t,n))];case"Sinh":return[bh(I("x",e,t,n))];case"Softplus":return[Pl(I("x",e,t,n))];case"Sqrt":return[rn(I("x",e,t,n))];case"Square":return[ot(I("x",e,t,n))];case"Tanh":return[Dl(I("x",e,t,n))];case"Tan":return[Qy(I("x",e,t,n))];case"ClipByValue":return[Kt(I("x",e,t,n),I("clipValueMin",e,t,n),I("clipValueMax",e,t,n))];case"Relu6":return[mh(I("x",e,t,n))];case"Rsqrt":return[fh(Fn(e.inputNames[0],t,n))];case"Prod":return[dh(I("x",e,t,n),I("axes",e,t,n))];case"LeakyRelu":return[Ec(I("x",e,t,n),I("alpha",e,t,n))];case"Prelu":return[$c(I("x",e,t,n),I("alpha",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function ga(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){w.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let a=0;a<e.length;a++){let r=e[a],s=t[a];w.assert(r<0||s<0||r===s,()=>n+` Shapes ${e} and ${t} must match`)}}}function lT(e){return!(typeof e=="number"||e.some(t=>t<0))}function np(e,t,n){let a=av(e,n),r=!lT(a);if(r&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${a}`);if(r&&t.forEach(s=>{a=av(s.shape,a)}),!lT(a))throw new Error(`Non-fully-defined elementShape: ${a}`);return a}function av(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let a=0;a<e.length;++a){let r=e[a],s=t[a];if(r>=0&&s>=0&&r!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[a]=r>=0?r:s}return n}var v4=class{constructor(e,t,n,a,r,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=ve(0),qt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),ga(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,qt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,a)=>this.write(n,t[a]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let a=0;a<this.size();a++)e.push(a)}if(e.length===0)return Yn([],[0].concat(this.elementShape));let n=this.readMany(e);return ga(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Dt(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Yn([],[0].concat(this.elementShape));let t=[];for(let a=0;a<this.size();a++)t.push(a);let n=this.readMany(t);return ga(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Je(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,ut(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,a=e.map(o=>(n+=o,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=n===0?0:t.size/n,s=[];D(()=>{t=U(t,[1,n,r]);for(let o=0;o<e.length;++o){let l=o===0?0:a[o-1],c=[0,l,0],u=[1,e[o],r];s[o]=U(Be(t,c,u),this.elementShape)}return s});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}},ap=class{constructor(e,t,n,a=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(r=>{if(n!==r.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${r.dtype}`);ga(t,r.shape,"TensorList shape mismatch: "),qt(r)}),this.idTensor=ve(0),this.maxNumElements=a,qt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new ap([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);ga(e,this.elementShape,"TensorList shape mismatch: ");let a=np(this.elementShape,this.tensors,e);return D(()=>{let r=this.tensors.map(s=>U(s,a));return Dt(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=np(this.elementShape,this.tensors,e),a=this.tensors.pop();return ga(a.shape,e,"TensorList shape mismatch: "),U(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(ga(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");qt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);ga(this.tensors[e].shape,t,"TensorList shape mismatch: ");let a=np(this.elementShape,this.tensors,t);return U(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);ga(this.elementShape,t.shape,"TensorList shape mismatch: "),qt(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);ga(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let a=np(this.elementShape,this.tensors,n);return e.length===0?Yn([],[0].concat(a)):D(()=>{let r=e.map(s=>U(this.tensors[s],a));return Dt(r,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);ga(this.elementShape,t,"TensorList shape mismatch: ");let n=np(this.elementShape,this.tensors,t);return this.size()===0?Yn([],[0].concat(n)):D(()=>{let a=this.tensors.map(r=>U(r,n));return Je(a,0)})}};function w4(e,t,n){let a=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let r=e.shape.slice(1);ga(r,t,"TensorList shape mismatch: ");let s=ut(e);return new ap(s,t,a)}function k4(e,t,n){return new ap([],e,t,n)}function I4(e,t,n,a){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(a!=null&&a!==-1&&r>=a)throw new Error(`Max index must be < array size (${r}  vs. ${a})`);let s=new ap([],n,e.dtype,a),i=ut(e,0);return t.forEach((o,l)=>{s.setItem(o,i[l])}),s}function T4(e,t,n){let a=0,r=t.map(u=>(a+=u,a));if(a!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${a}, and tensor's shape is: ${e.shape}`);let s=e.shape.slice(1),i=av(s,n),o=a===0?0:e.size/a,l=D(()=>{let u=[];e=U(e,[1,a,o]);for(let p=0;p<t.length;++p){let d=p===0?0:r[p-1],h=[0,d,0],m=[1,t[p],o];u[p]=U(Be(e,h,m),i)}return e.dispose(),u}),c=new ap([],n,e.dtype,t.length);for(let u=0;u<l.length;u++)c.setItem(u,l[u]);return c}var N4=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let a=I("thenBranch",e,t,n),r=I("elseBranch",e,t,n),s=I("cond",e,t,n),i=I("args",e,t,n);return(await s.data())[0]?n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let a=I("body",e,t,n),r=I("cond",e,t,n),s=I("args",e,t,n),i=await n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map(u=>u.id),l=await i[0].data();i.forEach(u=>{!u.kept&&o.indexOf(u.id)===-1&&u.dispose()});let c=s;for(;l[0];){let u=c;c=await n.functionMap[a].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);let p=c.map(h=>h.id);u.forEach(h=>{!h.kept&&o.indexOf(h.id)===-1&&p.indexOf(h.id)===-1&&h.dispose()});let d=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);l=await d[0].data(),d.forEach(h=>{!h.kept&&o.indexOf(h.id)===-1&&p.indexOf(h.id)===-1&&h.dispose()})}return c}case"LoopCond":{let a=I("pred",e,t,n);return[Ir(a)]}case"Switch":{let a=I("pred",e,t,n),r=I("data",e,t,n);return r.kept||(r=Ir(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let a=e.inputNames.find(r=>Fn(r,t,n)!==void 0);if(a){let r=Fn(a,t,n);return[Ir(r)]}return}case"Enter":{let a=I("frameName",e,t,n),r=I("tensor",e,t,n);return n.enterFrame(a),[Ir(r)]}case"Exit":{let a=I("tensor",e,t,n);return n.exitFrame(),[Ir(a)]}case"NextIteration":{let a=I("tensor",e,t,n);return n.nextIteration(),[Ir(a)]}case"TensorArrayV3":{let a=I("size",e,t,n),r=I("dtype",e,t,n),s=I("elementShape",e,t,n),i=I("dynamicSize",e,t,n),o=I("clearAfterRead",e,t,n),l=I("identicalElementShapes",e,t,n),c=I("name",e,t,n),u=new v4(c,r,a,s,l,i,o);return n.addTensorArray(u),[u.idTensor,ve(1)]}case"TensorArrayWriteV3":{let a=I("tensorArrayId",e,t,n),r=I("index",e,t,n),s=I("tensor",e,t,n),i=n.getTensorArray(a.id);return i.write(r,s),[i.idTensor]}case"TensorArrayReadV3":{let a=I("tensorArrayId",e,t,n),r=I("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{let a=I("tensorArrayId",e,t,n),r=I("indices",e,t,n),s=I("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,s)]}case"TensorArrayScatterV3":{let a=I("tensorArrayId",e,t,n),r=I("indices",e,t,n),s=I("tensor",e,t,n),i=n.getTensorArray(a.id);return i.scatter(r,s),[i.idTensor]}case"TensorArrayConcatV3":{let a=I("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),s=I("dtype",e,t,n);return[r.concat(s)]}case"TensorArraySplitV3":{let a=I("tensorArrayId",e,t,n),r=I("tensor",e,t,n),s=I("lengths",e,t,n),i=n.getTensorArray(a.id);return i.split(s,r),[i.idTensor]}case"TensorArraySizeV3":{let a=I("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return[ve(r.size(),"int32")]}case"TensorArrayCloseV3":{let a=I("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let a=I("tensorListId",e,t,n),r=I("index",e,t,n),s=I("tensor",e,t,n),i=n.getTensorList(a.id);return i.setItem(r,s),[i.idTensor]}case"TensorListGetItem":{let a=I("tensorListId",e,t,n),r=I("index",e,t,n),s=I("elementShape",e,t,n),i=I("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let a=I("indices",e,t,n),r=I("tensor",e,t,n),s=I("elementShape",e,t,n),i=I("numElements",e,t,n),o=I4(r,a,s,i);return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let a=I("elementShape",e,t,n),r=I("elementDType",e,t,n),s;e.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=I(s,e,t,n),o=k4(a,r,i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{let a=I("tensorListId",e,t,n),r=I("indices",e,t,n),s=I("elementShape",e,t,n),i=I("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,i,s)]}case"TensorListStack":{let a=I("tensorListId",e,t,n),r=I("elementShape",e,t,n),s=I("elementDType",e,t,n),i=I("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,s,i)]}case"TensorListFromTensor":{let a=I("tensor",e,t,n),r=I("elementShape",e,t,n),s=I("elementDType",e,t,n),i=w4(a,r,s);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":{let a=I("tensorListId",e,t,n),r=n.getTensorList(a.id),s=I("dtype",e,t,n),i=I("elementShape",e,t,n);return[r.concat(s,i)]}case"TensorListPushBack":{let a=I("tensorListId",e,t,n),r=I("tensor",e,t,n),s=n.getTensorList(a.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{let a=I("tensorListId",e,t,n),r=I("elementShape",e,t,n),s=I("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,s)]}case"TensorListSplit":{let a=I("tensor",e,t,n),r=I("elementShape",e,t,n),s=I("lengths",e,t,n),i=T4(a,s,r);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function uT(e,t,n){let[a,r]=I("fusedOps",e,t,n),s=a==="biasadd",i=r==="prelu",o=a==="fusedbatchnorm",l=I("numArgs",e,t,n);if(s){if(i&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");let c=I("strides",e,t,n),u=ym(e,t,n),p=I("dataFormat",e,t,n).toUpperCase(),d=I("dilations",e,t,n),[h,m]=I("args",e,t,n),f=I("leakyreluAlpha",e,t,n);return{stride:c,pad:u,dataFormat:p,dilations:d,biasArg:h,preluArg:m,activationFunc:r,leakyreluAlpha:f}}var S4=(e,t,n)=>{switch(e.op){case"Conv1D":{let a=I("stride",e,t,n),r=I("pad",e,t,n),s=I("dataFormat",e,t,n).toUpperCase(),i=I("dilation",e,t,n);return[th(I("x",e,t,n),I("filter",e,t,n),a,r,s,i)]}case"Conv2D":{let a=I("strides",e,t,n),r=ym(e,t,n),s=I("dataFormat",e,t,n).toUpperCase(),i=I("dilations",e,t,n);return[At(I("x",e,t,n),I("filter",e,t,n),[a[1],a[2]],r,s,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:a,pad:r,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:c,leakyreluAlpha:u}=uT(e,t,n);return[ns.conv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[a[1],a[2]],pad:r,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:c,preluActivationWeights:l,leakyreluAlpha:u})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:r,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:c,leakyreluAlpha:u}=uT(e,t,n);return[ns.depthwiseConv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[a[1],a[2]],pad:r,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:c,preluActivationWeights:l,leakyreluAlpha:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=I("outputShape",e,t,n),r=I("strides",e,t,n),s=ym(e,t,n);return[nh(I("x",e,t,n),I("filter",e,t,n),a,[r[1],r[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=I("strides",e,t,n),r=ym(e,t,n),s=I("dilations",e,t,n),i=I("dataFormat",e,t,n).toUpperCase();return[Qr(I("input",e,t,n),I("filter",e,t,n),[a[1],a[2]],r,i,[s[1],s[2]])]}case"Conv3D":{let a=I("strides",e,t,n),r=I("pad",e,t,n),s=I("dataFormat",e,t,n).toUpperCase(),i=I("dilations",e,t,n);return[Ay(I("x",e,t,n),I("filter",e,t,n),[a[1],a[2],a[3]],r,s,[i[1],i[2],i[3]])]}case"AvgPool":{let a=I("strides",e,t,n),r=I("pad",e,t,n),s=I("kernelSize",e,t,n);return[Qn(I("x",e,t,n),[s[1],s[2]],[a[1],a[2]],r)]}case"MaxPool":{let a=I("strides",e,t,n),r=I("pad",e,t,n),s=I("kernelSize",e,t,n);return[$t(I("x",e,t,n),[s[1],s[2]],[a[1],a[2]],r)]}case"MaxPoolWithArgmax":{let a=I("strides",e,t,n),r=I("pad",e,t,n),s=I("kernelSize",e,t,n),i=I("includeBatchInIndex",e,t,n),{result:o,indexes:l}=wk(I("x",e,t,n),[s[1],s[2]],[a[1],a[2]],r,i);return[o,l]}case"AvgPool3D":{let a=I("strides",e,t,n),r=I("pad",e,t,n),s=I("kernelSize",e,t,n);return[_y(I("x",e,t,n),[s[1],s[2],s[3]],[a[1],a[2],a[3]],r)]}case"MaxPool3D":{let a=I("strides",e,t,n),r=I("pad",e,t,n),s=I("kernelSize",e,t,n);return[Vy(I("x",e,t,n),[s[1],s[2],s[3]],[a[1],a[2],a[3]],r)]}case"Dilation2D":{let a=I("strides",e,t,n),r=I("pad",e,t,n),s=I("dilations",e,t,n),i=a[1],o=a[2],l=s[1],c=s[2];return[Dy(I("x",e,t,n),I("filter",e,t,n),[i,o],r,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},C4=(e,t,n)=>{switch(e.op){case"Fill":{let a=I("shape",e,t,n),r=I("dtype",e,t,n),s=I("value",e,t,n);return[Cn(a,s,r)]}case"LinSpace":{let a=I("start",e,t,n),r=I("stop",e,t,n),s=I("num",e,t,n);return[mk(a,r,s)]}case"Multinomial":{let a=I("logits",e,t,n),r=I("numSamples",e,t,n),s=I("seed",e,t,n);return[kk(a,r,s)]}case"OneHot":{let a=I("indices",e,t,n),r=I("depth",e,t,n),s=I("onValue",e,t,n),i=I("offValue",e,t,n);return[Fl(a,r,s,i)]}case"Ones":return[Ka(I("shape",e,t,n),I("dtype",e,t,n))];case"OnesLike":return[On(I("x",e,t,n))];case"RandomUniform":return[zl(I("shape",e,t,n),I("minval",e,t,n),I("maxval",e,t,n),I("dtype",e,t,n))];case"Range":{let a=I("start",e,t,n),r=I("stop",e,t,n),s=I("step",e,t,n);return[hh(a,r,s,I("dtype",e,t,n))]}case"TruncatedNormal":{let a=I("shape",e,t,n),r=I("mean",e,t,n),s=I("stdDev",e,t,n),i=I("seed",e,t,n);return[kh(a,r,s,I("dtype",e,t,n),i)]}case"Zeros":return[xt(I("shape",e,t,n),I("dtype",e,t,n))];case"ZerosLike":return[Ge(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function rv(e,t,n){let a=I("boxes",e,t,n),r=I("scores",e,t,n),s=I("maxOutputSize",e,t,n),i=I("iouThreshold",e,t,n),o=I("scoreThreshold",e,t,n),l=I("softNmsSigma",e,t,n);return{boxes:a,scores:r,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}}var _4=async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:a,scores:r,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=rv(e,t,n),c=await Xa.nonMaxSuppressionWithScoreAsync(a,r,s,i,o,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:a,scores:r,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=rv(e,t,n),l=I("padToMaxOutputSize",e,t,n),c=await Xa.nonMaxSuppressionPaddedAsync(a,r,s,i,o,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:a,scores:r,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=rv(e,t,n);return[await Xa.nonMaxSuppressionAsync(a,r,s,i,o)]}case"Where":{let a=ue(I("condition",e,t,n),"bool"),r=[await tb(a)];return a.dispose(),r}case"ListDiff":return Nk(I("x",e,t,n),I("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},E4=(e,t,n)=>{switch(e.op){case"TopKV2":{let a=I("x",e,t,n),r=I("k",e,t,n),s=I("sorted",e,t,n),i=Zy(a,r,s);return[i.values,i.indices]}case"Unique":{let a=I("x",e,t,n),r=Ih(a);return[r.values,r.indices]}case"UniqueV2":{let a=I("x",e,t,n),r=I("axis",e,t,n),s=Ih(a,r);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},F4=(e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=I("default",e,t,n);return[Fn(e.name,t,n)||a];case"Placeholder":return[Fn(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=I("x",e,t,n);return[Ir(c)]}case"IdentityN":return I("x",e,t,n).map(c=>Ir(c));case"Snapshot":let r=I("x",e,t,n);return[Ir(r)];case"Shape":return[Qe(I("x",e,t,n).shape,"int32")];case"ShapeN":return I("x",e,t,n).map(c=>Qe(c.shape));case"Size":return[ve(I("x",e,t,n).size,"int32")];case"Rank":return[ve(I("x",e,t,n).rank,"int32")];case"NoOp":return[ve(1)];case"Print":let s=I("x",e,t,n),i=I("data",e,t,n),o=I("message",e,t,n),l=I("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let c=0;c<i.length;c++)console.log(Array.prototype.slice.call(i[c].dataSync()).slice(0,l));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}},A4=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ve(0),this.tensorMap=new Map,qt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ve(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(a=>a.dispose()),this.tensorMap.clear(),D(()=>{let a=ut(t),r=n.length,s=a.length;w.assert(r===s,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`);for(let i=0;i<r;i++){let o=n[i],l=a[i];qt(l),this.tensorMap.set(o,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return D(()=>{let a=[];for(let r=0;r<n.length;r++){let s=n[r],i=this.findWithDefault(s,t);a.push(i)}return Dt(a)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},$4=async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=I("keyDType",e,t,n),s=I("valueDType",e,t,n),i=new A4(r,s);return a.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let r=I("tableHandle",e,t,n,a),s=I("keys",e,t,n),i=I("values",e,t,n);return[await a.getHashTableById(r.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let r=I("tableHandle",e,t,n,a),s=I("keys",e,t,n),i=I("defaultValue",e,t,n);return[await a.getHashTableById(r.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=I("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},D4=(e,t,n)=>{switch(e.op){case"ResizeBilinear":{let a=I("images",e,t,n),r=I("size",e,t,n),s=I("alignCorners",e,t,n),i=I("halfPixelCenters",e,t,n);return[Xa.resizeBilinear(a,[r[0],r[1]],s,i)]}case"ResizeNearestNeighbor":{let a=I("images",e,t,n),r=I("size",e,t,n),s=I("alignCorners",e,t,n),i=I("halfPixelCenters",e,t,n);return[Xa.resizeNearestNeighbor(a,[r[0],r[1]],s,i)]}case"CropAndResize":{let a=I("image",e,t,n),r=I("boxes",e,t,n),s=I("boxInd",e,t,n),i=I("cropSize",e,t,n),o=I("method",e,t,n),l=I("extrapolationValue",e,t,n);return[Xa.cropAndResize(a,r,s,i,o,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},R4=(e,t,n)=>{switch(e.op){case"Equal":return[Zr(I("a",e,t,n),I("b",e,t,n))];case"NotEqual":return[_i(I("a",e,t,n),I("b",e,t,n))];case"Greater":return[pa(I("a",e,t,n),I("b",e,t,n))];case"GreaterEqual":return[es(I("a",e,t,n),I("b",e,t,n))];case"Less":return[ih(I("a",e,t,n),I("b",e,t,n))];case"LessEqual":return[Si(I("a",e,t,n),I("b",e,t,n))];case"LogicalAnd":return[da(I("a",e,t,n),I("b",e,t,n))];case"LogicalNot":return[Fc(I("a",e,t,n))];case"LogicalOr":return[ch(I("a",e,t,n),I("b",e,t,n))];case"Select":case"SelectV2":return[Sn(I("condition",e,t,n),I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},M4=(e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[ze(I("a",e,t,n),I("b",e,t,n),I("transposeA",e,t,n),I("transposeB",e,t,n))];case"Transpose":return[Ve(I("x",e,t,n),I("perm",e,t,n))];case"_FusedMatMul":let[a,r]=I("fusedOps",e,t,n),s=a==="biasadd",i=r==="prelu",o=I("numArgs",e,t,n),l=I("leakyreluAlpha",e,t,n);if(s){if(i&&o!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&o!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,u]=I("args",e,t,n);return[ns.matMul({a:I("a",e,t,n),b:I("b",e,t,n),transposeA:I("transposeA",e,t,n),transposeB:I("transposeB",e,t,n),bias:c,activation:r,preluActivationWeights:u,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},P4=(e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[fr(I("x",e,t,n),I("mean",e,t,n),I("variance",e,t,n),I("offset",e,t,n),I("scale",e,t,n),I("epsilon",e,t,n))];case"FusedBatchNormV3":return[fr(I("x",e,t,n),I("mean",e,t,n),I("variance",e,t,n),I("offset",e,t,n),I("scale",e,t,n),I("epsilon",e,t,n))];case"LRN":return[Ly(I("x",e,t,n),I("radius",e,t,n),I("bias",e,t,n),I("alpha",e,t,n),I("beta",e,t,n))];case"Softmax":return[Na(I("x",e,t,n))];case"LogSoftmax":return[uh(I("x",e,t,n))];case"SparseToDense":return[nb(I("sparseIndices",e,t,n),I("outputShape",e,t,n),I("sparseValues",e,t,n),I("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},O4=(e,t,n)=>{switch(e.op){case"Max":{let i=I("axis",e,t,n),o=I("keepDims",e,t,n);return[Zn(I("x",e,t,n),i,o)]}case"Mean":{let i=I("axis",e,t,n),o=I("keepDims",e,t,n);return[Ct(I("x",e,t,n),i,o)]}case"Min":{let i=I("axis",e,t,n),o=I("keepDims",e,t,n);return[Ol(I("x",e,t,n),i,o)]}case"Sum":{let i=I("axis",e,t,n),o=I("keepDims",e,t,n);return[Se(I("x",e,t,n),i,o)]}case"All":{let i=I("axis",e,t,n),o=I("keepDims",e,t,n);return[Zd(I("x",e,t,n),i,o)]}case"Any":{let i=I("axis",e,t,n),o=I("keepDims",e,t,n);return[Ic(I("x",e,t,n),i,o)]}case"ArgMax":{let i=I("axis",e,t,n);return[Tc(I("x",e,t,n),i)]}case"ArgMin":{let i=I("axis",e,t,n);return[vy(I("x",e,t,n),i)]}case"Prod":{let i=I("axis",e,t,n),o=I("keepDims",e,t,n);return[dh(I("x",e,t,n),i,o)]}case"Cumsum":{let i=I("axis",e,t,n),o=I("exclusive",e,t,n),l=I("reverse",e,t,n);return[rh(I("x",e,t,n),i,o,l)]}case"Bincount":let a=I("x",e,t,n),r=I("weights",e,t,n),s=I("size",e,t,n);return[ak(a,r,s)];case"DenseBincount":{let i=I("x",e,t,n),o=I("weights",e,t,n),l=I("size",e,t,n),c=I("binaryOutput",e,t,n);return[uk(i,o,l,c)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},L4=(e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=I("n",e,t,n),r=I("axis",e,t,n),s=I("tensors",e,t,n);return s=s.slice(0,a),[Je(s,r)]}case"Gather":{let a=I("x",e,t,n),r=I("indices",e,t,n);return[Ni(a,ue(r,"int32"),0)]}case"GatherV2":{let a=I("axis",e,t,n),r=I("batchDims",e,t,n),s=I("x",e,t,n),i=I("indices",e,t,n);return[Ni(s,ue(i,"int32"),a,r)]}case"Reverse":{let a=I("dims",e,t,n),r=[];for(let i=0;i<a.length;i++)a[i]&&r.push(i);let s=I("x",e,t,n);return[Ln(s,r)]}case"ReverseV2":{let a=I("axis",e,t,n),r=I("x",e,t,n);return[Ln(r,a)]}case"Slice":{let a=I("begin",e,t,n),r=I("size",e,t,n);return[Be(I("x",e,t,n),a,r)]}case"StridedSlice":{let a=I("begin",e,t,n),r=I("end",e,t,n),s=I("strides",e,t,n),i=I("beginMask",e,t,n),o=I("endMask",e,t,n),l=I("ellipsisMask",e,t,n),c=I("newAxisMask",e,t,n),u=I("shrinkAxisMask",e,t,n),p=I("x",e,t,n);return[Jy(p,a,r,s,i,o,l,c,u)]}case"Pack":return D(()=>{let a=I("axis",e,t,n),r=I("tensors",e,t,n),s=r[0].shape,i=ts(r[0]).shape,o=r.map(l=>{let c=w.arraysEqual(l.shape,s);if(!c&&!w.arraysEqual(ts(l).shape,i))throw new Error("the input tensors shape does not match");return c?l:U(l,s)});return[Dt(o,a)]});case"Unpack":{let a=I("axis",e,t,n),r=I("tensor",e,t,n);return ut(r,a)}case"Tile":{let a=I("reps",e,t,n);return[Ha(I("x",e,t,n),a)]}case"Split":case"SplitV":{let a=I("axis",e,t,n),r=I("numOrSizeSplits",e,t,n),s=I("x",e,t,n);return zn(s,r,a)}case"ScatterNd":{let a=I("indices",e,t,n),r=I("values",e,t,n),s=I("shape",e,t,n);return[Ek(a,r,s)]}case"GatherNd":{let a=I("x",e,t,n),r=I("indices",e,t,n);return[Fk(a,r)]}case"SparseToDense":{let a=I("sparseIndices",e,t,n),r=I("outputShape",e,t,n),s=I("sparseValues",e,t,n),i=I("defaultValue",e,t,n);return[nb(a,s,r,s.dtype===i.dtype?i:ue(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},z4=(e,t,n)=>{switch(e.op){case"FFT":return[Mc(I("x",e,t,n))];case"IFFT":return[Bl(I("x",e,t,n))];case"RFFT":return[Pc(I("x",e,t,n))];case"IRFFT":return[vh(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},W4=(e,t,n)=>{switch(e.op){case"Cast":return[ue(I("x",e,t,n),I("dtype",e,t,n))];case"ExpandDims":{let a=I("axis",e,t,n);return[hn(I("x",e,t,n),a)]}case"Squeeze":{let a=I("axis",e,t,n);return[ts(I("x",e,t,n),a)]}case"Reshape":return[U(I("x",e,t,n),I("shape",e,t,n))];case"MirrorPad":return[Uy(I("x",e,t,n),I("padding",e,t,n),I("mode",e,t,n))];case"PadV2":case"Pad":return[ea(I("x",e,t,n),I("padding",e,t,n),I("constantValue",e,t,n))];case"SpaceToBatchND":{let a=I("blockShape",e,t,n),r=I("paddings",e,t,n);return[Ac(I("x",e,t,n),a,r)]}case"BatchToSpaceND":{let a=I("blockShape",e,t,n),r=I("crops",e,t,n);return[Sc(I("x",e,t,n),a,r)]}case"DepthToSpace":{let a=I("blockSize",e,t,n),r=I("dataFormat",e,t,n).toUpperCase();return[$y(I("x",e,t,n),a,r)]}case"BroadcastTo":return[Cc(I("x",e,t,n),I("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function cT(e,t,n,a){let r=((s,i,o)=>{switch(s.category){case"arithmetic":return D(()=>b4(s,i,o));case"basic_math":return D(()=>x4(s,i,o));case"control":return N4(s,i,o);case"convolution":return D(()=>S4(s,i,o));case"creation":return D(()=>C4(s,i,o));case"dynamic":return _4(s,i,o);case"evaluation":return D(()=>E4(s,i,o));case"image":return D(()=>D4(s,i,o));case"graph":return D(()=>F4(s,i,o));case"logical":return D(()=>R4(s,i,o));case"matrices":return D(()=>M4(s,i,o));case"normalization":return D(()=>P4(s,i,o));case"reduction":return D(()=>O4(s,i,o));case"slice_join":return D(()=>L4(s,i,o));case"spectral":return D(()=>z4(s,i,o));case"transformation":return D(()=>W4(s,i,o));case"hash_table":return $4(s,i,o,a);case"custom":let l=WI(s.op);if(l&&l.customExecutor)return l.customExecutor(new y4(s,i,o));throw TypeError(`Custom op ${s.op} is not registered.`);default:throw TypeError(`Unknown op '${s.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return w.isPromise(r)?r.then(s=>[].concat(s)):[].concat(r)}var pT=class{constructor(e={},t={},n={},a={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function hT(e,t,n,a){let r=new Set,s=[],i=null,o=null,l=new Set,c=Object.keys(e).map(d=>Bn(d)[0]),u=[];a!=null&&(u=a.map(d=>Bn(d.name)[0]));let p=[...t];for(;p.length>0;){let d=p.pop();if((dT(d)||B4(d)||V4(d))&&i==null&&(i=d,o=i.children.map(h=>h.name).filter(h=>r.has(h))),r.add(d.name),n[d.name]==null&&c.indexOf(d.name)===-1&&u.indexOf(d.name)===-1){if(d.inputs.length===0){s.push(d.name);continue}d.inputs.forEach(h=>{l.has(h.name)||(l.add(h.name),p.push(h))})}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:s,dynamicNode:i,syncInputs:o}}function U4(e,t,n){let{usedNodes:a,inputs:r}=n,s=[],i=Object.keys(r).map(u=>Bn(u)[0]).map(u=>e.nodes[u]),o=e.initNodes;i.forEach(u=>{a.has(u.name)&&s.push(u)}),e.weights.forEach(u=>{a.has(u.name)&&s.push(u)}),o!=null&&o.forEach(u=>{a.has(u.name)&&s.push(u)});let l=new Set,c=[];for(;s.length>0;){let u=s.pop();l.add(u.name),t[u.name]||c.push(u),u.children.forEach(p=>{!l.has(p.name)&&a.has(p.name)&&p.inputs.every(d=>l.has(d.name))&&s.push(p)})}return c}var G4=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],H4=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],j4=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function dT(e){return G4.indexOf(e.op)>=0}function B4(e){return H4.indexOf(e.op)>=0}function V4(e){return j4.indexOf(e.op)>=0}var sv=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new sv(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(a=>a.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(r=>r.name).sort(),a=t.map(r=>r.name).sort();return n.join(this.SEPERATOR)+"--"+a.join(this.SEPERATOR)}compile(e,t){let n=hT(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:s}=n;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(a.length>0){let i=t.map(l=>l.name),o=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${o}]. Missing the following inputs: [${a}]`)}return U4(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let a=n.map(u=>this.graph.nodes[Bn(u)[0]]),r=t.map(u=>Bn(u)[0]),s=r.map(u=>this.graph.nodes[u]);s.length===0&&(s=this._outputs);let i=this.getCompilationKey(a,s),o=this.compiledMap.get(i);o==null&&(o=this.compile(e,s),this.compiledMap.set(i,o));let l={},c={};return D(()=>{let u=new pT(this.weightMap,l,c,this.functionExecutorMap),p=Object.assign({},this.weightMap);Object.keys(e).forEach(m=>{let[f,g]=Bn(m),y=[];y[g]=e[m],p[f]=y});let d=this.getFrozenTensorIds(p),h={};for(let m=0;m<o.length;m++){let f=o[m];if(!p[f.name]){let g=cT(f,p,u,this._resourceManager);if(w.isPromise(g))throw new Error(`The execution of the op '${f.op}' returned a promise. Please use model.executeAsync() instead.`);p[f.name]=g,this.checkTensorForDisposal(f.name,f,p,u,d,r,h)}}return this.parent==null&&u.dispose(d),t.map(m=>Fn(m,p,u))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(a=>a.id)));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,s,i){t.category==="control"||s.indexOf(e)!==-1||(n[e].forEach(o=>{o!=null&&(i[o.id]=(i[o.id]||0)+t.children.length)}),t.inputs.forEach(o=>{if(o.category!=="control"){let l=QB(o.name,n,a);l!=null&&l.forEach(c=>{if(c&&!r.has(c.id)){let u=i[c.id];u===1?(c.dispose(),delete i[c.id]):u!=null&&i[c.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,a={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));let s=new pT(this.weightMap,a,r,this.functionExecutorMap),i=await this.executeWithControlFlow(e,s,t,n),o=t.map(p=>Fn(p,i,s)),l=o.map(p=>p.id),c=Object.keys(e).map(p=>e[p].id),u=new Set([...l,...c,...this.weightIds]);return Object.keys(i).forEach(p=>{i[p].forEach(d=>{d&&!d.isDisposed&&!u.has(d.id)&&d.dispose()})}),this.parent==null&&s.dispose(u),o}async executeFunctionAsync(e,t,n){let a=e.reduce((r,s,i)=>(r[this.inputs[i].name]=s,r),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){let r=Object.keys(e),s=r.map(b=>this.graph.nodes[Bn(b)[0]]),i=n.map(b=>Bn(b)[0]),o=i.map(b=>this.graph.nodes[b]);o.length===0&&(o=this._outputs);let{usedNodes:l,missingInputs:c,dynamicNode:u,syncInputs:p}=hT(e,o,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map(b=>({node:b,contexts:t.currentContext})),h=Object.assign({},this.weightMap);Object.keys(e).forEach(b=>{let[x,v]=Bn(b),T=[];T[v]=e[b],h[x]=T});let m={},f=this.getFrozenTensorIds(h),g={};for(;d.length>0;){let b=this.processStack(s,d,t,h,g,f,i,m,l);await Promise.all(b)}u==null&&!a&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=o.filter(b=>!dT(b)&&!Fn(b.name,h,t)).map(b=>b.name);if(y.length>0){let b="";throw u!=null&&(b=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${c}]. ${b}`)}return h}processStack(e,t,n,a,r,s,i,o,l){let c=[];for(;t.length>0;){let u=t.pop();n.currentContext=u.contexts;let p="";if(u.node.op==="Enter"&&I("isConstant",u.node,a,n)&&([p]=kr(u.node.name,n)),a[u.node.name]==null){let d=cT(u.node,a,n,this._resourceManager);p||([p]=kr(u.node.name,n));let h=n.currentContext;w.isPromise(d)?c.push(d.then(m=>(a[p]=m,n.currentContext=h,this.checkTensorForDisposal(p,u.node,a,n,s,i,o),this.processChildNodes(u.node,t,n,a,r,l),m))):(a[p]=d,this.checkTensorForDisposal(p,u.node,a,n,s,i,o),this.processChildNodes(u.node,t,n,a,r,l))}else this.processChildNodes(u.node,t,n,a,r,l)}return c}processChildNodes(e,t,n,a,r,s){e.children.forEach(i=>{let[o]=kr(i.name,n);r[o]||!s.has(i.name)||(i.op==="Merge"?i.inputNames.some(l=>!!Fn(l,a,n))&&(r[o]=!0,t.push({contexts:n.currentContext,node:i})):i.inputNames.every(l=>!!Fn(l,a,n))&&(r[o]=!0,t.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[a]=Bn(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){let s=r.attrParams.shape.value,i=s.length===n.shape.length&&n.shape.every((o,l)=>s[l]===-1||s[l]===o);w.assert(i,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${s}], but was [${n.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&w.assert(n.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let a=this._signature.inputs[n];t[a.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[a]=Bn(n);return this.graph.nodes[a]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=Bn(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},q4=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},K4="?tfjs-format=file",X4="model.json",mT=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new q4}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=jt.browserHTTPRequest(e,this.loadOptions);else{let t=jt.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(jt.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let a=jt.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new sv(sT.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(a),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let r=sT.Instance.transformGraph(e.modelInitializer);this.initializer=new sv(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=jt.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Ee)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,a)=>(t[n]=e[a],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function Y4(e,t={}){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&e.load==null&&(e.endsWith("/")||(e=e+"/"),e=`${e}${X4}${K4}`);let n=new mT(e,t);return await n.load(),n}var fT="3.3.0",gT={};Le(gT,{CSVDataset:()=>bT,Dataset:()=>Jl,FileDataSource:()=>xT,TextLineDataset:()=>yT,URLDataSource:()=>vT,array:()=>J4,csv:()=>Z4,func:()=>eV,generator:()=>tV,microphone:()=>aV,version_data:()=>wT,webcam:()=>nV,zip:()=>Q4});var rV=Io(Bw()),sV=Io(Bw());function iV(e,t){return bm(e,t)}function bm(e,t,n=new Map,a=new Set){if(e==null)return null;if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse)if(Ql(e)){let s=Array.isArray(e)?[]:{};a.add(e);for(let i in e){let o=e[i],l=bm(o,t,n,a);s[i]=l}return a.delete(e),s}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,r.value),r.value}function oV(e,t=IT){return kT(e,t)}function kT(e,t,n=new Set){let a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse)if(Ql(a)){let s=Array.isArray(a)?[]:{};n.add(a);for(let i in a){let o=e.map(c=>c[i]),l=kT(o,t,n);s[i]=l}return n.delete(a),s}else throw new Error(`Can't recurse into non-iterable type: ${a}`);else return r.value}function IT(e){return e===null?null:Ql(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function TT(e,t){let n=new Map;bm(e,t,n);for(let a of Array.from(n.keys())){let r=n.get(a);if(w.isPromise(r)){let s=await r;n.set(a,s)}}return bm(e,t,n)}function Ql(e){return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof Ee))}function uV(e){return e==null||lV(e)||Array.isArray(e)||typeof e=="object"&&e instanceof Ee||w.isTypedArray(e)}function lV(e){return e===null||typeof e!="object"&&typeof e!="function"}function pV(e){return iV(e,cV)}function cV(e){return e instanceof Ee?{value:e.clone(),recurse:!1}:Ql(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var NT=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},iv=class extends NT{constructor(){super(iv.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let a=0;a<n;a++)t[a]=this.get(this.wrap(this.begin+a));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};iv.INITIAL_CAPACITY=32;function ST(e){return new dV(e)}function ov(e){return new hV(e)}function mV(e,t){return new CT(e,t)}function gV(e,t=cs.FAIL){return new fV(e,t)}var Jt=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new IV(this,e)}filter(e){return new wV(this,e)}map(e){return new kV(this,e)}mapAsync(e){return new _T(this,e)}serialMapAsync(e){return new _T(this,e).serial()}flatmap(e){return new TV(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new vV(this,e,t)}columnMajorBatch(e,t=!0,n=IT){return this.rowMajorBatch(e,t).map(a=>oV(a,n))}concatenate(e,t){return new CT(ST([this,e]),t)}take(e){return e<0||e==null?this:new xV(this,e)}skip(e){return e<0||e==null?this:new bV(this,e)}prefetch(e){return new ET(this,e)}shuffle(e,t){return new NV(this,e,t)}serial(){return new yV(this)}},dV=class extends Jt{constructor(e){super();this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:pV(e),done:!1}}},hV=class extends Jt{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},yV=class extends Jt{constructor(e){super();this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},bV=class extends Jt{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Ae(e.value)}return this.upstream.next()}},xV=class extends Jt{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},vV=class extends Jt{constructor(e,t,n=!0){super();this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},wV=class extends Jt{constructor(e,t){super();this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Ae(e.value)}}},kV=class extends Jt{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ia.getTensorsInContainer(e.value),n=this.transform(e.value),a=Ia.getTensorsInContainer(n);for(let r of t)Ia.isTensorInList(r,a)||r.dispose();return{value:n,done:!1}}},IV=class extends Jt{constructor(e,t){super();this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},_T=class extends Jt{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ia.getTensorsInContainer(e.value),n=await this.transform(e.value),a=Ia.getTensorsInContainer(n);for(let r of t)Ia.isTensorInList(r,a)||r.dispose();return{value:n,done:!1}}},lv=class extends Jt{constructor(){super();this.outputQueue=new iv,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},TV=class extends lv{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Ia.getTensorsInContainer(e.value),n=this.transform(e.value),a=Ia.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let r of t)Ia.isTensorInList(r,a)||r.dispose();return!0}},CT=class extends Jt{constructor(e,t){super();this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},cs;(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(cs||(cs={}));var fV=class extends Jt{constructor(e,t=cs.FAIL){super();this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function a(s){return s instanceof Jt?{value:s.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let r=await TT(this.iterators,a);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case cs.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case cs.SHORTEST:return{value:null,done:!0};case cs.LONGEST:default:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},ET=class extends Jt{constructor(e,t){super();this.upstream=e,this.bufferSize=t,this.buffer=new NT(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},NV=class extends ET{constructor(e,t,n){super(e,t);this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=sV.alea(n||w.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},Jl=class{constructor(){this.size=null}batch(e,t=!0){let n=this;w.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let a;return this.size===Infinity||this.size==null?a=this.size:t?a=Math.ceil(this.size/e):a=Math.floor(this.size/e),Vn(async()=>(await n.iterator()).columnMajorBatch(e,t,SV),a)}concatenate(e){let t=this,n;return this.size===Infinity||e.size===Infinity?n=Infinity:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,Vn(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===Infinity?n=Infinity:n=null,Vn(async()=>(await t.iterator()).filter(a=>D(()=>e(a))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Vn(async()=>(await t.iterator()).map(n=>D(()=>e(n))),this.size)}mapAsync(e){let t=this;return Vn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Vn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=Infinity:n=null,Vn(async()=>{let a=ov(async()=>({value:await t.iterator(),done:!1}));return mV(a.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,Vn(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let a=this,r=rV.alea(t||w.now().toString());return Vn(async()=>{let s=r.int32();return n&&(s+=r.int32()),(await a.iterator()).shuffle(e,s.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,Vn(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===Infinity)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===Infinity)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Jl.MAX_BUFFER_SIZE=1e4;function Vn(e,t=null){return new class extends Jl{constructor(){super(...arguments);this.size=t}async iterator(){return e()}}}function J4(e){return Vn(async()=>ST(e),e.length)}function Q4(e){if(!Ql(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return Vn(async()=>{let n=await TT(e,a=>{if(a instanceof Jl)return{value:a.iterator(),recurse:!1};if(Ql(a))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return gV(n,cs.SHORTEST)},t)}function SV(e){if(e===null)return null;let t=e[0];return uV(t)?{value:CV(e),recurse:!1}:{value:null,recurse:!0}}function CV(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ee?Dt(e):Yn(e)}var yT=class extends Jl{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}},xm='"',rp=Symbol("out"),FT=Symbol("field"),vm=Symbol("quote"),uv=Symbol("quoteafterquote"),AT=Symbol("quoteinquote"),bT=class extends Jl{constructor(e,t){super();this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new yT(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(w.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&w.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((a,r)=>(a[r]=a[r]+1||1,a),{}),n=Object.keys(t).filter(a=>t[a]>1);if(w.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let a of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(a)===-1)throw new Error('The key "'+a+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},a={};for(let r=0;r<this.fullColumnNames.length;r++){let s=this.fullColumnNames[r],i=this.columnConfigs?this.columnConfigs[s]:null;if(!(this.configuredColumnsOnly&&!i)){let o=t[r],l=null;if(o==="")if(i&&i.default!==void 0)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let c=Number(o);if(isNaN(c))i&&i.dtype==="bool"?l=this.getBoolean(o):l=o;else if(!i||!i.dtype)l=c;else switch(i.dtype){case"float32":l=c;break;case"int32":l=Math.floor(c);break;case"bool":l=this.getBoolean(o);break;default:l=c}}i&&i.isLabel?a[s]=l:n[s]=l}}return Object.keys(a).length===0?n:{xs:n,ys:a}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],a=0,r=e.length,s=rp;for(let i=0;i<r;i++)switch(s){case rp:switch(e.charAt(i)){case xm:a=i+1,s=vm;break;case this.delimiter:if(a=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),s=rp;break;default:s=FT,a=i;break}break;case FT:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(a,i)),s=rp,a=i+1;break;default:}break;case vm:switch(e.charAt(i)){case xm:s=uv;break;default:}break;case uv:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(a,i-1)),s=rp,a=i+1;break;case xm:s=vm;break;default:s=AT;break}break;case AT:switch(e.charAt(i)){case xm:s=vm;break;default:}break;default:}if(s===uv?n.push(e.substring(a,r-1)):n.push(e.substring(a)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},$T=class extends Jt{constructor(e){super();this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Z().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new $T(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let a=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(a,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let a=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(a,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(a=>{let r=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-Infinity&&a({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),a({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((a,r)=>n.set(a,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(w.sizeFromShape(t));return n.set(e,n.length-e.length),Yn(n,t)}},DT=class extends Jt{constructor(e,t){super();if(this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Qe([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,a=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,r=(1-n)/2,s=(1-a)/2,i=r+n,o=a+s;this.cropBox=Sa([s,r,o,i],[1,4])}else this.cropBox=Sa([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Z().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new DT(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&w.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=ki.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return D(()=>{let t=hn(ue(e,"float32"),0),n;n=Xa.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let a=n.shape;return U(n,a.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},RT=class{},MT=class extends Jt{split(e){return new _V(this,e)}},_V=class extends MT{constructor(e,t){super();this.upstream=e,this.impl=new EV(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},EV=class extends lv{constructor(e,t){super();this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},AV=class extends Jt{decodeUTF8(){return new FV(this)}},FV=class extends MT{constructor(e){super();this.upstream=e,this.impl=new $V(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},$V=class extends lv{constructor(e){super();if(this.upstream=e,Z().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=Y_();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return Z().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},PT=class extends AV{constructor(e,t={}){super();this.file=e,this.options=t,w.assert(e instanceof Uint8Array||(Z().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let a=new FileReader;a.onload=s=>{let i=a.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(i)},a.onabort=s=>t(new Error("Aborted")),a.onerror=s=>t(new Error(s.type));let r=this.file.slice(this.offset,n);a.readAsArrayBuffer(r)}this.offset=n}),done:!1}}};async function RV(e,t={}){let n,a;typeof e=="string"?n=e:(n=e.url,a=DV(e));let r=await w.fetch(n,a);if(r.ok){let s=new Uint8Array(await r.arrayBuffer());return new PT(s,t)}else throw new Error(r.statusText)}var DV=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function OT(e){return typeof e=="string"&&e.substr(0,7)==="file://"}var xT=class extends RT{constructor(e,t={}){super();this.input=e,this.options=t}async iterator(){if(OT(this.input)&&Z().get("IS_NODE")){let e=require("fs");this.input=e.readFileSync(this.input.substr(7))}return new PT(this.input,this.options)}},vT=class extends RT{constructor(e,t={}){super();this.url=e,this.fileOptions=t}async iterator(){return OT(this.url)?new xT(this.url,this.fileOptions).iterator():RV(this.url,this.fileOptions)}};function Z4(e,t={}){return new bT(new vT(e),t)}function eV(e){let t=ov(e);return Vn(async()=>t)}function tV(e){return Vn(async()=>{let t=await e();return ov(()=>t.next())})}async function nV(e,t){return DT.create(e,t)}async function aV(e){return $T.create(e)}var wT="3.3.0";function xe(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var MV=Ya.whereImpl,cv=class extends ju{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new rd(this,Ua())}nextDataId(){return cv.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Z().get("IS_NODE")&&_.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let r=n.map(s=>w.encodeString(s));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let a=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return _.mergeRealAndImagArrays(a,r)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(a=>w.decodeString(a))}catch(a){throw new Error("Failed to decode encoded string bytes into utf-8")}return Me(e.shape,e.dtype,n)}makeOutput(e,t,n){let a=this.write(e,t,n);return Ua().makeTensorFromDataId(a,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){xe([e],"where");let t=this.readSync(e.dataId);return MV(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};cv.nextDataId=0;var LT={};Le(LT,{addImpl:()=>WT,bincountImpl:()=>pv,bincountReduceImpl:()=>BT,ceilImpl:()=>VT,concatImpl:()=>UT,expImpl:()=>GT,expm1Impl:()=>HT,floorImpl:()=>jT,gatherV2Impl:()=>qT,greaterImpl:()=>KT,lessImpl:()=>XT,linSpaceImpl:()=>YT,logImpl:()=>JT,maxImpl:()=>QT,maximumImpl:()=>ZT,minimumImpl:()=>e2,multiplyImpl:()=>dv,negImpl:()=>t2,notEqualImpl:()=>n2,prodImpl:()=>a2,rangeImpl:()=>r2,rsqrtImpl:()=>s2,simpleAbsImpl:()=>zT,sliceImpl:()=>i2,squaredDifferenceImpl:()=>o2,stridedSliceImpl:()=>l2,subImpl:()=>u2,tileImpl:()=>c2,topKImpl:()=>p2,transposeImpl:()=>hv,uniqueImpl:()=>d2});function zT(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var PV=e=>{let{x:t}=e.inputs,n=e.backend;xe(t,"abs");let a=new Float32Array(w.sizeFromShape(t.shape)),r=n.data.get(t.dataId).values;return a=zT(r),n.makeOutput(a,t.shape,"float32")},OV={kernelName:So,backendName:"cpu",kernelFunc:PV};function Mt(e){return(t,n,a,r,s)=>{let i=_.assertAndGetBroadcastShape(t,n),o=i.length,l=w.computeStrides(i),c=w.sizeFromShape(i),u=w.getTypedArrayFromDType(s,c),p=t.length,d=n.length,h=w.computeStrides(t),m=w.computeStrides(n),f=_.getBroadcastDims(t,i),g=_.getBroadcastDims(n,i);if(f.length+g.length===0)for(let y=0;y<u.length;++y)u[y]=e(a[y%a.length],r[y%r.length]);else for(let y=0;y<u.length;++y){let b=w.indexToLoc(y,o,l),x=b.slice(-p);f.forEach(S=>x[S]=0);let v=w.locToIndex(x,p,h),T=b.slice(-d);g.forEach(S=>T[S]=0);let k=w.locToIndex(T,d,m);u[y]=e(a[v],r[k])}return[u,i]}}function Un(e){let{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(a.shape,"complex64"),l=n.data.get(o.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",i)},o}var LV={kernelName:hd,backendName:"cpu",kernelFunc:Un};function wm(e,t,n="float32"){if(n==="complex64"){let r=wm(e,t,"float32"),s=wm(e,t,"float32");return Un({inputs:{real:r,imag:s},backend:e})}let a=w.makeZerosTypedArray(w.sizeFromShape(t),n);return e.makeTensorInfo(t,n,a)}function nr(e){let{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}var zV={kernelName:Bs,backendName:"cpu",kernelFunc:nr};function Bi(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}var WV={kernelName:Dd,backendName:"cpu",kernelFunc:Bi};function ps(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:s}=a;if(s==="complex64"){if(r.dtype==="complex64")return nr({inputs:{x:r},backend:n});let i=wm(n,r.shape,r.dtype),o=ps({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=Un({inputs:{real:o,imag:i},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}if(r.dtype==="complex64"){let i=Bi({inputs:{input:r},backend:n}),o=ps({inputs:{x:i},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(i),o}if(!w.hasEncodingLoss(r.dtype,s)){let i=nr({inputs:{x:r},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32"){let i=n.data.get(r.dataId).values,o=Int32Array.from(i);return n.makeTensorInfo(r.shape,"int32",o)}if(s==="bool"){let i=n.data.get(r.dataId).values,o=w.toTypedArray([0],r.dtype),[l,c]=Mt((u,p)=>u!==p?1:0)(r.shape,[],i,o,"bool");return n.makeTensorInfo(c,"bool",l)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${s}`)}var BV={kernelName:_s,backendName:"cpu",kernelFunc:ps};function Qt(e,t,n,a){return n==null?({inputs:r,backend:s})=>{let{a:i,b:o}=r,l=s;xe([i,o],e);let c=l.data.get(i.dataId).values,u=l.data.get(o.dataId).values,p=a||i.dtype,[d,h]=t(i.shape,o.shape,c,u,p);return l.makeTensorInfo(h,p,d)}:({inputs:r,backend:s})=>{let{a:i,b:o}=r,l=s;if(i.dtype==="complex64"||o.dtype==="complex64"){let c=ps({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),p=u.complexTensorInfos.real,d=u.complexTensorInfos.imag,h=l.data.get(p.dataId).values,m=l.data.get(d.dataId).values,f=ps({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(f.dataId),y=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,x=l.data.get(y.dataId).values,v=l.data.get(b.dataId).values,[T,k,S]=n(i.shape,o.shape,h,m,x,v),F=l.makeTensorInfo(S,"float32",T),A=l.makeTensorInfo(S,"float32",k),R=Un({inputs:{real:F,imag:A},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(f),l.disposeIntermediateTensorInfo(F),l.disposeIntermediateTensorInfo(A),R}else{let c=l.data.get(i.dataId).values,u=l.data.get(o.dataId).values,p=a||i.dtype,[d,h]=t(i.shape,o.shape,c,u,p);return l.makeTensorInfo(h,p,d)}}}function mv(e){return(t,n,a,r,s,i)=>{let o=_.assertAndGetBroadcastShape(t,n),l=w.sizeFromShape(o),c=o.length,u=w.computeStrides(o),p=w.getTypedArrayFromDType("float32",l),d=w.getTypedArrayFromDType("float32",l),h=_.getBroadcastDims(t,o),m=_.getBroadcastDims(n,o),f=_.mergeRealAndImagArrays(a,r),g=_.mergeRealAndImagArrays(s,i),y=t.length,b=w.computeStrides(t),x=n.length,v=w.computeStrides(n);if(h.length+m.length===0)for(let T=0;T<p.length;T++){let k=T%f.length,S=T%g.length,F=e(f[k*2],f[k*2+1],g[S*2],g[S*2+1]);p[T]=F.real,d[T]=F.imag}else for(let T=0;T<p.length;T++){let k=w.indexToLoc(T,c,u),S=k.slice(-y);h.forEach(z=>S[z]=0);let F=w.locToIndex(S,y,b),A=k.slice(-x);m.forEach(z=>A[z]=0);let R=w.locToIndex(A,x,v),P=e(f[F*2],f[F*2+1],g[R*2],g[R*2+1]);p[T]=P.real,d[T]=P.imag}return[p,d,o]}}var WT=Mt((e,t)=>e+t),VV=mv((e,t,n,a)=>({real:e+n,imag:t+a})),sp=Qt(Br,WT,VV),UV={kernelName:Br,backendName:"cpu",kernelFunc:sp};function pv(e,t,n,a,r){let s=w.sizeFromShape(a),i=w.makeZerosTypedArray(r,n);for(let o=0;o<e.length;o++){let l=e[o];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(s>0?i[l]+=t[o]:i[l]+=1)}return i}function BT(e,t,n,a=!1){let r=e.shape[0],s=e.shape[1],i=Me([r,n],t.dtype);for(let o=0;o<r;o++)for(let l=0;l<s;l++){let c=e.get(o,l);if(c<0)throw new Error("Input x must be non-negative!");c>=n||(a?i.set(1,o,c):t.size>0?i.set(i.get(o,c)+t.get(o,l),o,c):i.set(i.get(o,c)+1,o,c))}return i}function Zl(e){return(t,n,a)=>{let r=w.getTypedArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)r[s]=e(t[s],a);return r}}function st(e,t,n){return({inputs:a,attrs:r,backend:s})=>{let{x:i}=a;if(xe(i,e),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,c=w.sizeFromShape(i.shape),u=n||i.dtype,p=w.getArrayFromDType(u,c);for(let d=0;d<c;++d)p[d]=t(l[d],r);return o.makeTensorInfo(i.shape,u,p)}}function eu(e,t,n){return({inputs:a,attrs:r,backend:s})=>{let{x:i}=a;if(xe(i,e),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,c=n||i.dtype,u=t(l,c,r);return o.makeTensorInfo(i.shape,c,u)}}var VT=Zl(e=>Math.ceil(e)),GV=eu(Es,VT),HV={kernelName:Es,backendName:"cpu",kernelFunc:GV};function UT(e,t,n,a){let r=w.getArrayFromDType(n,w.sizeFromShape(t));if(a&&n!=="string"){let s=0;e.forEach(i=>{let o=w.sizeFromShape(i.shape);r.set(i.vals,s),s+=o})}else{let s=0;e.forEach(i=>{let o=n==="string"?_.fromUint8ToStringArray(i.vals):i.vals,l=0;for(let c=0;c<i.shape[0];++c){let u=c*t[1]+s;for(let p=0;p<i.shape[1];++p)r[u+p]=o[l++]}s+=i.shape[1]})}return r}var GT=Zl(e=>Math.exp(e)),h2=eu(Ps,GT),jV={kernelName:Ps,backendName:"cpu",kernelFunc:h2},HT=Zl(e=>Math.expm1(e)),qV=eu(Vo,HT),KV={kernelName:Vo,backendName:"cpu",kernelFunc:qV},jT=Zl(e=>Math.floor(e)),XV=eu(Os,jT),YV={kernelName:Os,backendName:"cpu",kernelFunc:XV};function qT(e,t,n){let a=Me(n,e.dtype);for(let r=0;r<a.size;++r){let s=a.indexToLoc(r).slice(),i=s[0],o=s[2],l=t.locToIndex([i,o]);s[2]=t.values[l];let c=e.locToIndex(s);a.values[r]=e.values[c]}return a}var KT=Mt((e,t)=>e>t?1:0),JV=Qt(jo,KT,null,"bool"),QV={kernelName:jo,backendName:"cpu",kernelFunc:JV},XT=Mt((e,t)=>e<t?1:0),ZV=Qt(Yo,XT,null,"bool"),eU={kernelName:Yo,backendName:"cpu",kernelFunc:ZV};function YT(e,t,n){let a=(t-e)/(n-1),r=w.makeZerosTypedArray(n,"float32");r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+a;return r}var JT=Zl(e=>Math.log(e)),tU=eu(Us,JT),nU={kernelName:Us,backendName:"cpu",kernelFunc:tU};function QT(e,t,n,a){let r=w.getTypedArrayFromDType(a,w.sizeFromShape(n));for(let s=0;s<r.length;++s){let i=s*t,o=e[i];for(let l=0;l<t;++l){let c=e[i+l];c>o&&(o=c)}r[s]=o}return r}var ZT=Mt((e,t)=>Math.max(e,t)),aU=Qt(Hs,ZT),rU={kernelName:Hs,backendName:"cpu",kernelFunc:aU},e2=Mt((e,t)=>Math.min(e,t)),sU=Qt(Xs,e2),iU={kernelName:Xs,backendName:"cpu",kernelFunc:sU},dv=Mt((e,t)=>e*t),oU=mv((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n})),fv=Qt(Ys,dv,oU),lU={kernelName:Ys,backendName:"cpu",kernelFunc:fv};function t2(e,t,n){let a=w.createScalarValue(-1,n);return dv([],t,a,e,n)}function uU(e){let{inputs:t,backend:n}=e,{x:a}=t;xe(a,"neg");let r=n.data.get(a.dataId).values,[s,i]=t2(r,a.shape,a.dtype);return n.makeTensorInfo(i,a.dtype,s)}var cU={kernelName:tl,backendName:"cpu",kernelFunc:uU},n2=Mt((e,t)=>e!==t?1:0),pU=Qt(nl,n2,null,"bool"),dU={kernelName:nl,backendName:"cpu",kernelFunc:pU};function hv(e,t,n,a,r){let s=t.length,i=w.sizeFromShape(t),o=w.computeStrides(t),l=w.computeStrides(r),c=w.getTypedArrayFromDType(n,w.sizeFromShape(r));for(let u=0;u<i;++u){let p=w.indexToLoc(u,s,o),d=new Array(p.length);for(let m=0;m<d.length;m++)d[m]=p[a[m]];let h=w.locToIndex(d,s,l);c[h]=e[u]}return c}function ya(e){let{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:s}=n;xe(r,"transpose");let i=r.shape.length,o=new Array(i);for(let u=0;u<o.length;u++)o[u]=r.shape[s[u]];let l=a.data.get(r.dataId).values,c=hv(l,r.shape,r.dtype,s,o);return{dataId:a.write(c,o,r.dtype),shape:o,dtype:r.dtype}}var hU={kernelName:fi,backendName:"cpu",kernelFunc:ya};function a2(e,t,n,a){let[r,s]=_.computeOutAndReduceShapes(e,a),i=ua(t,"int32"),o=w.makeZerosTypedArray(w.sizeFromShape(r),i),l=w.sizeFromShape(s);for(let c=0;c<o.length;++c){let u=c*l,p=1;for(let d=0;d<l;++d)p*=n[u+d];o[c]=p}return{outVals:o,outShape:r,outDtype:i}}function mU(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;xe(r,"prod");let o=r.shape.length,l=w.parseAxisParam(s,r.shape),c=_.getAxesPermutation(l,o),u=l,p=r,d=[];c!=null&&(p=ya({inputs:{x:r},backend:n,attrs:{perm:c}}),d.push(p),u=_.getInnerMostAxes(u.length,o));let h=n.data.get(p.dataId).values,{outVals:m,outShape:f,outDtype:g}=a2(p.shape,p.dtype,h,u),y=f;return i&&(y=_.expandShapeToKeepDim(f,l)),d.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.makeTensorInfo(y,g,m)}var fU={kernelName:ll,backendName:"cpu",kernelFunc:mU};function r2(e,t,n,a){let r=e===t,s=e<t&&n<0,i=t<e&&n>1;if(r||s||i)return w.makeZerosTypedArray(0,a);let o=Math.abs(Math.ceil((t-e)/n)),l=w.makeZerosTypedArray(o,a);t<e&&n===1&&(n=-1),l[0]=e;for(let c=1;c<l.length;c++)l[c]=l[c-1]+n;return l}var s2=Zl(e=>1/Math.sqrt(e)),gU=eu(ii,s2),yU={kernelName:ii,backendName:"cpu",kernelFunc:gU};function i2(e,t,n,a,r){let s=an.isSliceContinous(a,t,n),i=w.sizeFromShape(n),o=w.computeStrides(a);if(s){let p=an.computeFlatOffset(t,o);return r==="string"?e.slice(p,p+i):e.subarray(p,p+i)}let l=r==="string"?_.fromUint8ToStringArray(e):e,c=Me(a,r,l),u=Me(n,r);for(let p=0;p<u.size;++p){let d=u.indexToLoc(p),h=d.map((m,f)=>m+t[f]);u.set(c.get(...h),...d)}return r==="string"?_.fromStringArrayToUint8(u.values):u.values}function Vi(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a;xe(r,"slice");let[o,l]=an.parseSliceParams(r,s,i);an.assertParamsValid(r,o,l);let c=n.data.get(r.dataId).values,u=i2(c,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}var bU={kernelName:ml,backendName:"cpu",kernelFunc:Vi},o2=Mt((e,t)=>{let n=e-t;return n*n}),xU=Qt(di,o2),vU={kernelName:di,backendName:"cpu",kernelFunc:xU};function l2(e,t,n,a){let r=Me(e,t.dtype);for(let s=0;s<r.size;s++){let i=r.indexToLoc(s),o=new Array(i.length);for(let l=0;l<o.length;l++)o[l]=i[l]*n[l]+a[l];r.set(t.get(...o),...i)}return r}var u2=Mt((e,t)=>e-t),wU=mv((e,t,n,a)=>({real:e-n,imag:t-a})),gv=Qt(hi,u2,wU),kU={kernelName:hi,backendName:"cpu",kernelFunc:gv};function c2(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let a=Me(n,e.dtype);for(let r=0;r<a.values.length;++r){let s=a.indexToLoc(r),i=new Array(e.rank);for(let l=0;l<i.length;l++)i[l]=s[l]%e.shape[l];let o=e.locToIndex(i);a.values[r]=e.values[o]}return a}function p2(e,t,n,a,r){let s=t[t.length-1],[i,o]=[e.length/s,s],l=w.getTypedArrayFromDType(n,i*a),c=w.getTypedArrayFromDType("int32",i*a);for(let p=0;p<i;p++){let d=p*o,h=e.subarray(d,d+o),m=[];for(let b=0;b<h.length;b++)m.push({value:h[b],index:b});m.sort((b,x)=>x.value-b.value);let f=p*a,g=l.subarray(f,f+a),y=c.subarray(f,f+a);for(let b=0;b<a;b++)g[b]=m[b].value,y[b]=m[b].index}let u=t.slice();return u[u.length-1]=a,[Me(u,n,l),Me(u,"int32",c)]}function d2(e,t,n,a){let r=w.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let m=0;m<r;m++)s[0]*=n[m];s[1]=n[r];for(let m=r+1;m<n.length;m++)s[2]*=n[m];let i={},o=new Int32Array(n[r]),l=new Lt(s,a,e),c=[],u=s[0]===1&&s[2]===1;for(let m=0;m<n[r];m++){let f;if(u)f=e[m].toString();else{let g=[];for(let y=0;y<s[0];y++)for(let b=0;b<s[2];b++)g.push(l.get(y,m,b));f=g.join(",")}if(i[f]!==void 0)o[m]=i[f];else{let g=Object.keys(i).length;i[f]=g,o[m]=g,c.push(m)}}let p=s.slice();p[1]=Object.keys(i).length;let d=new Lt(p,a);c.forEach((m,f)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)d.set(l.get(g,m,y),g,f,y)});let h=n.slice();return h[r]=p[1],{outputValues:d.values,outputShape:h,indices:o}}var IU="3.3.0";Jd("cpu",()=>new cv,1);var m2=st(Lo,e=>e>=0?e:Math.exp(e)-1),TU={kernelName:Lo,backendName:"cpu",kernelFunc:m2};function f2(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a;xe([r],"leakyRelu");let i=w.sizeFromShape(r.shape),o=n.data.get(r.dataId).values,l=w.getTypedArrayFromDType("float32",i);for(let c=0;c<o.length;c++)l[c]=o[c]<0?s*o[c]:o[c];return n.makeTensorInfo(r.shape,"float32",l)}var NU={kernelName:Vs,backendName:"cpu",kernelFunc:f2},SU=Mt((e,t)=>e<0?t*e:e);function g2(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t;xe([a,r],"prelu");let s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,[o,l]=SU(a.shape,r.shape,s,i,a.dtype);return n.makeTensorInfo(l,a.dtype,o)}var CU={kernelName:ei,backendName:"cpu",kernelFunc:g2},y2=st(ti,e=>Math.max(0,e)),_U={kernelName:ti,backendName:"cpu",kernelFunc:y2},b2=st(ai,e=>Math.min(Math.max(0,e),6)),EU={kernelName:ai,backendName:"cpu",kernelFunc:b2};function yv(e,t,n,a,r){if(n==="linear")return nr({inputs:{x:t},backend:e});if(n==="relu")return y2({inputs:{x:t},backend:e});if(n==="elu")return m2({inputs:{x:t},backend:e});if(n==="relu6")return b2({inputs:{x:t},backend:e});if(n==="prelu")return g2({inputs:{x:t,alpha:a},backend:e});if(n==="leakyrelu")return f2({inputs:{x:t},backend:e,attrs:{alpha:r}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function kt(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,i=w.sizeFromShape(r.shape),o=w.inferFromImplicitShape(s,i),l=w.sizeFromShape(o);w.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);let c=n.data.get(r.dataId);if(c.complexTensorInfos!=null){let u=c.complexTensorInfos.real,p=c.complexTensorInfos.imag;u.shape=o,p.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}var FU={kernelName:cl,backendName:"cpu",kernelFunc:kt};function x2(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;xe([r,s],"matMul");let l=r.shape.length,c=s.shape.length,u=i?r.shape[l-2]:r.shape[l-1],p=o?s.shape[c-1]:s.shape[c-2],d=i?r.shape[l-1]:r.shape[l-2],h=o?s.shape[c-2]:s.shape[c-1],m=r.shape.slice(0,-2),f=s.shape.slice(0,-2),g=w.sizeFromShape(m),y=w.sizeFromShape(f),b=g===y||g===1||y===1;w.assert(l>=2&&c>=2&&b,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${f}).`);let x=(g>y?r.shape.slice(0,-2):s.shape.slice(0,-2)).concat([d,h]);w.assert(u===p,()=>`Error in matMul: inner shapes (${u}) and (${p}) of Tensors with shapes ${r.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let v=i?[g,u,d]:[g,d,u],T=o?[y,h,p]:[y,p,h],k=kt({inputs:{x:r},backend:n,attrs:{shape:v}}),S=kt({inputs:{x:s},backend:n,attrs:{shape:T}}),F=i?k.shape[1]:k.shape[2],A=i?k.shape[2]:k.shape[1],R=o?S.shape[1]:S.shape[2],P=Math.max(g,y),z=n.data.get(k.dataId).values,V=n.data.get(S.dataId).values,G=w.computeStrides(k.shape),H=w.computeStrides(S.shape),[K,j,te]=i?[G[0],1,G[1]]:[G[0],G[1],1],[Q,se,ne]=o?[1,H[1],H[0]]:[H[1],1,H[0]],ie=A*R,ee=Me([P,A,R],k.dtype),pe=ee.values,oe=n.blockSize;for(let fe=0;fe<P;fe++)for(let me=0;me<A;me+=oe)for(let we=0;we<R;we+=oe)for(let Te=0;Te<F;Te+=oe){let _e=Math.min(me+oe,A),Re=Math.min(we+oe,R),Fe=Math.min(Te+oe,F);for(let tt=me;tt<_e;tt++)for(let nt=we;nt<Re;nt++){let it=0;for(let Xe=Te;Xe<Fe;Xe++){let mt=Math.min(fe,g-1)*K,We=Math.min(fe,y-1)*ne,wn=z[mt+tt*j+Xe*te],It=V[Xe*Q+nt*se+We];it+=wn*It}pe[fe*ie+(tt*R+nt)]+=it}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(S),n.makeTensorInfo(x,ee.dtype,ee.values)}var AU={kernelName:Cs,backendName:"cpu",kernelFunc:x2};function $U(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:p}=a,d,h,m,f=[];d=x2({inputs:{a:r,b:s},attrs:{transposeA:l,transposeB:c},backend:n}),i&&(h=sp({inputs:{a:d,b:i},backend:n}),f.push(d),d=h),u&&(m=yv(n,d,u,o,p),f.push(d),d=m);for(let g of f)n.disposeIntermediateTensorInfo(g);return d}var DU={kernelName:gi,backendName:"cpu",kernelFunc:$U},RU=st(Co,e=>Math.acos(e)),MU={kernelName:Co,backendName:"cpu",kernelFunc:RU},PU=st(_o,e=>Math.acosh(e)),OU={kernelName:_o,backendName:"cpu",kernelFunc:PU};function LU(e){let{inputs:t,backend:n}=e,a=t;xe(t,"addN");let r=a.map(o=>n.data.get(o.dataId).values),s=Me(a[0].shape,a[0].dtype),i=s.values;for(let o=0;o<a.length;o++){let l=r[o];for(let c=0;c<i.length;c++)i[c]+=l[c]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}var zU={kernelName:Ts,backendName:"cpu",kernelFunc:LU};function WU(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;xe(r,"all");let o=w.parseAxisParam(s,r.shape),l=o,c=_.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=ya({inputs:{x:r},backend:n,attrs:{perm:c}}),l=_.getInnerMostAxes(l.length,r.shape.length)),_.assertAxesAreInnerMostDims("all",l,u.shape.length);let[p,d]=_.computeOutAndReduceShapes(u.shape,l),h=w.sizeFromShape(d),m=w.makeZerosTypedArray(w.sizeFromShape(p),u.dtype),f=n.data.get(u.dataId).values;for(let y=0;y<m.length;++y){let b=y*h,x=f[b];for(let v=0;v<h;++v){let T=f[b+v];x=x&&T}m[y]=x}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(p,u.dtype,m);if(i){let y=_.expandShapeToKeepDim(p,o),b=kt({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var BU={kernelName:ld,backendName:"cpu",kernelFunc:WU};function VU(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;xe(r,"any");let o=w.parseAxisParam(s,r.shape),l=o,c=_.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=ya({inputs:{x:r},backend:n,attrs:{perm:c}}),l=_.getInnerMostAxes(l.length,r.shape.length)),_.assertAxesAreInnerMostDims("any",l,u.shape.length);let[p,d]=_.computeOutAndReduceShapes(u.shape,l),h=w.sizeFromShape(d),m=w.makeZerosTypedArray(w.sizeFromShape(p),u.dtype),f=n.data.get(u.dataId).values;for(let y=0;y<m.length;++y){let b=y*h,x=f[b];for(let v=0;v<h;++v){let T=f[b+v];x=x||T}m[y]=x}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(p,u.dtype,m);if(i){let y=_.expandShapeToKeepDim(p,o),b=kt({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var UU={kernelName:ud,backendName:"cpu",kernelFunc:VU};function GU(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;xe(r,"argMax");let i=w.parseAxisParam(s,r.shape),o=_.getAxesPermutation(i,r.shape.length),l=r,c=[];o!=null&&(l=ya({inputs:{x:r},backend:n,attrs:{perm:o}}),c.push(l),i=_.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],_.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[u,p]=_.computeOutAndReduceShapes(l.shape,i),d=w.sizeFromShape(u),h=w.makeZerosTypedArray(d,"int32"),m=w.sizeFromShape(p),f=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let y=g*m,b=f[y],x=0;for(let v=0;v<m;++v){let T=f[y+v];T>b&&(b=T,x=v)}h[g]=x}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",h)}var HU={kernelName:Ns,backendName:"cpu",kernelFunc:GU};function jU(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;xe(r,"argMin");let i=w.parseAxisParam(s,r.shape),o=_.getAxesPermutation(i,r.shape.length),l=r,c=[];o!=null&&(l=ya({inputs:{x:r},backend:n,attrs:{perm:o}}),c.push(l),i=_.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],_.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[u,p]=_.computeOutAndReduceShapes(l.shape,i),d=w.sizeFromShape(u),h=w.makeZerosTypedArray(d,"int32"),m=w.sizeFromShape(p),f=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let y=g*m,b=f[y],x=0;for(let v=0;v<m;++v){let T=f[y+v];T<b&&(b=T,x=v)}h[g]=x}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",h)}var qU={kernelName:Xu,backendName:"cpu",kernelFunc:jU},KU=st(Eo,e=>Math.asin(e)),XU={kernelName:Eo,backendName:"cpu",kernelFunc:KU},YU=st(Fo,e=>Math.asinh(e)),JU={kernelName:Fo,backendName:"cpu",kernelFunc:YU},QU=st(Ao,e=>Math.atan(e)),ZU={kernelName:Ao,backendName:"cpu",kernelFunc:QU},eG=Mt((e,t)=>Math.atan2(e,t)),tG=Qt(Do,eG),nG={kernelName:Do,backendName:"cpu",kernelFunc:tG},aG=st($o,e=>Math.atanh(e)),rG={kernelName:$o,backendName:"cpu",kernelFunc:aG};function bv(e,t,n,a,r,s){let i=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,u=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,h=r.padInfo.left,m=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,f=Me(r.outShape,n),g=f.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let v=0;v<r.batchSize;++v){let T=v*y,k=v*a[0];for(let S=0;S<r.inChannels;++S)for(let F=0;F<r.outHeight;++F){let A=F*i-d,R=Math.max(0,A),P=Math.min(r.inHeight,u+A),z=T+F*b;for(let V=0;V<r.outWidth;++V){let G=V*o-h,H=Math.max(0,G),K=Math.min(r.inWidth,p+G),j=m,te=0,Q=0;for(let ne=R;ne<P;ne+=l){let ie=k+ne*a[1];for(let ee=H;ee<K;ee+=c){let pe=ie+ee*a[2],oe=e[pe+S];s==="max"&&oe>j?j=oe:s==="avg"&&(te+=oe,Q++)}if(isNaN(j))break}let se=z+V*x+S;g[se]=s==="avg"?te/Q:j}}}return f}function v2(e,t,n,a,r=!1,s=!1){let i=Me(a.outShape,"int32"),o=a.strideHeight,l=a.strideWidth,c=a.dilationHeight,u=a.dilationWidth,p=a.effectiveFilterHeight,d=a.effectiveFilterWidth,h=a.padInfo.top,m=a.padInfo.left,f=Me(t,n,e);for(let g=0;g<a.batchSize;++g)for(let y=0;y<a.inChannels;++y)for(let b=0;b<a.outHeight;++b){let x=b*o-h,v=x;for(;v<0;)v+=c;let T=Math.min(a.inHeight,p+x);for(let k=0;k<a.outWidth;++k){let S=k*l-m,F=S;for(;F<0;)F+=u;let A=Math.min(a.inWidth,d+S),R=Number.NEGATIVE_INFINITY,P=-1;for(let z=v;z<T;z+=c){let V=z-x;for(let G=F;G<A;G+=u){let H=G-S,K=f.get(g,z,G,y);K>R&&(R=K,r?P=s?((g*a.inHeight+z)*a.inWidth+G)*a.inChannels+y:(z*a.inWidth+G)*a.inChannels+y:P=V*d+H)}}i.set(P,g,b,k,y)}}return i}function w2(e,t,n,a,r,s){let i=r.strideDepth,o=r.strideHeight,l=r.strideWidth,c=r.dilationDepth,u=r.dilationHeight,p=r.dilationWidth,d=r.effectiveFilterDepth,h=r.effectiveFilterHeight,m=r.effectiveFilterWidth,f=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Me(r.outShape,n),v=x.values,T=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[3]*r.outShape[4],F=r.outShape[4];for(let A=0;A<r.batchSize;++A){let R=A*T,P=A*a[0];for(let z=0;z<r.inChannels;++z)for(let V=0;V<r.outDepth;++V){let G=V*i-f,H=G;for(;H<0;)H+=c;let K=Math.min(r.inDepth,d+G),j=R+V*k;for(let te=0;te<r.outHeight;++te){let Q=te*o-g,se=Q;for(;se<0;)se+=u;let ne=Math.min(r.inHeight,h+Q),ie=j+te*S;for(let ee=0;ee<r.outWidth;++ee){let pe=ee*l-y,oe=pe;for(;oe<0;)oe+=p;let fe=Math.min(r.inWidth,m+pe),me=ie+ee*F,we=b,Te=0,_e=0;for(let Fe=H;Fe<K;Fe+=c){let tt=P+Fe*a[1];for(let nt=se;nt<ne;nt+=u){let it=tt+nt*a[2];for(let Xe=oe;Xe<fe;Xe+=p){let mt=it+Xe*a[3],We=e[mt+z];if(s==="max"&&We>we?we=We:s==="avg"&&(Te+=We,_e++),isNaN(we))break}if(isNaN(we))break}if(isNaN(we))break}let Re=me+z;v[Re]=s==="avg"?Te/_e:we}}}}return x}function sG(e,t){let n=Me(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,h=t.padInfo.top,m=t.padInfo.left;for(let f=0;f<t.batchSize;++f)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*a-d,x=b;for(;x<0;)x+=i;let v=Math.min(t.inDepth,c+b);for(let T=0;T<t.outHeight;++T){let k=T*r-h,S=k;for(;S<0;)S+=o;let F=Math.min(t.inHeight,u+k);for(let A=0;A<t.outWidth;++A){let R=A*s-m,P=R;for(;P<0;)P+=l;let z=Math.min(t.inWidth,p+R),V=Number.NEGATIVE_INFINITY,G=-1;for(let H=x;H<v;H+=i){let K=H-b;for(let j=S;j<F;j+=o){let te=j-k;for(let Q=P;Q<z;Q+=l){let se=Q-R,ne=e.get(f,H,j,Q,g);ne>=V&&(V=ne,G=K*u*p+te*u+se)}}}n.set(G,f,y,T,A,g)}}}return n}function iG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;xe(r,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a,c=1;w.assert(_.eitherStridesOrDilationsAreOne(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let u=_.computePool2DInfo(r.shape,s,i,c,o,l),p;if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))p=nr({inputs:{x:r},backend:n});else{let d=n.data.get(r.dataId).values,h=w.computeStrides(r.shape),m=bv(d,r.shape,r.dtype,h,u,"avg");p=n.makeTensorInfo(u.outShape,r.dtype,m.values)}return p}var oG={kernelName:Ss,backendName:"cpu",kernelFunc:iG};function lG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:c}=a;xe(r,"avgPool3d");let u=_.computePool3DInfo(r.shape,s,i,1,o,l,c),p=n.data.get(r.dataId).values,d=w2(p,r.shape,r.dtype,w.computeStrides(r.shape),u,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}var uG={kernelName:Yu,backendName:"cpu",kernelFunc:lG};function cG(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:c}=a;xe([r,s],"avgPool3DGrad");let u=_.computePool3DInfo(s.shape,i,o,1,l,c),p=u.strideDepth,d=u.strideHeight,h=u.strideWidth,m=u.filterDepth,f=u.filterHeight,g=u.filterWidth,y=u.dilationDepth,b=u.dilationHeight,x=u.dilationWidth,v=u.effectiveFilterDepth,T=u.effectiveFilterHeight,k=u.effectiveFilterWidth,S=v-1-u.padInfo.front,F=k-1-u.padInfo.left,A=T-1-u.padInfo.top,R=Me(s.shape,"float32"),P=1/(m*f*g),z=n.bufferSync(r);for(let V=0;V<u.batchSize;++V)for(let G=0;G<u.inChannels;++G)for(let H=0;H<u.inDepth;++H)for(let K=0;K<u.inHeight;++K)for(let j=0;j<u.inWidth;++j){let te=H-S,Q=K-A,se=j-F,ne=0;for(let ie=0;ie<v;ie+=y){let ee=(te+ie)/p;if(!(ee<0||ee>=u.outDepth||Math.floor(ee)!==ee))for(let pe=0;pe<T;pe+=b){let oe=(Q+pe)/d;if(!(oe<0||oe>=u.outHeight||Math.floor(oe)!==oe))for(let fe=0;fe<k;fe+=x){let me=(se+fe)/h;me<0||me>=u.outWidth||Math.floor(me)!==me||(ne+=z.get(V,ee,oe,me,G))}}}R.set(ne*P,V,H,K,j,G)}return n.makeTensorInfo(R.shape,R.dtype,R.values)}var pG={kernelName:pd,backendName:"cpu",kernelFunc:cG};function dG(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;xe([r,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:c}=a,u=_.computePool2DInfo(i.shape,o,l,1,c),p=u.strideHeight,d=u.strideWidth,h=u.filterHeight,m=u.filterWidth,f=u.dilationHeight,g=u.dilationWidth,y=u.effectiveFilterHeight,b=u.effectiveFilterWidth,x=b-1-u.padInfo.left,v=y-1-u.padInfo.top,T=Me(i.shape,"float32"),k=1/(h*m),S=n.data.get(r.dataId).values,F=Me(r.shape,"float32",S);for(let A=0;A<u.batchSize;++A)for(let R=0;R<u.inChannels;++R)for(let P=0;P<u.inHeight;++P)for(let z=0;z<u.inWidth;++z){let V=P-v,G=z-x,H=0;for(let K=0;K<y;K+=f){let j=(V+K)/p;if(!(j<0||j>=u.outHeight||Math.floor(j)!==j))for(let te=0;te<b;te+=g){let Q=(G+te)/d;Q<0||Q>=u.outWidth||Math.floor(Q)!==Q||(H+=F.get(A,j,Q,R))}}T.set(H*k,A,P,z,R)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}var hG={kernelName:cd,backendName:"cpu",kernelFunc:dG};function mG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,scale:s,offset:i,mean:o,variance:l}=t;w.assert(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(s==null||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),xe([r,o,l,s,i],"batchNorm");let{varianceEpsilon:c}=a;c==null&&(c=.001);let u=n.data.get(r.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,h=s?n.data.get(s.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),f=new Float32Array(u.length),g=m.length,y=h.length,b=d.length,x=p.length,v=0,T=0,k=0,S=0;for(let F=0;F<u.length;++F)f[F]=m[v++]+(u[F]-p[T++])*h[k++]/Math.sqrt(d[S++]+c),v>=g&&(v=0),T>=x&&(T=0),k>=y&&(k=0),S>=b&&(S=0);return n.makeTensorInfo(r.shape,r.dtype,f)}var fG={kernelName:zs,backendName:"cpu",kernelFunc:mG};function gG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;xe([r],"batchToSpaceND");let o=s.reduce((y,b)=>y*b),l=_.getReshaped(r.shape,s,o),c=_.getPermuted(l.length,s.length),u=_.getReshapedPermuted(r.shape,s,o),p=_.getSliceBeginCoords(i,s.length),d=_.getSliceSize(u,i,s.length),h=kt({inputs:{x:r},backend:n,attrs:{shape:l}}),m=ya({inputs:{x:h},backend:n,attrs:{perm:c}}),f=kt({inputs:{x:m},backend:n,attrs:{shape:u}}),g=Vi({inputs:{x:f},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}var yG={kernelName:Ju,backendName:"cpu",kernelFunc:gG};function bG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i}=a,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,c=pv(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,c)}var xG={kernelName:dd,backendName:"cpu",kernelFunc:bG},vG=st(Vr,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),wG={kernelName:Vr,backendName:"cpu",kernelFunc:vG},kG=e=>{let{x:t}=e.inputs,n=e.backend,a=new Float32Array(w.sizeFromShape(t.shape)),r=n.data.get(t.dataId),s=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let c=0;c<o.length;c++){let u=o[c],p=l[c];a[c]=Math.hypot(u,p)}return n.makeOutput(a,t.shape,"float32")},IG={kernelName:Qu,backendName:"cpu",kernelFunc:kG};function tu(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}var TG={kernelName:Sd,backendName:"cpu",kernelFunc:tu};function nu(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=w.parseAxisParam(r,t[0].shape)[0],i=_.computeOutShape(t.map(f=>f.shape),s);if(w.sizeFromShape(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(f=>w.sizeFromShape(f.shape)>0);if(o.length===1)return nr({inputs:{x:o[0]},backend:n});let l=o.map(f=>f.shape);if(_.assertParamsConsistent(l,s),o[0].dtype==="complex64"){let f=o.map(v=>Bi({inputs:{input:v},backend:n})),g=o.map(v=>tu({inputs:{input:v},backend:n})),y=nu({inputs:f,backend:n,attrs:{axis:s}}),b=nu({inputs:g,backend:n,attrs:{axis:s}}),x=Un({inputs:{real:y,imag:b},backend:n});return f.forEach(v=>n.disposeIntermediateTensorInfo(v)),g.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),x}let c=o.map(f=>{let g=w.sizeFromShape(f.shape.slice(s));return kt({inputs:{x:f},backend:n,attrs:{shape:[-1,g]}})}),u=c.map(f=>({vals:n.data.get(f.dataId).values,shape:f.shape}));i=_.computeOutShape(c.map(f=>f.shape),1);let p=c[0].shape[0]===1,d=UT(u,i,t[0].dtype,p),h=_.computeOutShape(o.map(f=>f.shape),s),m=n.makeTensorInfo(h,t[0].dtype,d);return c.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var NG={kernelName:Ro,backendName:"cpu",kernelFunc:nu};function k2(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:c,dimRoundingMode:u}=a;xe([r,s],"conv2d");let p=_.convertConv2DDataFormat(l),d=_.computeConv2DInfo(r.shape,s.shape,i,c,o,u,!1,p),h=d.filterHeight,m=d.filterWidth,f=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x=d.dataFormat==="channelsLast",v=new Lt(d.outShape,r.dtype),T=w.computeStrides(r.shape),k=w.computeStrides(s.shape),S=T[0],F=x?T[1]:T[2],A=x?T[2]:1,R=x?1:T[1],P=v.strides[0],z=x?v.strides[1]:v.strides[2],V=x?v.strides[2]:1,G=x?1:v.strides[1],H=n.data.get(r.dataId).values,K=n.data.get(s.dataId).values,j=v.values;for(let te=0;te<d.batchSize;++te){let Q=te*S,se=te*P;for(let ne=0;ne<d.outHeight;++ne){let ie=se+ne*z,ee=ne*d.strideHeight-b;for(let pe=0;pe<h;++pe){let oe=ee+pe*f;if(oe<0||oe>=d.inHeight)continue;let fe=pe*k[0],me=Q+oe*F;for(let we=0;we<d.outWidth;++we){let Te=ie+we*V,_e=we*d.strideWidth-y;for(let Re=0;Re<m;++Re){let Fe=_e+Re*g;if(Fe<0||Fe>=d.inWidth)continue;let tt=fe+Re*k[1],nt=me+Fe*A,it=tt;for(let Xe=0;Xe<d.inChannels;++Xe){let mt=H[nt+Xe*R];for(let We=0;We<d.outChannels;++We)j[Te+We*G]+=mt*K[it+We];it+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,j)}var SG={kernelName:Fs,backendName:"cpu",kernelFunc:k2};function CG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:c,filterShape:u}=a;xe([r,s],"conv2dBackpropFilter");let p=_.convertConv2DDataFormat(l),d=_.computeConv2DInfo(r.shape,u,i,1,o,c,!1,p),{strideHeight:h,strideWidth:m,filterHeight:f,filterWidth:g}=d,y=d.dataFormat==="channelsLast",b=new Lt(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,T=n.data.get(r.dataId).values,k=n.data.get(s.dataId).values,S=new Lt(r.shape,r.dtype,T),F=new Lt(s.shape,s.dtype,k);for(let A=0;A<f;++A){let R=Math.max(0,Math.ceil((v-A)/h)),P=Math.min(d.outHeight,(d.inHeight+v-A)/h);for(let z=0;z<g;++z){let V=Math.max(0,Math.ceil((x-z)/m)),G=Math.min(d.outWidth,(d.inWidth+x-z)/m);for(let H=0;H<d.inChannels;++H)for(let K=0;K<d.outChannels;++K){let j=0;for(let te=0;te<d.batchSize;++te)for(let Q=R;Q<P;++Q){let se=A+Q*h-v;for(let ne=V;ne<G;++ne){let ie=z+ne*m-x;y?j+=S.get(te,se,ie,H)*F.get(te,Q,ne,K):j+=S.get(te,H,se,ie)*F.get(te,K,Q,ne)}}b.set(j,A,z,H,K)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var _G={kernelName:md,backendName:"cpu",kernelFunc:CG};function EG(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:c,dimRoundingMode:u}=a;xe([r,s],"conv2dBackpropInput");let p=w.computeStrides(s.shape),d=w.computeStrides(r.shape),h=_.convertConv2DDataFormat(c),m=_.computeConv2DInfo(i,s.shape,o,1,l,u,!1,h),f=new Lt(m.inShape,"float32"),g=f.values,y=n.data.get(r.dataId).values,b=n.data.get(s.dataId).values,[x,v,T]=p,{batchSize:k,filterHeight:S,filterWidth:F,inChannels:A,inHeight:R,inWidth:P,outChannels:z,outHeight:V,outWidth:G,strideHeight:H,strideWidth:K}=m;h=m.dataFormat;let j=S-1-m.padInfo.top,te=F-1-m.padInfo.left,Q=h==="channelsLast",se=f.strides[0],ne=Q?f.strides[1]:f.strides[2],ie=Q?f.strides[2]:1,ee=Q?1:f.strides[1],pe=d[0],oe=Q?d[1]:d[2],fe=Q?d[2]:1,me=Q?1:d[1];for(let we=0;we<k;++we)for(let Te=0;Te<A;++Te)for(let _e=0;_e<R;++_e){let Re=_e-j,Fe=Math.max(0,Math.ceil(Re/H)),tt=Math.min(V,(S+Re)/H);for(let nt=0;nt<P;++nt){let it=nt-te,Xe=Math.max(0,Math.ceil(it/K)),mt=Math.min(G,(F+it)/K),We=0;for(let It=Fe;It<tt;++It){let qn=It*H-Re;for(let en=Xe;en<mt;++en){let kn=en*K-it,Kn=pe*we+oe*It+fe*en,Mn=x*(S-1-qn)+v*(F-1-kn)+T*Te;for(let pn=0;pn<z;++pn){let tn=y[Kn+me*pn],Wa=b[Mn+pn];We+=tn*Wa}}}let wn=se*we+ne*_e+ie*nt+ee*Te;g[wn]=We}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var FG={kernelName:As,backendName:"cpu",kernelFunc:EG};function AG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a;xe([r,s],"conv3d");let c=_.computeConv3DInfo(r.shape,s.shape,i,l,o),{filterDepth:u,filterHeight:p,filterWidth:d,dilationDepth:h,dilationHeight:m,dilationWidth:f,padInfo:g}=c,y=g.front,b=g.left,x=g.top,v=new Lt(c.outShape,r.dtype),T=n.data.get(r.dataId).values,k=n.data.get(s.dataId).values,S=v.values,F=w.computeStrides(r.shape),A=w.computeStrides(s.shape);for(let R=0;R<c.batchSize;++R){let P=R*F[0],z=R*v.strides[0];for(let V=0;V<c.outDepth;++V){let G=z+V*v.strides[1],H=V*c.strideDepth-y;for(let K=0;K<u;++K){let j=H+K*h;if(j<0||j>=c.inDepth)continue;let te=K*A[0],Q=P+j*F[1];for(let se=0;se<c.outHeight;++se){let ne=G+se*v.strides[2],ie=se*c.strideHeight-x;for(let ee=0;ee<p;++ee){let pe=ie+ee*m;if(pe<0||pe>=c.inHeight)continue;let oe=te+ee*A[1],fe=Q+pe*F[2];for(let me=0;me<c.outWidth;++me){let we=ne+me*c.outChannels,Te=me*c.strideWidth-b;for(let _e=0;_e<d;++_e){let Re=Te+_e*f;if(Re<0||Re>=c.inWidth)continue;let Fe=oe+_e*A[2],tt=fe+Re*c.inChannels,nt=Fe;for(let it=0;it<c.inChannels;++it){let Xe=T[tt+it];for(let mt=0;mt<c.outChannels;++mt)S[we+mt]+=Xe*k[nt+mt];nt+=c.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}var $G={kernelName:Zu,backendName:"cpu",kernelFunc:AG};function DG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:l}=a;xe([r,s],"conv3dBackpropFilterV2");let c=w.computeStrides(r.shape),u=w.computeStrides(s.shape),p=_.computeConv3DInfo(r.shape,l,i,1,o),d=p.strideDepth,h=p.strideHeight,m=p.strideWidth,f=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=new Lt(p.filterShape,"float32"),x=b.values,[v,T,k,S]=b.strides,F=n.data.get(s.dataId).values,[A,R,P,z]=u,V=n.data.get(r.dataId).values,[G,H,K,j]=c,te=p.padInfo.front,Q=p.padInfo.left,se=p.padInfo.top;for(let ne=0;ne<f;++ne){let ie=Math.max(0,Math.ceil((te-ne)/d)),ee=Math.min(p.outDepth,(p.inDepth+te-ne)/d),pe=ne*v;for(let oe=0;oe<g;++oe){let fe=Math.max(0,Math.ceil((se-oe)/h)),me=Math.min(p.outHeight,(p.inHeight+se-oe)/h),we=oe*T+pe;for(let Te=0;Te<y;++Te){let _e=Math.max(0,Math.ceil((Q-Te)/m)),Re=Math.min(p.outWidth,(p.inWidth+Q-Te)/m),Fe=Te*k+we;for(let tt=0;tt<p.inChannels;++tt){let nt=tt*S+Fe;for(let it=0;it<p.outChannels;++it){let Xe=0;for(let mt=0;mt<p.batchSize;++mt){let We=mt*G,wn=mt*A;for(let It=ie;It<ee;++It){let qn=(ne+It*d-te)*H+We,en=It*R+wn;for(let kn=fe;kn<me;++kn){let Kn=(oe+kn*h-se)*K+qn,Mn=kn*P+en;for(let pn=_e;pn<Re;++pn){let tn=(Te+pn*m-Q)*j+Kn,Wa=pn*z+Mn;Xe+=V[tn+tt]*F[Wa+it]}}}}x[nt+it]=Xe}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var RG={kernelName:fd,backendName:"cpu",kernelFunc:DG};function MG(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:l}=a;xe([r],"conv3dBackpropInputV2");let c=w.computeStrides(r.shape),u=w.computeStrides(s.shape),p=_.computeConv3DInfo(l,s.shape,o,1,i),d=new Lt(p.inShape,"float32"),h=d.values,[m,f,g,y]=d.strides,b=n.data.get(r.dataId).values,[x,v,T,k]=c,S=n.data.get(s.dataId).values,[F,A,R,P]=u,{batchSize:z,filterDepth:V,filterHeight:G,filterWidth:H,inChannels:K,inDepth:j,inHeight:te,inWidth:Q,outChannels:se,outDepth:ne,outHeight:ie,outWidth:ee,strideDepth:pe,strideHeight:oe,strideWidth:fe}=p,me=V-1-p.padInfo.front,we=G-1-p.padInfo.top,Te=H-1-p.padInfo.left;for(let _e=0;_e<z;++_e)for(let Re=0;Re<K;++Re)for(let Fe=0;Fe<j;++Fe){let tt=Fe-me,nt=Math.max(0,Math.ceil(tt/pe)),it=Math.min(ne,(V+tt)/pe);for(let Xe=0;Xe<te;++Xe){let mt=Xe-we,We=Math.max(0,Math.ceil(mt/oe)),wn=Math.min(ie,(G+mt)/oe);for(let It=0;It<Q;++It){let qn=It-Te,en=Math.max(0,Math.ceil(qn/fe)),kn=Math.min(ee,(H+qn)/fe),Kn=0;for(let Mn=nt;Mn<it;++Mn){let pn=Mn*pe-tt;for(let tn=We;tn<wn;++tn){let Wa=tn*oe-mt;for(let sa=en;sa<kn;++sa){let ia=sa*fe-qn,$r=x*_e+v*Mn+T*tn+k*sa,lr=F*(V-1-pn)+A*(G-1-Wa)+R*(H-1-ia)+P*Re;for(let Dr=0;Dr<se;++Dr){let co=b[$r+Dr],ka=S[lr+Dr];Kn+=co*ka}}}}h[m*_e+f*Fe+g*Xe+y*It+Re]=Kn}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}var PG={kernelName:gd,backendName:"cpu",kernelFunc:MG},OG=st($s,e=>Math.cos(e)),LG={kernelName:$s,backendName:"cpu",kernelFunc:OG},zG=st(Mo,e=>Math.cosh(e)),WG={kernelName:Mo,backendName:"cpu",kernelFunc:zG};function BG(e){let{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:c}=a,[u,p,d,h]=r.shape,m=s.shape[0],[f,g]=o,y=Me([m,f,g,h],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(r.dataId).values,T=w.computeStrides(r.shape),k=w.computeStrides(y.shape);for(let S=0;S<m;S++){let F=S*4,A=b[F],R=b[F+1],P=b[F+2],z=b[F+3],V=x[S];if(V>=u)continue;let G=f>1?(P-A)*(p-1)/(f-1):0,H=g>1?(z-R)*(d-1)/(g-1):0;for(let K=0;K<f;K++){let j=f>1?A*(p-1)+K*G:.5*(A+P)*(p-1);if(j<0||j>p-1){for(let te=0;te<g;te++)for(let Q=0;Q<h;Q++){let se=Q+te*k[2]+K*k[1]+S*k[0];y.values[se]=c}continue}if(l==="bilinear"){let te=Math.floor(j),Q=Math.ceil(j),se=j-te;for(let ne=0;ne<g;ne++){let ie=g>1?R*(d-1)+ne*H:.5*(R+z)*(d-1);if(ie<0||ie>d-1){for(let fe=0;fe<h;fe++){let me=fe+ne*k[2]+K*k[1]+S*k[0];y.values[me]=c}continue}let ee=Math.floor(ie),pe=Math.ceil(ie),oe=ie-ee;for(let fe=0;fe<h;fe++){let me=fe+ee*T[2]+te*T[1]+V*T[0],we=v[me];me=fe+pe*T[2]+te*T[1]+V*T[0];let Te=v[me];me=fe+ee*T[2]+Q*T[1]+V*T[0];let _e=v[me];me=fe+pe*T[2]+Q*T[1]+V*T[0];let Re=v[me],Fe=we+(Te-we)*oe,tt=_e+(Re-_e)*oe;me=fe+ne*k[2]+K*k[1]+S*k[0],y.values[me]=Fe+(tt-Fe)*se}}}else for(let te=0;te<g;++te){let Q=g>1?R*(d-1)+te*H:.5*(R+z)*(d-1);if(Q<0||Q>d-1){for(let ie=0;ie<h;ie++){let ee=ie+te*k[2]+K*k[1]+S*k[0];y.values[ee]=c}continue}let se=Math.round(Q),ne=Math.round(j);for(let ie=0;ie<h;ie++){let ee=ie+se*T[2]+ne*T[1]+V*T[0],pe=ie+te*k[2]+K*k[1]+S*k[0];y.values[pe]=v[ee]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var VG={kernelName:Po,backendName:"cpu",kernelFunc:BG};function UG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;xe(r,"cumsum");let l=_.getAxesPermutation([s],r.shape.length),c=r;l!=null&&(c=ya({inputs:{x:r},backend:n,attrs:{perm:l}}));let u=_.getInnerMostAxes(1,r.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);let p=ua(c.dtype,"int32"),d=w.makeZerosTypedArray(w.sizeFromShape(c.shape),p),h=n.data.get(c.dataId).values,m=c.shape[c.shape.length-1],f=o?(y,b)=>y+m-b-1:(y,b)=>y+b;for(let y=0;y<h.length;y+=m)for(let b=0;b<m;b++){let x=f(y,b);if(b===0)d[x]=i?0:h[x];else{let v=f(y,b-1);d[x]=i?h[v]+d[v]:h[x]+d[v]}}let g=n.makeTensorInfo(c.shape,p,d);if(l!=null){let y=_.getUndoAxesPermutation(l),b=ya({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),b}return g}var GG={kernelName:Ds,backendName:"cpu",kernelFunc:UG};function HG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=a;if(r.shape.length===1){let l=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,u=pv(l,c,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}else if(r.shape.length===2){let l=n.bufferSync(r),c=n.bufferSync(s),u=BT(l,c,i,o);return n.makeTensorInfo(u.shape,s.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var jG={kernelName:yd,backendName:"cpu",kernelFunc:HG};function qG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:i}=a;w.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`),w.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);let o=r.shape[0],l=r.shape[1],c=r.shape[2],u=r.shape[3],p=l*s,d=c*s,h=u/(s*s),m=n.data.get(r.dataId).values,f=new Float32Array(o*p*d*h),g=0;for(let y=0;y<o;++y)for(let b=0;b<p;++b){let x=Math.floor(b/s),v=b%s;for(let T=0;T<d;++T){let k=Math.floor(T/s),S=T%s,F=(v*s+S)*h;for(let A=0;A<h;++A){let R=A+F+u*(k+c*(x+l*y));f[g++]=m[R]}}}return n.makeTensorInfo([o,p,d,h],r.dtype,f)}var KG={kernelName:Oo,backendName:"cpu",kernelFunc:qG};function I2(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:c}=a;xe([r,s],"depthwiseConv2DNative");let u=w.computeStrides(r.shape),p=w.computeStrides(s.shape),d=l;d==null&&(d=[1,1]),w.assert(_.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let h=_.computeConv2DInfo(r.shape,s.shape,i,d,o,c,!0),{filterHeight:m,filterWidth:f,dilationHeight:g,dilationWidth:y,padInfo:b}=h,x=b.left,v=b.top,T=h.outChannels/h.inChannels,k=new Lt(h.outShape,r.dtype),S=n.data.get(r.dataId).values,F=n.data.get(s.dataId).values,A=k.values;for(let R=0;R<h.batchSize;++R){let P=R*u[0],z=R*k.strides[0];for(let V=0;V<h.outHeight;++V){let G=z+V*k.strides[1],H=V*h.strideHeight-x;for(let K=0;K<m;++K){let j=H+K*g;if(j<0||j>=h.inHeight)continue;let te=K*p[0],Q=P+j*u[1];for(let se=0;se<h.outWidth;++se){let ne=G+se*k.strides[2],ie=se*h.strideWidth-v;for(let ee=0;ee<f;++ee){let pe=ie+ee*y;if(pe<0||pe>=h.inWidth)continue;let oe=te+ee*p[1],fe=Q+pe*h.inChannels,me=ne,we=oe;for(let Te=0;Te<h.inChannels;++Te){let _e=S[fe+Te];for(let Re=0;Re<T;++Re)A[me+Re]+=_e*F[we+Re];me+=T,we+=T}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var XG={kernelName:Rs,backendName:"cpu",kernelFunc:I2};function YG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:c,filterShape:u}=a;xe([r,s],"depthwiseConv2dNativeBackpropFilter");let p=_.computeConv2DInfo(r.shape,u,i,o,l,c,!0),{strideHeight:d,strideWidth:h,filterHeight:m,filterWidth:f}=p,g=new Lt(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,x=p.outChannels/p.inChannels,v=n.data.get(r.dataId).values,T=new Lt(r.shape,r.dtype,v),k=n.data.get(s.dataId).values,S=new Lt(s.shape,s.dtype,k);for(let F=0;F<m;++F){let A=Math.max(0,Math.ceil((b-F)/d)),R=Math.min(p.outHeight,(p.inHeight+b-F)/d);for(let P=0;P<f;++P){let z=Math.max(0,Math.ceil((y-P)/h)),V=Math.min(p.outWidth,(p.inWidth+y-P)/h);for(let G=0;G<p.outChannels;++G){let H=Math.trunc(G/x),K=G%x,j=0;for(let te=0;te<p.batchSize;++te)for(let Q=A;Q<R;++Q){let se=F+Q*d-b;for(let ne=z;ne<V;++ne){let ie=P+ne*h-y;j+=T.get(te,se,ie,H)*S.get(te,Q,ne,G)}}g.set(j,F,P,H,K)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var JG={kernelName:bd,backendName:"cpu",kernelFunc:YG};function QG(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:c,inputShape:u}=a;xe([r,s],"depthwiseConv2DNativeBackpropInput");let p=w.computeStrides(r.shape),d=w.computeStrides(s.shape),h=_.computeConv2DInfo(u,s.shape,i,o,l,c,!0),m=new Lt(h.inShape,"float32"),f=m.values,[g,y,b]=m.strides,x=n.data.get(r.dataId).values,[v,T,k]=p,S=n.data.get(s.dataId).values,[F,A,R]=d,{batchSize:P,filterHeight:z,filterWidth:V,inChannels:G,inHeight:H,inWidth:K,outChannels:j,outHeight:te,outWidth:Q,strideHeight:se,strideWidth:ne}=h,ie=z-1-h.padInfo.top,ee=V-1-h.padInfo.left,pe=j/G;for(let oe=0;oe<P;++oe)for(let fe=0;fe<G;++fe)for(let me=0;me<H;++me){let we=me-ie,Te=Math.max(0,Math.ceil(we/se)),_e=Math.min(te,(z+we)/se);for(let Re=0;Re<K;++Re){let Fe=Re-ee,tt=Math.max(0,Math.ceil(Fe/ne)),nt=Math.min(Q,(V+Fe)/ne),it=0;for(let Xe=Te;Xe<_e;++Xe){let mt=Xe*se-we;for(let We=tt;We<nt;++We){let wn=We*ne-Fe,It=v*oe+T*Xe+k*We,qn=F*(z-1-mt)+A*(V-1-wn)+R*fe;for(let en=0;en<pe;++en){let kn=fe*pe+en,Kn=x[It+kn],Mn=S[qn+en];it+=Kn*Mn}}}f[g*oe+y*me+b*Re+fe]=it}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var ZG={kernelName:xd,backendName:"cpu",kernelFunc:QG};function eH(e){let{inputs:t,backend:n}=e,{x:a}=t,r=w.sizeFromShape(a.shape),s=n.data.get(a.dataId).values,i=Me([r,r],a.dtype),o=i.values;for(let c=0;c<s.length;c++)o[c*r+c]=s[c];let l=[...a.shape,...a.shape];return n.makeTensorInfo(l,i.dtype,i.values)}var tH={kernelName:vd,backendName:"cpu",kernelFunc:eH},nH={kernelName:ec,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,filter:r}=e,{strides:s,pad:i,dilations:o}=n,l=t,c=l.data.get(a.dataId).values,u=a.shape.length,p=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:h,inHeight:m,inWidth:f,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:T,filterHeight:k,filterWidth:S,dilationHeight:F,dilationWidth:A,outShape:R}=_.computeDilation2DInfo(a.shape,r.shape,s,i,"NHWC",o),P=w.sizeFromShape(R),z=R.length,V=w.getArrayFromDType(a.dtype,P);for(let G=0;G<h;++G)for(let H=0;H<y;++H){let K=H*v-x.top;for(let j=0;j<b;++j){let te=j*T-x.left;for(let Q=0;Q<g;++Q){let se=Number.MIN_SAFE_INTEGER;for(let ie=0;ie<k;++ie){let ee=K+ie*F;if(ee>=0&&ee<m)for(let pe=0;pe<S;++pe){let oe=te+pe*A;if(oe>=0&&oe<f){let fe=w.locToIndex([G,ee,oe,Q],u,w.computeStrides(a.shape)),me=w.locToIndex([ie,pe,Q],d,w.computeStrides(r.shape)),we=c[fe]+p[me];we>se&&(se=we)}}}let ne=w.locToIndex([G,H,j,Q],z,w.computeStrides(R));V[ne]=se}}}return{dataId:l.write(w.toTypedArray(V,a.dtype),R,a.dtype),shape:R,dtype:a.dtype}}},aH={kernelName:kd,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,filter:r,dy:s}=e,{strides:i,pad:o,dilations:l}=n,c=t,u=w.toNestedArray(a.shape,c.data.get(a.dataId).values),p=w.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:d,inHeight:h,inWidth:m,inChannels:f,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:T,filterWidth:k,dilationHeight:S,dilationWidth:F,outShape:A}=_.computeDilation2DInfo(a.shape,r.shape,i,o,"NHWC",l);w.assert(s.rank===A.length,()=>`Error in ${kd}, dy must have the same rank as output ${A.length}, but got ${s.rank}`);let R=w.toNestedArray(A,c.data.get(s.dataId).values),P=w.makeZerosNestedTypedArray(r.shape,r.dtype);for(let z=0;z<d;++z)for(let V=0;V<g;++V){let G=V*x-b.top;for(let H=0;H<y;++H){let K=H*v-b.left;for(let j=0;j<f;++j){let te=Number.MIN_SAFE_INTEGER,Q=0,se=0;for(let ne=0;ne<T;++ne){let ie=G+ne*S;if(ie>=0&&ie<h)for(let ee=0;ee<k;++ee){let pe=K+ee*F;if(pe>=0&&pe<m){let oe=u[z][ie][pe][j]+p[ne][ee][j];oe>te&&(te=oe,Q=ne,se=ee)}}}P[Q][se][j]+=R[z][V][H][j]}}}return{dataId:c.write(w.toTypedArray(P,a.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},rH={kernelName:wd,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,filter:r,dy:s}=e,{strides:i,pad:o,dilations:l}=n,c=t,u=w.toNestedArray(a.shape,c.data.get(a.dataId).values),p=w.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:d,inHeight:h,inWidth:m,inChannels:f,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:T,filterWidth:k,dilationHeight:S,dilationWidth:F,outShape:A}=_.computeDilation2DInfo(a.shape,r.shape,i,o,"NHWC",l);w.assert(s.rank===A.length,()=>`Error in ${wd}, dy must have the same rank as output ${A.length}, but got ${s.rank}`);let R=w.toNestedArray(A,c.data.get(s.dataId).values),P=w.makeZerosNestedTypedArray(a.shape,a.dtype);for(let z=0;z<d;++z)for(let V=0;V<g;++V){let G=V*x-b.top;for(let H=0;H<y;++H){let K=H*v-b.left;for(let j=0;j<f;++j){let te=Number.MIN_SAFE_INTEGER,Q=G<0?0:G,se=K<0?0:K;for(let ne=0;ne<T;++ne){let ie=G+ne*S;if(ie>=0&&ie<h)for(let ee=0;ee<k;++ee){let pe=K+ee*F;if(pe>=0&&pe<m){let oe=u[z][ie][pe][j]+p[ne][ee][j];oe>te&&(te=oe,Q=ie,se=pe)}}}P[z][Q][se][j]+=R[z][V][H][j]}}}return{dataId:c.write(w.toTypedArray(P,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};function sH(e){let{inputs:t,backend:n}=e,{dy:a,y:r}=t;xe([a,r],"eluGrad");let s=new Float32Array(w.sizeFromShape(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values;for(let l=0;l<i.length;++l){let c=i[l];c>=1?s[l]=o[l]:s[l]=o[l]*(c+1)}return n.makeTensorInfo(r.shape,"float32",s)}var iH={kernelName:Id,backendName:"cpu",kernelFunc:sH},oH=Mt((e,t)=>e===t?1:0),T2=Qt(Wo,oH,null,"bool"),lH={kernelName:Wo,backendName:"cpu",kernelFunc:T2},uH=_.ERF_P,cH=_.ERF_A1,pH=_.ERF_A2,dH=_.ERF_A3,hH=_.ERF_A4,mH=_.ERF_A5,fH=st(zo,e=>{let t=Math.sign(e),n=Math.abs(e),a=1/(1+uH*n);return t*(1-((((mH*a+hH)*a+dH)*a+pH)*a+cH)*a*Math.exp(-n*n))}),gH={kernelName:zo,backendName:"cpu",kernelFunc:fH};function km(e){let{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:s}=a,i=r.shape.length,o=r.shape.slice(),l=s;return s<0&&(w.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),kt({inputs:{x:r},backend:n,attrs:{shape:o}})}var yH={kernelName:Bo,backendName:"cpu",kernelFunc:km},bH=Mt((e,t)=>e/t),xv=Qt(Ms,bH),vv={kernelName:Ms,backendName:"cpu",kernelFunc:xv};function N2(e,t,n){let a=e.shape,r=a[0],s=a[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,c=[r,s],u=w.sizeFromShape(c),p=w.getTypedArrayFromDType("float32",u),d=w.getTypedArrayFromDType("float32",u);for(let g=0;g<r;g++){let y=Vi({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),b=Vi({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,s]}}),x=Un({inputs:{real:y,imag:b},backend:n}),{real:v,imag:T}=xH(x,t,n),k=_.mergeRealAndImagArrays(v,T);for(let S=0;S<s;S++){let F=_.getComplexWithIndex(k,S);p[g*s+S]=F.real,d[g*s+S]=F.imag}n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x)}let h=n.makeTensorInfo(c,"float32",p),m=n.makeTensorInfo(c,"float32",d),f=Un({inputs:{real:h,imag:m},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),f}function xH(e,t,n){let a=w.sizeFromShape(e.shape),r=n.data.get(e.dataId),s=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(vH(a)){let o=wv(s,i,a,t,n),l=[e.shape[0],e.shape[1]];if(t){let c=n.makeTensorInfo(l,"float32",o.real),u=n.makeTensorInfo(l,"float32",o.imag),p=n.makeTensorInfo([],"float32",w.createScalarValue(a,"float32")),d=nr({inputs:{x:p},backend:n}),h=vv.kernelFunc({inputs:{a:c,b:p},backend:n}),m=vv.kernelFunc({inputs:{a:u,b:d},backend:n}),f=n.data.get(h.dataId).values,g=n.data.get(m.dataId).values;return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),{real:f,imag:g}}return o}else{let o=_.mergeRealAndImagArrays(s,i),l=wH(o,a,t);return _.splitRealAndImagArrays(l)}}function vH(e){return(e&e-1)==0}function wv(e,t,n,a,r){if(n===1)return{real:e,imag:t};let s=_.mergeRealAndImagArrays(e,t),i=n/2,o=_.complexWithEvenIndex(s),l=o.real,c=o.imag,u=[l.length],p=r.makeTensorInfo(u,"float32",l),d=r.makeTensorInfo(u,"float32",c),h=Un({inputs:{real:p,imag:d},backend:r}),m=_.complexWithOddIndex(s),f=m.real,g=m.imag,y=[f.length],b=r.makeTensorInfo(y,"float32",f),x=r.makeTensorInfo(y,"float32",g),v=Un({inputs:{real:b,imag:x},backend:r}),T=wv(l,c,i,a,r),k=T.real,S=T.imag,F=[k.length],A=r.makeTensorInfo(F,"float32",k),R=r.makeTensorInfo(F,"float32",S),P=Un({inputs:{real:A,imag:R},backend:r}),z=wv(f,g,i,a,r),V=z.real,G=z.imag,H=[V.length],K=r.makeTensorInfo(H,"float32",V),j=r.makeTensorInfo(H,"float32",G),te=Un({inputs:{real:K,imag:j},backend:r}),Q=_.exponents(n,a),se=[Q.real.length],ne=r.makeTensorInfo(se,"float32",Q.real),ie=r.makeTensorInfo(se,"float32",Q.imag),ee=Un({inputs:{real:ne,imag:ie},backend:r}),pe=fv({inputs:{a:ee,b:te},backend:r}),oe=sp({inputs:{a:P,b:pe},backend:r}),fe=gv({inputs:{a:P,b:pe},backend:r}),me=Bi({inputs:{input:oe},backend:r}),we=Bi({inputs:{input:fe},backend:r}),Te=tu({inputs:{input:oe},backend:r}),_e=tu({inputs:{input:fe},backend:r}),Re=nu({inputs:[me,we],backend:r,attrs:{axis:0}}),Fe=nu({inputs:[Te,_e],backend:r,attrs:{axis:0}}),tt=r.data.get(Re.dataId).values,nt=r.data.get(Fe.dataId).values;return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(te),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(ie),r.disposeIntermediateTensorInfo(ee),r.disposeIntermediateTensorInfo(pe),r.disposeIntermediateTensorInfo(oe),r.disposeIntermediateTensorInfo(fe),r.disposeIntermediateTensorInfo(me),r.disposeIntermediateTensorInfo(Te),r.disposeIntermediateTensorInfo(we),r.disposeIntermediateTensorInfo(_e),r.disposeIntermediateTensorInfo(Re),r.disposeIntermediateTensorInfo(Fe),{real:tt,imag:nt}}function wH(e,t,n){let a=new Float32Array(t*2);for(let r=0;r<t;r++){let s=0,i=0;for(let o=0;o<t;o++){let l=_.exponent(r*o,t,n),c=_.getComplexWithIndex(e,o);s+=c.real*l.real-c.imag*l.imag,i+=c.real*l.imag+c.imag*l.real}n&&(s/=t,i/=t),_.assignToTypedArray(a,s,i,r)}return a}function kH(e){let{inputs:t,backend:n}=e,{input:a}=t,r=w.sizeFromShape(a.shape),s=a.shape[a.shape.length-1],i=r/s,o=kt({inputs:{x:a},backend:n,attrs:{shape:[i,s]}}),l=N2(o,!1,n),c=kt({inputs:{x:l},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),c}var IH={kernelName:Td,backendName:"cpu",kernelFunc:kH};function kv(e){let{backend:t,attrs:n}=e,{shape:a,value:r,dtype:s}=n,i=s||w.inferDtype(r),o=w.getArrayFromDType(i,w.sizeFromShape(a));return TH(o,r,i),t.makeTensorInfo(a,i,o)}var NH={kernelName:tc,backendName:"cpu",kernelFunc:kv};function TH(e,t,n){e.fill(t)}var SH={kernelName:Uo,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,r=n,s=w.getTypedArrayFromDType(a.dtype,w.sizeFromShape(a.shape)),[i,o,l,c]=a.shape,u=r.data.get(a.dataId).values;for(let p=0;p<i;p++){let d=p*l*o*c;for(let h=0;h<o;h++){let m=h*(l*c);for(let f=0;f<l;f++){let g=f*c;for(let y=0;y<c;y++){let b=[i,h,f,y][2],x=Math.round(l-b),v=d+m+g+y,T=u[v];if(x>=0&&x<l){let k=x*c,S=d+m+k+y;T=u[S]}s[v]=T}}}}return{dataId:r.write(s,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},CH=Mt((e,t)=>Math.floor(e/t)),_H=Qt(Ls,CH,null,"int32"),EH={kernelName:Ls,backendName:"cpu",kernelFunc:_H};function FH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:c,dataFormat:u,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:m}=a,f=k2({inputs:{x:r,filter:s},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:p,dimRoundingMode:d}});if(i){let g=f;f=sp({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=f;f=yv(n,f,h,o,m),n.disposeIntermediateTensorInfo(g)}return f}var AH={kernelName:yi,backendName:"cpu",kernelFunc:FH};function $H(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:c,dataFormat:u,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:m}=a,f=I2({inputs:{x:r,filter:s},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:p,dimRoundingMode:d}});if(i){let g=f;f=sp({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=f;f=yv(n,f,h,o,m),n.disposeIntermediateTensorInfo(g)}return f}var DH={kernelName:bi,backendName:"cpu",kernelFunc:$H};function RH(e){let{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=w.sizeFromShape(a.shape),i=r.shape,o=i[i.length-1],[l,c,u,p]=_.prepareAndValidate(a,r);if(c===0)return n.makeTensorInfo(l,a.dtype,[]);let d=Me([c,u],a.dtype),h=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values;for(let f=0;f<c;f++){let g=[],y=0;for(let b=0;b<o;b++){let x=h[f*o+b];y+=x*p[b],g.push(x)}if(y<0||y>=s/u)throw new Error(`Invalid indices: ${g} does not index into ${a.shape}`);for(let b=0;b<u;b++)d.values[f*u+b]=m[y*u+b]}return n.makeTensorInfo(l,d.dtype,d.values)}var MH={kernelName:Ho,backendName:"cpu",kernelFunc:RH};function PH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=a;xe([r,s],"gatherV2");let l=o;o==null&&(l=0);let c=w.sizeFromShape(s.shape),u=w.parseAxisParam(i,r.shape)[0],p=_.segment_util.collectGatherOpShapeInfo(r,s,u,l),d=kt({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),h=kt({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,c/p.batchSize]}}),m=[p.batchSize,p.outerSize,c/p.batchSize,p.sliceSize],f=n.bufferSync(h),g=n.bufferSync(d),y=qT(g,f,m);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.makeTensorInfo(p.outputShape,y.dtype,y.values)}var OH={kernelName:Go,backendName:"cpu",kernelFunc:PH},LH=Mt((e,t)=>e>=t?1:0),zH=Qt(Ws,LH,null,"bool"),WH={kernelName:Ws,backendName:"cpu",kernelFunc:zH};function BH(e){let{inputs:t,backend:n}=e,{input:a}=t,r=w.sizeFromShape(a.shape),s=a.shape[a.shape.length-1],i=r/s,o=kt({inputs:{x:a},backend:n,attrs:{shape:[i,s]}}),l=N2(o,!0,n),c=kt({inputs:{x:l},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),c}var VH={kernelName:Nd,backendName:"cpu",kernelFunc:BH},UH=st(qo,e=>Number.isFinite(e)?1:0,"bool"),GH={kernelName:qo,backendName:"cpu",kernelFunc:UH},HH=st(Ko,e=>Math.abs(e)===Infinity?1:0,"bool"),jH={kernelName:Ko,backendName:"cpu",kernelFunc:HH},qH=st(Xo,e=>Number.isNaN(e)?1:0,"bool"),KH={kernelName:Xo,backendName:"cpu",kernelFunc:qH},XH=Mt((e,t)=>e<=t?1:0),YH=Qt(Jo,XH,null,"bool"),JH={kernelName:Jo,backendName:"cpu",kernelFunc:YH};function QH(e){let{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,i=YT(a,r,s);return t.makeTensorInfo([i.length],"float32",i)}var ZH={kernelName:Cd,backendName:"cpu",kernelFunc:QH},ej=st(Qo,e=>Math.log1p(e)),tj={kernelName:Qo,backendName:"cpu",kernelFunc:ej},nj=Mt((e,t)=>e&&t),aj=Qt(Zo,nj,null,"bool"),rj={kernelName:Zo,backendName:"cpu",kernelFunc:aj},sj=st(nc,e=>e?0:1,"bool"),ij={kernelName:nc,backendName:"cpu",kernelFunc:sj},oj=Mt((e,t)=>e||t),lj=Qt(ac,oj,null,"bool"),uj={kernelName:ac,backendName:"cpu",kernelFunc:lj};function cj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=a;xe(r,"LRN");let c=r.shape[3],u=c-1,p=n.data.get(r.dataId).values,d=w.sizeFromShape(r.shape),h=new Float32Array(d);function m(f){let g=f%c,y=f-g+Math.max(0,g-s),b=f-g+Math.min(g+s,u),x=0;for(;y<=b;y++){let v=p[y];x+=v*v}return x}for(let f=0;f<d;f++){let g=m(f),y=p[f]*Math.pow(i+o*g,-l);h[f]=y}return n.makeTensorInfo(r.shape,r.dtype,h)}var pj={kernelName:rc,backendName:"cpu",kernelFunc:cj};function dj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:c,beta:u}=a;xe(i,"LRNGrad");let p=w.sizeFromShape(i.shape),d=i.shape[3],h=n.data.get(i.dataId).values,m=n.data.get(r.dataId).values,f=n.data.get(s.dataId).values,g=new Float32Array(p),y=p;for(let b=0;b<y;b++){let x=b%d,v=b-x+Math.max(0,x-o),T=b-x+Math.min(d,x+o+1),k=0;for(let S=v;S<T;S++)k+=Math.pow(m[S],2);k=c*k+l;for(let S=v;S<T;S++){let F=-2*c*u*m[S]*f[b]/k;b===S&&(F+=Math.pow(k,-u)),F*=h[b],g[S]+=F}}return n.makeTensorInfo(i.shape,r.dtype,g)}var hj={kernelName:_d,backendName:"cpu",kernelFunc:dj};function S2(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a,o=n,l=r.shape,c=l.length,u=w.parseAxisParam(s,l),p=u,d=_.getAxesPermutation(p,c),h=o.data.get(r.dataId).values;if(d!=null){let v=new Array(c);for(let T=0;T<v.length;T++)v[T]=l[d[T]];h=hv(h,l,r.dtype,d,v),p=_.getInnerMostAxes(p.length,c),l=v}xe(r,"max"),_.assertAxesAreInnerMostDims("max",p,c);let[m,f]=_.computeOutAndReduceShapes(l,p),g=w.sizeFromShape(f),y=QT(h,g,m,r.dtype),b=o.write(y,m,r.dtype),x=m;return i&&(x=_.expandShapeToKeepDim(m,u)),{dataId:b,shape:x,dtype:r.dtype}}var mj={kernelName:Gs,backendName:"cpu",kernelFunc:S2};function fj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;xe(r,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a,c=1;w.assert(_.eitherStridesOrDilationsAreOne(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let u=_.computePool2DInfo(r.shape,s,i,c,o,l),p;if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))p=nr({inputs:{x:r},backend:n});else{let d=n.data.get(r.dataId).values,h=w.computeStrides(r.shape),m=bv(d,r.shape,r.dtype,h,u,"max");p=n.makeTensorInfo(u.outShape,r.dtype,m.values)}return p}var gj={kernelName:js,backendName:"cpu",kernelFunc:fj};function yj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:c}=a;xe(r,"maxPool3d");let u=_.computePool3DInfo(r.shape,s,i,1,o,l,c),p=n.data.get(r.dataId).values,d=w2(p,r.shape,r.dtype,w.computeStrides(r.shape),u,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}var bj={kernelName:sc,backendName:"cpu",kernelFunc:yj};function xj(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:c}=a;xe([r,s],"maxPool3DGrad");let u=_.computePool3DInfo(s.shape,i,o,1,l,c),p=n.bufferSync(s),d=sG(p,u),h=u.strideDepth,m=u.strideHeight,f=u.strideWidth,g=u.dilationDepth,y=u.dilationHeight,b=u.dilationWidth,x=u.effectiveFilterDepth,v=u.effectiveFilterHeight,T=u.effectiveFilterWidth,k=x-1-u.padInfo.front,S=T-1-u.padInfo.left,F=v-1-u.padInfo.top,A=Me(s.shape,"float32"),R=n.bufferSync(r);for(let P=0;P<u.batchSize;++P)for(let z=0;z<u.inChannels;++z)for(let V=0;V<u.inDepth;++V)for(let G=0;G<u.inHeight;++G)for(let H=0;H<u.inWidth;++H){let K=V-k,j=G-F,te=H-S,Q=0;for(let se=0;se<x;se+=g){let ne=(K+se)/h;if(!(ne<0||ne>=u.outDepth||Math.floor(ne)!==ne))for(let ie=0;ie<v;ie+=y){let ee=(j+ie)/m;if(!(ee<0||ee>=u.outHeight||Math.floor(ee)!==ee))for(let pe=0;pe<T;pe+=b){let oe=(te+pe)/f;if(oe<0||oe>=u.outWidth||Math.floor(oe)!==oe)continue;let fe=x*v*T-1-d.get(P,ne,ee,oe,z),me=se*v*T+ie*T+pe,we=fe===me?1:0;we!==0&&(Q+=R.get(P,ne,ee,oe,z)*we)}}}A.set(Q,P,V,G,H,z)}return n.makeTensorInfo(A.shape,A.dtype,A.values)}var vj={kernelName:Fd,backendName:"cpu",kernelFunc:xj};function wj(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,o=s;xe([s,i],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:p}=a,d=_.computePool2DInfo(o.shape,l,c,1,u,p),h=n.data.get(o.dataId).values,m=Me(d.outShape,o.dtype,v2(h,o.shape,o.dtype,d).values),f=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,T=v-1-d.padInfo.left,k=x-1-d.padInfo.top,S=Me(o.shape,"float32"),F=n.data.get(r.dataId).values,A=Me(r.shape,"float32",F);for(let R=0;R<d.batchSize;++R)for(let P=0;P<d.inChannels;++P)for(let z=0;z<d.inHeight;++z)for(let V=0;V<d.inWidth;++V){let G=z-k,H=V-T,K=0;for(let j=0;j<x;j+=y){let te=(G+j)/f;if(!(te<0||te>=d.outHeight||Math.floor(te)!==te))for(let Q=0;Q<v;Q+=b){let se=(H+Q)/g;if(se<0||se>=d.outWidth||Math.floor(se)!==se)continue;let ne=x*v-1-m.get(R,te,se,P),ie=j*v+Q,ee=ne===ie?1:0;ee!==0&&(K+=A.get(R,te,se,P)*ee)}}S.set(K,R,z,V,P)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}var kj={kernelName:Ed,backendName:"cpu",kernelFunc:wj};function Ij(e,t,n,a,r){let s=w.computeStrides(t),i=bv(e,t,n,s,r,"max"),o=v2(e,t,n,r,!0,a);return[i.values,o.values]}var Tj={kernelName:Ad,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;xe(a,"MaxPoolWithArgmax");let c=l.data.get(a.dataId).values,u=_.computePool2DInfo(a.shape,r,s,[1,1],i),[p,d]=Ij(c,a.shape,a.dtype,o,u),h=l.write(p,u.outShape,a.dtype),m=l.write(d,u.outShape,a.dtype);return[{dataId:h,shape:u.outShape,dtype:a.dtype},{dataId:m,shape:u.outShape,dtype:"int32"}]}};function Im(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;xe(r,"sum");let o;r.dtype==="bool"?o=ps({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):o=nr({inputs:{x:r},backend:n});let l=o.shape.length,c=w.parseAxisParam(s,o.shape),u=_.getAxesPermutation(c,l),p=c,d=o;u!=null&&(d=ya({inputs:{x:o},backend:n,attrs:{perm:u}}),p=_.getInnerMostAxes(p.length,l)),_.assertAxesAreInnerMostDims("sum",p,d.shape.length);let[h,m]=_.computeOutAndReduceShapes(d.shape,p),f=_.upcastType(d.dtype,"int32"),g=wm(n,h,f),y=w.sizeFromShape(m),b=n.data.get(g.dataId).values,x=n.data.get(d.dataId).values;for(let v=0;v<b.length;++v){let T=v*y,k=0;for(let S=0;S<y;++S)k+=x[T+S];b[v]=k}if(i){let v=_.expandShapeToKeepDim(g.shape,c),T=g;g=kt({inputs:{x:g},backend:n,attrs:{shape:v}}),n.disposeIntermediateTensorInfo(T)}return n.disposeIntermediateTensorInfo(o),u!=null&&n.disposeIntermediateTensorInfo(d),g}var Nj={kernelName:ci,backendName:"cpu",kernelFunc:Im};function Sj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=w.parseAxisParam(s,r.shape),l=_.computeOutAndReduceShapes(r.shape,o)[1],c=w.sizeFromShape(l),u=[],p=n.makeTensorInfo([],"float32",new Float32Array([c]));u.push(p);let d=ps({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});u.push(d);let h=xv({inputs:{a:d,b:p},backend:n});u.push(h);let m=Im({inputs:{x:h},backend:n,attrs:{axis:s,keepDims:i}});return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var Cj={kernelName:qs,backendName:"cpu",kernelFunc:Sj};function _j(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;xe(r,"min");let o=w.parseAxisParam(s,r.shape),l=o,c=_.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=ya({inputs:{x:r},backend:n,attrs:{perm:c}}),l=_.getInnerMostAxes(l.length,r.shape.length)),_.assertAxesAreInnerMostDims("min",l,u.shape.length);let[p,d]=_.computeOutAndReduceShapes(u.shape,l),h=w.sizeFromShape(d),m=w.makeZerosTypedArray(w.sizeFromShape(p),u.dtype),f=n.data.get(u.dataId).values;for(let y=0;y<m.length;++y){let b=y*h,x=f[b];for(let v=0;v<h;++v){let T=f[b+v];T<x&&(x=T)}m[y]=x}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(p,u.dtype,m);if(i){let y=_.expandShapeToKeepDim(p,o),b=kt({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var Ej={kernelName:Ks,backendName:"cpu",kernelFunc:_j};function Fj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,mode:i}=a;xe(r,"mirrorPad");let o=s.map((b,x)=>b[0]+r.shape[x]+b[1]),l=s.map(b=>b[0]),c=s.map((b,x)=>b[0]+r.shape[x]),u=i==="reflect"?0:1,p=n.data.get(r.dataId).values,d=r.shape.length,h=w.computeStrides(r.shape),m=w.sizeFromShape(o),f=o.length,g=w.computeStrides(o),y=w.getTypedArrayFromDType(r.dtype,m);for(let b=0;b<m;b++){let x=w.indexToLoc(b,f,g);for(let T=0;T<f;T++)x[T]<l[T]?x[T]=l[T]*2-x[T]-u:x[T]>=c[T]&&(x[T]=(c[T]-1)*2-x[T]+u);x=x.map((T,k)=>T-l[k]);let v=w.locToIndex(x,d,h);y[b]=p[v]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}var Aj={kernelName:ic,backendName:"cpu",kernelFunc:Fj},$j=Mt((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),Dj=Qt(el,$j),Rj={kernelName:el,backendName:"cpu",kernelFunc:Dj},Mj=Io(Ww());function C2(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=r.shape.length,o=s;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=w.parseAxisParam([o],r.shape),c=S2({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),u=_.expandShapeToKeepDim(c.shape,l),p=kt({inputs:{x:c},backend:n,attrs:{shape:u}}),d=gv({inputs:{a:r,b:p},backend:n}),h=h2({inputs:{x:d},backend:n}),m=Im({inputs:{x:h},backend:n,attrs:{axis:l,keepDims:!1}}),f=kt({inputs:{x:m},backend:n,attrs:{shape:u}}),g=xv({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}var Pj={kernelName:pi,backendName:"cpu",kernelFunc:C2};function Oj(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=a;xe(r,"multinomial");let l=o?r:C2({inputs:{logits:r},backend:n,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],p=n.data.get(l.dataId).values,d=[c,s],h=w.makeZerosTypedArray(w.sizeFromShape(d),"int32");for(let m=0;m<c;++m){let f=m*u,g=new Float32Array(u-1);g[0]=p[f];for(let x=1;x<g.length;++x)g[x]=g[x-1]+p[f+x];let y=Mj.alea(i.toString()),b=m*s;for(let x=0;x<s;++x){let v=y();h[b+x]=g.length;for(let T=0;T<g.length;T++)if(v<g[T]){h[b+x]=T;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",h)}var Lj={kernelName:$d,backendName:"cpu",kernelFunc:Oj},zj=Ya.nonMaxSuppressionV3Impl;function Wj(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=a;xe(r,"NonMaxSuppression");let c=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,{selectedIndices:p}=zj(c,u,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var Bj={kernelName:al,backendName:"cpu",kernelFunc:Wj},Vj=Ya.nonMaxSuppressionV4Impl;function Uj(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:c}=a;xe(r,"NonMaxSuppressionPadded");let u=n.data.get(r.dataId).values,p=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:h}=Vj(u,p,i,o,l,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var Gj={kernelName:rl,backendName:"cpu",kernelFunc:Uj},Hj=Ya.nonMaxSuppressionV5Impl;function jj(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:c}=a;xe(r,"NonMaxSuppressionWithScore");let u=n.data.get(r.dataId).values,p=n.data.get(s.dataId).values,d=i,h=o,m=l,f=c,{selectedIndices:g,selectedScores:y}=Hj(u,p,d,h,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var qj={kernelName:sl,backendName:"cpu",kernelFunc:jj};function Kj(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{depth:s,onValue:i,offValue:o}=a;xe(r,"oneHot");let l=w.sizeFromShape(r.shape),c=new Float32Array(l*s);c.fill(o);let u=n.data.get(r.dataId).values;for(let p=0;p<l;++p)u[p]>=0&&u[p]<s&&(c[p*s+u[p]]=i);return n.makeTensorInfo([...r.shape,s],"int32",c)}var Xj={kernelName:Js,backendName:"cpu",kernelFunc:Kj};function Tm(e){let{inputs:t,backend:n}=e,{x:a}=t;if(a.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(a.dtype==="complex64"){let r=Bi({inputs:{input:a},backend:n}),s=Tm({inputs:{x:r},backend:n}),i=tu({inputs:{input:a},backend:n}),o=Tm({inputs:{x:i},backend:n}),l=Un({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return kv({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}var Yj={kernelName:Il,backendName:"cpu",kernelFunc:Tm};function _2(e){let{inputs:t,backend:n}=e,{x:a}=t;if(a.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(a.dtype==="complex64"){let r=Bi({inputs:{input:a},backend:n}),s=_2({inputs:{x:r},backend:n}),i=tu({inputs:{input:a},backend:n}),o=Tm({inputs:{x:i},backend:n}),l=Un({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return kv({backend:n,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}var Jj={kernelName:il,backendName:"cpu",kernelFunc:_2};function E2(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(t.length===1)return km({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(s,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(u=>{let p=km({inputs:{input:u},backend:n,attrs:{dim:r}});return o.push(p),p}),c=nu({inputs:l,backend:n,attrs:{axis:r}});return o.forEach(u=>n.disposeIntermediateTensorInfo(u)),c}var Qj={kernelName:ol,backendName:"cpu",kernelFunc:E2};function Zj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a;xe(r,"pad");let o=s.map((y,b)=>y[0]+r.shape[b]+y[1]),l=s.map(y=>y[0]),c=n.data.get(r.dataId).values,u=w.sizeFromShape(r.shape),p=r.shape.length,d=w.computeStrides(r.shape),h=w.sizeFromShape(o),m=o.length,f=w.computeStrides(o),g=w.getTypedArrayFromDType(r.dtype,h);i!==0&&g.fill(i);for(let y=0;y<u;y++){let b=w.indexToLoc(y,p,d).map((v,T)=>v+l[T]),x=w.locToIndex(b,m,f);g[x]=c[y]}return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}var F2={kernelName:Qs,backendName:"cpu",kernelFunc:Zj},e6=Mt((e,t)=>Math.pow(e,t)),t6=Qt(Zs,e6),n6={kernelName:Zs,backendName:"cpu",kernelFunc:t6};function a6(e){let{backend:t,attrs:n}=e,{start:a,stop:r,dtype:s,step:i}=n,o=r2(a,r,i,s);return t.makeTensorInfo([o.length],s,o)}var r6={kernelName:oc,backendName:"cpu",kernelFunc:a6},s6=st(ul,e=>1/e),i6={kernelName:ul,backendName:"cpu",kernelFunc:s6};function o6(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a;xe(r,"resizeBilinear");let l=w.computeStrides(r.shape),[c,u]=o,[p,d,h,m]=r.shape,f=n.data.get(r.dataId).values,g=new Float32Array(w.sizeFromShape([p,c,u,m])),y=[s&&c>1?d-1:d,s&&u>1?h-1:h],b=[s&&c>1?c-1:c,s&&u>1?u-1:u],x=0,v=y[0]/b[0],T=y[1]/b[1];for(let k=0;k<p;k++)for(let S=0;S<c;S++){let F;i?F=v*(S+.5)-.5:F=v*S;let A=Math.max(0,Math.floor(F)),R=F-A,P=Math.min(d-1,Math.ceil(F)),z=k*l[0]+A*l[1],V=k*l[0]+P*l[1];for(let G=0;G<u;G++){let H;i?H=T*(G+.5)-.5:H=T*G;let K=Math.max(0,Math.floor(H)),j=H-K,te=Math.min(h-1,Math.ceil(H)),Q=z+K*l[2],se=V+K*l[2],ne=z+te*l[2],ie=V+te*l[2];for(let ee=0;ee<m;ee++){let pe=f[Q+ee],oe=f[se+ee],fe=f[ne+ee],me=f[ie+ee],we=pe+(fe-pe)*j,Te=oe+(me-oe)*j,_e=we+(Te-we)*R;g[x++]=_e}}}return n.makeTensorInfo([p,c,u,m],"float32",g)}var l6={kernelName:ni,backendName:"cpu",kernelFunc:o6};function u6(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a;xe([s,r],"resizeBilinearGrad");let o=w.computeStrides(r.shape),[l,c,u,p]=r.shape,[,d,h]=s.shape,m=new Float32Array(l*c*u*p),f=[i&&d>1?c-1:c,i&&h>1?u-1:u],g=[i&&d>1?d-1:d,i&&h>1?h-1:h],y=f[0]/g[0],b=f[1]/g[1],x=n.data.get(s.dataId).values,v=0;for(let T=0;T<l;T++){let k=T*o[0];for(let S=0;S<d;S++){let F=S*y,A=Math.floor(F),R=Math.min(Math.ceil(F),c-1),P=k+A*o[1],z=k+R*o[1],V=F-A,G=1-V;for(let H=0;H<h;H++){let K=H*b,j=Math.floor(K),te=Math.min(Math.ceil(K),u-1),Q=K-j,se=1-Q,ne=P+j*o[2],ie=P+te*o[2],ee=z+j*o[2],pe=z+te*o[2],oe=G*se,fe=G*Q,me=V*se,we=V*Q;for(let Te=0;Te<p;Te++){let _e=x[v++];m[ne+Te]+=_e*oe,m[ie+Te]+=_e*fe,m[ee+Te]+=_e*me,m[pe+Te]+=_e*we}}}}return n.makeTensorInfo([l,u,c,p],"float32",m)}var c6={kernelName:Md,backendName:"cpu",kernelFunc:u6};function p6(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a;xe(r,"resizeNearestNeighbor");let l=w.computeStrides(r.shape),[c,u]=o,[p,d,h,m]=r.shape,f=n.data.get(r.dataId).values,g=new Float32Array(p*c*u*m),y=[s&&c>1?d-1:d,s&&u>1?h-1:h],b=[s&&c>1?c-1:c,s&&u>1?u-1:u],x=y[0]/b[0],v=y[1]/b[1],T=0;for(let k=0;k<p;k++){let S=k*l[0];for(let F=0;F<c;F++){let A=i?x*(F+.5):x*F,R=Math.min(d-1,s?Math.round(A):Math.floor(A));i&&(R=Math.max(0,R));let P=S+R*l[1];for(let z=0;z<u;z++){let V=i?v*(z+.5):v*z,G=Math.min(h-1,s?Math.round(V):Math.floor(V));i&&(G=Math.max(0,G));let H=P+G*l[2];for(let K=0;K<m;K++){let j=f[H+K];g[T++]=j}}}}return n.makeTensorInfo([p,c,u,m],r.dtype,g)}var d6={kernelName:lc,backendName:"cpu",kernelFunc:p6};function h6(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a;xe([s,r],"resizeNearestNeighborGrad");let o=w.computeStrides(r.shape),l=w.computeStrides(s.shape),[c,u,p,d]=r.shape,[,h,m]=s.shape,f=new Float32Array(c*u*p*d),g=n.data.get(s.dataId).values,y=[i&&h>1?u-1:u,i&&m>1?p-1:p],b=[i&&h>1?h-1:h,i&&m>1?m-1:m],x=y[0]/b[0],v=y[1]/b[1],T=1/x,k=1/v,S=Math.ceil(T)*2+2,F=Math.ceil(k)*2+2;for(let A=0;A<c;A++){let R=A*o[0];for(let P=0;P<u;P++){let z=R+P*o[1],V=Math.floor(P*T),G=Math.floor(V-S/2);for(let H=0;H<p;H++){let K=z+H*o[2],j=Math.floor(H*k),te=Math.floor(j-F/2);for(let Q=0;Q<d;Q++){let se=0;for(let ne=0;ne<S;ne++){let ie=ne+G;if(ie<0||ie>=h)continue;let ee=R+ie*l[1],pe=ie*x,oe=Math.min(u-1,i?Math.round(pe):Math.floor(pe));if(P===oe)for(let fe=0;fe<F;fe++){let me=fe+te;if(me<0||me>=m)continue;let we=ee+me*l[2],Te=me*v,_e=Math.min(p-1,i?Math.round(Te):Math.floor(Te));H===_e&&(se+=g[we+Q])}}f[K+Q]=se}}}}return n.makeTensorInfo(r.shape,r.dtype,f)}var m6={kernelName:Rd,backendName:"cpu",kernelFunc:h6};function f6(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a;xe(r,"reverse");let i=r.shape.length,o=w.parseAxisParam(s,r.shape);if(i===0)return nr({inputs:{x:r},backend:n});let l=new Lt(r.shape,r.dtype),c=n.bufferSync(r);for(let u=0;u<l.size;u++){let p=l.indexToLoc(u),d=p.slice();o.forEach(h=>d[h]=r.shape[h]-1-d[h]),l.set(c.get(...d),...p)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var g6={kernelName:ri,backendName:"cpu",kernelFunc:f6},y6={kernelName:Tl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,{radians:r,fillValue:s,center:i}=t,o=n,l=w.getTypedArrayFromDType(a.dtype,w.sizeFromShape(a.shape)),[c,u,p,d]=a.shape,[h,m]=_.getImageCenter(i,u,p),f=255,g=Math.sin(r),y=Math.cos(r),b=o.data.get(a.dataId).values;for(let x=0;x<c;x++){let v=x*p*u*d;for(let T=0;T<u;T++){let k=T*(p*d);for(let S=0;S<p;S++){let F=S*d;for(let A=0;A<d;A++){let R=[c,T,S,A],P=R[2],z=R[1],V=(P-h)*y-(z-m)*g,G=(P-h)*g+(z-m)*y;V=Math.round(V+h),G=Math.round(G+m);let H=s;if(typeof s!="number"&&(A===3?H=f:H=s[A]),V>=0&&V<p&&G>=0&&G<u){let j=G*(p*d),te=V*d,Q=v+j+te+A;H=b[Q]}let K=v+k+F+A;l[K]=H}}}}return{dataId:o.write(l,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},b6=st(si,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),x6={kernelName:si,backendName:"cpu",kernelFunc:b6};function A2(e,t,n,a,r,s,i,o,l,c){let u=[a/r,r],p=e.values,d=t.values;if(a===0)return Me(n,t.dtype);let h=Me(u,t.dtype);h.values.fill(l);for(let m=0;m<s;m++){let f=[],g=0;for(let y=0;y<i;y++){let b=p[m*i+y];f.push(b),g+=b*o[y]}if(g<0||g>=a/r)throw new Error(`Invalid indices: ${f} does not index into ${n}`);for(let y=0;y<r;y++)c?h.values[g*r+y]+=d[m*r+y]:h.values[g*r+y]=t.rank===0?d[0]:d[m*r+y]}return h}function v6(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:o,numUpdates:l,sliceSize:c,strides:u,outputSize:p}=_.calculateShapes(s,r,i),d=!0,h=n.bufferSync(r),m=n.bufferSync(s),f=A2(h,m,i,p,c,l,o,u,0,d);return n.makeTensorInfo(i,f.dtype,f.values)}var w6={kernelName:pl,backendName:"cpu",kernelFunc:v6};function k6(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t;xe([a,r,s],"select");let i=a.shape.length,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,u=ua(r.dtype,s.dtype),p=w.makeZerosTypedArray(w.sizeFromShape(r.shape),u),d=0,h=i===0||i>1||r.shape.length===1?1:w.sizeFromShape(r.shape.slice(1));for(let m=0;m<o.length;m++)for(let f=0;f<h;f++)o[m]===1?p[d++]=l[m]:p[d++]=c[m];return n.makeTensorInfo(r.shape,u,p)}var I6={kernelName:dl,backendName:"cpu",kernelFunc:k6},T6=_.SELU_SCALEALPHA,N6=_.SELU_SCALE,S6=st(hl,e=>e>=0?N6*e:T6*(Math.exp(e)-1)),C6={kernelName:hl,backendName:"cpu",kernelFunc:S6},_6=st(li,e=>1/(1+Math.exp(-e))),E6={kernelName:li,backendName:"cpu",kernelFunc:_6},F6=st(gl,e=>e<0?-1:e>0?1:0),A6={kernelName:gl,backendName:"cpu",kernelFunc:F6},$6=st(oi,e=>Math.sin(e)),D6={kernelName:oi,backendName:"cpu",kernelFunc:$6},R6=st(fl,e=>Math.sinh(e)),M6={kernelName:fl,backendName:"cpu",kernelFunc:R6},P6=11920928955078125e-23,$2=Math.log(P6)+2,O6=st(yl,e=>{let t=e>-$2,n=e<$2,a=Math.exp(e),r;return n?r=a:t?r=e:r=Math.log(1+a),r}),L6={kernelName:yl,backendName:"cpu",kernelFunc:O6};function z6(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;xe([r],"spaceToBatchND");let o=w.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<r.shape.length;++g)l.push([0,0]);let c=F2.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),u=_.getReshaped(c.shape,s,o,!1),p=_.getPermuted(u.length,s.length,!1),d=_.getReshapedPermuted(c.shape,s,o,!1),h=kt({inputs:{x:c},backend:n,attrs:{shape:u}}),m=ya({inputs:{x:h},backend:n,attrs:{perm:p}}),f=kt({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),f}var W6={kernelName:uc,backendName:"cpu",kernelFunc:z6};function B6(e){let{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:c,sliceSize:u,strides:p,outputSize:d}=_.calculateShapes(s,r,o),h=!1,m=n.bufferSync(r),f=n.bufferSync(s),g=n.data.get(i.dataId).values[0],y=A2(m,f,o,d,u,c,l,p,g,h);return n.makeTensorInfo(o,y.dtype,y.values)}var V6={kernelName:Pd,backendName:"cpu",kernelFunc:B6};function U6(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=w.parseAxisParam(i,r.shape)[0],l=_.prepareSplitSize(r,s,o),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(p=>{let d=[...u];d[o]=p;let h=Vi({inputs:{x:r},backend:n,attrs:{begin:c,size:d}});return c[o]+=p,h})}var G6={kernelName:bl,backendName:"cpu",kernelFunc:U6},H6=st(ui,e=>Math.sqrt(e)),j6={kernelName:ui,backendName:"cpu",kernelFunc:H6},q6={kernelName:cc,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,a=t;xe(n,"square");let r=a.data.get(n.dataId).values,s=new Float32Array(r.length);for(let i=0;i<r.length;++i){let o=r[i];s[i]=o*o}return{dataId:a.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},K6=st(Gr,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),X6={kernelName:Gr,backendName:"cpu",kernelFunc:K6};function Y6(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:p,shrinkAxisMask:d}=a;xe(r,"stridedSlice");let{nonStrided:h,$begin:m,$strides:f,size:g,newShape:y,outShape:b}=an.sliceInfo(r.shape,s,i,o,l,c,u,p,d),x=kt({inputs:{x:r},backend:n,attrs:{shape:y}}),v;if(h){let k=Vi({inputs:{x},backend:n,attrs:{begin:m,size:g}});v=kt({inputs:{x:k},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(k)}else if(b.some(k=>k===0))v=n.makeTensorInfo(b,r.dtype,[]);else{let k=n.bufferSync(x),S=l2(b,k,f,m);v=n.makeTensorInfo(S.shape,S.dtype,S.values)}let T=kt({inputs:{x:v},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),T}var J6={kernelName:xl,backendName:"cpu",kernelFunc:Y6},Q6=st(vl,e=>Math.tan(e)),Z6={kernelName:vl,backendName:"cpu",kernelFunc:Q6},eq=st(mi,e=>Math.tanh(e)),tq={kernelName:mi,backendName:"cpu",kernelFunc:eq};function nq(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;xe(r,"tile");let i=c2(n.bufferSync(r),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}var aq={kernelName:Ur,backendName:"cpu",kernelFunc:nq};function rq(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a;xe(r,"topk");let o=n.data.get(r.dataId).values,[l,c]=p2(o,r.shape,r.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}var sq={kernelName:wl,backendName:"cpu",kernelFunc:rq};function lq(e){let{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:c}=n,[u,p,d,h]=r.shape,[m,f]=c!=null?c:[p,d],g=[u,m,f,h],y=w.computeStrides(r.shape),b=y[0],x=y[1],v=y[2],T=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(g));T.fill(l);let k=a.data.get(r.dataId).values,S=a.data.get(s.dataId).values;for(let F=0;F<u;++F){let A=s.shape[0]===1?S:S.subarray(F*8,F*8+8);for(let R=0;R<m;++R)for(let P=0;P<f;++P)for(let z=0;z<h;++z){let V,G=A[6]*P+A[7]*R+1;if(G===0)continue;let H=(A[0]*P+A[1]*R+A[2])/G,K=(A[3]*P+A[4]*R+A[5])/G,j=D2(H,d,o),te=D2(K,p,o);switch(i){case"nearest":V=iq(k,p,d,b,x,v,F,te,j,z,l);break;case"bilinear":V=oq(k,p,d,b,x,v,F,te,j,z,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let Q=F*b+R*x+P*v+z;T[Q]=V}return a.makeTensorInfo(g,r.dtype,T)}return{dataId:a.write(T,g,r.dtype),shape:r.shape,dtype:r.dtype}}var uq={kernelName:Od,backendName:"cpu",kernelFunc:lq};function D2(e,t,n){switch(n){case"reflect":return cq(e,t);case"wrap":return pq(e,t);case"nearest":return hq(e,t);case"constant":default:return dq(e,t)}}function cq(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let a=2*t;n<a&&(n=a*Math.trunc(-n/a)+n),n=n<-t?n+a:-n-1}else if(n>t-1)if(t<=1)n=0;else{let a=2*t;n-=a*Math.trunc(n/a),n>=t&&(n=a-n-1)}return w.clamp(0,n,t-1)}function pq(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let a=t-1;n+=t*(Math.trunc(-n/a)+1)}else if(n>t-1)if(t<=1)n=0;else{let a=t-1;n-=t*Math.trunc(n/a)}return w.clamp(0,n,t-1)}function dq(e,t){return e}function hq(e,t){return w.clamp(0,e,t-1)}function ip(e,t,n,a,r,s,i,o,l,c,u){let p=i*a+o*r+l*s+c;return 0<=o&&o<t&&0<=l&&l<n?e[p]:u}function iq(e,t,n,a,r,s,i,o,l,c,u){let p=Math.round(o),d=Math.round(l);return ip(e,t,n,a,r,s,i,p,d,c,u)}function oq(e,t,n,a,r,s,i,o,l,c,u){let p=Math.floor(o),d=Math.floor(l),h=p+1,m=d+1,f=(m-l)*ip(e,t,n,a,r,s,i,p,d,c,u)+(l-d)*ip(e,t,n,a,r,s,i,p,m,c,u),g=(m-l)*ip(e,t,n,a,r,s,i,h,d,c,u)+(l-d)*ip(e,t,n,a,r,s,i,h,m,c,u);return(h-o)*f+(o-p)*g}function mq(e){let{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;xe(s,"unique");let i=a.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:c}=d2(i,r,s.shape,s.dtype);return[a.makeTensorInfo(l,s.dtype,o),a.makeTensorInfo([c.length],"int32",c)]}var fq={kernelName:Ld,backendName:"cpu",kernelFunc:mq};function gq(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:s}=a;s<0&&(s+=r.shape.length);let i=r.shape.length,o=r.shape[s],l=new Array(i-1),c=0;for(let h=0;h<i;h++)h!==s&&(l[c++]=r.shape[h]);let u=new Array(i).fill(0),p=r.shape.slice();p[s]=1;let d=new Array(o);for(let h=0;h<d.length;h++){u[s]=h;let m=Vi({inputs:{x:r},backend:n,attrs:{begin:u,size:p}});d[h]=kt({inputs:{x:m},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(m)}return d}var yq={kernelName:kl,backendName:"cpu",kernelFunc:gq};function bq(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a;xe(r,"unsortedSegmentSum");let o=r.shape.length,l=s.shape.length,c=[],u=[],p=o-l,d=s;for(let m=0;m<p;++m){let f=km({inputs:{input:d},backend:n,attrs:{dim:m+1}});d=f,u.push(f)}for(let m=0;m<i;++m){let f=w.createScalarValue(m,"int32"),g=n.makeTensorInfo([],"int32",f),y=T2({inputs:{a:g,b:d},backend:n}),b=ps({inputs:{x:y},backend:n,attrs:{dtype:"float32"}}),x=fv({inputs:{a:b,b:r},backend:n}),v=Im({inputs:{x},backend:n,attrs:{axis:0,keepDims:!1}});c.push(v),u.push(g),u.push(y),u.push(b),u.push(x),u.push(v)}let h=E2({inputs:c,backend:n,attrs:{axis:0}});return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),h}var xq={kernelName:pc,backendName:"cpu",kernelFunc:bq},vq=[DU,OV,MU,OU,UV,zU,BU,UU,HU,qU,XU,JU,ZU,nG,rG,oG,uG,pG,hG,AU,fG,yG,xG,BV,HV,wG,LV,IG,NG,_G,FG,SG,RG,PG,$G,LG,WG,VG,GG,jG,KG,XG,JG,ZG,tH,nH,rH,aH,vv,TU,iH,lH,gH,jV,yH,KV,IH,NH,SH,YV,EH,AH,DH,MH,OH,QV,WH,zV,VH,TG,GH,jH,KH,NU,eU,JH,ZH,nU,tj,rj,ij,uj,pj,hj,rU,gj,bj,vj,kj,Tj,mj,Cj,Ej,iU,Aj,Rj,Lj,lU,cU,Bj,Gj,qj,dU,Xj,Jj,Qj,F2,n6,CU,fU,r6,WV,i6,_U,EU,FU,l6,c6,d6,m6,g6,y6,x6,yU,w6,I6,C6,E6,A6,D6,M6,bU,Pj,L6,W6,V6,G6,j6,q6,vU,X6,J6,kU,Nj,Z6,tq,aq,sq,hU,uq,fq,yq,xq,Yj];for(let e of vq)hc(e);var Ui={},Iv={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function wq(e,t){Ui[e]=t}function ar(e){if(!(e in Ui)){let n=kq(e);if(n!==null)Ui[e]=n;else return console.log("Could not get context for WebGL version",e),null}let t=Ui[e];return t.isContextLost()?(delete Ui[e],ar(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Ui[e])}function Iq(e){if(typeof OffscreenCanvas!="undefined"&&e===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function kq(e){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=Iq(e);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete Ui[e]},!1),e===1?t.getContext("webgl",Iv)||t.getContext("experimental-webgl",Iv):t.getContext("webgl2",Iv)}var op;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(op||(op={}));var na;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(na||(na={}));var sn;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(sn||(sn={}));function lp(e,t){return[t,e]}function Tq(e,t){return e*t}function up(e){let t=w.sizeFromShape(e),n=Math.ceil(t/4);return w.sizeToSquarishShape(n)}function au(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Nq(e,t){let[n,a]=au(e,t);return n*a*4}function Tv(e,t){let n=e,a,r,s,i,o,l,c,u,p,d;return Z().getNumber("WEBGL_VERSION")===2?(a=n.R32F,r=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,c=4,u=1,p=n.HALF_FLOAT,d=n.FLOAT):(a=e.RGBA,r=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,c=4,u=4,p=t!=null?t.HALF_FLOAT_OES:null,d=e.FLOAT),l=e.RGBA,{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:p,textureTypeFloat:d}}function Ie(e,t){let n=t();return Z().getBool("DEBUG")&&Sq(e),n}function Sq(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+Cq(e,t))}var _q=596e-10,Eq=65504;function Fq(e){return!!(Z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||_q<Math.abs(e)&&Math.abs(e)<Eq)}function Cq(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Nm(e,t){return Tr(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function Aq(e,t){let n=Tr(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ie(e,()=>e.shaderSource(n,t)),Ie(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function Dq(e,t){let n=Tr(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ie(e,()=>e.shaderSource(n,t)),Ie(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw $q(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var Rq=/ERROR: [0-9]+:([0-9]+):/g;function $q(e,t){let n=Rq.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let a=+n[1],r=e.split(`
`),s=r.length.toString().length+2,i=r.map((p,d)=>w.rightPad((d+1).toString(),s)+p),o=0;for(let p=0;p<i.length;p++)o=Math.max(i[p].length,o);let l=i.slice(0,a-1),c=i.slice(a-1,a),u=i.slice(a);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${w.rightPad(c[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function Mq(e){return Tr(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function Pq(e,t){if(Ie(e,()=>e.linkProgram(t)),e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Nv(e,t){if(Ie(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function Oq(e,t){let n=Tr(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Ie(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Ie(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function Lq(e,t){let n=Tr(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Ie(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),Ie(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function zq(e){return Tr(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function Wq(e,t){let n=Z().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let a=`[${e}x${t}]`;throw new Error("Requested texture size "+a+" is invalid.")}if(e>n||t>n){let a=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+r+".")}}function Bq(e){return Tr(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function R2(e,t,n,a,r,s,i){let o=e.getAttribLocation(t,n);return o===-1?!1:(Ie(e,()=>e.bindBuffer(e.ARRAY_BUFFER,a)),Ie(e,()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,s,i)),Ie(e,()=>e.enableVertexAttribArray(o)),!0)}function Uq(e,t,n){Vq(e,n),Ie(e,()=>e.activeTexture(e.TEXTURE0+n)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function Gq(e,t,n){return Tr(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function Hq(e,t,n){return e.getUniformLocation(t,n)}function jq(e,t,n,a){Ie(e,()=>Uq(e,t,a)),Ie(e,()=>e.uniform1i(n,a))}function Sv(e,t,n){Ie(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),Ie(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function M2(e,t){Ie(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),Ie(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Sm(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+qq(e,t))}function qq(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Tr(e,t,n){let a=Ie(e,()=>t());if(a==null)throw new Error(n);return a}function Vq(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n){let r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function ru(e,t=2){return w.sizeFromShape(e.slice(0,e.length-t))}function su(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Cv(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[ru(e),...su(e)]),t}function Kq(e,t=!1){let n=Z().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,e=e.map((r,s)=>s>=e.length-2?w.nearestLargerEven(e[s]):e[s]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=w.squeezeShape(e).newShape);let a=w.sizeFromShape(e);if(e.length<=1&&a<=n)return[1,a];if(e.length===2&&e[0]<=n&&e[1]<=n)return e;if(e.length===3&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let r=ru(e),s=2,i=2;return e.length&&([s,i]=su(e)),a=r*(s/2)*(i/2),w.sizeToSquarishShape(a).map(o=>o*2)}return w.sizeToSquarishShape(a)}function Cm(e){return e%2==0}function _m(e,t){if(e=e.slice(-2),t=t.slice(-2),w.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],a=t.slice(-1)[0];if(n===a||Cm(n)&&Cm(a)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&Cm(e[0])&&Cm(t[0])}var _v,Ev;function Xq(e){if(_v==null){let t=ar(e);_v=t.getParameter(t.MAX_TEXTURE_SIZE)}return _v}function Yq(e){if(Ev==null){let t=ar(e);Ev=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Ev)}function Jq(e){if(e===0)return 0;let t,n=ar(e);return ba(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:ba(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function ba(e,t){return e.getExtension(t)!=null}function P2(e){try{if(ar(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function Qq(e){if(e===0)return!1;let t=ar(e);if(e===1){if(!ba(t,"OES_texture_float"))return!1}else if(!ba(t,"EXT_color_buffer_float"))return!1;return Fv(t)}function e5(e){if(e===0)return!1;let t=ar(e);if(e===1){if(!ba(t,"OES_texture_float")||!ba(t,"WEBGL_color_buffer_float"))return!1}else{if(ba(t,"EXT_color_buffer_float"))return Fv(t);let n="EXT_color_buffer_half_float";if(ba(t,n)){let a=t.getExtension(n);return Zq(t,a)}return!1}return Fv(t)}function Fv(e){let t=Tv(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let a=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,a,r,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),i}function Zq(e,t){let n=Tv(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);let r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(i),o}function t5(e){return e!==2?!1:ar(e).fenceSync!=null}function cp(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Ce=Z();Ce.registerFlag("HAS_WEBGL",()=>Ce.getNumber("WEBGL_VERSION")>0);Ce.registerFlag("WEBGL_VERSION",()=>P2(2)?2:P2(1)?1:0);Ce.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ce.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ce.get("WEBGL_VERSION")===2);Ce.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ce.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ce.registerFlag("WEBGL_PACK",()=>Ce.getBool("HAS_WEBGL"));Ce.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_PACK_CLIP",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1);Ce.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_PACK_REDUCE",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_CONV_IM2COL",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>Xq(Ce.getNumber("WEBGL_VERSION")));Ce.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>Yq(Ce.getNumber("WEBGL_VERSION")));Ce.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=Ce.getNumber("WEBGL_VERSION");return e===0?0:Jq(e)});Ce.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ce.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!vc.isMobile());Ce.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>Qq(Ce.getNumber("WEBGL_VERSION")));Ce.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ce.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ce.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ce.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>e5(Ce.getNumber("WEBGL_VERSION")));Ce.registerFlag("WEBGL_FENCE_API_ENABLED",()=>t5(Ce.getNumber("WEBGL_VERSION")));Ce.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ce.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ce.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});Ce.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>vc.isMobile()&&Ce.getBool("IS_CHROME")?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});function fn(){let e,t,n,a,r,s,i,o,l,c;return Z().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",a="in",r="texture",s="outputColor",i="out vec4 outputColor;",o=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",a="varying",r="texture2D",s="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:c}}function Gi(e,t,n="index"){let a=w.computeStrides(t);return a.map((r,s)=>{let i=`int ${e[s]} = ${n} / ${r}`,o=s===a.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r}`:`index -= ${e[s]} * ${r}`;return`${i}; ${o};`}).join("")}function Av(e){let t=w.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}var O2=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,n5=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=op.DENSE;let t=up(e),n=fn();this.outputShape=e,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${Gi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${t[0]}, ${t[1]}));
        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${n.output} = result;
      }
    `}},a5=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=op.DENSE;let t=up(e),n=fn();this.outputShape=e,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${Gi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${t[0]}, ${t[1]}));
        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${n.output} = result;
      }
    `}},r5=class{constructor(e){this.variableNames=["A"],this.outTexUsage=na.DOWNLOAD;let t=fn();this.outputShape=e,this.userCode=`
      ${O2}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},s5=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=na.DOWNLOAD;let t=fn();this.outputShape=e,this.userCode=`
      ${O2}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},i5=class{constructor(e,t,n=!1){this.variableNames=["A"];let a=fn(),[r,s]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`
      ${Av(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / ${s};
        int c = imod(flatIndex, ${s});
        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${r}.0);
        vec4 values = ${a.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${a.output} = vec4(${i}, 0., 0., 0.);
      }
    `}},o5=class{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let a=fn(),[r,s]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let l=0;l<=1;l++)for(let c=0;c<=1;c++){let u=l*2+c;i+=`
          localCoords = coords;
          if(localCoords[2] + ${c} < ${e[2]}) {
            localCoords[2] += ${c};
            if(localCoords[1] + ${l} < ${e[1]}) {
              localCoords[1] += ${l};

              flatIndex = getFlatIndex(localCoords);
              offset = imod(flatIndex, 4);

              flatIndex = idiv(flatIndex, 4, 1.);

              r = flatIndex / ${s};
              c = imod(flatIndex, ${s});
              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${r}.0);
              values = ${a.texture2D}(A, uv);

              if(offset == 0) {
                result[${u}] = values[0];
              } else if(offset == 1) {
                result[${u}] = values[1];
              } else if(offset == 2) {
                result[${u}] = values[2];
              } else {
                result[${u}] = values[3];
              }
            }
          }
        `}this.userCode=`
      ${Av(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        vec4 result = vec4(0.);
        int flatIndex, r, c, offset;
        ivec3 localCoords;
        vec2 uv;
        vec4 values;

        ${i}

        ${a.output} = ${o};
      }
    `}};function l5(e){let t=fn(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return Aq(e,n)}function u5(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return Oq(e,t)}function c5(e){let t=new Uint16Array([0,1,2,2,1,3]);return Lq(e,t)}function pp(e,t,n,a,r,s){Wq(t,n);let i=zq(e),o=e.TEXTURE_2D;return Ie(e,()=>e.bindTexture(o,i)),Ie(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),Ie(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),Ie(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),Ie(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),Ie(e,()=>e.texImage2D(o,0,a,t,n,0,r,s,null)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,null)),i}function L2(e){return e.internalFormatFloat}function p5(e,t,n,a){let[r,s]=lp(t,n);return pp(e,r,s,L2(a),a.textureFormatFloat,e.FLOAT)}function z2(e){return e.internalFormatHalfFloat}function d5(e,t,n,a){let[r,s]=lp(t,n);return pp(e,r,s,z2(a),a.textureFormatFloat,a.textureTypeHalfFloat)}function W2(e){return e.downloadTextureFormat}function h5(e,t,n,a){let[r,s]=lp(t,n);return pp(e,r,s,W2(a),e.RGBA,e.UNSIGNED_BYTE)}function B2(e){return e.internalFormatPackedFloat}function m5(e,t,n,a){let[r,s]=au(t,n);return pp(e,r,s,B2(a),e.RGBA,e.FLOAT)}function V2(e){return e.internalFormatPackedHalfFloat}function f5(e,t,n,a){let[r,s]=au(t,n);return pp(e,r,s,V2(a),e.RGBA,a.textureTypeHalfFloat)}function g5(e,t,n){let a=0,r=3*4,s=3*4+2*4;return Ie(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),R2(e,t,"clipSpacePos",n,3,s,a)&&R2(e,t,"uv",n,2,s,r)}function y5(e,t,n,a,r,s){Ie(e,()=>e.bindTexture(e.TEXTURE_2D,t));let i,o,l;r instanceof Uint8Array?(i=new Uint8Array(n*a*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*a*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(r),Ie(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,a,0,e.RGBA,o,i)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function b5(e,t,n){Ie(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?Ie(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):Ie(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function x5(e,t,n,a){let r=e.createBuffer();Ie(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let s=4*4*t*n;return Ie(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),Ie(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),Ie(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function v5(e,t,n){let a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}function w5(e,t,n,a){let[r,s]=lp(t,n),i=4,o=new Uint8Array(Tq(t*n,i));return Ie(e,()=>e.readPixels(0,0,r,s,a.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function k5(e,t,n,a,r,s,i,o){let l=e,c=new Float32Array(Nq(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function I5(e,t,n){let a=new Float32Array(t*n*4);return Ie(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a)),a}var N5=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=Z().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,wq(t,e)):this.gl=ar(t);let n="WEBGL_color_buffer_float",a="EXT_color_buffer_half_float";if(Z().getNumber("WEBGL_VERSION")===1){let r="OES_texture_float",s="OES_texture_half_float";if(this.textureFloatExtension=Nm(this.gl,r),ba(this.gl,s))this.textureHalfFloatExtension=Nm(this.gl,s);else if(Z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),ba(this.gl,a))this.colorBufferHalfFloatExtension=Nm(this.gl,a);else if(Z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",ba(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(ba(this.gl,a))this.colorBufferHalfFloatExtension=this.gl.getExtension(a);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=u5(this.gl),this.indexBuffer=c5(this.gl),this.framebuffer=Bq(this.gl),this.textureConfig=Tv(this.gl,this.textureHalfFloatExtension)}get debug(){return Z().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;Ie(e,()=>e.finish()),Ie(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Ie(e,()=>e.deleteFramebuffer(this.framebuffer)),Ie(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Ie(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Ie(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),p5(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),d5(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),h5(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),b5(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),y5(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),f5(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),m5(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(M2(this.gl,this.framebuffer),this.outputTexture=null),Ie(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>w5(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,a,r,s){return k5(this.gl,e,t,n,a,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return v5(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let a=x5(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Z().getBool("WEBGL_FENCE_API_ENABLED")){let a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let s=a.clientWaitSync(r,0,0);return s===a.ALREADY_SIGNALED||s===a.CONDITION_SATISFIED},t=r}else Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>I5(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl,n=Dq(t,e),a=l5(t),r=Mq(t);return Ie(t,()=>t.attachShader(r,a)),Ie(t,()=>t.attachShader(r,n)),Pq(t,r),this.debug&&Nv(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=g5(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&Ie(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Nv(this.gl,this.program),Ie(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?Gq(this.gl,e,t):Hq(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Ie(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),jq(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[a,r]=au(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Nv(this.gl,this.program),Sm(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),Ie(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ie(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Nm(this.gl,Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,a=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(a.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await w.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,a=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),a=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=T5(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&w.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Sv(this.gl,e,this.framebuffer),this.debug&&Sm(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Sv(this.gl,this.outputTexture,this.framebuffer),this.debug&&Sm(this.gl)):M2(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let a=this.gl;Sv(a,e,this.framebuffer),this.debug&&Sm(a),this.outputTexture=e,Ie(a,()=>a.viewport(0,0,t,n)),Ie(a,()=>a.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),Ie(this.gl,()=>this.gl.scissor(e,t,n,a))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function T5(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{getBroadcastDims:U2}=_;function R5(e,t,n,a){let r=[];e.forEach(h=>{let m=w.sizeFromShape(h.shapeInfo.logicalShape);h.shapeInfo.isUniform?r.push(`uniform float ${h.name}${m>1?`[${m}]`:""};`):(r.push(`uniform sampler2D ${h.name};`),r.push(`uniform int offset${h.name};`))});let s=r.join(`
`),i=e.map(h=>S5(h,t,a)).join(`
`),o=t.texShape,l=fn(),c=E5(l),u,p,d=$5(l);return t.isPacked?(u=C5(t.logicalShape,o),p=A5(l)):(u=_5(t.logicalShape,o),p=F5(l)),a&&(d+=D5),[d,c,p,s,u,i,n].join(`
`)}function iu(e){let t=e.shapeInfo.logicalShape;switch(t.length){case 0:return M5(e);case 1:return P5(e);case 2:return O5(e);case 3:return L5(e);case 4:return z5(e);case 5:return W5(e);case 6:return B5(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function G2(e){switch(e.shapeInfo.logicalShape.length){case 0:return V5(e);case 1:return U5(e);case 2:return G5(e);case 3:return H5(e);default:return j5(e)}}function S5(e,t,n=!1){let a="";n?a+=G2(e):a+=iu(e);let r=e.shapeInfo.logicalShape,s=t.logicalShape;return r.length<=s.length&&(n?a+=q5(e,t):a+=K5(e,t)),a}function C5(e,t){switch(e.length){case 0:return H2();case 1:return X5(e,t);case 2:return Q5(e,t);case 3:return Y5(e,t);default:return J5(e,t)}}function _5(e,t){switch(e.length){case 0:return H2();case 1:return Z5(e,t);case 2:return r8(e,t);case 3:return e8(e,t);case 4:return t8(e,t);case 5:return n8(e,t);case 6:return a8(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function E5(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function F5(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function A5(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function $5(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${s8}
    ${i8}
    ${o8}
  `}var s8=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,i8=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,o8=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,D5=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function H2(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function X5(e,t){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return n[0]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function Z5(e,t){return t[0]===1?`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function Y5(e,t){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),r=a*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}function e8(e,t){let n=Gi(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function J5(e,t){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),r=a*Math.ceil(e[e.length-2]/2),s=r,i="",o="b, r, c";for(let l=2;l<e.length-1;l++)s*=e[e.length-l-1],i=`
      int b${l} = index / ${s};
      index -= b${l} * ${s};
    `+i,o=`b${l}, `+o;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${i}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${e.length}(${o});
    }
  `}function t8(e,t){let n=Gi(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function n8(e,t){let n=Gi(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function a8(e,t){let n=Gi(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Q5(e,t){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(w.arraysEqual(e,t))return`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let a=Math.ceil(e[1]/2);return`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}function r8(e,t){return w.arraysEqual(e,t)?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function Hi(e){return`offset${e}`}function V5(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=fn();return`
    vec4 ${n}() {
      return ${a.texture2D}(${t}, halfCR);
    }
  `}function M5(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;let[a,r]=e.shapeInfo.texShape;if(a===1&&r===1)return`
      float ${n}() {
        return sampleTexture(${t}, halfCR);
      }
    `;let[s,i]=e.shapeInfo.texShape,o=Hi(t);return`
    float ${n}() {
      vec2 uv = uvFromFlat(${s}, ${i}, ${o});
      return sampleTexture(${t}, uv);
    }
  `}function U5(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=e.shapeInfo.texShape,r=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],s=fn();return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${r[0]}, ${r[1]}, index);
      return ${s.texture2D}(${t}, uv);
    }
  `}function P5(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${ou(e)}
      }
    `;let a=e.shapeInfo.texShape,r=a[0],s=a[1];if(s===1&&r===1)return`
      float ${n}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;let i=Hi(t);return s===1?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${r}.0);
        return sampleTexture(${t}, uv);
      }
    `:r===1?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${s}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${r}, ${s}, index + ${i});
      return sampleTexture(${t}, uv);
    }
  `}function G5(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=r[0],i=r[1],o=fn();if(r!=null&&w.arraysEqual(t,r))return`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${s}.0);

        return ${o.texture2D}(${n}, uv);
      }
    `;let l=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],c=Math.ceil(t[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);
      return ${o.texture2D}(${n}, uv);
    }
  `}function O5(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape;if(r!=null&&w.arraysEqual(t,r)){let p=r[0],d=r[1];return`
    float ${a}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${d}.0, ${p}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:s,keptDims:i}=w.squeezeShape(t),o=s;if(o.length<t.length){let p=lu(e,o),d=["row","col"];return`
      ${iu(p)}
      float ${a}(int row, int col) {
        return ${a}(${uu(d,i)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${ou(e)}
      }
    `;let l=r[0],c=r[1],u=Hi(n);return c===1?`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${u}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${n}, uv);
    }
  `:l===1?`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${u}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:`
  float ${a}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${u};
    vec2 uv = uvFromFlat(${l}, ${c}, index);
    return sampleTexture(${n}, uv);
  }
`}function H5(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(t[0]===1){let p=t.slice(1),d=[1,2],h=lu(e,p),m=["b","row","col"];return`
        ${G2(h)}
        vec4 ${a}(int b, int row, int col) {
          return ${a}(${uu(m,d)});
        }
      `}let i=s[0],o=s[1],l=Math.ceil(t[2]/2),c=l*Math.ceil(t[1]/2),u=fn();return`
    vec4 ${a}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${i}, ${o}, ${c}, ${l}, b, row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `}function L5(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[1]*t[2],s=t[2],{newShape:i,keptDims:o}=w.squeezeShape(t),l=i;if(l.length<t.length){let m=lu(e,l),f=["row","col","depth"];return`
        ${iu(m)}
        float ${a}(int row, int col, int depth) {
          return ${a}(${uu(f,o)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${s}, 1)));
        ${ou(e)}
      }
    `;let c=e.shapeInfo.texShape,u=c[0],p=c[1],d=e.shapeInfo.flatOffset;if(p===r&&d==null)return`
        float ${a}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${s}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${u}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(p===s&&d==null)return`
    float ${a}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${u}.0);
      return sampleTexture(${n}, uv);
    }
  `;let h=Hi(n);return`
      float ${a}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${s} + depth + ${h};
        vec2 uv = uvFromFlat(${u}, ${p}, index);
        return sampleTexture(${n}, uv);
      }
  `}function j5(e){let t=e.shapeInfo.logicalShape,n=t.length,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=i[0],l=i[1],c=Math.ceil(t[n-1]/2),u=c*Math.ceil(t[n-2]/2),p="int b, int row, int col",d=`b * ${u} + (row / 2) * ${c} + (col / 2)`;for(let m=2;m<n-1;m++)p=`int b${m}, `+p,u*=t[n-m-1],d=`b${m} * ${u} + `+d;let h=fn();return`
    vec4 ${r}(${p}) {
      int index = ${d};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});
      return ${h.texture2D}(${a}, uv);
    }
  `}function z5(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[3],s=t[2]*r,i=t[1]*s,{newShape:o,keptDims:l}=w.squeezeShape(t);if(o.length<t.length){let m=lu(e,o),f=["row","col","depth","depth2"];return`
      ${iu(m)}
      float ${a}(int row, int col, int depth, int depth2) {
        return ${a}(${uu(f,l)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${s}, ${r}, 1)));
        ${ou(e)}
      }
    `;let c=e.shapeInfo.flatOffset,u=e.shapeInfo.texShape,p=u[0],d=u[1];if(d===i&&c==null)return`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${s}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(d===r&&c==null)return`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;let h=Hi(n);return`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${s} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${p}, ${d}, index + ${h});
      return sampleTexture(${n}, uv);
    }
  `}function W5(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],s=t[3]*r,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:c}=w.squeezeShape(t);if(l.length<t.length){let f=lu(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${iu(f)}
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        return ${a}(${uu(g,c)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${s}, ${r})) +
          depth3;
        ${ou(e)}
      }
    `;let u=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1];if(h===o&&u==null)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(h===r&&u==null)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=Hi(n);return`
    float ${a}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${s} +
          depth2 * ${r} + depth3 + ${m};
      vec2 uv = uvFromFlat(${d}, ${h}, index);
      return sampleTexture(${n}, uv);
    }
  `}function B5(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:s}=w.squeezeShape(t);if(r.length<t.length){let g=lu(e,r),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${iu(g)}
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${a}(${uu(y,s)});
      }
    `}let i=t[5],o=t[4]*i,l=t[3]*o,c=t[2]*l,u=t[1]*c;if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${ou(e)}
      }
    `;let p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],m=d[1];if(m===u&&p==null)return`
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(m===i&&p==null)return`
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=Hi(n);return`
    float ${a}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${f};
      vec2 uv = uvFromFlat(${h}, ${m}, index);
      return sampleTexture(${n}, uv);
    }
  `}function ou(e){let t=e.name,n=w.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function q5(e,t){let n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=U2(e.shapeInfo.logicalShape,t.logicalShape),l=dt(i),c=i-s,u,p=["x","y","z","w","u","v"];s===0?u="":i<2&&o.length>=1?u="coords = 0;":u=o.map(g=>`coords.${p[g+c]} = 0;`).join(`
`);let d="";i<2&&s>0?d="coords":d=e.shapeInfo.logicalShape.map((g,y)=>`coords.${p[y+c]}`).join(", ");let h="return outputValue;",m=w.sizeFromShape(e.shapeInfo.logicalShape)===1,f=w.sizeFromShape(t.logicalShape)===1;if(s===1&&!m&&!f)h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!f)i===1?h=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:h=`
        return vec4(outputValue.x);
      `;else if(o.length){let g=s-2,y=s-1;o.indexOf(g)>-1&&o.indexOf(y)>-1?h="return vec4(outputValue.x);":o.indexOf(g)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(y)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${a}(${d});
      ${h}
    }
  `}function K5(e,t){let n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&e.shapeInfo.flatOffset==null&&w.arraysEqual(i,s))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let c=dt(l),u=U2(e.shapeInfo.logicalShape,t.logicalShape),p=l-o,d,h=["x","y","z","w","u","v"];o===0?d="":l<2&&u.length>=1?d="coords = 0;":d=u.map(f=>`coords.${h[f+p]} = 0;`).join(`
`);let m="";return l<2&&o>0?m="coords":m=e.shapeInfo.logicalShape.map((f,g)=>`coords.${h[g+p]}`).join(", "),`
    float ${r}() {
      ${c} coords = getOutputCoords();
      ${d}
      return get${a}(${m});
    }
  `}function dt(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function lu(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function uu(e,t){return t.map(n=>e[n]).join(", ")}function l8(e,t,n,a){let r=t.userCode,s=n.map((h,m)=>{let f={logicalShape:h.shape,texShape:h.isUniform?null:h.texData.texShape,isUniform:h.isUniform,isPacked:h.isUniform?!1:h.texData.isPacked,flatOffset:null};return h.texData!=null&&h.texData.slice!=null&&h.texData.slice.flatOffset>0&&(f.flatOffset=h.texData.slice.flatOffset),{name:t.variableNames[m],shapeInfo:f}}),i=s.map(h=>h.shapeInfo),o={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},l=R5(s,o,r,t.packedInputs),c=e.createProgram(l),u=null,p=e.getUniformLocation(c,"NAN",!1);Z().getNumber("WEBGL_VERSION")===1&&(u=e.getUniformLocation(c,"INFINITY",!1));let d={};for(let h=0;h<t.variableNames.length;h++){let m=t.variableNames[h],f=!1;d[m]=e.getUniformLocation(c,m,f),d[`offset${m}`]=e.getUniformLocation(c,`offset${m}`,f)}return{program:t,source:l,webGLProgram:c,uniformLocations:d,inShapeInfos:i,outShapeInfo:o,infLoc:u,nanLoc:p}}function j2(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,a)=>{let r=n.logicalShape,s=t[a],i=s.shape;if(!w.arraysEqual(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(n.isUniform&&s.isUniform)return;let o=n.texShape,l=s.isUniform?null:s.texData.texShape;if(!w.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function u8(e,t,n,a,r){j2(t.inShapeInfos,n),j2([t.outShapeInfo],[a]);let s=a.texData.texture,i=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(s,i[0],i[1]):e.setOutputMatrixTexture(s,i[0],i[1]),e.setProgram(t.webGLProgram),Z().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,Infinity),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((o,l)=>{let c=t.program.variableNames[l],u=t.uniformLocations[c],p=t.uniformLocations[`offset${c}`];if(u!=null){if(o.isUniform){if(w.sizeFromShape(o.shape)<2)e.gl.uniform1f(u,o.uniformValues[0]);else{let d=o.uniformValues;d instanceof Float32Array||(d=new Float32Array(d)),e.gl.uniform1fv(u,d)}return}o.texData.slice!=null&&p!=null&&e.gl.uniform1i(p,o.texData.slice.flatOffset),e.setInputMatrixTexture(o.texData.texture,u,l)}}),r!=null&&r(e,t.webGLProgram),e.executeProgram()}function c8(e,t,n){let a="";t.concat(n).forEach(i=>{let o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0,l=i.isUniform?"uniform":i.texData.texShape;a+=`${i.shape}_${l}_${o}`});let r=e.userCode,s=e.constructor.name;return s+="_"+a+"_"+r,s}var{addImpl:p8,bincountImpl:q2,bincountReduceImpl:d8,ceilImpl:h8,concatImpl:m8,expImpl:f8,expm1Impl:g8,floorImpl:y8,gatherV2Impl:b8,greaterImpl:x8,lessImpl:v8,linSpaceImpl:w8,logImpl:k8,maxImpl:I8,maximumImpl:T8,minimumImpl:N8,multiplyImpl:S8,negImpl:C8,prodImpl:_8,rangeImpl:E8,rsqrtImpl:F8,simpleAbsImpl:K2,sliceImpl:A8,stridedSliceImpl:$8,subImpl:D8,tileImpl:R8,topKImpl:M8,transposeImpl:$v,uniqueImpl:P8}=LT;function X2(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function gn(e,t){return t===1?[e]:X2(e,t)}function O8(e,t){if(e===1)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}var B8=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;let t=e.length;if(t===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let n=gn("rc",t),a=dt(t),r=L8(t,e,n),s=z8(t,e[e.length-1],e[e.length-2],n),i=W8(e,n);this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${i}));
          }
        }
      `}}};function V8(e,t){let n=[];for(let a=0;a<=1;a++)for(let r=0;r<=1;r++){let s=`${a===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let i=2;i<e;i++)s=`${t[t.length-1-i]},`+s;n.push(s)}return n}function L8(e,t,n){if(e===1)return`rc > ${t[0]}`;let a="";for(let r=e-2;r<e;r++)a+=`${n[r]} >= ${t[r]}`,r<e-1&&(a+="||");return a}function z8(e,t,n,a){if(e===1)return"";let r=a.slice(-2);return`
    int r = ${r[0]};
    int c = ${r[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${t};
    bool rEdge = rp1 >= ${n};
  `}function W8(e,t){let n=e.length,a=V8(n,t);return n===1?`getA(rc),
            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${a[0]}),
          cEdge ? 0. : getA(${a[1]}),
          rEdge ? 0. : getA(${a[2]}),
          rEdge || cEdge ? 0. : getA(${a[3]})`}var Y2=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let a=0;a<4;a++){let r="thisRC = rc;";a%2==1&&(r+="thisRC.z += 1;"),a>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${a}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${a>0?"}":""}
      `}this.userCode=`
      ${U8(t)}
      ${Av(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${e[1]};
        int cols = ${e[2]};

        ${n}

        setOutput(result);
      }
    `}};function U8(e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${Gi(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var G8=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let a=Q2(t,n),r=Z2(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let s=J2(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let o=this.freeTextures[r].shift();return this.usedTextures[r].push(o),o}let i;return a===sn.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===sn.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===sn.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===sn.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===sn.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,a){if(this.freeTextures==null)return;let r=Q2(n,a),s=Z2(t,r,a);s in this.freeTextures||(this.freeTextures[s]=[]);let i=J2(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),o=Z().get("WEBGL_DELETE_TEXTURE_THRESHOLD");o!==-1&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],c=l.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function H8(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F||t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}function J2(e,t,n,a,r){let s=j8(t,a),i;if(r){let[l,c]=au(e[0],e[1]);i=l*c}else{let[l,c]=lp(e[0],e[1]);i=l*c}let o=H8(n,s);return i*o}function j8(e,t){switch(e){case sn.PACKED_2X2_FLOAT32:return B2(t);case sn.PACKED_2X2_FLOAT16:return V2(t);case sn.UNPACKED_FLOAT32:return L2(t);case sn.UNPACKED_FLOAT16:return z2(t);case sn.PACKED_4X1_UNSIGNED_BYTE:return W2(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function q8(e){return Z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?sn.PACKED_2X2_FLOAT32:sn.UNPACKED_FLOAT32:e?sn.PACKED_2X2_FLOAT16:sn.UNPACKED_FLOAT16}function Q2(e,t){if(e===na.UPLOAD)return sn.PACKED_2X2_FLOAT32;if(e===na.RENDER||e==null)return q8(t);if(e===na.DOWNLOAD||e===na.PIXELS)return sn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Z2(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var ds=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Ma="if (isnan(x)) return x;",K8="return x;",eN="return abs(x);",X8="return (x >= 0.0) ? x : (exp(x) - 1.0);",Y8=Ma+`
  return (x < 0.0) ? 0.0 : x;
`,J8=Ma+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Em="return x;",Q8="return x;",Z8=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,eK=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,tK=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cu=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},nK=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;let t=e.length,n=gn("rc",t),a=dt(t),r=O8(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${a} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}},aK=Ya.whereImpl,rK=1e-7,sK=1e-4,Dv={};function iK(e){return e in Dv||(Dv[e]={}),Dv[e]}var oK=128,lK=600;function uK(){return Z().global.screen==null?1024:Z().global.screen.height*Z().global.screen.width*window.devicePixelRatio*lK/1024/1024}var Rv=class extends ju{constructor(e){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Z().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(e==null){let t=ar(Z().getNumber("WEBGL_VERSION"));this.binaryCache=iK(Z().getNumber("WEBGL_VERSION")),this.gpgpu=new N5(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new G8(this.gpgpu),this.numMBBeforeWarning=uK(),this.texData=new rd(this,Ua())}nextDataId(){return Rv.nextDataId++}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((Z().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Z().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:na.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,a,r){if(Z().getBool("DEBUG")&&this.checkNumericalProblems(t),a==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:na.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:s,shape:i,isPacked:o}=t;if(s!=null){let p;o?p=new cu(i,Em):p=new ds(i,Em);let d=this.runWebGLProgram(p,[{dataId:e,shape:i,dtype:a}],a),h=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),h}if(n!=null)return this.convertAndCacheOnCPU(e);if(a==="string")return n;let l=this.activeTimers!=null,c;l&&(c=w.now());let u;if(a==="complex64"){let p=this.readSync(r.real.dataId),d=this.readSync(r.imag.dataId);u=_.mergeRealAndImagArrays(p,d)}else u=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=w.now()-c),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(m=>h.push(m))}let t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(r!=null){let h;o?h=new cu(a,Em):h=new ds(a,Em);let m=this.runWebGLProgram(h,[{dataId:e,shape:a,dtype:s}],s),f=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),f}if(n!=null)return this.convertAndCacheOnCPU(e);if(!Z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&Z().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,c;if(s!=="complex64"&&Z().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);let h=this.texData.get(c.dataId);l=this.gpgpu.createBufferFromTexture(h.texture,...up(a))}this.pendingRead.set(e,[]),s!=="complex64"&&await this.gpgpu.createAndWaitForFence();let u;if(s==="complex64"){let h=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),m=h[0],f=h[1];u=_.mergeRealAndImagArrays(m,f)}else if(l==null)u=this.getValuesFromTexture(e);else{let h=w.sizeFromShape(a);u=this.gpgpu.downloadFloat32MatrixFromBuffer(l,h)}c!=null&&this.disposeIntermediateTensorInfo(c);let p=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(h=>h(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ua().removeDataId(e,this),this.pendingDeletes--),p}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(a=>w.decodeString(a))}catch(a){throw new Error("Failed to decode encoded string bytes into utf-8")}return Me(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!Fq(n))throw Z().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=w.sizeFromShape(t);if(Z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let p=this.decode(e),d=this.texData.get(p.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(d.texture,...up(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(p),h}let s=Z().getBool("WEBGL_PACK")&&a===!0,i=s?Cv(t):t,o=s?new s5(i):new r5(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),u}timerAvailable(){return Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){let t=this.activeTimers,n=[],a=!1;this.programTimersStack==null?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=w.flatten(this.activeTimers.map(o=>o.query)).filter(o=>o!=null),s=w.flatten(this.activeTimers.map(o=>o.name)).filter(o=>o!=null);this.activeTimers=t,a&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let o=await Promise.all(r);i.kernelMs=w.sum(o),i.getExtraProfileInfo=()=>o.map((l,c)=>({name:s[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:w.now(),endMs:null}}endTimer(e){return Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=w.now(),e)}async getQueryTime(e){if(Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:a,usage:r,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),t!=null&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,s)));let c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return Z().getBool("WEBGL_CPU_FORWARD")?(this.cpuBackend==null&&(this.cpuBackend=Ua().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=oK){let n=this.getCPUBackend();return!Z().getBool("IS_TEST")&&!this.warnedAboutCPUBackend&&n==null&&(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),n!=null&&e.every(a=>this.texData.get(a.dataId).texture==null&&w.sizeFromShape(a.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){_.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return aK(e.shape,t)}packedUnaryOp(e,t,n){let a=new cu(e.shape,t),r=this.compileAndRun(a,[e],n);return Ua().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let a=K2(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,a)}if(Z().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,eN,e.dtype);let t=new ds(e.shape,eN),n=this.compileAndRun(t,[e]);return Ua().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let a;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let r=n.map(s=>w.encodeString(s));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:a}=this.makeTensorInfo(e,t,n);return Ua().makeTensorFromDataId(a,e,t,this)}unpackTensor(e){let t=new nK(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new B8(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[ru(e.shape),...su(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[ru(t),...su(t)],s=new Y2(r,n),i=!0,o=this.runWebGLProgram(s,[a],e.dtype,null,i);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e){let t=this.texData.get(e),{isPacked:n,shape:a,dtype:r}=t,s=Cv(a),i;n?i=new a5(s):i=new n5(s);let o=!0,l=this.runWebGLProgram(i,[{shape:s,dtype:r,dataId:e}],r,null,o);return{dtype:r,shape:a,dataId:l.dataId}}runWebGLProgram(e,t,n,a,r=!1){let s=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(s.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===op.DENSE){let f=up(e.outputShape);i.texShape=f.map(g=>g*2)}if(e.outTexUsage!=null&&(i.usage=e.outTexUsage),w.sizeFromShape(s.shape)===0)return i.values=w.getTypedArrayFromDType(s.dtype,0),s;let o=[],l=t.map(f=>{if(f.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let g=this.texData.get(f.dataId);if(g.texture==null){if(!e.packedInputs&&w.sizeFromShape(f.shape)<=Z().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:f.shape,texData:null,isUniform:!0,uniformValues:g.values};e.packedInputs&&(g.isPacked=!0,g.shape=f.shape)}else if(!!g.isPacked!=!!e.packedInputs)f=g.isPacked?this.unpackTensor(f):this.packTensor(f),o.push(f),g=this.texData.get(f.dataId);else if(g.isPacked&&!_m(g.shape,f.shape)){let y=f,b=f.shape;f.shape=g.shape,f=this.packedReshape(f,b),o.push(f),g=this.texData.get(f.dataId),y.shape=b}return this.uploadToGPU(f.dataId),{shape:f.shape,texData:g,isUniform:!1}});this.uploadToGPU(s.dataId);let c={shape:s.shape,texData:i,isUniform:!1},u=c8(e,l,c),p=this.getAndSaveBinary(u,()=>l8(this.gpgpu,e,l,c)),d=this.activeTimers!=null,h;d&&(h=this.startTimer()),u8(this.gpgpu,p,l,c,a),o.forEach(f=>this.disposeIntermediateTensorInfo(f)),d&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));let m=Z().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let f=w.now();f-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=f)}if(!Z().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&r===!1){let f=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),f}return s}compileAndRun(e,t,n,a,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Z().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=D(()=>{if(!Z().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Z().getBool("DEBUG");Z().set("DEBUG",!1);let t=this.abs(ve(1e-8)).dataSync()[0];if(Z().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?rK:sK}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:s,usage:i,isPacked:o}=t;if(s!=null)return;let l=this.activeTimers!=null,c;l&&(c=w.now());let u=t.texShape;if(u==null&&(u=Kq(n,o),t.texShape=u),r!=null){let p=Cv(n),d,h=u[1],m=u[0],f=r instanceof Uint8Array;o?([h,m]=au(u[0],u[1]),d=new o5(p,[m,h],f)):d=new i5(p,[m,h],f);let g=this.makeTensorInfo([m,h],a);f?this.texData.get(g.dataId).usage=na.PIXELS:this.texData.get(g.dataId).usage=na.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(g.dataId),h,m,r);let y=!0,b=this.runWebGLProgram(d,[g],a,null,y),x=this.texData.get(b.dataId);t.texture=x.texture,t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,this.disposeIntermediateTensorInfo(g),this.texData.delete(b.dataId),t.values=null,l&&(this.uploadWaitMs+=w.now()-c)}else{let p=this.acquireTexture(u,i,a,o);t.texture=p}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:a}=n;return this.releaseGPUData(e),t!=null&&(n.values=cK(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*w.bytesPerElement(t)}};Rv.nextDataId=0;function cK(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let a=0;a<n.length;++a)n[a]=Math.round(e[a]);return n}else throw new Error(`Unknown dtype ${t}`)}var pK="3.3.0";vc.isBrowser()&&Jd("webgl",()=>new Rv,2);var tN=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,pu=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=_.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},Fm=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,dp=class{constructor(e,t,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=_.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length,s="";if(a)if(r===0||w.sizeFromShape(this.outputShape)===1)s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(s=`
          ${dt(r)} coords = getOutputCoords();
        `,r===1)s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=gn("coords",r);s+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}};function Gn(e){let{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}var dK={kernelName:Bs,backendName:"webgl",kernelFunc:Gn};function hs(e){let{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.makeTensorInfo(a.shape,"complex64"),i=n.texData.get(s.dataId),o=Gn({inputs:{x:a},backend:n}),l=Gn({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var hK={kernelName:hd,backendName:"webgl",kernelFunc:hs},nN="return (a < 0.) ? b * a : a;",aN=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function mK(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a,i=n.makeTensorInfo([],"float32",w.createScalarValue(s,"float32")),o=Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dp(aN,r.shape,i.shape):new pu(nN,r.shape,i.shape),l=n.runWebGLProgram(o,[r,i],r.dtype);return n.disposeIntermediateTensorInfo(i),l}var fK={kernelName:Vs,backendName:"webgl",kernelFunc:mK},rN="return (a < 0.) ? b * a : a;",sN=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function gK(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dp(sN,a.shape,r.shape):new pu(rN,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)}var yK={kernelName:ei,backendName:"webgl",kernelFunc:gK},iN="if (isnan(x)) return x;",bK=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,xK=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Ke({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:a}){return({inputs:r,backend:s})=>{let{x:i}=r,o=s,l=a||i.dtype;if(o.shouldExecuteOnCPU([i])&&n!=null){let p=o.texData.get(i.dataId),d=n(p.values,l);return o.makeTensorInfo(i.shape,l,d)}let c=Z().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,u;return c?u=new cu(i.shape,t):u=new ds(i.shape,e),o.runWebGLProgram(u,[i],l)}}function on({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:r,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:c}=i,u=o;if(a&&l.dtype==="complex64"){let m=u.texData.get(l.dataId),f=u.texData.get(c.dataId),[g,y]=[[m.complexTensorInfos.real,f.complexTensorInfos.real],[m.complexTensorInfos.imag,f.complexTensorInfos.imag]].map(x=>{let[v,T]=x,k={dataId:v.dataId,dtype:v.dtype,shape:l.shape},S={dataId:T.dataId,dtype:T.dtype,shape:c.shape},F=new pu(e,l.shape,c.shape);return u.runWebGLProgram(F,[k,S],ua(v.dtype,T.dtype))}),b=hs({inputs:{real:g,imag:y},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(y),b}let p=s||ua(l.dtype,c.dtype);if(u.shouldExecuteOnCPU([l,c])&&r!=null){let m=u.texData.get(l.dataId),f=u.texData.get(c.dataId),[g,y]=r(l.shape,c.shape,m.values,f.values,p),b=u.makeTensorInfo(y,p),x=u.texData.get(b.dataId);return x.values=g,b}let d=Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,h;return d?h=new dp(t,l.shape,c.shape,n):h=new pu(e,l.shape,c.shape),u.runWebGLProgram(h,[l,c],p)}}function Am(e,t=!1){if(e==="linear")return t?Q8:K8;if(e==="relu")return t?eK:Y8;if(e==="elu")return t?Z8:X8;if(e==="relu6")return t?tK:J8;if(e==="prelu")return t?sN:rN;if(e==="leakyrelu")return t?aN:nN;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var oN=class{constructor(e,t,n,a=!1,r=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;let c=a?e[1]:e[2],u=Math.ceil(c/2),p=a?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",h=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],f="",g="";i&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:f=`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${f}

      const float sharedDimension = ${u}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${u}; i++) {
          int batchA = ${b};
          int batchB = ${x};
          vec4 a = getMatrixA(batchA, ${p});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${m[0]});
          result += (${h[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},lN={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},uN=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=_.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},cN="return a * b;";function pN(e){let{inputs:t,backend:n}=e,{a,b:r}=t,s=_.upcastType(a.dtype,r.dtype);if(a.dtype==="complex64"){let o=n.texData.get(a.dataId),l=n.texData.get(r.dataId),c=new uN(lN.REAL,a.shape,r.shape),u=new uN(lN.IMAG,a.shape,r.shape),p=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:a.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],d=n.runWebGLProgram(c,p,"float32"),h=n.runWebGLProgram(u,p,"float32"),m=hs({inputs:{real:d,imag:h},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),m}if(n.shouldExecuteOnCPU([a,r])){let o=n.texData.get(a.dataId),l=n.texData.get(r.dataId),[c,u]=S8(a.shape,r.shape,o.values,l.values,s),p=n.makeTensorInfo(u,s),d=n.texData.get(p.dataId);return d.values=c,p}let i;return Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new dp(cN,a.shape,r.shape):i=new pu(cN,a.shape,r.shape),n.runWebGLProgram(i,[a,r],s)}var vK={kernelName:Ys,backendName:"webgl",kernelFunc:pN};function wK(e,t,n){let a=[ru(e.shape),...su(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},s=[ru(t),...su(t)],i=new Y2(s,a),o=!0,l=n.runWebGLProgram(i,[r],e.dtype,null,o);return{dataId:l.dataId,shape:t,dtype:l.dtype}}function ge(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,i=n,o=w.sizeFromShape(r.shape),l=w.inferFromImplicitShape(s,o),c=w.sizeFromShape(l);w.assert(o===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let u=i.texData.get(r.dataId);return u.isPacked&&!_m(r.shape,l)&&!(u.texture!==null&&_m(u.shape,l))?wK(r,l,i):(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}var kK={kernelName:cl,backendName:"webgl",kernelFunc:ge},dN=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let i=Math.floor(n/4)*4,o=n%4,l="sumValue += dot(values, ones);";if(t!=null){let u=1/t;l=`sumValue += dot(values * ${w.isInt(u)?u.toPrecision(2):u}, ones);`}let c="";r%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${o===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${o===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${o===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},IK=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let i="0.0",o="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",o="min"):t==="max"&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let c=Math.floor(n/4)*4,u=n%4,p=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
      }
    `,d="vec4";t==="all"?(i="1.0",p=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):t==="any"&&(i="0.0",p=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${c};
        if (${u===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${u===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${u===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${p}
        }
        setOutput(${l});
      }
    `}};function TK(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],a=_.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}function ji(e,t,n,a){let r=TK(e.shape),s=e;for(let i=0;i<r.length;i++){let{inSize:o,windowSize:l,outSize:c}=r[i],u,p;n==="mean"?u=i===0?new dN({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:c},o):new dN({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:c}):u=new IK({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:c},n),p=s,s=a.runWebGLProgram(u,[s],t),p.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(p)}return s}var SK=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;let a=dt(this.rank),r=NK(t);this.userCode=`
    void main() {
      ${a} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function NK(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let r=0;r<e.length;r++)a[e[r]]=n[r];return a.join()}var CK=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let a=dt(this.rank),r=X2("rc",this.rank),s=new Array(this.rank);for(let c=0;c<t.length;c++)s[t[c]]=r[c];let i=`vec2(${s.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`
    void main() {
      ${a} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${o}) {
        result[1] = ${l};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${o}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function $m(e,t,n){let a=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new CK(e.shape,t):new SK(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function _K(e,t,n,a){let r=t,s=e.shape.length,i=w.parseAxisParam(r,e.shape),o=i,l=_.getAxesPermutation(o,s),c=l!=null,u=e;c&&(u=$m(e,l,a),o=_.getInnerMostAxes(o.length,s)),_.assertAxesAreInnerMostDims("sum",o,s);let[p,d]=_.computeOutAndReduceShapes(u.shape,o),h=p;n&&(h=_.expandShapeToKeepDim(p,i));let m=w.sizeFromShape(d),f=w.sizeFromShape(e.shape)/m,g=ge({inputs:{x:u},attrs:{shape:[f,m]},backend:a}),y=Hd(e.dtype),b=ji(g,y,"sum",a),x=ge({inputs:{x:b},attrs:{shape:h},backend:a});return a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(b),c&&a.disposeIntermediateTensorInfo(u),x}function Mv(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;return _K(r,s,i,n)}var EK={kernelName:ci,backendName:"webgl",kernelFunc:Mv};function An(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:s}=a,i=n,o=r.shape.length,l=new Array(o);for(let u=0;u<l.length;u++)l[u]=r.shape[s[u]];let c;if(i.shouldExecuteOnCPU([r])){let u=i.texData.get(r.dataId).values,p=$v(u,r.shape,r.dtype,s,l);c=i.makeTensorInfo(l,r.dtype);let d=i.texData.get(c.dataId);d.values=p}else c=$m(r,s,i);return c}var FK={kernelName:fi,backendName:"webgl",kernelFunc:An},hN=1e3;function Dm({a:e,b:t,transposeA:n,transposeB:a,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let c=e.shape.length,u=t.shape.length,p=n?e.shape[c-2]:e.shape[c-1],d=a?t.shape[u-1]:t.shape[u-2],h=n?e.shape[c-1]:e.shape[c-2],m=a?t.shape[u-2]:t.shape[u-1],f=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=w.sizeFromShape(f),b=w.sizeFromShape(g),x=y===b||y===1||b===1;w.assert(c>=2&&u>=2&&x,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${g}).`);let v=(y>b?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([h,m]);w.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`);let T=n?[y,p,h]:[y,h,p],k=a?[b,m,d]:[b,d,m],S=ge({inputs:{x:e},backend:r,attrs:{shape:T}}),F=ge({inputs:{x:t},backend:r,attrs:{shape:k}}),A=[S,F],R=Math.max(y,b),P=n?S.shape[1]:S.shape[2],z=s!=null,V=i!=null,G=l==="leakyrelu",H=l!=null?Am(l,!0):null,K=z||V||G||H!=null,j;if((h===1||m===1)&&P>hN&&K===!1){let Q=S,se=F;n&&(Q=An({inputs:{x:S},backend:r,attrs:{perm:[0,2,1]}}),A.push(Q)),a&&(se=An({inputs:{x:F},backend:r,attrs:{perm:[0,2,1]}}),A.push(se));let ne=m!==1,ie=m===1,ee=Q;ne&&(ee=ge({inputs:{x:Q},backend:r,attrs:{shape:[R,P,1]}}),A.push(ee));let pe=m===1?2:1,oe=se;ie&&(oe=ge({inputs:{x:se},backend:r,attrs:{shape:[R,1,P]}}),A.push(oe));let fe=pN({inputs:{a:ee,b:oe},backend:r});j=Mv({inputs:{x:fe},backend:r,attrs:{axis:pe,keepDims:!0}}),A.push(fe)}else{let Q=ua(e.dtype,t.dtype),se=new oN(T,k,[R,h,m],n,a,z,H,V,G),ne=[S,F];if(s!=null&&ne.push(s),V&&ne.push(i),G){let ie=r.makeTensorInfo([],"float32",w.createScalarValue(o,"float32"));ne.push(ie),A.push(ie)}j=r.runWebGLProgram(se,ne,Q)}let te=ge({inputs:{x:j},backend:r,attrs:{shape:v}});A.push(j);for(let Q of A)r.disposeIntermediateTensorInfo(Q);return te}function AK(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:p}=a;return Dm({a:r,b:s,transposeA:l,transposeB:c,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:u})}var $K={kernelName:gi,backendName:"webgl",kernelFunc:AK},mN="return abs(x);";function DK(e){let{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&a.dtype!=="complex64"){let s=n.texData.get(a.dataId),i=K2(s.values);return n.makeTensorInfo(a.shape,a.dtype,i)}let r;return Z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new cu(a.shape,mN):r=new ds(a.shape,mN),n.runWebGLProgram(r,[a],a.dtype)}var RK={kernelName:So,backendName:"webgl",kernelFunc:DK},MK=Ma+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,PK=Ke({opSnippet:MK}),OK={kernelName:Co,backendName:"webgl",kernelFunc:PK},LK=Ma+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,zK=Ke({opSnippet:LK}),WK={kernelName:_o,backendName:"webgl",kernelFunc:zK},fN="return a + b;",BK=on({opSnippet:fN,packedOpSnippet:fN,supportsComplex:!0,cpuKernelImpl:p8}),VK={kernelName:Br,backendName:"webgl",kernelFunc:BK},UK=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,s)=>`T${s}`);let n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});let a=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${a};
        setOutput(result);
      }
    `}},GK=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,s)=>`T${s}`);let n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});let a=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${a};
        setOutput(result);
      }
    `}};function Rm(e){let{inputs:t,backend:n}=e,a=t;if(a.length===1)return Gn({inputs:{x:a[0]},backend:n});if(a.length>Z().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let o=Math.floor(a.length/2),l=Rm({inputs:a.slice(0,o),backend:n}),c=Rm({inputs:a.slice(o),backend:n});return Rm({inputs:[l,c],backend:n})}let r=a.map(o=>o.dtype).reduce((o,l)=>ua(o,l)),s=a.map(o=>o.shape),i=Z().getBool("WEBGL_PACK")?new GK(a[0].shape,s):new UK(a[0].shape,s);return n.runWebGLProgram(i,a,r)}var HK={kernelName:Ts,backendName:"webgl",kernelFunc:Rm};function jK(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=w.parseAxisParam(s,r.shape),c=l,u=_.getAxesPermutation(c,o),p=r;u!=null&&(p=An({inputs:{x:r},backend:n,attrs:{perm:u}}),c=_.getInnerMostAxes(c.length,o)),_.assertAxesAreInnerMostDims("all",c,o);let[d,h]=_.computeOutAndReduceShapes(p.shape,c),m=w.sizeFromShape(h),f=ge({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}}),g=ji(f,f.dtype,"all",n),y;if(i){let b=_.expandShapeToKeepDim(d,l);y=ge({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=ge({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(p),y}var qK={kernelName:ld,backendName:"webgl",kernelFunc:jK};function KK(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=w.parseAxisParam(s,r.shape),c=l,u=_.getAxesPermutation(c,o),p=r;u!=null&&(p=An({inputs:{x:r},backend:n,attrs:{perm:u}}),c=_.getInnerMostAxes(c.length,o)),_.assertAxesAreInnerMostDims("any",c,o);let[d,h]=_.computeOutAndReduceShapes(p.shape,c),m=w.sizeFromShape(h),f=ge({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}}),g=ji(f,f.dtype,"any",n),y;if(i){let b=_.expandShapeToKeepDim(d,l);y=ge({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=ge({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(p),y}var XK={kernelName:ud,backendName:"webgl",kernelFunc:KK},YK=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:a,batchSize:r,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];let i=t==="max"?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${a}; i++) {
          int inIdx = ${o};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},JK=class{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,w.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let r=e[e.length-1],s=Math.ceil(r/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");let i=this.outputShape,o=i.length,l=dt(o),c=gn("coords",o),u,p;if(s===1){p=o+1;let S=dt(p);u=`
        ${S} sourceLocR = ${S}(${c.join()}, 0);
        ++${c[o-1]};
        ${S} sourceLocG = ${S}(${c.join()}, 0);
        ++${c[o-2]};
        ${S} sourceLocA = ${S}(${c.join()}, 0);
        --${c[o-1]};
        ${S} sourceLocB = ${S}(${c.join()}, 0);
        --${c[o-2]};`}else p=o,u=`
        ${l} sourceLocR = coords;
        ++${c[o-1]};
        ${l} sourceLocG = coords;
        ++${c[o-2]};
        ${l} sourceLocA = coords;
        --${c[o-1]};
        ${l} sourceLocB = coords;
        --${c[o-2]};`;let d=["x","y","z","w","u","v"].slice(0,p),h="."+d[p-1],m=d.map(S=>"int "+S),f=gn("sourceLocR",p-1).concat("inIdx.r"),g=gn("sourceLocG",p-1).concat("inIdx.g"),y=gn("sourceLocB",p-1).concat("inIdx.b"),b=gn("sourceLocA",p-1).concat("inIdx.a"),x=n==="max"?"greaterThan":"lessThan",v=a?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${f.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()})));`,T=`vec4(
            getAChannel(${f.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=a?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${k}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${c[o-1]} < ${i[o-1]-1};
        bool hasNextRow = ${c[o-2]} < ${i[o-2]-1};
        ${u}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${T};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${T};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function gN(e,t,n,a=null){let r=t.shape[0],s=t.shape[1];a!=null&&(r=a.shape[0],s=a.shape[1]);let i=_.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:r,outSize:Math.ceil(s/i)},l=new YK(o,n,a==null),c=[t];a!=null&&c.push(a);let u=e.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;let p=gN(e,t,n,u);return e.disposeIntermediateTensorInfo(u),p}function yN(e,t,n,a=null){let r=a!=null?a.shape:t.shape,s=r[r.length-1],i=_.computeOptimalWindowSize(s),o=new JK(r,i,n,a==null),l=a==null?[t]:[t,a],c=e.runWebGLProgram(o,l,"int32");if(c.shape.length===t.shape.length){let u=yN(e,t,n,c);return e.disposeIntermediateTensorInfo(c),u}return c}function bN(e,t,n,a){let r=[n];if(_.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!Z().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],[i,o]=_.computeOutAndReduceShapes(t.shape,r),l=w.sizeFromShape(o),c=ge({inputs:{x:t},backend:e,attrs:{shape:[-1,l]}});s.push(c);let u=gN(e,c,a);s.push(u);let p=ge({inputs:{x:u},backend:e,attrs:{shape:i}});return s.forEach(d=>e.disposeIntermediateTensorInfo(d)),p}return yN(e,t,a)}function QK(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a,i=w.parseAxisParam(s,r.shape),o=_.getAxesPermutation(i,r.shape.length),l=r,c=[];o!=null&&(l=An({inputs:{x:r},backend:n,attrs:{perm:o}}),c.push(l),i=_.getInnerMostAxes(i.length,l.shape.length)),_.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let u=bN(n,l,i[0],"max");return c.forEach(p=>n.disposeIntermediateTensorInfo(p)),u}var ZK={kernelName:Ns,backendName:"webgl",kernelFunc:QK};function eX(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a,i=w.parseAxisParam(s,r.shape),o=_.getAxesPermutation(i,r.shape.length),l=r,c=[];o!=null&&(l=An({inputs:{x:r},backend:n,attrs:{perm:o}}),c.push(l),i=_.getInnerMostAxes(i.length,l.shape.length)),_.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let u=bN(n,l,i[0],"min");return c.forEach(p=>n.disposeIntermediateTensorInfo(p)),u}var tX={kernelName:Xu,backendName:"webgl",kernelFunc:eX},nX=Ma+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,aX=Ke({opSnippet:nX}),rX={kernelName:Eo,backendName:"webgl",kernelFunc:aX},sX=Ma+"return log(x + sqrt(x * x + 1.0));",iX=Ke({opSnippet:sX}),oX={kernelName:Fo,backendName:"webgl",kernelFunc:iX},lX=Ma+`
  return atan(x);
`,uX=Ke({opSnippet:lX}),cX={kernelName:Ao,backendName:"webgl",kernelFunc:uX},pX=bK+`
  return atan(a, b);
`,dX=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+xK+`
  return result;
`,hX=on({opSnippet:pX,packedOpSnippet:dX}),mX={kernelName:Do,backendName:"webgl",kernelFunc:hX},fX=Ma+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,gX=Ke({opSnippet:fX}),yX={kernelName:$o,backendName:"webgl",kernelFunc:gX},hp=class{constructor(e,t,n,a=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let m=t==="avg",f=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(m||(y="-1.0 / 1e-20"),n){let S=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${d}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${u};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${S} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${a?r?f:g:`wR * ${p} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(x="avgValue / count");let v=Math.floor(s/4)*4,T=s%4,k=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${d}, ${h});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${u};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${k}
          }

          int xC = xCCorner + ${v};
          if (${T===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${T===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${T===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${k}
          }
        }
        setOutput(${x});
      }
    `}},Pv=class{constructor(e,t,n,a=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,c=e.dilationDepth,u=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b=t==="avg",x="0.0";if(b||(x="-1.0 / 1e-20"),n){let A=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${l});
        const ivec3 pads = ivec3(${f}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${u}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${p}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${A} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${a?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let v="max",T=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(T="avgValue / count");let k=Math.floor(s/4)*4,S=s%4,F=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${l});
      const ivec3 pads = ivec3(${f}, ${g}, ${y});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${k}; wC += 4) {
              int xC = xCCorner + wC * ${p};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                getValue(batch, xD, xR, xC + 3 * ${p}, ch)
              );

              ${F}
            }

            int xC = xCCorner + ${k};
            if (${S===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${F}
            } else if (${S===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                initializationValue,
                initializationValue
              );

              ${F}
            } else if (${S===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                initializationValue
              );

              ${F}
            }
          }
          setOutput(${T});
        }
      }
    `}};function bX(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;cp(r,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a,c=1;w.assert(_.eitherStridesOrDilationsAreOne(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let u=_.computePool2DInfo(r.shape,s,i,c,o,l);if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))return Gn({inputs:{x:r},backend:n});let p=new hp(u,"avg",!1);return n.runWebGLProgram(p,[r],"float32")}var xX={kernelName:Ss,backendName:"webgl",kernelFunc:bX};function vX(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:c}=a,u=[1,1,1],p=_.computePool3DInfo(r.shape,s,i,u,o,l,c),d=new Pv(p,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}var wX={kernelName:Yu,backendName:"webgl",kernelFunc:vX},kX=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.top,u=l-1-e.padInfo.left,p=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${u});
      const float avgMultiplier = float(${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},IX=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=u-1-e.padInfo.front,m=p-1-e.padInfo.top,f=d-1-e.padInfo.left,g=1/(t*n*a);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${m}, ${f});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function TX(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:l,pad:c,dimRoundingMode:u}=a,p=[1,1,1],d=_.computePool3DInfo(i.shape,o,l,p,c,u),h=new IX(d);return n.runWebGLProgram(h,[r],i.dtype)}var NX={kernelName:pd,backendName:"webgl",kernelFunc:TX};function SX(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;cp([r,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:c}=a,u=_.computePool2DInfo(i.shape,o,l,1,c),p=new kX(u);return n.runWebGLProgram(p,[r],i.dtype)}var CX={kernelName:cd,backendName:"webgl",kernelFunc:SX};function _X(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;return Dm({a:r,b:s,transposeA:i,transposeB:o,backend:n})}var EX={kernelName:Cs,backendName:"webgl",kernelFunc:_X},FX=class{constructor(e,t,n,a,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],_.assertAndGetBroadcastShape(e,t),_.assertAndGetBroadcastShape(e,n);let i="0.0";a!=null&&(_.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";r!=null&&(_.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},AX=class{constructor(e,t,n,a,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],_.assertAndGetBroadcastShape(e,t),_.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";a!=null&&(_.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";r!=null&&(_.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}},$X=({inputs:e,backend:t,attrs:n})=>{let{x:a,mean:r,variance:s,offset:i,scale:o}=e;w.assert(r.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);let c=[a,r,s],u=null;i!=null&&(u=i.shape,c.push(i));let p=null;o!=null&&(p=o.shape,c.push(o));let d=Z().getBool("WEBGL_PACK_NORMALIZATION")?new AX(a.shape,r.shape,s.shape,u,p,l):new FX(a.shape,r.shape,s.shape,u,p,l);return t.runWebGLProgram(d,c,c[0].dtype)},DX={kernelName:zs,backendName:"webgl",kernelFunc:$X},MX=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=dt(this.rank),n=`uniform int start[${this.rank}];`,a=RX(this.rank),r,s=e.map((i,o)=>`sourceLoc.${Ov[o]} = start[${o}] + coords.${Ov[o]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      ${n}
      void main() {
        ${r}
        setOutput(getSource(${a}));
      }
    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{this.startLoc==null&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),this.startLoc==null)||t.gl.uniform1iv(this.startLoc,e)}}},Ov=["x","y","z","w","u","v"];function RX(e){if(e===1)return"sourceLoc";if(e<=6)return Ov.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var PX=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;let t=dt(this.rank),n=gn("coords",this.rank),a=gn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${a.slice(-2).join()})`,s=`getChannel(getSource(${a.join()}), ${r})`,i=`
      result.x = ${s};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${a[this.rank-1]};
        result.y = ${s};
        --${a[this.rank-1]};
      }
    `,o=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${a[this.rank-2]};
        result.z = ${s};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${a[this.rank-1]};
          result.w = ${s};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,u)=>`start[${u}]`).join()});`:e.map((c,u)=>`${a[u]} = ${n[u]} + start[${u}];`).join(`
`);this.userCode=`
      uniform int start[${this.rank}];
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{this.startLoc==null&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),this.startLoc==null)||t.gl.uniform1iv(this.startLoc,e)}}};function OX(e,t,n,a){let r=a.texData.get(e.dataId),s=a.makeTensorInfo(n,e.dtype),i=a.texData.get(s.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=an.computeFlatOffset(t,w.computeStrides(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};let l=a.dataRefCount.get(i.slice.origDataId)||1;return a.dataRefCount.set(i.slice.origDataId,l+1),s}function mp(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a,[o,l]=an.parseSliceParams(r,s,i);if(an.assertParamsValid(r,o,l),w.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){let p=n.texData.get(r.dataId),d=A8(p.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,d)}let{isPacked:c}=n.texData.get(r.dataId),u=an.isSliceContinous(r.shape,o,l);if(c||!u){let p=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new PX(l):new MX(l),d=p.getCustomSetupFunc(o);return n.runWebGLProgram(p,[r],r.dtype,d)}return n.uploadToGPU(r.dataId),OX(r,o,l,n)}var LX={kernelName:ml,backendName:"webgl",kernelFunc:mp},zX=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;w.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((b,x)=>b*x),l=_.getReshaped(r.shape,s,o),c=_.getPermuted(l.length,s.length),u=_.getReshapedPermuted(r.shape,s,o),p=_.getSliceBeginCoords(i,s.length),d=_.getSliceSize(u,i,s.length),h=[],m=ge({inputs:{x:r},backend:n,attrs:{shape:l}}),f=An({inputs:{x:m},backend:n,attrs:{perm:c}}),g=ge({inputs:{x:f},backend:n,attrs:{shape:u}}),y=mp({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return h.push(m),h.push(f),h.push(g),h.forEach(b=>n.disposeIntermediateTensorInfo(b)),y},WX={kernelName:Ju,backendName:"webgl",kernelFunc:zX};function BX(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i}=a,o=n.readSync(r.dataId),l=n.readSync(s.dataId),c=q2(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,c)}var VX={kernelName:dd,backendName:"webgl",kernelFunc:BX},UX="return float(a != b);",xN=on({opSnippet:UX,dtype:"bool"}),GX={kernelName:nl,backendName:"webgl",kernelFunc:xN};function fp(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.texData.get(a.dataId);return Gn({inputs:{x:r.complexTensorInfos.real},backend:n})}var HX={kernelName:Dd,backendName:"webgl",kernelFunc:fp},jX="return float(int(x));";function qX(e,t){let n=new ds(e.shape,jX),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}function Lv(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:s}=a;if(s==="complex64"){if(r.dtype==="complex64")return Gn({inputs:{x:r},backend:n});let i=xt(r.shape),o=Lv({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=hs({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeIntermediateTensorInfo(o),l}if(r.dtype==="complex64"){let i=fp({inputs:{input:r},backend:n}),o=Lv({inputs:{x:i},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(i),o}if(!w.hasEncodingLoss(r.dtype,s)){let i=Gn({inputs:{x:r},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32")return qX(r,n);if(s==="bool"){let i=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),o=xN({inputs:{a:r,b:i},backend:n});return n.disposeIntermediateTensorInfo(i),o}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${s}`)}var KX={kernelName:_s,backendName:"webgl",kernelFunc:Lv},vN="return ceil(x);",XX=Ke({opSnippet:vN,packedOpSnippet:vN,cpuKernelImpl:h8}),YX={kernelName:Es,backendName:"webgl",kernelFunc:XX},JX=class{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}getCustomSetupFunc(e,t){return(n,a)=>{this.minLoc==null&&(this.minLoc=n.getUniformLocationNoThrow(a,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(a,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}},QX=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}getCustomSetupFunc(e,t){return(n,a)=>{this.minLoc==null&&(this.minLoc=n.getUniformLocationNoThrow(a,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(a,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}};function ZX(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=a,o;Z().getBool("WEBGL_PACK_CLIP")?o=new QX(r.shape):o=new JX(r.shape);let l=o.getCustomSetupFunc(s,i);return n.runWebGLProgram(o,[r],r.dtype,l)}var eY={kernelName:Vr,backendName:"webgl",kernelFunc:ZX},tY=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function wN(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function nY(e){let{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),s=new tY(a.shape),i=[wN(a,r.complexTensorInfos.real),wN(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}var aY={kernelName:Qu,backendName:"webgl",kernelFunc:nY},rY=class{constructor(e){this.outputShape=[],this.outputShape=_.computeOutShape(e,1),this.variableNames=e.map((s,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){let i=t[s-1];n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${i}));`)}let a=t.length,r=t[t.length-1];n.push(`else setOutput(getT${a}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},sY=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=_.computeOutShape(e,t);let n=this.outputShape,a=n.length,r=dt(a),s=gn("coords",a),i=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map((m,f)=>`T${f}`);let o=new Array(e.length-1);o[0]=e[0][t];for(let m=1;m<o.length;m++)o[m]=o[m-1]+e[m][t];let l=i[t],c=i.slice(-2),u=i.join(),p=`if (${l} < ${o[0]}) {
        return getChannel(
            getT0(${u}), vec2(${c.join()}));
        }`;for(let m=1;m<o.length;m++){let f=o[m-1];p+=`
        if (${l} < ${o[m]}  && ${l} >= ${o[m-1]}) {
          return getChannel(
            getT${m}(${Mm(i,l,f)}),
            vec2(${Mm(c,l,f)}));
        }`}let d=o.length,h=o[o.length-1];p+=`
        return getChannel(
          getT${d}(${Mm(i,l,h)}),
          vec2(${Mm(c,l,h)}));`,this.userCode=`
      float getValue(${i.map(m=>"int "+m)}) {
        ${p}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[a-1]} = ${s[a-1]} + 1;
        if (${s[a-1]} < ${n[a-1]}) {
          result.g = getValue(${s});
        }

        ${s[a-2]} = ${s[a-2]} + 1;
        if (${s[a-2]} < ${n[a-2]}) {
          result.a = getValue(${s});
        }

        ${s[a-1]} = ${s[a-1]} - 1;
        if (${s[a-2]} < ${n[a-2]} &&
            ${s[a-1]} < ${n[a-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}};function Mm(e,t,n){let a=e.indexOf(t);return e.map((r,s)=>s===a?`${r} - ${n}`:r).join()}function Pm(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.texData.get(a.dataId);return Gn({inputs:{x:r.complexTensorInfos.imag},backend:n})}var iY={kernelName:Sd,backendName:"webgl",kernelFunc:Pm};function du(e,t,n){let a=e[0].dtype;if(a==="complex64"){let c=e.map(m=>fp({inputs:{input:m},backend:n})),u=e.map(m=>Pm({inputs:{input:m},backend:n})),p=du(c,t,n),d=du(u,t,n),h=hs({inputs:{real:p,imag:d},backend:n});return c.forEach(m=>n.disposeIntermediateTensorInfo(m)),u.forEach(m=>n.disposeIntermediateTensorInfo(m)),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),h}if(a==="string"){let{tensors2D:c,outShape:u}=kN(e,t,n),p=c.map(g=>({vals:n.readSync(g.dataId),shape:g.shape})),d=c[0].shape[0]===1,h=m8(p,u,a,d),m=_.computeOutShape(e.map(g=>g.shape),t),f=n.makeTensorInfo(m,a,h);return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),f}if(e.length>Z().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let c=Math.floor(e.length/2),u=du(e.slice(0,c),t,n),p=du(e.slice(c),t,n),d=du([u,p],t,n);return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),d}if(Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let c=new sY(e.map(u=>u.shape),t);return n.runWebGLProgram(c,e,a)}let{tensors2D:r,outShape:s}=kN(e,t,n),i=new rY(r.map(c=>c.shape)),o=n.runWebGLProgram(i,r,a);r.forEach(c=>n.disposeIntermediateTensorInfo(c));let l=ge({inputs:{x:o},attrs:{shape:s},backend:n});return n.disposeIntermediateTensorInfo(o),l}function kN(e,t,n){let a=_.computeOutShape(e.map(r=>r.shape),t);return{tensors2D:e.map(r=>ge({inputs:{x:r},attrs:{shape:[-1,w.sizeFromShape(r.shape.slice(t))]},backend:n})),outShape:a}}function IN(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=w.parseAxisParam(r,t[0].shape)[0],i=_.computeOutShape(t.map(c=>c.shape),s);if(w.sizeFromShape(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(c=>w.sizeFromShape(c.shape)>0);if(o.length===1)return Gn({inputs:{x:o[0]},backend:n});let l=o.map(c=>c.shape);return _.assertParamsConsistent(l,s),du(o,s,n)}var oY={kernelName:Ro,backendName:"webgl",kernelFunc:IN},TN=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,u=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,h=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,f=e.dataFormat==="channelsLast",g=f?1:2,y=f?2:3,b=f?3:1,x="",v="";n&&(a?x=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?x=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:x=`
          float activation(float x) {
            ${n}
          }
        `,v="result = activation(result);");let T=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${b}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${u};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${f}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${f}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${f}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${f}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${T}
        ${v}
        setOutput(result);
      }
    `}},lY=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,u=e.filterDepth,p=e.filterHeight,d=e.filterWidth,h=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${s}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${a});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${u}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},uY=class{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let{filterWidth:a,inChannels:r,strideWidth:s,strideHeight:i,padInfo:o,outWidth:l,dilationWidth:c,dilationHeight:u,dataFormat:p}=n,{left:d,top:h}=o,m=r*a,f=fn(),g=p==="channelsLast",y=g?0:1,b=g?1:2,x="";for(let v=0;v<=1;v++)for(let T=0;T<=1;T++)x+=`
          blockIndex = rc.y + ${T};
          pos = rc.x + ${v};

          if(blockIndex < ${e[1]} && pos < ${e[0]}) {
            offsetY = int(blockIndex / (${l})) * ${i} - ${h};
            d0 = offsetY + ${u} * (pos / ${m});

            if(d0 < ${t[y]} && d0 >= 0) {

              offsetX = int(mod(float(blockIndex), ${l}.) * ${s}. - ${d}.);
              d1 = offsetX + ${c} * (int(mod(float(pos), ${m}.) / ${r}.));

              if(d1 < ${t[b]} && d1 >= 0) {

                ch = int(mod(float(pos), ${r}.));

                if (${g}) {
                  innerDims = vec2(d1, ch);
                  result[${v*2+T}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${v*2+T}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${x}

        ${f.output} = result;
      }
    `}};function NN({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=e.shape,c=a.texData.get(e.dataId),u=n.inChannels,p=l[0]*l[1]*l[2],d=n.outChannels,h=n.dataFormat==="channelsLast",m=!1,f=!1,g,y=[],b=(p===1||d===1)&&u>hN,x=l[2]%2!=0&&!!c.isPacked;if(b||!Z().getBool("WEBGL_LAZILY_UNPACK")||!Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!x){let v=h?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],T=ge({inputs:{x:e},backend:a,attrs:{shape:[1,v,n.inChannels]}}),k=ge({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),S=Dm({a:T,b:k,transposeA:m,transposeB:f,backend:a,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i});g=ge({inputs:{x:S},backend:a,attrs:{shape:n.outShape}}),y.push(T),y.push(k),y.push(S)}else{let v=h?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),T={dataId:e.dataId,shape:[1,v,n.inChannels],dtype:e.dtype},k=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,w.assert(_m(c.shape,T.shape),()=>`packed reshape ${c.shape} to ${T.shape} isn't free`);let S=ge({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(S);let F=Dm({a:T,b:S,backend:a,transposeA:m,transposeB:f,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),A=a.texData.get(F.dataId);w.assert(A.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=k,A.shape=n.outShape,g=Gn({inputs:{x:F},backend:a}),g.shape=n.outShape,y.push(F)}for(let v of y)a.disposeIntermediateTensorInfo(v);return g}function SN({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:c,inChannels:u,outWidth:p,outHeight:d,dataFormat:h}=n,m=h==="channelsLast",f=l*c*u,g=d*p,y=[f,g],b=!0,x=!1,v=[],T=ge({inputs:{x:e},backend:a,attrs:{shape:e.shape.slice(1)}}),k=ge({inputs:{x:t},backend:a,attrs:{shape:[1,f,w.sizeFromShape(t.shape)/f]}});v.push(T),v.push(k);let S=new uY(y,T.shape,n),F=a.runWebGLProgram(S,[T],"float32"),A=ge({inputs:{x:F},backend:a,attrs:{shape:[1,y[0],y[1]]}});v.push(F),v.push(A);let R=r!=null,P=s!=null,z=o==="leakyrelu",V=o?Am(o,!0):null,G=new oN(A.shape,k.shape,[1,g,n.outChannels],b,x,R,V,P,z),H=[A,k];if(r&&H.push(r),P&&H.push(s),z){let Q=a.makeTensorInfo([],"float32",w.createScalarValue(i,"float32"));H.push(Q),v.push(Q)}let K=a.runWebGLProgram(G,H,"float32"),j=m?[1,d,p,n.outChannels]:[1,n.outChannels,d,p],te=ge({inputs:{x:K},backend:a,attrs:{shape:j}});v.push(K);for(let Q of v)a.disposeIntermediateTensorInfo(Q);return te}function cY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:c,dimRoundingMode:u}=a,p=_.convertConv2DDataFormat(l),d=_.computeConv2DInfo(r.shape,s.shape,i,c,o,u,!1,p),h;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))h=NN({x:r,filter:s,convInfo:d,backend:n});else if(Z().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)h=SN({x:r,filter:s,convInfo:d,backend:n});else{let f=new TN(d);h=n.runWebGLProgram(f,[r,s],"float32")}let m=ge({inputs:{x:h},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(h),m}var pY={kernelName:Fs,backendName:"webgl",kernelFunc:cY},dY=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${a};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${s}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},hY=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,c=s?2:3,u=s?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${u}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},mY=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${a} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},fY=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,c=a-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${l}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${a}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${a} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function gY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:c,filterShape:u}=a,p=_.convertConv2DDataFormat(l),d=_.computeConv2DInfo(r.shape,u,i,1,o,c,!1,p),h=new dY(d);return n.runWebGLProgram(h,[r,s],"float32")}var yY={kernelName:md,backendName:"webgl",kernelFunc:gY};function bY(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:c,dimRoundingMode:u}=a,p=_.convertConv2DDataFormat(c),d=_.computeConv2DInfo(i,s.shape,o,1,l,u,!1,p),h=new hY(d);return n.runWebGLProgram(h,[r,s],"float32")}var xY={kernelName:As,backendName:"webgl",kernelFunc:bY};function vY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a,c=_.computeConv3DInfo(r.shape,s.shape,i,l,o),u=new lY(c);return n.runWebGLProgram(u,[r,s],"float32")}var wY={kernelName:Zu,backendName:"webgl",kernelFunc:vY};function kY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:l}=a,c=_.computeConv3DInfo(r.shape,l,i,1,o),u=new mY(c);return n.runWebGLProgram(u,[r,s],"float32")}var IY={kernelName:fd,backendName:"webgl",kernelFunc:kY};function TY(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:l}=a,c=_.computeConv3DInfo(l,s.shape,o,1,i),u=new fY(c);return n.runWebGLProgram(u,[r,s],"float32")}var NY={kernelName:gd,backendName:"webgl",kernelFunc:TY},SY=iN+`
  return cos(x);
`,CY=Ke({opSnippet:SY}),_Y={kernelName:$s,backendName:"webgl",kernelFunc:CY},EY=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,FY=Ke({opSnippet:EY}),AY={kernelName:Mo,backendName:"webgl",kernelFunc:FY},$Y=class{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[c]=t,[u,p]=n;this.outputShape=[c,u,p,l];let d=a==="bilinear"?1:0,[h,m]=[`${i-1}.0`,`${o-1}.0`],[f,g,y]=u>1?[`${(i-1)/(u-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[b,x,v]=p>1?[`${(o-1)/(p-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${f});
      const float width_ratio = float(${b});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${x};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},DY=e=>{let{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:c}=a,u=new $Y(r.shape,s.shape,o,l,c);return n.runWebGLProgram(u,[r,s,i],"float32")},RY={kernelName:Po,backendName:"webgl",kernelFunc:DY},EN=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;let a=e.length,r=t?"0.0":`getX(${CN(a,"coords")})`,s=e[e.length-1],i="",o="";t?(i=n?`end != ${s-1}`:"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`
      uniform float index;
      void main() {
        ${dt(a)} coords = getOutputCoords();
        int end = ${_N(a,"coords")};
        float val = ${r};
        int pow2 = int(pow(2.0, index));
        if (${i}) {
          int idx = ${o};
          ${_N(a,"coords")} = idx;
          val += getX(${CN(a,"coords")});
        }
        setOutput(val);
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.index==null&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}};function CN(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function _N(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function MY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a,l=r.shape.length,c=_.getAxesPermutation([s],l),u=r;c!=null&&(u=An({inputs:{x:r},backend:n,attrs:{perm:c}}));let p=_.getInnerMostAxes(1,l)[0];if(p!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${s}`);let d=u.shape[p],h=Gn({inputs:{x:u},backend:n});for(let m=0;m<=Math.ceil(Math.log2(d))-1;m++){let f=new EN(u.shape,!1,o),g=f.getCustomSetupFunc(m),y=h;h=n.runWebGLProgram(f,[h],h.dtype,g),n.disposeIntermediateTensorInfo(y)}if(i){let m=new EN(u.shape,i,o),f=h;h=n.runWebGLProgram(m,[h],h.dtype),n.disposeIntermediateTensorInfo(f)}if(c!=null){let m=_.getUndoAxesPermutation(c),f=An({inputs:{x:h},backend:n,attrs:{perm:m}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),f}return h}var PY={kernelName:Ds,backendName:"webgl",kernelFunc:MY};function OY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=a;if(r.shape.length===1){let l=n.readSync(r.dataId),c=n.readSync(s.dataId),u=q2(l,c,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}else if(r.shape.length===2){let l=n.bufferSync(r),c=n.bufferSync(s),u=d8(l,c,i,o);return n.makeTensorInfo(u.shape,s.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var LY={kernelName:yd,backendName:"webgl",kernelFunc:OY},zY=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function WY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:i}=a;w.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);let o=r.shape[0],l=i==="NHWC"?r.shape[1]:r.shape[2],c=i==="NHWC"?r.shape[2]:r.shape[3],u=i==="NHWC"?r.shape[3]:r.shape[1],p=l*s,d=c*s,h=u/(s*s),m=i==="NHWC"?[o,p,d,h]:[o,h,p,d],f=new zY(m,s,i);return n.runWebGLProgram(f,[r],r.dtype)}var BY={kernelName:Oo,backendName:"webgl",kernelFunc:WY},FN=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,c=e.strideHeight,u=e.strideWidth,p=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,m=e.filterWidth,f=e.outChannels/e.inChannels,g="",y="";n&&(a?g=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?g=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:g=`
          float activation(float x) {
            ${n}
          }
        `,y="result = activation(result);");let b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${g}

      const ivec2 strides = ivec2(${c}, ${u});
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${f};
        int q = d2 - d1 * ${f};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${p};

          if (xR < 0 || xR >= ${s}) {
            continue;
          }

          for (int wC = 0; wC < ${m}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${i}) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${b}
        ${y}
        setOutput(result);
      }
    `}},AN=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;let s=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,c=e.strideHeight,u=e.strideWidth,p=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,m=e.filterWidth,f=m,g="int xR; int xC; int xCOffset;";for(let v=0;v<h;v++)for(let T=0;T<m;T++)g+=`
          vec4 xTexelR${v}C${T*2} = vec4(0.);
          vec4 wR${v}C${T} = vec4(0.);
          vec4 xR${v}C${T} = vec4(0.);`;for(let v=0;v<h;v++)for(let T=0;T<f;T++){let k=T*2;if(g+=`
          xR = xRCorner + ${v*p};
          xC = xCCorner + ${k*d};
        `,u===1){if(k<m&&(l%2==1?g+=`
                xCOffset = xC + 1;
                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${v}C${k} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${i}) {
                    xTexelR${v}C${k}.zw = vec2(0.);
                  }
                } else {
                  xTexelR${v}C${k} = vec4(0.);
                }

                xCOffset = xC + 1 - 2;
                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {
                  vec4 previous = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${i}) {
                    previous.zw = vec2(0.);
                  }

                  xR${v}C${k} = vec4(previous.zw, xTexelR${v}C${k}.xy);
                } else {
                  xR${v}C${k} = vec4(0, 0, xTexelR${v}C${k}.xy);
                }
              `:g+=`
                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${i}) {
                  xTexelR${v}C${k} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${v}C${k} = vec4(0.);
                }

                xR${v}C${k} = xTexelR${v}C${k};
              `,k+1<m)){let S=l%2==0?w.nearestLargerEven(d):d;d%2==0&&l%2==1||d%2!=0&&l%2!=1?(g+=`
                  xCOffset = xC + ${l%2} + ${S};

                  if(xR >= 0 && xR < ${s} &&
                    xCOffset >= 0 && xCOffset < ${i}) {
                    xTexelR${v}C${k+2} = getX(batch, xR, xCOffset, d1);
                  }
                `,d>1&&(g+=`
                    xCOffset -= 2;
                    if(xR >= 0 && xR < ${s} &&
                      xCOffset >= 0 && xCOffset < ${i}) {
                      xTexelR${v}C${k} = getX(batch, xR, xCOffset, d1);
                    } else {
                      xTexelR${v}C${k} = vec4(0.);
                    }
                  `),g+=`
                  xR${v}C${k+1} = vec4(
                    xTexelR${v}C${k}.zw, xTexelR${v}C${k+2}.xy);
                `):g+=`
                  xCOffset = xC + ${S};

                  if(xR >= 0 && xR < ${s} &&
                    xCOffset >= 0 && xCOffset < ${i}) {
                    xTexelR${v}C${k+2} = getX(batch, xR, xCOffset, d1);
                  }

                  xR${v}C${k+1} = xTexelR${v}C${k+2};
                `}}else k<m&&(g+=`
              if(xR >= 0 && xR < ${s}) {
            `,l%2==1?(g+=`
                xCOffset = xC + 1 - ${u};
                if(xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${v}C${k} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${v}C${k} = vec4(0.);
                }

                if(xC + 1 >= 0 && xC + 1 < ${i}) {
                  xTexelR${v}C${k+2} = getX(batch, xR, xC + 1, d1);
                } else {
                  xTexelR${v}C${k+2} = vec4(0.);
                }

                xR${v}C${k} = vec4(
                  xTexelR${v}C${k}.zw, xTexelR${v}C${k+2}.zw);
              `,k+1<m&&(g+=`
                  vec4 final = vec4(0.);
                  xCOffset = xC + 1 + ${u};
                  if(xCOffset >= 0 && xCOffset < ${i}) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xR${v}C${k+1} = vec4(xTexelR${v}C${k+2}.xy, final.xy);
                `)):(g+=`
                if(xC >= 0 && xC < ${i}) {
                  xTexelR${v}C${k} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${v}C${k} = vec4(0.);
                }

                xCOffset = xC + ${u};
                if(xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${v}C${k+2} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${v}C${k+2} = vec4(0.);
                }

                xR${v}C${k} = vec4(
                  xTexelR${v}C${k}.xy, xTexelR${v}C${k+2}.xy);
              `,k+1<m&&(g+=`
                  xR${v}C${k+1} = vec4(
                    xTexelR${v}C${k}.zw, xTexelR${v}C${k+2}.zw);
                `)),g+="}");k<m&&(g+=`
            vec4 wTexelR${v}C${k} = getW(${v}, ${k}, d1, q);
            wR${v}C${k} = vec4(wTexelR${v}C${k}.xz, wTexelR${v}C${k}.xz);
          `,k+1<m&&(g+=`
              vec4 wTexelR${v}C${k+1} = getW(${v}, ${k+1}, d1, q);
              wR${v}C${k+1} =
                vec4(wTexelR${v}C${k+1}.xz, wTexelR${v}C${k+1}.xz);`))}for(let v=0;v<h;v++)for(let T=0;T<m;T++)g+=`dotProd += xR${v}C${T} * wR${v}C${T};`;let y="",b="";n&&(a?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:y=`vec4 activation(vec4 x) {
          ${n}
        }`,b="result = activation(result);");let x=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      const ivec2 strides = ivec2(${c}, ${u});
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {

        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2;
        int q = 0;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        vec4 dotProd = vec4(0.);

        ${g}

        vec4 result = dotProd;
        ${x}
        ${b}
        setOutput(result);
      }
    `}};function VY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:c}=a,u=l;u==null&&(u=[1,1]),w.assert(_.eitherStridesOrDilationsAreOne(i,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let p=_.computeConv2DInfo(r.shape,s.shape,i,u,o,c,!0),d;return Z().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?d=new AN(p):d=new FN(p),n.runWebGLProgram(d,[r,s],"float32")}var UY={kernelName:Rs,backendName:"webgl",kernelFunc:VY},GY=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${a};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},HY=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function jY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:c,filterShape:u}=a,p=_.computeConv2DInfo(r.shape,u,i,o,l,c,!0),d=new GY(p);return n.runWebGLProgram(d,[r,s],"float32")}var qY={kernelName:bd,backendName:"webgl",kernelFunc:jY};function KY(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:c,inputShape:u}=a,p=_.computeConv2DInfo(u,s.shape,i,o,l,c,!0),d=new HY(p);return n.runWebGLProgram(d,[r,s],"float32")}var XY={kernelName:xd,backendName:"webgl",kernelFunc:KY},YY=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function JY(e){let{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],s=w.sizeFromShape(a.shape),i=ge({inputs:{x:a},backend:n,attrs:{shape:[s]}}),o=new YY(s),l=n.runWebGLProgram(o,[i],i.dtype),c=ge({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}var QY={kernelName:vd,backendName:"webgl",kernelFunc:JY},ZY=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:c}=e,{top:u,left:p}=a;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${s});
      const ivec2 pads = ivec2(${u}, ${p});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function e7(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a,c=_.computeDilation2DInfo(r.shape,s.shape,i,o,"NHWC",l),u,p=new ZY(c);u=n.runWebGLProgram(p,[r,s],"float32");let d=ge({inputs:{x:u},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(u),d}var t7={kernelName:ec,backendName:"webgl",kernelFunc:e7},n7="return (x >= 0.0) ? x : (exp(x) - 1.0);",a7=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,r7=Ke({opSnippet:n7,packedOpSnippet:a7}),s7={kernelName:Lo,backendName:"webgl",kernelFunc:r7},i7="return (b >= 1.0) ? a : a * (b + 1.0);",o7=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,l7=e=>{let{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dp(o7,a.shape,r.shape):new pu(i7,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)},u7={kernelName:Id,backendName:"webgl",kernelFunc:l7},c7=`
  return vec4(equal(a, b));
`,p7="return float(a == b);",d7=on({opSnippet:p7,packedOpSnippet:c7,dtype:"bool"}),h7={kernelName:Wo,backendName:"webgl",kernelFunc:d7},m7=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${_.ERF_P};
  float a1 = ${_.ERF_A1};
  float a2 = ${_.ERF_A2};
  float a3 = ${_.ERF_A3};
  float a4 = ${_.ERF_A4};
  float a5 = ${_.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,f7=Ke({opSnippet:m7}),g7={kernelName:zo,backendName:"webgl",kernelFunc:f7},$N="return exp(x);",DN=Ke({opSnippet:$N,packedOpSnippet:$N,cpuKernelImpl:f8}),y7={kernelName:Ps,backendName:"webgl",kernelFunc:DN};function zv(e){let{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=r;return r<0&&(w.assert(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+r+1),o.splice(l,0,1),ge({inputs:{x:s},backend:a,attrs:{shape:o}})}var b7={kernelName:Bo,backendName:"webgl",kernelFunc:zv},RN="return exp(x) - 1.0;",x7=Ke({opSnippet:RN,packedOpSnippet:RN,cpuKernelImpl:g8}),v7={kernelName:Vo,backendName:"webgl",kernelFunc:x7},MN=class{constructor(e,t,n){this.variableNames=["real","imag"];let a=t[1];this.outputShape=t;let r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${a}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${a});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${a}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function PN(e,t,n){let a=n.texData.get(e.dataId),r=w.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=r/s,o=ge({inputs:{x:e},backend:n,attrs:{shape:[i,s]}}),l=o.shape,c=new MN("real",l,t),u=new MN("imag",l,t),p=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:l},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(c,p,"float32"),h=n.runWebGLProgram(u,p,"float32"),m=hs({inputs:{real:d,imag:h},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h);let f=ge({inputs:{x:m},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(m),f}function w7(e){let{inputs:t,backend:n}=e,{input:a}=t;return PN(a,!1,n)}var k7={kernelName:Td,backendName:"webgl",kernelFunc:w7},I7=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      uniform float value;
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.valueLoc==null&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}};function Wv(e){let{backend:t,attrs:n}=e,{shape:a,value:r}=n,{dtype:s}=n;if(s=s||w.inferDtype(r),s==="string"){let i=w.getArrayFromDType(s,w.sizeFromShape(a));return i.fill(r),t.makeTensorInfo(a,s,i)}else{let i=new I7(a,r),o=i.getCustomSetupFunc(r);return t.runWebGLProgram(i,[],s,o)}}var T7={kernelName:tc,backendName:"webgl",kernelFunc:Wv},N7=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},S7={kernelName:Uo,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,a=t,r=new N7(n.shape);return a.runWebGLProgram(r,[n],n.dtype)}},ON="return floor(x);",C7=Ke({opSnippet:ON,packedOpSnippet:ON,cpuKernelImpl:y8}),_7={kernelName:Os,backendName:"webgl",kernelFunc:C7},E7=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,F7=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,A7=on({opSnippet:E7,packedOpSnippet:F7,dtype:"int32"}),$7={kernelName:Ls,backendName:"webgl",kernelFunc:A7},D7=class{constructor(e){this.variableNames=["A"];let t=fn(),[n,a]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},R7=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=fn(),[n,a]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${a}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},P7={kernelName:zd,backendName:"webgl",kernelFunc:M7},hu;function M7(e){let{inputs:t,backend:n,attrs:a}=e,{pixels:r}=t,{numChannels:s}=a,i=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,o=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,[l,c]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[c,l],p=[c,l,s];(o||i)&&(hu==null&&(hu=document.createElement("canvas").getContext("2d")),hu.canvas.width=l,hu.canvas.height=c,hu.drawImage(r,0,0,l,c),r=hu.canvas);let d=n.makeTensorInfo(u,"int32");n.texData.get(d.dataId).usage=na.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);let h=Z().getBool("WEBGL_PACK")?new R7(p):new D7(p),m=n.runWebGLProgram(h,[d],"int32");return n.disposeData(d.dataId),m}function O7(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:c,dataFormat:u,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:m}=a,f=_.convertConv2DDataFormat(u),g=_.computeConv2DInfo(r.shape,s.shape,l,p,c,d,!1,f),y,b=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=NN({x:r,filter:s,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:m});else if(Z().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)y=SN({x:r,filter:s,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:m});else{let v=i!=null,T=o!=null,k=h==="leakyrelu",S=h?Am(h,!1):null,F=new TN(g,v,S,T,k),A=[r,s];if(i&&A.push(i),o&&A.push(o),k){let R=n.makeTensorInfo([],"float32",w.createScalarValue(m,"float32"));A.push(R),b.push(R)}y=n.runWebGLProgram(F,A,"float32")}let x=ge({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach(v=>n.disposeIntermediateTensorInfo(v)),x}var L7={kernelName:yi,backendName:"webgl",kernelFunc:O7};function z7(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:p,activation:d,leakyreluAlpha:h}=a,m=[],f=u;f==null&&(f=[1,1]),w.assert(_.eitherStridesOrDilationsAreOne(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);let g=_.computeConv2DInfo(r.shape,s.shape,l,f,c,p,!0),y=Z().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=d?Am(d,y):null,x=[r,s],v=i!=null,T=o!=null,k=d==="leakyrelu";if(v&&x.push(i),T&&x.push(o),k){let A=n.makeTensorInfo([],"float32",w.createScalarValue(h,"float32"));x.push(A),m.push(A)}let S;y?S=new AN(g,v,b,T,k):S=new FN(g,v,b,T,k);let F=n.runWebGLProgram(S,x,"float32");return m.forEach(A=>n.disposeIntermediateTensorInfo(A)),F}var W7={kernelName:bi,backendName:"webgl",kernelFunc:z7},B7=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let a=dt(t.length),r=dt(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${a} strides = ${a}(${this.strides});
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${s};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function V7(e){let{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,i=s[s.length-1],[o,l,c,u]=_.prepareAndValidate(a,r),p=ge({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),d=ge({inputs:{x:a},backend:n,attrs:{shape:[w.sizeFromShape(a.shape)/c,c]}}),h=new B7(i,u,[l,c]),m=n.runWebGLProgram(h,[d,p],d.dtype),f=ge({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),f}var U7={kernelName:Ho,backendName:"webgl",kernelFunc:V7},H7=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=dt(this.rank),a=G7(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}};function G7(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<e.length;r++)r===2?a.push("int(getIndices(resRC.x, resRC.z))"):a.push(`${n[r]}`);return a.join()}function j7(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=a,l=w.parseAxisParam(i,r.shape)[0],c=_.segment_util.collectGatherOpShapeInfo(r,s,l,o),u=w.sizeFromShape(s.shape),p=[],d=ge({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),h=ge({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}});p.push(d),p.push(h);let m=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([r,s])||r.dtype==="string"){let b=n.bufferSync(h),x=n.bufferSync(d),v=b8(x,b,m);return p.forEach(T=>n.disposeIntermediateTensorInfo(T)),n.makeTensorInfo(c.outputShape,v.dtype,v.values)}let f=new H7(d.shape,m),g=n.runWebGLProgram(f,[d,h],d.dtype);p.push(g);let y=ge({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return p.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}var q7={kernelName:Go,backendName:"webgl",kernelFunc:j7},K7="return float(a > b);",X7=`
  return vec4(greaterThan(a, b));
`,Y7=on({opSnippet:K7,packedOpSnippet:X7,cpuKernelImpl:x8,dtype:"bool"}),J7={kernelName:jo,backendName:"webgl",kernelFunc:Y7},Q7="return float(a >= b);",Z7=`
  return vec4(greaterThanEqual(a, b));
`,e9=on({opSnippet:Q7,packedOpSnippet:Z7,dtype:"bool"}),t9={kernelName:Ws,backendName:"webgl",kernelFunc:e9};function n9(e){let{inputs:t,backend:n}=e,{input:a}=t;return PN(a,!0,n)}var a9={kernelName:Nd,backendName:"webgl",kernelFunc:n9},r9="return float(!isnan(x) && !isinf(x));",s9=Ke({opSnippet:r9,dtype:"bool"}),i9={kernelName:qo,backendName:"webgl",kernelFunc:s9},o9="return float(isinf(x));",l9=Ke({opSnippet:o9,dtype:"bool"}),u9={kernelName:Ko,backendName:"webgl",kernelFunc:l9},c9="return float(isnan(x));",p9=Ke({opSnippet:c9,dtype:"bool"}),d9={kernelName:Xo,backendName:"webgl",kernelFunc:p9},h9="return float(a < b);",m9=`
  return vec4(lessThan(a, b));
`,f9=on({opSnippet:h9,packedOpSnippet:m9,cpuKernelImpl:v8,dtype:"bool"}),g9={kernelName:Yo,backendName:"webgl",kernelFunc:f9},y9="return float(a <= b);",b9=`
  return vec4(lessThanEqual(a, b));
`,x9=on({opSnippet:y9,packedOpSnippet:b9,dtype:"bool"}),v9={kernelName:Jo,backendName:"webgl",kernelFunc:x9};function w9(e){let{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,i=w8(a,r,s);return t.makeTensorInfo([i.length],"float32",i)}var k9={kernelName:Cd,backendName:"webgl",kernelFunc:w9},I9=`if (x < 0.0) return NAN;
  return log(x);`,T9=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,N9=Ke({opSnippet:I9,packedOpSnippet:T9,cpuKernelImpl:k8}),S9={kernelName:Us,backendName:"webgl",kernelFunc:N9},C9="return log(1.0 + x);",_9=Ke({opSnippet:C9}),E9={kernelName:Qo,backendName:"webgl",kernelFunc:_9},F9="return float(a >= 1.0 && b >= 1.0);",A9=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,$9=on({opSnippet:F9,packedOpSnippet:A9,dtype:"bool"}),D9={kernelName:Zo,backendName:"webgl",kernelFunc:$9},R9="return float(!(x >= 1.0));",M9=Ke({opSnippet:R9}),P9={kernelName:nc,backendName:"webgl",kernelFunc:M9},O9="return float(a >= 1.0 || b >= 1.0);",L9=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,z9=on({opSnippet:O9,packedOpSnippet:L9,dtype:"bool"}),W9={kernelName:ac,backendName:"webgl",kernelFunc:z9},B9=class{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${a}) * sum`;r===.5?o=`inversesqrt(${l})`:r===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${s}; j <= ${s}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${o};
        setOutput(val);
      }
    `}},V9=class{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${a}) * sum`;r===.5?o=`inversesqrt(${l})`:r===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${s};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${s}; j <= ${s}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${o};
        setOutput(result);
      }
    `}},U9=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=a,c=Z().getBool("WEBGL_PACK_NORMALIZATION")?new V9(r.shape,s,i,o,l):new B9(r.shape,s,i,o,l);return n.runWebGLProgram(c,[r],r.dtype)},G9={kernelName:rc,backendName:"webgl",kernelFunc:U9},H9=class{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${a}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${a})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},j9=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:c,beta:u}=a,p=new H9(r.shape,o,l,c,u);return n.runWebGLProgram(p,[r,s,i],r.dtype)},q9={kernelName:_d,backendName:"webgl",kernelFunc:j9};function K9(e,t,n,a){let r=w.sizeFromShape(t),s=w.sizeFromShape(e.shape)/r,i=ge({inputs:{x:e},attrs:{shape:[s,r]},backend:a}),o=ji(i,e.dtype,"max",a),l=ge({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),l}function LN(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a,o=r.shape.length,l=w.parseAxisParam(s,r.shape),c=l,u=_.getAxesPermutation(c,o),p=u!=null,d=n.shouldExecuteOnCPU([r]),h=r;if(p){if(d){let b=n.texData.get(h.dataId).values,x=new Array(o);for(let k=0;k<x.length;k++)x[k]=r.shape[u[k]];let v=$v(b,r.shape,r.dtype,u,x);h=n.makeTensorInfo(x,r.dtype);let T=n.texData.get(h.dataId);T.values=v}else h=$m(r,u,n);c=_.getInnerMostAxes(c.length,o)}_.assertAxesAreInnerMostDims("max",c,o);let[m,f]=_.computeOutAndReduceShapes(h.shape,c),g=m;i&&(g=_.expandShapeToKeepDim(m,l));let y;if(d){let b=n.texData.get(h.dataId).values,x=I8(b,w.sizeFromShape(f),g,r.dtype);y=n.makeTensorInfo(g,r.dtype);let v=n.texData.get(y.dataId);v.values=x}else y=K9(h,f,g,n);return p&&n.disposeIntermediateTensorInfo(h),y}var X9={kernelName:Gs,backendName:"webgl",kernelFunc:LN},Y9=tN+`
  return max(a, b);
`,J9=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Fm+`
  return result;
`,Q9=on({opSnippet:Y9,packedOpSnippet:J9,cpuKernelImpl:T8}),Z9={kernelName:Hs,backendName:"webgl",kernelFunc:Q9};function eJ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;cp(r,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a,c=1;w.assert(_.eitherStridesOrDilationsAreOne(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let u=_.computePool2DInfo(r.shape,s,i,c,o,l);if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))return Gn({inputs:{x:r},backend:n});let p=new hp(u,"max",!1);return n.runWebGLProgram(p,[r],r.dtype)}var tJ={kernelName:js,backendName:"webgl",kernelFunc:eJ};function nJ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:c}=a,u=[1,1,1],p=_.computePool3DInfo(r.shape,s,i,u,o,c,l),d=new Pv(p,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}var aJ={kernelName:sc,backendName:"webgl",kernelFunc:nJ},rJ=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=s-1-e.padInfo.left,l=r*s-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},sJ=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,u=o-1-e.padInfo.front,p=l-1-e.padInfo.top,d=c-1-e.padInfo.left,h=o*l*c-1;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${p}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function iJ(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:l,pad:c,dimRoundingMode:u}=a,p=[1,1,1],d=_.computePool3DInfo(i.shape,o,l,p,c,u),h=new Pv(d,"max",!0),m=n.runWebGLProgram(h,[i],i.dtype),f=new sJ(d),g=n.runWebGLProgram(f,[r,m],i.dtype);return n.disposeIntermediateTensorInfo(m),g}var oJ={kernelName:Fd,backendName:"webgl",kernelFunc:iJ};function lJ(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,o=s;cp([s,i],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:p}=a,d=_.computePool2DInfo(o.shape,l,c,1,u,p),h=!0,m=new hp(d,"max",h),f=n.runWebGLProgram(m,[o],o.dtype),g=new rJ(d),y=n.runWebGLProgram(g,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),y}var uJ={kernelName:Ed,backendName:"webgl",kernelFunc:lJ};function cJ(e,t,n,a){let r=new hp(n,"max",!1),s=a.runWebGLProgram(r,[e],"float32");r=new hp(n,"max",!0,!0,t);let i=a.runWebGLProgram(r,[e],"float32");return[s,i]}var pJ={kernelName:Ad,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;w.assert(a.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`);let c=[1,1];w.assert(_.eitherStridesOrDilationsAreOne(s,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`);let u=_.computePool2DInfo(a.shape,r,s,c,i),[p,d]=cJ(a,o,u,l);return[p,d]}};function dJ(e,t,n,a){let r=w.sizeFromShape(t),s=w.sizeFromShape(e.shape)/r,i=ge({inputs:{x:e},attrs:{shape:[s,r]},backend:a}),o=ji(i,"float32","mean",a),l=ge({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),l}var hJ={kernelName:qs,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{keepDims:r,axis:s}=t,i=n,o=a.shape.length,l=w.parseAxisParam(s,a.shape),c=l,u=_.getAxesPermutation(c,o),p=u!=null,d=i.shouldExecuteOnCPU([a]),h=[],m=a;if(p){if(d){let x=i.texData.get(m.dataId).values,v=new Array(o);for(let S=0;S<v.length;S++)v[S]=a.shape[u[S]];let T=$v(x,a.shape,a.dtype,u,v);m=i.makeTensorInfo(v,a.dtype);let k=i.texData.get(m.dataId);k.values=T}else m=$m(a,u,i);h.push(m),c=_.getInnerMostAxes(c.length,o)}_.assertAxesAreInnerMostDims("sum",c,o);let[f,g]=_.computeOutAndReduceShapes(m.shape,c),y=f;r&&(y=_.expandShapeToKeepDim(f,l));let b=dJ(m,g,y,i);for(let x of h)i.disposeIntermediateTensorInfo(x);return b}};function mJ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=w.parseAxisParam(s,r.shape),c=l,u=_.getAxesPermutation(c,o),p=r;u!=null&&(p=An({inputs:{x:r},backend:n,attrs:{perm:u}}),c=_.getInnerMostAxes(c.length,r.shape.length)),_.assertAxesAreInnerMostDims("min",c,o);let[d,h]=_.computeOutAndReduceShapes(p.shape,c),m=w.sizeFromShape(h),f=ge({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}}),g=ji(f,f.dtype,"min",n),y;if(i){let b=_.expandShapeToKeepDim(d,l);y=ge({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=ge({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(p),y}var fJ={kernelName:Ks,backendName:"webgl",kernelFunc:mJ},gJ=tN+`
  return min(a, b);
`,yJ=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Fm+`
  return result;
`,bJ=on({opSnippet:gJ,packedOpSnippet:yJ,cpuKernelImpl:N8}),xJ={kernelName:Xs,backendName:"webgl",kernelFunc:bJ},vJ=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((c,u)=>c[0]+e[u]+c[1]);let a=e.length,r=dt(a),s=t.map(c=>c[0]).join(","),i=t.map((c,u)=>c[0]+e[u]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),l=n==="reflect"?0:1;if(a===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${s});
      ${r} end = ${r}(${i});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${a}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}},wJ=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,m)=>h[0]+e[m]+h[1]);let a=e.length,r=dt(a),s=t.map(h=>h[0]).join(","),i=t.map((h,m)=>h[0]+e[m]).join(","),o=gn("rc",a),l=gn("source",a),c=`${o[a-1]} < ${this.outputShape[a-1]}`,u=a===1?"source":`vec2(${l.slice(-2).join()})`,p=n==="reflect"?0:1,d="";if(a===1){let h=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${p};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${p};
        }
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${o[a-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
      `}else{let h=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${p}) +
                gte * ((end - 1) * 2 - source + ${p});
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${o[a-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
        rc = outputLoc;
        ${o[a-2]} += 1;
        if(${o[a-2]} < ${this.outputShape[a-2]}) {
          ${h}
          result[2] = getChannel(getX(${l.join()}), ${u});
          ${o[a-1]} += 1;
          if(${c}) {
            ${h}
            result[3] = getChannel(getX(${l.join()}), ${u});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${s});
      const ${r} end = ${r}(${i});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}},kJ=({inputs:e,backend:t,attrs:n})=>{let{x:a}=e,{paddings:r,mode:s}=n,i=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wJ(a.shape,r,s):new vJ(a.shape,r,s);return t.runWebGLProgram(i,[a],a.dtype)},IJ={kernelName:ic,backendName:"webgl",kernelFunc:kJ},TJ=`if (b == 0.0) return NAN;
  return mod(a, b);`,NJ=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+Fm+`
  return result;
`,SJ=on({opSnippet:TJ,packedOpSnippet:NJ}),CJ={kernelName:el,backendName:"webgl",kernelFunc:SJ},_J=class{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`
      uniform float seed;

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.seedLoc==null&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}},EJ=`
if (a == b) {
  return 1.0;
};
return a / b;`,FJ=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,zN=on({opSnippet:EJ,packedOpSnippet:FJ,checkOutOfBounds:!0}),AJ={kernelName:Ms,backendName:"webgl",kernelFunc:zN},WN="return a - b;",BN=on({opSnippet:WN,packedOpSnippet:WN,supportsComplex:!0,cpuKernelImpl:D8}),$J={kernelName:hi,backendName:"webgl",kernelFunc:BN};function VN(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=w.parseAxisParam([s],r.shape),o=LN({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=_.expandShapeToKeepDim(o.shape,i),c=ge({inputs:{x:o},backend:n,attrs:{shape:l}}),u=BN({inputs:{a:r,b:c},backend:n}),p=DN({inputs:{x:u},backend:n}),d=Mv({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),h=ge({inputs:{x:d},backend:n,attrs:{shape:l}}),m=zN({inputs:{a:p,b:h},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),m}var DJ={kernelName:pi,backendName:"webgl",kernelFunc:VN};function RJ(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=a,l=o?r:VN({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),c=l.shape[0],u=l.shape[1],p=new _J(c,u,s),d=p.getCustomSetupFunc(i),h=n.runWebGLProgram(p,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),h}var MJ={kernelName:$d,backendName:"webgl",kernelFunc:RJ},UN="return -x;";function PJ(e){let{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){let s=n.texData.get(a.dataId),[i,o]=C8(s.values,a.shape,a.dtype);return n.makeTensorInfo(o,a.dtype,i)}let r;return Z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new cu(a.shape,UN):r=new ds(a.shape,UN),n.runWebGLProgram(r,[a],a.dtype)}var OJ={kernelName:tl,backendName:"webgl",kernelFunc:PJ},LJ=Ya.nonMaxSuppressionV3Impl;function zJ(e){_.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=a,c=n.readSync(r.dataId),u=n.readSync(s.dataId),{selectedIndices:p}=LJ(c,u,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var WJ={kernelName:al,backendName:"webgl",kernelFunc:zJ},BJ=Ya.nonMaxSuppressionV4Impl;function VJ(e){_.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:c}=a,u=n.readSync(r.dataId),p=n.readSync(s.dataId),{selectedIndices:d,validOutputs:h}=BJ(u,p,i,o,l,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var UJ={kernelName:rl,backendName:"webgl",kernelFunc:VJ},GJ=Ya.nonMaxSuppressionV5Impl;function HJ(e){_.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:c}=a,u=n.readSync(r.dataId),p=n.readSync(s.dataId),d=i,h=o,m=l,f=c,{selectedIndices:g,selectedScores:y}=GJ(u,p,d,h,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var jJ={kernelName:sl,backendName:"webgl",kernelFunc:HJ},qJ=class{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${a}), float(${n}),
                      float(index == coords.y)));
      }
    `}},KJ=e=>{let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{depth:s,onValue:i,offValue:o}=a,l=w.sizeFromShape(r.shape),c=new qJ(l,s,i,o),u=ge({inputs:{x:r},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(c,[u],r.dtype);n.disposeIntermediateTensorInfo(u);let d=[...r.shape,s],h=ge({inputs:{x:p},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(p),h},XJ={kernelName:Js,backendName:"webgl",kernelFunc:KJ};function Om(e){let{inputs:t,backend:n}=e,{x:a}=t;if(a.dtype==="complex64"){let r=fp({inputs:{input:a},backend:n}),s=Om({inputs:{x:r},backend:n}),i=Pm({inputs:{input:a},backend:n}),o=Om({inputs:{x:i},backend:n}),l=hs({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Wv({attrs:{shape:a.shape,dtype:a.dtype,value:a.dtype==="string"?"":0},backend:n})}var YJ={kernelName:Il,backendName:"webgl",kernelFunc:Om};function GN(e){let{inputs:t,backend:n}=e,{x:a}=t;if(a.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(a.dtype==="complex64"){let r=fp({inputs:{input:a},backend:n}),s=GN({inputs:{x:r},backend:n}),i=Pm({inputs:{input:a},backend:n}),o=Om({inputs:{x:i},backend:n}),l=hs({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Wv({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:n})}var JJ={kernelName:il,backendName:"webgl",kernelFunc:GN};function QJ(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(t.length===1)return zv({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(s,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(u=>{let p=zv({inputs:{input:u},backend:n,attrs:{dim:r}});return o.push(p),p}),c=IN({inputs:l,backend:n,attrs:{axis:r}});return o.forEach(u=>n.disposeIntermediateTensorInfo(u)),c}var ZJ={kernelName:ol,backendName:"webgl",kernelFunc:QJ},eQ=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((l,c)=>l[0]+e[c]+l[1]);let a=e.length,r=dt(a),s=t.map(l=>l[0]).join(","),i=t.map((l,c)=>l[0]+e[c]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);if(a===1){this.userCode=`
        int start = ${s};
        int end = ${i};
        uniform float value;

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${s});
      ${r} end = ${r}(${i});
      uniform float value;

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.valueLoc==null&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}},tQ=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((m,f)=>m[0]+e[f]+m[1]);let a=e.length,r=dt(a),s=t.map(m=>m[0]).join(","),i=t.map((m,f)=>m[0]+e[f]).join(","),o=gn("rc",a),l=gn("source",a),c=`${o[a-1]} < ${this.outputShape[a-1]}`,u=a===1?"source":`vec2(${l.slice(-2).join()})`,p=[`${r} rc = outputLoc;`,`${o[a-1]} += 1;
       if(${c}) {
      `,a===1?"":`}
       rc = outputLoc;
       ${o[a-2]} += 1;
       if(${o[a-2]} < ${this.outputShape[a-2]}) {`,a===1?"":`  ${o[a-1]} += 1;
         if(${c}) {`],d=a===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let m=0,f=a===1?2:4;m<f;m++)h+=`
        ${p[m]}
        if (${d}) {
          result[${m}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${m}] = getChannel(getX(${l.join()}), ${u});
        }
      `;h+=a===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${s});
      const ${r} end = ${r}(${i});
      uniform float value;

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.valueLoc==null&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}},HN=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a,o=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tQ(r.shape,s,i):new eQ(r.shape,s,i),l=o.getCustomSetupFunc(i);return n.runWebGLProgram(o,[r],r.dtype,l)},nQ={kernelName:Qs,backendName:"webgl",kernelFunc:HN},aQ=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,rQ=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+Fm+`
  return result;
`,sQ=on({opSnippet:aQ,packedOpSnippet:rQ}),iQ={kernelName:Zs,backendName:"webgl",kernelFunc:sQ};function oQ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=[],c=w.parseAxisParam(s,r.shape),u=c,p=_.getAxesPermutation(u,o),d=r;p!=null&&(d=An({inputs:{x:r},backend:n,attrs:{perm:p}}),u=_.getInnerMostAxes(u.length,o),l.push(d)),_.assertAxesAreInnerMostDims("prod",u,o);let h;if(n.shouldExecuteOnCPU([d])){let m=n.texData.get(d.dataId).values,{outVals:f,outShape:g,outDtype:y}=_8(d.shape,d.dtype,m,u);h=n.makeTensorInfo(g,y,f)}else{let[m,f]=_.computeOutAndReduceShapes(d.shape,u),g=w.sizeFromShape(f),y=ge({inputs:{x:d},backend:n,attrs:{shape:[-1,g]}}),b=Hd(r.dtype),x=ji(y,b,"prod",n);h=ge({inputs:{x},backend:n,attrs:{shape:m}}),l.push(y),l.push(x)}if(i){l.push(h);let m=_.expandShapeToKeepDim(h.shape,c);h=ge({inputs:{x:h},backend:n,attrs:{shape:m}})}return l.forEach(m=>n.disposeIntermediateTensorInfo(m)),h}var lQ={kernelName:ll,backendName:"webgl",kernelFunc:oQ},jN=e=>{let{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:i}=n,o=E8(a,r,s,i);return t.makeTensorInfo([o.length],i,o)},uQ={kernelName:oc,backendName:"webgl",kernelFunc:jN},cQ="return 1.0 / x;",pQ=Ke({opSnippet:cQ}),dQ={kernelName:ul,backendName:"webgl",kernelFunc:pQ},hQ=Ma+`
  return (x < 0.0) ? 0.0 : x;
`,mQ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,fQ=Ke({opSnippet:hQ,packedOpSnippet:mQ}),gQ={kernelName:ti,backendName:"webgl",kernelFunc:fQ},yQ=Ma+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,bQ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,xQ=Ke({opSnippet:yQ,packedOpSnippet:bQ}),vQ={kernelName:ai,backendName:"webgl",kernelFunc:xQ},wQ=class{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let c=[a&&t>1?i-1:i,a&&n>1?o-1:o],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],p;r?p="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/u[0]},
          ${c[1]/u[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},kQ=class{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let c=[a&&t>1?i-1:i,a&&n>1?o-1:o],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],p;r?p="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/u[0]},
          ${c[1]/u[1]},
          ${c[1]/u[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function IQ(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,c]=o,u=Z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new kQ(r.shape,l,c,s,i):new wQ(r.shape,l,c,s,i);return n.runWebGLProgram(u,[r],"float32")}var TQ={kernelName:ni,backendName:"webgl",kernelFunc:IQ},NQ=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,a,r]=t,[,s,i]=e,o=[n&&s>1?a-1:a,n&&i>1?r-1:r],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/l[0],u=o[1]/l[1],p=1/c,d=1/u,h=Math.ceil(p)*2+2,m=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${u});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${h});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function SQ(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,o=new NQ(s.shape,r.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var CQ={kernelName:Md,backendName:"webgl",kernelFunc:SQ},_Q=class{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let c=[a&&t>1?i-1:i,a&&n>1?o-1:o],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],p=a?"0.5":"0.0",d;r?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/u[0]},
          ${c[1]/u[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};function EQ(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,c]=o,u=new _Q(r.shape,l,c,s,i);return n.runWebGLProgram(u,[r],r.dtype)}var FQ={kernelName:lc,backendName:"webgl",kernelFunc:EQ},AQ=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,a,r]=t,[,s,i]=e,o=[n&&s>1?a-1:a,n&&i>1?r-1:r],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/l[0],u=o[1]/l[1],p=1/c,d=1/u,h=Math.ceil(p)*2+2,m=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${u});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${h});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${a}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function $Q(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,o=new AQ(s.shape,r.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var DQ={kernelName:Rd,backendName:"webgl",kernelFunc:$Q},RQ=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let a=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,r=e.map((i,o)=>a(o)).join(","),s=dt(n);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}},MQ=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let a=gn("rc",n),r=`${a[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${a[n-2]} + 1 < ${this.outputShape[n-2]}`,i=dt(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(a.slice())};
          if(${r}){
            result.g = ${l(a.slice())};
          }
          if(${s}) {
            result.b = ${c(a.slice())};
            if(${r}) {
              result.a = ${u(a.slice())};
            }
          }
          setOutput(result);
        }
    `;function o(h){return p(h)}function l(h){return h[n-1]="("+h[n-1]+" + 1)",p(h)}function c(h){return h[n-2]="("+h[n-2]+" + 1)",p(h)}function u(h){return h[n-1]="("+h[n-1]+" + 1)",h[n-2]="("+h[n-2]+" + 1)",p(h)}function p(h){let m=e.map((y,b)=>d(b,h)),f=m.join(","),g=m.slice(-2).join(",");return`getChannel(getX(${f}), vec2(${g}))`}function d(h,m){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${m[h]} - 1`:`${m[h]}`}}};function PQ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,i=r.shape.length,o=w.parseAxisParam(s,r.shape);if(i===0)return Gn({inputs:{x:r},backend:n});let l=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new MQ(r.shape,o):new RQ(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}var OQ={kernelName:ri,backendName:"webgl",kernelFunc:PQ},LQ=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[];let n=e[1],a=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        uniform vec4 params;
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}getCustomSetupFunc(e,t,n,a){return(r,s)=>{this.paramsLoc==null&&(this.paramsLoc=r.getUniformLocationNoThrow(s,"params")),r.gl.uniform4f(this.paramsLoc,e,t,n,a)}}},zQ={kernelName:Tl,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,{radians:r,fillValue:s,center:i}=t,o=n,l=new LQ(a.shape,s),[c,u]=_.getImageCenter(i,a.shape[1],a.shape[2]),p=l.getCustomSetupFunc(c,u,Math.sin(r),Math.cos(r));return o.runWebGLProgram(l,[a],a.dtype,p)}},WQ=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,BQ=Ke({opSnippet:WQ}),VQ={kernelName:si,backendName:"webgl",kernelFunc:BQ},UQ="return inversesqrt(x);",GQ=Ke({opSnippet:UQ,cpuKernelImpl:F8}),HQ={kernelName:ii,backendName:"webgl",kernelFunc:GQ},qN=class{constructor(e,t,n,a,r,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let o=dt(r.length),l=dt(s.length),c="";n===1?c="i":n===2&&(c="i, j");let u=`getIndices(${c})`,p="";a===1?p="i":a===2&&(p="i, coords[1]");let d=`getUpdates(${p})`,h=t>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${r});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${u});
              flattenedIndex += index * ${h};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function jQ(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:o,numUpdates:l,sliceSize:c,strides:u,outputSize:p}=_.calculateShapes(s,r,i),d=[p/c,c];if(p===0)return n.makeTensorInfo(i,r.dtype);let h=ge({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),m=ge({inputs:{x:s},backend:n,attrs:{shape:[l,c]}}),f=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new qN(l,o,h.shape.length,m.shape.length,u,d),y=n.runWebGLProgram(g,[m,h,f],m.dtype),b=ge({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(f),b}var qQ={kernelName:pl,backendName:"webgl",kernelFunc:jQ},KQ=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let a,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",a="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],l=[];for(let c=0;c<t.length;c++)l.push(`${i[c]}`),c<e&&o.push(`${i[c]}`);a=o.join(),r=l.join()}let s=dt(n);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${a});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};function XQ(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=new KQ(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[a,r,s],ua(r.dtype,s.dtype))}var YQ={kernelName:dl,backendName:"webgl",kernelFunc:XQ},JQ=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${_.SELU_SCALEALPHA};
  float scale = ${_.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,QQ=Ke({opSnippet:JQ}),ZQ={kernelName:hl,backendName:"webgl",kernelFunc:QQ},eZ="return 1.0 / (1.0 + exp(-1.0 * x));",tZ=Ke({opSnippet:eZ}),nZ={kernelName:li,backendName:"webgl",kernelFunc:tZ},aZ=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,rZ=Ke({opSnippet:aZ}),sZ={kernelName:gl,backendName:"webgl",kernelFunc:rZ},iZ=iN+`
  return sin(x);
`,oZ=Ke({opSnippet:iZ}),lZ={kernelName:oi,backendName:"webgl",kernelFunc:oZ},uZ=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,cZ=Ke({opSnippet:uZ}),pZ={kernelName:fl,backendName:"webgl",kernelFunc:cZ},dZ=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,hZ=Ke({opSnippet:dZ}),mZ={kernelName:yl,backendName:"webgl",kernelFunc:hZ},fZ=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;w.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((y,b)=>y*b),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<r.shape.length;++y)l.push([0,0]);let c=[],u=HN({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),p=_.getReshaped(u.shape,s,o,!1),d=_.getPermuted(p.length,s.length,!1),h=_.getReshapedPermuted(u.shape,s,o,!1),m=ge({inputs:{x:u},backend:n,attrs:{shape:p}}),f=An({inputs:{x:m},backend:n,attrs:{perm:d}}),g=ge({inputs:{x:f},backend:n,attrs:{shape:h}});return c.push(u),c.push(m),c.push(f),c.forEach(y=>n.disposeIntermediateTensorInfo(y)),g},gZ={kernelName:uc,backendName:"webgl",kernelFunc:fZ};function yZ(e){let{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:c,strides:u,outputSize:p}=_.calculateShapes(s,r,o),d=!1,h=new qN(c,l,r.shape.length,s.shape.length,u,[p,1],d),m=n.runWebGLProgram(h,[s,r,i],s.dtype),f=ge({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),f}var bZ={kernelName:Pd,backendName:"webgl",kernelFunc:yZ};function xZ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=w.parseAxisParam(i,r.shape)[0],l=_.prepareSplitSize(r,s,o),c=r.shape.length,u=new Array(c).fill(0),p=r.shape.slice();return l.map(d=>{let h=[...p];h[o]=d;let m=mp({inputs:{x:r},backend:n,attrs:{begin:u,size:h}});return u[o]+=d,m})}var vZ={kernelName:bl,backendName:"webgl",kernelFunc:xZ},wZ="return sqrt(x);",kZ=Ke({opSnippet:wZ}),IZ={kernelName:ui,backendName:"webgl",kernelFunc:kZ},TZ="return x * x;",NZ=Ke({opSnippet:TZ}),SZ={kernelName:cc,backendName:"webgl",kernelFunc:NZ},KN="return (a - b) * (a - b);",CZ=on({opSnippet:KN,packedOpSnippet:KN}),_Z={kernelName:di,backendName:"webgl",kernelFunc:CZ};function EZ({inputs:e,attrs:t,backend:n}){let{x:a}=e,r=Ma+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new ds(a.shape,r);return n.runWebGLProgram(s,[a],a.dtype)}var FZ={kernelName:Gr,backendName:"webgl",kernelFunc:EZ},AZ=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let a=n.length,r=dt(n.length),s=dt(n.length),i="";if(a===1)i="coords * strides + begin";else{let o=0;i=n.map((l,c)=>(o++,n.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${o-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function $Z(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:p,shrinkAxisMask:d}=a,{nonStrided:h,$begin:m,$strides:f,size:g,newShape:y,outShape:b}=an.sliceInfo(r.shape,s,i,o,l,c,u,p,d),x=ge({inputs:{x:r},backend:n,attrs:{shape:y}}),v;if(h){let k=mp({inputs:{x},backend:n,attrs:{begin:m,size:g}});v=ge({inputs:{x:k},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(k)}else if(b.some(k=>k===0))v=n.makeTensorInfo(b,r.dtype,[]);else if(n.shouldExecuteOnCPU([x])){let k=n.texData.get(x.dataId).values,S=Me(x.shape,x.dtype,k),F=$8(b,S,f,m);v=n.makeTensorInfo(b,x.dtype,F.values)}else{let k=new AZ(m,f,b);v=n.runWebGLProgram(k,[x],x.dtype)}let T=ge({inputs:{x:v},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),T}var DZ={kernelName:xl,backendName:"webgl",kernelFunc:$Z},RZ="return tan(x);",MZ=Ke({opSnippet:RZ}),PZ={kernelName:vl,backendName:"webgl",kernelFunc:MZ},OZ=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,LZ=Ke({opSnippet:OZ}),zZ={kernelName:mi,backendName:"webgl",kernelFunc:LZ},BZ=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;let a=dt(this.rank),r=WZ(e);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function WZ(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<e.length;r++)a.push(`imod(${n[r]}, ${e[r]})`);return a.join()}function XN(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if(r.dtype==="string"){let o=n.readSync(r.dataId).map(u=>w.decodeString(u)),l=Me(r.shape,r.dtype,o),c=R8(l,s);return n.makeTensorInfo(c.shape,c.dtype,c.values)}let i=new BZ(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}var VZ={kernelName:Ur,backendName:"webgl",kernelFunc:XN};function UZ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a,o=n.readSync(r.dataId),[l,c]=M8(o,r.shape,r.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}var GZ={kernelName:wl,backendName:"webgl",kernelFunc:UZ},HZ=class{constructor(e,t,n,a,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i=n==="nearest"?1:2,o;switch(a){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${o} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function jZ(e){let{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:c}=a,[u,p,d,h]=r.shape,[m,f]=c!=null?c:[p,d],g=[u,m,f,h],y=new HZ(p,d,i,o,l,g);return n.runWebGLProgram(y,[r,s],"float32")}var qZ={kernelName:Od,backendName:"webgl",kernelFunc:jZ};function KZ(e){let{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;cp(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=a.readSync(s.dataId),{outputValues:o,outputShape:l,indices:c}=P8(i,r,s.shape,s.dtype);return[a.makeTensorInfo(l,s.dtype,o),a.makeTensorInfo([c.length],"int32",c)]}var XZ={kernelName:Ld,backendName:"webgl",kernelFunc:KZ};function YZ(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:s}=a;s<0&&(s+=r.shape.length);let i=r,o=i.shape.length,l=r.shape[s],c=new Array(o-1),u=0;for(let f=0;f<o;f++)f!==s&&(c[u++]=i.shape[f]);let p=[],d=new Array(o).fill(0),h=i.shape.slice();h[s]=1;let m=new Array(l);for(let f=0;f<m.length;f++){d[s]=f;let g=mp({inputs:{x:i},backend:n,attrs:{begin:d,size:h}}),y=ge({inputs:{x:g},backend:n,attrs:{shape:c}});m[f]=y,p.push(g)}return p.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var JZ={kernelName:kl,backendName:"webgl",kernelFunc:YZ},QZ=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,a=e.batchSize,r=e.inSize,s=e.numSegments,i=s*Math.ceil(r/n);this.outputShape=[a,i];let o="0.0",l="sumValue",c=Math.floor(n/4)*4,u=n%4,p=`
        sumValue += dot(values, segFilter);
    `,d="";r%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${o};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${p}
        }

        int inIdx = inOffset + ${c};
        if (${u===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${p}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${p}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${p}
        }
        setOutput(${l});
      }
    `}};function ZZ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a,o=r.shape.length,l=[],c=0,u=_.getAxesPermutation([c],o),p=r;u!=null&&(p=An({inputs:{x:r},backend:n,attrs:{perm:u}}),l.push(p),c=_.getInnerMostAxes(1,o)[0]);let d=_.segment_util.computeOutShape(p.shape,c,i),h=w.sizeFromShape([p.shape[c]]),m=ge({inputs:{x:p},backend:n,attrs:{shape:[-1,h]}});l.push(m);let f=Hd(r.dtype),g=(v,T,k,S,F)=>{let A=v.shape[0],R=v.shape[1],P=_.segment_util.segOpComputeOptimalWindowSize(R,F),z={windowSize:P,inSize:R,batchSize:A,numSegments:F},V=new QZ(z,T),G=n.compileAndRun(V,[v,k],S);if(l.push(G),G.shape[1]===F)return G;let H=jN({backend:n,attrs:{start:0,stop:F,step:1,dtype:"float32"}}),K=XN({inputs:{x:H},backend:n,attrs:{reps:[R/P]}});return l.push(H),l.push(K),g(G,T,K,S,F)},y=g(m,"unsortedSegmentSum",s,f,i),b=ge({inputs:{x:y},backend:n,attrs:{shape:d}}),x=b;if(u!=null){l.push(b);let v=_.getUndoAxesPermutation(u);x=An({inputs:{x},backend:n,attrs:{perm:v}})}return l.forEach(v=>n.disposeIntermediateTensorInfo(v)),x}var eee={kernelName:pc,backendName:"webgl",kernelFunc:ZZ},tee=[G9,q9,$K,RK,OK,WK,VK,HK,qK,XK,ZK,tX,rX,oX,mX,cX,yX,wX,xX,NX,CX,EX,DX,WX,VX,KX,YX,eY,aY,hK,oY,yY,xY,pY,IY,NY,wY,_Y,AY,RY,PY,LY,BY,qY,XY,UY,QY,t7,s7,u7,h7,g7,y7,b7,v7,k7,T7,S7,_7,$7,P7,L7,W7,U7,q7,J7,t9,dK,a9,iY,i9,u9,d9,fK,g9,v9,k9,E9,S9,D9,P9,W9,X9,aJ,tJ,oJ,uJ,pJ,Z9,hJ,fJ,xJ,IJ,CJ,MJ,vK,OJ,WJ,UJ,jJ,GX,XJ,JJ,ZJ,nQ,iQ,yK,lQ,uQ,HX,AJ,dQ,vQ,gQ,kK,TQ,CQ,FQ,DQ,OQ,zQ,VQ,HQ,qQ,YQ,ZQ,nZ,sZ,lZ,pZ,LX,DJ,mZ,gZ,bZ,vZ,IZ,SZ,_Z,FZ,DZ,$J,EK,PZ,zZ,VZ,GZ,qZ,FK,XZ,JZ,eee,YJ];for(let e of tee)hc(e);var nee="3.3.0",aee={"tfjs-core":K0,"tfjs-backend-cpu":IU,"tfjs-backend-webgl":pK,"tfjs-data":wT,"tfjs-layers":sm,"tfjs-converter":fT,tfjs:nee},Hn;(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(Hn||(Hn={}));var gp;(function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu"})(gp||(gp={}));var YN;function ree(e){YN=e.wasm.cwrap(gi,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function see(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t;if(r.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:p}=a,d=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(s.dataId).id,m=0;if(i!=null){let F=n.dataIdMap.get(i.dataId);if(F.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${F.shape.length}.`);m=F.id}let f=o==null?0:n.dataIdMap.get(o.dataId).id,g=gp[u];if(g==null)throw new Error(`${u} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?r.shape[2]:r.shape[1],b=c?s.shape[1]:s.shape[2],x=r.shape[0],v=n.makeOutput([x,y,b],r.dtype),T=n.dataIdMap.get(v.dataId).id,k=new Uint8Array(new Int32Array(r.shape).buffer),S=new Uint8Array(new Int32Array(s.shape).buffer);return YN(d,k,r.shape.length,h,S,s.shape.length,l,c,g,m,f,p||0,T),v}var iee={kernelName:gi,backendName:"wasm",setupFunc:ree,kernelFunc:see};function $n(e){let t;function n(r){t=r.wasm.cwrap(e,null,["number","number"])}function a(r){let{backend:s,inputs:{x:i}}=r,o=s.dataIdMap.get(i.dataId).id,l=s.makeOutput(i.shape,i.dtype),c=s.dataIdMap.get(l.dataId).id;return w.sizeFromShape(l.shape)===0||t(o,c),l}return{kernelName:e,backendName:"wasm",setupFunc:n,kernelFunc:a}}var oee=$n(So);function yn(e,t,n){let a;function r(i){a=i.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function s(i){let{backend:o,inputs:l}=i,{a:c,b:u}=l,p=o.dataIdMap.get(c.dataId).id,d=o.dataIdMap.get(u.dataId).id,h=n!=null?n:c.dtype,m=_.assertAndGetBroadcastShape(c.shape,u.shape),f=o.makeOutput(m,h);if(w.sizeFromShape(m)===0)return f;let g=new Uint8Array(new Int32Array(c.shape).buffer),y=new Uint8Array(new Int32Array(u.shape).buffer),b=o.dataIdMap.get(f.dataId).id,x=()=>a(p,g,c.shape.length,d,y,u.shape.length,Hn[c.dtype],b);if(t&&c.dtype==="float32")return x(),f;let v=_.getBroadcastDims(c.shape,m),T=_.getBroadcastDims(u.shape,m),k=v.every((F,A)=>F===A),S=T.every((F,A)=>F===A);if(k&&S)return x(),f;throw new Error(`Broadcasting along outer dims is not yet supported for ${c.dtype} ${e}.`)}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:s}}var lee=!0,uee=yn(Br,lee),JN;function cee(e){JN=e.wasm.cwrap(Ts,null,["array","number","number","number"])}function pee(e){let{inputs:t,backend:n}=e,a=n.makeOutput(t[0].shape,t[0].dtype);if(w.sizeFromShape(a.shape)===0)return a;let r=t.map(o=>n.dataIdMap.get(o.dataId).id),s=new Uint8Array(new Int32Array(r).buffer),i=n.dataIdMap.get(a.dataId).id;return JN(s,r.length,Hn[a.dtype],i),a}var dee={kernelName:Ts,backendName:"wasm",setupFunc:cee,kernelFunc:pee};function Lm(e){let{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(a).set(r),a}var hee={kernelName:Bs,backendName:"wasm",kernelFunc:Lm},QN;function mee(e){QN=e.wasm.cwrap(fi,null,["number","array","number","number","number","array","number"])}function zm(e){let{inputs:t,backend:n,attrs:a}=e,[r,s]=gee(t.x.shape,a.perm),i=!0;for(let m=0;m<s.length;m++)s[m]!==m&&(i=!1);let o=fee(t.x.shape,a.perm),l={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(i){let m=Lm({inputs:t,backend:n});return m.shape=o,m}let c=n.makeOutput(o,l.dtype),u=n.dataIdMap.get(l.dataId).id,p=n.dataIdMap.get(c.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),h=new Uint8Array(new Int32Array(l.shape).buffer);return QN(u,h,l.shape.length,Hn[l.dtype],p,d,s.length),c}function fee(e,t){let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];return n}function gee(e,t){let n=[],a=[];for(let r=0;r<e.length;++r)e[r]!==1&&n.push(e[r]),e[t[r]]!==1&&a.push(t[r]);for(let r=0;r<a.length;++r){let s=-1;for(let i=0;i<a.length;++i)a[i]>=r&&(s===-1||a[s]>a[i])&&(s=i);a[s]=r}return[n,a]}var yee={kernelName:fi,backendName:"wasm",kernelFunc:zm,setupFunc:mee};function mu(e,t,n){let a=e.shape,r=e.shape.length,s=w.parseAxisParam(t,a),i=s,o=_.getAxesPermutation(i,r),l=null,c=!1;if(o!=null){let u=new Array(r);for(let d=0;d<u.length;d++)u[d]=a[o[d]];i=_.getInnerMostAxes(i.length,r),l=zm({inputs:{x:e},attrs:{perm:o},backend:n});let p=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==p&&(c=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:c}}var ZN;function bee(e){ZN=e.wasm.cwrap(Ns,null,["number","number","number","number","number"])}function xee(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r}=a,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=i,l=s,{transposed:c,axes:u,inputWasTransposed:p}=mu(s,r,t);if(p){let y=t.dataIdMap.get(c.dataId).id;y!==i&&(l=c,o=y)}let d=l.shape.slice(0,-1),h=t.makeOutput(d,"int32"),m=t.dataIdMap.get(h.dataId).id,f=w.sizeFromShape(h.shape),g=l.shape[u[0]];return ZN(o,Hn[l.dtype],f,g,m),p&&t.disposeData(c.dataId),h}var vee={kernelName:Ns,backendName:"wasm",kernelFunc:xee,setupFunc:bee},eS;function wee(e){eS=e.wasm.cwrap(Ss,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function kee(e){let{inputs:t,attrs:n,backend:a}=e,r=t.x,s=a.dataIdMap.get(r.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:c}=n,u=_.computePool2DInfo(r.shape,i,o,1,l,c),p=u.filterHeight,d=u.filterWidth,h=u.padInfo.top,m=u.padInfo.right,f=u.padInfo.bottom,g=u.padInfo.left,y=u.strideHeight,b=u.strideWidth,x=u.inChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);if(u.dilationWidth!==1||u.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${u.dilationHeight}, ${u.dilationWidth}].`);let v=a.makeOutput(u.outShape,"float32"),T=a.dataIdMap.get(v.dataId).id;return eS(s,r.shape[0],r.shape[1],r.shape[2],p,d,h,m,f,g,y,b,x,T),v}var Iee={kernelName:Ss,backendName:"wasm",setupFunc:wee,kernelFunc:kee};function Pa(e){let{inputs:t,attrs:n}=e,{x:a}=t,{shape:r}=n,s=w.sizeFromShape(a.shape),i=w.inferFromImplicitShape(r,s);return w.assert(s===w.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${a.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(a.dataId),{dataId:a.dataId,shape:i,dtype:a.dtype}}var Tee={kernelName:cl,backendName:"wasm",kernelFunc:Pa},tS;function Nee(e){tS=e.wasm.cwrap(Cs,null,["number","array","number","number","array","number","number","number","number"])}function See(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;if(r.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=r.shape.length,c=s.shape.length,u=i?r.shape[l-2]:r.shape[l-1],p=o?s.shape[c-1]:s.shape[c-2],d=i?r.shape[l-1]:r.shape[l-2],h=o?s.shape[c-2]:s.shape[c-1],m=r.shape.slice(0,-2),f=s.shape.slice(0,-2),g=w.sizeFromShape(m),y=w.sizeFromShape(f),b=g===y||g===1||y===1;w.assert(l>=2&&c>=2&&b,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${f}).`);let x=(g>y?r.shape.slice(0,-2):s.shape.slice(0,-2)).concat([d,h]);w.assert(u===p,()=>`Error in matMul: inner shapes (${u}) and (${p}) of Tensors with shapes ${r.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let v=i?[g,u,d]:[g,d,u],T=o?[y,h,p]:[y,p,h],k=Pa({inputs:{x:r},backend:n,attrs:{shape:v}}),S=Pa({inputs:{x:s},backend:n,attrs:{shape:T}}),F=n.dataIdMap.get(k.dataId).id,A=n.dataIdMap.get(S.dataId).id,R=i?k.shape[2]:k.shape[1],P=o?S.shape[1]:S.shape[2],z=Math.max(g,y),V=n.makeOutput([z,R,P],k.dtype),G=n.dataIdMap.get(V.dataId).id,H=new Uint8Array(new Int32Array(k.shape).buffer),K=new Uint8Array(new Int32Array(S.shape).buffer);return tS(F,H,k.shape.length,A,K,S.shape.length,i,o,G),n.disposeData(k.dataId),n.disposeData(S.dataId),V.shape=x,V}var Cee={kernelName:Cs,backendName:"wasm",setupFunc:Nee,kernelFunc:See};function Wm(e){let{inputs:{x:t},attrs:{dtype:n},backend:a}=e,r=a.makeOutput(t.shape,n),s=a.typedArrayFromHeap(t);return a.typedArrayFromHeap(r).set(s),r}var _ee={kernelName:_s,backendName:"wasm",kernelFunc:Wm},Eee=$n(Es),nS;function Fee(e){nS=e.wasm.cwrap(Vr,null,["number","number","number","number"])}function Aee(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=a,o=n.dataIdMap.get(r.dataId).id,l=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(l.dataId).id;return nS(o,s,i,c),l}var $ee={kernelName:Vr,backendName:"wasm",setupFunc:Fee,kernelFunc:Aee};function Dee(e,t,n,a){let r=w.getArrayFromDType(n,w.sizeFromShape(t));if(a&&n!=="string"){let s=0;e.forEach(i=>{let o=w.sizeFromShape(i.shape);r.set(i.vals,s),s+=o})}else{let s=0;e.forEach(i=>{let o=n==="string"?_.fromUint8ToStringArray(i.vals):i.vals,l=0;for(let c=0;c<i.shape[0];++c){let u=c*t[1]+s;for(let p=0;p<i.shape[1];++p)r[u+p]=o[l++]}s+=i.shape[1]})}return r}function Ree(e,t,n,a){let r=e===t,s=e<t&&n<0,i=t<e&&n>1;if(r||s||i)return w.makeZerosTypedArray(0,a);let o=Math.abs(Math.ceil((t-e)/n)),l=w.makeZerosTypedArray(o,a);t<e&&n===1&&(n=-1),l[0]=e;for(let c=1;c<l.length;c++)l[c]=l[c-1]+n;return l}function aS(e,t,n,a,r){let s=an.isSliceContinous(a,t,n),i=w.sizeFromShape(n),o=w.computeStrides(a);if(s){let p=an.computeFlatOffset(t,o);return r==="string"?e.slice(p,p+i):e.subarray(p,p+i)}let l=r==="string"?_.fromUint8ToStringArray(e):e,c=Me(a,r,l),u=Me(n,r);for(let p=0;p<u.size;++p){let d=u.indexToLoc(p),h=d.map((m,f)=>m+t[f]);u.set(c.get(...h),...d)}return r==="string"?_.fromStringArrayToUint8(u.values):u.values}function rS(e){let{inputs:t,backend:n}=e,a=w.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=_.computeOutShape(t.map(h=>h.shape),a),s=t.filter(h=>w.sizeFromShape(h.shape)>0);if(s.length===1)return Lm({inputs:{x:s[0]},backend:n});let i=n.makeOutput(r,t[0].dtype);if(w.sizeFromShape(r)===0)return i;let o=s.map(h=>h.shape);if(_.assertParamsConsistent(o,a),s[0].dtype==="string"){let h=s.map(x=>{let v=w.sizeFromShape(x.shape.slice(a));return Pa({inputs:{x},backend:n,attrs:{shape:[-1,v]}})}),m=h.map(x=>({vals:n.readSync(x.dataId),shape:x.shape}));r=_.computeOutShape(h.map(x=>x.shape),1);let f=h[0].shape[0]===1,g=Dee(m,r,t[0].dtype,f),y=_.computeOutShape(s.map(x=>x.shape),a);i.shape=y;let b=n.dataIdMap.get(i.dataId);return b.stringBytes=_.fromStringArrayToUint8(g),h.forEach(x=>n.disposeData(x.dataId)),i}let l=w.sizeFromShape(s[0].shape.slice(0,a)),c=0,u=s.map(h=>{let m=w.sizeFromShape(h.shape.slice(a));return c+=m,m}),p=s.map(h=>n.typedArrayFromHeap(h)),d=n.typedArrayFromHeap(i);for(let h=0;h<l;h++){let m=h*c;for(let f=0;f<p.length;f++){let g=u[f],y=h*g,b=p[f].subarray(y,y+g);d.set(b,m),m+=g}}return i}var Mee={kernelName:Ro,backendName:"wasm",kernelFunc:rS},sS;function Pee(e){sS=e.wasm.cwrap(Fs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Oee(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s}=t,i=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(s.dataId).id,{strides:l,dilations:c,pad:u,dimRoundingMode:p,dataFormat:d}=n,h=_.convertConv2DDataFormat(d),m=_.computeConv2DInfo(r.shape,s.shape,l,c,u,p,!1,h),f=m.filterHeight,g=m.filterWidth,y=m.padInfo.top,b=m.padInfo.right,x=m.padInfo.bottom,v=m.padInfo.left,T=m.dilationHeight,k=m.dilationWidth,S=m.strideHeight,F=m.strideWidth,A=m.inChannels,R=m.outChannels,P=m.padInfo.type==="SAME"?1:0;if(m.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${m.dataFormat}'. Please use 'channelsLast'.`);let z=a.makeOutput(m.outShape,"float32"),V=a.dataIdMap.get(z.dataId).id;return sS(i,r.shape[0],r.shape[1],r.shape[2],o,f,g,y,b,x,v,P,T,k,S,F,A,R,V),z}var Lee={kernelName:Fs,backendName:"wasm",setupFunc:Pee,kernelFunc:Oee},iS;function zee(e){iS=e.wasm.cwrap(As,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Wee(e){let{backend:t,inputs:n,attrs:a}=e,{dy:r,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:c,inputShape:u}=a,p=1,d=_.convertConv2DDataFormat(l),h=_.computeConv2DInfo(u,s.shape,i,p,o,c,!1,d),{batchSize:m,filterHeight:f,filterWidth:g,inChannels:y,inHeight:b,inWidth:x,outChannels:v,outHeight:T,outWidth:k,strideHeight:S,strideWidth:F}=h,A=f-1-h.padInfo.top,R=g-1-h.padInfo.left,P=h.dataFormat==="channelsLast",z=w.computeStrides(h.inShape),V=w.computeStrides(r.shape),[G,H,K]=w.computeStrides(s.shape),j=z[0],te=P?z[1]:z[2],Q=P?z[2]:1,se=P?1:z[1],ne=V[0],ie=P?V[1]:V[2],ee=P?V[2]:1,pe=P?1:V[1],oe=t.makeOutput(h.inShape,"float32"),fe=t.dataIdMap.get(oe.dataId).id,me=t.dataIdMap.get(r.dataId).id,we=t.dataIdMap.get(s.dataId).id;return iS(me,we,m,f,g,b,x,y,T,k,v,S,F,A,R,G,H,K,j,te,Q,se,ne,ie,ee,pe,fe),oe}var Bee={kernelName:As,backendName:"wasm",setupFunc:zee,kernelFunc:Wee},Vee=$n($s),Bv;(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(Bv||(Bv={}));var oS;function Uee(e){oS=e.wasm.cwrap(Po,null,["number","number","number","number","array","number","number","number","number","number"])}function Gee(e){let{backend:t,inputs:n,attrs:a}=e,{method:r,extrapolationValue:s,cropSize:i}=a,{image:o,boxes:l,boxInd:c}=n,u=l.shape[0],[p,d]=i,h=[u,p,d,o.shape[3]],m=t.dataIdMap.get(o.dataId),f;o.dtype!=="float32"&&(f=Wm({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));let g=m.id,y=t.dataIdMap.get(l.dataId).id,b=t.dataIdMap.get(c.dataId).id,x=t.makeOutput(h,"float32"),v=t.dataIdMap.get(x.dataId).id,T=new Uint8Array(new Int32Array(o.shape).buffer);return oS(g,y,b,u,T,p,d,Bv[r],s,v),f!=null&&t.disposeData(f.dataId),x}var Hee={kernelName:Po,backendName:"wasm",setupFunc:Uee,kernelFunc:Gee},lS;function jee(e){lS=e.wasm.cwrap(Ds,null,["number","number","number","number","number","number"])}function qee(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a,l=r.shape.length;w.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);let c=_.getAxesPermutation([s],l),u=r;c!==null&&(u=zm({inputs:{x:r},attrs:{perm:c},backend:n}));let p=_.getInnerMostAxes(1,l)[0];_.assertAxesAreInnerMostDims("cumsum",[p],l);let d=n.makeOutput(u.shape,u.dtype),h=u.shape[p],m=n.dataIdMap.get(u.dataId).id,f=n.dataIdMap.get(d.dataId).id;lS(m,i?1:0,o?1:0,h,f,Hn[r.dtype]);let g=d;if(c!==null){let y=_.getUndoAxesPermutation(c);g=zm({inputs:{x:d},attrs:{perm:y},backend:n}),n.disposeData(u.dataId),n.disposeData(d.dataId)}return g}var Kee={kernelName:Ds,backendName:"wasm",setupFunc:jee,kernelFunc:qee},uS;function Xee(e){uS=e.wasm.cwrap(Oo,null,["number","number","number","array","number","array","array","number","number"])}function Yee(e){let{backend:t,inputs:n,attrs:a}=e,{x:r}=n,{blockSize:s,dataFormat:i}=a;w.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);let o=r.shape[0],l=i==="NHWC"?r.shape[1]:r.shape[2],c=i==="NHWC"?r.shape[2]:r.shape[3],u=i==="NHWC"?r.shape[3]:r.shape[1],p=l*s,d=c*s,h=u/(s*s),m=i==="NHWC"?[o,p,d,h]:[o,h,p,d],f=t.makeOutput(m,"float32"),g=t.dataIdMap.get(r.dataId).id,y=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),b=new Uint8Array(new Int32Array(m).buffer),x=new Uint8Array(new Int32Array(w.computeStrides(m)).buffer),v=t.dataIdMap.get(f.dataId).id;return uS(g,s,i==="NHWC"?1:0,y,r.shape.length-1,b,x,m.length,v),f}var Jee={kernelName:Oo,backendName:"wasm",setupFunc:Xee,kernelFunc:Yee},cS;function Qee(e){cS=e.wasm.cwrap(Rs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Zee(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s}=t,i=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(s.dataId).id,{strides:l,dilations:c,pad:u,dimRoundingMode:p}=n,d=c==null?[1,1]:c,h=_.computeConv2DInfo(r.shape,s.shape,l,d,u,p,!0),m=h.filterHeight,f=h.filterWidth,g=h.padInfo.top,y=h.padInfo.right,b=h.padInfo.bottom,x=h.padInfo.left,v=h.dilationHeight,T=h.dilationWidth,k=h.strideHeight,S=h.strideWidth,F=h.inChannels,A=h.outChannels,R=h.padInfo.type==="SAME"?1:0;if(h.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let P=a.makeOutput(h.outShape,"float32"),z=a.dataIdMap.get(P.dataId).id;return cS(i,r.shape[0],r.shape[1],r.shape[2],o,m,f,g,y,b,x,R,v,T,k,S,F,A,z),P}var ete={kernelName:Rs,backendName:"wasm",setupFunc:Qee,kernelFunc:Zee},tte=!1,nte=yn(Wo,tte,"bool"),ate=$n(Ps);function Vv(e){let{inputs:t,attrs:n,backend:a}=e,{input:r}=t,{dim:s}=n,i=r.shape.length,o=r.shape.slice(),l=s;return s<0&&(w.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),Pa({inputs:{x:r},backend:a,attrs:{shape:o}})}var rte={kernelName:Bo,backendName:"wasm",kernelFunc:Vv};function ste(e){let{attrs:{shape:t,value:n,dtype:a},backend:r}=e,s=r.makeOutput(t,a);return r.typedArrayFromHeap(s).fill(n),s}var ite={kernelName:tc,backendName:"wasm",kernelFunc:ste},pS;function ote(e){pS=e.wasm.cwrap(Uo,null,["number","number","number","number","number","number"])}function lte(e){let{inputs:t,backend:n}=e,{image:a}=t,r=n.makeOutput(a.shape,a.dtype),s=n.dataIdMap.get(a.dataId).id,i=n.dataIdMap.get(r.dataId).id,[o,l,c,u]=a.shape;return pS(s,o,l,c,u,i),r}var ute={kernelName:Uo,backendName:"wasm",kernelFunc:lte,setupFunc:ote},cte=$n(Os),pte=!1,dte=yn(Ls,pte),dS;function hte(e){dS=e.wasm.cwrap(zs,null,["number","number","number","number","number","number","number"])}function mte(e){let{backend:t,inputs:n,attrs:a}=e,{varianceEpsilon:r}=a,{x:s,mean:i,variance:o,offset:l,scale:c}=n,u=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,h=l!=null?t.dataIdMap.get(l.dataId).id:0,m=c!=null?t.dataIdMap.get(c.dataId).id:0,f=t.makeOutput(s.shape,s.dtype);if(w.sizeFromShape(s.shape)===0)return f;let g=t.dataIdMap.get(f.dataId).id;return dS(u,p,d,h,m,r,g),f}var fte={kernelName:zs,backendName:"wasm",setupFunc:hte,kernelFunc:mte},hS;function gte(e){hS=e.wasm.cwrap(yi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function yte(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:c,dilations:u,dataFormat:p,dimRoundingMode:d,activation:h,leakyreluAlpha:m}=n,f=_.computeConv2DInfo(r.shape,s.shape,l,u,c,d),g=gp[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let y=a.dataIdMap.get(r.dataId).id,b=a.dataIdMap.get(s.dataId).id,x=f.outChannels,v=0;if(i!=null){let ee=a.dataIdMap.get(i.dataId);if(ee.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${ee.shape.length}.`);if(ee.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${ee.shape}) does not match the number of output channels (${x})`);v=ee.id}let T=f.filterHeight,k=f.filterWidth,S=f.padInfo.top,F=f.padInfo.right,A=f.padInfo.bottom,R=f.padInfo.left,P=f.dilationHeight,z=f.dilationWidth,V=f.strideHeight,G=f.strideWidth,H=f.inChannels,K=f.padInfo.type==="SAME"?1:0,j=f.batchSize,te=f.inHeight,Q=f.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let se=a.makeOutput(f.outShape,"float32"),ne=a.dataIdMap.get(se.dataId).id,ie=o==null?0:a.dataIdMap.get(o.dataId).id;return hS(y,j,te,Q,b,T,k,v,S,F,A,R,K,P,z,V,G,H,x,g,ie,m||0,ne),se}var bte={kernelName:yi,backendName:"wasm",setupFunc:gte,kernelFunc:yte},mS;function xte(e){mS=e.wasm.cwrap(bi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function vte(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:c,dilations:u,dataFormat:p,dimRoundingMode:d,activation:h,leakyreluAlpha:m}=n,f=_.computeConv2DInfo(r.shape,s.shape,l,u,c,d,!0),g=gp[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=a.dataIdMap.get(r.dataId).id,b=a.dataIdMap.get(s.dataId).id,x=f.outChannels,v=0;if(i!=null){let ee=a.dataIdMap.get(i.dataId);if(ee.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${ee.shape.length}.`);if(ee.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${ee.shape}) does not match the number of output channels (${x})`);v=ee.id}let T=f.filterHeight,k=f.filterWidth,S=f.padInfo.top,F=f.padInfo.right,A=f.padInfo.bottom,R=f.padInfo.left,P=f.dilationHeight,z=f.dilationWidth,V=f.strideHeight,G=f.strideWidth,H=f.inChannels,K=f.padInfo.type==="SAME"?1:0,j=f.batchSize,te=f.inHeight,Q=f.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let se=a.makeOutput(f.outShape,"float32"),ne=a.dataIdMap.get(se.dataId).id,ie=o==null?0:a.dataIdMap.get(o.dataId).id;return mS(y,j,te,Q,b,T,k,v,S,F,A,R,K,P,z,V,G,H,x,g,ie,m||0,ne),se}var wte={kernelName:bi,backendName:"wasm",setupFunc:xte,kernelFunc:vte},fS;function kte(e){fS=e.wasm.cwrap(Ho,null,["number","number","number","number","number","number","array","number"])}function Ite(e){let{backend:t,inputs:n}=e,{params:a,indices:r}=n,[s,i,o,l]=cy.prepareAndValidate(a,r),c=t.makeOutput(s,a.dtype);if(i===0)return c;let u=r.shape,p=u[u.length-1],d=t.dataIdMap.get(a.dataId).id,h=t.dataIdMap.get(r.dataId).id,m=new Uint8Array(new Int32Array(l).buffer),f=t.dataIdMap.get(c.dataId).id;return fS(d,Hn[a.dtype],h,i,p,o,m,f),c}var Tte={kernelName:Ho,backendName:"wasm",setupFunc:kte,kernelFunc:Ite},gS;function Nte(e){gS=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Ste(e){let{backend:t,inputs:n,attrs:a}=e,{x:r,indices:s}=n,{axis:i,batchDims:o}=a,l=w.parseAxisParam(i,r.shape)[0],c=_.segment_util.collectGatherOpShapeInfo(r,s,l,o),u=Pa({inputs:{x:r},attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]},backend:t}),p=w.sizeFromShape(s.shape),d=Pa({inputs:{x:s},attrs:{shape:[c.batchSize,p/c.batchSize]},backend:t}),h=[c.batchSize,c.outerSize,p/c.batchSize,c.sliceSize],m=t.makeOutput(h,r.dtype);if(w.sizeFromShape(r.shape)===0)return m;let f=u.shape.length-1,g=t.dataIdMap.get(u.dataId).id,y=t.dataIdMap.get(d.dataId).id,b=t.dataIdMap.get(m.dataId).id,x=new Uint8Array(new Int32Array(w.computeStrides(u.shape)).buffer),v=new Uint8Array(new Int32Array(w.computeStrides(h)).buffer);return gS(g,Hn[r.dtype],x,f,y,c.batchSize,v,b),t.disposeData(u.dataId),t.disposeData(d.dataId),m.shape=c.outputShape,m}var Cte={kernelName:Go,backendName:"wasm",setupFunc:Nte,kernelFunc:Ste},_te=!1,Ete=yn(jo,_te,"bool"),Fte=!1,Ate=yn(Ws,Fte,"bool"),yS;function $te(e){yS=e.wasm.cwrap(Vs,null,["number","number","number"])}function Dte(e){let{inputs:{x:t},attrs:{alpha:n},backend:a}=e,r=a.dataIdMap.get(t.dataId).id,s=a.makeOutput(t.shape,t.dtype);if(w.sizeFromShape(t.shape)!==0){let i=a.dataIdMap.get(s.dataId).id;yS(r,n,i)}return s}var Rte={kernelName:Vs,backendName:"wasm",setupFunc:$te,kernelFunc:Dte},Mte=!1,Pte=yn(Yo,Mte,"bool"),Ote=!1,Lte=yn(Jo,Ote,"bool"),zte=$n(Us),Wte=!1,Bte=yn(Zo,Wte,"bool"),bS;function Vte(e){bS=e.wasm.cwrap(Gs,null,["number, number, number"])}function Ute(e){let{backend:t,inputs:n,attrs:a}=e,{reductionIndices:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:c,axes:u,originalAxes:p,inputWasTransposed:d}=mu(i,r,t);if(d){let b=t.dataIdMap.get(c.dataId).id;l=c,o=b}let h=l.shape.length;_.assertAxesAreInnerMostDims("max",u,h);let[m,f]=_.computeOutAndReduceShapes(l.shape,u),g=w.sizeFromShape(f),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(l.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;bS(o,g,b)}if(d&&t.disposeData(c.dataId),s){let b=_.expandShapeToKeepDim(y.shape,p);y.shape=b}return y}var Gte={kernelName:Gs,backendName:"wasm",setupFunc:Vte,kernelFunc:Ute},Hte=!1,jte=yn(Hs,Hte),xS;function qte(e){xS=e.wasm.cwrap(js,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Kte(e){let{inputs:t,attrs:n,backend:a}=e,r=t.x,s=a.dataIdMap.get(r.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:c}=n,u=_.computePool2DInfo(r.shape,i,o,1,l,c),p=u.filterHeight,d=u.filterWidth,h=u.padInfo.top,m=u.padInfo.right,f=u.padInfo.bottom,g=u.padInfo.left,y=u.dilationHeight,b=u.dilationWidth,x=u.strideHeight,v=u.strideWidth,T=u.inChannels,k=u.outChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);let S=a.makeOutput(u.outShape,"float32"),F=a.dataIdMap.get(S.dataId).id;return xS(s,r.shape[0],r.shape[1],r.shape[2],p,d,h,m,f,g,y,b,x,v,T,k,F),S}var Xte={kernelName:js,backendName:"wasm",setupFunc:qte,kernelFunc:Kte},vS;function Yte(e){vS=e.wasm.cwrap(qs,null,["number, number, number"])}function Jte(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,c=i,{transposed:u,axes:p,originalAxes:d,inputWasTransposed:h}=mu(i,r,t),m=p;if(h){let v=t.dataIdMap.get(u.dataId).id;v!==o&&(c=u,l=v,m=_.getInnerMostAxes(m.length,c.shape.length))}_.assertAxesAreInnerMostDims("mean",m,c.shape.length);let[f,g]=_.computeOutAndReduceShapes(c.shape,m),y=w.sizeFromShape(g),b=c;c.dtype!=="float32"&&(b=Wm({backend:t,inputs:{x:c},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(f,"float32");if(w.sizeFromShape(c.shape)!==0){let v=t.dataIdMap.get(x.dataId).id;vS(l,y,v)}if(h&&t.disposeData(u.dataId),s){let v=_.expandShapeToKeepDim(x.shape,d);x.shape=v}return c.dtype!=="float32"&&t.disposeData(b.dataId),x}var Qte={kernelName:qs,backendName:"wasm",setupFunc:Yte,kernelFunc:Jte},wS;function Zte(e){wS=e.wasm.cwrap(Ks,null,["number, number, number"])}function ene(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,c=i,{transposed:u,axes:p,originalAxes:d,inputWasTransposed:h}=mu(i,r,t);if(h){let x=t.dataIdMap.get(u.dataId).id;x!==o&&(c=u,l=x)}let m=c.shape.length;_.assertAxesAreInnerMostDims("min",p,m);let[f,g]=_.computeOutAndReduceShapes(c.shape,p),y=w.sizeFromShape(g),b=t.makeOutput(f,c.dtype);if(w.sizeFromShape(c.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;wS(l,y,x)}if(h&&t.disposeData(u.dataId),s){let x=_.expandShapeToKeepDim(b.shape,d);b.shape=x}return b}var tne={kernelName:Ks,backendName:"wasm",setupFunc:Zte,kernelFunc:ene},nne=!1,ane=yn(Xs,nne),rne=!0,sne=yn(Ys,rne),ine=$n(tl);function Uv(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),a=n[0],r=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:a,selectedSize:r,pSelectedScores:s,pValidOutputs:i}}var kS;function one(e){kS=e.wasm.cwrap(al,"number",["number","number","number","number","number"])}function lne(e){let{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i}=a,{boxes:o,scores:l}=n,c=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(l.dataId).id,p=kS(c,u,s,r,i),{pSelectedIndices:d,selectedSize:h,pSelectedScores:m,pValidOutputs:f}=Uv(t,p);return t.wasm._free(m),t.wasm._free(f),t.makeOutput([h],"int32",d)}var une={kernelName:al,backendName:"wasm",setupFunc:one,kernelFunc:lne},IS;function cne(e){IS=e.wasm.cwrap(rl,"number",["number","number","number","number","number","bool"])}function pne(e){let{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=a,{boxes:l,scores:c}=n,u=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(c.dataId).id,d=IS(u,p,s,r,i,o),{pSelectedIndices:h,selectedSize:m,pSelectedScores:f,pValidOutputs:g}=Uv(t,d);t.wasm._free(f);let y=t.makeOutput([m],"int32",h),b=t.makeOutput([],"int32",g);return[y,b]}var dne={kernelName:rl,backendName:"wasm",setupFunc:cne,kernelFunc:pne},TS;function hne(e){TS=e.wasm.cwrap(sl,"number",["number","number","number","number","number","number"])}function mne(e){let{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=a,{boxes:l,scores:c}=n,u=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(c.dataId).id,d=TS(u,p,s,r,i,o),{pSelectedIndices:h,selectedSize:m,pSelectedScores:f,pValidOutputs:g}=Uv(t,d);t.wasm._free(g);let y=t.makeOutput([m],"int32",h),b=t.makeOutput([m],"float32",f);return[y,b]}var fne={kernelName:sl,backendName:"wasm",setupFunc:hne,kernelFunc:mne},gne=!1,yne=yn(nl,gne,"bool"),NS;function bne(e){NS=e.wasm.cwrap(Js,null,["number","number","number","number","number"])}function xne(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{depth:s,onValue:i,offValue:o}=a,l=n.makeOutput([...r.shape,s],"int32"),c=n.dataIdMap.get(l.dataId).id,u=n.dataIdMap.get(r.dataId).id;return NS(u,s,i,o,c),l}var vne={kernelName:Js,backendName:"wasm",setupFunc:bne,kernelFunc:xne};function wne(e){let{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(1),a}var kne={kernelName:il,backendName:"wasm",kernelFunc:wne};function Ine(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(t.length===1)return Vv({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(s,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(u=>{let p=Vv({inputs:{input:u},backend:n,attrs:{dim:r}});return o.push(p),p}),c=rS({inputs:l,backend:n,attrs:{axis:r}});return o.forEach(u=>n.disposeData(u.dataId)),c}var Tne={kernelName:ol,backendName:"wasm",kernelFunc:Ine},SS;function Nne(e){SS=e.wasm.cwrap(Qs,null,["number","array","number","number","array","array","number","number"])}function Sne(e){let{inputs:{x:t},backend:n,attrs:{paddings:a,constantValue:r}}=e,s=a.map((m,f)=>m[0]+t.shape[f]+m[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),u=a.map(m=>m[0]),p=a.map(m=>m[1]),d=new Uint8Array(new Int32Array(u).buffer),h=new Uint8Array(new Int32Array(p).buffer);return SS(i,c,t.shape.length,Hn[t.dtype],d,h,r,l),o}var Cne={kernelName:Qs,backendName:"wasm",kernelFunc:Sne,setupFunc:Nne},_ne=!1,Ene=yn(Zs,_ne),CS;function Fne(e){CS=e.wasm.cwrap(ei,null,["number","number","number"])}function Ane(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=n.dataIdMap.get(a.dataId).id,i=n.dataIdMap.get(r.dataId).id,o=n.makeOutput(a.shape,"float32"),l=n.dataIdMap.get(o.dataId).id;return CS(s,i,l),o}var $ne={kernelName:ei,backendName:"wasm",setupFunc:Fne,kernelFunc:Ane},_S;function Dne(e){_S=e.wasm.cwrap(ll,null,["number","number","number","number"])}function Rne(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,c=i,{transposed:u,axes:p,originalAxes:d,inputWasTransposed:h}=mu(i,r,t),m=p;if(h){let x=t.dataIdMap.get(u.dataId).id;x!==o&&(c=u,l=x,m=_.getInnerMostAxes(m.length,c.shape.length))}_.assertAxesAreInnerMostDims("prod",m,c.shape.length);let[f,g]=_.computeOutAndReduceShapes(c.shape,m),y=w.sizeFromShape(g),b=t.makeOutput(f,c.dtype);if(w.sizeFromShape(c.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;_S(l,y,Hn[b.dtype],x)}if(h&&t.disposeData(u.dataId),s){let x=_.expandShapeToKeepDim(b.shape,d);b.shape=x}return b}var Mne={kernelName:ll,backendName:"wasm",setupFunc:Dne,kernelFunc:Rne},Pne=e=>{let{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:i}=n,o=Ree(a,r,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l},One={kernelName:oc,backendName:"wasm",kernelFunc:Pne},Lne=!0,zne=yn(Ms,Lne),Wne=$n(ti),Bne=$n(ai),ES;function Vne(e){ES=e.wasm.cwrap(ni,null,["number","number","number","number","number","number","number","number","number","number"])}function Une(e){let{backend:t,inputs:n,attrs:a}=e,{images:r}=n,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,c]=o,[u,p,d,h]=r.shape,m=[u,l,c,h],f=t.dataIdMap.get(r.dataId),g;f.dtype!=="float32"&&(g=Wm({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(g.dataId));let y=f.id,b=t.makeOutput(m,"float32");if(w.sizeFromShape(r.shape)===0)return b;let x=t.dataIdMap.get(b.dataId).id;return ES(y,u,p,d,h,l,c,s?1:0,i?1:0,x),g!=null&&t.disposeData(g.dataId),b}var Gne={kernelName:ni,backendName:"wasm",setupFunc:Vne,kernelFunc:Une},FS;function Hne(e){FS=e.wasm.cwrap(ri,null,["number","array","number","array","number","number"])}function jne(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,i=w.parseAxisParam(s,r.shape);if(r.shape.length===0)return Lm({inputs:{x:r},backend:n});let o=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(i).buffer),p=new Uint8Array(new Int32Array(r.shape).buffer);FS(l,u,i.length,p,r.shape.length,c);let d=Pa({inputs:{x:o},attrs:{shape:r.shape},backend:n});return n.disposeData(o.dataId),d}var qne={kernelName:ri,backendName:"wasm",kernelFunc:jne,setupFunc:Hne},AS;function Kne(e){AS=e.wasm.cwrap(Tl,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Xne(e){let{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{radians:s,fillValue:i,center:o}=a,l=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(l.dataId).id,[p,d,h,m]=r.shape,[f,g]=_.getImageCenter(o,d,h),y=i===0,b=255,x=typeof i=="number"?[i,i,i,y?0:b]:[...i,b],v=new Uint8Array(new Int32Array(x).buffer);return AS(c,p,d,h,m,s,f,g,v,x.length,u),l}var Yne={kernelName:Tl,backendName:"wasm",kernelFunc:Xne,setupFunc:Kne},Jne=$n(si),Qne=$n(ii),$S;function Zne(e){$S=e.wasm.cwrap(pl,null,["number","number","number","number","number","number","array","number","number"])}function eae(e){let{backend:t,inputs:n,attrs:a}=e,{indices:r,updates:s}=n,{shape:i}=a,o=t.makeOutput(i,s.dtype);if(w.sizeFromShape(i)===0)return o;let{sliceRank:l,numUpdates:c,sliceSize:u,strides:p,outputSize:d}=py.calculateShapes(s,r,i),h=t.dataIdMap.get(r.dataId).id,m=t.dataIdMap.get(s.dataId).id,f=new Uint8Array(new Int32Array(p).buffer),g=t.dataIdMap.get(o.dataId).id;return $S(h,m,Hn[s.dtype],l,c,u,f,d,g),o}var tae={kernelName:pl,backendName:"wasm",setupFunc:Zne,kernelFunc:eae},DS;function nae(e){DS=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function aae(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=n.dataIdMap.get(a.dataId).id,o=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(s.dataId).id,c=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(c.dataId).id,p=a.shape.length,d=r.shape.length,h=p===0||p>1||d===1?1:w.sizeFromShape(r.shape.slice(1));return DS(i,o,l,h,u),c}var rae={kernelName:dl,backendName:"wasm",kernelFunc:aae,setupFunc:nae},RS;function sae(e){RS=e.wasm.cwrap(li,null,["number","number"])}function iae(e){let{backend:t,inputs:{x:n}}=e,a=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(r.dataId).id;return w.sizeFromShape(r.shape)===0||RS(a,s),r}var oae={kernelName:"Sigmoid",backendName:"wasm",setupFunc:sae,kernelFunc:iae},lae=$n(oi);function Bm(e){let{inputs:{x:t},attrs:{begin:n,size:a},backend:r}=e,[s,i]=an.parseSliceParams(t,n,a),o=an.isSliceContinous(t.shape,s,i),l=r.readSync(t.dataId),c=r.makeOutput(i,t.dtype),u=w.computeStrides(t.shape),p=r.dataIdMap.get(c.dataId);if(o){let m=an.computeFlatOffset(s,u);return t.dtype==="string"?p.stringBytes=l.slice(m,m+w.sizeFromShape(i)):r.typedArrayFromHeap(c).set(l.subarray(m,m+w.sizeFromShape(i))),c}if(t.dtype==="string"){let m=aS(l,s,i,t.shape,t.dtype);return p.stringBytes=m,c}let d=r.typedArrayFromHeap(c),h=t.shape.length;if(h===2)uae(l,u[0],d,s,i);else if(h===3)cae(l,u[0],u[1],d,s,i);else if(h===4)pae(l,u[0],u[1],u[2],d,s,i);else{let m=aS(l,s,i,t.shape,t.dtype);d.set(m)}return c}function uae(e,t,n,a,r){let s=0,i=a[0],o=a[1],l=i+r[0];for(let c=i;c<l;c++){let u=c*t+o;n.set(e.subarray(u,u+r[1]),s),s+=r[1]}}function cae(e,t,n,a,r,s){let i=0,o=r[0],l=r[1],c=r[2],u=o+s[0],p=l+s[1];for(let d=o;d<u;d++)for(let h=l;h<p;h++){let m=d*t+h*n+c;a.set(e.subarray(m,m+s[2]),i),i+=s[2]}}function pae(e,t,n,a,r,s,i){let o=0,l=s[0],c=s[1],u=s[2],p=l+i[0],d=c+i[1],h=u+i[2],m=s[3];for(let f=l;f<p;f++)for(let g=c;g<d;g++)for(let y=u;y<h;y++){let b=f*t+g*n+y*a+m;r.set(e.subarray(b,b+i[3]),o),o+=i[3]}}var dae={kernelName:ml,backendName:"wasm",kernelFunc:Bm},MS;function hae(e){MS=e.wasm.cwrap(pi,null,["number","number","number","number"])}function mae(e){let{backend:t,inputs:{logits:n},attrs:{dim:a}}=e,r=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[a],l=w.sizeFromShape(n.shape)/o;return w.sizeFromShape(s.shape)===0||MS(r,i,o,l),s}var fae={kernelName:pi,backendName:"wasm",setupFunc:hae,kernelFunc:mae};function gae(e){let{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=n,o=w.parseAxisParam(i,r.shape)[0],l=_.prepareSplitSize(r,s,o),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(p=>{let d=[...u];d[o]=p;let h=Bm({inputs:{x:r},attrs:{begin:c,size:d},backend:a});return c[o]+=p,h})}var yae={kernelName:bl,backendName:"wasm",kernelFunc:gae},bae=$n(ui),xae=$n(cc),vae=!0,wae=yn(di,vae),PS;function kae(e){PS=e.wasm.cwrap(Gr,null,["number","number","number"])}function Iae(e){let{backend:t,inputs:n,attrs:a}=e,{alpha:r}=a,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return PS(i,r,l),o}var Tae={kernelName:Gr,backendName:"wasm",setupFunc:kae,kernelFunc:Iae},OS;function Nae(e){OS=e.wasm.cwrap(xl,null,["number","array","number","array","array","array","array","array","number","number"])}function Sae(e){let{backend:t,inputs:n,attrs:a}=e,{x:r}=n,{begin:s,end:i,strides:o}=a;o==null&&(o=new Array(s.length));let{beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:p,shrinkAxisMask:d}=a,h=_.slice_util.maskToAxes(u);if(h.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(u!==0&&p!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(u!==0&&d!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let m=r.shape.length-s.length,f=_.slice_util.maskToAxes(p),g=r.shape.slice();f.forEach(R=>{s[R]=0,i[R]=1,g.splice(R,0,1)});let y=Pa({inputs:{x:r},attrs:{shape:g},backend:t}),{begin:b,end:x,strides:v}=_.slice_util.getNormalizedAxes(y.shape,h,m,s,i,o,l,c,u);s=b,i=x,o=v;let T=_.slice_util.maskToAxes(d);T.forEach(R=>{i[R]=s[R]+1,o[R]=1});let k=_.slice_util.computeOutShape(s,i,o),S=k.filter((R,P)=>T.indexOf(P)===-1);if(o.every(R=>R===1)){let R=Bm({inputs:{x:y},attrs:{begin:s,size:k},backend:t});t.disposeData(y.dataId);let P=Pa({inputs:{x:R},attrs:{shape:S},backend:t});return t.disposeData(R.dataId),P}let F=t.makeOutput(S,"float32");if(!S.some(R=>R===0)){let R=t.dataIdMap.get(y.dataId).id,P=new Uint8Array(new Int32Array(w.computeStrides(y.shape)).buffer),z=new Uint8Array(new Int32Array(s).buffer),V=new Uint8Array(new Int32Array(i).buffer),G=new Uint8Array(new Int32Array(o).buffer),H=new Uint8Array(new Int32Array(S).buffer),K=new Uint8Array(new Int32Array(w.computeStrides(S)).buffer),j=t.dataIdMap.get(F.dataId).id;OS(R,P,y.shape.length,z,V,G,H,K,S.length,j)}t.disposeData(y.dataId);let A=Pa({inputs:{x:F},attrs:{shape:S},backend:t});return t.disposeData(F.dataId),A}var Cae={kernelName:xl,backendName:"wasm",setupFunc:Nae,kernelFunc:Sae},_ae=!0,Eae=yn(hi,_ae),LS;function Fae(e){LS=e.wasm.cwrap(ci,null,["number, number, number"])}function Aae(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,c=i,{transposed:u,axes:p,originalAxes:d,inputWasTransposed:h}=mu(i,r,t),m=p;if(h){let x=t.dataIdMap.get(u.dataId).id;x!==o&&(c=u,l=x,m=_.getInnerMostAxes(m.length,c.shape.length))}_.assertAxesAreInnerMostDims("sum",m,c.shape.length);let[f,g]=_.computeOutAndReduceShapes(c.shape,m),y=w.sizeFromShape(g),b=t.makeOutput(f,c.dtype);if(w.sizeFromShape(c.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;LS(l,y,x)}if(h&&t.disposeData(u.dataId),s){let x=_.expandShapeToKeepDim(b.shape,d);b.shape=x}return b}var $ae={kernelName:ci,backendName:"wasm",setupFunc:Fae,kernelFunc:Aae},Dae=$n(mi),zS;function Rae(e){zS=e.wasm.cwrap(Ur,null,["number","array","number","array","number","number"])}function Mae(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,s=n.dataIdMap.get(r.dataId).id,{reps:i}=a,o=new Array(r.shape.length);for(let d=0;d<o.length;d++)o[d]=r.shape[d]*i[d];let l=new Uint8Array(new Int32Array(r.shape).buffer),c=new Uint8Array(new Int32Array(o).buffer),u=n.makeOutput(o,r.dtype),p=n.dataIdMap.get(u.dataId).id;return zS(s,l,r.shape.length,c,o.length,Hn[u.dtype],p),u}var Pae={kernelName:Ur,backendName:"wasm",setupFunc:Rae,kernelFunc:Mae},WS;function Oae(e){WS=e.wasm.cwrap(wl,null,["number","array","number","number","number","bool","number","number"])}var Lae=({inputs:e,backend:t,attrs:n})=>{let{x:a}=e,{k:r,sorted:s}=n,i=t.dataIdMap.get(a.dataId).id,o=new Uint8Array(new Int32Array(a.shape).buffer),l=a.shape.slice();l[l.length-1]=r;let c=t.makeOutput(l,a.dtype),u=t.dataIdMap.get(c.dataId).id,p=t.makeOutput(l,"int32"),d=t.dataIdMap.get(p.dataId).id;return WS(i,o,a.shape.length,Hn[a.dtype],r,s,u,d),[c,p]},zae={kernelName:wl,backendName:"wasm",setupFunc:Oae,kernelFunc:Lae};function Wae(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:s}=a;s<0&&(s+=r.shape.length);let i=r.shape[s],o=r.shape.length,l=new Array(o-1),c=0;for(let h=0;h<o;h++)h!==s&&(l[c++]=r.shape[h]);let u=new Array(i),p=new Array(o).fill(0),d=r.shape.slice();d[s]=1;for(let h=0;h<u.length;h++)p[s]=h,u[h]=Bm({inputs:{x:r},attrs:{begin:p,size:d},backend:n});return u.map(({dataId:h,dtype:m})=>({dataId:h,dtype:m,shape:l}))}var Bae={kernelName:kl,backendName:"wasm",kernelFunc:Wae};function Vae(e){let{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(0),a}var Uae={kernelName:Il,backendName:"wasm",kernelFunc:Vae},Gae=[oee,uee,dee,vee,Iee,Cee,_ee,Eee,$ee,Mee,Lee,Bee,Vee,Hee,Kee,Jee,ete,nte,ate,rte,ite,ute,cte,dte,iee,fte,bte,wte,Tte,Cte,Ete,Ate,hee,Rte,Pte,Lte,zte,Bte,Gte,jte,Xte,Qte,tne,ane,sne,ine,une,dne,fne,yne,vne,kne,Tne,Cne,Ene,$ne,Mne,One,zne,Wne,Bne,Tee,Gne,qne,Yne,Qne,Jne,tae,rae,oae,lae,dae,fae,yae,bae,xae,wae,Tae,Cae,Eae,$ae,Dae,Pae,zae,yee,Bae,Uae];for(let e of Gae)hc(e);var Gv=Z();Gv.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));Gv.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(Gv.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var BS=Io(Z_()),Hae='var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}',jae=Io(eE()),VS=class extends ju{constructor(e){super();this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new rd(this,Ua())}write(e,t,n){let a={id:this.dataIdNextNumber++};return this.move(a,e,t,n,1),a}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}move(e,t,n,a,r){let s=this.dataIdNextNumber++;if(a==="string"){let c=t;this.dataIdMap.set(e,{id:s,stringBytes:c,shape:n,dtype:a,memoryOffset:null,refCount:r});return}let i=w.sizeFromShape(n),o=i*w.bytesPerElement(a),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:a,refCount:r}),this.wasm.tfjs.registerTensor(s,i,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e){let{memoryOffset:t,dtype:n,shape:a,stringBytes:r}=this.dataIdMap.get(e);if(n==="string")return r;let s=this.wasm.HEAPU8.slice(t,t+w.sizeFromShape(a)*w.bytesPerElement(n));return qae(s.buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let a;if(n==null)a=this.write(null,e,t);else{let r=this.dataIdNextNumber++;a={id:r},this.dataIdMap.set(a,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let s=w.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,s,n)}return{dataId:a,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let a=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),s=w.sizeFromShape(e);switch(t){case"float32":return new Float32Array(a,r,s);case"int32":return new Int32Array(a,r,s);case"bool":return new Uint8Array(a,r,s);default:throw new Error(`Unknown dtype ${t}`)}}};function Kae(e){return(t,n)=>(w.fetch(e,{credentials:"same-origin"}).then(a=>{a.ok||t.env.a(`failed to load wasm binary file at '${e}'`),a.arrayBuffer().then(r=>{WebAssembly.instantiate(r,t).then(s=>{n(s.instance)})})}),{})}function US(e,t,n){if(Vm!=null)return Vm;let a="tfjs-backend-wasm.wasm";return e&&t?a="tfjs-backend-wasm-threaded-simd.wasm":e&&(a="tfjs-backend-wasm-simd.wasm"),yp!=null&&yp[a]!=null?yp[a]:n+a}async function Xae(){let[e,t]=await Promise.all([Z().getAsync("WASM_HAS_SIMD_SUPPORT"),Z().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,a)=>{let r={};r.locateFile=(o,l)=>{if(o.endsWith(".worker.js")){let c=Hae,u=new Blob([c],{type:"application/javascript"});return URL.createObjectURL(u)}return o.endsWith(".wasm")?US(e,t,bp!=null?bp:l):l+o},Hv&&(r.instantiateWasm=Kae(US(e,t,bp!=null?bp:"")));let s=!1;r.onAbort=()=>{s||xp||(xp=!0,a({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))};let i;t&&e&&Vm==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+BS.default.toString()],{type:"text/javascript"}),i=(0,BS.default)(r)):i=(0,jae.default)(r),i.then(o=>{s=!0,xp=!1;let l=null;o.tfjs={init:o.cwrap("init",null,[]),registerTensor:o.cwrap("register_tensor",null,["number","number","number"]),disposeData:o.cwrap("dispose_data",l,["number"]),dispose:o.cwrap("dispose",l,[])},n({wasm:o})})})}function qae(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var Yae=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Vm=null,bp=null,yp={},xp=!1,Hv=!1;function Jae(e,t=!1){if(yy("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),xp)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Vm=e,Hv=t}function Qae(e,t=!1){if(xp)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")bp=e;else{yp=e;let n=Yae.filter(a=>yp[a]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}Hv=t}var Zae="3.3.0",ere=2;Jd("wasm",async()=>{let{wasm:e}=await Xae();return new VS(e)},ere);var JS={};nd(JS,{AnchorPosition:()=>ir,DrawBox:()=>jm,DrawBoxOptions:()=>sw,DrawFaceLandmarks:()=>fw,DrawFaceLandmarksOptions:()=>mw,DrawTextField:()=>fs,DrawTextFieldOptions:()=>Ip,drawContour:()=>Nr,drawDetections:()=>ure,drawFaceExpressions:()=>hre,drawFaceLandmarks:()=>fre});function Nr(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach(({x:a,y:r},s)=>{let i=t[s];e.moveTo(i.x,i.y),e.lineTo(a,r)}),n){let a=t[t.length-1],r=t[0];if(!a||!r)return;e.moveTo(a.x,a.y),e.lineTo(r.x,r.y)}e.stroke()}var GS={};nd(GS,{computeReshapedDimensions:()=>Kv,getCenterPoint:()=>Xi,isDimensions:()=>Gm,isEven:()=>Um,isFloat:()=>qv,isTensor:()=>qi,isTensor1D:()=>tre,isTensor2D:()=>jv,isTensor3D:()=>Sr,isTensor4D:()=>aa,isValidNumber:()=>Oa,isValidProbablitiy:()=>fu,range:()=>rr,round:()=>Ki});var bn=class{constructor(t,n){if(!Oa(t)||!Oa(n))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:t,height:n})}`);this._width=t,this._height=n}get width(){return this._width}get height(){return this._height}reverse(){return new bn(1/this.width,1/this.height)}};function qi(e,t){return e instanceof Ee&&e.shape.length===t}function tre(e){return qi(e,1)}function jv(e){return qi(e,2)}function Sr(e){return qi(e,3)}function aa(e){return qi(e,4)}function qv(e){return e%1!=0}function Um(e){return e%2==0}function Ki(e,t=2){let n=10**t;return Math.floor(e*n)/n}function Gm(e){return e&&e.width&&e.height}function Kv({width:e,height:t},n){let a=n/Math.max(t,e);return new bn(Math.round(e*a),Math.round(t*a))}function Xi(e){return e.reduce((t,n)=>t.add(n),new De(0,0)).div(new De(e.length,e.length))}function rr(e,t,n){return Array(e).fill(0).map((a,r)=>t+r*n)}function Oa(e){return!!e&&e!==Infinity&&e!==-Infinity&&!Number.isNaN(e)||e===0}function fu(e){return Oa(e)&&e>=0&&e<=1}var De=class{constructor(t,n){this._x=t,this._y=n}get x(){return this._x}get y(){return this._y}add(t){return new De(this.x+t.x,this.y+t.y)}sub(t){return new De(this.x-t.x,this.y-t.y)}mul(t){return new De(this.x*t.x,this.y*t.y)}div(t){return new De(this.x/t.x,this.y/t.y)}abs(){return new De(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new De(Math.floor(this.x),Math.floor(this.y))}};var lt=class{static isRect(t){return!!t&&[t.x,t.y,t.width,t.height].every(Oa)}static assertIsValidBox(t,n,a=!1){if(!lt.isRect(t))throw new Error(`${n} - invalid box: ${JSON.stringify(t)}, expected object with properties x, y, width, height`);if(!a&&(t.width<0||t.height<0))throw new Error(`${n} - width (${t.width}) and height (${t.height}) must be positive numbers`)}constructor(t,n=!0){let a=t||{},r=[a.left,a.top,a.right,a.bottom].every(Oa),s=[a.x,a.y,a.width,a.height].every(Oa);if(!s&&!r)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(a)}`);let[i,o,l,c]=s?[a.x,a.y,a.width,a.height]:[a.left,a.top,a.right-a.left,a.bottom-a.top];lt.assertIsValidBox({x:i,y:o,width:l,height:c},"Box.constructor",n),this._x=i,this._y=o,this._width=l,this._height=c}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new De(this.left,this.top)}get topRight(){return new De(this.right,this.top)}get bottomLeft(){return new De(this.left,this.bottom)}get bottomRight(){return new De(this.right,this.bottom)}round(){let[t,n,a,r]=[this.x,this.y,this.width,this.height].map(s=>Math.round(s));return new lt({x:t,y:n,width:a,height:r})}floor(){let[t,n,a,r]=[this.x,this.y,this.width,this.height].map(s=>Math.floor(s));return new lt({x:t,y:n,width:a,height:r})}toSquare(){let{x:t,y:n,width:a,height:r}=this,s=Math.abs(a-r);return a<r&&(t-=s/2,a+=s),r<a&&(n-=s/2,r+=s),new lt({x:t,y:n,width:a,height:r})}rescale(t){let n=Gm(t)?t.width:t,a=Gm(t)?t.height:t;return new lt({x:this.x*n,y:this.y*a,width:this.width*n,height:this.height*a})}pad(t,n){let[a,r,s,i]=[this.x-t/2,this.y-n/2,this.width+t,this.height+n];return new lt({x:a,y:r,width:s,height:i})}clipAtImageBorders(t,n){let{x:a,y:r,right:s,bottom:i}=this,o=Math.max(a,0),l=Math.max(r,0),c=s-o,u=i-l,p=Math.min(c,t-o),d=Math.min(u,n-l);return new lt({x:o,y:l,width:p,height:d}).floor()}shift(t,n){let{width:a,height:r}=this,s=this.x+t,i=this.y+n;return new lt({x:s,y:i,width:a,height:r})}padAtBorders(t,n){let a=this.width+1,r=this.height+1,s=1,i=1,o=a,l=r,c=this.left,u=this.top,p=this.right,d=this.bottom;return p>n&&(o=-p+n+a,p=n),d>t&&(l=-d+t+r,d=t),c<1&&(l=2-c,c=1),u<1&&(l=2-u,u=1),{dy:i,edy:l,dx:s,edx:o,y:u,ey:d,x:c,ex:p,w:a,h:r}}calibrate(t){return new lt({left:this.left+t.left*this.width,top:this.top+t.top*this.height,right:this.right+t.right*this.width,bottom:this.bottom+t.bottom*this.height}).toSquare().round()}};var gu=class extends lt{constructor(t,n,a,r,s=!1){super({left:t,top:n,right:a,bottom:r},s)}};var ms=class{constructor(t,n,a,r,s){this._imageDims=new bn(s.width,s.height),this._score=t,this._classScore=n,this._className=a,this._box=new lt(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new lt(this._box).rescale(this.imageDims.reverse())}forSize(t,n){return new ms(this.score,this.classScore,this.className,this.relativeBox,{width:t,height:n})}};var gt=class extends ms{constructor(t,n,a){super(t,t,"",n,a)}forSize(t,n){let{score:a,relativeBox:r,imageDims:s}=super.forSize(t,n);return new gt(a,r,s)}};function Xv(e,t,n=!0){let a=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left)),r=Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top)),s=a*r;return n?s/(e.area+t.area-s):s/Math.min(e.area,t.area)}function Yv(e){let t=e.map(o=>o.x),n=e.map(o=>o.y),a=t.reduce((o,l)=>l<o?l:o,Infinity),r=n.reduce((o,l)=>l<o?l:o,Infinity),s=t.reduce((o,l)=>o<l?l:o,0),i=n.reduce((o,l)=>o<l?l:o,0);return new gu(a,r,s,i)}function Jv(e,t,n,a=!0){let r=t.map((i,o)=>({score:i,boxIndex:o})).sort((i,o)=>i.score-o.score).map(i=>i.boxIndex),s=[];for(;r.length>0;){let i=r.pop();s.push(i);let o=r,l=[];for(let c=0;c<o.length;c++){let u=o[c],p=e[i],d=e[u];l.push(Xv(p,d,a))}r=r.filter((c,u)=>l[u]<=n)}return s}function La(e,t){return D(()=>{let[n,a,r]=t,s=Cn([...e.shape.slice(0,3),1],n,"float32"),i=Cn([...e.shape.slice(0,3),1],a,"float32"),o=Cn([...e.shape.slice(0,3),1],r,"float32"),l=Je([s,i,o],3);return he(e,l)})}function Qv(e,t=!1){return D(()=>{let[n,a]=e.shape.slice(1);if(n===a)return e;let r=Math.abs(n-a),s=Math.round(r*(t?.5:1)),i=n>a?2:1,o=d=>{let h=e.shape.slice();return h[i]=d,Cn(h,0,"float32")},l=o(s),c=r-l.shape[i],p=[t&&c?o(c):null,e,l].filter(d=>!!d).map(d=>ue(d,"float32"));return Je(p,i)})}function nre(e){let t=e.slice();for(let n=t.length-1;n>0;n--){let a=Math.floor(Math.random()*(n+1)),r=t[n];t[n]=t[a],t[a]=r}return t}function vp(e){return 1/(1+Math.exp(-e))}function are(e){return Math.log(e/(1-e))}var yu=class extends lt{constructor(t,n,a,r,s=!1){super({x:t,y:n,width:a,height:r},s)}};var rre=.5,sre=.43,ire=.45,ra=class{constructor(t,n,a=new De(0,0)){let{width:r,height:s}=n;this._imgDims=new bn(r,s),this._shift=a,this._positions=t.map(i=>i.mul(new De(r,s)).add(a))}get shift(){return new De(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map(t=>t.sub(this._shift).div(new De(this.imageWidth,this.imageHeight)))}forSize(t,n){return new this.constructor(this.relativePositions,{width:t,height:n})}shiftBy(t,n){return new this.constructor(this.relativePositions,this._imgDims,new De(t,n))}shiftByPoint(t){return this.shiftBy(t.x,t.y)}align(t,n={}){if(t){let s=t instanceof gt?t.box.floor():new lt(t);return this.shiftBy(s.x,s.y).align(null,n)}let{useDlibAlignment:a,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...n};return a?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let t=this.getRefPointsForAlignment(),[n,a,r]=t,s=p=>r.sub(p).magnitude(),i=(s(n)+s(a))/2,o=Math.floor(i/ire),l=Xi(t),c=Math.floor(Math.max(0,l.x-rre*o)),u=Math.floor(Math.max(0,l.y-sre*o));return new yu(c,u,Math.min(o,this.imageWidth+c),Math.min(o,this.imageHeight+u))}alignMinBbox(t){let n=Yv(this.positions);return n.pad(n.width*t,n.height*t)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}};var HS=class extends ra{getRefPointsForAlignment(){let t=this.positions;return[t[0],t[1],Xi([t[3],t[4]])]}};var bu=class extends ra{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(Xi)}};var wp=class{constructor(t,n){this._label=t,this._distance=n}get label(){return this._label}get distance(){return this._distance}toString(t=!0){return`${this.label}${t?` (${Ki(this.distance)})`:""}`}};var kp=class extends lt{static assertIsValidLabeledBox(t,n){if(lt.assertIsValidBox(t,n),!Oa(t.label))throw new Error(`${n} - expected property label (${t.label}) to be a number`)}constructor(t,n){super(t);this._label=n}get label(){return this._label}};var Cr=class{constructor(t,n){if(typeof t!="string")throw new Error("LabeledFaceDescriptors - constructor expected label to be a string");if(!Array.isArray(n)||n.some(a=>!(a instanceof Float32Array)))throw new Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array");this._label=t,this._descriptors=n}get label(){return this._label}get descriptors(){return this._descriptors}toJSON(){return{label:this.label,descriptors:this.descriptors.map(t=>Array.from(t))}}static fromJSON(t){let n=t.descriptors.map(a=>new Float32Array(a));return new Cr(t.label,n)}};var jS=class extends kp{static assertIsValidPredictedBox(t,n){if(kp.assertIsValidLabeledBox(t,n),!fu(t.score)||!fu(t.classScore))throw new Error(`${n} - expected properties score (${t.score}) and (${t.classScore}) to be a number between [0, 1]`)}constructor(t,n,a,r){super(t,n);this._score=a,this._classScore=r}get score(){return this._score}get classScore(){return this._classScore}};function sr(e){return e.detection instanceof gt}function Yi(e,t){return{...e,...{detection:t}}}function Zv(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function Hm(e){let t="";if(!e)try{e=require("fs")}catch(a){t=a.toString()}return{readFile:e?a=>new Promise((r,s)=>{e.readFile(a,(i,o)=>i?s(i):r(o))}):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function ew(){let e=global.Canvas||global.HTMLCanvasElement,t=global.Image||global.HTMLImageElement,n=()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},a=()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},r=global.fetch,s=Hm();return{Canvas:e||class{},CanvasRenderingContext2D:global.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:global.ImageData||class{},Video:global.HTMLVideoElement||class{},createCanvasElement:n,createImageElement:a,fetch:r,...s}}function tw(){return typeof window=="object"&&typeof document!="undefined"&&typeof HTMLImageElement!="undefined"&&typeof HTMLCanvasElement!="undefined"&&typeof HTMLVideoElement!="undefined"&&typeof ImageData!="undefined"&&typeof CanvasRenderingContext2D!="undefined"}function nw(){return typeof global=="object"&&!0&&typeof module!="undefined"&&typeof process!="undefined"&&!!process.version}var Zt;function ore(){if(!Zt)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return Zt}function aw(e){Zt=e}function rw(){return tw()?aw(Zv()):nw()?aw(ew()):null}function lre(e){if(Zt||rw(),!Zt)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=Zt.Canvas,Image:n=Zt.Image}=e;Zt.Canvas=t,Zt.Image=n,Zt.createCanvasElement=e.createCanvasElement||(()=>new t),Zt.createImageElement=e.createImageElement||(()=>new n),Zt.ImageData=e.ImageData||Zt.ImageData,Zt.Video=e.Video||Zt.Video,Zt.fetch=e.fetch||Zt.fetch,Zt.readFile=e.readFile||Zt.readFile}var rt={getEnv:ore,setEnv:aw,initialize:rw,createBrowserEnv:Zv,createFileSystem:Hm,createNodejsEnv:ew,monkeyPatch:lre,isBrowser:tw,isNodejs:nw};rw();function Ji(e){return!rt.isNodejs()&&typeof e=="string"?document.getElementById(e):e}function Dn(e){let{Canvas:t,CanvasRenderingContext2D:n}=rt.getEnv();if(e instanceof n)return e;let a=Ji(e);if(!(a instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let r=a.getContext("2d");if(!r)throw new Error("resolveContext2d - canvas 2d context is null");return r}var ir;(function(e){e.TOP_LEFT="TOP_LEFT",e.TOP_RIGHT="TOP_RIGHT",e.BOTTOM_LEFT="BOTTOM_LEFT",e.BOTTOM_RIGHT="BOTTOM_RIGHT"})(ir||(ir={}));var Ip=class{constructor(t={}){let{anchorPosition:n,backgroundColor:a,fontColor:r,fontSize:s,fontStyle:i,padding:o}=t;this.anchorPosition=n||ir.TOP_LEFT,this.backgroundColor=a||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=s||14,this.fontStyle=i||"Georgia",this.padding=o||4}},fs=class{constructor(t,n,a={}){this.text=typeof t=="string"?[t]:t instanceof fs?t.text:t,this.anchor=n,this.options=new Ip(a)}measureWidth(t){let{padding:n}=this.options;return this.text.map(a=>t.measureText(a).width).reduce((a,r)=>a<r?r:a,0)+2*n}measureHeight(){let{fontSize:t,padding:n}=this.options;return this.text.length*t+2*n}getUpperLeft(t,n){let{anchorPosition:a}=this.options,r=a===ir.BOTTOM_RIGHT||a===ir.TOP_RIGHT,s=a===ir.BOTTOM_LEFT||a===ir.BOTTOM_RIGHT,i=this.measureWidth(t),o=this.measureHeight(),l=r?this.anchor.x-i:this.anchor.x,c=s?this.anchor.y-o:this.anchor.y;if(n){let{width:u,height:p}=n,d=Math.max(Math.min(l,u-i),0),h=Math.max(Math.min(c,p-o),0);return{x:d,y:h}}return{x:l,y:c}}draw(t){let n=Ji(t),a=Dn(n),{backgroundColor:r,fontColor:s,fontSize:i,fontStyle:o,padding:l}=this.options;a.font=`${i}px ${o}`;let c=this.measureWidth(a),u=this.measureHeight();a.fillStyle=r;let p=this.getUpperLeft(a,n);a.fillRect(p.x,p.y,c,u),a.fillStyle=s,this.text.forEach((d,h)=>{let m=l+p.x,f=l+p.y+(h+1)*i;a.fillText(d,m,f)})}};var sw=class{constructor(t={}){let{boxColor:n,lineWidth:a,label:r,drawLabelOptions:s}=t;this.boxColor=n||"rgba(0, 0, 255, 1)",this.lineWidth=a||2,this.label=r;let i={anchorPosition:ir.BOTTOM_LEFT,backgroundColor:this.boxColor};this.drawLabelOptions=new Ip({...i,...s})}},jm=class{constructor(t,n={}){this.box=new lt(t),this.options=new sw(n)}draw(t){let n=Dn(t),{boxColor:a,lineWidth:r}=this.options,{x:s,y:i,width:o,height:l}=this.box;n.strokeStyle=a,n.lineWidth=r,n.strokeRect(s,i,o,l);let{label:c}=this.options;c&&new fs([c],{x:s-r/2,y:i},this.options.drawLabelOptions).draw(t)}};function ure(e,t){(Array.isArray(t)?t:[t]).forEach(a=>{let r=a instanceof gt?a.score:sr(a)?a.detection.score:void 0,s=a instanceof gt?a.box:sr(a)?a.detection.box:new lt(a),i=r?`${Ki(r)}`:void 0;new jm(s,{label:i}).draw(e)})}function Tp(e){let{Image:t,Video:n}=rt.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function iw(e){return new Promise((t,n)=>{if(e instanceof rt.getEnv().Canvas||Tp(e))return t(null);function a(s){!s.currentTarget||(s.currentTarget.removeEventListener("load",r),s.currentTarget.removeEventListener("error",a),n(s))}function r(s){!s.currentTarget||(s.currentTarget.removeEventListener("load",r),s.currentTarget.removeEventListener("error",a),t(s))}e.addEventListener("load",r),e.addEventListener("error",a)})}function ow(e){return new Promise((t,n)=>{e instanceof Blob||n(new Error("bufferToImage - expected buf to be of type: Blob"));let a=new FileReader;a.onload=()=>{typeof a.result!="string"&&n(new Error("bufferToImage - expected reader.result to be a string, in onload"));let r=rt.getEnv().createImageElement();r.onload=()=>t(r),r.onerror=n,r.src=a.result},a.onerror=n,a.readAsDataURL(e)})}function Qi(e){let{Image:t,Video:n}=rt.getEnv();return e instanceof t?new bn(e.naturalWidth,e.naturalHeight):e instanceof n?new bn(e.videoWidth,e.videoHeight):new bn(e.width,e.height)}function Zi({width:e,height:t}){let{createCanvasElement:n}=rt.getEnv(),a=n();return a.width=e,a.height=t,a}function Np(e,t){let{ImageData:n}=rt.getEnv();if(!(e instanceof n)&&!Tp(e))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:a,height:r}=t||Qi(e),s=Zi({width:a,height:r});return e instanceof n?Dn(s).putImageData(e,0,0):Dn(s).drawImage(e,0,0,a,r),s}async function lw(e,t){let n=t||rt.getEnv().createCanvasElement(),[a,r,s]=e.shape.slice(aa(e)?1:0),i=D(()=>e.as3D(a,r,s).toInt());return await ki.toPixels(i,n),i.dispose(),n}function qm(e){let{Image:t,Canvas:n,Video:a}=rt.getEnv();return e instanceof t||e instanceof n||e instanceof a}function uw(e,t,n=!1){let{Image:a,Canvas:r}=rt.getEnv();if(!(e instanceof a||e instanceof r))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return Zi({width:1,height:1});let s=Qi(e),i=t/Math.max(s.height,s.width),o=i*s.width,l=i*s.height,c=Zi({width:t,height:t}),u=e instanceof r?e:Np(e),p=Math.abs(o-l)/2,d=n&&o<l?p:0,h=n&&l<o?p:0;return u.width>0&&u.height>0&&Dn(c).drawImage(u,d,h,o,l),c}var _r=class{constructor(t,n=!1){this._imageTensors=[];this._canvases=[];this._treatAsBatchInput=!1;this._inputDimensions=[];if(!Array.isArray(t))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${t}`);this._treatAsBatchInput=n,this._batchSize=t.length,t.forEach((a,r)=>{if(Sr(a)){this._imageTensors[r]=a,this._inputDimensions[r]=a.shape;return}if(aa(a)){let i=a.shape[0];if(i!==1)throw new Error(`NetInput - tf.Tensor4D with batchSize ${i} passed, but not supported in input array`);this._imageTensors[r]=a,this._inputDimensions[r]=a.shape.slice(1);return}let s=a instanceof rt.getEnv().Canvas?a:Np(a);this._canvases[r]=s,this._inputDimensions[r]=[s.height,s.width,3]})}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return rr(this.batchSize,0,1).map((t,n)=>this.getReshapedInputDimensions(n))}getInput(t){return this.canvases[t]||this.imageTensors[t]}getInputDimensions(t){return this._inputDimensions[t]}getInputHeight(t){return this._inputDimensions[t][0]}getInputWidth(t){return this._inputDimensions[t][1]}getReshapedInputDimensions(t){if(typeof this.inputSize!="number")throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");let n=this.getInputWidth(t),a=this.getInputHeight(t);return Kv({width:n,height:a},this.inputSize)}toBatchTensor(t,n=!0){return this._inputSize=t,D(()=>{let a=rr(this.batchSize,0,1).map(s=>{let i=this.getInput(s);if(i instanceof Ee){let o=aa(i)?i:hn(i);return o=Qv(o,n),(o.shape[1]!==t||o.shape[2]!==t)&&(o=Xa.resizeBilinear(o,[t,t],!1,!1)),o.as3D(t,t,3)}if(i instanceof rt.getEnv().Canvas)return ki.fromPixels(uw(i,t,n));throw new Error(`toBatchTensor - at batchIdx ${s}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${i}`)});return Dt(a.map(s=>ue(s,"float32"))).as4D(this.batchSize,t,t,3)})}};async function ht(e){if(e instanceof _r)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=r=>Array.isArray(e)?` at input index ${r}:`:"",a=t.map(Ji);return a.forEach((r,s)=>{if(!qm(r)&&!Sr(r)&&!aa(r))throw typeof t[s]=="string"?new Error(`toNetInput -${n(s)} string passed, but could not resolve HTMLElement for element id ${t[s]}`):new Error(`toNetInput -${n(s)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(aa(r)){let i=r.shape[0];if(i!==1)throw new Error(`toNetInput -${n(s)} tf.Tensor4D with batchSize ${i} passed, but not supported in input array`)}}),await Promise.all(a.map(r=>qm(r)&&iw(r))),new _r(a,Array.isArray(e))}async function xu(e,t){let{Canvas:n}=rt.getEnv(),a=e;if(!(e instanceof n)){let i=await ht(e);if(i.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let o=i.getInput(0);a=o instanceof n?o:await lw(o)}let r=Dn(a);return t.map(i=>i instanceof gt?i.forSize(a.width,a.height).box.floor():i).map(i=>i.clipAtImageBorders(a.width,a.height)).map(({x:i,y:o,width:l,height:c})=>{let u=Zi({width:l,height:c});return l>0&&c>0&&Dn(u).putImageData(r.getImageData(i,o,l,c),0,0),u})}async function vu(e,t){if(!Sr(e)&&!aa(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(aa(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return D(()=>{let[n,a,r]=e.shape.slice(aa(e)?1:0);return t.map(o=>o instanceof gt?o.forSize(a,n).box:o).map(o=>o.clipAtImageBorders(a,n)).map(({x:o,y:l,width:c,height:u})=>Wl(e.as3D(n,a,r),[l,o,0],[u,c,r]))})}async function eo(e,t){let{fetch:n}=rt.getEnv(),a=await n(e,t);if(!(a.status<400))throw new Error(`failed to fetch: (${a.status}) ${a.statusText}, from url: ${a.url}`);return a}async function cre(e){let t=await eo(e),n=await t.blob();if(!n.type.startsWith("image/"))throw new Error(`fetchImage - expected blob type to be of type image/*, instead have: ${n.type}, for url: ${t.url}`);return ow(n)}async function cw(e){return(await eo(e)).json()}async function pre(e){return new Float32Array(await(await eo(e)).arrayBuffer())}function Km(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if(e==="/")return{modelBaseUri:"/",manifestUri:`/${n}`};let a=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"";e=e.replace(a,"");let r=e.split("/").filter(o=>o),s=e.endsWith(".json")?r[r.length-1]:n,i=a+(e.endsWith(".json")?r.slice(0,r.length-1):r).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:i==="/"?`/${s}`:`${i}/${s}`}}async function pw(e,t){let{manifestUri:n,modelBaseUri:a}=Km(e,t),r=await cw(n);return jt.loadWeights(r,a)}function dre(e,t,n=!1){let{width:a,height:r}=n?Qi(t):t;return e.width=a,e.height=r,{width:a,height:r}}var ln=class{constructor(t){this._params=void 0;this._paramMappings=[];this._name=t}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(t){let{obj:n,objProp:a}=this.traversePropertyPath(t);return n[a]}reassignParamFromPath(t,n){let{obj:a,objProp:r}=this.traversePropertyPath(t);a[r].dispose(),a[r]=n}getParamList(){return this._paramMappings.map(({paramPath:t})=>({path:t,tensor:this.getParamFromPath(t)}))}getTrainableParams(){return this.getParamList().filter(t=>t.tensor instanceof Hr)}getFrozenParams(){return this.getParamList().filter(t=>!(t.tensor instanceof Hr))}variable(){this.getFrozenParams().forEach(({path:t,tensor:n})=>{this.reassignParamFromPath(t,n.variable())})}freeze(){this.getTrainableParams().forEach(({path:t,tensor:n})=>{let a=Yn(n.dataSync());n.dispose(),this.reassignParamFromPath(t,a)})}dispose(t=!0){this.getParamList().forEach(n=>{if(t&&n.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${n.path}`);n.tensor.dispose()}),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map(({tensor:t})=>Array.from(t.dataSync())).reduce((t,n)=>t.concat(n)))}async load(t){if(t instanceof Float32Array){this.extractWeights(t);return}await this.loadFromUri(t)}async loadFromUri(t){if(t&&typeof t!="string")throw new Error(`${this._name}.loadFromUri - expected model uri`);let n=await pw(t,this.getDefaultModelName());this.loadFromWeightMap(n)}async loadFromDisk(t){if(t&&typeof t!="string")throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:n}=rt.getEnv(),{manifestUri:a,modelBaseUri:r}=Km(t,this.getDefaultModelName()),s=c=>Promise.all(c.map(u=>n(u).then(p=>p.buffer))),i=jt.weightsLoaderFactory(s),o=JSON.parse((await n(a)).toString()),l=await i(o,r);this.loadFromWeightMap(l)}loadFromWeightMap(t){let{paramMappings:n,params:a}=this.extractParamsFromWeightMap(t);this._paramMappings=n,this._params=a}extractWeights(t){let{paramMappings:n,params:a}=this.extractParams(t);this._paramMappings=n,this._params=a}traversePropertyPath(t){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let n=t.split("/").reduce((s,i)=>{if(!s.nextObj.hasOwnProperty(i))throw new Error(`traversePropertyPath - object does not have property ${i}, for path ${t}`);return{obj:s.nextObj,objProp:i,nextObj:s.nextObj[i]}},{nextObj:this.params}),{obj:a,objProp:r}=n;if(!a||!r||!(a[r]instanceof Ee))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${t}`);return{obj:a,objProp:r}}};function Rn(e,t,n){return D(()=>{let a=Ei(e,t.depthwise_filter,t.pointwise_filter,n,"same");return a=J(a,t.bias),a})}function Xm(e,t,n=!1){return D(()=>{let a=qe(n?J(At(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):Rn(e,t.conv0,[2,2])),r=Rn(a,t.conv1,[1,1]),s=qe(J(a,r)),i=Rn(s,t.conv2,[1,1]);return qe(J(a,J(r,i)))})}function Sp(e,t,n=!1,a=!0){return D(()=>{let r=qe(n?J(At(e,t.conv0.filters,a?[2,2]:[1,1],"same"),t.conv0.bias):Rn(e,t.conv0,a?[2,2]:[1,1])),s=Rn(r,t.conv1,[1,1]),i=qe(J(r,s)),o=Rn(i,t.conv2,[1,1]),l=qe(J(r,J(s,o))),c=Rn(l,t.conv3,[1,1]);return qe(J(r,J(s,J(o,c))))})}function to(e,t,n="same",a=!1){return D(()=>{let r=J(At(e,t.filters,[1,1],n),t.bias);return a?qe(r):r})}function xn(e,t){Object.keys(e).forEach(n=>{t.some(a=>a.originalPath===n)||e[n].dispose()})}function wu(e,t){return(n,a,r,s)=>{let i=Ca(e(n*a*r*r),[r,r,n,a]),o=Qe(e(a));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function Ym(e,t){return(n,a,r)=>{let s=Sa(e(n*a),[n,a]),i=Qe(e(a));return t.push({paramPath:`${r}/weights`},{paramPath:`${r}/bias`}),{weights:s,bias:i}}}var Jm=class{constructor(t,n,a){this.depthwise_filter=t;this.pointwise_filter=n;this.bias=a}};function ku(e,t){return(n,a,r)=>{let s=Ca(e(3*3*n),[3,3,n,1]),i=Ca(e(n*a),[1,1,n,a]),o=Qe(e(a));return t.push({paramPath:`${r}/depthwise_filter`},{paramPath:`${r}/pointwise_filter`},{paramPath:`${r}/bias`}),new Jm(s,i,o)}}function Iu(e){return t=>{let n=e(`${t}/depthwise_filter`,4),a=e(`${t}/pointwise_filter`,4),r=e(`${t}/bias`,1);return new Jm(n,a,r)}}function jn(e,t){return(n,a,r)=>{let s=e[n];if(!qi(s,a))throw new Error(`expected weightMap[${n}] to be a Tensor${a}D, instead have ${s}`);return t.push({originalPath:n,paramPath:r||n}),s}}function vn(e){let t=e;function n(r){let s=t.slice(0,r);return t=t.slice(r),s}function a(){return t}return{extractWeights:n,getRemainingWeights:a}}function Qm(e,t){let n=wu(e,t),a=ku(e,t);function r(i,o,l,c=!1){let u=c?n(i,o,3,`${l}/conv0`):a(i,o,`${l}/conv0`),p=a(o,o,`${l}/conv1`),d=a(o,o,`${l}/conv2`);return{conv0:u,conv1:p,conv2:d}}function s(i,o,l,c=!1){let{conv0:u,conv1:p,conv2:d}=r(i,o,l,c),h=a(o,o,`${l}/conv3`);return{conv0:u,conv1:p,conv2:d,conv3:h}}return{extractDenseBlock3Params:r,extractDenseBlock4Params:s}}function qS(e){let t=[],{extractWeights:n,getRemainingWeights:a}=vn(e),{extractDenseBlock4Params:r}=Qm(n,t),s=r(3,32,"dense0",!0),i=r(32,64,"dense1"),o=r(64,128,"dense2"),l=r(128,256,"dense3");if(a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:l}}}function Zm(e){return t=>{let n=e(`${t}/filters`,4),a=e(`${t}/bias`,1);return{filters:n,bias:a}}}function ef(e,t){let n=jn(e,t),a=Zm(n),r=Iu(n);function s(o,l=!1){let c=l?a(`${o}/conv0`):r(`${o}/conv0`),u=r(`${o}/conv1`),p=r(`${o}/conv2`);return{conv0:c,conv1:u,conv2:p}}function i(o,l=!1){let c=l?a(`${o}/conv0`):r(`${o}/conv0`),u=r(`${o}/conv1`),p=r(`${o}/conv2`),d=r(`${o}/conv3`);return{conv0:c,conv1:u,conv2:p,conv3:d}}return{extractDenseBlock3Params:s,extractDenseBlock4Params:i}}function KS(e){let t=[],{extractDenseBlock4Params:n}=ef(e,t),a={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return xn(e,t),{params:a,paramMappings:t}}var Cp=class extends ln{constructor(){super("FaceFeatureExtractor")}forwardInput(t){let{params:n}=this;if(!n)throw new Error("FaceFeatureExtractor - load model before inference");return D(()=>{let a=ue(t.toBatchTensor(112,!0),"float32"),s=La(a,[122.782,117.001,104.298]).div(255),i=Sp(s,n.dense0,!0);return i=Sp(i,n.dense1),i=Sp(i,n.dense2),i=Sp(i,n.dense3),i=Qn(i,[7,7],[2,2],"valid"),i})}async forward(t){return this.forwardInput(await ht(t))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(t){return KS(t)}extractParams(t){return qS(t)}};function _p(e,t){return D(()=>J(ze(e,t.weights),t.bias))}function XS(e,t,n){let a=[],{extractWeights:r,getRemainingWeights:s}=vn(e),o=Ym(r,a)(t,n,"fc");if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:a,params:{fc:o}}}function YS(e){let t=[],n=jn(e,t);function a(s){let i=n(`${s}/weights`,2),o=n(`${s}/bias`,1);return{weights:i,bias:o}}let r={fc:a("fc")};return xn(e,t),{params:r,paramMappings:t}}function tf(e){let t={},n={};return Object.keys(e).forEach(a=>{let r=a.startsWith("fc")?n:t;r[a]=e[a]}),{featureExtractorMap:t,classifierMap:n}}var Ep=class extends ln{constructor(t,n){super(t);this._faceFeatureExtractor=n}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(t){let{params:n}=this;if(!n)throw new Error(`${this._name} - load model before inference`);return D(()=>{let a=t instanceof _r?this.faceFeatureExtractor.forwardInput(t):t;return _p(a.as2D(a.shape[0],-1),n.fc)})}dispose(t=!0){this.faceFeatureExtractor.dispose(t),super.dispose(t)}loadClassifierParams(t){let{params:n,paramMappings:a}=this.extractClassifierParams(t);this._params=n,this._paramMappings=a}extractClassifierParams(t){return XS(t,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(t){let{featureExtractorMap:n,classifierMap:a}=tf(t);return this.faceFeatureExtractor.loadFromWeightMap(n),YS(a)}extractParams(t){let n=this.getClassifierChannelsIn(),a=this.getClassifierChannelsOut(),r=a*n+a,s=t.slice(0,t.length-r),i=t.slice(t.length-r);return this.faceFeatureExtractor.extractWeights(s),this.extractClassifierParams(i)}};var dw=["neutral","happy","sad","angry","fearful","disgusted","surprised"],gs=class{constructor(t){if(t.length!==7)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${t.length}`);dw.forEach((n,a)=>{this[n]=t[a]})}asSortedArray(){return dw.map(t=>({expression:t,probability:this[t]})).sort((t,n)=>n.probability-t.probability)}};var nf=class extends Ep{constructor(t=new Cp){super("FaceExpressionNet",t)}forwardInput(t){return D(()=>Na(this.runNet(t)))}async forward(t){return this.forwardInput(await ht(t))}async predictExpressions(t){let n=await ht(t),a=await this.forwardInput(n),r=await Promise.all(ut(a).map(async i=>{let o=i.dataSync();return i.dispose(),o}));a.dispose();let s=r.map(i=>new gs(i));return n.isBatchInput?s:s[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function hw(e){return e.expressions instanceof gs}function af(e,t){return{...e,...{expressions:t}}}function hre(e,t,n=.1,a){(Array.isArray(t)?t:[t]).forEach(s=>{let i=s instanceof gs?s:hw(s)?s.expressions:void 0;if(!i)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let l=i.asSortedArray().filter(p=>p.probability>n),c=sr(s)?s.detection.box.bottomLeft:a||new De(0,0);new fs(l.map(p=>`${p.expression} (${Ki(p.probability)})`),c).draw(e)})}function no(e){return sr(e)&&e.landmarks instanceof ra&&e.unshiftedLandmarks instanceof ra&&e.alignedRect instanceof gt}function mre(e){let t=(o,l,c,u)=>Math.atan2(u-l,c-o)%Math.PI,n=o=>o*180/Math.PI,a={roll:void 0,pitch:void 0,yaw:void 0};if(!e||!e._positions||e._positions.length!==68)return a;let r=e._positions;a.roll=-t(r[36]._x,r[36]._y,r[45]._x,r[45]._y),a.pitch=t(0,Math.abs(r[0]._x-r[30]._x)/r[30]._x,Math.PI,Math.abs(r[16]._x-r[30]._x)/r[30]._x);let s=r.reduce((o,l)=>o<l._y?o:l._y,Infinity),i=r.reduce((o,l)=>o>l._y?o:l._y,-Infinity);return a.yaw=Math.PI*(e._imgDims._height/(i-s)/1.4-1),a}function Tu(e,t){let{box:n}=e.detection,a=t.shiftBy(n.x,n.y),r=a.align(),{imageDims:s}=e.detection,i=new gt(e.detection.score,r.rescale(s.reverse()),s),o=mre(t);return{...e,...{landmarks:a,unshiftedLandmarks:t,alignedRect:i,angle:o}}}var mw=class{constructor(t={}){let{drawLines:n=!0,drawPoints:a=!0,lineWidth:r,lineColor:s,pointSize:i,pointColor:o}=t;this.drawLines=n,this.drawPoints=a,this.lineWidth=r||1,this.pointSize=i||2,this.lineColor=s||"rgba(0, 255, 255, 1)",this.pointColor=o||"rgba(255, 0, 255, 1)"}},fw=class{constructor(t,n={}){this.faceLandmarks=t,this.options=new mw(n)}draw(t){let n=Dn(t),{drawLines:a,drawPoints:r,lineWidth:s,lineColor:i,pointSize:o,pointColor:l}=this.options;if(a&&this.faceLandmarks instanceof bu&&(n.strokeStyle=i,n.lineWidth=s,Nr(n,this.faceLandmarks.getJawOutline()),Nr(n,this.faceLandmarks.getLeftEyeBrow()),Nr(n,this.faceLandmarks.getRightEyeBrow()),Nr(n,this.faceLandmarks.getNose()),Nr(n,this.faceLandmarks.getLeftEye(),!0),Nr(n,this.faceLandmarks.getRightEye(),!0),Nr(n,this.faceLandmarks.getMouth(),!0)),r){n.strokeStyle=l,n.fillStyle=l;let c=u=>{n.beginPath(),n.arc(u.x,u.y,o,0,2*Math.PI),n.fill()};this.faceLandmarks.positions.forEach(c)}}};function fre(e,t){(Array.isArray(t)?t:[t]).forEach(a=>{let r=a instanceof ra?a:no(a)?a.landmarks:void 0;if(!r)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new fw(r).draw(e)})}var QS="1.1.6";function gre(e,t){let n=wu(e,t),a=ku(e,t);function r(i,o,l){let c=a(i,o,`${l}/separable_conv0`),u=a(o,o,`${l}/separable_conv1`),p=n(i,o,1,`${l}/expansion_conv`);return{separable_conv0:c,separable_conv1:u,expansion_conv:p}}function s(i,o){let l=a(i,i,`${o}/separable_conv0`),c=a(i,i,`${o}/separable_conv1`),u=a(i,i,`${o}/separable_conv2`);return{separable_conv0:l,separable_conv1:c,separable_conv2:u}}return{extractConvParams:n,extractSeparableConvParams:a,extractReductionBlockParams:r,extractMainBlockParams:s}}function ZS(e,t){let n=[],{extractWeights:a,getRemainingWeights:r}=vn(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:l}=gre(a,n),c=s(3,32,3,"entry_flow/conv_in"),u=o(32,64,"entry_flow/reduction_block_0"),p=o(64,128,"entry_flow/reduction_block_1"),d={conv_in:c,reduction_block_0:u,reduction_block_1:p},h={};rr(t,0,1).forEach(y=>{h[`main_block_${y}`]=l(128,`middle_flow/main_block_${y}`)});let m=o(128,256,"exit_flow/reduction_block"),f=i(256,512,"exit_flow/separable_conv"),g={reduction_block:m,separable_conv:f};if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:n,params:{entry_flow:d,middle_flow:h,exit_flow:g}}}function yre(e,t){let n=jn(e,t),a=Zm(n),r=Iu(n);function s(o){let l=r(`${o}/separable_conv0`),c=r(`${o}/separable_conv1`),u=a(`${o}/expansion_conv`);return{separable_conv0:l,separable_conv1:c,expansion_conv:u}}function i(o){let l=r(`${o}/separable_conv0`),c=r(`${o}/separable_conv1`),u=r(`${o}/separable_conv2`);return{separable_conv0:l,separable_conv1:c,separable_conv2:u}}return{extractConvParams:a,extractSeparableConvParams:r,extractReductionBlockParams:s,extractMainBlockParams:i}}function eC(e,t){let n=[],{extractConvParams:a,extractSeparableConvParams:r,extractReductionBlockParams:s,extractMainBlockParams:i}=yre(e,n),o=a("entry_flow/conv_in"),l=s("entry_flow/reduction_block_0"),c=s("entry_flow/reduction_block_1"),u={conv_in:o,reduction_block_0:l,reduction_block_1:c},p={};rr(t,0,1).forEach(f=>{p[`main_block_${f}`]=i(`middle_flow/main_block_${f}`)});let d=s("exit_flow/reduction_block"),h=r("exit_flow/separable_conv"),m={reduction_block:d,separable_conv:h};return xn(e,n),{params:{entry_flow:u,middle_flow:p,exit_flow:m},paramMappings:n}}function tC(e,t,n){return J(At(e,t.filters,n,"same"),t.bias)}function gw(e,t,n=!0){let a=n?qe(e):e;return a=Rn(a,t.separable_conv0,[1,1]),a=Rn(qe(a),t.separable_conv1,[1,1]),a=$t(a,[3,3],[2,2],"same"),a=J(a,tC(e,t.expansion_conv,[2,2])),a}function bre(e,t){let n=Rn(qe(e),t.separable_conv0,[1,1]);return n=Rn(qe(n),t.separable_conv1,[1,1]),n=Rn(qe(n),t.separable_conv2,[1,1]),n=J(n,e),n}var yw=class extends ln{constructor(t){super("TinyXception");this._numMainBlocks=t}forwardInput(t){let{params:n}=this;if(!n)throw new Error("TinyXception - load model before inference");return D(()=>{let a=ue(t.toBatchTensor(112,!0),"float32"),s=La(a,[122.782,117.001,104.298]).div(255),i=qe(tC(s,n.entry_flow.conv_in,[2,2]));return i=gw(i,n.entry_flow.reduction_block_0,!1),i=gw(i,n.entry_flow.reduction_block_1),rr(this._numMainBlocks,0,1).forEach(o=>{i=bre(i,n.middle_flow[`main_block_${o}`])}),i=gw(i,n.exit_flow.reduction_block),i=qe(Rn(i,n.exit_flow.separable_conv,[1,1])),i})}async forward(t){return this.forwardInput(await ht(t))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(t){return eC(t,this._numMainBlocks)}extractParams(t){return ZS(t,this._numMainBlocks)}};function nC(e){let t=[],{extractWeights:n,getRemainingWeights:a}=vn(e),r=Ym(n,t),s=r(512,1,"fc/age"),i=r(512,2,"fc/gender");if(a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}function aC(e){let t=[],n=jn(e,t);function a(s){let i=n(`${s}/weights`,2),o=n(`${s}/bias`,1);return{weights:i,bias:o}}let r={fc:{age:a("fc/age"),gender:a("fc/gender")}};return xn(e,t),{params:r,paramMappings:t}}var Er;(function(e){e.FEMALE="female",e.MALE="male"})(Er||(Er={}));var rf=class extends ln{constructor(t=new yw(2)){super("AgeGenderNet");this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(t){let{params:n}=this;if(!n)throw new Error(`${this._name} - load model before inference`);return D(()=>{let a=t instanceof _r?this.faceFeatureExtractor.forwardInput(t):t,r=Qn(a,[7,7],[2,2],"valid").as2D(a.shape[0],-1),s=_p(r,n.fc.age).as1D(),i=_p(r,n.fc.gender);return{age:s,gender:i}})}forwardInput(t){return D(()=>{let{age:n,gender:a}=this.runNet(t);return{age:n,gender:Na(a)}})}async forward(t){return this.forwardInput(await ht(t))}async predictAgeAndGender(t){let n=await ht(t),a=await this.forwardInput(n),r=ut(a.age),s=ut(a.gender),i=r.map((l,c)=>({ageTensor:l,genderTensor:s[c]})),o=await Promise.all(i.map(async({ageTensor:l,genderTensor:c})=>{let u=l.dataSync()[0],p=c.dataSync()[0],d=p>.5,h=d?Er.MALE:Er.FEMALE,m=d?p:1-p;return l.dispose(),c.dispose(),{age:u,gender:h,genderProbability:m}}));return a.age.dispose(),a.gender.dispose(),n.isBatchInput?o:o[0]}getDefaultModelName(){return"age_gender_model"}dispose(t=!0){this.faceFeatureExtractor.dispose(t),super.dispose(t)}loadClassifierParams(t){let{params:n,paramMappings:a}=this.extractClassifierParams(t);this._params=n,this._paramMappings=a}extractClassifierParams(t){return nC(t)}extractParamsFromWeightMap(t){let{featureExtractorMap:n,classifierMap:a}=tf(t);return this.faceFeatureExtractor.loadFromWeightMap(n),aC(a)}extractParams(t){let n=512*1+1+(512*2+2),a=t.slice(0,t.length-n),r=t.slice(t.length-n);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(r)}};var Fp=class extends Ep{postProcess(t,n,a){let r=a.map(({width:i,height:o})=>{let l=n/Math.max(o,i);return{width:i*l,height:o*l}}),s=r.length;return D(()=>{let i=(p,d)=>Dt([Cn([68],p,"float32"),Cn([68],d,"float32")],1).as2D(1,136).as1D(),o=(p,d)=>{let{width:h,height:m}=r[p];return d(h,m)?Math.abs(h-m)/2:0},l=p=>o(p,(d,h)=>d<h),c=p=>o(p,(d,h)=>h<d);return t.mul(Cn([s,136],n,"float32")).sub(Dt(Array.from(Array(s),(p,d)=>i(l(d),c(d))))).div(Dt(Array.from(Array(s),(p,d)=>i(r[d].width,r[d].height))))})}forwardInput(t){return D(()=>{let n=this.runNet(t);return this.postProcess(n,t.inputSize,t.inputDimensions.map(([a,r])=>({height:a,width:r})))})}async forward(t){return this.forwardInput(await ht(t))}async detectLandmarks(t){let n=await ht(t),a=D(()=>ut(this.forwardInput(n))),r=await Promise.all(a.map(async(s,i)=>{let o=Array.from(s.dataSync()),l=o.filter((u,p)=>Um(p)),c=o.filter((u,p)=>!Um(p));return new bu(Array(68).fill(0).map((u,p)=>new De(l[p],c[p])),{height:n.getInputHeight(i),width:n.getInputWidth(i)})}));return a.forEach(s=>s.dispose()),n.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}};var Nu=class extends Fp{constructor(t=new Cp){super("FaceLandmark68Net",t)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};function rC(e){let t=[],{extractDenseBlock3Params:n}=ef(e,t),a={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return xn(e,t),{params:a,paramMappings:t}}function sC(e){let t=[],{extractWeights:n,getRemainingWeights:a}=vn(e),{extractDenseBlock3Params:r}=Qm(n,t),s=r(3,32,"dense0",!0),i=r(32,64,"dense1"),o=r(64,128,"dense2");if(a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}var bw=class extends ln{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(t){let{params:n}=this;if(!n)throw new Error("TinyFaceFeatureExtractor - load model before inference");return D(()=>{let a=ue(t.toBatchTensor(112,!0),"float32"),s=La(a,[122.782,117.001,104.298]).div(255),i=Xm(s,n.dense0,!0);return i=Xm(i,n.dense1),i=Xm(i,n.dense2),i=Qn(i,[14,14],[2,2],"valid"),i})}async forward(t){return this.forwardInput(await ht(t))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(t){return rC(t)}extractParams(t){return sC(t)}};var sf=class extends Fp{constructor(t=new bw){super("FaceLandmark68TinyNet",t)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}};var iC=class extends Nu{};function oC(e,t){return J(W(e,t.weights),t.biases)}function xw(e,t,n,a,r="same"){let{filters:s,bias:i}=t.conv,o=At(e,s,n,r);return o=J(o,i),o=oC(o,t.scale),a?qe(o):o}function lC(e,t){return xw(e,t,[1,1],!0)}function vw(e,t){return xw(e,t,[1,1],!1)}function of(e,t){return xw(e,t,[2,2],!0,"valid")}function xre(e,t){function n(o,l,c){let u=e(o),p=u.length/(l*c*c);if(qv(p))throw new Error(`depth has to be an integer: ${p}, weights.length: ${u.length}, numFilters: ${l}, filterSize: ${c}`);return D(()=>Ve(Ca(u,[l,p,c,c]),[2,3,1,0]))}function a(o,l,c,u){let p=n(o,l,c),d=Qe(e(l));return t.push({paramPath:`${u}/filters`},{paramPath:`${u}/bias`}),{filters:p,bias:d}}function r(o,l){let c=Qe(e(o)),u=Qe(e(o));return t.push({paramPath:`${l}/weights`},{paramPath:`${l}/biases`}),{weights:c,biases:u}}function s(o,l,c,u){let p=a(o,l,c,`${u}/conv`),d=r(l,`${u}/scale`);return{conv:p,scale:d}}function i(o,l,c,u,p=!1){let d=s((p?.5:1)*o,l,c,`${u}/conv1`),h=s(o,l,c,`${u}/conv2`);return{conv1:d,conv2:h}}return{extractConvLayerParams:s,extractResidualLayerParams:i}}function uC(e){let{extractWeights:t,getRemainingWeights:n}=vn(e),a=[],{extractConvLayerParams:r,extractResidualLayerParams:s}=xre(t,a),i=r(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),c=s(9216,32,3,"conv32_3"),u=s(36864,64,3,"conv64_down",!0),p=s(36864,64,3,"conv64_1"),d=s(36864,64,3,"conv64_2"),h=s(36864,64,3,"conv64_3"),m=s(147456,128,3,"conv128_down",!0),f=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),v=s(589824,256,3,"conv256_down_out"),T=D(()=>Ve(Sa(t(256*128),[128,256]),[1,0]));if(a.push({paramPath:"fc"}),n().length!==0)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:l,conv32_3:c,conv64_down:u,conv64_1:p,conv64_2:d,conv64_3:h,conv128_down:m,conv128_1:f,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:v,fc:T},paramMappings:a}}function vre(e,t){let n=jn(e,t);function a(i){let o=n(`${i}/scale/weights`,1),l=n(`${i}/scale/biases`,1);return{weights:o,biases:l}}function r(i){let o=n(`${i}/conv/filters`,4),l=n(`${i}/conv/bias`,1),c=a(i);return{conv:{filters:o,bias:l},scale:c}}function s(i){return{conv1:r(`${i}/conv1`),conv2:r(`${i}/conv2`)}}return{extractConvLayerParams:r,extractResidualLayerParams:s}}function cC(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:a}=vre(e,t),r=n("conv32_down"),s=a("conv32_1"),i=a("conv32_2"),o=a("conv32_3"),l=a("conv64_down"),c=a("conv64_1"),u=a("conv64_2"),p=a("conv64_3"),d=a("conv128_down"),h=a("conv128_1"),m=a("conv128_2"),f=a("conv256_down"),g=a("conv256_1"),y=a("conv256_2"),b=a("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!jv(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);let v={conv32_down:r,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:l,conv64_1:c,conv64_2:u,conv64_3:p,conv128_down:d,conv128_1:h,conv128_2:m,conv256_down:f,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return xn(e,t),{params:v,paramMappings:t}}function za(e,t){let n=lC(e,t.conv1);return n=vw(n,t.conv2),n=J(n,e),n=qe(n),n}function Ap(e,t){let n=of(e,t.conv1);n=vw(n,t.conv2);let a=Qn(e,2,2,"valid"),r=xt(a.shape),s=a.shape[3]!==n.shape[3];if(a.shape[1]!==n.shape[1]||a.shape[2]!==n.shape[2]){let o=[...n.shape];o[1]=1;let l=xt(o);n=Je([n,l],1);let c=[...n.shape];c[2]=1;let u=xt(c);n=Je([n,u],2)}return a=s?Je([a,r],3):a,n=J(a,n),n=qe(n),n}var Su=class extends ln{constructor(){super("FaceRecognitionNet")}forwardInput(t){let{params:n}=this;if(!n)throw new Error("FaceRecognitionNet - load model before inference");return D(()=>{let a=ue(t.toBatchTensor(150,!0),"float32"),s=La(a,[122.782,117.001,104.298]).div(255),i=of(s,n.conv32_down);i=$t(i,3,2,"valid"),i=za(i,n.conv32_1),i=za(i,n.conv32_2),i=za(i,n.conv32_3),i=Ap(i,n.conv64_down),i=za(i,n.conv64_1),i=za(i,n.conv64_2),i=za(i,n.conv64_3),i=Ap(i,n.conv128_down),i=za(i,n.conv128_1),i=za(i,n.conv128_2),i=Ap(i,n.conv256_down),i=za(i,n.conv256_1),i=za(i,n.conv256_2),i=Ap(i,n.conv256_down_out);let o=i.mean([1,2]);return ze(o,n.fc)})}async forward(t){return this.forwardInput(await ht(t))}async computeFaceDescriptor(t){var s;if((s=t==null?void 0:t.shape)==null?void 0:s.some(i=>i<=0))return new Float32Array(128);let n=await ht(t),a=D(()=>ut(this.forwardInput(n))),r=await Promise.all(a.map(i=>i.data()));return a.forEach(i=>i.dispose()),n.isBatchInput?r:r[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(t){return cC(t)}extractParams(t){return uC(t)}};function wre(e){let t=new Su;return t.extractWeights(e),t}function lf(e,t){return{...e,...{descriptor:t}}}function kre(e){return typeof e.age=="number"}function uf(e,t){return{...e,...{age:t}}}function Ire(e){return(e.gender===Er.MALE||e.gender===Er.FEMALE)&&fu(e.genderProbability)}function cf(e,t,n){return{...e,...{gender:t,genderProbability:n}}}function Tre(e,t){function n(l,c){let u=Ca(e(3*3*l),[3,3,l,1]),p=Qe(e(l)),d=Qe(e(l)),h=Qe(e(l)),m=Qe(e(l));return t.push({paramPath:`${c}/filters`},{paramPath:`${c}/batch_norm_scale`},{paramPath:`${c}/batch_norm_offset`},{paramPath:`${c}/batch_norm_mean`},{paramPath:`${c}/batch_norm_variance`}),{filters:u,batch_norm_scale:p,batch_norm_offset:d,batch_norm_mean:h,batch_norm_variance:m}}function a(l,c,u,p,d){let h=Ca(e(l*c*u*u),[u,u,l,c]),m=Qe(e(c));return t.push({paramPath:`${p}/filters`},{paramPath:`${p}/${d?"batch_norm_offset":"bias"}`}),{filters:h,bias:m}}function r(l,c,u,p){let{filters:d,bias:h}=a(l,c,u,p,!0);return{filters:d,batch_norm_offset:h}}function s(l,c,u){let p=n(l,`${u}/depthwise_conv`),d=r(l,c,1,`${u}/pointwise_conv`);return{depthwise_conv:p,pointwise_conv:d}}function i(){let l=r(3,32,3,"mobilenetv1/conv_0"),c=s(32,64,"mobilenetv1/conv_1"),u=s(64,128,"mobilenetv1/conv_2"),p=s(128,128,"mobilenetv1/conv_3"),d=s(128,256,"mobilenetv1/conv_4"),h=s(256,256,"mobilenetv1/conv_5"),m=s(256,512,"mobilenetv1/conv_6"),f=s(512,512,"mobilenetv1/conv_7"),g=s(512,512,"mobilenetv1/conv_8"),y=s(512,512,"mobilenetv1/conv_9"),b=s(512,512,"mobilenetv1/conv_10"),x=s(512,512,"mobilenetv1/conv_11"),v=s(512,1024,"mobilenetv1/conv_12"),T=s(1024,1024,"mobilenetv1/conv_13");return{conv_0:l,conv_1:c,conv_2:u,conv_3:p,conv_4:d,conv_5:h,conv_6:m,conv_7:f,conv_8:g,conv_9:y,conv_10:b,conv_11:x,conv_12:v,conv_13:T}}function o(){let l=r(1024,256,1,"prediction_layer/conv_0"),c=r(256,512,3,"prediction_layer/conv_1"),u=r(512,128,1,"prediction_layer/conv_2"),p=r(128,256,3,"prediction_layer/conv_3"),d=r(256,128,1,"prediction_layer/conv_4"),h=r(128,256,3,"prediction_layer/conv_5"),m=r(256,64,1,"prediction_layer/conv_6"),f=r(64,128,3,"prediction_layer/conv_7"),g=a(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),y=a(512,9,1,"prediction_layer/box_predictor_0/class_predictor"),b=a(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),x=a(1024,18,1,"prediction_layer/box_predictor_1/class_predictor"),v=a(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),T=a(512,18,1,"prediction_layer/box_predictor_2/class_predictor"),k=a(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),S=a(256,18,1,"prediction_layer/box_predictor_3/class_predictor"),F=a(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),A=a(256,18,1,"prediction_layer/box_predictor_4/class_predictor"),R=a(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),P=a(128,18,1,"prediction_layer/box_predictor_5/class_predictor");return{conv_0:l,conv_1:c,conv_2:u,conv_3:p,conv_4:d,conv_5:h,conv_6:m,conv_7:f,box_predictor_0:{box_encoding_predictor:g,class_predictor:y},box_predictor_1:{box_encoding_predictor:b,class_predictor:x},box_predictor_2:{box_encoding_predictor:v,class_predictor:T},box_predictor_3:{box_encoding_predictor:k,class_predictor:S},box_predictor_4:{box_encoding_predictor:F,class_predictor:A},box_predictor_5:{box_encoding_predictor:R,class_predictor:P}}}return{extractMobilenetV1Params:i,extractPredictionLayerParams:o}}function pC(e){let t=[],{extractWeights:n,getRemainingWeights:a}=vn(e),{extractMobilenetV1Params:r,extractPredictionLayerParams:s}=Tre(n,t),i=r(),o=s(),c={extra_dim:Kd(n(5118*4),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:c},paramMappings:t}}function Nre(e,t){let n=jn(e,t);function a(c,u,p){let d=n(`${c}/Conv2d_${u}_pointwise/weights`,4,`${p}/filters`),h=n(`${c}/Conv2d_${u}_pointwise/convolution_bn_offset`,1,`${p}/batch_norm_offset`);return{filters:d,batch_norm_offset:h}}function r(c){let u=`mobilenetv1/conv_${c}`,p=`MobilenetV1/Conv2d_${c}_depthwise`,d=`${u}/depthwise_conv`,h=`${u}/pointwise_conv`,m=n(`${p}/depthwise_weights`,4,`${d}/filters`),f=n(`${p}/BatchNorm/gamma`,1,`${d}/batch_norm_scale`),g=n(`${p}/BatchNorm/beta`,1,`${d}/batch_norm_offset`),y=n(`${p}/BatchNorm/moving_mean`,1,`${d}/batch_norm_mean`),b=n(`${p}/BatchNorm/moving_variance`,1,`${d}/batch_norm_variance`);return{depthwise_conv:{filters:m,batch_norm_scale:f,batch_norm_offset:g,batch_norm_mean:y,batch_norm_variance:b},pointwise_conv:a("MobilenetV1",c,h)}}function s(){return{conv_0:a("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:r(1),conv_2:r(2),conv_3:r(3),conv_4:r(4),conv_5:r(5),conv_6:r(6),conv_7:r(7),conv_8:r(8),conv_9:r(9),conv_10:r(10),conv_11:r(11),conv_12:r(12),conv_13:r(13)}}function i(c,u){let p=n(`${c}/weights`,4,`${u}/filters`),d=n(`${c}/biases`,1,`${u}/bias`);return{filters:p,bias:d}}function o(c){let u=i(`Prediction/BoxPredictor_${c}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${c}/box_encoding_predictor`),p=i(`Prediction/BoxPredictor_${c}/ClassPredictor`,`prediction_layer/box_predictor_${c}/class_predictor`);return{box_encoding_predictor:u,class_predictor:p}}function l(){return{conv_0:a("Prediction",0,"prediction_layer/conv_0"),conv_1:a("Prediction",1,"prediction_layer/conv_1"),conv_2:a("Prediction",2,"prediction_layer/conv_2"),conv_3:a("Prediction",3,"prediction_layer/conv_3"),conv_4:a("Prediction",4,"prediction_layer/conv_4"),conv_5:a("Prediction",5,"prediction_layer/conv_5"),conv_6:a("Prediction",6,"prediction_layer/conv_6"),conv_7:a("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:o(0),box_predictor_1:o(1),box_predictor_2:o(2),box_predictor_3:o(3),box_predictor_4:o(4),box_predictor_5:o(5)}}return{extractMobilenetV1Params:s,extractPredictionLayerParams:l}}function dC(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:a}=Nre(e,t),r=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!Sr(r))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${r}`);let s={mobilenetv1:n(),prediction_layer:a(),output_layer:{extra_dim:r}};return xn(e,t),{params:s,paramMappings:t}}function xa(e,t,n){return D(()=>{let a=At(e,t.filters,n,"same");return a=J(a,t.batch_norm_offset),Kt(a,0,6)})}var Sre=.0010000000474974513;function Cre(e,t,n){return D(()=>{let a=Qr(e,t.filters,n,"same");return a=fr(a,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,Sre),Kt(a,0,6)})}function _re(e){return[2,4,6,12].some(t=>t===e)?[2,2]:[1,1]}function hC(e,t){return D(()=>{let n,a=xa(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach((s,i)=>{let o=i+1,l=_re(o);a=Cre(a,s.depthwise_conv,l),a=xa(a,s.pointwise_conv,[1,1]),o===11&&(n=a)}),n===null)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:a,conv11:n}})}function Ere(e,t,n){let a=e.arraySync(),r=Math.min(a[t][0],a[t][2]),s=Math.min(a[t][1],a[t][3]),i=Math.max(a[t][0],a[t][2]),o=Math.max(a[t][1],a[t][3]),l=Math.min(a[n][0],a[n][2]),c=Math.min(a[n][1],a[n][3]),u=Math.max(a[n][0],a[n][2]),p=Math.max(a[n][1],a[n][3]),d=(i-r)*(o-s),h=(u-l)*(p-c);if(d<=0||h<=0)return 0;let m=Math.max(r,l),f=Math.max(s,c),g=Math.min(i,u),y=Math.min(o,p),b=Math.max(g-m,0)*Math.max(y-f,0);return b/(d+h-b)}function mC(e,t,n,a,r){let s=e.shape[0],i=Math.min(n,s),o=t.map((u,p)=>({score:u,boxIndex:p})).filter(u=>u.score>r).sort((u,p)=>p.score-u.score),l=u=>u<=a?1:0,c=[];return o.forEach(u=>{if(c.length>=i)return;let p=u.score;for(let d=c.length-1;d>=0;--d){let h=Ere(e,u.boxIndex,c[d]);if(h!==0&&(u.score*=l(h),u.score<=r))break}p===u.score&&c.push(u.boxIndex)}),c}function Fre(e){let t=ut(Ve(e,[1,0])),n=[he(t[2],t[0]),he(t[3],t[1])],a=[J(t[0],ye(n[0],2)),J(t[1],ye(n[1],2))];return{sizes:n,centers:a}}function Are(e,t){let{sizes:n,centers:a}=Fre(e),r=ut(Ve(t,[1,0])),s=ye(W(dn(ye(r[2],5)),n[0]),2),i=J(W(ye(r[0],10),n[0]),a[0]),o=ye(W(dn(ye(r[3],5)),n[1]),2),l=J(W(ye(r[1],10),n[1]),a[1]);return Ve(Dt([he(i,s),he(l,o),J(i,s),J(l,o)]),[1,0])}function fC(e,t,n){return D(()=>{let a=e.shape[0],r=Are(U(Ha(n.extra_dim,[a,1,1]),[-1,4]),U(e,[-1,4]));r=U(r,[a,r.shape[0]/a,4]);let s=ca(Be(t,[0,0,1],[-1,-1,-1])),i=Be(s,[0,0,0],[-1,-1,1]);i=U(i,[a,i.shape[1]]);let o=ut(r),l=ut(i);return{boxes:o,scores:l}})}function ao(e,t){return D(()=>{let n=e.shape[0],a=U(to(e,t.box_encoding_predictor),[n,-1,1,4]),r=U(to(e,t.class_predictor),[n,-1,3]);return{boxPredictionEncoding:a,classPrediction:r}})}function gC(e,t,n){return D(()=>{let a=xa(e,n.conv_0,[1,1]),r=xa(a,n.conv_1,[2,2]),s=xa(r,n.conv_2,[1,1]),i=xa(s,n.conv_3,[2,2]),o=xa(i,n.conv_4,[1,1]),l=xa(o,n.conv_5,[2,2]),c=xa(l,n.conv_6,[1,1]),u=xa(c,n.conv_7,[2,2]),p=ao(t,n.box_predictor_0),d=ao(e,n.box_predictor_1),h=ao(r,n.box_predictor_2),m=ao(i,n.box_predictor_3),f=ao(l,n.box_predictor_4),g=ao(u,n.box_predictor_5),y=Je([p.boxPredictionEncoding,d.boxPredictionEncoding,h.boxPredictionEncoding,m.boxPredictionEncoding,f.boxPredictionEncoding,g.boxPredictionEncoding],1),b=Je([p.classPrediction,d.classPrediction,h.classPrediction,m.classPrediction,f.classPrediction,g.classPrediction],1);return{boxPredictions:y,classPredictions:b}})}var va=class{constructor({minConfidence:t,maxResults:n}={}){this._name="SsdMobilenetv1Options";if(this._minConfidence=t||.5,this._maxResults=n||100,typeof this._minConfidence!="number"||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if(typeof this._maxResults!="number")throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}};var ro=class extends ln{constructor(){super("SsdMobilenetv1")}forwardInput(t){let{params:n}=this;if(!n)throw new Error("SsdMobilenetv1 - load model before inference");return D(()=>{let a=ue(t.toBatchTensor(512,!1),"float32"),r=he(ye(a,127.5),1),s=hC(r,n.mobilenetv1),{boxPredictions:i,classPredictions:o}=gC(s.out,s.conv11,n.prediction_layer);return fC(i,o,n.output_layer)})}async forward(t){return this.forwardInput(await ht(t))}async locateFaces(t,n={}){let{maxResults:a,minConfidence:r}=new va(n),s=await ht(t),{boxes:i,scores:o}=this.forwardInput(s),l=i[0],c=o[0];for(let x=1;x<i.length;x++)i[x].dispose(),o[x].dispose();let u=Array.from(c.dataSync()),d=mC(l,u,a,.5,r),h=s.getReshapedInputDimensions(0),m=s.inputSize,f=m/h.width,g=m/h.height,y=l.arraySync(),b=d.map(x=>{let[v,T]=[Math.max(0,y[x][0]),Math.min(1,y[x][2])].map(F=>F*g),[k,S]=[Math.max(0,y[x][1]),Math.min(1,y[x][3])].map(F=>F*f);return new gt(u[x],new yu(k,v,S-k,T-v),{height:s.getInputHeight(0),width:s.getInputWidth(0)})});return l.dispose(),c.dispose(),b}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(t){return dC(t)}extractParams(t){return pC(t)}};function yC(e){let t=new ro;return t.extractWeights(e),t}function $re(e){return yC(e)}var bC=class extends ro{};var xC=.4,vC=[new De(.738768,.874946),new De(2.42204,2.65704),new De(4.30971,7.04493),new De(10.246,4.59428),new De(12.6868,11.8741)],wC=[new De(1.603231,2.094468),new De(6.041143,7.080126),new De(2.882459,3.518061),new De(4.266906,5.178857),new De(9.041765,10.66308)],kC=[117.001,114.697,97.404],IC="tiny_yolov2_model",TC="tiny_yolov2_separable_conv_model";var pf=e=>typeof e=="number";function ww(e){if(!e)throw new Error(`invalid config: ${e}`);if(typeof e.withSeparableConvs!="boolean")throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!pf(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every(t=>typeof t=="string"))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map(t=>t||{}).every(t=>pf(t.x)&&pf(t.y)))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||e.meanRgb.length!==3||!e.meanRgb.every(pf)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}function Cu(e){return D(()=>{let t=W(e,ve(.10000000149011612));return J(qe(he(e,t)),t)})}function Fr(e,t){return D(()=>{let n=ea(e,[[0,0],[1,1],[1,1],[0,0]]);return n=At(n,t.conv.filters,[1,1],"valid"),n=he(n,t.bn.sub),n=W(n,t.bn.truediv),n=J(n,t.conv.bias),Cu(n)})}function Ar(e,t){return D(()=>{let n=ea(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Ei(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=J(n,t.bias),Cu(n)})}function Dre(e,t){let n=wu(e,t);function a(i,o){let l=Qe(e(i)),c=Qe(e(i));return t.push({paramPath:`${o}/sub`},{paramPath:`${o}/truediv`}),{sub:l,truediv:c}}function r(i,o,l){let c=n(i,o,3,`${l}/conv`),u=a(o,`${l}/bn`);return{conv:c,bn:u}}let s=ku(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:r,extractSeparableConvParams:s}}function NC(e,t,n,a){let{extractWeights:r,getRemainingWeights:s}=vn(e),i=[],{extractConvParams:o,extractConvWithBatchNormParams:l,extractSeparableConvParams:c}=Dre(r,i),u;if(t.withSeparableConvs){let[p,d,h,m,f,g,y,b,x]=a,v=t.isFirstLayerConv2d?o(p,d,3,"conv0"):c(p,d,"conv0"),T=c(d,h,"conv1"),k=c(h,m,"conv2"),S=c(m,f,"conv3"),F=c(f,g,"conv4"),A=c(g,y,"conv5"),R=b?c(y,b,"conv6"):void 0,P=x?c(b,x,"conv7"):void 0,z=o(x||b||y,5*n,1,"conv8");u={conv0:v,conv1:T,conv2:k,conv3:S,conv4:F,conv5:A,conv6:R,conv7:P,conv8:z}}else{let[p,d,h,m,f,g,y,b,x]=a,v=l(p,d,"conv0"),T=l(d,h,"conv1"),k=l(h,m,"conv2"),S=l(m,f,"conv3"),F=l(f,g,"conv4"),A=l(g,y,"conv5"),R=l(y,b,"conv6"),P=l(b,x,"conv7"),z=o(x,5*n,1,"conv8");u={conv0:v,conv1:T,conv2:k,conv3:S,conv4:F,conv5:A,conv6:R,conv7:P,conv8:z}}if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{params:u,paramMappings:i}}function Rre(e,t){let n=jn(e,t);function a(o){let l=n(`${o}/sub`,1),c=n(`${o}/truediv`,1);return{sub:l,truediv:c}}function r(o){let l=n(`${o}/filters`,4),c=n(`${o}/bias`,1);return{filters:l,bias:c}}function s(o){let l=r(`${o}/conv`),c=a(`${o}/bn`);return{conv:l,bn:c}}let i=Iu(n);return{extractConvParams:r,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}}function SC(e,t){let n=[],{extractConvParams:a,extractConvWithBatchNormParams:r,extractSeparableConvParams:s}=Rre(e,n),i;if(t.withSeparableConvs){let o=t.filterSizes&&t.filterSizes.length||9;i={conv0:t.isFirstLayerConv2d?a("conv0"):s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:o>7?s("conv6"):void 0,conv7:o>8?s("conv7"):void 0,conv8:a("conv8")}}else i={conv0:r("conv0"),conv1:r("conv1"),conv2:r("conv2"),conv3:r("conv3"),conv4:r("conv4"),conv5:r("conv5"),conv6:r("conv6"),conv7:r("conv7"),conv8:a("conv8")};return xn(e,n),{params:i,paramMappings:n}}var or=class{constructor({inputSize:t,scoreThreshold:n}={}){this._name="TinyYolov2Options";if(this._inputSize=t||416,this._scoreThreshold=n||.5,typeof this._inputSize!="number"||this._inputSize%32!=0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if(typeof this._scoreThreshold!="number"||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}};var kw=class extends ln{constructor(t){super("TinyYolov2");ww(t),this._config=t}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(t,n){let a=Fr(t,n.conv0);return a=$t(a,[2,2],[2,2],"same"),a=Fr(a,n.conv1),a=$t(a,[2,2],[2,2],"same"),a=Fr(a,n.conv2),a=$t(a,[2,2],[2,2],"same"),a=Fr(a,n.conv3),a=$t(a,[2,2],[2,2],"same"),a=Fr(a,n.conv4),a=$t(a,[2,2],[2,2],"same"),a=Fr(a,n.conv5),a=$t(a,[2,2],[1,1],"same"),a=Fr(a,n.conv6),a=Fr(a,n.conv7),to(a,n.conv8,"valid",!1)}runMobilenet(t,n){let a=this.config.isFirstLayerConv2d?Cu(to(t,n.conv0,"valid",!1)):Ar(t,n.conv0);return a=$t(a,[2,2],[2,2],"same"),a=Ar(a,n.conv1),a=$t(a,[2,2],[2,2],"same"),a=Ar(a,n.conv2),a=$t(a,[2,2],[2,2],"same"),a=Ar(a,n.conv3),a=$t(a,[2,2],[2,2],"same"),a=Ar(a,n.conv4),a=$t(a,[2,2],[2,2],"same"),a=Ar(a,n.conv5),a=$t(a,[2,2],[1,1],"same"),a=n.conv6?Ar(a,n.conv6):a,a=n.conv7?Ar(a,n.conv7):a,to(a,n.conv8,"valid",!1)}forwardInput(t,n){let{params:a}=this;if(!a)throw new Error("TinyYolov2 - load model before inference");return D(()=>{let r=ue(t.toBatchTensor(n,!1),"float32");return r=this.config.meanRgb?La(r,this.config.meanRgb):r,r=r.div(255),this.config.withSeparableConvs?this.runMobilenet(r,a):this.runTinyYolov2(r,a)})}async forward(t,n){return this.forwardInput(await ht(t),n)}async detect(t,n={}){let{inputSize:a,scoreThreshold:r}=new or(n),s=await ht(t),i=await this.forwardInput(s,a),o=D(()=>ut(i)[0].expandDims()),l={width:s.getInputWidth(0),height:s.getInputHeight(0)},c=await this.extractBoxes(o,s.getReshapedInputDimensions(0),r);i.dispose(),o.dispose();let u=c.map(g=>g.box),p=c.map(g=>g.score),d=c.map(g=>g.classScore),h=c.map(g=>this.config.classes[g.label]);return Jv(u.map(g=>g.rescale(a)),p,this.config.iouThreshold,!0).map(g=>new ms(p[g],d[g],h[g],u[g],l))}getDefaultModelName(){return""}extractParamsFromWeightMap(t){return SC(t,this.config)}extractParams(t){let n=this.config.filterSizes||kw.DEFAULT_FILTER_SIZES,a=n?n.length:void 0;if(a!==7&&a!==8&&a!==9)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${a} filterSizes in config`);return NC(t,this.config,this.boxEncodingSize,n)}async extractBoxes(t,n,a){let{width:r,height:s}=n,i=Math.max(r,s),o=i/r,l=i/s,c=t.shape[1],u=this.config.anchors.length,[p,d,h]=D(()=>{let y=t.reshape([c,c,u,this.boxEncodingSize]),b=y.slice([0,0,0,0],[c,c,u,4]),x=y.slice([0,0,0,4],[c,c,u,1]),v=this.withClassScores?Na(y.slice([0,0,0,5],[c,c,u,this.config.classes.length]),3):ve(0);return[b,x,v]}),m=[],f=await d.array(),g=await p.array();for(let y=0;y<c;y++)for(let b=0;b<c;b++)for(let x=0;x<u;x++){let v=vp(f[y][b][x][0]);if(!a||v>a){let T=(b+vp(g[y][b][x][0]))/c*o,k=(y+vp(g[y][b][x][1]))/c*l,S=Math.exp(g[y][b][x][2])*this.config.anchors[x].x/c*o,F=Math.exp(g[y][b][x][3])*this.config.anchors[x].y/c*l,A=T-S/2,R=k-F/2,P={row:y,col:b,anchor:x},{classScore:z,label:V}=this.withClassScores?await this.extractPredictedClass(h,P):{classScore:1,label:0};m.push({box:new gu(A,R,A+S,R+F),score:v,classScore:v*z,label:V,...P})}}return p.dispose(),d.dispose(),h.dispose(),m}async extractPredictedClass(t,n){let{row:a,col:r,anchor:s}=n,i=await t.array();return Array(this.config.classes.length).fill(0).map((o,l)=>i[a][r][s][l]).map((o,l)=>({classScore:o,label:l})).reduce((o,l)=>o.classScore>l.classScore?o:l)}},_u=kw;_u.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var Eu=class extends _u{constructor(t=!0){let n={withSeparableConvs:t,iouThreshold:xC,classes:["face"],...t?{anchors:wC,meanRgb:kC}:{anchors:vC,withClassScores:!0}};super(n)}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(t,n){return(await this.detect(t,n)).map(r=>new gt(r.score,r.relativeBox,{width:r.imageWidth,height:r.imageHeight}))}getDefaultModelName(){return this.withSeparableConvs?TC:IC}extractParamsFromWeightMap(t){return super.extractParamsFromWeightMap(t)}};function Mre(e,t=!0){let n=new Eu(t);return n.extractWeights(e),n}var df=class extends or{constructor(){super(...arguments);this._name="TinyFaceDetectorOptions"}};var wa=class{async then(t){return t(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function so(e,t,n,a,r=({alignedRect:s})=>s){let s=e.map(l=>no(l)?r(l):l.detection),i=a||(t instanceof Ee?await vu(t,s):await xu(t,s)),o=await n(i);return i.forEach(l=>l instanceof Ee&&l.dispose()),o}async function Fu(e,t,n,a,r){return so([e],t,async s=>n(s[0]),a,r)}var CC=.4,_C=[new De(1.603231,2.094468),new De(6.041143,7.080126),new De(2.882459,3.518061),new De(4.266906,5.178857),new De(9.041765,10.66308)],EC=[117.001,114.697,97.404];var Au=class extends _u{constructor(){let t={withSeparableConvs:!0,iouThreshold:CC,classes:["face"],anchors:_C,meanRgb:EC,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]};super(t)}get anchors(){return this.config.anchors}async locateFaces(t,n){return(await this.detect(t,n)).map(r=>new gt(r.score,r.relativeBox,{width:r.imageWidth,height:r.imageHeight}))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(t){return super.extractParamsFromWeightMap(t)}};var Ze={ssdMobilenetv1:new ro,tinyFaceDetector:new Au,tinyYolov2:new Eu,faceLandmark68Net:new Nu,faceLandmark68TinyNet:new sf,faceRecognitionNet:new Su,faceExpressionNet:new nf,ageGenderNet:new rf},FC=(e,t)=>Ze.ssdMobilenetv1.locateFaces(e,t),Pre=(e,t)=>Ze.tinyFaceDetector.locateFaces(e,t),Ore=(e,t)=>Ze.tinyYolov2.locateFaces(e,t),AC=e=>Ze.faceLandmark68Net.detectLandmarks(e),Lre=e=>Ze.faceLandmark68TinyNet.detectLandmarks(e),zre=e=>Ze.faceRecognitionNet.computeFaceDescriptor(e),Wre=e=>Ze.faceExpressionNet.predictExpressions(e),Bre=e=>Ze.ageGenderNet.predictAgeAndGender(e),$C=e=>Ze.ssdMobilenetv1.load(e),Vre=e=>Ze.tinyFaceDetector.load(e),Ure=e=>Ze.tinyYolov2.load(e),Gre=e=>Ze.faceLandmark68Net.load(e),Hre=e=>Ze.faceLandmark68TinyNet.load(e),jre=e=>Ze.faceRecognitionNet.load(e),qre=e=>Ze.faceExpressionNet.load(e),Kre=e=>Ze.ageGenderNet.load(e),Xre=$C,Yre=FC,Jre=AC;var Iw=class extends wa{constructor(t,n,a){super();this.parentTask=t;this.input=n;this.extractedFaces=a}},Ru=class extends Iw{async run(){let t=await this.parentTask,n=await so(t,this.input,async a=>Promise.all(a.map(r=>Ze.faceExpressionNet.predictExpressions(r))),this.extractedFaces);return t.map((a,r)=>af(a,n[r]))}withAgeAndGender(){return new $u(this,this.input)}},Mu=class extends Iw{async run(){let t=await this.parentTask;if(!t)return;let n=await Fu(t,this.input,a=>Ze.faceExpressionNet.predictExpressions(a),this.extractedFaces);return af(t,n)}withAgeAndGender(){return new Du(this,this.input)}},lo=class extends Ru{withAgeAndGender(){return new io(this,this.input)}withFaceDescriptors(){return new ys(this,this.input)}},uo=class extends Mu{withAgeAndGender(){return new oo(this,this.input)}withFaceDescriptor(){return new bs(this,this.input)}};var Tw=class extends wa{constructor(t,n,a){super();this.parentTask=t;this.input=n;this.extractedFaces=a}},$u=class extends Tw{async run(){let t=await this.parentTask,n=await so(t,this.input,async a=>Promise.all(a.map(r=>Ze.ageGenderNet.predictAgeAndGender(r))),this.extractedFaces);return t.map((a,r)=>{let{age:s,gender:i,genderProbability:o}=n[r];return uf(cf(a,i,o),s)})}withFaceExpressions(){return new Ru(this,this.input)}},Du=class extends Tw{async run(){let t=await this.parentTask;if(!t)return;let{age:n,gender:a,genderProbability:r}=await Fu(t,this.input,s=>Ze.ageGenderNet.predictAgeAndGender(s),this.extractedFaces);return uf(cf(t,a,r),n)}withFaceExpressions(){return new Mu(this,this.input)}},io=class extends $u{withFaceExpressions(){return new lo(this,this.input)}withFaceDescriptors(){return new ys(this,this.input)}},oo=class extends Du{withFaceExpressions(){return new uo(this,this.input)}withFaceDescriptor(){return new bs(this,this.input)}};var hf=class extends wa{constructor(t,n){super();this.parentTask=t;this.input=n}},ys=class extends hf{async run(){let t=await this.parentTask;return(await so(t,this.input,a=>Promise.all(a.map(r=>Ze.faceRecognitionNet.computeFaceDescriptor(r))),null,a=>a.landmarks.align(null,{useDlibAlignment:!0}))).map((a,r)=>lf(t[r],a))}withFaceExpressions(){return new lo(this,this.input)}withAgeAndGender(){return new io(this,this.input)}},bs=class extends hf{async run(){let t=await this.parentTask;if(!t)return;let n=await Fu(t,this.input,a=>Ze.faceRecognitionNet.computeFaceDescriptor(a),null,a=>a.landmarks.align(null,{useDlibAlignment:!0}));return lf(t,n)}withFaceExpressions(){return new uo(this,this.input)}withAgeAndGender(){return new oo(this,this.input)}};var mf=class extends wa{constructor(t,n,a){super();this.parentTask=t;this.input=n;this.useTinyLandmarkNet=a}get landmarkNet(){return this.useTinyLandmarkNet?Ze.faceLandmark68TinyNet:Ze.faceLandmark68Net}},ff=class extends mf{async run(){let t=await this.parentTask,n=t.map(s=>s.detection),a=this.input instanceof Ee?await vu(this.input,n):await xu(this.input,n),r=await Promise.all(a.map(s=>this.landmarkNet.detectLandmarks(s)));return a.forEach(s=>s instanceof Ee&&s.dispose()),t.map((s,i)=>Tu(s,r[i]))}withFaceExpressions(){return new lo(this,this.input)}withAgeAndGender(){return new io(this,this.input)}withFaceDescriptors(){return new ys(this,this.input)}},gf=class extends mf{async run(){let t=await this.parentTask;if(!t)return;let{detection:n}=t,a=this.input instanceof Ee?await vu(this.input,[n]):await xu(this.input,[n]),r=await this.landmarkNet.detectLandmarks(a[0]);return a.forEach(s=>s instanceof Ee&&s.dispose()),Tu(t,r)}withFaceExpressions(){return new uo(this,this.input)}withAgeAndGender(){return new oo(this,this.input)}withFaceDescriptor(){return new bs(this,this.input)}};var yf=class extends wa{constructor(t,n=new va){super();this.input=t;this.options=n}},$p=class extends yf{async run(){let{input:t,options:n}=this,a;if(n instanceof df)a=Ze.tinyFaceDetector.locateFaces(t,n);else if(n instanceof va)a=Ze.ssdMobilenetv1.locateFaces(t,n);else if(n instanceof or)a=Ze.tinyYolov2.locateFaces(t,n);else throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");return a}runAndExtendWithFaceDetections(){return new Promise(async t=>{let n=await this.run();t(n.map(a=>Yi({},a)))})}withFaceLandmarks(t=!1){return new ff(this.runAndExtendWithFaceDetections(),this.input,t)}withFaceExpressions(){return new Ru(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new $u(this.runAndExtendWithFaceDetections(),this.input)}},bf=class extends yf{async run(){let t=await new $p(this.input,this.options),n=t[0];return t.forEach(a=>{a.score>n.score&&(n=a)}),n}runAndExtendWithFaceDetection(){return new Promise(async t=>{let n=await this.run();t(n?Yi({},n):void 0)})}withFaceLandmarks(t=!1){return new gf(this.runAndExtendWithFaceDetection(),this.input,t)}withFaceExpressions(){return new Mu(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new Du(this.runAndExtendWithFaceDetection(),this.input)}};function Qre(e,t=new va){return new bf(e,t)}function xf(e,t=new va){return new $p(e,t)}async function DC(e,t){return xf(e,new va(t?{minConfidence:t}:{})).withFaceLandmarks().withFaceDescriptors()}async function Zre(e,t={}){return xf(e,new or(t)).withFaceLandmarks().withFaceDescriptors()}var ese=DC;function Nw(e,t){if(e.length!==t.length)throw new Error("euclideanDistance: arr1.length !== arr2.length");let n=Array.from(e),a=Array.from(t);return Math.sqrt(n.map((r,s)=>r-a[s]).reduce((r,s)=>r+s**2,0))}var vf=class{constructor(t,n=.6){this._distanceThreshold=n;let a=Array.isArray(t)?t:[t];if(!a.length)throw new Error("FaceRecognizer.constructor - expected atleast one input");let r=1,s=()=>`person ${r++}`;this._labeledDescriptors=a.map(i=>{if(i instanceof Cr)return i;if(i instanceof Float32Array)return new Cr(s(),[i]);if(i.descriptor&&i.descriptor instanceof Float32Array)return new Cr(s(),[i.descriptor]);throw new Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>")})}get labeledDescriptors(){return this._labeledDescriptors}get distanceThreshold(){return this._distanceThreshold}computeMeanDistance(t,n){return n.map(a=>Nw(a,t)).reduce((a,r)=>a+r,0)/(n.length||1)}matchDescriptor(t){return this.labeledDescriptors.map(({descriptors:n,label:a})=>new wp(a,this.computeMeanDistance(t,n))).reduce((n,a)=>n.distance<a.distance?n:a)}findBestMatch(t){let n=this.matchDescriptor(t);return n.distance<this.distanceThreshold?n:new wp("unknown",n.distance)}toJSON(){return{distanceThreshold:this.distanceThreshold,labeledDescriptors:this.labeledDescriptors.map(t=>t.toJSON())}}static fromJSON(t){let n=t.labeledDescriptors.map(a=>Cr.fromJSON(a));return new vf(n,t.distanceThreshold)}};function tse(e){let t=new Au;return t.extractWeights(e),t}function RC(e,t){let{width:n,height:a}=new bn(t.width,t.height);if(n<=0||a<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:a})}`);if(Array.isArray(e))return e.map(r=>RC(r,{width:n,height:a}));if(no(e)){let r=e.detection.forSize(n,a),s=e.unshiftedLandmarks.forSize(r.box.width,r.box.height);return Tu(Yi(e,r),s)}return sr(e)?Yi(e,e.detection.forSize(n,a)):e instanceof ra||e instanceof gt?e.forSize(n,a):e}var ase=typeof process!="undefined",rse=typeof navigator!="undefined"&&typeof navigator.userAgent!="undefined",sse={faceapi:QS,node:ase,browser:rse};return nse;})();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/** @license See the LICENSE file. */
//# sourceMappingURL=face-api.js.map
