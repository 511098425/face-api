
  /*
  Face-API
  homepage: <https://github.com/vladmandic/face-api>
  author: <https://github.com/vladmandic>'
  */

var faceapi=(()=>{var R_=Object.create,Fd=Object.defineProperty,P_=Object.getPrototypeOf,O_=Object.prototype.hasOwnProperty,L_=Object.getOwnPropertyNames,z_=Object.getOwnPropertyDescriptor;var Kw=e=>Fd(e,"__esModule",{value:!0});var B_=(e,t)=>()=>(t||(t={exports:{}},e(t.exports,t)),t.exports),oc=(e,t)=>{Kw(e);for(var n in t)Fd(e,n,{get:t[n],enumerable:!0})},W_=(e,t,n)=>{if(Kw(e),t&&typeof t=="object"||typeof t=="function")for(let a of L_(t))!O_.call(e,a)&&a!=="default"&&Fd(e,a,{get:()=>t[a],enumerable:!(n=z_(t,a))||n.enumerable});return e},V_=e=>e&&e.__esModule?e:W_(Fd(e!=null?R_(P_(e)):{},"default",{value:e,enumerable:!0}),e);var pC=B_((use,cC)=>{oc(use,{isNodejs:()=>cse});function cse(){return typeof global=="object"&&!0&&typeof cC!="undefined"&&typeof process!="undefined"&&!!process.version}});var Ase={};oc(Ase,{AgeGenderNet:()=>Up,BoundingBox:()=>ro,Box:()=>ot,ComposableTask:()=>oa,ComputeAllFaceDescriptorsTask:()=>zr,ComputeFaceDescriptorsTaskBase:()=>Jp,ComputeSingleFaceDescriptorTask:()=>Br,DetectAllFaceLandmarksTask:()=>Qp,DetectAllFacesTask:()=>Hu,DetectFaceLandmarksTaskBase:()=>Zp,DetectFacesTaskBase:()=>td,DetectSingleFaceLandmarksTask:()=>ed,DetectSingleFaceTask:()=>nd,Dimensions:()=>cn,FACE_EXPRESSION_LABELS:()=>Vf,FaceDetection:()=>yt,FaceDetectionNet:()=>_w,FaceExpressionNet:()=>Wp,FaceExpressions:()=>Pr,FaceLandmark68Net:()=>ho,FaceLandmark68TinyNet:()=>Hp,FaceLandmarkNet:()=>Tw,FaceLandmarks:()=>Gn,FaceLandmarks5:()=>pw,FaceLandmarks68:()=>io,FaceMatch:()=>Au,FaceMatcher:()=>rd,FaceRecognitionNet:()=>mo,Gender:()=>pr,LabeledBox:()=>$u,LabeledFaceDescriptors:()=>lr,NetInput:()=>cr,NeuralNetwork:()=>nn,ObjectDetection:()=>Rr,Point:()=>De,PredictedBox:()=>dw,Rect:()=>so,SsdMobilenetv1:()=>Ts,SsdMobilenetv1Options:()=>ia,TinyFaceDetector:()=>bo,TinyFaceDetectorOptions:()=>Yp,TinyYolov2:()=>go,TinyYolov2Options:()=>Va,allFaces:()=>yE,allFacesSsdMobilenetv1:()=>Pw,allFacesTinyYolov2:()=>gE,awaitMediaLoaded:()=>Ef,bufferToImage:()=>_f,computeFaceDescriptor:()=>nE,createCanvas:()=>oo,createCanvasFromMedia:()=>Mu,createFaceDetectionNet:()=>BC,createFaceRecognitionNet:()=>AC,createSsdMobilenetv1:()=>Ew,createTinyFaceDetector:()=>bE,createTinyYolov2:()=>XC,detectAllFaces:()=>ad,detectFaceLandmarks:()=>$w,detectFaceLandmarksTiny:()=>tE,detectLandmarks:()=>mE,detectSingleFace:()=>fE,draw:()=>Gf,env:()=>st,euclideanDistance:()=>Kf,extendWithAge:()=>Kp,extendWithFaceDescriptor:()=>qp,extendWithFaceDetection:()=>xs,extendWithFaceExpressions:()=>Vp,extendWithFaceLandmarks:()=>po,extendWithGender:()=>Xp,extractFaceTensors:()=>uo,extractFaces:()=>lo,fetchImage:()=>dC,fetchJson:()=>$f,fetchNetWeights:()=>hC,fetchOrThrow:()=>Is,getContext2dOrThrow:()=>xn,getMediaDimensions:()=>ks,imageTensorToCanvas:()=>Ff,imageToSquare:()=>Af,inverseSigmoid:()=>uC,iou:()=>kf,isMediaElement:()=>Pp,isMediaLoaded:()=>Du,isWithAge:()=>$C,isWithFaceDetection:()=>Ba,isWithFaceExpressions:()=>Uf,isWithFaceLandmarks:()=>Ns,isWithGender:()=>DC,loadAgeGenderModel:()=>pE,loadFaceDetectionModel:()=>dE,loadFaceExpressionModel:()=>cE,loadFaceLandmarkModel:()=>oE,loadFaceLandmarkTinyModel:()=>lE,loadFaceRecognitionModel:()=>uE,loadSsdMobilenetv1Model:()=>Dw,loadTinyFaceDetectorModel:()=>sE,loadTinyYolov2Model:()=>iE,loadWeightMap:()=>Mf,locateFaces:()=>hE,matchDimensions:()=>mC,minBbox:()=>If,nets:()=>Qe,nonMaxSuppression:()=>Nf,normalize:()=>va,padToSquare:()=>Tf,predictAgeAndGender:()=>rE,recognizeFaceExpressions:()=>aE,resizeResults:()=>Ow,resolveInput:()=>vs,shuffleArray:()=>lC,sigmoid:()=>Fu,ssdMobilenetv1:()=>Aw,tf:()=>Ad,tinyFaceDetector:()=>QC,tinyYolov2:()=>eE,toNetInput:()=>ft,utils:()=>xf,validateConfig:()=>qf,version:()=>xE});var Ad={};oc(Ad,{Abs:()=>Lo,Acos:()=>zo,Acosh:()=>Bo,AdadeltaOptimizer:()=>am,AdagradOptimizer:()=>rm,AdamOptimizer:()=>sm,AdamaxOptimizer:()=>im,Add:()=>qr,AddN:()=>Rs,All:()=>Ld,Any:()=>zd,ArgMax:()=>Ps,ArgMin:()=>dc,Asin:()=>Wo,Asinh:()=>Vo,Atan:()=>Uo,Atan2:()=>Ho,Atanh:()=>Go,AvgPool:()=>Os,AvgPool3D:()=>hc,AvgPool3DGrad:()=>Wd,AvgPoolGrad:()=>Bd,BackendWasm:()=>iC,BatchMatMul:()=>Ls,BatchToSpaceND:()=>mc,Bincount:()=>Vd,BroadcastTo:()=>d0,Callback:()=>oN,CallbackList:()=>sI,Cast:()=>zs,Ceil:()=>jo,ClipByValue:()=>Kr,Complex:()=>Ud,ComplexAbs:()=>fc,Concat:()=>qo,Conv2D:()=>Bs,Conv2DBackpropFilter:()=>Gd,Conv2DBackpropInput:()=>Ws,Conv3D:()=>gc,Conv3DBackpropFilterV2:()=>Hd,Conv3DBackpropInputV2:()=>jd,Cos:()=>Vs,Cosh:()=>Ko,CropAndResize:()=>Xo,Cumsum:()=>Us,CustomCallback:()=>oI,DataStorage:()=>Md,DenseBincount:()=>qd,DepthToSpace:()=>Yo,DepthwiseConv2dNative:()=>Gs,DepthwiseConv2dNativeBackpropFilter:()=>Kd,DepthwiseConv2dNativeBackpropInput:()=>Xd,Diag:()=>Yd,Dilation2D:()=>yc,Dilation2DBackpropFilter:()=>Zd,Dilation2DBackpropInput:()=>Jd,ENV:()=>sy,EarlyStopping:()=>uN,Elu:()=>Jo,EluGrad:()=>Qd,Environment:()=>u0,Equal:()=>Qo,Erf:()=>Zo,Exp:()=>js,ExpandDims:()=>el,Expm1:()=>tl,FFT:()=>eh,Fill:()=>bc,FlipLeftRight:()=>nl,Floor:()=>qs,FloorDiv:()=>Ks,FromPixels:()=>mh,FusedBatchNorm:()=>Xs,FusedConv2D:()=>Si,FusedDepthwiseConv2D:()=>Ci,GatherNd:()=>rl,GatherV2:()=>al,GraphModel:()=>LN,Greater:()=>sl,GreaterEqual:()=>Ys,History:()=>iI,IFFT:()=>th,Identity:()=>il,Imag:()=>nh,InputSpec:()=>Zt,IsFinite:()=>ol,IsInf:()=>ll,IsNan:()=>ul,KernelBackend:()=>uc,LRN:()=>wc,LRNGrad:()=>rh,LayerVariable:()=>eI,LayersModel:()=>_r,LeakyRelu:()=>Js,Less:()=>cl,LessEqual:()=>pl,LinSpace:()=>ah,Log:()=>Zs,Log1p:()=>dl,LogSoftmax:()=>h0,LogicalAnd:()=>hl,LogicalNot:()=>xc,LogicalOr:()=>vc,Max:()=>Qs,MaxPool:()=>ti,MaxPool3D:()=>kc,MaxPool3DGrad:()=>ih,MaxPoolGrad:()=>sh,MaxPoolWithArgmax:()=>oh,Maximum:()=>ei,Mean:()=>ni,Min:()=>ai,Minimum:()=>ri,MirrorPad:()=>Ic,Mod:()=>ml,MomentumOptimizer:()=>om,Multinomial:()=>lh,Multiply:()=>si,Neg:()=>fl,NonMaxSuppressionV3:()=>yl,NonMaxSuppressionV4:()=>bl,NonMaxSuppressionV5:()=>xl,NotEqual:()=>gl,OP_SCOPE_SUFFIX:()=>N0,OneHot:()=>ii,OnesLike:()=>vl,Optimizer:()=>Sr,Pack:()=>wl,PadV2:()=>oi,Pool:()=>_F,Pow:()=>li,Prelu:()=>ui,Prod:()=>kl,RMSPropOptimizer:()=>lm,RNN:()=>ar,Range:()=>Nc,Rank:()=>hy,Real:()=>uh,RealDiv:()=>Hs,Reciprocal:()=>Il,Reduction:()=>fn,Relu:()=>ci,Relu6:()=>di,Reshape:()=>Nl,ResizeBilinear:()=>pi,ResizeBilinearGrad:()=>ph,ResizeNearestNeighbor:()=>Tc,ResizeNearestNeighborGrad:()=>ch,Reverse:()=>hi,RotateWithOffset:()=>zl,Round:()=>mi,Rsqrt:()=>fi,SGDOptimizer:()=>ep,ScatterNd:()=>Tl,Select:()=>Sl,Selu:()=>Cl,Sequential:()=>uu,Sigmoid:()=>yi,Sign:()=>Fl,Sin:()=>gi,Sinh:()=>_l,Slice:()=>El,Softmax:()=>vi,Softplus:()=>Al,SpaceToBatchND:()=>Sc,SparseToDense:()=>dh,SplitV:()=>$l,Sqrt:()=>bi,Square:()=>Cc,SquaredDifference:()=>wi,Step:()=>Ll,StridedSlice:()=>Dl,Sub:()=>ki,Sum:()=>xi,SymbolicTensor:()=>Da,Tan:()=>Ml,Tanh:()=>Ii,Tensor:()=>z,TensorBuffer:()=>Bt,Tile:()=>Xr,TopK:()=>Rl,Transpose:()=>Ni,Unique:()=>hh,Unpack:()=>Pl,UnsortedSegmentSum:()=>Ec,Variable:()=>Yr,ZerosLike:()=>Ol,_FusedMatMul:()=>Ti,abs:()=>Wt,acos:()=>Py,acosh:()=>Oy,add:()=>Z,addN:()=>ik,addStrict:()=>Gk,all:()=>Eh,any:()=>Lc,argMax:()=>zc,argMin:()=>Ly,asin:()=>zy,asinh:()=>By,atan:()=>Wy,atan2:()=>Vy,atanh:()=>Uy,avgPool:()=>Zn,avgPool3d:()=>jy,backend:()=>sk,backend_util:()=>_,basicLSTMCell:()=>rD,batchNorm:()=>wr,batchNorm2d:()=>ck,batchNorm3d:()=>pk,batchNorm4d:()=>dk,batchToSpaceND:()=>Wc,bincount:()=>hk,booleanMaskAsync:()=>lP,broadcastTo:()=>Vc,browser:()=>Ai,buffer:()=>Le,callbacks:()=>hV,cast:()=>pe,ceil:()=>qy,clipByValue:()=>Yt,clone:()=>es,complex:()=>Jr,concat:()=>Ze,concat1d:()=>mk,concat2d:()=>fk,concat3d:()=>gk,concat4d:()=>yk,constraints:()=>C1,conv1d:()=>Fh,conv2d:()=>$t,conv2dTranspose:()=>Ah,conv3d:()=>Xy,conv3dTranspose:()=>SD,copyRegisteredKernels:()=>$F,cos:()=>Uc,cosh:()=>$h,cosineWindow:()=>vb,cumsum:()=>Dh,customGrad:()=>Xa,data:()=>BN,denseBincount:()=>xk,deprecationWarn:()=>Pt,depthToSpace:()=>Yy,depthwiseConv2d:()=>kr,deregisterOp:()=>fV,device_util:()=>vh,diag:()=>MD,dilation2d:()=>Jy,disableDeprecationWarnings:()=>g$,dispose:()=>Ae,disposeVariables:()=>y$,div:()=>ve,divNoNan:()=>Zy,divStrict:()=>Hk,dot:()=>vk,dropout:()=>n1,elu:()=>Xl,enableDebugMode:()=>f$,enableProdMode:()=>m$,enclosingPowerOfTwo:()=>a1,engine:()=>ns,env:()=>ee,equal:()=>Ir,equalStrict:()=>Lk,erf:()=>Qy,exp:()=>mn,expandDims:()=>Qn,expm1:()=>eb,eye:()=>tb,fft:()=>Jc,fill:()=>Nn,findBackend:()=>N$,findBackendFactory:()=>T$,floor:()=>Yl,floorDiv:()=>Ch,fused:()=>os,gather:()=>Mi,gatherND:()=>t1,gather_util:()=>_y,getBackend:()=>k$,getGradient:()=>uy,getKernel:()=>ly,getKernelsForBackend:()=>fh,grad:()=>uM,grads:()=>cM,greater:()=>ea,greaterEqual:()=>Nr,greaterEqualStrict:()=>zk,greaterStrict:()=>Bk,ifft:()=>tu,imag:()=>Mh,image:()=>Za,inTopKAsync:()=>MP,initializers:()=>M1,input:()=>q1,io:()=>Kt,irfft:()=>Xh,isFinite:()=>wk,isInf:()=>kk,isNaN:()=>Ik,keep:()=>Xt,kernel_impls:()=>Qa,layers:()=>j1,leakyRelu:()=>Gc,less:()=>Hc,lessEqual:()=>rs,lessEqualStrict:()=>Wk,lessStrict:()=>Vk,linalg:()=>f1,linspace:()=>Nk,loadGraphModel:()=>fU,loadLayersModel:()=>D4,localResponseNormalization:()=>nb,log:()=>Dn,log1p:()=>Rh,logSigmoid:()=>Sk,logSoftmax:()=>Oh,logSumExp:()=>sb,logicalAnd:()=>ha,logicalNot:()=>jc,logicalOr:()=>Lh,logicalXor:()=>Fk,losses:()=>XO,matMul:()=>ze,math:()=>B0,max:()=>ta,maxPool:()=>Dt,maxPool3d:()=>ib,maxPoolWithArgmax:()=>Ak,maximum:()=>Sa,maximumStrict:()=>jk,mean:()=>Ct,memory:()=>Th,metrics:()=>rN,min:()=>Zl,minimum:()=>Pi,minimumStrict:()=>qk,mirrorPad:()=>ob,mod:()=>zh,modStrict:()=>Kk,model:()=>A4,models:()=>sN,moments:()=>Bh,movingAverage:()=>SP,mul:()=>L,mulStrict:()=>Xk,multiRNNCell:()=>zM,multinomial:()=>$k,neg:()=>St,nextFrame:()=>um,norm:()=>Zh,notEqual:()=>ss,notEqualStrict:()=>Uk,oneHot:()=>Hl,ones:()=>Ya,onesLike:()=>Mn,op:()=>R,outerProduct:()=>GM,pad:()=>na,pad1d:()=>qM,pad2d:()=>XM,pad3d:()=>JM,pad4d:()=>QM,pool:()=>Dk,pow:()=>Ja,powStrict:()=>Yk,prelu:()=>Kc,print:()=>M0,prod:()=>Wh,profile:()=>b$,rand:()=>lR,randomGamma:()=>dR,randomNormal:()=>Mk,randomUniform:()=>Ql,range:()=>Vh,ready:()=>w$,real:()=>Xc,reciprocal:()=>cb,registerBackend:()=>Sh,registerCallbackConstructor:()=>M4,registerGradient:()=>m0,registerKernel:()=>Fc,registerOp:()=>mV,regularizers:()=>iN,relu:()=>Xe,relu6:()=>Uh,removeBackend:()=>I$,reshape:()=>j,reverse:()=>Rn,reverse1d:()=>wR,reverse2d:()=>IR,reverse3d:()=>TR,reverse4d:()=>CR,rfft:()=>Zc,round:()=>pb,rsqrt:()=>Gh,scalar:()=>de,scatterND:()=>e1,scatter_util:()=>Fy,selu:()=>Hh,separableConv2d:()=>Oi,sequential:()=>$4,serialization:()=>se,setBackend:()=>v$,setPlatform:()=>S$,setWasmPath:()=>tse,setWasmPaths:()=>nse,setdiff1dAsync:()=>Rk,sigmoid:()=>da,sign:()=>db,signal:()=>KO,sin:()=>jh,sinh:()=>qh,slice:()=>We,slice1d:()=>Kh,slice2d:()=>hb,slice3d:()=>eu,slice4d:()=>Yc,slice_util:()=>hn,softmax:()=>Ca,softplus:()=>Jl,spaceToBatchND:()=>qc,sparseToDense:()=>xb,spectral:()=>qO,split:()=>Pn,sqrt:()=>rn,square:()=>lt,squaredDifference:()=>Qc,squaredDifferenceStrict:()=>Jk,squeeze:()=>is,stack:()=>Mt,step:()=>nu,stridedSlice:()=>mb,sub:()=>fe,subStrict:()=>Zk,sum:()=>Ce,sumOutType:()=>xh,tan:()=>fb,tanh:()=>Kl,tensor:()=>Yn,tensor1d:()=>tt,tensor2d:()=>Ea,tensor3d:()=>Ih,tensor4d:()=>_a,tensor5d:()=>QR,tensor6d:()=>eP,tensor_util:()=>Ta,test_util:()=>tk,tidy:()=>D,tile:()=>Ka,time:()=>x$,topk:()=>gb,train:()=>zi,transpose:()=>Ue,truncatedNormal:()=>Yh,unique:()=>Jh,unregisterGradient:()=>AF,unregisterKernel:()=>FF,unsortedSegmentSum:()=>yb,unstack:()=>pt,upcastType:()=>pa,util:()=>k,valueAndGrad:()=>pM,valueAndGrads:()=>dM,variable:()=>Pk,variableGrads:()=>Tk,version:()=>hte,version_converter:()=>zN,version_core:()=>rk,version_layers:()=>Dm,version_wasm:()=>ase,where:()=>In,whereAsync:()=>bb,zeros:()=>bt,zerosLike:()=>He});var U_=Object.create,$d=Object.defineProperty,G_=Object.getPrototypeOf,H_=Object.prototype.hasOwnProperty,j_=Object.getOwnPropertyNames,q_=Object.getOwnPropertyDescriptor,Xw=e=>$d(e,"__esModule",{value:!0}),dn=(e,t)=>()=>(t||(t={exports:{}},e(t.exports,t)),t.exports),Oe=(e,t)=>{Xw(e);for(var n in t)$d(e,n,{get:t[n],enumerable:!0})},K_=(e,t,n)=>{if(Xw(e),t&&typeof t=="object"||typeof t=="function")for(let a of j_(t))!H_.call(e,a)&&a!=="default"&&$d(e,a,{get:()=>t[a],enumerable:!(n=q_(t,a))||n.enumerable});return e},Ro=e=>e&&e.__esModule?e:K_($d(e!=null?U_(G_(e)):{},"default",{value:e,enumerable:!0}),e),X_=dn(()=>{}),Y_=dn((e,t)=>{(function(n,a,r){function s(c){var u=this,p=l();u.next=function(){var d=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=d-(u.c=d|0)},u.c=1,u.s0=p(" "),u.s1=p(" "),u.s2=p(" "),u.s0-=p(c),u.s0<0&&(u.s0+=1),u.s1-=p(c),u.s1<0&&(u.s1+=1),u.s2-=p(c),u.s2<0&&(u.s2+=1),p=null}function i(c,u){return u.c=c.c,u.s0=c.s0,u.s1=c.s1,u.s2=c.s2,u}function o(c,u){var p=new s(c),d=u&&u.state,h=p.next;return h.int32=function(){return p.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&i(d,p),h.state=function(){return i(p,{})}),h}function l(){var c=4022871197,u=function(p){p=p.toString();for(var d=0;d<p.length;d++){c+=p.charCodeAt(d);var h=.02519603282416938*c;c=h>>>0,h-=c,h*=c,c=h>>>0,h-=c,c+=h*4294967296}return(c>>>0)*23283064365386963e-26};return u}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),J_=dn((e,t)=>{(function(n,a,r){function s(l){var c=this,u="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var d=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^d^d>>>8},l===(l|0)?c.x=l:u+=l;for(var p=0;p<u.length+64;p++)c.x^=u.charCodeAt(p)|0,c.next()}function i(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c}function o(l,c){var u=new s(l),p=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,p&&(typeof p=="object"&&i(p,u),d.state=function(){return i(u,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),Z_=dn((e,t)=>{(function(n,a,r){function s(l){var c=this,u="";c.next=function(){var d=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(d^d<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,l===(l|0)?c.x=l:u+=l;for(var p=0;p<u.length+64;p++)c.x^=u.charCodeAt(p)|0,p==u.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function i(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c.v=l.v,c.d=l.d,c}function o(l,c){var u=new s(l),p=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,p&&(typeof p=="object"&&i(p,u),d.state=function(){return i(u,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),Q_=dn((e,t)=>{(function(n,a,r){function s(l){var c=this;c.next=function(){var p=c.x,d=c.i,h,m,f;return h=p[d],h^=h>>>7,m=h^h<<24,h=p[d+1&7],m^=h^h>>>10,h=p[d+3&7],m^=h^h>>>3,h=p[d+4&7],m^=h^h<<7,h=p[d+7&7],h=h^h<<13,m^=h^h<<9,p[d]=m,c.i=d+1&7,m};function u(p,d){var h,m,f=[];if(d===(d|0))m=f[0]=d;else for(d=""+d,h=0;h<d.length;++h)f[h&7]=f[h&7]<<15^d.charCodeAt(h)+f[h+1&7]<<13;for(;f.length<8;)f.push(0);for(h=0;h<8&&f[h]===0;++h);for(h==8?m=f[7]=-1:m=f[h],p.x=f,p.i=0,h=256;h>0;--h)p.next()}u(c,l)}function i(l,c){return c.x=l.x.slice(),c.i=l.i,c}function o(l,c){l==null&&(l=+new Date);var u=new s(l),p=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,p&&(p.x&&i(p,u),d.state=function(){return i(u,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),eF=dn((e,t)=>{(function(n,a,r){function s(l){var c=this;c.next=function(){var p=c.w,d=c.X,h=c.i,m,f;return c.w=p=p+1640531527|0,f=d[h+34&127],m=d[h=h+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=d[h]=f^m,c.i=h,f+(p^p>>>16)|0};function u(p,d){var h,m,f,g,y,b=[],x=128;for(d===(d|0)?(m=d,d=null):(d=d+"\0",m=0,x=Math.max(x,d.length)),f=0,g=-32;g<x;++g)d&&(m^=d.charCodeAt((g+32)%d.length)),g===0&&(y=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,g>=0&&(y=y+1640531527|0,h=b[g&127]^=m+y,f=h==0?f+1:0);for(f>=128&&(b[(d&&d.length||0)&127]=-1),f=127,g=4*128;g>0;--g)m=b[f+34&127],h=b[f=f+1&127],m^=m<<13,h^=h<<17,m^=m>>>15,h^=h>>>12,b[f]=m^h;p.w=y,p.X=b,p.i=f}u(c,l)}function i(l,c){return c.i=l.i,c.w=l.w,c.X=l.X.slice(),c}function o(l,c){l==null&&(l=+new Date);var u=new s(l),p=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,p&&(p.X&&i(p,u),d.state=function(){return i(u,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),tF=dn((e,t)=>{(function(n,a,r){function s(l){var c=this,u="";c.next=function(){var d=c.b,h=c.c,m=c.d,f=c.a;return d=d<<25^d>>>7^h,h=h-m|0,m=m<<24^m>>>8^f,f=f-d|0,c.b=d=d<<20^d>>>12^h,c.c=h=h-m|0,c.d=m<<16^h>>>16^f,c.a=f-d|0},c.a=0,c.b=0,c.c=2654435769|0,c.d=1367130551,l===Math.floor(l)?(c.a=l/4294967296|0,c.b=l|0):u+=l;for(var p=0;p<u.length+20;p++)c.b^=u.charCodeAt(p)|0,c.next()}function i(l,c){return c.a=l.a,c.b=l.b,c.c=l.c,c.d=l.d,c}function o(l,c){var u=new s(l),p=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,p&&(typeof p=="object"&&i(p,u),d.state=function(){return i(u,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),nF=dn(()=>{}),aF=dn((e,t)=>{(function(n,a){var r=this,s=256,i=6,o=52,l="random",c=a.pow(s,i),u=a.pow(2,o),p=u*2,d=s-1,h;function m(N,T,E){var A=[];T=T==!0?{entropy:!0}:T||{};var $=b(y(T.entropy?[N,v(n)]:N==null?x():N,3),A),O=new f(A),V=function(){for(var W=O.g(i),H=c,X=0;W<u;)W=(W+X)*s,H*=s,X=O.g(1);for(;W>=p;)W/=2,H/=2,X>>>=1;return(W+X)/H};return V.int32=function(){return O.g(4)|0},V.quick=function(){return O.g(4)/4294967296},V.double=V,b(v(O.S),n),(T.pass||E||function(W,H,X,q){return q&&(q.S&&g(q,O),W.state=function(){return g(O,{})}),X?(a[l]=W,H):W})(V,$,"global"in T?T.global:this==a,T.state)}a["seed"+l]=m;function f(N){var T,E=N.length,A=this,$=0,O=A.i=A.j=0,V=A.S=[];for(E||(N=[E++]);$<s;)V[$]=$++;for($=0;$<s;$++)V[$]=V[O=d&O+N[$%E]+(T=V[$])],V[O]=T;(A.g=function(W){for(var H,X=0,q=A.i,K=A.j,J=A.S;W--;)H=J[q=d&q+1],X=X*s+J[d&(J[q]=J[K=d&K+H])+(J[K]=H)];return A.i=q,A.j=K,X})(s)}function g(N,T){return T.i=N.i,T.j=N.j,T.S=N.S.slice(),T}function y(N,T){var E=[],A=typeof N,$;if(T&&A=="object")for($ in N)try{E.push(y(N[$],T-1))}catch(O){}return E.length?E:A=="string"?N:N+"\0"}function b(N,T){for(var E=N+"",A,$=0;$<E.length;)T[d&$]=d&(A^=T[d&$]*19)+E.charCodeAt($++);return v(T)}function x(){try{var N;return h&&(N=h.randomBytes)?N=N(s):(N=new Uint8Array(s),(r.crypto||r.msCrypto).getRandomValues(N)),v(N)}catch(A){var T=r.navigator,E=T&&T.plugins;return[+new Date,r,E,r.screen,v(n)]}}function v(N){return String.fromCharCode.apply(0,N)}if(b(a.random(),n),typeof t=="object"&&t.exports){t.exports=m;try{h=nF()}catch(N){}}else typeof define=="function"&&define.amd&&define(function(){return m})})([],Math)}),Dd=dn((e,t)=>{var n=Y_(),a=J_(),r=Z_(),s=Q_(),i=eF(),o=tF(),l=aF();l.alea=n,l.xor128=a,l.xorwow=r,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}),rF=dn(()=>{}),lc=dn(()=>{}),sF=dn(()=>{}),iF=dn(()=>{}),oF=dn((e,t)=>{var n=function(){var a=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(a=a||__filename),function(r){r=r||{};function s(){return ae.buffer!=Nt&&ka(ae.buffer),an}function i(){return ae.buffer!=Nt&&ka(ae.buffer),kn}function o(){return ae.buffer!=Nt&&ka(ae.buffer),pn}function l(){return ae.buffer!=Nt&&ka(ae.buffer),jn}function c(){return ae.buffer!=Nt&&ka(ae.buffer),hr}var u=typeof r!="undefined"?r:{},p=void 0,d={},h;for(h in u)u.hasOwnProperty(h)&&(d[h]=u[h]);var m=[],f="./this.program",g=function(w,S){throw S},y=!1,b=!1,x=!1,v=!1;y=typeof window=="object",b=typeof importScripts=="function",x=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",v=!y&&!x&&!b;var N=u.ENVIRONMENT_IS_PTHREAD||!1;N&&(Nt=u.buffer,Na=u.DYNAMIC_BASE,Ss=u.DYNAMICTOP_PTR);var T="";function E(w){return u.locateFile?u.locateFile(w,T):T+w}var A,$,O,V,W,H;if(x){b?T=lc().dirname(T)+"/":T=__dirname+"/",A=function(w,S){return W||(W=require("fs")),H||(H=lc()),w=H.normalize(w),W.readFileSync(w,S?null:"utf8")},O=function(w){var S=A(w,!0);return S.buffer||(S=new Uint8Array(S)),Te(S.buffer),S},process.argv.length>1&&(f=process.argv[1].replace(/\\/g,"/")),m=process.argv.slice(2),process.on("uncaughtException",function(w){if(!(w instanceof jw))throw w}),process.on("unhandledRejection",gr),g=function(w){process.exit(w)},u.inspect=function(){return"[Emscripten Module object]"};var X;try{X=sF()}catch(w){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),w}Worker=X.Worker}else v?(typeof read!="undefined"&&(A=function(w){return read(w)}),O=function(w){var S;return typeof readbuffer=="function"?new Uint8Array(readbuffer(w)):(S=read(w,"binary"),Te(typeof S=="object"),S)},typeof scriptArgs!="undefined"?m=scriptArgs:typeof arguments!="undefined"&&(m=arguments),typeof quit=="function"&&(g=function(w){quit(w)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(y||b)&&(b?T=self.location.href:document.currentScript&&(T=document.currentScript.src),p&&(T=p),T.indexOf("blob:")!==0?T=T.substr(0,T.lastIndexOf("/")+1):T="",x?(A=function(w,S){return W||(W=require("fs")),H||(H=lc()),w=H.normalize(w),W.readFileSync(w,S?null:"utf8")},O=function(w){var S=A(w,!0);return S.buffer||(S=new Uint8Array(S)),Te(S.buffer),S}):(A=function(w){var S=new XMLHttpRequest;return S.open("GET",w,!1),S.send(null),S.responseText},b&&(O=function(w){var S=new XMLHttpRequest;return S.open("GET",w,!1),S.responseType="arraybuffer",S.send(null),new Uint8Array(S.response)}),$=function(w,S,M){var G=new XMLHttpRequest;G.open("GET",w,!0),G.responseType="arraybuffer",G.onload=function(){if(G.status==200||G.status==0&&G.response){S(G.response);return}M()},G.onerror=M,G.send(null)}),V=function(w){document.title=w});x&&typeof performance=="undefined"&&(performance=iF().performance);var q=u.print||console.log.bind(console),K=u.printErr||console.warn.bind(console);for(h in d)d.hasOwnProperty(h)&&(u[h]=d[h]);d=null,u.arguments&&(m=u.arguments),u.thisProgram&&(f=u.thisProgram),u.quit&&(g=u.quit);var J=Atomics.load,te=Atomics.store,Q=Atomics.compareExchange,ie;u.wasmBinary&&(ie=u.wasmBinary);var re;u.noExitRuntime&&(re=u.noExitRuntime),typeof WebAssembly!="object"&&K("no native wasm support detected");var ae,oe=new WebAssembly.Table({initial:169,maximum:169+0,element:"anyfunc"}),he,ce=0,ge=0,be=!1,Ie=0;function Te(w,S){w||gr("Assertion failed: "+S)}function Ee(w){var S=u["_"+w];return Te(S,"Cannot call unknown function "+w+", make sure it is exported"),S}function Me(w,S,M,G,me){var ue={string:function(Xn){var Gr=0;if(Xn!=null&&Xn!==0){var ic=(Xn.length<<2)+1;Gr=Ao(ic),Ge(Xn,Gr,ic)}return Gr},array:function(Xn){var Gr=Ao(Xn.length);return gt(Xn,Gr),Gr}};function le(Xn){return S==="string"?Ve(Xn):S==="boolean"?Boolean(Xn):Xn}var we=Ee(w),et=[],Lt=0;if(G)for(var ln=0;ln<G.length;ln++){var Do=ue[M[ln]];Do?(Lt===0&&(Lt=ac()),et[ln]=Do(G[ln])):et[ln]=G[ln]}var sc=we.apply(null,et);return sc=le(sc),Lt!==0&&$o(Lt),sc}function Je(w,S,M,G){M=M||[];var me=M.every(function(le){return le==="number"}),ue=S!=="string";return ue&&me&&!G?Ee(w):function(){return Me(w,S,M,arguments,G)}}function nt(w,S,M){for(var G=S+M,me="";!(S>=G);){var ue=w[S++];if(!ue)return me;if(!(ue&128)){me+=String.fromCharCode(ue);continue}var le=w[S++]&63;if((ue&224)==192){me+=String.fromCharCode((ue&31)<<6|le);continue}var we=w[S++]&63;if((ue&240)==224?ue=(ue&15)<<12|le<<6|we:ue=(ue&7)<<18|le<<12|we<<6|w[S++]&63,ue<65536)me+=String.fromCharCode(ue);else{var et=ue-65536;me+=String.fromCharCode(55296|et>>10,56320|et&1023)}}return me}function Ve(w,S){return w?nt(i(),w,S):""}function ut(w,S,M,G){if(!(G>0))return 0;for(var me=M,ue=M+G-1,le=0;le<w.length;++le){var we=w.charCodeAt(le);if(we>=55296&&we<=57343){var et=w.charCodeAt(++le);we=65536+((we&1023)<<10)|et&1023}if(we<=127){if(M>=ue)break;S[M++]=we}else if(we<=2047){if(M+1>=ue)break;S[M++]=192|we>>6,S[M++]=128|we&63}else if(we<=65535){if(M+2>=ue)break;S[M++]=224|we>>12,S[M++]=128|we>>6&63,S[M++]=128|we&63}else{if(M+3>=ue)break;S[M++]=240|we>>18,S[M++]=128|we>>12&63,S[M++]=128|we>>6&63,S[M++]=128|we&63}}return S[M]=0,M-me}function Ge(w,S,M){return ut(w,i(),S,M)}function ct(w){for(var S=0,M=0;M<w.length;++M){var G=w.charCodeAt(M);G>=55296&&G<=57343&&(G=65536+((G&1023)<<10)|w.charCodeAt(++M)&1023),G<=127?++S:G<=2047?S+=2:G<=65535?S+=3:S+=4}return S}function gt(w,S){s().set(w,S)}var Fn=65536;function _t(w,S){return w%S>0&&(w+=S-w%S),w}var Nt,an,kn,la,An,pn,jn,dr,hr;function ka(w){Nt=w,u.HEAP8=an=new Int8Array(w),u.HEAP16=la=new Int16Array(w),u.HEAP32=pn=new Int32Array(w),u.HEAPU8=kn=new Uint8Array(w),u.HEAPU16=An=new Uint16Array(w),u.HEAPU32=jn=new Uint32Array(w),u.HEAPF32=dr=new Float32Array(w),u.HEAPF64=hr=new Float64Array(w)}var Io=5256464,Ia=Io,Ua=13584,Na=5256464,Ss=12656,sd=u.INITIAL_MEMORY||16777216;if(N)ae=u.wasmMemory,Nt=u.buffer;else if(u.wasmMemory)ae=u.wasmMemory;else if(ae=new WebAssembly.Memory({initial:sd/Fn,maximum:2147483648/Fn,shared:!0}),!(ae.buffer instanceof SharedArrayBuffer))throw K("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),x&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");ae&&(Nt=ae.buffer),sd=Nt.byteLength,ka(Nt),N||(o()[Ss>>2]=Na);function mr(w){for(;w.length>0;){var S=w.shift();if(typeof S=="function"){S(u);continue}var M=S.func;typeof M=="number"?S.arg===void 0?u.dynCall_v(M):u.dynCall_vi(M,S.arg):M(S.arg===void 0?null:S.arg)}}var ju=[],id=[],od=[],ld=[],qu=[],qn=!1;N&&(qn=!0);function ud(){if(!N){if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)Cs(u.preRun.shift());mr(ju)}}function Xf(){qn=!0,mr(id)}function Yf(){N||mr(od)}function Jf(){if(!N){if(u.postRun)for(typeof u.postRun=="function"&&(u.postRun=[u.postRun]);u.postRun.length;)No(u.postRun.shift());mr(qu)}}function Cs(w){ju.unshift(w)}function No(w){qu.unshift(w)}var Zf=Math.ceil,Qf=Math.floor,fr=0,Ku=null,Es=null;function eg(w){Te(!N,"addRunDependency cannot be used in a pthread worker"),fr++,u.monitorRunDependencies&&u.monitorRunDependencies(fr)}function cd(w){if(fr--,u.monitorRunDependencies&&u.monitorRunDependencies(fr),fr==0&&(Ku!==null&&(clearInterval(Ku),Ku=null),Es)){var S=Es;Es=null,S()}}u.preloadedImages={},u.preloadedAudios={};function gr(w){throw u.onAbort&&u.onAbort(w),N&&console.error("Pthread aborting at "+new Error().stack),w+="",q(w),K(w),be=!0,Ie=1,w="abort("+w+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(w)}function pd(w,S){return String.prototype.startsWith?w.startsWith(S):w.indexOf(S)===0}var tg="data:application/octet-stream;base64,";function dd(w){return pd(w,tg)}var ng="file://";function hd(w){return pd(w,ng)}var ua="tfjs-backend-wasm-threaded-simd.wasm";dd(ua)||(ua=E(ua));function md(){try{if(ie)return new Uint8Array(ie);if(O)return O(ua);throw"both async and sync fetching of the wasm failed"}catch(w){gr(w)}}function ag(){return!ie&&(y||b)&&typeof fetch=="function"&&!hd(ua)?fetch(ua,{credentials:"same-origin"}).then(function(w){if(!w.ok)throw"failed to load wasm binary file at '"+ua+"'";return w.arrayBuffer()}).catch(function(){return md()}):new Promise(function(w,S){w(md())})}function rg(){var w={a:Td};function S(le,we){var et=le.exports;if(u.asm=et,he=we,!N){var Lt=ye.unusedWorkers.length;ye.unusedWorkers.forEach(function(ln){ye.loadWasmModuleToWorker(ln,function(){--Lt||cd("wasm-instantiate")})})}}N||eg("wasm-instantiate");function M(le){S(le.instance,le.module)}function G(le){return ag().then(function(we){return WebAssembly.instantiate(we,w)}).then(le,function(we){K("failed to asynchronously prepare wasm: "+we),gr(we)})}function me(){if(!ie&&typeof WebAssembly.instantiateStreaming=="function"&&!dd(ua)&&!hd(ua)&&typeof fetch=="function")fetch(ua,{credentials:"same-origin"}).then(function(le){var we=WebAssembly.instantiateStreaming(le,w);return we.then(M,function(et){K("wasm streaming compile failed: "+et),K("falling back to ArrayBuffer instantiation"),G(M)})});else return G(M)}if(u.instantiateWasm)try{var ue=u.instantiateWasm(w,S);return ue}catch(le){return K("Module.instantiateWasm callback failed with error: "+le),!1}return me(),{}}var sg={};function ig(){ye.initRuntime()}N||id.push({func:function(){Ju()}});var fd=0,gd=0,yd=0;function To(w,S,M){w=w|0,S=S|0,M=M|0,fd=w,yd=S,gd=M}u.__register_pthread_ptr=To;var Xu={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135},So=13568;function Co(w,S){if(w<=0||w>s().length||w&!0||S<0)return-28;if(S==0)return 0;S>=2147483647&&(S=Infinity);var M=Atomics.load(o(),So>>2),G=0;if(M==w){var me=Atomics.compareExchange(o(),So>>2,M,0);if(me==M&&(--S,G=1,S<=0))return 1}var ue=Atomics.notify(o(),w>>2,S);if(ue>=0)return ue+G;throw"Atomics.notify returned an unexpected value "+ue}u._emscripten_futex_wake=Co;function og(w){if(N)throw"Internal Error! _kill_thread() can only ever be called from main application thread!";if(!w)throw"Internal Error! Null pthread_ptr in _kill_thread!";o()[w+12>>2]=0;var S=ye.pthreads[w];S.worker.terminate(),ye.freeThreadData(S),ye.runningWorkers.splice(ye.runningWorkers.indexOf(S.worker),1),S.worker.pthread=void 0}function lg(w){if(N)throw"Internal Error! _cancel_thread() can only ever be called from main application thread!";if(!w)throw"Internal Error! Null pthread_ptr in _cancel_thread!";var S=ye.pthreads[w];S.worker.postMessage({cmd:"cancel"})}function ug(w){if(N)throw"Internal Error! _cleanup_thread() can only ever be called from main application thread!";if(!w)throw"Internal Error! Null pthread_ptr in _cleanup_thread!";o()[w+12>>2]=0;var S=ye.pthreads[w];if(S){var M=S.worker;ye.returnWorkerToPool(M)}}var ye={MAIN_THREAD_ID:1,mainThreadInfo:{schedPolicy:0,schedPrio:0},unusedWorkers:[],runningWorkers:[],initRuntime:function(){To(ye.mainThreadBlock,!b,1),Vw(ye.mainThreadBlock)},initMainThreadBlock:function(){for(var w=8,S=0;S<w;++S)ye.allocateUnusedWorker();ye.mainThreadBlock=12816;for(var S=0;S<232/4;++S)l()[ye.mainThreadBlock/4+S]=0;o()[ye.mainThreadBlock+12>>2]=ye.mainThreadBlock;var M=ye.mainThreadBlock+156;o()[M>>2]=M;for(var G=13056,S=0;S<128;++S)l()[G/4+S]=0;Atomics.store(l(),ye.mainThreadBlock+104>>2,G),Atomics.store(l(),ye.mainThreadBlock+40>>2,ye.mainThreadBlock),Atomics.store(l(),ye.mainThreadBlock+44>>2,42)},initWorker:function(){},pthreads:{},exitHandlers:null,setThreadStatus:function(){},runExitHandlers:function(){if(ye.exitHandlers!==null){for(;ye.exitHandlers.length>0;)ye.exitHandlers.pop()();ye.exitHandlers=null}N&&ce&&Ww()},threadExit:function(w){var S=Ga();S&&(Atomics.store(l(),S+4>>2,w),Atomics.store(l(),S+0>>2,1),Atomics.store(l(),S+60>>2,1),Atomics.store(l(),S+64>>2,0),ye.runExitHandlers(),Co(S+0,2147483647),To(0,0,0),ce=0,N&&postMessage({cmd:"exit"}))},threadCancel:function(){ye.runExitHandlers(),Atomics.store(l(),ce+4>>2,-1),Atomics.store(l(),ce+0>>2,1),Co(ce+0,2147483647),ce=ge=0,To(0,0,0),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var w in ye.pthreads){var S=ye.pthreads[w];S&&S.worker&&ye.returnWorkerToPool(S.worker)}ye.pthreads={};for(var M=0;M<ye.unusedWorkers.length;++M){var G=ye.unusedWorkers[M];G.terminate()}ye.unusedWorkers=[];for(var M=0;M<ye.runningWorkers.length;++M){var G=ye.runningWorkers[M],S=G.pthread;ye.freeThreadData(S),G.terminate()}ye.runningWorkers=[]},freeThreadData:function(w){if(w){if(w.threadInfoStruct){var S=o()[w.threadInfoStruct+104>>2];o()[w.threadInfoStruct+104>>2]=0,nc(S),nc(w.threadInfoStruct)}w.threadInfoStruct=0,w.allocatedOwnStack&&w.stackBase&&nc(w.stackBase),w.stackBase=0,w.worker&&(w.worker.pthread=null)}},returnWorkerToPool:function(w){delete ye.pthreads[w.pthread.thread],ye.unusedWorkers.push(w),ye.runningWorkers.splice(ye.runningWorkers.indexOf(w),1),ye.freeThreadData(w.pthread),w.pthread=void 0},receiveObjectTransfer:function(w){},loadWasmModuleToWorker:function(w,S){w.onmessage=function(M){var G=M.data,me=G.cmd;if(w.pthread&&(ye.currentProxiedOperationCallerThread=w.pthread.threadInfoStruct),G.targetThread&&G.targetThread!=Ga()){var ue=ye.pthreads[G.targetThread];ue?ue.worker.postMessage(M.data,G.transferList):console.error('Internal error! Worker sent a message "'+me+'" to target pthread '+G.targetThread+", but that thread no longer exists!"),ye.currentProxiedOperationCallerThread=void 0;return}if(me==="processQueuedMainThreadWork")Jg();else if(me==="spawnThread")Id(M.data);else if(me==="cleanupThread")ug(G.thread);else if(me==="killThread")og(G.thread);else if(me==="cancelThread")lg(G.thread);else if(me==="loaded")w.loaded=!0,S&&S(w),w.runPthread&&(w.runPthread(),delete w.runPthread);else if(me==="print")q("Thread "+G.threadId+": "+G.text);else if(me==="printErr")K("Thread "+G.threadId+": "+G.text);else if(me==="alert")alert("Thread "+G.threadId+": "+G.text);else if(me==="exit"){var le=w.pthread&&Atomics.load(l(),w.pthread.thread+68>>2);le&&ye.returnWorkerToPool(w)}else me==="cancelDone"?ye.returnWorkerToPool(w):me==="objectTransfer"?ye.receiveObjectTransfer(M.data):M.data.target==="setimmediate"?w.postMessage(M.data):K("worker sent an unknown command "+me);ye.currentProxiedOperationCallerThread=void 0},w.onerror=function(M){K("pthread sent an error! "+M.filename+":"+M.lineno+": "+M.message)},x&&(w.on("message",function(M){w.onmessage({data:M})}),w.on("error",function(M){w.onerror(M)}),w.on("exit",function(M){console.log("worker exited - TODO: update the worker queue?")})),w.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||p,wasmMemory:ae,wasmModule:he,DYNAMIC_BASE:Na,DYNAMICTOP_PTR:Ss})},allocateUnusedWorker:function(){var w=E("tfjs-backend-wasm-threaded-simd.worker.js");ye.unusedWorkers.push(new Worker(w))},getNewWorker:function(){return ye.unusedWorkers.length==0&&(ye.allocateUnusedWorker(),ye.loadWasmModuleToWorker(ye.unusedWorkers[0])),ye.unusedWorkers.length>0?ye.unusedWorkers.pop():null},busySpinWait:function(w){for(var S=performance.now()+w;performance.now()<S;);}};function cg(w,S){Io=Ia=w,Ua=S,$o(w)}u.establishStackSpace=cg;function pg(){return re}u.getNoExitRuntime=pg;function dg(w,S,M,G){gr("Assertion failed: "+Ve(w)+", at: "+[S?Ve(S):"unknown filename",M,G?Ve(G):"unknown function"])}function hg(w,S){var M=_main(w,S)}var _s;x?_s=function(){var w=process.hrtime();return w[0]*1e3+w[1]/1e6}:N?_s=function(){return performance.now()-u.__performance_now_clock_drift}:typeof dateNow!="undefined"?_s=dateNow:_s=function(){return performance.now()};function mg(w){return o()[zw()>>2]=w,w}function fg(w,S){if(N)return Wr(1,1,w,S);ld.unshift({func:w,arg:S})}function gg(w,S){if(w==S)postMessage({cmd:"processQueuedMainThreadWork"});else if(N)postMessage({targetThread:w,cmd:"processThreadQueue"});else{var M=ye.pthreads[w],G=M&&M.worker;if(!G)return;G.postMessage({cmd:"processThreadQueue"})}return 1}function yg(){gr()}function bg(w,S){w=w|0,S=S|0}function xg(w,S,M){if(w<=0||w>s().length||w&!0)return-28;if(b){var G=Atomics.wait(o(),w>>2,S,M);if(G==="timed-out")return-73;if(G==="not-equal")return-6;if(G==="ok")return 0;throw"Atomics.wait returned an unexpected value "+G}else{var me=Atomics.load(o(),w>>2);if(S!=me)return-6;var ue=performance.now(),le=ue+M;Atomics.store(o(),So>>2,w);for(var we=w;w==we;){if(ue=performance.now(),ue>le)return-73;Jg(),w=Atomics.load(o(),So>>2)}return 0}}function vg(){return yd|0}function wg(){return gd|0}function kg(w,S,M){i().copyWithin(w,S,S+M)}function Ig(){return navigator.hardwareConcurrency}function Wr(w,S){for(var M=arguments.length-2,G=ac(),me=Ao(M*8),ue=me>>3,le=0;le<M;le++)c()[ue+le]=arguments[2+le];var we=Gw(w,M,me,S);return $o(G),we}var Fs=[];function Eo(w,S){Eo.array||(Eo.array=[]);var M=Eo.array;M.length=0;for(var G;G=i()[w++];)G===100||G===102?(S=S+7&~7,M.push(c()[S>>3]),S+=8):(S=S+3&~3,M.push(o()[S>>2]),S+=4);return M}function Ng(w,S,M){Fs.length=S;for(var G=M>>3,me=0;me<S;me++)Fs[me]=c()[G+me];var ue=w<0,le=ue?sg[-w-1]:Kg[w];if(ue){var we=Fs[1],et=Fs[2],Lt=Eo(we,et);return le.apply(null,Lt)}return le.apply(null,Fs)}function Tg(){return i().length}function Sg(w){try{return ae.grow(w-Nt.byteLength+65535>>>16),ka(ae.buffer),1}catch(S){}}function Cg(w){w=w>>>0;var S=Tg();if(w<=S)return!1;var M=65536,G=2147483648;if(w>G)return!1;for(var me=16777216,ue=1;ue<=4;ue*=2){var le=S*(1+.2/ue);le=Math.min(le,w+100663296);var we=Math.min(G,_t(Math.max(me,w,le),M)),et=Sg(we);if(et)return!0}return!1}var Pe={keyEvent:0,mouseEvent:0,wheelEvent:0,uiEvent:0,focusEvent:0,deviceOrientationEvent:0,deviceMotionEvent:0,fullscreenChangeEvent:0,pointerlockChangeEvent:0,visibilityChangeEvent:0,touchEvent:0,previousFullscreenElement:null,previousScreenX:null,previousScreenY:null,removeEventListenersRegistered:!1,removeAllEventListeners:function(){for(var w=Pe.eventHandlers.length-1;w>=0;--w)Pe._removeHandler(w);Pe.eventHandlers=[],Pe.deferredCalls=[]},registerRemoveEventListeners:function(){Pe.removeEventListenersRegistered||(ld.push(Pe.removeAllEventListeners),Pe.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(w,S,M){function G(le,we){if(le.length!=we.length)return!1;for(var et in le)if(le[et]!=we[et])return!1;return!0}for(var me in Pe.deferredCalls){var ue=Pe.deferredCalls[me];if(ue.targetFunction==w&&G(ue.argsList,M))return}Pe.deferredCalls.push({targetFunction:w,precedence:S,argsList:M}),Pe.deferredCalls.sort(function(le,we){return le.precedence<we.precedence})},removeDeferredCalls:function(w){for(var S=0;S<Pe.deferredCalls.length;++S)Pe.deferredCalls[S].targetFunction==w&&(Pe.deferredCalls.splice(S,1),--S)},canPerformEventHandlerRequests:function(){return Pe.inEventHandler&&Pe.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(Pe.canPerformEventHandlerRequests())for(var w=0;w<Pe.deferredCalls.length;++w){var S=Pe.deferredCalls[w];Pe.deferredCalls.splice(w,1),--w,S.targetFunction.apply(null,S.argsList)}},inEventHandler:0,currentEventHandler:null,eventHandlers:[],removeAllHandlersOnTarget:function(w,S){for(var M=0;M<Pe.eventHandlers.length;++M)Pe.eventHandlers[M].target==w&&(!S||S==Pe.eventHandlers[M].eventTypeString)&&Pe._removeHandler(M--)},_removeHandler:function(w){var S=Pe.eventHandlers[w];S.target.removeEventListener(S.eventTypeString,S.eventListenerFunc,S.useCapture),Pe.eventHandlers.splice(w,1)},registerOrRemoveHandler:function(w){var S=function(G){++Pe.inEventHandler,Pe.currentEventHandler=w,Pe.runDeferredCalls(),w.handlerFunc(G),Pe.runDeferredCalls(),--Pe.inEventHandler};if(w.callbackfunc)w.eventListenerFunc=S,w.target.addEventListener(w.eventTypeString,S,w.useCapture),Pe.eventHandlers.push(w),Pe.registerRemoveEventListeners();else for(var M=0;M<Pe.eventHandlers.length;++M)Pe.eventHandlers[M].target==w.target&&Pe.eventHandlers[M].eventTypeString==w.eventTypeString&&Pe._removeHandler(M--)},queueEventHandlerOnThread_iiii:function(w,S,M,G,me){var ue=ac(),le=Ao(12);o()[le>>2]=M,o()[le+4>>2]=G,o()[le+8>>2]=me,Zg(w,637534208,S,G,le),$o(ue)},getTargetThreadForEventCallback:function(w){switch(w){case 1:return 0;case 2:return ye.currentProxiedOperationCallerThread;default:return w}},getNodeNameForTarget:function(w){return w?w==window?"#window":w==screen?"#screen":w&&w.nodeName?w.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Eg(w){var S=ct(w)+1,M=tc(S);return Ge(w,M,S),M}function _g(w,S,M,G){var me=ac(),ue=Ao(12),le=0;S&&(le=Eg(S)),o()[ue>>2]=le,o()[ue+4>>2]=M,o()[ue+8>>2]=G,Zg(w,657457152,0,le,ue),$o(me)}function Fg(w,S,M,G){S=S?Ve(S):"",_g(w,S,M,G)}function Ag(w){return w>2?Ve(w):w}var $g=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function Dg(w){w=Ag(w);var S=$g[w]||(typeof document!="undefined"?document.querySelector(w):void 0);return S}function Yu(w){return Dg(w)}function bd(w,S,M){var G=Yu(w);if(!G)return-4;if(G.canvasSharedPtr&&(o()[G.canvasSharedPtr>>2]=S,o()[G.canvasSharedPtr+4>>2]=M),G.offscreenCanvas||!G.controlTransferredOffscreen){G.offscreenCanvas&&(G=G.offscreenCanvas);var me=!1;if(G.GLctxObject&&G.GLctxObject.GLctx){var ue=G.GLctxObject.GLctx.getParameter(2978);me=ue[0]===0&&ue[1]===0&&ue[2]===G.width&&ue[3]===G.height}G.width=S,G.height=M,me&&G.GLctxObject.GLctx.viewport(0,0,S,M)}else if(G.canvasSharedPtr){var le=o()[G.canvasSharedPtr+8>>2];return Fg(le,w,S,M),1}else return-4;return 0}function xd(w,S,M){return N?Wr(2,1,w,S,M):bd(w,S,M)}function Mg(w,S,M){var G=Yu(w);return G?bd(w,S,M):xd(w,S,M)}function Rg(w){w=w|0}function Pg(w,S){w=w|0,S=S|0}function Og(w){var S=w.getExtension("ANGLE_instanced_arrays");if(S)return w.vertexAttribDivisor=function(M,G){S.vertexAttribDivisorANGLE(M,G)},w.drawArraysInstanced=function(M,G,me,ue){S.drawArraysInstancedANGLE(M,G,me,ue)},w.drawElementsInstanced=function(M,G,me,ue,le){S.drawElementsInstancedANGLE(M,G,me,ue,le)},1}function Lg(w){var S=w.getExtension("OES_vertex_array_object");if(S)return w.createVertexArray=function(){return S.createVertexArrayOES()},w.deleteVertexArray=function(M){S.deleteVertexArrayOES(M)},w.bindVertexArray=function(M){S.bindVertexArrayOES(M)},w.isVertexArray=function(M){return S.isVertexArrayOES(M)},1}function zg(w){var S=w.getExtension("WEBGL_draw_buffers");if(S)return w.drawBuffers=function(M,G){S.drawBuffersWEBGL(M,G)},1}var Be={counter:1,lastError:0,buffers:[],mappedBuffers:{},programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},currentContext:null,offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,init:function(){for(var w=new Float32Array(Be.MINI_TEMP_BUFFER_SIZE),S=0;S<Be.MINI_TEMP_BUFFER_SIZE;S++)Be.miniTempBufferFloatViews[S]=w.subarray(0,S+1);for(var M=new Int32Array(Be.MINI_TEMP_BUFFER_SIZE),S=0;S<Be.MINI_TEMP_BUFFER_SIZE;S++)Be.miniTempBufferIntViews[S]=M.subarray(0,S+1)},recordError:function(w){Be.lastError||(Be.lastError=w)},getNewId:function(w){for(var S=Be.counter++,M=w.length;M<S;M++)w[M]=null;return S},MINI_TEMP_BUFFER_SIZE:256,miniTempBufferFloatViews:[0],miniTempBufferIntViews:[0],getSource:function(w,S,M,G){for(var me="",ue=0;ue<S;++ue){var le=G?o()[G+ue*4>>2]:-1;me+=Ve(o()[M+ue*4>>2],le<0?void 0:le)}return me},createContext:function(w,S){var M=w.getContext("webgl",S);if(!M)return 0;var G=Be.registerContext(M,S);return G},registerContext:function(w,S){var M=tc(8);o()[M+4>>2]=Ga();var G={handle:M,attributes:S,version:S.majorVersion,GLctx:w};return w.canvas&&(w.canvas.GLctxObject=G),Be.contexts[M]=G,(typeof S.enableExtensionsByDefault=="undefined"||S.enableExtensionsByDefault)&&Be.initExtensions(G),M},makeContextCurrent:function(w){return Be.currentContext=Be.contexts[w],u.ctx=Vr=Be.currentContext&&Be.currentContext.GLctx,!(w&&!Vr)},getContext:function(w){return Be.contexts[w]},deleteContext:function(w){Be.currentContext===Be.contexts[w]&&(Be.currentContext=null),typeof Pe=="object"&&Pe.removeAllHandlersOnTarget(Be.contexts[w].GLctx.canvas),Be.contexts[w]&&Be.contexts[w].GLctx.canvas&&(Be.contexts[w].GLctx.canvas.GLctxObject=void 0),nc(Be.contexts[w].handle),Be.contexts[w]=null},initExtensions:function(w){if(w||(w=Be.currentContext),!w.initExtensionsDone){w.initExtensionsDone=!0;var S=w.GLctx;Og(S),Lg(S),zg(S),S.disjointTimerQueryExt=S.getExtension("EXT_disjoint_timer_query");var M=["OES_texture_float","OES_texture_half_float","OES_standard_derivatives","OES_vertex_array_object","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","OES_element_index_uint","EXT_texture_filter_anisotropic","EXT_frag_depth","WEBGL_draw_buffers","ANGLE_instanced_arrays","OES_texture_float_linear","OES_texture_half_float_linear","EXT_blend_minmax","EXT_shader_texture_lod","EXT_texture_norm16","WEBGL_compressed_texture_pvrtc","EXT_color_buffer_half_float","WEBGL_color_buffer_float","EXT_sRGB","WEBGL_compressed_texture_etc1","EXT_disjoint_timer_query","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_astc","EXT_color_buffer_float","WEBGL_compressed_texture_s3tc_srgb","EXT_disjoint_timer_query_webgl2","WEBKIT_WEBGL_compressed_texture_pvrtc"],G=S.getSupportedExtensions()||[];G.forEach(function(me){M.indexOf(me)!=-1&&S.getExtension(me)})}},populateUniformTable:function(w){for(var S=Be.programs[w],M=Be.programInfos[w]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},G=M.uniforms,me=Vr.getProgramParameter(S,35718),ue=0;ue<me;++ue){var le=Vr.getActiveUniform(S,ue),we=le.name;M.maxUniformLength=Math.max(M.maxUniformLength,we.length+1),we.slice(-1)=="]"&&(we=we.slice(0,we.lastIndexOf("[")));var et=Vr.getUniformLocation(S,we);if(et){var Lt=Be.getNewId(Be.uniforms);G[we]=[le.size,Lt],Be.uniforms[Lt]=et;for(var ln=1;ln<le.size;++ln){var Do=we+"["+ln+"]";et=Vr.getUniformLocation(S,Do),Lt=Be.getNewId(Be.uniforms),Be.uniforms[Lt]=et}}}}},Bg=["default","low-power","high-performance"];function Wg(w,S){var M={},G=S>>2;M.alpha=!!o()[G+(0>>2)],M.depth=!!o()[G+(4>>2)],M.stencil=!!o()[G+(8>>2)],M.antialias=!!o()[G+(12>>2)],M.premultipliedAlpha=!!o()[G+(16>>2)],M.preserveDrawingBuffer=!!o()[G+(20>>2)];var me=o()[G+(24>>2)];M.powerPreference=Bg[me],M.failIfMajorPerformanceCaveat=!!o()[G+(28>>2)],M.majorVersion=o()[G+(32>>2)],M.minorVersion=o()[G+(36>>2)],M.enableExtensionsByDefault=o()[G+(40>>2)],M.explicitSwapControl=o()[G+(44>>2)],M.proxyContextToMainThread=o()[G+(48>>2)],M.renderViaOffscreenBackBuffer=o()[G+(52>>2)];var ue=Yu(w);if(!ue)return-4;if(M.explicitSwapControl)return-1;var le=Be.createContext(ue,M);return le}function Vg(w,S){return Wg(w,S)}var As={splitPath:function(w){var S=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return S.exec(w).slice(1)},normalizeArray:function(w,S){for(var M=0,G=w.length-1;G>=0;G--){var me=w[G];me==="."?w.splice(G,1):me===".."?(w.splice(G,1),M++):M&&(w.splice(G,1),M--)}if(S)for(;M;M--)w.unshift("..");return w},normalize:function(w){var S=w.charAt(0)==="/",M=w.substr(-1)==="/";return w=As.normalizeArray(w.split("/").filter(function(G){return!!G}),!S).join("/"),!w&&!S&&(w="."),w&&M&&(w+="/"),(S?"/":"")+w},dirname:function(w){var S=As.splitPath(w),M=S[0],G=S[1];return!M&&!G?".":(G&&(G=G.substr(0,G.length-1)),M+G)},basename:function(w){if(w==="/")return"/";var S=w.lastIndexOf("/");return S===-1?w:w.substr(S+1)},extname:function(w){return As.splitPath(w)[3]},join:function(){var w=Array.prototype.slice.call(arguments,0);return As.normalize(w.join("/"))},join2:function(w,S){return As.normalize(w+"/"+S)}},_o={mappings:{},buffers:[null,[],[]],printChar:function(w,S){var M=_o.buffers[w];S===0||S===10?((w===1?q:K)(nt(M,0)),M.length=0):M.push(S)},varargs:void 0,get:function(){_o.varargs+=4;var w=o()[_o.varargs-4>>2];return w},getStr:function(w){var S=Ve(w);return S},get64:function(w,S){return w}};function vd(w){return N?Wr(3,1,w):0}function wd(w,S,M,G,me){if(N)return Wr(4,1,w,S,M,G,me)}function kd(w,S,M,G){if(N)return Wr(5,1,w,S,M,G);for(var me=0,ue=0;ue<M;ue++){for(var le=o()[S+ue*8>>2],we=o()[S+(ue*8+4)>>2],et=0;et<we;et++)_o.printChar(w,i()[le+et]);me+=we}return o()[G>>2]=me,0}function Ug(w){var S=ye.exitHandlers.pop();w&&S()}function Gg(w,S){ye.exitHandlers===null&&(ye.exitHandlers=[]),ye.exitHandlers.push(function(){Hw(w,S)})}function Id(w){if(N)throw"Internal Error! _spawn_thread() can only ever be called from main application thread!";var S=ye.getNewWorker();if(S.pthread!==void 0)throw"Internal error!";if(!w.pthread_ptr)throw"Internal error, no pthread ptr!";ye.runningWorkers.push(S);for(var M=tc(128*4),G=0;G<128;++G)o()[M+G*4>>2]=0;var me=w.stackBase+w.stackSize,ue=ye.pthreads[w.pthread_ptr]={worker:S,stackBase:w.stackBase,stackSize:w.stackSize,allocatedOwnStack:w.allocatedOwnStack,thread:w.pthread_ptr,threadInfoStruct:w.pthread_ptr},le=ue.threadInfoStruct>>2;Atomics.store(l(),le+(0>>2),0),Atomics.store(l(),le+(4>>2),0),Atomics.store(l(),le+(8>>2),0),Atomics.store(l(),le+(68>>2),w.detached),Atomics.store(l(),le+(104>>2),M),Atomics.store(l(),le+(48>>2),0),Atomics.store(l(),le+(40>>2),ue.threadInfoStruct),Atomics.store(l(),le+(44>>2),42),Atomics.store(l(),le+(108>>2),w.stackSize),Atomics.store(l(),le+(84>>2),w.stackSize),Atomics.store(l(),le+(80>>2),me),Atomics.store(l(),le+(108+8>>2),me),Atomics.store(l(),le+(108+12>>2),w.detached),Atomics.store(l(),le+(108+20>>2),w.schedPolicy),Atomics.store(l(),le+(108+24>>2),w.schedPrio);var we=Lw(),et=we+40;Atomics.store(l(),le+(176>>2),et),S.pthread=ue;var Lt={cmd:"run",start_routine:w.startRoutine,arg:w.arg,threadInfoStruct:w.pthread_ptr,selfThreadId:w.pthread_ptr,parentThreadId:w.parent_pthread_ptr,stackBase:w.stackBase,stackSize:w.stackSize};S.runPthread=function(){Lt.time=performance.now(),S.postMessage(Lt,w.transferList)},S.loaded&&(S.runPthread(),delete S.runPthread)}function Hg(w,S,M){if(!S&&!M)return Xu.EINVAL;if(!w)return K("pthread_getschedparam called with a null thread pointer!"),Xu.ESRCH;var G=o()[w+12>>2];if(G!==w)return K("pthread_getschedparam attempted on thread "+w+", which does not point to a valid thread, or does not exist anymore!"),Xu.ESRCH;var me=Atomics.load(l(),w+108+20>>2),ue=Atomics.load(l(),w+108+24>>2);return S&&(o()[S>>2]=me),M&&(o()[M>>2]=ue),0}function Ga(){return fd|0}u._pthread_self=Ga;function jg(w,S,M,G){if(typeof SharedArrayBuffer=="undefined")return K("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!w)return K("pthread_create called with a null thread pointer!"),28;var me=[],ue=0;if(N&&(me.length===0||ue))return Uw(687865856,w,S,M,G);if(ue)return ue;var le=0,we=0,et=0,Lt=0,ln=0;if(S){le=o()[S>>2],le+=81920,we=o()[S+8>>2],et=o()[S+12>>2]!==0;var Do=o()[S+16>>2]===0;if(Do){var sc=o()[S+20>>2],Xn=o()[S+24>>2],Gr=ye.currentProxiedOperationCallerThread?ye.currentProxiedOperationCallerThread:Ga();Hg(Gr,S+20,S+24),Lt=o()[S+20>>2],ln=o()[S+24>>2],o()[S+20>>2]=sc,o()[S+24>>2]=Xn}else Lt=o()[S+20>>2],ln=o()[S+24>>2]}else le=2097152;var ic=we==0;ic?we=Bw(16,le):(we-=le,Te(we>0));for(var Mo=tc(232),ey=0;ey<232>>2;++ey)l()[(Mo>>2)+ey]=0;o()[w>>2]=Mo,o()[Mo+12>>2]=Mo;var qw=Mo+156;o()[qw>>2]=qw;var ty={stackBase:we,stackSize:le,allocatedOwnStack:ic,schedPolicy:Lt,schedPrio:ln,detached:et,startRoutine:M,pthread_ptr:Mo,parent_pthread_ptr:Ga(),arg:G,transferList:me};return N?(ty.cmd="spawnThread",postMessage(ty,me)):Id(ty),0}function qg(w){return w=+w,w>=0?+Qf(w+.5):+Zf(w-.5)}function Nd(w){if(N)return Wr(6,1,w);switch(w){case 30:return 16384;case 85:var S=2147483648;return S/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:case 79:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return mg(28),-1}N?ye.initWorker():ye.initMainThreadBlock();var Vr;Be.init();var Kg=[null,fg,xd,vd,wd,kd,Nd],Td={e:dg,r:hg,w:gg,a:yg,l:bg,d:xg,c:Co,h:_s,g:vg,x:wg,q:kg,B:Ig,t:Ng,A:Cg,u:Mg,k:Rg,s:Pg,v:Vg,m:vd,o:wd,i:kd,p:ig,memory:ae||u.wasmMemory,y:Ug,z:Gg,j:jg,b:Ga,f:qg,n:Nd,table:oe},Fo=rg();u.asm=Fo;var Ju=u.___wasm_call_ctors=function(){return(Ju=u.___wasm_call_ctors=u.asm.C).apply(null,arguments)},$s=u._init=function(){return($s=u._init=u.asm.D).apply(null,arguments)},Zu=u._register_tensor=function(){return(Zu=u._register_tensor=u.asm.E).apply(null,arguments)},Xg=u._dispose_data=function(){return(Xg=u._dispose_data=u.asm.F).apply(null,arguments)},Yg=u._dispose=function(){return(Yg=u._dispose=u.asm.G).apply(null,arguments)},Qu=u._Abs=function(){return(Qu=u._Abs=u.asm.H).apply(null,arguments)},Sd=u._Add=function(){return(Sd=u._Add=u.asm.I).apply(null,arguments)},Cd=u._AddN=function(){return(Cd=u._AddN=u.asm.J).apply(null,arguments)},U=u._ArgMax=function(){return(U=u._ArgMax=u.asm.K).apply(null,arguments)},ne=u._AvgPool=function(){return(ne=u._AvgPool=u.asm.L).apply(null,arguments)},Ne=u._BatchMatMul=function(){return(Ne=u._BatchMatMul=u.asm.M).apply(null,arguments)},_e=u._ClipByValue=function(){return(_e=u._ClipByValue=u.asm.N).apply(null,arguments)},at=u._Conv2D=function(){return(at=u._Conv2D=u.asm.O).apply(null,arguments)},Ft=u._Conv2DBackpropInput=function(){return(Ft=u._Conv2DBackpropInput=u.asm.P).apply(null,arguments)},Ke=u._Cos=function(){return(Ke=u._Cos=u.asm.Q).apply(null,arguments)},je=u._CropAndResize=function(){return(je=u._CropAndResize=u.asm.R).apply(null,arguments)},jt=u._Cumsum=function(){return(jt=u._Cumsum=u.asm.S).apply(null,arguments)},yr=u._DepthToSpace=function(){return(yr=u._DepthToSpace=u.asm.T).apply(null,arguments)},br=u._DepthwiseConv2dNative=function(){return(br=u._DepthwiseConv2dNative=u.asm.U).apply(null,arguments)},Ed=u._Equal=function(){return(Ed=u._Equal=u.asm.V).apply(null,arguments)},ec=u._Exp=function(){return(ec=u._Exp=u.asm.W).apply(null,arguments)},Kn=u._FlipLeftRight=function(){return(Kn=u._FlipLeftRight=u.asm.X).apply(null,arguments)},Ur=u._Floor=function(){return(Ur=u._Floor=u.asm.Y).apply(null,arguments)},_d=u._FloorDiv=function(){return(_d=u._FloorDiv=u.asm.Z).apply(null,arguments)},vE=u._FusedBatchNorm=function(){return(vE=u._FusedBatchNorm=u.asm._).apply(null,arguments)},wE=u._FusedConv2D=function(){return(wE=u._FusedConv2D=u.asm.$).apply(null,arguments)},kE=u._FusedDepthwiseConv2D=function(){return(kE=u._FusedDepthwiseConv2D=u.asm.aa).apply(null,arguments)},IE=u._Gather=function(){return(IE=u._Gather=u.asm.ba).apply(null,arguments)},NE=u._GatherNd=function(){return(NE=u._GatherNd=u.asm.ca).apply(null,arguments)},TE=u._Greater=function(){return(TE=u._Greater=u.asm.da).apply(null,arguments)},SE=u._GreaterEqual=function(){return(SE=u._GreaterEqual=u.asm.ea).apply(null,arguments)},CE=u._LeakyRelu=function(){return(CE=u._LeakyRelu=u.asm.fa).apply(null,arguments)},EE=u._Less=function(){return(EE=u._Less=u.asm.ga).apply(null,arguments)},_E=u._LessEqual=function(){return(_E=u._LessEqual=u.asm.ha).apply(null,arguments)},FE=u._Log=function(){return(FE=u._Log=u.asm.ia).apply(null,arguments)},AE=u._LogicalAnd=function(){return(AE=u._LogicalAnd=u.asm.ja).apply(null,arguments)},$E=u._Max=function(){return($E=u._Max=u.asm.ka).apply(null,arguments)},DE=u._MaxPool=function(){return(DE=u._MaxPool=u.asm.la).apply(null,arguments)},ME=u._Maximum=function(){return(ME=u._Maximum=u.asm.ma).apply(null,arguments)},RE=u._Mean=function(){return(RE=u._Mean=u.asm.na).apply(null,arguments)},PE=u._Min=function(){return(PE=u._Min=u.asm.oa).apply(null,arguments)},OE=u._Minimum=function(){return(OE=u._Minimum=u.asm.pa).apply(null,arguments)},LE=u._Multiply=function(){return(LE=u._Multiply=u.asm.qa).apply(null,arguments)},zE=u._Neg=function(){return(zE=u._Neg=u.asm.ra).apply(null,arguments)},BE=u._NonMaxSuppressionV3=function(){return(BE=u._NonMaxSuppressionV3=u.asm.sa).apply(null,arguments)},WE=u._NonMaxSuppressionV4=function(){return(WE=u._NonMaxSuppressionV4=u.asm.ta).apply(null,arguments)},VE=u._NonMaxSuppressionV5=function(){return(VE=u._NonMaxSuppressionV5=u.asm.ua).apply(null,arguments)},UE=u._NotEqual=function(){return(UE=u._NotEqual=u.asm.va).apply(null,arguments)},GE=u._OneHot=function(){return(GE=u._OneHot=u.asm.wa).apply(null,arguments)},HE=u._PadV2=function(){return(HE=u._PadV2=u.asm.xa).apply(null,arguments)},jE=u._Pow=function(){return(jE=u._Pow=u.asm.ya).apply(null,arguments)},qE=u._Prelu=function(){return(qE=u._Prelu=u.asm.za).apply(null,arguments)},KE=u._Prod=function(){return(KE=u._Prod=u.asm.Aa).apply(null,arguments)},XE=u._RealDiv=function(){return(XE=u._RealDiv=u.asm.Ba).apply(null,arguments)},YE=u._Relu=function(){return(YE=u._Relu=u.asm.Ca).apply(null,arguments)},JE=u._Relu6=function(){return(JE=u._Relu6=u.asm.Da).apply(null,arguments)},ZE=u._ResizeBilinear=function(){return(ZE=u._ResizeBilinear=u.asm.Ea).apply(null,arguments)},QE=u._Reverse=function(){return(QE=u._Reverse=u.asm.Fa).apply(null,arguments)},e_=u._RotateWithOffset=function(){return(e_=u._RotateWithOffset=u.asm.Ga).apply(null,arguments)},t_=u._Round=function(){return(t_=u._Round=u.asm.Ha).apply(null,arguments)},n_=u._Rsqrt=function(){return(n_=u._Rsqrt=u.asm.Ia).apply(null,arguments)},a_=u._ScatterNd=function(){return(a_=u._ScatterNd=u.asm.Ja).apply(null,arguments)},r_=u._SelectV2=function(){return(r_=u._SelectV2=u.asm.Ka).apply(null,arguments)},s_=u._Sigmoid=function(){return(s_=u._Sigmoid=u.asm.La).apply(null,arguments)},i_=u._Sin=function(){return(i_=u._Sin=u.asm.Ma).apply(null,arguments)},o_=u._Softmax=function(){return(o_=u._Softmax=u.asm.Na).apply(null,arguments)},l_=u._Sqrt=function(){return(l_=u._Sqrt=u.asm.Oa).apply(null,arguments)},u_=u._Square=function(){return(u_=u._Square=u.asm.Pa).apply(null,arguments)},c_=u._SquaredDifference=function(){return(c_=u._SquaredDifference=u.asm.Qa).apply(null,arguments)},p_=u._StridedSlice=function(){return(p_=u._StridedSlice=u.asm.Ra).apply(null,arguments)},d_=u._Sub=function(){return(d_=u._Sub=u.asm.Sa).apply(null,arguments)},h_=u._Sum=function(){return(h_=u._Sum=u.asm.Ta).apply(null,arguments)},m_=u._Tanh=function(){return(m_=u._Tanh=u.asm.Ua).apply(null,arguments)},f_=u._Tile=function(){return(f_=u._Tile=u.asm.Va).apply(null,arguments)},g_=u._TopK=function(){return(g_=u._TopK=u.asm.Wa).apply(null,arguments)},y_=u._Transpose=function(){return(y_=u._Transpose=u.asm.Xa).apply(null,arguments)},b_=u.__FusedMatMul=function(){return(b_=u.__FusedMatMul=u.asm.Ya).apply(null,arguments)},tc=u._malloc=function(){return(tc=u._malloc=u.asm.Za).apply(null,arguments)},nc=u._free=function(){return(nc=u._free=u.asm._a).apply(null,arguments)},Lw=u._emscripten_get_global_libc=function(){return(Lw=u._emscripten_get_global_libc=u.asm.$a).apply(null,arguments)},zw=u.___errno_location=function(){return(zw=u.___errno_location=u.asm.ab).apply(null,arguments)},x_=u.___em_js__initPthreadsJS=function(){return(x_=u.___em_js__initPthreadsJS=u.asm.bb).apply(null,arguments)},Bw=u._memalign=function(){return(Bw=u._memalign=u.asm.cb).apply(null,arguments)},Ww=u.___pthread_tsd_run_dtors=function(){return(Ww=u.___pthread_tsd_run_dtors=u.asm.db).apply(null,arguments)},Jg=u._emscripten_main_thread_process_queued_calls=function(){return(Jg=u._emscripten_main_thread_process_queued_calls=u.asm.eb).apply(null,arguments)},v_=u._emscripten_current_thread_process_queued_calls=function(){return(v_=u._emscripten_current_thread_process_queued_calls=u.asm.fb).apply(null,arguments)},Vw=u._emscripten_register_main_browser_thread_id=function(){return(Vw=u._emscripten_register_main_browser_thread_id=u.asm.gb).apply(null,arguments)},w_=u._emscripten_main_browser_thread_id=function(){return(w_=u._emscripten_main_browser_thread_id=u.asm.hb).apply(null,arguments)},k_=u._emscripten_async_run_in_main_thread=function(){return(k_=u._emscripten_async_run_in_main_thread=u.asm.ib).apply(null,arguments)},I_=u._emscripten_sync_run_in_main_thread=function(){return(I_=u._emscripten_sync_run_in_main_thread=u.asm.jb).apply(null,arguments)},N_=u._emscripten_sync_run_in_main_thread_0=function(){return(N_=u._emscripten_sync_run_in_main_thread_0=u.asm.kb).apply(null,arguments)},T_=u._emscripten_sync_run_in_main_thread_1=function(){return(T_=u._emscripten_sync_run_in_main_thread_1=u.asm.lb).apply(null,arguments)},S_=u._emscripten_sync_run_in_main_thread_2=function(){return(S_=u._emscripten_sync_run_in_main_thread_2=u.asm.mb).apply(null,arguments)},C_=u._emscripten_sync_run_in_main_thread_xprintf_varargs=function(){return(C_=u._emscripten_sync_run_in_main_thread_xprintf_varargs=u.asm.nb).apply(null,arguments)},E_=u._emscripten_sync_run_in_main_thread_3=function(){return(E_=u._emscripten_sync_run_in_main_thread_3=u.asm.ob).apply(null,arguments)},Uw=u._emscripten_sync_run_in_main_thread_4=function(){return(Uw=u._emscripten_sync_run_in_main_thread_4=u.asm.pb).apply(null,arguments)},__=u._emscripten_sync_run_in_main_thread_5=function(){return(__=u._emscripten_sync_run_in_main_thread_5=u.asm.qb).apply(null,arguments)},F_=u._emscripten_sync_run_in_main_thread_6=function(){return(F_=u._emscripten_sync_run_in_main_thread_6=u.asm.rb).apply(null,arguments)},A_=u._emscripten_sync_run_in_main_thread_7=function(){return(A_=u._emscripten_sync_run_in_main_thread_7=u.asm.sb).apply(null,arguments)},Gw=u._emscripten_run_in_main_runtime_thread_js=function(){return(Gw=u._emscripten_run_in_main_runtime_thread_js=u.asm.tb).apply(null,arguments)},Zg=u._emscripten_async_queue_on_thread_=function(){return(Zg=u._emscripten_async_queue_on_thread_=u.asm.ub).apply(null,arguments)},$_=u._emscripten_tls_init=function(){return($_=u._emscripten_tls_init=u.asm.vb).apply(null,arguments)},ac=u.stackSave=function(){return(ac=u.stackSave=u.asm.wb).apply(null,arguments)},Ao=u.stackAlloc=function(){return(Ao=u.stackAlloc=u.asm.xb).apply(null,arguments)},$o=u.stackRestore=function(){return($o=u.stackRestore=u.asm.yb).apply(null,arguments)},Hw=u.dynCall_vi=function(){return(Hw=u.dynCall_vi=u.asm.zb).apply(null,arguments)},D_=u.dynCall_v=function(){return(D_=u.dynCall_v=u.asm.Ab).apply(null,arguments)},M_=u.dynCall_ii=function(){return(M_=u.dynCall_ii=u.asm.Bb).apply(null,arguments)};u.asm=Fo,u.cwrap=Je,u.PThread=ye,u.PThread=ye,u._pthread_self=Ga,u.wasmMemory=ae,u.ExitStatus=jw;var rc;u.then=function(w){if(rc)w(u);else{var S=u.onRuntimeInitialized;u.onRuntimeInitialized=function(){S&&S(),w(u)}}return u};function jw(w){this.name="ExitStatus",this.message="Program terminated with exit("+w+")",this.status=w}Es=function w(){rc||Qg(),rc||(Es=w)};function Qg(w){if(w=w||m,fr>0||(ud(),fr>0))return;function S(){rc||(rc=!0,u.calledRun=!0,!be&&(Xf(),Yf(),u.onRuntimeInitialized&&u.onRuntimeInitialized(),Jf()))}u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),S()},1)):S()}if(u.run=Qg,u.preInit)for(typeof u.preInit=="function"&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();return N||(re=!0),N||Qg(),r}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}),lF=dn((e,t)=>{var n=function(){var a=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(a=a||__filename),function(r){r=r||{};var s=typeof r!="undefined"?r:{},i={},o;for(o in s)s.hasOwnProperty(o)&&(i[o]=s[o]);var l=[],c="./this.program",u=function(U,ne){throw ne},p=!1,d=!1,h=!1,m=!1;p=typeof window=="object",d=typeof importScripts=="function",h=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",m=!p&&!h&&!d;var f="";function g(U){return s.locateFile?s.locateFile(U,f):f+U}var y,b,x,v,N,T;h?(d?f=lc().dirname(f)+"/":f=__dirname+"/",y=function(U,ne){return N||(N=require("fs")),T||(T=lc()),U=T.normalize(U),N.readFileSync(U,ne?null:"utf8")},x=function(U){var ne=y(U,!0);return ne.buffer||(ne=new Uint8Array(ne)),q(ne.buffer),ne},process.argv.length>1&&(c=process.argv[1].replace(/\\/g,"/")),l=process.argv.slice(2),process.on("uncaughtException",function(U){if(!(U instanceof Zu))throw U}),process.on("unhandledRejection",mr),u=function(U){process.exit(U)},s.inspect=function(){return"[Emscripten Module object]"}):m?(typeof read!="undefined"&&(y=function(U){return read(U)}),x=function(U){var ne;return typeof readbuffer=="function"?new Uint8Array(readbuffer(U)):(ne=read(U,"binary"),q(typeof ne=="object"),ne)},typeof scriptArgs!="undefined"?l=scriptArgs:typeof arguments!="undefined"&&(l=arguments),typeof quit=="function"&&(u=function(U){quit(U)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(p||d)&&(d?f=self.location.href:document.currentScript&&(f=document.currentScript.src),a&&(f=a),f.indexOf("blob:")!==0?f=f.substr(0,f.lastIndexOf("/")+1):f="",y=function(U){var ne=new XMLHttpRequest;return ne.open("GET",U,!1),ne.send(null),ne.responseText},d&&(x=function(U){var ne=new XMLHttpRequest;return ne.open("GET",U,!1),ne.responseType="arraybuffer",ne.send(null),new Uint8Array(ne.response)}),b=function(U,ne,Ne){var _e=new XMLHttpRequest;_e.open("GET",U,!0),_e.responseType="arraybuffer",_e.onload=function(){if(_e.status==200||_e.status==0&&_e.response){ne(_e.response);return}Ne()},_e.onerror=Ne,_e.send(null)},v=function(U){document.title=U});var E=s.print||console.log.bind(console),A=s.printErr||console.warn.bind(console);for(o in i)i.hasOwnProperty(o)&&(s[o]=i[o]);i=null,s.arguments&&(l=s.arguments),s.thisProgram&&(c=s.thisProgram),s.quit&&(u=s.quit);var $;s.wasmBinary&&($=s.wasmBinary);var O;s.noExitRuntime&&(O=s.noExitRuntime),typeof WebAssembly!="object"&&A("no native wasm support detected");var V,W=new WebAssembly.Table({initial:151,maximum:151+0,element:"anyfunc"}),H=!1,X=0;function q(U,ne){U||mr("Assertion failed: "+ne)}function K(U){var ne=s["_"+U];return q(ne,"Cannot call unknown function "+U+", make sure it is exported"),ne}function J(U,ne,Ne,_e,at){var Ft={string:function(Kn){var Ur=0;if(Kn!=null&&Kn!==0){var _d=(Kn.length<<2)+1;Ur=Fo(_d),oe(Kn,Ur,_d)}return Ur},array:function(Kn){var Ur=Fo(Kn.length);return he(Kn,Ur),Ur}};function Ke(Kn){return ne==="string"?re(Kn):ne==="boolean"?Boolean(Kn):Kn}var je=K(U),jt=[],yr=0;if(_e)for(var br=0;br<_e.length;br++){var Ed=Ft[Ne[br]];Ed?(yr===0&&(yr=Td()),jt[br]=Ed(_e[br])):jt[br]=_e[br]}var ec=je.apply(null,jt);return ec=Ke(ec),yr!==0&&Ju(yr),ec}function te(U,ne,Ne,_e){Ne=Ne||[];var at=Ne.every(function(Ke){return Ke==="number"}),Ft=ne!=="string";return Ft&&at&&!_e?K(U):function(){return J(U,ne,Ne,arguments,_e)}}var Q=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function ie(U,ne,Ne){for(var _e=ne+Ne,at=ne;U[at]&&!(at>=_e);)++at;if(at-ne>16&&U.subarray&&Q)return Q.decode(U.subarray(ne,at));for(var Ft="";ne<at;){var Ke=U[ne++];if(!(Ke&128)){Ft+=String.fromCharCode(Ke);continue}var je=U[ne++]&63;if((Ke&224)==192){Ft+=String.fromCharCode((Ke&31)<<6|je);continue}var jt=U[ne++]&63;if((Ke&240)==224?Ke=(Ke&15)<<12|je<<6|jt:Ke=(Ke&7)<<18|je<<12|jt<<6|U[ne++]&63,Ke<65536)Ft+=String.fromCharCode(Ke);else{var yr=Ke-65536;Ft+=String.fromCharCode(55296|yr>>10,56320|yr&1023)}}return Ft}function re(U,ne){return U?ie(be,U,ne):""}function ae(U,ne,Ne,_e){if(!(_e>0))return 0;for(var at=Ne,Ft=Ne+_e-1,Ke=0;Ke<U.length;++Ke){var je=U.charCodeAt(Ke);if(je>=55296&&je<=57343){var jt=U.charCodeAt(++Ke);je=65536+((je&1023)<<10)|jt&1023}if(je<=127){if(Ne>=Ft)break;ne[Ne++]=je}else if(je<=2047){if(Ne+1>=Ft)break;ne[Ne++]=192|je>>6,ne[Ne++]=128|je&63}else if(je<=65535){if(Ne+2>=Ft)break;ne[Ne++]=224|je>>12,ne[Ne++]=128|je>>6&63,ne[Ne++]=128|je&63}else{if(Ne+3>=Ft)break;ne[Ne++]=240|je>>18,ne[Ne++]=128|je>>12&63,ne[Ne++]=128|je>>6&63,ne[Ne++]=128|je&63}}return ne[Ne]=0,Ne-at}function oe(U,ne,Ne){return ae(U,be,ne,Ne)}function he(U,ne){ge.set(U,ne)}var ce,ge,be,Ie,Te,Ee,Me,Je,nt;function Ve(U){ce=U,s.HEAP8=ge=new Int8Array(U),s.HEAP16=Ie=new Int16Array(U),s.HEAP32=Ee=new Int32Array(U),s.HEAPU8=be=new Uint8Array(U),s.HEAPU16=Te=new Uint16Array(U),s.HEAPU32=Me=new Uint32Array(U),s.HEAPF32=Je=new Float32Array(U),s.HEAPF64=nt=new Float64Array(U)}var ut=s.INITIAL_MEMORY||16777216;function Ge(U){for(;U.length>0;){var ne=U.shift();if(typeof ne=="function"){ne(s);continue}var Ne=ne.func;typeof Ne=="number"?ne.arg===void 0?s.dynCall_v(Ne):s.dynCall_vi(Ne,ne.arg):Ne(ne.arg===void 0?null:ne.arg)}}var ct=[],gt=[],Fn=[],_t=[],Nt=!1,an=!1;function kn(){if(s.preRun)for(typeof s.preRun=="function"&&(s.preRun=[s.preRun]);s.preRun.length;)dr(s.preRun.shift());Ge(ct)}function la(){Nt=!0,Ge(gt)}function An(){Ge(Fn)}function pn(){an=!0}function jn(){if(s.postRun)for(typeof s.postRun=="function"&&(s.postRun=[s.postRun]);s.postRun.length;)hr(s.postRun.shift());Ge(_t)}function dr(U){ct.unshift(U)}function hr(U){_t.unshift(U)}var ka=Math.ceil,Io=Math.floor,Ia=0,Ua=null,Na=null;function Ss(U){Ia++,s.monitorRunDependencies&&s.monitorRunDependencies(Ia)}function sd(U){if(Ia--,s.monitorRunDependencies&&s.monitorRunDependencies(Ia),Ia==0&&(Ua!==null&&(clearInterval(Ua),Ua=null),Na)){var ne=Na;Na=null,ne()}}s.preloadedImages={},s.preloadedAudios={};function mr(U){throw s.onAbort&&s.onAbort(U),U+="",E(U),A(U),H=!0,X=1,U="abort("+U+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(U)}function ju(U,ne){return String.prototype.startsWith?U.startsWith(ne):U.indexOf(ne)===0}var id="data:application/octet-stream;base64,";function od(U){return ju(U,id)}var ld="file://";function qu(U){return ju(U,ld)}var qn="tfjs-backend-wasm.wasm";od(qn)||(qn=g(qn));function ud(){try{if($)return new Uint8Array($);if(x)return x(qn);throw"both async and sync fetching of the wasm failed"}catch(U){mr(U)}}function Xf(){return!$&&(p||d)&&typeof fetch=="function"&&!qu(qn)?fetch(qn,{credentials:"same-origin"}).then(function(U){if(!U.ok)throw"failed to load wasm binary file at '"+qn+"'";return U.arrayBuffer()}).catch(function(){return ud()}):new Promise(function(U,ne){U(ud())})}function Yf(){var U={env:cd,wasi_snapshot_preview1:cd};function ne(Ke,je){var jt=Ke.exports;s.asm=jt,V=jt.memory,Ve(V.buffer),sd("wasm-instantiate")}Ss("wasm-instantiate");function Ne(Ke){ne(Ke.instance)}function _e(Ke){return Xf().then(function(je){return WebAssembly.instantiate(je,U)}).then(Ke,function(je){A("failed to asynchronously prepare wasm: "+je),mr(je)})}function at(){if(!$&&typeof WebAssembly.instantiateStreaming=="function"&&!od(qn)&&!qu(qn)&&typeof fetch=="function")fetch(qn,{credentials:"same-origin"}).then(function(Ke){var je=WebAssembly.instantiateStreaming(Ke,U);return je.then(Ne,function(jt){A("wasm streaming compile failed: "+jt),A("falling back to ArrayBuffer instantiation"),_e(Ne)})});else return _e(Ne)}if(s.instantiateWasm)try{var Ft=s.instantiateWasm(U,ne);return Ft}catch(Ke){return A("Module.instantiateWasm callback failed with error: "+Ke),!1}return at(),{}}gt.push();function Jf(U){Ve(V.buffer)}var Cs={splitPath:function(U){var ne=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return ne.exec(U).slice(1)},normalizeArray:function(U,ne){for(var Ne=0,_e=U.length-1;_e>=0;_e--){var at=U[_e];at==="."?U.splice(_e,1):at===".."?(U.splice(_e,1),Ne++):Ne&&(U.splice(_e,1),Ne--)}if(ne)for(;Ne;Ne--)U.unshift("..");return U},normalize:function(U){var ne=U.charAt(0)==="/",Ne=U.substr(-1)==="/";return U=Cs.normalizeArray(U.split("/").filter(function(_e){return!!_e}),!ne).join("/"),!U&&!ne&&(U="."),U&&Ne&&(U+="/"),(ne?"/":"")+U},dirname:function(U){var ne=Cs.splitPath(U),Ne=ne[0],_e=ne[1];return!Ne&&!_e?".":(_e&&(_e=_e.substr(0,_e.length-1)),Ne+_e)},basename:function(U){if(U==="/")return"/";var ne=U.lastIndexOf("/");return ne===-1?U:U.substr(ne+1)},extname:function(U){return Cs.splitPath(U)[3]},join:function(){var U=Array.prototype.slice.call(arguments,0);return Cs.normalize(U.join("/"))},join2:function(U,ne){return Cs.normalize(U+"/"+ne)}},No={mappings:{},buffers:[null,[],[]],printChar:function(U,ne){var Ne=No.buffers[U];ne===0||ne===10?((U===1?E:A)(ie(Ne,0)),Ne.length=0):Ne.push(ne)},varargs:void 0,get:function(){No.varargs+=4;var U=Ee[No.varargs-4>>2];return U},getStr:function(U){var ne=re(U);return ne},get64:function(U,ne){return U}};function Zf(U){return 0}function Qf(U,ne,Ne,_e,at){}function fr(U,ne,Ne,_e){for(var at=0,Ft=0;Ft<Ne;Ft++){for(var Ke=Ee[ne+Ft*8>>2],je=Ee[ne+(Ft*8+4)>>2],jt=0;jt<je;jt++)No.printChar(U,be[Ke+jt]);at+=je}return Ee[_e>>2]=at,0}function Ku(U){Sd(U)}function Es(U){Ku(U)}function eg(U){return U=+U,U>=0?+Io(U+.5):+ka(U-.5)}var cd={emscripten_notify_memory_growth:Jf,fd_close:Zf,fd_seek:Qf,fd_write:fr,proc_exit:Es,roundf:eg},gr=Yf();s.asm=gr;var pd=s._init=function(){return(pd=s._init=s.asm.init).apply(null,arguments)},tg=s._register_tensor=function(){return(tg=s._register_tensor=s.asm.register_tensor).apply(null,arguments)},dd=s._dispose_data=function(){return(dd=s._dispose_data=s.asm.dispose_data).apply(null,arguments)},ng=s._dispose=function(){return(ng=s._dispose=s.asm.dispose).apply(null,arguments)},hd=s._Abs=function(){return(hd=s._Abs=s.asm.Abs).apply(null,arguments)},ua=s._Add=function(){return(ua=s._Add=s.asm.Add).apply(null,arguments)},md=s._AddN=function(){return(md=s._AddN=s.asm.AddN).apply(null,arguments)},ag=s._ArgMax=function(){return(ag=s._ArgMax=s.asm.ArgMax).apply(null,arguments)},rg=s._AvgPool=function(){return(rg=s._AvgPool=s.asm.AvgPool).apply(null,arguments)},sg=s._BatchMatMul=function(){return(sg=s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},ig=s._ClipByValue=function(){return(ig=s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},fd=s._Conv2D=function(){return(fd=s._Conv2D=s.asm.Conv2D).apply(null,arguments)},gd=s._Conv2DBackpropInput=function(){return(gd=s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},yd=s._Cos=function(){return(yd=s._Cos=s.asm.Cos).apply(null,arguments)},To=s._CropAndResize=function(){return(To=s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},Xu=s._Cumsum=function(){return(Xu=s._Cumsum=s.asm.Cumsum).apply(null,arguments)},So=s._DepthToSpace=function(){return(So=s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},Co=s._DepthwiseConv2dNative=function(){return(Co=s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},og=s._Equal=function(){return(og=s._Equal=s.asm.Equal).apply(null,arguments)},lg=s._Exp=function(){return(lg=s._Exp=s.asm.Exp).apply(null,arguments)},ug=s._FlipLeftRight=function(){return(ug=s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},ye=s._Floor=function(){return(ye=s._Floor=s.asm.Floor).apply(null,arguments)},cg=s._FloorDiv=function(){return(cg=s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},pg=s._FusedBatchNorm=function(){return(pg=s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},dg=s._FusedConv2D=function(){return(dg=s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},hg=s._FusedDepthwiseConv2D=function(){return(hg=s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},_s=s._Gather=function(){return(_s=s._Gather=s.asm.Gather).apply(null,arguments)},mg=s._GatherNd=function(){return(mg=s._GatherNd=s.asm.GatherNd).apply(null,arguments)},fg=s._Greater=function(){return(fg=s._Greater=s.asm.Greater).apply(null,arguments)},gg=s._GreaterEqual=function(){return(gg=s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},yg=s._LeakyRelu=function(){return(yg=s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},bg=s._Less=function(){return(bg=s._Less=s.asm.Less).apply(null,arguments)},xg=s._LessEqual=function(){return(xg=s._LessEqual=s.asm.LessEqual).apply(null,arguments)},vg=s._Log=function(){return(vg=s._Log=s.asm.Log).apply(null,arguments)},wg=s._LogicalAnd=function(){return(wg=s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},kg=s._Max=function(){return(kg=s._Max=s.asm.Max).apply(null,arguments)},Ig=s._MaxPool=function(){return(Ig=s._MaxPool=s.asm.MaxPool).apply(null,arguments)},Wr=s._Maximum=function(){return(Wr=s._Maximum=s.asm.Maximum).apply(null,arguments)},Fs=s._Mean=function(){return(Fs=s._Mean=s.asm.Mean).apply(null,arguments)},Eo=s._Min=function(){return(Eo=s._Min=s.asm.Min).apply(null,arguments)},Ng=s._Minimum=function(){return(Ng=s._Minimum=s.asm.Minimum).apply(null,arguments)},Tg=s._Multiply=function(){return(Tg=s._Multiply=s.asm.Multiply).apply(null,arguments)},Sg=s._Neg=function(){return(Sg=s._Neg=s.asm.Neg).apply(null,arguments)},Cg=s._NonMaxSuppressionV3=function(){return(Cg=s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},Pe=s._NonMaxSuppressionV4=function(){return(Pe=s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},Eg=s._NonMaxSuppressionV5=function(){return(Eg=s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},_g=s._NotEqual=function(){return(_g=s._NotEqual=s.asm.NotEqual).apply(null,arguments)},Fg=s._OneHot=function(){return(Fg=s._OneHot=s.asm.OneHot).apply(null,arguments)},Ag=s._PadV2=function(){return(Ag=s._PadV2=s.asm.PadV2).apply(null,arguments)},$g=s._Pow=function(){return($g=s._Pow=s.asm.Pow).apply(null,arguments)},Dg=s._Prelu=function(){return(Dg=s._Prelu=s.asm.Prelu).apply(null,arguments)},Yu=s._Prod=function(){return(Yu=s._Prod=s.asm.Prod).apply(null,arguments)},bd=s._RealDiv=function(){return(bd=s._RealDiv=s.asm.RealDiv).apply(null,arguments)},xd=s._Relu=function(){return(xd=s._Relu=s.asm.Relu).apply(null,arguments)},Mg=s._Relu6=function(){return(Mg=s._Relu6=s.asm.Relu6).apply(null,arguments)},Rg=s._ResizeBilinear=function(){return(Rg=s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},Pg=s._Reverse=function(){return(Pg=s._Reverse=s.asm.Reverse).apply(null,arguments)},Og=s._RotateWithOffset=function(){return(Og=s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},Lg=s._Round=function(){return(Lg=s._Round=s.asm.Round).apply(null,arguments)},zg=s._Rsqrt=function(){return(zg=s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},Be=s._ScatterNd=function(){return(Be=s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},Bg=s._SelectV2=function(){return(Bg=s._SelectV2=s.asm.SelectV2).apply(null,arguments)},Wg=s._Sigmoid=function(){return(Wg=s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},Vg=s._Sin=function(){return(Vg=s._Sin=s.asm.Sin).apply(null,arguments)},As=s._Softmax=function(){return(As=s._Softmax=s.asm.Softmax).apply(null,arguments)},_o=s._Sqrt=function(){return(_o=s._Sqrt=s.asm.Sqrt).apply(null,arguments)},vd=s._Square=function(){return(vd=s._Square=s.asm.Square).apply(null,arguments)},wd=s._SquaredDifference=function(){return(wd=s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},kd=s._StridedSlice=function(){return(kd=s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},Ug=s._Sub=function(){return(Ug=s._Sub=s.asm.Sub).apply(null,arguments)},Gg=s._Sum=function(){return(Gg=s._Sum=s.asm.Sum).apply(null,arguments)},Id=s._Tanh=function(){return(Id=s._Tanh=s.asm.Tanh).apply(null,arguments)},Hg=s._Tile=function(){return(Hg=s._Tile=s.asm.Tile).apply(null,arguments)},Ga=s._TopK=function(){return(Ga=s._TopK=s.asm.TopK).apply(null,arguments)},jg=s._Transpose=function(){return(jg=s._Transpose=s.asm.Transpose).apply(null,arguments)},qg=s.__FusedMatMul=function(){return(qg=s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},Nd=s._malloc=function(){return(Nd=s._malloc=s.asm.malloc).apply(null,arguments)},Vr=s._free=function(){return(Vr=s._free=s.asm.free).apply(null,arguments)},Kg=s.__start=function(){return(Kg=s.__start=s.asm._start).apply(null,arguments)},Td=s.stackSave=function(){return(Td=s.stackSave=s.asm.stackSave).apply(null,arguments)},Fo=s.stackAlloc=function(){return(Fo=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)},Ju=s.stackRestore=function(){return(Ju=s.stackRestore=s.asm.stackRestore).apply(null,arguments)};s.asm=gr,s.cwrap=te;var $s;s.then=function(U){if($s)U(s);else{var ne=s.onRuntimeInitialized;s.onRuntimeInitialized=function(){ne&&ne(),U(s)}}return s};function Zu(U){this.name="ExitStatus",this.message="Program terminated with exit("+U+")",this.status=U}var Xg=!1;Na=function U(){$s||Qu(),$s||(Na=U)};function Yg(U){var ne=s.__start;try{ne();var Ne=0;Sd(Ne,!0)}catch(at){if(at instanceof Zu)return;if(at=="unwind"){O=!0;return}else{var _e=at;at&&typeof at=="object"&&at.stack&&(_e=[at,at.stack]),A("exception thrown: "+_e),u(1,at)}}finally{Xg=!0}}function Qu(U){if(U=U||l,Ia>0||(kn(),Ia>0))return;function ne(){$s||($s=!0,s.calledRun=!0,!H&&(la(),An(),s.onRuntimeInitialized&&s.onRuntimeInitialized(),Cd&&Yg(U),jn()))}s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),ne()},1)):ne()}s.run=Qu;function Sd(U,ne){ne&&O&&U===0||(O||(H=!0,X=U,pn(),s.onExit&&s.onExit(U)),u(U,new Zu(U)))}if(s.preInit)for(typeof s.preInit=="function"&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();var Cd=!0;return s.noInitialRun&&(Cd=!1),O=!0,Qu(),r}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}),uF=1e-7,cF=1e-4,Md=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},uc=class{time(e){return Y("time")}read(e){return Y("read")}readSync(e){return Y("readSync")}numDataIds(){return Y("numDataIds")}disposeData(e){return Y("disposeData")}write(e,t,n){return Y("write")}move(e,t,n,a){return Y("move")}memory(){return Y("memory")}floatPrecision(){return Y("floatPrecision")}epsilon(){return this.floatPrecision()===32?uF:cF}batchMatMul(e,t,n,a){return Y("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:a,bias:r,activation:s,preluActivationWeights:i}){return Y("fusedBatchMatMul")}slice(e,t,n){return Y("slice")}stridedSlice(e,t,n,a){return Y("stridedSlice")}unstack(e,t){return Y("unstack")}reverse(e,t){return Y("reverse")}concat(e,t){return Y("concat")}neg(e){return Y("neg")}add(e,t){return Y("add")}addN(e){return Y("addN")}subtract(e,t){return Y("subtract")}multiply(e,t){return Y("multiply")}realDivide(e,t){return Y("realDivide")}floorDiv(e,t){return Y("floorDiv")}sum(e,t){return Y("sum")}prod(e,t){return Y("prod")}unsortedSegmentSum(e,t,n){return Y("unsortedSegmentSum")}argMin(e,t){return Y("argMin")}argMax(e,t){return Y("argMax")}equal(e,t){return Y("equal")}notEqual(e,t){return Y("notEqual")}less(e,t){return Y("less")}lessEqual(e,t){return Y("lessEqual")}greater(e,t){return Y("greater")}greaterEqual(e,t){return Y("greaterEqual")}logicalNot(e){return Y("logicalNot")}logicalAnd(e,t){return Y("logicalAnd")}logicalOr(e,t){return Y("logicalOr")}where(e){return Y("where")}select(e,t,n){return Y("select")}topk(e,t,n){return Y("topk")}min(e,t){return Y("min")}minimum(e,t){return Y("minimum")}mod(e,t){return Y("mod")}max(e,t){return Y("max")}maximum(e,t){return Y("maximum")}all(e,t){return Y("all")}any(e,t){return Y("any")}squaredDifference(e,t){return Y("squaredDifference")}ceil(e){return Y("ceil")}floor(e){return Y("floor")}round(e){return Y("round")}sign(e){return Y("sign")}isNaN(e){return Y("isNaN")}isInf(e){return Y("isInf")}isFinite(e){return Y("isFinite")}pow(e,t){return Y("pow")}exp(e){return Y("exp")}expm1(e){return Y("expm1")}softmax(e,t){return Y("softmax")}log(e){return Y("log")}log1p(e){return Y("log1p")}sqrt(e){return Y("sqrt")}rsqrt(e){return Y("rsqrt")}square(e){return Y("square")}reciprocal(e){return Y("reciprocal")}relu(e){return Y("relu")}relu6(e){return Y("relu6")}prelu(e,t){return Y("prelu")}elu(e){return Y("elu")}eluDer(e,t){return Y("eluDer")}selu(e){return Y("selu")}int(e){return Y("int")}clip(e,t,n){return Y("clip")}abs(e){return Y("abs")}complexAbs(e){return Y("complexAbs")}sigmoid(e){return Y("sigmoid")}softplus(e){return Y("softplus")}sin(e){return Y("sin")}cos(e){return Y("cos")}tan(e){return Y("tan")}asin(e){return Y("asin")}acos(e){return Y("acos")}atan(e){return Y("atan")}atan2(e,t){return Y("atan2")}sinh(e){return Y("sinh")}cosh(e){return Y("cosh")}tanh(e){return Y("tanh")}asinh(e){return Y("asinh")}acosh(e){return Y("acosh")}atanh(e){return Y("atanh")}erf(e){return Y("erf")}step(e,t){return Y("step")}fusedConv2d({input:e,filter:t,convInfo:n,bias:a,activation:r,preluActivationWeights:s}){return Y("fusedConv2d")}conv2d(e,t,n){return Y("conv2d")}conv2dDerInput(e,t,n){return Y("conv2dDerInput")}conv2dDerFilter(e,t,n){return Y("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:a,activation:r,preluActivationWeights:s}){return Y("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,n){return Y("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,n){return Y("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,n){return Y("depthwiseConv2DDerFilter")}conv3d(e,t,n){return Y("conv3d")}conv3dDerInput(e,t,n){return Y("conv3dDerInput")}conv3dDerFilter(e,t,n){return Y("conv3dDerFilter")}maxPool(e,t){return Y("maxPool")}maxPoolBackprop(e,t,n,a){return Y("maxPoolBackprop")}avgPool(e,t){return Y("avgPool")}avgPoolBackprop(e,t,n){return Y("avgPoolBackprop")}avgPool3d(e,t){return Y("avgPool3d")}avgPool3dBackprop(e,t,n){return Y("avgPool3dBackprop")}maxPool3d(e,t){return Y("maxPool3d")}maxPool3dBackprop(e,t,n,a){return Y("maxPool3dBackprop")}reshape(e,t){return Y("reshape")}cast(e,t){return Y("cast")}tile(e,t){return Y("tile")}pad(e,t,n){return Y("pad")}transpose(e,t){return Y("transpose")}gather(e,t,n,a=0){return Y("gather")}gatherND(e,t){return Y("gatherND")}scatterND(e,t,n){return Y("scatterND")}batchToSpaceND(e,t,n){return Y("batchToSpaceND")}spaceToBatchND(e,t,n){return Y("spaceToBatchND")}resizeBilinear(e,t,n,a,r){return Y("resizeBilinear")}resizeBilinearBackprop(e,t,n){return Y("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,n,a,r){return Y("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,n){return Y("resizeNearestNeighborBackprop")}batchNorm(e,t,n,a,r,s){return Y("batchNorm")}localResponseNormalization4D(e,t,n,a,r){return Y("localResponseNormalization4D")}LRNGrad(e,t,n,a,r,s,i){return Y("LRNGrad")}multinomial(e,t,n,a){return Y("multinomial")}oneHot(e,t,n,a){return Y("oneHot")}cumsum(e,t,n,a){return Y("cumsum")}nonMaxSuppression(e,t,n,a,r){return Y("nonMaxSuppression")}fft(e){return Y("fft")}ifft(e){return Y("ifft")}complex(e,t){return Y("complex")}real(e){return Y("real")}imag(e){return Y("imag")}cropAndResize(e,t,n,a,r,s){return Y("cropAndResize")}depthToSpace(e,t,n){return Y("depthToSpace")}split(e,t,n){return Y("split")}sparseToDense(e,t,n,a){return Y("sparseToDense")}diag(e){return Y("diag")}fill(e,t,n){return Y("fill")}onesLike(e){return Y("onesLike")}zerosLike(e){return Y("zerosLike")}linspace(e,t,n){return Y("linspace")}dispose(){return Y("dispose")}};function Y(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Yw(e){let t=e.length,n=0,a=0;for(;t>0;)a=Math.random()*t|0,t--,n=e[t],e[t]=e[a],e[a]=n}function cc(e,t,n){return Math.max(e,Math.min(t,n))}function pF(e){return e%2==0?e:e+1}function dF(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function hF(e,t){let n=Math.random();return t*n+(1-n)*e}function mF(e,t){let n=0;for(let a=0;a<e.length;a++){let r=Number(e[a])-Number(t[a]);n+=r*r}return n}function F(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function rt(e,t,n=""){F(xr(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function Ds(e){F(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Ms(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||un(e)&&!n)for(let a=0;a<e.length;++a)Ms(e[a],t,n);else t.push(e);return t}function zt(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function fF(e){return e.length===0}function xr(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function qt(e){return e%1==0}function gF(e){if(Math.tanh!=null)return Math.tanh(e);if(e===Infinity)return 1;if(e===-Infinity)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function yF(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function bF(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Yw(t),t}function pc(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function xF(e,t=a=>0,n){return new Promise((a,r)=>{let s=0,i=()=>{if(e()){a();return}s++;let o=t(s);if(n!=null&&s>=n){r();return}setTimeout(i,o)};i()})}function vF(e,t){let n=1,a=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(e[s]===-1){if(a!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${a} and dim ${s}`);a=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(a===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[a]=t/n,r}function ca(e,t){let n=t.length;return e=e==null?t.map((a,r)=>r):[].concat(e),F(e.every(a=>a>=-n&&a<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),F(e.every(a=>qt(a)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(a=>a<0?n+a:a)}function Jw(e,t){let n=[],a=[],r=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||r?null:ca(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(s!=null){if(s[i]===o&&e[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(s[i]==null||s[i]>o)&&e[o]===1&&(n.push(e[o]),a.push(o)),s[i]<=o&&i++}e[o]!==1&&(n.push(e[o]),a.push(o))}return{newShape:n,keptDims:a}}function Zw(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function Qw(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function e0(e,t){for(let n=0;n<e.length;n++){let a=e[n];if(isNaN(a)||!isFinite(a))throw Error(`A tensor of type ${t} being uploaded contains ${a}.`)}}function t0(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function n0(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function un(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function a0(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function r0(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function Hr(e){return typeof e=="string"||e instanceof String}function s0(e){return typeof e=="boolean"}function i0(e){return typeof e=="number"}function Rd(e){return Array.isArray(e)?Rd(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":i0(e)?"float32":Hr(e)?"string":s0(e)?"bool":"float32"}function jr(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Pd(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Po(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function o0(e,t,n){let a=new Array;if(t.length===1){let r=t[0];for(let s=0;s<r;s++)a[s]=n[e+s]}else{let r=t[0],s=t.slice(1),i=s.reduce((o,l)=>o*l);for(let o=0;o<r;o++)a[o]=o0(e+o*i,s,n)}return a}function Oo(e,t){if(e.length===0)return t[0];let n=e.reduce((a,r)=>a*r);if(n===0)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return o0(0,e,t)}function ny(e,t){let n=Od(e,t);for(let a=0;a<n.length;a++)n[a]=1;return n}function Od(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function wF(e,t){let n=e.reduce((a,r)=>a*r,1);if(t==null||t==="float32")return Oo(e,new Float32Array(n));if(t==="int32")return Oo(e,new Int32Array(n));if(t==="bool")return Oo(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function ay(e){e.forEach(t=>{F(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function kF(e,t,n){if(t===0)return 0;if(t===1)return e[0];let a=e[e.length-1];for(let r=0;r<e.length-1;++r)a+=n[r]*e[r];return a}function IF(e,t,n){if(t===0)return[];if(t===1)return[e];let a=new Array(t);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(e/n[r]),e-=a[r]*n[r];return a[a.length-1]=e,a}function ry(e){return e&&e.then&&typeof e.then=="function"}var l0="tfjsflags",u0=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let a=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${a}.`),this.set(e,a)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(ry(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=NF(this.global.location.search);l0 in e&&e[l0].split(",").forEach(t=>{let[n,a]=t.split(":");this.urlFlags[n]=TF(n,a)})}};function NF(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...a)=>(SF(t,a[0],a[1]),a.join("="))),t}function SF(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function TF(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function ee(){return sy}var sy=null;function CF(e){sy=e}var iy;function c0(){if(iy==null){let e;if(typeof window!="undefined")e=window;else if(typeof global!="undefined")e=global;else if(typeof process!="undefined")e=process;else if(typeof self!="undefined")e=self;else throw new Error("Could not find a global object");iy=e}return iy}function EF(){let e=c0();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function p0(e,t){let n=EF();if(n.has(e))return n.get(e);{let a=t();return n.set(e,a),n.get(e)}}var Lo="Abs",zo="Acos",Bo="Acosh",qr="Add",Rs="AddN",Ld="All",zd="Any",Ps="ArgMax",dc="ArgMin",Wo="Asin",Vo="Asinh",Uo="Atan",Go="Atanh",Ho="Atan2",Os="AvgPool",Bd="AvgPoolGrad",hc="AvgPool3D",Wd="AvgPool3DGrad",Ls="BatchMatMul",mc="BatchToSpaceND",Vd="Bincount",d0="BroadcastTo",zs="Cast",jo="Ceil",Kr="ClipByValue",Ud="Complex",fc="ComplexAbs",qo="Concat",Bs="Conv2D",Gd="Conv2DBackpropFilter",Ws="Conv2DBackpropInput",gc="Conv3D",Hd="Conv3DBackpropFilterV2",jd="Conv3DBackpropInputV2",Vs="Cos",Ko="Cosh",Us="Cumsum",Xo="CropAndResize",qd="DenseBincount",Yo="DepthToSpace",Gs="DepthwiseConv2dNative",Kd="DepthwiseConv2dNativeBackpropFilter",Xd="DepthwiseConv2dNativeBackpropInput",Yd="Diag",yc="Dilation2D",Jd="Dilation2DBackpropInput",Zd="Dilation2DBackpropFilter",Hs="RealDiv",Jo="Elu",Qd="EluGrad",Zo="Erf",Qo="Equal",js="Exp",el="ExpandDims",tl="Expm1",eh="FFT",bc="Fill",nl="FlipLeftRight",qs="Floor",Ks="FloorDiv",Xs="FusedBatchNorm",al="GatherV2",rl="GatherNd",sl="Greater",Ys="GreaterEqual",il="Identity",th="IFFT",nh="Imag",ol="IsFinite",ll="IsInf",ul="IsNan",Js="LeakyRelu",cl="Less",pl="LessEqual",ah="LinSpace",Zs="Log",dl="Log1p",hl="LogicalAnd",xc="LogicalNot",vc="LogicalOr",h0="LogSoftmax",wc="LRN",rh="LRNGrad",Qs="Max",ei="Maximum",ti="MaxPool",sh="MaxPoolGrad",kc="MaxPool3D",ih="MaxPool3DGrad",oh="MaxPoolWithArgmax",ni="Mean",ai="Min",ri="Minimum",Ic="MirrorPad",ml="Mod",lh="Multinomial",si="Multiply",fl="Neg",gl="NotEqual",yl="NonMaxSuppressionV3",bl="NonMaxSuppressionV4",xl="NonMaxSuppressionV5",vl="OnesLike",ii="OneHot",wl="Pack",oi="PadV2",_F="Pool",li="Pow",ui="Prelu",kl="Prod",Nc="Range",uh="Real",Il="Reciprocal",ci="Relu",Nl="Reshape",Tc="ResizeNearestNeighbor",ch="ResizeNearestNeighborGrad",pi="ResizeBilinear",ph="ResizeBilinearGrad",di="Relu6",hi="Reverse",mi="Round",fi="Rsqrt",Tl="ScatterNd",Sl="Select",Cl="Selu",El="Slice",gi="Sin",_l="Sinh",Fl="Sign",yi="Sigmoid",Al="Softplus",bi="Sqrt",xi="Sum",Sc="SpaceToBatchND",$l="SplitV",vi="Softmax",wi="SquaredDifference",Cc="Square",ki="Sub",dh="SparseToDense",Dl="StridedSlice",Ml="Tan",Ii="Tanh",Xr="Tile",Rl="TopK",Ni="Transpose",hh="Unique",Pl="Unpack",Ec="UnsortedSegmentSum",Ol="ZerosLike",Ll="Step",mh="FromPixels",zl="RotateWithOffset",Ti="_FusedMatMul",Si="FusedConv2D",Ci="FusedDepthwiseConv2D",Bl=p0("kernelRegistry",()=>new Map),_c=p0("gradRegistry",()=>new Map);function ly(e,t){let n=oy(e,t);return Bl.get(n)}function uy(e){return _c.get(e)}function fh(e){let t=Bl.entries(),n=[];for(;;){let{done:a,value:r}=t.next();if(a)break;let[s,i]=r,[o]=s.split("_");o===e&&n.push(i)}return n}function Fc(e){let{kernelName:t,backendName:n}=e,a=oy(t,n);Bl.has(a)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),Bl.set(a,e)}function m0(e){let{kernelName:t}=e;_c.has(t)&&ee().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),_c.set(t,e)}function FF(e,t){let n=oy(e,t);if(!Bl.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Bl.delete(n)}function AF(e){if(!_c.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);_c.delete(e)}function $F(e,t){fh(e).forEach(n=>{let a=Object.assign({},n,{backendName:t});Fc(a)})}function oy(e,t){return`${t}_${e}`}var k={};Oe(k,{arraysEqual:()=>xr,assert:()=>F,assertNonNegativeIntegerDimensions:()=>ay,assertNonNull:()=>Ds,assertShapesMatch:()=>rt,bytesFromStringArray:()=>r0,bytesPerElement:()=>a0,checkConversionForErrors:()=>e0,clamp:()=>cc,computeStrides:()=>Po,createScalarValue:()=>DF,createShuffledIndices:()=>bF,decodeString:()=>yh,distSquared:()=>mF,encodeString:()=>Ac,fetch:()=>MF,flatten:()=>Ms,getArrayFromDType:()=>Qw,getTypedArrayFromDType:()=>Zw,hasEncodingLoss:()=>n0,indexToLoc:()=>IF,inferDtype:()=>Rd,inferFromImplicitShape:()=>vF,isBoolean:()=>s0,isFunction:()=>jr,isInt:()=>qt,isNumber:()=>i0,isPromise:()=>ry,isScalarShape:()=>fF,isString:()=>Hr,isTypedArray:()=>un,isValidDtype:()=>t0,locToIndex:()=>kF,makeOnesTypedArray:()=>ny,makeZerosNestedTypedArray:()=>wF,makeZerosTypedArray:()=>Od,nearestDivisor:()=>Pd,nearestLargerEven:()=>pF,now:()=>cy,parseAxisParam:()=>ca,randUniform:()=>hF,repeatedTry:()=>xF,rightPad:()=>pc,shuffle:()=>Yw,sizeFromShape:()=>zt,sizeToSquarishShape:()=>yF,squeezeShape:()=>Jw,sum:()=>dF,tanh:()=>gF,toNestedArray:()=>Oo,toTypedArray:()=>gh});function DF(e,t){return t==="string"?Ac(e):gh([e],t)}function RF(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function gh(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Ms(e)),ee().getBool("DEBUG")&&e0(e,t),RF(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let a=0;a<n.length;++a)Math.round(e[a])!==0&&(n[a]=1);return n}else throw new Error(`Unknown data type ${t}`)}function cy(){return ee().platform.now()}function MF(e,t){return ee().platform.fetch(e,t)}function Ac(e,t="utf-8"){return t=t||"utf-8",ee().platform.encode(e,t)}function yh(e,t="utf-8"){return t=t||"utf-8",ee().platform.decode(e,t)}var LF=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new OF)}profileKernel(e,t,n){let a,r=()=>{a=n()},s=this.backendTimer.time(r);if(ee().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let i=0;i<a.length;i++){let o=a[i];o.data().then(l=>{PF(l,o.dtype,e)})}return{kernelName:e,outputs:a,inputs:t,timeMs:s.then(i=>i.kernelMs),extraInfo:s.then(i=>i.getExtraProfileInfo!=null?i.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:s}=e;n.forEach(i=>{Promise.all([i.data(),a,s]).then(o=>{this.logger.logKernelProfile(t,i,o[0],o[1],r,o[2])})})}};function PF(e,t,n){if(t!=="float32")return!1;for(let a=0;a<e.length;a++){let r=e[a];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var OF=class{logKernelProfile(e,t,n,a,r,s){let i=typeof a=="number"?pc(`${a}ms`,9):a.error,o=pc(e,25),l=t.rank,c=t.size,u=pc(t.shape.toString(),14),p="";for(let d in r){let h=r[d];if(h!=null){let m=h.shape||t.shape,f=m.length;p+=`${d}: ${f}D ${f>0?m:""} `}}console.log(`%c${o}	%c${i}	%c${l}D ${u}	%c${c}	%c${p}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function zF(e,t,n){let a={},r={};for(let l=0;l<t.length;l++)a[t[l].id]=!0;for(let l=0;l<e.length;l++){let c=e[l],u=c.inputs;for(let p in u){let d=u[p],h=!1;for(let m=0;m<t.length;m++)if(a[d.id]){c.outputs.forEach(f=>a[f.id]=!0),h=!0,r[c.id]=!0;break}if(h)break}}let s={};s[n.id]=!0;let i={};for(let l=e.length-1;l>=0;l--){let c=e[l],u=c.inputs;for(let p=0;p<c.outputs.length;p++)if(s[c.outputs[p].id]){for(let d in u)s[u[d].id]=!0,i[c.id]=!0;break}}let o=[];for(let l=0;l<e.length;l++){let c=e[l];if(r[c.id]&&i[c.id]){let u={};for(let d in c.inputs){let h=c.inputs[d];a[h.id]&&(u[d]=h)}let p=Object.assign({},c);p.inputs=u,p.outputs=c.outputs,o.push(p)}}return o}function BF(e,t,n,a){for(let r=t.length-1;r>=0;r--){let s=t[r],i=[];if(s.outputs.forEach(l=>{let c=e[l.id];c!=null?i.push(c):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let l in s.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);let c=n(()=>o[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);let u=s.inputs[l];if(!xr(c.shape,u.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(e[u.id]==null)e[u.id]=c;else{let p=e[u.id];e[u.id]=a(p,c),p.dispose()}}}}var f0=20,$c=3,py=7;function VF(e,t,n,a){let r=Po(t),s=WF(e,t,n,r),i=t.length,o=bh(e,t,n,r,s),l=["Tensor"];return a&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(c=>"    "+c).join(`
`)),l.join(`
`)}function WF(e,t,n,a){let r=zt(t),s=a[a.length-1],i=new Array(s).fill(0),o=t.length,l=n==="complex64"?Mc(e):e;if(o>1)for(let c=0;c<r/s;c++){let u=c*s;for(let p=0;p<s;p++)i[p]=Math.max(i[p],Dc(l[u+p],0,n).length)}return i}function Dc(e,t,n){let a;return Array.isArray(e)?a=`${parseFloat(e[0].toFixed(py))} + ${parseFloat(e[1].toFixed(py))}j`:Hr(e)?a=`'${e}'`:n==="bool"?a=g0(e):a=parseFloat(e.toFixed(py)).toString(),pc(a,t)}function g0(e){return e===0?"false":"true"}function bh(e,t,n,a,r,s=!0){let i=n==="complex64"?2:1,o=t[0],l=t.length;if(l===0){if(n==="complex64"){let f=Mc(e);return[Dc(f[0],0,n)]}return n==="bool"?[g0(e[0])]:[e[0].toString()]}if(l===1){if(o>f0){let g=$c*i,y=Array.from(e.slice(0,g)),b=Array.from(e.slice((o-$c)*i,o*i));return n==="complex64"&&(y=Mc(y),b=Mc(b)),["["+y.map((x,v)=>Dc(x,r[v],n)).join(", ")+", ..., "+b.map((x,v)=>Dc(x,r[o-$c+v],n)).join(", ")+"]"]}let f=n==="complex64"?Mc(e):Array.from(e);return["["+f.map((g,y)=>Dc(g,r[y],n)).join(", ")+"]"]}let c=t.slice(1),u=a.slice(1),p=a[0]*i,d=[];if(o>f0){for(let f=0;f<$c;f++){let g=f*p,y=g+p;d.push(...bh(e.slice(g,y),c,n,u,r,!1))}d.push("...");for(let f=o-$c;f<o;f++){let g=f*p,y=g+p;d.push(...bh(e.slice(g,y),c,n,u,r,f===o-1))}}else for(let f=0;f<o;f++){let g=f*p,y=g+p;d.push(...bh(e.slice(g,y),c,n,u,r,f===o-1))}let h=l===2?",":"";d[0]="["+d[0]+h;for(let f=1;f<d.length-1;f++)d[f]=" "+d[f]+h;let m=`,
`;for(let f=2;f<l;f++)m+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":m),d}function Mc(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Bt=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=zt(e),n!=null){let a=n.length;F(a===this.size,()=>`Length of values '${a}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Qw(t,this.size),this.strides=Po(e)}set(e,...t){t.length===0&&(t=[0]),F(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let a of e){if(a<0||a>=this.shape[t]){let r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let n=e[e.length-1];for(let a=0;a<e.length-1;++a)n+=this.strides[a]*e[a];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ha().makeTensor(this.values,this.shape,this.dtype)}},Ha=null,Wl=null,UF=null;function GF(e){Ha=e}function HF(e){Wl=e}function jF(e){UF=e}var z=class{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=zt(e),this.strides=Po(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Wl.buffer(this.shape,this.dtype,e)}bufferSync(){return Wl.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Oo(this.shape,e)}arraySync(){return Oo(this.shape,this.dataSync())}async data(){this.throwIfDisposed();let e=Ha().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>yh(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();let e=Ha().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>yh(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Ha().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ha().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Wl.print(this,e)}clone(){return this.throwIfDisposed(),Wl.clone(this)}toString(e=!1){let t=this.dataSync();return VF(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Wl.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ha().makeVariable(this,e,t,n)}};Object.defineProperty(z,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});var Yr=class extends z{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a);this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!xr(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ha().disposeTensor(this),this.dataId=e.dataId,Ha().incRef(this,null)}dispose(){Ha().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Yr,Symbol.hasInstance,{value:e=>e instanceof z&&e.assign!=null&&e.assign instanceof Function});var Ta={};Oe(Ta,{assertTypesMatch:()=>y0,getTensorsInContainer:()=>dy,isTensorInList:()=>qF,makeTypesMatch:()=>Tt});var hy;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(hy||(hy={}));var my;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(my||(my={}));var fy;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(fy||(fy={}));var gy;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(gy||(gy={}));var yy;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(yy||(yy={}));var KF={float32:gy,int32:my,bool:fy,complex64:yy};function pa(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return KF[e][t]}function xh(e){return pa(e,"int32")}function Tt(e,t){if(e.dtype===t.dtype)return[e,t];let n=pa(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function y0(e,t){F(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function qF(e,t){return t.some(n=>n.id===e.id)}function dy(e){let t=[],n=new Set;return b0(e,t,n),t}function b0(e,t,n){if(e==null)return;if(e instanceof z){t.push(e);return}if(!XF(e))return;let a=e;for(let r in a){let s=a[r];n.has(s)||(n.add(s),b0(s,t,n))}}function XF(e){return Array.isArray(e)||typeof e=="object"}var x0=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Rc=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new x0}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new LF(this.backendInstance),!0}setupRegisteredKernels(){fh(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){fh(e).forEach(t=>{t.disposeFunc!=null&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof uc)&&typeof n.then=="function"){let a=++this.pendingBackendInitId,r=n.then(s=>a<this.pendingBackendInitId?!1:(this.registry[e]=s,this.pendingBackendInit=null,!0)).catch(s=>(a<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(s.stack||s.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t);a.disposeData(t),n.backend=e,e.move(t,r,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let a;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(a),()=>(a=t(),a instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),a))}scopedRun(e,t,n){e();try{let a=n();return t(),a}catch(a){throw t(),a}}nextTensorId(){return Rc.nextTensorId++}nextVariableId(){return Rc.nextVariableId++}clone(e){let t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e},a=s=>({x:()=>{let i="float32",o={x:s},l={dtype:i};return P.runKernelFunc(c=>c.cast(s,i),o,null,zs,l)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],a,r,{}),t}runKernel(e,t,n,a,r){let s=null,i=null;return this.runKernelFunc(s,t,i,e,n,a,r)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let a=this.backend.numDataIds(),r=0;n.forEach(o=>{r+=o.dtype==="complex64"?3:1});let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=a-t-r-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e,t,n,a,r,s,i){let o,l=[],c=this.isTapeOn();a==null&&(a=this.state.activeScope!=null?this.state.activeScope.name:"");let u=this.state.numBytes,p=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let d;this.backendName==null&&this.backend;let h=ly(a,this.backendName),m;if(h!=null)d=()=>{let g=this.backend.numDataIds();m=h.kernelFunc({inputs:t,attrs:r,backend:this.backend});let y=Array.isArray(m)?m:[m];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(a,g,y);let b=y.map(x=>{if(x.rank!=null)return x;let{dataId:v,shape:N,dtype:T}=x;return this.makeTensorFromDataId(v,N,T)});if(c){let x=this.getTensorsForGradient(a,t,b);if(x==null){i==null&&(i=[]);let v=b.filter((N,T)=>i[T]);x=(s||[]).slice().concat(v)}l=this.saveTensorsForBackwardMode(x)}return b};else{if(e==null)throw new Error(`Error running ${a}: Neither modular kernel nor forward func passed`);let g=y=>{!c||(l=y.map(b=>this.keep(this.clone(b))))};d=()=>{let y=this.backend.numDataIds();m=this.tidy(()=>e(this.backend,g));let b=Array.isArray(m)?m:[m];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(a,y,b),b}}let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?o=d():(f=this.profiler.profileKernel(a,t,()=>d()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),o=f.outputs)}),c&&this.addTapeNode(a,t,o,n,l,r),this.state.profiling&&this.state.activeProfile.kernels.push({name:a,bytesAdded:this.state.numBytes-u,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-p,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map(g=>t[g]!=null?t[g].shape:null),outputShapes:o.map(g=>g.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(m)?o:o[0]}saveTensorsForBackwardMode(e){return e.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(e,t,n){let a=uy(e);if(a!=null){let r=a.inputsToSave||[],s=a.outputsToSave||[],i;a.saveAllInputs?(F(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(l=>t[l])):i=r.map(l=>t[l]);let o=n.filter((l,c)=>s[c]);return i.concat(o)}return null}makeTensor(e,t,n,a){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;n==="string"&&Hr(e[0])&&(r=e.map(o=>Ac(o)));let s=a.write(r,t,n),i=new z(t,n,s,this.nextTensorId());if(this.incRef(i,a),n==="string"){let o=this.state.tensorInfo.get(s),l=r0(r);this.state.numBytes+=l-o.bytes,o.bytes=l}return i}makeTensorFromDataId(e,t,n,a){n=n||"float32";let r=new z(t,n,e,this.nextTensorId());return this.incRef(r,a),r}makeVariable(e,t=!0,n,a){n=n||this.nextVariableId().toString(),a!=null&&a!==e.dtype&&(e=e.cast(a));let r=new Yr(e,t,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}incRef(e,t){let n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++,n===0){this.state.numDataBuffers++;let a=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(a=e.size*a0(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:a,refCount:0}),this.state.numBytes+=a}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof Yr||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,e.dtype==="string"&&this.state.numStringTensors--;let t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?(e.dtype!=="complex64"&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):this.state.tensorInfo.get(e.dataId).refCount--}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(a=>a.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,a,r,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=uy(e);o!=null&&(a=o.gradFunc),a!=null&&(i.gradient=l=>(l=l.map((c,u)=>{if(c==null){let p=n[u],d=Od(p.size,p.dtype);return this.makeTensor(d,p.shape,p.dtype)}return c}),a(l.length>1?l:l[0],r,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=dy(e),n=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){let s=this.state.activeScope.track[r];!s.kept&&!n.has(s.id)&&s.dispose()}let a=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===a.id&&this.track(r)})}gradients(e,t,n,a=!1){if(F(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));F(r instanceof z,()=>"The result y returned by f() must be a tensor.");let s=zF(this.state.activeTape,t,r);if(!a&&s.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[r.id]=n==null?YF(r.shape):n,BF(i,s,l=>this.tidy(l),JF);let o=t.map(l=>i[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let c of l.saved)c.dispose()}),this.state.activeTape=null),{value:r,grads:o}})}customGrad(e){return F(jr(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{F(t.every(r=>r instanceof z),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,a={};return t.forEach((r,s)=>{a[s]=r}),this.runKernelFunc((r,s)=>(n=e(...t,s),F(n.value instanceof z,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),F(jr(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a,(r,s)=>{let i=n.gradFunc(r,s),o=Array.isArray(i)?i:[i];F(o.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),F(o.every(c=>c instanceof z),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let l={};return o.forEach((c,u)=>{l[u]=()=>c}),l})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){let t=cy(),n=await this.backend.time(e);return n.wallMs=cy()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new x0;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};Rc.nextTensorId=0;Rc.nextVariableId=0;function YF(e){let t=ny(zt(e),"float32");return P.makeTensor(t,e,"float32")}function v0(){let e=c0();if(e._tfengine==null){let t=new u0(e);e._tfengine=new Rc(t)}return CF(e._tfengine.ENV),GF(()=>e._tfengine),e._tfengine}var P=v0();function JF(e,t){let n={a:e,b:t};return P.runKernel(qr,n)}var vh={};Oe(vh,{isBrowser:()=>w0,isMobile:()=>ZF});function QF(){return typeof navigator!="undefined"&&navigator!=null}function ZF(){if(QF()){let e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function w0(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var ja=ee();ja.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});ja.registerFlag("IS_BROWSER",()=>w0());ja.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");ja.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));ja.registerFlag("PROD",()=>!1);ja.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ja.getBool("DEBUG"));ja.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);ja.registerFlag("IS_TEST",()=>!1);ja.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);function qa(e,t){let n=e;if(un(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let a=[];for(;Array.isArray(n)||un(n)&&t!=="string";)a.push(n.length),n=n[0];return Array.isArray(e)&&ee().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&k0(e,a,[]),a}function k0(e,t,n){if(n=n||[],!Array.isArray(e)&&!un(e)){F(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}F(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),F(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let a=t.slice(1);for(let r=0;r<e.length;++r)k0(e[r],a,n.concat(r))}function I0(e,t,n,a){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${a}' must be ${e} tensor, but got ${t} tensor`)}}function C(e,t,n,a="numeric"){if(e instanceof z)return I0(a,e.dtype,t,n),e;let r=Rd(e);if(r!=="string"&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),I0(a,r,t,n),e==null||!un(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let o=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${o}'`)}let s=qa(e,r);!un(e)&&!Array.isArray(e)&&(e=[e]);let i=r!=="string"?gh(e,r):Ms(e,[],!0);return P.makeTensor(i,s,r)}function Pc(e,t,n,a="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((r,s)=>C(r,`${t}[${s}]`,n,a))}var N0="__op";function R(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+N0;let r=(...s)=>{P.startScope(n);try{let i=a(...s);return ry(i)&&console.error("Cannot return a Promise inside of tidy."),P.endScope(i),i}catch(i){throw P.endScope(null),i}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}function eA(e,t){let n=C(e,"real","complex"),a=C(t,"imag","complex");rt(n.shape,a.shape,`real and imag shapes, ${n.shape} and ${a.shape}, must match in call to tf.complex().`);let r={real:n,imag:a};return P.runKernel(Ud,r)}var Jr=R({complex_:eA});function Zr(e,t,n,a){if(a==null&&(a=Rd(e)),a==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!un(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){ay(t);let r=zt(t),s=zt(n);F(r===s,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${s}`);for(let i=0;i<n.length;++i){let o=n[i],l=i===n.length-1?o!==zt(t.slice(i)):!0;F(n[i]===t[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!un(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=a!=="string"?gh(e,a):Ms(e,[],!0),P.makeTensor(e,t,a)}function Yn(e,t,n){let a=qa(e,n);return Zr(e,t,a,n)}var by={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},wh=4;async function nA(e,t){let n=[],a=[],r=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);for(let i=0;i<r.length;++i){let o=r[i],l=Array.isArray(e)?e[i].tensor:e[o];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);let c={name:o,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let u=new Promise(async p=>{let d=await l.bytes(),h=d.reduce((g,y)=>g+y.length,0)+wh*d.length,m=new Uint8Array(h),f=0;for(let g=0;g<d.length;g++){let y=d[g],b=new Uint8Array(new Uint32Array([y.length]).buffer);m.set(b,f),f+=wh,m.set(y,f),f+=y.length}p(m)});a.push(u)}else a.push(l.data());t!=null&&(c.group=t),n.push(c)}let s=await Promise.all(a);return{data:tA(s),specs:n}}function T0(e,t){let n={},a,r=0;for(let s of t){let i=s.name,o=s.dtype,l=s.shape,c=zt(l),u;if("quantization"in s){let p=s.quantization;if(p.dtype==="uint8"||p.dtype==="uint16"){if(!("min"in p&&"scale"in p))throw new Error(`Weight ${s.name} with quantization ${p.dtype} doesn't have corresponding metadata min and scale.`)}else if(p.dtype==="float16"){if(o!=="float32")throw new Error(`Weight ${s.name} is quantized with ${p.dtype} which only supports weights of type float32 not ${o}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${p.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let d=by[p.dtype],h=e.slice(r,r+c*d),m=p.dtype==="uint8"?new Uint8Array(h):new Uint16Array(h);if(o==="float32")if(p.dtype==="uint8"||p.dtype==="uint16"){u=new Float32Array(m.length);for(let f=0;f<m.length;f++){let g=m[f];u[f]=g*p.scale+p.min}}else if(p.dtype==="float16")a===void 0&&(a=aA()),u=a(m);else throw new Error(`Unsupported quantization type ${p.dtype} for weight type float32.`);else if(o==="int32"){if(p.dtype!=="uint8"&&p.dtype!=="uint16")throw new Error(`Unsupported quantization type ${p.dtype} for weight type int32.`);u=new Int32Array(m.length);for(let f=0;f<m.length;f++){let g=m[f];u[f]=Math.round(g*p.scale+p.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);r+=c*d}else if(o==="string"){let p=zt(s.shape);u=[];for(let d=0;d<p;d++){let h=new Uint32Array(e.slice(r,r+wh))[0];r+=wh;let m=new Uint8Array(e.slice(r,r+h));u.push(m),r+=h}}else{let p=by[o],d=e.slice(r,r+c*p);if(o==="float32")u=new Float32Array(d);else if(o==="int32")u=new Int32Array(d);else if(o==="bool")u=new Uint8Array(d);else if(o==="complex64"){u=new Float32Array(d);let h=new Float32Array(u.length/2),m=new Float32Array(u.length/2);for(let y=0;y<h.length;y++)h[y]=u[y*2],m[y]=u[y*2+1];let f=Yn(h,l,"float32"),g=Yn(m,l,"float32");n[i]=Jr(f,g),f.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);r+=c*p}o!=="complex64"&&(n[i]=Yn(u,l,o))}return n}function tA(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(s=>{if(t+=s.byteLength,n.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let a=new Uint8Array(t),r=0;return n.forEach(s=>{a.set(new Uint8Array(s.buffer),r),r+=s.byteLength}),a.buffer}var xy=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function S0(e){return xy?Buffer.byteLength(e):new Blob([e]).size}function rA(e){if(xy)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let a=0,r=t.length;a<r;a++)n+=String.fromCharCode(t[a]);return btoa(n)}function sA(e){if(xy){let a=Buffer.from(e,"base64");return a.buffer.slice(a.byteOffset,a.byteOffset+a.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let a=0;a<t.length;++a)n.set([t.charCodeAt(a)],a);return n.buffer}function vy(e){if(e.length===1)return e[0];let t=0;e.forEach(r=>{t+=r.byteLength});let n=new Uint8Array(t),a=0;return e.forEach(r=>{n.set(new Uint8Array(r),a),a+=r.byteLength}),n.buffer}function C0(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function Oc(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:S0(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:S0(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function iA(){let e=n=>{let a=n<<13,r=0;for(;(a&8388608)==0;)r-=8388608,a<<=1;return a&=~8388608,r+=947912704,a|r},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function oA(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function lA(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function aA(){let e=iA(),t=oA(),n=lA();return a=>{let r=new ArrayBuffer(4*a.length),s=new Uint32Array(r);for(let i=0;i<a.length;i++){let o=a[i],l=e[n[o>>10]+(o&1023)]+t[o>>10];s[i]=l}return new Float32Array(r)}}var At=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return At.instance==null&&(At.instance=new At),At.instance}static registerSaveRouter(e){At.getInstance().saveRouters.push(e)}static registerLoadRouter(e){At.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return At.getHandlers(e,"save")}static getLoadHandlers(e,t){return At.getHandlers(e,"load",t)}static getHandlers(e,t,n){let a=[];return(t==="load"?At.getInstance().loadRouters:At.getInstance().saveRouters).forEach(r=>{let s=r(e,n);s!==null&&a.push(s)}),a}},uA=e=>At.registerSaveRouter(e),cA=e=>At.registerLoadRouter(e),pA=e=>At.getSaveHandlers(e),dA=(e,t)=>At.getLoadHandlers(e,t),wy="tensorflowjs",ky=1,Ei="models_store",Qr="model_info_store";function E0(){if(!ee().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window=="undefined"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Iy(e){let t=e.result;t.createObjectStore(Ei,{keyPath:"modelPath"}),t.createObjectStore(Qr,{keyPath:"modelPath"})}var _i=class{constructor(e){if(this.indexedDB=E0(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,a)=>{let r=this.indexedDB.open(wy,ky);r.onupgradeneeded=()=>Iy(r),r.onsuccess=()=>{let s=r.result;if(t==null){let i=s.transaction(Ei,"readonly"),o=i.objectStore(Ei).get(this.modelPath);o.onsuccess=()=>{if(o.result==null)return s.close(),a(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(o.result.modelArtifacts)},o.onerror=l=>(s.close(),a(o.error)),i.oncomplete=()=>s.close()}else{let i=Oc(t),o=s.transaction(Qr,"readwrite"),l=o.objectStore(Qr),c=l.put({modelPath:this.modelPath,modelArtifactsInfo:i}),u;c.onsuccess=()=>{u=s.transaction(Ei,"readwrite");let p=u.objectStore(Ei).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});p.onsuccess=()=>n({modelArtifactsInfo:i}),p.onerror=d=>{l=o.objectStore(Qr);let h=l.delete(this.modelPath);h.onsuccess=()=>(s.close(),a(p.error)),h.onerror=m=>(s.close(),a(p.error))}},c.onerror=p=>(s.close(),a(c.error)),o.oncomplete=()=>{u==null?s.close():u.oncomplete=()=>s.close()}}},r.onerror=s=>a(r.error)})}};_i.URL_SCHEME="indexeddb://";var _0=e=>ee().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(_i.URL_SCHEME)?hA(e.slice(_i.URL_SCHEME.length)):null;At.registerSaveRouter(_0);At.registerLoadRouter(_0);function hA(e){return new _i(e)}function mA(e){return e.startsWith(_i.URL_SCHEME)?e.slice(_i.URL_SCHEME.length):e}var fA=class{constructor(){this.indexedDB=E0()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(wy,ky);n.onupgradeneeded=()=>Iy(n),n.onsuccess=()=>{let a=n.result,r=a.transaction(Qr,"readonly"),s=r.objectStore(Qr).getAll();s.onsuccess=()=>{let i={};for(let o of s.result)i[o.modelPath]=o.modelArtifactsInfo;e(i)},s.onerror=i=>(a.close(),t(s.error)),r.oncomplete=()=>a.close()},n.onerror=a=>t(n.error)})}async removeModel(e){return e=mA(e),new Promise((t,n)=>{let a=this.indexedDB.open(wy,ky);a.onupgradeneeded=()=>Iy(a),a.onsuccess=()=>{let r=a.result,s=r.transaction(Qr,"readwrite"),i=s.objectStore(Qr),o=i.get(e),l;o.onsuccess=()=>{if(o.result==null)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let c=i.delete(e),u=()=>{l=r.transaction(Ei,"readwrite");let p=l.objectStore(Ei).delete(e);p.onsuccess=()=>t(o.result.modelArtifactsInfo),p.onerror=d=>n(o.error)};c.onsuccess=u,c.onerror=p=>(u(),r.close(),n(o.error))}},o.onerror=c=>(r.close(),n(o.error)),s.oncomplete=()=>{l==null?r.close():l.oncomplete=()=>r.close()}},a.onerror=r=>n(a.error)})}},vr="/",Vl="tensorflowjs_models",F0="info",gA="model_topology",yA="weight_specs",bA="weight_data",xA="model_metadata";function A0(e){return{info:[Vl,e,F0].join(vr),topology:[Vl,e,gA].join(vr),weightSpecs:[Vl,e,yA].join(vr),weightData:[Vl,e,bA].join(vr),modelMetadata:[Vl,e,xA].join(vr)}}function vA(e){let t=e.split(vr);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(vr)}function wA(e){return e.startsWith(Fi.URL_SCHEME)?e.slice(Fi.URL_SCHEME.length):e}var Fi=class{constructor(e){if(!ee().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=A0(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),a=Oc(e);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,rA(e.weightData));let r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return e.signature!=null&&(r.signature=e.signature),e.userDefinedMetadata!=null&&(r.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(r.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:a}}catch(r){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(a==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=a;let r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){let i=JSON.parse(r);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer)}let s=this.LS.getItem(this.keys.weightData);if(s==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=sA(s),t}};Fi.URL_SCHEME="localstorage://";var $0=e=>ee().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Fi.URL_SCHEME)?kA(e.slice(Fi.URL_SCHEME.length)):null;At.registerSaveRouter($0);At.registerLoadRouter($0);function kA(e){return new Fi(e)}var IA=class{constructor(){F(ee().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),F(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Vl+vr,n=vr+F0;for(let a=0;a<this.LS.length;++a){let r=this.LS.key(a);if(r.startsWith(t)&&r.endsWith(n)){let s=vA(r);e[s]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=wA(e);let t=A0(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),n}},Ul="://",Jn=class{constructor(){this.managers={}}static getInstance(){return Jn.instance==null&&(Jn.instance=new Jn),Jn.instance}static registerManager(e,t){F(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Ul)&&(e=e.slice(0,e.indexOf(Ul))),F(e.length>0,()=>"scheme must not be an empty string.");let n=Jn.getInstance();F(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function kh(e){if(e.indexOf(Ul)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Jn.getSchemes().join(",")}`);return{scheme:e.split(Ul)[0],path:e.split(Ul)[1]}}async function D0(e,t,n=!1){F(e!==t,()=>`Old path and new path are the same: '${e}'`);let a=At.getLoadHandlers(e);F(a.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),F(a.length<2,()=>`Copying failed because more than one (${a.length}) load handlers for source URL ${e}.`);let r=a[0],s=At.getSaveHandlers(t);F(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),F(s.length<2,()=>`Copying failed because more than one (${a.length}) save handlers for destination URL ${t}.`);let i=s[0],o=kh(e).scheme,l=kh(e).path,c=o===kh(e).scheme,u=await r.load();n&&c&&await Jn.getManager(o).removeModel(l);let p=await i.save(u);return n&&!c&&await Jn.getManager(o).removeModel(l),p.modelArtifactsInfo}async function NA(){let e=Jn.getSchemes(),t={};for(let n of e){let a=await Jn.getManager(n).listModels();for(let r in a){let s=n+Ul+r;t[s]=a[r]}}return t}async function TA(e){let t=kh(e);return Jn.getManager(t.scheme).removeModel(t.path)}async function SA(e,t){return D0(e,t,!1)}async function CA(e,t){return D0(e,t,!0)}var EA=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(ee().get("IS_BROWSER")){ee().setPlatform("browser",new EA);try{Jn.registerManager(Fi.URL_SCHEME,new IA)}catch(e){}try{Jn.registerManager(_i.URL_SCHEME,new fA)}catch(e){}}var _A={importFetch:()=>X_()},Ny,FA=class{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return ee().global.fetch!=null?ee().global.fetch(e,t):(Ny==null&&(Ny=_A.importFetch()),Ny(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};ee().get("IS_NODE")&&ee().setPlatform("node",new FA);function Le(e,t="float32",n){return t=t||"float32",ay(e),new Bt(e,t,n)}function AA(e,t){let n=C(e,"x","cast");if(!t0(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let a={x:n},r={dtype:t};return P.runKernel(zs,a,r)}var pe=R({cast_:AA});function $A(e){let t={x:C(e,"x","clone","string_or_numeric")};return P.runKernel(il,t)}var es=R({clone_:$A});function M0(e,t=!1){console.log(e.toString(t))}v0();var DA={buffer:Le,cast:pe,clone:es,print:M0};HF(DA);var Kt={};Oe(Kt,{browserFiles:()=>MA,browserHTTPRequest:()=>PA,concatenateArrayBuffers:()=>vy,copyModel:()=>SA,decodeWeights:()=>T0,encodeWeights:()=>nA,fromMemory:()=>OA,getLoadHandlers:()=>dA,getModelArtifactsInfoForJSON:()=>Oc,getSaveHandlers:()=>pA,http:()=>Sy,isHTTPScheme:()=>Ty,listModels:()=>NA,loadWeights:()=>RA,moveModel:()=>CA,registerLoadRouter:()=>cA,registerSaveRouter:()=>uA,removeModel:()=>TA,weightsLoaderFactory:()=>R0,withSaveHandler:()=>LA});var zA="model",BA=".json",WA=".weights.bin";function P0(e){return new Promise(t=>setTimeout(t)).then(e)}var Gl=class{constructor(e){if(!ee().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Gl.URL_SCHEME)&&(e=e.slice(Gl.URL_SCHEME.length)),(e==null||e.length===0)&&(e=zA),this.modelTopologyFileName=e+BA,this.weightDataFileName=e+WA}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};e.signature!=null&&(a.signature=e.signature),e.userDefinedMetadata!=null&&(a.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(a.modelInitializer=e.modelInitializer);let r=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),s=this.jsonAnchor==null?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=r,await P0(()=>s.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await P0(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Oc(e)}}}};Gl.URL_SCHEME="downloads://";var VA=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){let e=this.files[0],t=this.files.slice(1);return new Promise((n,a)=>{let r=new FileReader;r.onload=s=>{let i=JSON.parse(s.target.result),o=i.modelTopology;if(o==null){a(new Error(`modelTopology field is missing from file ${e.name}`));return}t.length===0&&n({modelTopology:o});let l=i.weightsManifest;if(l==null){a(new Error(`weightManifest field is missing from file ${e.name}`));return}let c;try{c=this.checkManifestAndWeightFiles(l,t)}catch(h){a(h);return}let u=[],p=[],d=[];l.forEach(h=>{h.paths.forEach(m=>{p.push(m),d.push(null)}),u.push(...h.weights)}),l.forEach(h=>{h.paths.forEach(m=>{let f=new FileReader;f.onload=g=>{let y=g.target.result,b=p.indexOf(m);if(d[b]=y,d.indexOf(null)===-1){let x={modelTopology:o,weightSpecs:u,weightData:vy(d),format:i.format,generatedBy:i.generatedBy,convertedBy:i.convertedBy};i.signature!=null&&(x.signature=i.signature),i.userDefinedMetadata!=null&&(x.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(x.modelInitializer=i.modelInitializer),n(x)}},f.onerror=g=>a(`Failed to weights data from file of path '${m}'.`),f.readAsArrayBuffer(c[m])})})},r.onerror=s=>a(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(e)})}checkManifestAndWeightFiles(e,t){let n=[],a=t.map(s=>C0(s.name)),r={};for(let s of e)s.paths.forEach(i=>{let o=C0(i);if(n.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(n.push(o),a.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);r[i]=t[a.indexOf(o)]});if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return r}},GA=e=>ee().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Gl.URL_SCHEME)?UA(e.slice(Gl.URL_SCHEME.length)):null;At.registerSaveRouter(GA);function UA(e="model"){return new Gl(e)}function MA(e){return new VA(e)}function O0(e,t,n,a){i(e),n=n==null?0:n,a=a==null?1:a,o(n,a);let r=0,s=l=>(l.then(c=>{let u=n+ ++r/e.length*(a-n);return t(u),c}),l);function i(l){F(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function o(l,c){F(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),F(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),F(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(e.map(s))}async function L0(e,t){t==null&&(t={});let n=t.fetchFunc==null?ee().platform.fetch:t.fetchFunc,a=e.map(c=>n(c,t.requestInit,{isBinary:!0})),r=0,s=.5,i=(t.onProgress==null?await Promise.all(a):await O0(a,t.onProgress,r,s)).map(c=>c.arrayBuffer()),o=.5,l=1;return t.onProgress==null?await Promise.all(i):await O0(i,t.onProgress,o,l)}async function RA(e,t="",n,a){return R0(r=>L0(r,{requestInit:a}))(e,t,n)}function R0(e){return async(t,n="",a)=>{let r=t.map(()=>!1),s={},i=a!=null?a.map(()=>!1):[],o=[];if(t.forEach((h,m)=>{let f=0;h.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,b=by[y]*zt(g.shape),x=()=>{r[m]=!0,s[m]==null&&(s[m]=[]),s[m].push({manifestEntry:g,groupOffset:f,sizeBytes:b})};a!=null?a.forEach((v,N)=>{v===g.name&&(x(),i[N]=!0)}):x(),o.push(g.name),f+=b})}),!i.every(h=>h)){let h=a.filter((m,f)=>!i[f]);throw new Error(`Could not find weights in manifest with names: ${h.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let l=r.reduce((h,m,f)=>(m&&h.push(f),h),[]),c=[];l.forEach(h=>{t[h].paths.forEach(m=>{let f=n+(n.endsWith("/")?"":"/")+m;c.push(f)})});let u=await e(c),p={},d=0;return l.forEach(h=>{let m=t[h].paths.length,f=0;for(let x=0;x<m;x++)f+=u[d+x].byteLength;let g=new ArrayBuffer(f),y=new Uint8Array(g),b=0;for(let x=0;x<m;x++){let v=new Uint8Array(u[d+x]);y.set(v,b),b+=v.byteLength}s[h].forEach(x=>{let v=g.slice(x.groupOffset,x.groupOffset+x.sizeBytes),N=T0(v,[x.manifestEntry]);for(let T in N)p[T]=N[T]}),d+=m}),p}}var HA="application/octet-stream",jA="application/json",Cy=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(F(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=ee().platform.fetch,F(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&F(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};e.signature!=null&&(a.signature=e.signature),e.userDefinedMetadata!=null&&(a.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(a.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(a)],{type:jA}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:HA}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Oc(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(h){let m=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?m+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":m+=" Please make sure the server is serving valid JSON for this request.",new Error(m)}let n=t.modelTopology,a=t.weightsManifest,r=t.generatedBy,s=t.convertedBy,i=t.format,o=t.signature,l=t.userDefinedMetadata;if(n==null&&a==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let c,u;a!=null&&([c,u]=await this.loadWeights(a));let p={modelTopology:n,weightSpecs:c,weightData:u,generatedBy:r,convertedBy:s,format:i};o!=null&&(p.signature=o),l!=null&&(p.userDefinedMetadata=l);let d=t.modelInitializer;return d&&(p.modelInitializer=d),p}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=qA(t),r=this.weightPathPrefix||n,s=[];for(let c of e)s.push(...c.weights);let i=[],o=[];for(let c of e)for(let u of c.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(u)):i.push(r+u+a);this.weightUrlConverter&&i.push(...await Promise.all(o));let l=await L0(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,vy(l)]}};Cy.URL_SCHEME_REGEX=/^https?:\/\//;function qA(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),a=e.substring(0,t),r=n>t?e.substring(n):"";return[a+"/",r]}function Ty(e){return e.match(Cy.URL_SCHEME_REGEX)!=null}var z0=(e,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(a=>Ty(a)):n=Ty(e),n)return Sy(e,t)}return null};At.registerSaveRouter(z0);At.registerLoadRouter(z0);function Sy(e,t){return new Cy(e,t)}function PA(e,t){return Sy(e,t)}var Ey=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},KA=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function OA(e,t,n,a){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new Ey(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ey({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ey({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a}))}function LA(e){return new KA(e)}var B0={};Oe(B0,{confusionMatrix:()=>XA});function YA(e,t,n=!1,a=!1){let r=C(e,"a","matMul"),s=C(t,"b","matMul");[r,s]=Tt(r,s);let i={a:r,b:s},o={transposeA:n,transposeB:a};return P.runKernel(Ls,i,o)}var ze=R({matMul_:YA});function JA(e,t,n=1,a=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let r={indices:C(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:a};return P.runKernel(ii,r,s)}var Hl=R({oneHot_:JA});function ZA(e,t){let n=C(e,"x","transpose");if(t==null&&(t=n.shape.map((s,i)=>i).reverse()),F(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(s=>{F(s>=0&&s<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let a={x:n},r={perm:t};return P.runKernel(Ni,a,r)}var Ue=R({transpose_:ZA});function QA(e,t,n){let a=C(e,"labels","confusionMatrix"),r=C(t,"predictions","confusionMatrix");F(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),F(a.rank===1,()=>`Expected the rank of labels to be 1, but got ${a.rank}`),F(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),F(a.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${a.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),F(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let s=Hl(pe(a,"int32"),n),i=Hl(pe(r,"int32"),n),o=Ue(s),l=ze(o,i);return pe(l,"int32")}var XA=R({confusionMatrix_:QA}),Ai={};Oe(Ai,{fromPixels:()=>t$,toPixels:()=>e$});function Ih(e,t,n){if(Ds(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let a=qa(e,n);if(a.length!==3&&a.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(a.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Zr(e,t,a,n)}var jl;function n$(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&e instanceof ImageData)a=!0;else if(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)s=!0;else if(e.getContext!=null)i=!0;else if(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(r){let d=2;if(r&&e.readyState<d)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(ly(mh,P.backendName)!=null){let d={pixels:e},h={numChannels:t};return P.runKernel(mh,d,h)}let[l,c]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height],u;i?u=e.getContext("2d").getImageData(0,0,l,c).data:a||n?u=e.data:(s||r||o)&&(jl==null&&(jl=document.createElement("canvas").getContext("2d")),jl.canvas.width=l,jl.canvas.height=c,jl.drawImage(e,0,0,l,c),u=jl.getImageData(0,0,l,c).data);let p;if(t===4)p=new Int32Array(u);else{let d=l*c;p=new Int32Array(d*t);for(let h=0;h<d;h++)for(let m=0;m<t;++m)p[h*t+m]=u[h*4+m]}return Ih(p,[c,l,t],"int32")}async function e$(e,t){let n=C(e,"img","toPixels");if(!(e instanceof z)){let c=n;n=pe(c,"int32"),c.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[a,r]=n.shape.slice(0,2),s=n.rank===2?1:n.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let i=await n.data(),o=n.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*a*4);for(let c=0;c<a*r;++c){let u=[0,0,0,255];for(let d=0;d<s;d++){let h=i[c*s+d];if(n.dtype==="float32"){if(h<0||h>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${h}.`)}else if(n.dtype==="int32"&&(h<0||h>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${h}.`);s===1?(u[0]=h*o,u[1]=h*o,u[2]=h*o):u[d]=h*o}let p=c*4;l[p+0]=Math.round(u[0]),l[p+1]=Math.round(u[1]),l[p+2]=Math.round(u[2]),l[p+3]=Math.round(u[3])}if(t!=null){t.width=r,t.height=a;let c=t.getContext("2d"),u=new ImageData(l,r,a);c.putImageData(u,0,0)}return n!==e&&n.dispose(),l}var t$=R({fromPixels_:n$}),_y={};Oe(_y,{prepareAndValidate:()=>W0});function W0(e,t){let n=e.shape.length,a=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(a<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${a}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[a-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[a-1]} vs. ${n}`);if(zt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,s=r[r.length-1],i=1;for(let p=0;p<r.length-1;++p)i*=r[p];let o=e.shape,l=r.slice();l.pop();let c=1;for(let p=s;p<n;++p)c*=o[p],l.push(o[p]);let u=[...Po(e.shape).map(p=>p/c),1].slice(0,s);return[l,i,c,u]}var Fy={};Oe(Fy,{calculateShapes:()=>V0,validateInput:()=>$y,validateUpdateShape:()=>Ay});function Ay(e,t,n){let a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${a}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(s+` update.rank < ${r}. `);if(e.length<a+(n.rank-r))throw new Error(s+` Output shape length < ${a+(n.rank-r)}`);if(n.rank!==r+e.length-a)throw new Error(s+` update.rank != ${r+e.length-a}`);for(let i=0;i<r;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-r;++i)if(n.shape[i+r]!==e[i+a])throw new Error(s+` updates.shape[${i+r}] (${n.shape[i+r]}) != shape[${i+r}] (${e[i+r]})`)}function $y(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Ay(n,t,e)}function V0(e,t,n){let a=t.shape.length,r=a>1?t.shape[a-1]:1,s=n.length,i=1;for(let p=r;p<s;++p)i*=n[p];let o=r<1?1:r,l=zt(t.shape)/o,c=[...Po(n.slice(0,r)),1],u=zt(n);return{sliceRank:r,numUpdates:l,sliceSize:i,strides:c,outputSize:u}}var hn={};Oe(hn,{assertParamsValid:()=>a$,computeFlatOffset:()=>s$,computeOutShape:()=>U0,getNormalizedAxes:()=>H0,isSliceContinous:()=>r$,maskToAxes:()=>Nh,parseSliceParams:()=>J0,sliceInfo:()=>i$,startForAxis:()=>X0,startIndicesWithElidedDims:()=>j0,stopForAxis:()=>Y0,stopIndicesWithElidedDims:()=>q0,stridesForAxis:()=>K0,stridesWithElidedDims:()=>G0});function a$(e,t,n){let a=e.shape.length;F(a===t.length,()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`),F(a===n.length,()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`);for(let r=0;r<a;++r)F(t[r]+n[r]<=e.shape[r],()=>`Error in slice${a}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function Nh(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function U0(e,t,n){let a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function G0(e,t,n,a){let r=[...e];for(let s=r.length;s<a.length;s++)r.push(1);for(let s=0;s<n;s++)s===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function Z0(e,t,n){return n<=e?n:n-(t-1)}function Q0(e,t){let n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function H0(e,t,n,a,r,s,i,o,l){let c=e.length,u=new Array(c),p=new Array(c),d=new Array(c);if(t.length&&n>0){let h=t[0],m=n+1;u=j0(i,h,m,a,e),p=q0(o,h,m,r,e),d=G0(s,h,m,e)}else for(let h=0;h<c;h++)u[h]=X0(i,a,s,e,h,l),p[h]=Y0(o,r,s,e,h,l),d[h]=K0(s,h,l);return{begin:u,end:p,strides:d}}function j0(e,t,n,a,r){let s=[...r],i=Q0(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{let l=Z0(t,n,o),c=a[l];e&1<<l&&(c=0),s[o]=c}return s}function q0(e,t,n,a,r){let s=[...r],i=Q0(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{let l=Z0(t,n,o),c=a[l];e&1<<l&&(c=Number.MAX_SAFE_INTEGER),s[o]=c}for(let o=0;o<s.length;o++){let l=r[o];s[o]<0&&(s[o]+=l),s[o]=cc(0,s[o],r[o])}return s}function K0(e,t,n){let a=e[t];return(n&1<<t||a==null)&&(a=1),a}function X0(e,t,n,a,r,s){let i=t[r],o=n[r]||1;(e&1<<r||s&1<<r||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let l=a[r];return i<0&&(i+=l),i=cc(0,i,l-1),i}function Y0(e,t,n,a,r,s){let i=t[r],o=n[r]||1;(e&1<<r||s&1<<r||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let l=a[r];return i<0&&(i+=l),o>0?i=cc(0,i,l):i=cc(-1,i,l-1),i}function r$(e,t,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function s$(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function J0(e,t,n){let a,r=e.shape.length;typeof t=="number"?a=[t,...new Array(r-1).fill(0)]:t.length<r?a=t.concat(new Array(r-t.length).fill(0)):a=t.slice(),a.forEach(i=>{F(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return n==null?s=new Array(r).fill(-1):typeof n=="number"?s=[n,...new Array(r-1).fill(-1)]:n.length<r?s=n.concat(new Array(r-n.length).fill(-1)):s=n,s=s.map((i,o)=>i>=0?i:(F(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),e.shape[o]-a[o])),[a,s]}function i$(e,t,n,a,r,s,i,o,l){let c=t.slice(),u=n.slice(),p=a;a==null&&(p=new Array(c.length));let d=Nh(i);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(i!==0&&o!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(i!==0&&l!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let h=e.length-c.length,m=Nh(o),f=e.slice();m.forEach(T=>{c[T]=0,u[T]=1,f.splice(T,0,1)});let{begin:g,end:y,strides:b}=H0(f,d,h,c,u,p,r,s,i);c=g,u=y,p=b;let x=Nh(l);x.forEach(T=>{u[T]=c[T]+1,p[T]=1});let v=U0(c,u,p),N=v.filter((T,E)=>x.indexOf(E)===-1);return{nonStrided:p.every(T=>T===1),$begin:c,$end:u,$strides:p,size:v,newShape:f,outShape:N}}var se={};Oe(se,{Serializable:()=>ek,SerializationMap:()=>$i,registerClass:()=>ts});var ek=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},$i=class{constructor(){this.classNameMap={}}static getMap(){return $i.instance==null&&($i.instance=new $i),$i.instance}static register(e){$i.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function ts(e){F(e.className!=null,()=>"Class being registered does not have the static className property defined."),F(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),F(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),$i.register(e)}var tk={};Oe(tk,{TEST_EPSILON_FLOAT16:()=>nk,encodeStrings:()=>ak,expectArrayBuffersEqual:()=>d$,expectArraysClose:()=>o$,expectArraysEqual:()=>u$,expectNumbersClose:()=>c$,expectPromiseToFail:()=>l$,expectValuesInRange:()=>p$,testEpsilon:()=>Dy});var h$=.001,nk=.1;function o$(e,t,n){return n==null&&(n=Dy()),My(e,t,(a,r)=>Ry(a,r,n))}function Dy(){return P.backend.floatPrecision()===32?h$:nk}function My(e,t,n){let a=!0;if((un(e)||un(t))&&(a=!1),un(e)&&un(t)&&(a=!0),a){let i=e.constructor.name,o=t.constructor.name;if(i!==o)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${o}`)}if(Array.isArray(e)&&Array.isArray(t)){let i=qa(e),o=qa(t);if(!xr(i,o))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${o}]`)}let r=un(e)?e:Ms(e),s=un(t)?t:Ms(t);if(r.length!==s.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${s.length}.
Actual:   ${r}.
Expected: ${s}.`);for(let i=0;i<s.length;++i){let o=r[i],l=s[i];if(!n(o,l))throw new Error(`Arrays differ: actual[${i}] = ${o}, expected[${i}] = ${l}.
Actual:   ${r}.
Expected: ${s}.`)}}function l$(e,t){e().then(()=>t.fail(),()=>t())}function u$(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Hr(e)||Hr(e[0])||Hr(t)||Hr(t[0])?My(e,n,(a,r)=>a==r):My(e,t,(a,r)=>Ry(a,r,0))}function c$(e,t,n){if(n==null&&(n=Dy()),!Ry(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Ry(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function p$(e,t,n){for(let a=0;a<e.length;a++)if(e[a]<t||e[a]>n)throw new Error(`Value out of range:${e[a]} low: ${t}, high: ${n}`)}function d$(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function ak(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?ak(n):e[t]=Ac(n)}return e}var rk="2.8.3";function m$(){ee().set("PROD",!0)}function f$(){ee().set("DEBUG",!0)}function g$(){ee().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Pt(e){ee().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}jF(Pt);function y$(){P.disposeVariables()}function ns(){return P}function Th(){return P.memory()}function b$(e){return P.profile(e)}function D(e,t){return P.tidy(e,t)}function Ae(e){dy(e).forEach(t=>t.dispose())}function Xt(e){return P.keep(e)}function x$(e){return P.time(e)}function v$(e){return P.setBackend(e)}function w$(){return P.ready()}function k$(){return P.backendName}function I$(e){P.removeBackend(e)}function N$(e){return P.findBackend(e)}function T$(e){return P.findBackendFactory(e)}function Sh(e,t,n=1){return P.registerBackend(e,t,n)}function sk(){return P.backend}function S$(e,t){ee().setPlatform(e,t)}function C$(e,t){let n=C(e,"a","add"),a=C(t,"b","add");[n,a]=Tt(n,a);let r={a:n,b:a};return P.runKernel(qr,r)}var Z=R({add_:C$});function E$(e,t){let n=C(e,"a","floorDiv"),a=C(t,"b","floorDiv");[n,a]=Tt(n,a);let r={a:n,b:a};return P.runKernel(Ks,r)}var Ch=R({floorDiv_:E$});function _$(e,t){let n=C(e,"a","div"),a=C(t,"b","div");if([n,a]=Tt(n,a),n.dtype==="int32"&&a.dtype==="int32")return Ch(n,a);let r={a:n,b:a},s={};return P.runKernel(Hs,r,s)}var ve=R({div_:_$});function F$(e,t){let n=C(e,"a","mul"),a=C(t,"b","mul");[n,a]=Tt(n,a);let r={a:n,b:a};return P.runKernel(si,r)}var L=R({mul_:F$});function A$(e){let t=C(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return P.runKernel(fc,n)}else{let n={x:t};return P.runKernel(Lo,n)}}var Wt=R({abs_:A$});function $$(e){let t={x:C(e,"x","acos")};return P.runKernel(zo,t)}var Py=R({acos_:$$});function D$(e){let t={x:C(e,"x","acosh")};return P.runKernel(Bo,t)}var Oy=R({acosh_:D$});function M$(e){F(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),F(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((r,s)=>C(r,`tensors${s}`,"addN")),n=t[0];t.forEach(r=>{if(r.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!xr(r.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let a=t;return P.runKernel(Rs,a)}var ik=R({addN_:M$});function R$(e,t=null,n=!1){let a={x:C(e,"x","all","bool")},r={axis:t,keepDims:n};return P.runKernel(Ld,a,r)}var Eh=R({all_:R$});function P$(e,t=null,n=!1){let a={x:C(e,"x","any","bool")},r={axis:t,keepDims:n};return P.runKernel(zd,a,r)}var Lc=R({any_:P$});function O$(e,t=0){let n={x:C(e,"x","argMax")},a={axis:t};return P.runKernel(Ps,n,a)}var zc=R({argMax_:O$});function L$(e,t=0){let n={x:C(e,"x","argMin")},a={axis:t};return P.runKernel(dc,n,a)}var Ly=R({argMin_:L$});function z$(e){let t={x:C(e,"x","asin")};return P.runKernel(Wo,t)}var zy=R({asin_:z$});function B$(e){let t={x:C(e,"x","asinh")};return P.runKernel(Vo,t)}var By=R({asinh_:B$});function W$(e){let t={x:C(e,"x","atan")};return P.runKernel(Uo,t)}var Wy=R({atan_:W$});function V$(e,t){let n=C(e,"a","atan2"),a=C(t,"b","atan2");[n,a]=Tt(n,a);let r={a:n,b:a};return P.runKernel(Ho,r)}var Vy=R({atan2_:V$});function U$(e){let t={x:C(e,"x","atanh")};return P.runKernel(Go,t)}var Uy=R({atanh_:U$});function G$(e,t,n,a,r="NHWC",s){let i=e[3],o=[...t,i],l=ok(r);return Bc(e,o,n,s,a,null,null,l)}function lk(e,t,n,a,r,s,i="channelsLast"){let[o,l]=_h(t),c;if(i==="channelsLast")c=[o,l,e[3],e[3]];else if(i==="channelsFirst")c=[o,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return Bc(e,c,n,a,r,s,!1,i)}function H$(e,t,n,a,r,s,i="NDHWC"){let[o,l,c]=Gy(t),u,p;if(i==="NDHWC")p="channelsLast",u=[o,l,c,e[4],e[4]];else if(i==="NCDHW")p="channelsFirst",u=[o,l,c,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return uk(e,u,n,a,r,!1,p,s)}function Bc(e,t,n,a,r,s,i=!1,o="channelsLast"){let[l,c,u,p]=[-1,-1,-1,-1];if(o==="channelsLast")[l,c,u,p]=e;else if(o==="channelsFirst")[l,p,c,u]=e;else throw new Error(`Unknown dataFormat ${o}`);let[d,h,,m]=t,[f,g]=_h(n),[y,b]=_h(a),x=ql(d,y),v=ql(h,b),{padInfo:N,outHeight:T,outWidth:E}=j$(r,c,u,f,g,x,v,s,o),A=i?m*p:m,$;return o==="channelsFirst"?$=[l,A,T,E]:o==="channelsLast"&&($=[l,T,E,A]),{batchSize:l,dataFormat:o,inHeight:c,inWidth:u,inChannels:p,outHeight:T,outWidth:E,outChannels:A,padInfo:N,strideHeight:f,strideWidth:g,filterHeight:d,filterWidth:h,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:$,filterShape:t}}function uk(e,t,n,a,r,s=!1,i="channelsLast",o){let[l,c,u,p,d]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,c,u,p,d]=e;else if(i==="channelsFirst")[l,d,c,u,p]=e;else throw new Error(`Unknown dataFormat ${i}`);let[h,m,f,,g]=t,[y,b,x]=Gy(n),[v,N,T]=Gy(a),E=ql(h,v),A=ql(m,N),$=ql(f,T),{padInfo:O,outDepth:V,outHeight:W,outWidth:H}=q$(r,c,u,p,y,b,x,E,A,$,o),X=s?g*d:g,q;return i==="channelsFirst"?q=[l,X,V,W,H]:i==="channelsLast"&&(q=[l,V,W,H,X]),{batchSize:l,dataFormat:i,inDepth:c,inHeight:u,inWidth:p,inChannels:d,outDepth:V,outHeight:W,outWidth:H,outChannels:X,padInfo:O,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:h,filterHeight:m,filterWidth:f,effectiveFilterDepth:E,effectiveFilterHeight:A,effectiveFilterWidth:$,dilationDepth:v,dilationHeight:N,dilationWidth:T,inShape:e,outShape:q,filterShape:t}}function K$(e,t,n,a,r){a==null&&(a=Hy(e,t,n));let s=e[0],i=e[1],o=Di((s-t+2*a)/n+1,r),l=Di((i-t+2*a)/n+1,r);return[o,l]}function X$(e,t,n,a,r,s){r==null&&(r=Hy(e,t,a));let i=e[0],o=e[1],l=e[2],c=Di((i-t+2*r)/a+1,s),u=Di((o-t+2*r)/a+1,s),p=Di((l-t+2*r)/a+1,s);return[c,u,p,n]}function Hy(e,t,n,a=1){let r=ql(t,a);return Math.floor((e[0]*(n-1)-n+r)/2)}function _h(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function Gy(e){return typeof e=="number"?[e,e,e]:e}function ql(e,t){return t<=1?e:e+(e-1)*(t-1)}function j$(e,t,n,a,r,s,i,o,l){let c,u,p;if(typeof e=="number"){c={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let d=K$([t,n],s,a,e,o);u=d[0],p=d[1]}else if(e==="same"){u=Math.ceil(t/a),p=Math.ceil(n/r);let d=Math.max(0,(u-1)*a+s-t),h=Math.max(0,(p-1)*r+i-n),m=Math.floor(d/2),f=d-m,g=Math.floor(h/2),y=h-g;c={top:m,bottom:f,left:g,right:y,type:"SAME"}}else if(e==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-s+1)/a),p=Math.ceil((n-i+1)/r);else if(typeof e=="object"){let d=l==="channelsLast"?e[1][0]:e[2][0],h=l==="channelsLast"?e[1][1]:e[2][1],m=l==="channelsLast"?e[2][0]:e[3][0],f=l==="channelsLast"?e[2][1]:e[3][1];c={top:d,bottom:h,left:m,right:f,type:d===0&&h===0&&m===0&&f===0?"VALID":"EXPLICIT"},u=Di((t-s+d+h)/a+1,o),p=Di((n-i+m+f)/r+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:c,outHeight:u,outWidth:p}}function q$(e,t,n,a,r,s,i,o,l,c,u){let p,d,h,m;if(typeof e=="number"){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let f=X$([t,n,a,1],o,1,r,e,u);d=f[0],h=f[1],m=f[2]}else if(e==="same"){d=Math.ceil(t/r),h=Math.ceil(n/s),m=Math.ceil(a/i);let f=(d-1)*r+o-t,g=(h-1)*s+l-n,y=(m-1)*i+c-a,b=Math.floor(f/2),x=f-b,v=Math.floor(g/2),N=g-v,T=Math.floor(y/2),E=y-T;p={top:v,bottom:N,left:T,right:E,front:b,back:x,type:"SAME"}}else if(e==="valid")p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/r),h=Math.ceil((n-l+1)/s),m=Math.ceil((a-c+1)/i);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outDepth:d,outHeight:h,outWidth:m}}function Di(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function as(e){let[t,n,a]=_h(e);return t===1&&n===1&&a===1}function $n(e,t){return as(e)||as(t)}function ok(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Y$(e,t){let n={x:C(e,"x","reshape","string_or_numeric")},a={shape:t};return P.runKernel(Nl,n,a)}var j=R({reshape_:Y$});function J$(e,t,n,a,r){let s=C(e,"x","avgPool","float32"),i=1;F($n(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let o=s,l=!1;s.rank===3&&(l=!0,o=j(s,[1,s.shape[0],s.shape[1],s.shape[2]])),F(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),r!=null&&F(qt(a),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${a}.`);let c={x:o},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r},p=P.runKernel(Os,c,u);return p=pe(p,s.dtype),l?j(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Zn=R({avgPool_:J$});function Z$(e,t,n,a,r,s="NDHWC",i){i==null?i=[1,1,1]:Pt("dilations is deprecated, this field will be gone in v3.0.0.");let o=C(e,"x","avgPool3d","float32"),l=o,c=!1;o.rank===4&&(c=!0,l=j(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(l.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`),F(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),F($n(n,i),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),r!=null&&F(qt(a),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${a}.`);let u={x:l},p={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s,dilations:i},d=P.runKernel(hc,u,p);return d=pe(d,l.dtype),c?j(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var jy=R({avgPool3d_:Z$});function Q$(e,t=0){F(e.length>=1,()=>"Pass at least one tensor to concat");let n=Pc(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),n.length===1)return es(n[0]);let a=n,r={axis:t};return P.runKernel(qo,a,r)}var Ze=R({concat_:Q$});function eD(e){let t={x:C(e,"x","sigmoid")};return P.runKernel(yi,t)}var da=R({sigmoid_:eD});function tD(e,t,n){let a=C(e,"x","slice","string_or_numeric");if(a.rank===0)throw new Error("Slicing scalar is not possible");let r={x:a},s={begin:t,size:n};return P.runKernel(El,r,s)}var We=R({slice_:tD});function nD(e){let t={x:C(e,"x","tanh")};return P.runKernel(Ii,t)}var Kl=R({tanh_:nD});function aD(e,t,n,a,r,s){let i=C(e,"forgetBias","basicLSTMCell"),o=C(t,"lstmKernel","basicLSTMCell"),l=C(n,"lstmBias","basicLSTMCell"),c=C(a,"data","basicLSTMCell"),u=C(r,"c","basicLSTMCell"),p=C(s,"h","basicLSTMCell"),d=Ze([c,p],1),h=ze(d,o),m=Z(h,l),f=m.shape[0],g=m.shape[1]/4,y=[f,g],b=We(m,[0,0],y),x=We(m,[0,g],y),v=We(m,[0,g*2],y),N=We(m,[0,g*3],y),T=Z(L(da(b),Kl(x)),L(u,da(Z(i,v)))),E=L(Kl(T),da(N));return[T,E]}var rD=R({basicLSTMCell_:aD});function sD(e,t,n){let a=C(e,"x","batchToSpaceND"),r=t.reduce((o,l)=>o*l);F(a.rank>=1+t.length,()=>`input rank is ${a.rank} but should be > than blockShape.length ${t.length}`),F(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),F(a.shape[0]%r==0,()=>`input tensor batch is ${a.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);let s={x:a},i={blockShape:t,crops:n};return P.runKernel(mc,s,i)}var Wc=R({batchToSpaceND_:sD});function iD(e){let t;return e.rank===0||e.rank===1?t=j(e,[1,1,1,e.size]):e.rank===2?t=j(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=j(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function oD(e,t,n,a,r,s){s==null&&(s=.001);let i=C(e,"x","batchNorm"),o=C(t,"mean","batchNorm"),l=C(n,"variance","batchNorm"),c;r!=null&&(c=C(r,"scale","batchNorm"));let u;a!=null&&(u=C(a,"offset","batchNorm")),F(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(c==null||o.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let p={x:iD(i),scale:c,offset:u,mean:o,variance:l},d={varianceEpsilon:s},h=P.runKernel(Xs,p,d);return j(h,i.shape)}var wr=R({batchNorm_:oD});function lD(e,t,n,a,r,s){let i=C(e,"x","batchNorm"),o=C(t,"mean","batchNorm"),l=C(n,"variance","batchNorm"),c;r!=null&&(c=C(r,"scale","batchNorm"));let u;return a!=null&&(u=C(a,"offset","batchNorm")),F(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),F(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),F(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&F(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&F(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),wr(i,o,l,u,c,s)}var ck=R({batchNorm2d_:lD});function uD(e,t,n,a,r,s){let i=C(e,"x","batchNorm"),o=C(t,"mean","batchNorm"),l=C(n,"variance","batchNorm"),c;r!=null&&(c=C(r,"scale","batchNorm"));let u;return a!=null&&(u=C(a,"offset","batchNorm")),F(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),F(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),F(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&F(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&F(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),wr(i,o,l,u,c,s)}var pk=R({batchNorm3d_:uD});function cD(e,t,n,a,r,s){let i=C(e,"x","batchNorm"),o=C(t,"mean","batchNorm"),l=C(n,"variance","batchNorm"),c;r!=null&&(c=C(r,"scale","batchNorm"));let u;return a!=null&&(u=C(a,"offset","batchNorm")),F(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),F(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),F(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&F(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&F(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),wr(i,o,l,u,c,s)}var dk=R({batchNorm4d_:cD});function pD(e,t,n){let a=C(e,"x","bincount"),r=C(t,"weights","bincount");F(a.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${a.dtype}`),F(n>=0,()=>`size must be non-negative, but got ${n}.`),F(r.size===a.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${a.shape}, weights shape: ${r.shape}.`);let s={x:a,weights:r},i={size:n};return P.runKernel(Vd,s,i)}var hk=R({bincount_:pD});function dD(e,t){let n=C(e,"broadcastTo","x"),a=n.shape;if(t.some(l=>!(l>0)||l%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let l=n.shape.slice();for(;l.length<t.length;)l.unshift(1);n=j(n,l)}let r=n.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(r[l]===t[l])s[l]=1;else if(n.shape[l]!==1)throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${t}].`);if(s.map((l,c)=>l>1?c:-1).filter(l=>l>=0).length===0)return es(n);let i={x:n},o={reps:s};return P.runKernel(Xr,i,o)}var Vc=R({broadcastTo_:dD});function hD(e){let t={x:C(e,"x","ceil")};return P.runKernel(jo,t)}var qy=R({ceil_:hD});function mD(e,t,n){let a=C(e,"x","clipByValue");F(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);let r={x:a},s={clipValueMin:t,clipValueMax:n};return P.runKernel(Kr,r,s)}var Yt=R({clipByValue_:mD});function fD(e){return Ze(e,0)}var mk=R({concat1d_:fD});function gD(e,t){return Ze(e,t)}var fk=R({concat2d_:gD});function yD(e,t){return Ze(e,t)}var gk=R({concat3d_:yD});function bD(e,t){return Ze(e,t)}var yk=R({concat4d_:bD});function xD(e,t,n,a,r="NHWC",s=[1,1],i){let o=C(e,"x","conv2d"),l=C(t,"filter","conv2d"),c=o,u=!1;o.rank===3&&(u=!0,c=j(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),F(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),i!=null&&F(qt(a),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);let p=r==="NHWC"?c.shape[3]:c.shape[1];F(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),F($n(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);let d={x:c,filter:l},h={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i},m=P.runKernel(Bs,d,h);return u?j(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var $t=R({conv2d_:xD});function vD(e,t,n,a,r="NWC",s=1,i){let o=C(e,"x","conv1d"),l=C(t,"filter","conv1d"),c=o,u=!1;o.rank===2&&(u=!0,c=j(o,[1,o.shape[0],o.shape[1]])),F(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),F(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),i!=null&&F(qt(a),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`),F(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),F($n(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),F(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let p=j(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=j(c,[c.shape[0],1,c.shape[1],c.shape[2]]),h=$t(d,p,[1,n],a,"NHWC",[1,s],i);return u?j(h,[h.shape[2],h.shape[3]]):j(h,[h.shape[0],h.shape[2],h.shape[3]])}var Fh=R({conv1d_:vD});function wD(e,t,n,a,r,s="NHWC",i){F(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,c=!1;t.rank===3&&(c=!0,l=j(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),F(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),F(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),F(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let u=s==="NHWC"?o[3]:o[1],p=s==="NHWC"?l.shape[3]:l.shape[1];F(u===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[2]}.`),F(p===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`),i!=null&&F(qt(r),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);let d={dy:l,filter:n},h={strides:a,pad:r,dataFormat:s,dimRoundingMode:i,inputShape:o},m=P.runKernel(Ws,d,h);return c?j(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Ky=R({conv2DBackpropInput_:wD});function kD(e,t,n,a,r,s){let i=C(e,"x","conv2dTranspose"),o=C(t,"filter","conv2dTranspose");return Ky(n,i,o,a,r,"NHWC",s)}var Ah=R({conv2dTranspose_:kD});function ID(e,t,n,a,r="NDHWC",s=[1,1,1]){let i=C(e,"x","conv3d"),o=C(t,"filter","conv3d"),l=i,c=!1;i.rank===4&&(c=!0,l=j(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),F(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),F(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),F($n(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),F(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);let u={x:l,filter:o},p={strides:n,pad:a,dataFormat:r,dilations:s},d=P.runKernel(gc,u,p);return c?j(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var Xy=R({conv3d_:ID});function ND(e,t,n,a,r){F(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;t.rank===4&&(o=!0,i=j(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],c=i.shape[4];F(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),F(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),F(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),F(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),F(c===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`);let u={dy:i,filter:n},p={pad:r,strides:a,inputShape:s},d=P.runKernel(jd,u,p);return o?j(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var bk=R({conv3DBackpropInput_:ND});function TD(e,t,n,a,r){let s=C(e,"x","conv3dTranspose"),i=C(t,"filter","conv3dTranspose");return bk(n,s,i,a,r)}var SD=R({conv3dTranspose_:TD});function CD(e){let t={x:C(e,"x","cos")};return P.runKernel(Vs,t)}var Uc=R({cos_:CD});function ED(e){let t={x:C(e,"x","cosh")};return P.runKernel(Ko,t)}var $h=R({cosh_:ED});function _D(e,t=0,n=!1,a=!1){let r={x:C(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:a};return P.runKernel(Us,r,s)}var Dh=R({cumsum_:_D});function FD(e,t,n,a=!1){let r=C(e,"x","denseBincount"),s=C(t,"weights","denseBincount");F(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),F(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),F(n>=0,()=>`size must be non-negative, but got ${n}.`),F(s.size===r.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${s.shape}.`);let i={x:r,weights:s},o={size:n,binaryOutput:a};return P.runKernel(qd,i,o)}var xk=R({denseBincount_:FD});function AD(e,t,n="NHWC"){let a=C(e,"x","depthToSpace"),r=n==="NHWC"?a.shape[1]:a.shape[2],s=n==="NHWC"?a.shape[2]:a.shape[3],i=n==="NHWC"?a.shape[3]:a.shape[1];F(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${a.shape}`),F(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${a.shape}`),F(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${a.shape}`);let o={x:a},l={blockSize:t,dataFormat:n};return P.runKernel(Yo,o,l)}var Yy=R({depthToSpace_:AD});function $D(e,t,n,a,r="NHWC",s=[1,1],i){let o=C(e,"x","depthwiseConv2d"),l=C(t,"filter","depthwiseConv2d"),c=o,u=!1;o.rank===3&&(u=!0,c=j(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),F(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),F(c.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),i!=null&&F(qt(a),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);let p={x:c,filter:l},d={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i},h=P.runKernel(Gs,p,d);return u?j(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var kr=R({depthwiseConv2d_:$D});function DD(e){let t={x:C(e,"x","diag")};return P.runKernel(Yd,t)}var MD=R({diag_:DD});function RD(e,t,n,a,r=[1,1],s="NHWC"){let i=C(e,"x","dilation2d"),o=C(t,"filter","dilation2d");F(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),F(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),F(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,c=!1;i.rank===3&&(l=j(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0);let u={x:l,filter:o},p={strides:n,pad:a,dilations:r},d=P.runKernel(yc,u,p);return c?j(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Jy=R({dilation2d_:RD});function PD(e,t){let n=e.length,a=[];for(let r=0;r<n;r++){let s=n-1-r,i=e[s]||1;(t[t.length-1-r]||1)>1&&i===1&&a.unshift(s)}return a}function Vt(e,t){let n=[];for(let a=0;a<t.length;a++){let r=e[e.length-a-1],s=t.length-a-1,i=t[s];(r==null||r===1&&i>1)&&n.unshift(s)}return n}function vt(e,t){let n=[],a=Math.max(e.length,t.length);for(let r=0;r<a;r++){let s=e[e.length-r-1];s==null&&(s=1);let i=t[t.length-r-1];if(i==null&&(i=1),s===1)n.unshift(i);else if(i===1)n.unshift(s);else if(s!==i){let o=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(o)}else n.unshift(s)}return n}function OD(e,t){let n=C(e,"a","equal"),a=C(t,"b","equal");[n,a]=Tt(n,a),vt(n.shape,a.shape);let r={a:n,b:a};return P.runKernel(Qo,r)}var Ir=R({equal_:OD});function LD(e,t,n){let a=C(t,"a","where"),r=C(n,"b","where"),s=C(e,"condition","where","bool"),i=vt(a.shape,r.shape),o=Vc(a,i),l=Vc(r,i);s.rank===1&&F(s.shape[0]===a.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),s.rank!==1&&rt(s.shape,l.shape,"Error in where: ");let c={condition:s,t:o,e:l};return P.runKernel(Sl,c)}var In=R({where_:LD});function zD(e){let t={x:C(e,"x","zerosLike")};return P.runKernel(Ol,t)}var He=R({zerosLike_:zD});function BD(e,t){let n=C(e,"a","div"),a=C(t,"b","div");[n,a]=Tt(n,a);let r=ve(n,a),s=He(r),i=Ir(a,s);return In(i,s,r)}var Zy=R({divNoNan_:BD});function WD(e,t){let n=C(e,"t1","dot"),a=C(t,"t2","dot");F((n.rank===1||n.rank===2)&&(a.rank===1||a.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${a.rank}.`);let r=n.rank===1?n.size:n.shape[1],s=a.rank===1?a.size:a.shape[0];if(F(r===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${s}.`),n.rank===1&&a.rank===1){let i=j(n,[1,-1]),o=j(a,[-1,1]),l=ze(i,o);return j(l,[])}else if(n.rank===1&&a.rank===2){let i=j(n,[1,-1]),o=j(a,[a.shape[0],a.shape[1]]),l=ze(i,o);return j(l,[l.size])}else if(n.rank===2&&a.rank===1){let i=j(a,[-1,1]),o=ze(n,i);return j(o,[o.size])}else{let i=j(a,[a.shape[0],a.shape[1]]);return ze(n,i)}}var vk=R({dot_:WD});function VD(e){let t={x:C(e,"x","elu")};return P.runKernel(Jo,t)}var Xl=R({elu_:VD});function UD(e){let t=C(e,"x","erf");F(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=pe(t,"float32"));let n={x:t};return P.runKernel(Zo,n)}var Qy=R({erf_:UD});function GD(e){let t={x:C(e,"x","exp")};return P.runKernel(js,t)}var mn=R({exp_:GD});function HD(e,t=0){let n=C(e,"x","expandDims","string_or_numeric");F(t<=n.rank,()=>"Axis must be <= rank of the tensor");let a={input:n},r={dim:t};return P.runKernel(el,a,r)}var Qn=R({expandDims_:HD});function jD(e){let t={x:C(e,"x","expm1")};return P.runKernel(tl,t)}var eb=R({expm1_:jD});function qD(e,t){let n=C(e,"x","tile","string_or_numeric");F(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let a={x:n},r={reps:t};return P.runKernel(Xr,a,r)}var Ka=R({tile_:qD});function KD(e,t,n,a="float32"){t==null&&(t=e);let r=Le([e,t],a),s=e<=t?e:t;for(let o=0;o<s;++o)r.set(1,o,o);let i=j(r.toTensor(),[e,t]);if(n==null)return i;if(n.length===1)return Ka(Qn(i,0),[n[0],1,1]);if(n.length===2)return Ka(Qn(Qn(i,0),0),[n[0],n[1],1,1]);if(n.length===3)return Ka(Qn(Qn(Qn(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var tb=R({eye_:KD});function Nn(e,t,n){let a={shape:e,value:t,dtype:n};return P.runKernel(bc,{},a)}function XD(e){let t={x:C(e,"x","floor")};return P.runKernel(qs,t)}var Yl=R({floor_:XD});function YD(e,t,n=0,a=0){let r=C(e,"x","gather"),s=C(t,"indices","gather","int32"),i={x:r,indices:s},o={axis:n,batchDims:a};return P.runKernel(al,i,o)}var Mi=R({gather_:YD});function JD(e,t){let n=C(e,"a","greater"),a=C(t,"b","greater");[n,a]=Tt(n,a),vt(n.shape,a.shape);let r={a:n,b:a};return P.runKernel(sl,r)}var ea=R({greater_:JD});function ZD(e,t){let n=C(e,"a","greaterEqual"),a=C(t,"b","greaterEqual");[n,a]=Tt(n,a),vt(n.shape,a.shape);let r={a:n,b:a};return P.runKernel(Ys,r)}var Nr=R({greaterEqual_:ZD});function QD(e){let t={input:C(e,"input","imag")};return P.runKernel(nh,t)}var Mh=R({imag_:QD});function eM(e){let t={x:C(e,"x","isFinite")};return P.runKernel(ol,t)}var wk=R({isFinite_:eM});function tM(e){let t={x:C(e,"x","isInf")};return P.runKernel(ll,t)}var kk=R({isInf_:tM});function nM(e){let t={x:C(e,"x","isNaN")};return P.runKernel(ul,t)}var Ik=R({isNaN_:nM});function aM(e,t=.2){let n={x:C(e,"x","leakyRelu")},a={alpha:t};return P.runKernel(Js,n,a)}var Gc=R({leakyRelu_:aM});function rM(e,t){let n=C(e,"a","less"),a=C(t,"b","less");[n,a]=Tt(n,a),vt(n.shape,a.shape);let r={a:n,b:a};return P.runKernel(cl,r)}var Hc=R({less_:rM});function sM(e,t){let n=C(e,"a","lessEqual"),a=C(t,"b","lessEqual");[n,a]=Tt(n,a),vt(n.shape,a.shape);let r={a:n,b:a};return P.runKernel(pl,r)}var rs=R({lessEqual_:sM});function Nk(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let a={start:e,stop:t,num:n};return P.runKernel(ah,{},a)}function iM(e,t=5,n=1,a=1,r=.5){let s=C(e,"x","localResponseNormalization");F(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),F(qt(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;s.rank===3&&(o=!0,i=j(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},c={depthRadius:t,bias:n,alpha:a,beta:r},u=P.runKernel(wc,l,c);return o?j(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var nb=R({localResponseNormalization_:iM});function oM(e){let t={x:C(e,"x","log")};return P.runKernel(Zs,t)}var Dn=R({log_:oM});function lM(e){let t={x:C(e,"x","log1p")};return P.runKernel(dl,t)}var Rh=R({log1p_:lM});function uM(e){return F(jr(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let a=C(t,"x","tf.grad","string_or_numeric"),r=n!=null?C(n,"dy","tf.grad"):null;return P.tidy(()=>{let{value:s,grads:i}=P.gradients(()=>e(a),[a],r);return r!=null&&rt(s.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Ph(i),i[0]})}}function cM(e){return F(jr(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{F(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let a=Pc(t,"args","tf.grads","string_or_numeric"),r=n!=null?C(n,"dy","tf.grads"):null;return P.tidy(()=>{let{value:s,grads:i}=P.gradients(()=>e(...a),a,r);return r!=null&&rt(s.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Ph(i),i})}}function pM(e){return F(jr(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{F(t instanceof z,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),F(n==null||n instanceof z,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:a,value:r}=P.gradients(()=>e(t),[t],n);return Ph(a),{grad:a[0],value:r}}}function dM(e){return F(jr(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{F(Array.isArray(t)&&t.every(r=>r instanceof z),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),F(n==null||n instanceof z,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let a=P.gradients(()=>e(...t),t,n);return n!=null&&rt(a.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Ph(a.grads),a}}function Tk(e,t){F(jr(e),()=>"The f passed in variableGrads(f) must be a function"),F(t==null||Array.isArray(t)&&t.every(c=>c instanceof Yr),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let c in P.registeredVariables)t.push(P.registeredVariables[c])}let a=n?t.filter(c=>!c.trainable):null,r=t.length;t=t.filter(c=>c.trainable),F(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let s=!0,{value:i,grads:o}=P.gradients(e,t,null,s);F(o.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),F(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return t.forEach((c,u)=>{o[u]!=null&&(l[c.name]=o[u])}),a!=null&&a.forEach(c=>l[c.name]=null),{value:i,grads:l}}function Xa(e){return P.customGrad(e)}function Ph(e){if(e.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function hM(e){let t={x:C(e,"x","neg")};return P.runKernel(fl,t)}var St=R({neg_:hM});function mM(e){let t={x:C(e,"x","softplus")};return P.runKernel(Al,t)}var Jl=R({softplus_:mM});function fM(e){let t=C(e,"x","logSigmoid");return Xa(n=>({value:St(Jl(St(n))),gradFunc:a=>L(a,da(St(n)))}))(t)}var Sk=R({logSigmoid_:fM});function gM(e,t=null,n=!1){let a={x:C(e,"x","max")},r={reductionIndices:t,keepDims:n};return P.runKernel(Qs,a,r)}var ta=R({max_:gM});function yM(e,t){let n=C(e,"a","sub"),a=C(t,"b","sub");[n,a]=Tt(n,a);let r={a:n,b:a};return P.runKernel(ki,r)}var fe=R({sub_:yM});function bM(e,t=null,n=!1){let a=C(e,"x","sum");a.dtype==="bool"&&(a=pe(a,"int32"));let r={x:a},s={axis:t,keepDims:n};return P.runKernel(xi,r,s)}var Ce=R({sum_:bM});function xM(e,t=-1){let n=C(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Xa((a,r)=>{let s=!0,i=ta(a,t,!0),o=fe(a,i),l=fe(pe(o,"float32"),Dn(Ce(mn(o),t,s)));return r([l]),{value:l,gradFunc:(c,u)=>{let[p]=u,d=!0,h=mn(p);return fe(c,L(Ce(c,t,d),h))}}})(n)}var Oh=R({logSoftmax_:xM});function ab(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Ck(e,t,n){let a=e.length+t.length,r=[],s=0,i=0;for(let o=0;o<a;o++)n.indexOf(o)===-1?r.push(e[s++]):r.push(t[i++]);return r}function Ek(e,t){let n=[],a=e.length;for(let s=0;s<a;s++)t.indexOf(s)===-1&&n.push(e[s]);let r=t.map(s=>e[s]);return[n,r]}function Ri(e,t){let n=t.map(a=>1);return Ck(e,n,t)}function vM(e,t,n){F(ab(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function _k(e,t){if(ab(e,t))return null;let n=[];for(let a=0;a<t;++a)e.indexOf(a)===-1&&n.push(a);return e.forEach(a=>n.push(a)),n}function rb(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function wM(e,t){let n=[];for(let a=t-e;a<t;++a)n.push(a);return n}function kM(e,t=null,n=!1){let a=C(e,"x","logSumExp"),r=ca(t,a.shape),s=ta(a,r,!0),i=fe(a,s),o=mn(i),l=Ce(o,r),c=Dn(l),u=Z(j(s,c.shape),c);if(n){let p=Ri(u.shape,r);return j(u,p)}return u}var sb=R({logSumExp_:kM});function IM(e,t){let n=C(e,"a","logicalAnd","bool"),a=C(t,"b","logicalAnd","bool");vt(n.shape,a.shape);let r={a:n,b:a};return P.runKernel(hl,r)}var ha=R({logicalAnd_:IM});function NM(e){let t={x:C(e,"x","logicalNot","bool")};return P.runKernel(xc,t)}var jc=R({logicalNot_:NM});function TM(e,t){let n=C(e,"a","logicalOr","bool"),a=C(t,"b","logicalOr","bool");vt(n.shape,a.shape);let r={a:n,b:a};return P.runKernel(vc,r)}var Lh=R({logicalOr_:TM});function SM(e,t){let n=C(e,"a","logicalXor","bool"),a=C(t,"b","logicalXor","bool");return vt(n.shape,a.shape),ha(Lh(e,t),jc(ha(e,t)))}var Fk=R({logicalXor_:SM});function CM(e,t,n,a,r){let s=C(e,"x","maxPool"),i=1,o=s,l=!1;s.rank===3&&(l=!0,o=j(s,[1,s.shape[0],s.shape[1],s.shape[2]])),F(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),F($n(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),r!=null&&F(qt(a),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${a}.`);let c={x:o},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r},p=P.runKernel(ti,c,u);return l?j(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Dt=R({maxPool_:CM});function EM(e,t=[1,1,1],n,a,r,s="NDHWC",i){i==null?i=[1,1,1]:Pt("dilations is deprecated, this field will be gone in v3.0.0.");let o=C(e,"x","maxPool3d"),l=o,c=!1;o.rank===4&&(c=!0,l=j(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(l.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`),F(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),F($n(n,i),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),r!=null&&F(qt(a),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${a}.`);let u={x:l},p={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s,dilations:i},d=P.runKernel(kc,u,p);return c?j(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var ib=R({maxPool3d_:EM});function _M(e,t,n,a,r=!1){let s={x:C(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},o=P.runKernel(oh,s,i);return{result:o[0],indexes:o[1]}}var Ak=R({maxPoolWithArgmax_:_M});function FM(e,t){let n=C(e,"a","maximum"),a=C(t,"b","maximum");[n,a]=Tt(n,a),n.dtype==="bool"&&(n=pe(n,"int32"),a=pe(a,"int32")),vt(n.shape,a.shape);let r={a:n,b:a};return P.runKernel(ei,r)}var Sa=R({maximum_:FM});function AM(e,t=null,n=!1){let a={x:C(e,"x","mean")},r={axis:t,keepDims:n};return P.runKernel(ni,a,r)}var Ct=R({mean_:AM});function $M(e,t=null,n=!1){let a={x:C(e,"x","min")},r={axis:t,keepDims:n};return P.runKernel(ai,a,r)}var Zl=R({min_:$M});function DM(e,t){let n=C(e,"a","minimum"),a=C(t,"b","minimum");[n,a]=Tt(n,a),n.dtype==="bool"&&(n=pe(n,"int32"),a=pe(a,"int32")),vt(n.shape,a.shape);let r={a:n,b:a};return P.runKernel(ri,r)}var Pi=R({minimum_:DM});function MM(e,t,n){F(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let a=C(e,"x","mirrorPad");if(a.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");F(t.length===a.rank,()=>`Padding doesn't match input. Must be ${a.rank}. Got ${t.length}.`);let r=n==="reflect"?1:0;for(let o=0;o<a.rank;o++)F(t[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),F(t[o][0]>=0&&t[o][0]<=a.shape[o]-r&&t[o][1]>=0&&t[o][1]<=a.shape[o]-r,()=>`Padding in dimension ${o} cannot be greater than or equal to ${a.shape[o]-r} or less than 0 for input of shape ${a.shape}`);let s={paddings:t,mode:n},i={x:a};return P.runKernel(Ic,i,s)}var ob=R({mirrorPad_:MM});function RM(e,t){let n=C(e,"a","mod"),a=C(t,"b","mod");[n,a]=Tt(n,a);let r={a:n,b:a};return P.runKernel(ml,r)}var zh=R({mod_:RM});function PM(e){let t=C(e,"x","square"),n={};return P.runKernel("Square",{x:t},n)}var lt=R({square_:PM});function OM(e,t=null,n=!1){e=C(e,"x","moments");let a=ca(t,e.shape),r=Ct(e,a,n),s=r.shape;n||(s=Ri(r.shape,a));let i=lt(fe(pe(e,"float32"),j(r,s))),o=Ct(i,a,n);return{mean:r,variance:o}}var Bh=R({moments_:OM});function LM(e,t,n,a){let r=C(t,"data","multiRNNCell"),s=Pc(n,"c","multiRNNCell"),i=Pc(a,"h","multiRNNCell"),o=r,l=[];for(let p=0;p<e.length;p++){let d=e[p](o,s[p],i[p]);l.push(d[0]),l.push(d[1]),o=d[1]}let c=[],u=[];for(let p=0;p<l.length;p+=2)c.push(l[p]),u.push(l[p+1]);return[c,u]}var zM=R({multiRNNCell_:LM});function BM(e,t,n,a=!1){let r=C(e,"logits","multinomial"),s=r.size,i=r.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:i===1?j(r,[1,-1]):r},l={numSamples:t,seed:n,normalized:a},c=P.runKernel(lh,o,l);return i===1?j(c,[c.size]):c}var $k=R({multinomial_:BM});function WM(e,t){let n=C(e,"a","notEqual"),a=C(t,"b","notEqual");[n,a]=Tt(n,a),vt(n.shape,a.shape);let r={a:n,b:a};return P.runKernel(gl,r)}var ss=R({notEqual_:WM});function bt(e,t="float32"){if(t==="complex64"){let a=bt(e,"float32"),r=bt(e,"float32");return Jr(a,r)}let n=Od(zt(e),t);return P.makeTensor(n,e,t)}function Ya(e,t="float32"){if(t==="complex64"){let a=Ya(e,"float32"),r=bt(e,"float32");return Jr(a,r)}let n=ny(zt(e),t);return P.makeTensor(n,e,t)}function VM(e){let t={x:C(e,"x","onesLike")};return P.runKernel(vl,t)}var Mn=R({onesLike_:VM});function UM(e,t){let n=C(e,"v1","outerProduct"),a=C(t,"v2","outerProduct");F(n.rank===1&&a.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${a.rank}.`);let r=j(n,[-1,1]),s=j(a,[1,-1]);return ze(r,s)}var GM=R({outerProduct_:UM});function HM(e,t,n=0){let a=C(e,"x","pad");if(a.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},s={x:a};return P.runKernel(oi,s,r)}var na=R({pad_:HM});function jM(e,t,n=0){return F(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),na(e,[t],n)}var qM=R({pad1d_:jM});function KM(e,t,n=0){return F(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),na(e,t,n)}var XM=R({pad2d_:KM});function YM(e,t,n=0){return F(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),na(e,t,n)}var JM=R({pad3d_:YM});function ZM(e,t,n=0){return F(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),na(e,t,n)}var QM=R({pad4d_:ZM});function eR(e,t,n){let a=C(e,"x","spaceToBatchND");F(a.rank>=1+t.length,()=>`input rank ${a.rank} should be > than [blockShape] ${t.length}`),F(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),F(a.shape.reduce((i,o,l)=>l>0&&l<=t.length?i&&(o+n[l-1][0]+n[l-1][1])%t[l-1]==0:i,!0),()=>`input spatial dimensions ${a.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let r={x:a},s={blockShape:t,paddings:n};return P.runKernel(Sc,r,s)}var qc=R({spaceToBatchND_:eR});function aR(e,t,n,a,r,s){r==null&&(r=[1,1]),s==null&&(s=1),a===0&&(a="valid");let i=C(e,"x","maxPool"),o=i,l=!1;i.rank===3&&(l=!0,o=j(i,[1,i.shape[0],i.shape[1],i.shape[2]])),F($n(s,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${r}'`);let c=lk(o.shape,t,s,r,a),u=[c.dilationHeight,c.dilationWidth],p;a==="same"?p=nR([c.filterHeight,c.filterWidth],u):p=[[0,0],[0,0]];let d=u[0]===1&&u[1]===1,[h,m]=tR([c.inHeight,c.inWidth],u,p),f=d?a:"valid",g=d?o:qc(o,u,h),y=(n==="avg"?()=>Zn(g,t,s,f):()=>Dt(g,t,s,f))(),b=d?y:Wc(y,u,m);return l?j(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function tR(e,t,n){let a=n.map(u=>u[0]),r=n.map(u=>u[1]),s=e.concat(a,r),i=t.map((u,p)=>(u-s[p]%u)%u),o=r.map((u,p)=>u+i[p]),l=t.map((u,p)=>[a[p],o[p]]),c=t.map((u,p)=>[0,i[p]]);return[l,c]}function nR(e,t){let n=e.map((s,i)=>s+(s-1)*(t[i]-1)).map(s=>s-1),a=n.map(s=>Math.floor(s/2)),r=n.map((s,i)=>s-a[i]);return n.map((s,i)=>[a[i],r[i]])}var Dk=R({pool_:aR});function rR(e,t){let n=C(e,"base","pow"),a=C(t,"exp","pow");[n,a]=Tt(n,a);let r={a:n,b:a};return P.runKernel(li,r)}var Ja=R({pow_:rR});function sR(e,t){let n=C(e,"x","prelu"),a=C(t,"alpha","prelu"),r={x:n,alpha:a};return P.runKernel(ui,r)}var Kc=R({prelu_:sR});function iR(e,t=null,n=!1){let a=C(e,"x","prod");a.dtype==="bool"&&(a=pe(a,"int32"));let r={x:a},s={axis:t,keepDims:n};return P.runKernel(kl,r,s)}var Wh=R({prod_:iR});function oR(e,t,n){let a=zt(e),r=null;if(n==null||n==="float32")r=new Float32Array(a);else if(n==="int32")r=new Int32Array(a);else if(n==="bool")r=new Uint8Array(a);else throw new Error(`Unknown data type ${n}`);for(let s=0;s<a;s++)r[s]=t();return P.makeTensor(r,e,n)}var lR=R({rand_:oR}),lb=Ro(Dd()),ub=class{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let s=r||Math.random();this.random=lb.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let a=this.nextVal;return this.nextVal=NaN,a}let e,t,n=!1;for(;!n;){let a,r,s;do a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r;while(s>=1||s===0);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*a*i,t=this.mean+this.stdDev*r*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},uR=class{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;let r=a||Math.random();this.randu=lb.alea(r.toString()),this.randn=new ub(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,s;for(;;){do a=this.randn.nextValue(),s=1+this.c*a;while(s<=0);if(s*=s*s,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),r=this.randu(),r<t||Math.log(r)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},cR=class{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,a==null&&(a=Math.random()),typeof a=="number"&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=lb.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function pR(e,t,n=1,a="float32",r){if(n==null&&(n=1),a==null&&(a="float32"),a!=="float32"&&a!=="int32")throw new Error(`Unsupported data type ${a}`);let s=new uR(t,n,a,r),i=Le(e,a);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var dR=R({randomGamma_:pR});function hR(e,t=0,n=1,a,r){if(a!=null&&a==="bool")throw new Error(`Unsupported data type ${a}`);let s=new ub(t,n,a,!1,r),i=Le(e,a);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var Mk=R({randomNormal_:hR});function mR(e,t=0,n=1,a="float32",r){let s=Le(e,a),i=new cR(t,n,null,r);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}var Ql=R({randomUniform_:mR});function Vh(e,t,n=1,a="float32"){if(n===0)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:a};return P.runKernel(Nc,{},r)}function fR(e){let t={input:C(e,"input","real")};return P.runKernel(uh,t)}var Xc=R({real_:fR});function gR(e){let t={x:C(e,"x","reciprocal")};return P.runKernel(Il,t)}var cb=R({reciprocal_:gR});function yR(e){let t={x:C(e,"x","relu")};return P.runKernel(ci,t)}var Xe=R({relu_:yR});function bR(e){let t={x:C(e,"x","relu6")};return P.runKernel(di,t)}var Uh=R({relu6_:bR});function xR(e,t){let n={x:C(e,"x","reverse")},a={dims:t};return P.runKernel(hi,n,a)}var Rn=R({reverse_:xR});function vR(e){let t=C(e,"x","reverse");return F(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Rn(t,0)}var wR=R({reverse1d_:vR});function kR(e,t){let n=C(e,"x","reverse");return F(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Rn(n,t)}var IR=R({reverse2d_:kR});function NR(e,t){let n=C(e,"x","reverse");return F(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Rn(n,t)}var TR=R({reverse3d_:NR});function SR(e,t){let n=C(e,"x","reverse");return F(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Rn(n,t)}var CR=R({reverse4d_:SR});function ER(e){let t={x:C(e,"x","round")};return P.runKernel(mi,t)}var pb=R({round_:ER});function _R(e){let t={x:C(e,"x","rsqrt")};return P.runKernel(fi,t)}var Gh=R({rsqrt_:_R});function de(e,t){if((un(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&un(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Zr(e,[],[],t)}function FR(e){let t={x:C(e,"x","selu")};return P.runKernel(Cl,t)}var Hh=R({selu_:FR});function AR(e,t,n,a,r,s=[1,1],i="NHWC"){let o=C(e,"x","separableConv2d"),l=C(t,"depthwiseFilter","separableConv2d"),c=C(n,"pointwiseFilter","separableConv2d"),u=o,p=!1;if(o.rank===3&&(p=!0,u=j(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");F(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),F(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),F(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),F(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),F(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);let d=l.shape[2],h=l.shape[3];F(c.shape[2]===d*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*h}, but got ${c.shape[2]}.`);let m=kr(u,l,a,r,i,s),f=$t(m,c,1,"valid",i);return p?j(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Oi=R({separableConv2d_:AR});async function $R(e,t){let n=C(e,"x","setdiff1d"),a=C(t,"y","setdiff1d");F(n.dtype===a.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${a.dtype}).`),F(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),F(a.rank===1,()=>`y should be 1D tensor, but got y (${a.shape}).`);let r=await n.data(),s=await a.data(),i=new Set(s),o=0;for(let u=0;u<r.length;u++)i.has(r[u])||o++;let l=new Bt([o],n.dtype),c=new Bt([o],"int32");for(let u=0,p=0;u<r.length;u++)i.has(r[u])||(l.values[p]=r[u],c.values[p]=u,p++);return[l.toTensor(),c.toTensor()]}var Rk=$R;function DR(e){let t={x:C(e,"x","sign")};return P.runKernel(Fl,t)}var db=R({sign_:DR});function MR(e){let t={x:C(e,"x","sin")};return P.runKernel(gi,t)}var jh=R({sin_:MR});function RR(e){let t={x:C(e,"x","sinh")};return P.runKernel(_l,t)}var qh=R({sinh_:RR});function PR(e,t,n){let a=C(e,"x","slice1d");return F(a.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${a.rank} tensor`),We(a,[t],[n])}var Kh=R({slice1d_:PR});function OR(e,t,n){let a=C(e,"x","slice2d");return F(a.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${a.rank} tensor`),We(a,t,n)}var hb=R({slice2d_:OR});function LR(e,t,n){let a=C(e,"x","slice3d");return F(a.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${a.rank} tensor`),We(a,t,n)}var eu=R({slice3d_:LR});function zR(e,t,n){let a=C(e,"x","slice4d");return F(a.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${a.rank} tensor`),We(a,t,n)}var Yc=R({slice4d_:zR});function BR(e,t=-1){let n=C(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let a={logits:n},r={dim:t};return P.runKernel(vi,a,r)}var Ca=R({softmax_:BR});function WR(e){F(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return P.runKernel(eh,t)}var Jc=R({fft_:WR});function VR(e){F(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return P.runKernel(th,t)}var tu=R({ifft_:VR});function UR(e){let t=e.shape[e.shape.length-1],n=e.size/t,a;if(t<=2){let r=j(e,[n,t]);a=tu(r)}else{let r=[n,2*(t-1)],s=j(Xc(e),[n,t]),i=j(Mh(e),[n,t]),o=Rn(We(s,[0,1],[n,t-2]),1),l=L(Rn(We(i,[0,1],[n,t-2]),1),de(-1)),c=Ze([s,o],1),u=Ze([i,l],1),p=j(Jr(c,u),[r[0],r[1]]);a=tu(p)}if(a=Xc(a),e.rank===3&&e.shape[0]!==0){let r=a,s=e.shape[0];a=j(a,[s,a.shape[0]/s,a.shape[1]]),r.dispose()}return a}var Xh=R({irfft_:UR});function GR(e,t,n=0){let a={x:C(e,"x","split")},r={numOrSizeSplits:t,axis:n};return P.runKernel($l,a,r)}var Pn=R({split_:GR});function HR(e,t){F(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],a=e.size/n,r;if(t!=null&&t<n){let m=e.shape.map(g=>0),f=e.shape.map(g=>g);f[e.shape.length-1]=t,r=We(e,m,f),n=t}else if(t!=null&&t>n){let m=e.shape.map(f=>f);m[e.shape.length-1]=t-n,r=Ze([e,bt(m)],e.shape.length-1),n=t}else r=e;let s=He(r),i=j(Jr(r,s),[a,n]),o=Jc(i),l=Math.floor(n/2)+1,c=Xc(o),u=Mh(o),p=Pn(c,[l,n-l],c.shape.length-1),d=Pn(u,[l,n-l],u.shape.length-1),h=r.shape.slice();return h[r.shape.length-1]=l,j(Jr(p[0],d[0]),h)}var Zc=R({rfft_:HR});function jR(e){let t={x:C(e,"x","sqrt")};return P.runKernel(bi,t)}var rn=R({sqrt_:jR});function qR(e,t){let n=C(e,"a","squaredDifference"),a=C(t,"b","squaredDifference");[n,a]=Tt(n,a),vt(n.shape,a.shape);let r={a:n,b:a},s={};return P.runKernel(wi,r,s)}var Qc=R({squaredDifference_:qR});function KR(e,t){let n=C(e,"x","squeeze");return j(n,Jw(n.shape,t).newShape)}var is=R({squeeze_:KR});function XR(e,t=0){let n=Pc(e,"tensors","stack","string_or_numeric");F(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&F(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let a=n,r={axis:t};return P.runKernel(wl,a,r)}var Mt=R({stack_:XR});function YR(e,t=0){let n={x:C(e,"x","step")},a={alpha:t};return P.runKernel(Ll,n,a)}var nu=R({step_:YR});function JR(e,t,n,a,r=0,s=0,i=0,o=0,l=0){let c={x:C(e,"x","stridedSlice")},u={begin:t,end:n,strides:a,beginMask:r,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return P.runKernel(Dl,c,u)}var mb=R({stridedSlice_:JR});function ZR(e){let t={x:C(e,"x","tan")};return P.runKernel(Ml,t)}var fb=R({tan_:ZR});function tt(e,t){Ds(e);let n=qa(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Zr(e,null,n,t)}function Ea(e,t,n){if(Ds(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let a=qa(e,n);if(a.length!==2&&a.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(a.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Zr(e,t,a,n)}function _a(e,t,n){if(Ds(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let a=qa(e,n);if(a.length!==4&&a.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(a.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Zr(e,t,a,n)}function QR(e,t,n){if(Ds(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let a=qa(e,n);if(a.length!==5&&a.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(a.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Zr(e,t,a,n)}function eP(e,t,n){if(Ds(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let a=qa(e,n);if(a.length!==6&&a.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(a.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||a,Zr(e,t,a,n)}function tP(e,t=1,n=!0){let a=C(e,"x","topk");if(a.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let r=a.shape[a.shape.length-1];if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let s={x:a},i={k:t,sorted:n},[o,l]=P.runKernel(Rl,s,i);return{values:o,indices:l}}var gb=R({topk_:tP});function nP(e,t=0,n=1,a,r){if(a!=null&&a==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new ub(t,n,a,!0,r),i=Le(e,a);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var Yh=R({truncatedNormal_:nP});function aP(e,t=0){let n=C(e,"x","unique","string_or_numeric");F(n.rank>0,()=>"The input tensor must be at least 1D");let a={x:n},r={axis:t},[s,i]=P.runKernel(hh,a,r);return{values:s,indices:i}}var Jh=R({unique_:aP});function rP(e,t,n){let a=C(e,"x","unsortedSegmentSum"),r=C(t,"segmentIds","unsortedSegmentSum","int32");F(qt(n),()=>"numSegments must be of dtype int");let s={x:a,segmentIds:r},i={numSegments:n};return P.runKernel(Ec,s,i)}var yb=R({unsortedSegmentSum_:rP});function sP(e,t=0){let n=C(e,"x","unstack","string_or_numeric");F(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let a={value:n},r={axis:t};return P.runKernel(Pl,a,r)}var pt=R({unstack_:sP});function Pk(e,t=!0,n,a){return P.makeVariable(e,t,n,a)}function Ok(e,t){let n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);let a=Le(e,"int32"),r=Le([n.length,e.length],"int32");for(let s=0;s<n.length;s++){let i=a.indexToLoc(n[s]),o=s*e.length;r.values.set(i,o)}return r.toTensor()}async function iP(e){let t=C(e,"condition","whereAsync","bool"),n=await t.data(),a=Ok(t.shape,n);return e!==t&&t.dispose(),a}var bb=iP;async function oP(e,t,n){let a=C(e,"tensor","boolMask"),r=C(t,"mask","boolMask","bool"),s=n==null?0:n,i=r.rank,o=a.shape;F(i>0,()=>"mask cannot be scalar"),rt(o.slice(s,s+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let f=s;f<s+i;f++)l*=o[f];let c=o.slice(0,s).concat([l],o.slice(s+i)),u=j(a,c),p=j(r,[-1]),d=await bb(p),h=is(d,[1]),m=Mi(u,h,s);return e!==a&&a.dispose(),t!==r&&r.dispose(),h.dispose(),u.dispose(),p.dispose(),d.dispose(),m}var lP=oP;function uP(e,t){Pt("strict variants of ops have been deprecated and will be removed in future");let n=C(e,"a","notEqualStrict"),a=C(t,"b","notEqualStrict");return rt(n.shape,a.shape,"Error in notEqualStrict: "),ss(n,a)}function cP(e,t){Pt("strict variants of ops have been deprecated and will be removed in future");let n=C(e,"a","lessStrict"),a=C(t,"b","lessStrict");return rt(n.shape,a.shape,"Error in lessStrict: "),Hc(n,a)}function pP(e,t){Pt("strict variants of ops have been deprecated and will be removed in future");let n=C(e,"a","equalStrict"),a=C(t,"b","equalStrict");return rt(n.shape,a.shape,"Error in equalStrict: "),Ir(n,a)}function dP(e,t){Pt("strict variants of ops have been deprecated and will be removed in future");let n=C(e,"a","lessEqualStrict"),a=C(t,"b","lessEqualStrict");return rt(n.shape,a.shape,"Error in lessEqualStrict: "),rs(n,a)}function hP(e,t){Pt("strict variants of ops have been deprecated and will be removed in future");let n=C(e,"a","greaterStrict"),a=C(t,"b","greaterStrict");return rt(n.shape,a.shape,"Error in greaterStrict: "),ea(n,a)}function mP(e,t){Pt("strict variants of ops have been deprecated and will be removed in future");let n=C(e,"a","greaterEqualStrict"),a=C(t,"b","greaterEqualStrict");return rt(n.shape,a.shape,"Error in greaterEqualStrict: "),Nr(n,a)}var Lk=R({equalStrict_:pP}),zk=R({greaterEqualStrict_:mP}),Bk=R({greaterStrict_:hP}),Wk=R({lessEqualStrict_:dP}),Vk=R({lessStrict_:cP}),Uk=R({notEqualStrict_:uP});function fP(e,t){Pt("strict variants of ops have been deprecated and will be removed in future");let n=C(e,"a","addStrict"),a=C(t,"b","addStrict");return rt(n.shape,a.shape,"Error in addStrict: "),Z(n,a)}function gP(e,t){Pt("strict variants of ops have been deprecated and will be removed in future");let n=C(e,"a","subStrict"),a=C(t,"b","subStrict");return rt(n.shape,a.shape,"Error in subStrict: "),fe(n,a)}function yP(e,t){return Pt("strict variants of ops have been deprecated and will be removed in future"),rt(e.shape,t.shape,"Error in powStrict: "),Ja(e,t)}function bP(e,t){Pt("strict variants of ops have been deprecated and will be removed in future");let n=C(e,"a","mul"),a=C(t,"b","mul");return rt(n.shape,a.shape,"Error in multiplyStrict: "),L(n,a)}function xP(e,t){Pt("strict variants of ops have been deprecated and will be removed in future");let n=C(e,"a","div"),a=C(t,"b","div");return rt(n.shape,a.shape,"Error in divideStrict: "),ve(n,a)}function vP(e,t){Pt("strict variants of ops have been deprecated and will be removed in future");let n=C(e,"a","modStrict"),a=C(t,"b","modStrict");return rt(n.shape,a.shape,"Error in modStrict: "),zh(n,a)}function wP(e,t){Pt("strict variants of ops have been deprecated and will be removed in future");let n=C(e,"a","minimumStrict"),a=C(t,"b","minimumStrict");return rt(n.shape,a.shape,"Error in minimumStrict: "),Pi(n,a)}function kP(e,t){Pt("strict variants of ops have been deprecated and will be removed in future");let n=C(e,"a","maximumStrict"),a=C(t,"b","maximumStrict");return rt(n.shape,a.shape,"Error in maximumStrict: "),Sa(n,a)}function IP(e,t){Pt("strict variants of ops have been deprecated and will be removed in future");let n=C(e,"a","squaredDifferenceStrict"),a=C(t,"b","squaredDifferenceStrict");return rt(n.shape,a.shape,"Error in squaredDifferenceStrict: "),Qc(n,a)}var Gk=R({addStrict_:fP}),Hk=R({divStrict_:xP}),jk=R({maximumStrict_:kP}),qk=R({minimumStrict_:wP}),Kk=R({modStrict_:vP}),Xk=R({mulStrict_:bP}),Yk=R({powStrict_:yP}),Jk=R({squaredDifferenceStrict_:IP}),Zk=R({subStrict_:gP});function NP(e,t="euclidean",n=null,a=!1){e=C(e,"x","norm");let r=Qk(e,t,n),s=r.shape;if(a){let i=ca(n,e.shape);s=Ri(r.shape,i)}return j(r,s)}function Qk(e,t,n=null){if(e.rank===0)return Wt(e);if(e.rank!==1&&n===null)return Qk(j(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return Ce(Wt(e),n);if(t===Infinity)return ta(Wt(e),n);if(t===-Infinity)return Zl(Wt(e),n);if(t==="euclidean"||t===2)return rn(Ce(Ja(Wt(e),de(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return ta(Ce(Wt(e),n[0]),n[1]-1);if(t===Infinity)return ta(Ce(Wt(e),n[1]),n[0]);if(t===-Infinity)return Zl(Ce(Wt(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return rn(Ce(lt(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var Zh=R({norm_:NP});function TP(e,t,n,a,r=!0){let s=C(e,"v","movingAverage"),i=C(t,"x","movingAverage"),o=C(n,"decay","movingAverage");y0(s,i),F(xr(s.shape,i.shape),()=>"Shape mismatch in v and x");let l=de(1),c=fe(l,o),u=L(fe(i,s),c);if(r){F(a!=null,()=>"When using zeroDebias: true, step is required.");let p=C(a,"step","movingAverage");u=ve(u,fe(l,Ja(o,p)))}return Z(s,u)}var SP=R({movingAverage_:TP});function CP(e,t,n){let a=C(e,"indices","scatterND","int32"),r=C(t,"updates","scatterND");$y(r,a,n);let s={indices:a,updates:r},i={shape:n};return P.runKernel(Tl,s,i)}var e1=R({scatterND_:CP});function EP(e,t,n,a){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function _P(e,t,n,a=0){let r=C(e,"sparseIndices","sparseToDense","int32"),s=C(t,"sparseValues","sparseToDense"),i=C(a,"defaultValue","sparseToDense",s.dtype);EP(r,s,n,i);let o={sparseIndices:r,sparseValues:s,defaultValue:i},l={outputShape:n};return P.runKernel(dh,o,l)}var xb=R({sparseToDense_:_P});function FP(e,t){let n=C(t,"indices","gatherND","int32"),a={params:C(e,"x","gatherND"),indices:n};return P.runKernel(rl,a)}var t1=R({gatherND_:FP});function AP(e,t){if(t==null)return e.shape.slice();if(xr(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let a=0;a<e.shape.length;a++)t[a]==null&&e.shape[a]!=null?n.push(e.shape[a]):n.push(t[a]);return n}return t}function $P(e,t,n,a){let r=C(e,"x","dropout");if(F(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),F(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof z?r.clone():r;let s=AP(r,n),i=1-t,o=ve(Yl(Z(Ql(s,0,1,"float32",a),i)),i);return L(r,o)}var n1=R({dropout_:$P});function a1(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function vb(e,t,n){let a=1-e%2,r=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+a-1);r[s]=t-n*Math.cos(i)}return tt(r,"float32")}async function DP(e,t,n=1){let a=C(e,"predictions","inTopK"),r=C(t,"targets","inTopK");F(a.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${a.rank}`),F(a.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${a.rank} and targets rank ${r.rank}`),rt(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=a.shape[a.shape.length-1];F(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);let i=await a.data(),o=await r.data(),[l,c]=[i.length/s,s],u=Zw("bool",l);for(let p=0;p<l;p++){let d=p*c,h=i.subarray(d,d+c),m=[];for(let f=0;f<h.length;f++)m.push({value:h[f],index:f});m.sort((f,g)=>g.value-f.value),u[p]=0;for(let f=0;f<n;f++)if(m[f].index===o[p]){u[p]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),Yn(u,r.shape,"bool")}var MP=DP,os={};Oe(os,{conv2d:()=>RP,depthwiseConv2d:()=>PP,matMul:()=>OP});function LP(e,t,n,a,r,s="NHWC",i){let o=e;e.rank===3&&(o=j(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=j(t,[1,t.shape[0],t.shape[1],t.shape[2]])),F(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),F(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),F(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let c=s==="NHWC"?o.shape[3]:o.shape[1],u=s==="NHWC"?l.shape[3]:l.shape[1];F(c===n[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`),F(u===n[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${n[3]}).`),i!=null&&F(qt(r),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);let p={x:o,dy:l},d={strides:a,pad:r,dataFormat:s,dimRoundingMode:i,filterShape:n};return P.runKernel(Gd,p,d)}var wb=R({conv2DBackpropFilter_:LP});function Qh(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return L(e,nu(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function em(e,t){let n=t,a=Vt(e.shape,t.shape);return a.length>0&&(n=Ce(n,a)),j(n,e.shape)}function tm(e,t,n,a){if(t==="linear")return e;if(t==="relu")return Xe(e);if(t==="elu")return Xl(e);if(t==="relu6")return Uh(e);if(t==="prelu")return Kc(e,n);if(t==="leakyrelu")return Gc(e,a);throw new Error(`Unknown fused activation ${t}.`)}var nm=(e,t)=>!(e>0)||t==="linear";function zP({x:e,filter:t,strides:n,pad:a,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",nm(P.state.gradientDepth,l)===!1){let N=$t(e,t,n,a,r,s,i);return o!=null&&(N=Z(N,o)),tm(N,l,c,u)}let p=C(e,"x","conv2d"),d=C(t,"filter","conv2d"),h=p,m=!1;p.rank===3&&(m=!0,h=j(p,[1,p.shape[0],p.shape[1],p.shape[2]])),F(h.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),F(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),i!=null&&F(qt(a),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`),F(h.shape[3]===d.shape[2],()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${d.shape[2]}.`),F($n(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),F(r==="NHWC",()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`);let f=Bc(h.shape,d.shape,n,s,a,i),g;o!=null&&(g=C(o,"bias","fused conv2d"),[g]=Tt(g,p),vt(f.outShape,g.shape));let y;c!=null&&(y=C(c,"prelu weights","fused conv2d"));let b=(N,T)=>{let[E,A,$,O]=T,V=Qh(N,$,l);F(as(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let W=Ky(A.shape,V,E,n,a),H=wb(A,V,E.shape,n,a),X=[W,H];if(O!=null){let q=em(O,V);X.push(q)}return X},x={x:h,filter:d,bias:g,preluActivationWeights:y},v={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:u};return o==null?Xa((N,T,E)=>{let A=P.runKernel(Si,x,v);return E([T,N,A]),m&&(A=j(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:b}})(h,d):Xa((N,T,E,A)=>{let $=P.runKernel(Si,x,v);return A([T,N,$,E]),m&&($=j($,[$.shape[1],$.shape[2],$.shape[3]])),{value:$,gradFunc:b}})(h,d,g)}var RP=R({fusedConv2d_:zP});function BP(e,t,n,a,r,s=[1,1],i){let o=e;e.rank===3&&(o=j(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=j(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={x:o,dy:l},u={strides:a,pad:r,dimRoundingMode:i,dilations:s,filterShape:n};return P.runKernel(Kd,c,u)}var r1=R({depthwiseConv2dNativeBackpropFilter_:BP});function WP(e,t,n,a,r,s=[1,1],i){let o=t,l=!1;t.rank===3&&(l=!0,o=j(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={dy:o,filter:n},u={strides:a,pad:r,dimRoundingMode:i,dilations:s,inputShape:e},p=P.runKernel(Xd,c,u);return l?j(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var s1=R({depthwiseConv2dNativeBackpropInput_:WP});function VP({x:e,filter:t,strides:n,pad:a,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(nm(P.state.gradientDepth,l)===!1){let N=kr(e,t,n,a,r,s,i);return o!=null&&(N=Z(N,o)),tm(N,l,c,u)}let p=C(e,"x","depthwiseConv2d"),d=C(t,"filter","depthwiseConv2d"),h=p,m=!1;p.rank===3&&(m=!0,h=j(p,[1,p.shape[0],p.shape[1],p.shape[2]])),F(h.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),F(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),F(h.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),s==null&&(s=[1,1]),F($n(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),i!=null&&F(qt(a),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${a}.`);let f=Bc(h.shape,d.shape,n,s,a,i,!0),g;o!=null&&(g=C(o,"bias","fused conv2d"),[g]=Tt(g,p),vt(f.outShape,g.shape));let y;c!=null&&(y=C(c,"prelu weights","fused depthwiseConv2d"));let b=(N,T)=>{F(as(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[E,A,$,O]=T,V=Qh(N,$,l),W=s1(A.shape,V,E,n,a,s,i),H=r1(A,V,E.shape,n,a,s,i);if(O!=null){let X=em(g,V);return[W,H,X]}return[W,H]},x={x:h,filter:d,bias:g,preluActivationWeights:y},v={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:u};return o==null?Xa((N,T,E)=>{let A=P.runKernel(Ci,x,v);return E([T,N,A]),m&&(A=j(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:b}})(h,d):Xa((N,T,E,A)=>{let $=P.runKernel(Ci,x,v);return A([T,N,$,E]),m&&($=j($,[$.shape[1],$.shape[2],$.shape[3]])),{value:$,gradFunc:b}})(h,d,g)}var PP=R({fusedDepthwiseConv2d_:VP});function UP({a:e,b:t,transposeA:n=!1,transposeB:a=!1,bias:r,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(nm(P.state.gradientDepth,s)===!1){let O=ze(e,t,n,a);return r!=null&&(O=Z(O,r)),tm(O,s,i,o)}let l=C(e,"a","fused matMul"),c=C(t,"b","fused matMul");[l,c]=Tt(l,c);let u=n?l.shape[l.rank-2]:l.shape[l.rank-1],p=a?c.shape[c.rank-1]:c.shape[c.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],h=a?c.shape[c.rank-2]:c.shape[c.rank-1],m=l.shape.slice(0,-2),f=c.shape.slice(0,-2),g=zt(m),y=zt(f);F(l.rank>=2&&c.rank>=2&&l.rank===c.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${c.rank}.`),F(xr(m,f),()=>`Error in fused matMul: outer dimensions (${m}) and (${f}) of Tensors with shapes ${l.shape} and ${c.shape} must match.`),F(u===p,()=>`Error in fused matMul: inner shapes (${u}) and (${p}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${n} and transposeB=${a} must match.`);let b=l.shape.slice(0,-2).concat([d,h]),x=n?j(l,[g,u,d]):j(l,[g,d,u]),v=a?j(c,[y,h,p]):j(c,[y,p,h]),N;r!=null&&(N=C(r,"bias","fused matMul"),[N]=Tt(N,l),vt(b,N.shape));let T;i!=null&&(T=C(i,"prelu weights","fused matMul"));let E=(O,V)=>{let[W,H,X,q]=V,K=Qh(j(O,X.shape),X,s),J,te;if(!n&&!a?(J=ze(K,H,!1,!0),te=ze(W,K,!0,!1)):!n&&a?(J=ze(K,H,!1,!1),te=ze(K,W,!0,!1)):n&&!a?(J=ze(H,K,!1,!0),te=ze(W,K,!1,!1)):(J=ze(H,K,!0,!0),te=ze(K,W,!0,!0)),r!=null){let Q=em(q,K);return[J,te,Q]}else return[J,te]},A={a:x,b:v,bias:N,preluActivationWeights:T},$={transposeA:n,transposeB:a,activation:s,leakyreluAlpha:o};return r==null?Xa((O,V,W)=>{let H=P.runKernel(Ti,A,$);return W([O,V,H]),{value:j(H,b),gradFunc:E}})(x,v):Xa((O,V,W,H)=>{let X=P.runKernel(Ti,A,$);return H([O,V,X,W]),{value:j(X,b),gradFunc:E}})(x,v,N)}var OP=R({fusedMatMul_:UP});function GP(e){return vb(e,.54,.46)}var HP=R({hammingWindow_:GP});function jP(e){return vb(e,.5,.5)}var i1=R({hannWindow_:jP});function qP(e,t,n,a=!1,r=0){let s=0,i=[];for(;s+t<=e.size;)i.push(We(e,s,t)),s+=n;if(a)for(;s<e.size;){let o=s+t-e.size,l=Ze([We(e,s,t-o),Nn([o],r)]);i.push(l),s+=n}return i.length===0?Ea([],[0,t]):j(Ze(i),[i.length,t])}var o1=R({frame_:qP});function KP(e,t,n,a,r=i1){a==null&&(a=a1(t));let s=o1(e,t,n),i=L(s,r(t)),o=[];for(let l=0;l<s.shape[0];l++)o.push(Zc(We(i,[l,0],[1,t]),a));return Ze(o)}var XP=R({stft_:KP});function YP(e,t,n,a,r="bilinear",s=0){let i=C(e,"image","cropAndResize"),o=C(t,"boxes","cropAndResize","float32"),l=C(n,"boxInd","cropAndResize","int32"),c=o.shape[0];F(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),F(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`),F(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`),F(a.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${a.length}.`),F(a[0]>=1&&a[1]>=1,()=>`cropSize must be atleast [1,1], but was ${a}`),F(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);let u={image:i,boxes:o,boxInd:l},p={method:r,extrapolationValue:s,cropSize:a};return P.runKernel(Xo,u,p)}var JP=R({cropAndResize_:YP});function ZP(e){let t=C(e,"image","flipLeftRight","float32");F(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return P.runKernel(nl,n,{})}var QP=R({flipLeftRight_:ZP});function eO(e,t,n=0,a=.5){let r=C(e,"image","rotateWithOffset","float32");F(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);let s={image:r},i={radians:t,fillValue:n,center:a};return P.runKernel(zl,s,i)}var tO=R({rotateWithOffset_:eO});function au(e,t,n,a,r,s){a==null&&(a=.5),r==null&&(r=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=e.shape[0];return n=Math.min(n,i),F(0<=a&&a<=1,()=>`iouThreshold must be in [0, 1], but was '${a}'`),F(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),F(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),F(t.rank===1,()=>"scores must be a 1D tensor"),F(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),F(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}function nO(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY){let s=C(e,"boxes","nonMaxSuppression"),i=C(t,"scores","nonMaxSuppression"),o=au(s,i,n,a,r);n=o.maxOutputSize,a=o.iouThreshold,r=o.scoreThreshold;let l={maxOutputSize:n,iouThreshold:a,scoreThreshold:r};return P.runKernel(yl,{boxes:s,scores:i},l)}var aO=R({nonMaxSuppression_:nO});function sO(e,t,n){let a=rO(e,t,n),r=a<0?-(a+1):a;e.splice(r,0,t)}function rO(e,t,n){return oO(e,t,n||iO)}function iO(e,t){return e>t?1:e<t?-1:0}function oO(e,t,n){let a=0,r=e.length,s=0,i=!1;for(;a<r;){s=a+(r-a>>>1);let o=n(t,e[s]);o>0?a=s+1:(r=s,i=!o)}return i?a:-a-1}function l1(e,t,n,a,r){return kb(e,t,n,a,r,0)}function u1(e,t,n,a,r,s){return kb(e,t,n,a,r,0,!1,s,!0)}function c1(e,t,n,a,r,s){return kb(e,t,n,a,r,s,!0)}function kb(e,t,n,a,r,s,i=!1,o=!1,l=!1){let c=[];for(let g=0;g<t.length;g++)t[g]>r&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(p1);let u=s>0?-.5/s:0,p=[],d=[];for(;p.length<n&&c.length>0;){let g=c.pop(),{score:y,boxIndex:b,suppressBeginIndex:x}=g;if(y<r)break;let v=!1;for(let N=p.length-1;N>=x;--N){let T=lO(e,b,p[N]);if(T>=a){v=!0;break}if(g.score=g.score*uO(a,u,T),g.score<=r)break}g.suppressBeginIndex=p.length,v||(g.score===y?(p.push(b),d.push(g.score)):g.score>r&&sO(c,g,p1))}let h=p.length,m=n-h;o&&m>0&&(p.push(...new Array(m).fill(0)),d.push(...new Array(m).fill(0)));let f={selectedIndices:p};return i&&(f.selectedScores=d),l&&(f.validOutputs=h),f}function lO(e,t,n){let a=e.subarray(t*4,t*4+4),r=e.subarray(n*4,n*4+4),s=Math.min(a[0],a[2]),i=Math.min(a[1],a[3]),o=Math.max(a[0],a[2]),l=Math.max(a[1],a[3]),c=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),p=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),h=(o-s)*(l-i),m=(p-c)*(d-u);if(h<=0||m<=0)return 0;let f=Math.max(s,c),g=Math.max(i,u),y=Math.min(o,p),b=Math.min(l,d),x=Math.max(y-f,0)*Math.max(b-g,0);return x/(h+m-x)}function uO(e,t,n){let a=Math.exp(t*n*n);return n<=e?a:0}function p1(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function cO(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY){let s=C(e,"boxes","nonMaxSuppressionAsync"),i=C(t,"scores","nonMaxSuppressionAsync"),o=au(s,i,n,a,r);n=o.maxOutputSize,a=o.iouThreshold,r=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),c=l[0],u=l[1],{selectedIndices:p}=l1(c,u,n,a,r);return s!==e&&s.dispose(),i!==t&&i.dispose(),tt(p,"int32")}var pO=cO;function dO(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=0){let i=C(e,"boxes","nonMaxSuppression"),o=C(t,"scores","nonMaxSuppression"),l=au(i,o,n,a,r,s);n=l.maxOutputSize,a=l.iouThreshold,r=l.scoreThreshold,s=l.softNmsSigma;let c={boxes:i,scores:o},u={maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s},p=P.runKernel(xl,c,u);return{selectedIndices:p[0],selectedScores:p[1]}}var hO=R({nonMaxSuppressionWithScore_:dO});async function mO(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=0){let i=C(e,"boxes","nonMaxSuppressionAsync"),o=C(t,"scores","nonMaxSuppressionAsync"),l=au(i,o,n,a,r,s);n=l.maxOutputSize,a=l.iouThreshold,r=l.scoreThreshold,s=l.softNmsSigma;let c=await Promise.all([i.data(),o.data()]),u=c[0],p=c[1],{selectedIndices:d,selectedScores:h}=c1(u,p,n,a,r,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:tt(d,"int32"),selectedScores:tt(h)}}var fO=mO;function gO(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=!1){let i=C(e,"boxes","nonMaxSuppression"),o=C(t,"scores","nonMaxSuppression"),l=au(i,o,n,a,r,null),c=l.maxOutputSize,u=l.iouThreshold,p=l.scoreThreshold,d={boxes:i,scores:o},h={maxOutputSize:c,iouThreshold:u,scoreThreshold:p,padToMaxOutputSize:s},m=P.runKernel(bl,d,h);return{selectedIndices:m[0],validOutputs:m[1]}}var yO=R({nonMaxSuppressionPadded_:gO});async function bO(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=!1){let i=C(e,"boxes","nonMaxSuppressionAsync"),o=C(t,"scores","nonMaxSuppressionAsync"),l=au(i,o,n,a,r,null),c=l.maxOutputSize,u=l.iouThreshold,p=l.scoreThreshold,[d,h]=await Promise.all([i.data(),o.data()]),{selectedIndices:m,validOutputs:f}=u1(d,h,c,u,p,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:tt(m,"int32"),validOutputs:de(f,"int32")}}var xO=bO;function vO(e,t,n=!1,a=!1){let r=C(e,"images","resizeBilinear");F(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),F(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),F(a===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=r,i=!1;r.rank===3&&(i=!0,s=j(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:a,size:t},c=P.runKernel(pi,o,l);return i?j(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var d1=R({resizeBilinear_:vO});function wO(e,t,n=!1,a=!1){let r=C(e,"images","resizeNearestNeighbor");F(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),F(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),F(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),F(a===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=r,i=!1;r.rank===3&&(i=!0,s=j(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:a,size:t},c=P.runKernel(Tc,o,l);return i?j(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var h1=R({resizeNearestNeighbor_:wO});function kO(e,t,n){F(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),F(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let a=C(e,"a","bandPart");F(a.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${a.rank}.`);let r=a.shape,[s,i]=a.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);let o=j(Vh(0,s,1,"int32"),[-1,1]),l=Vh(0,i,1,"int32"),c=fe(o,l),u=ha(rs(c,de(+t,"int32")),Nr(c,de(-n,"int32"))),p=bt([s,i],a.dtype);return j(Mt(pt(j(a,[-1,s,i])).map(d=>In(u,d,p))),r)}var IO=R({bandPart_:kO});function NO(e){let t;if(Array.isArray(e)){t=!1,F(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let s=1;s<e.length;++s)F(e[s].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[s].shape[0]} vs. ${r})`)}else t=!0,e=Pn(e,e.shape[0],0).map(r=>is(r,[0]));F(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],a=e;for(let r=0;r<e.length;++r)n.push(P.tidy(()=>{let s=a[r];if(r>0)for(let i=0;i<r;++i){let o=L(Ce(L(n[i],s)),n[i]);s=fe(s,o)}return ve(s,Zh(s,"euclidean"))}));return t?Mt(n,0):n}var TO=R({gramSchmidt_:NO});function SO(e,t=!1){if(F(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return m1(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((l,c)=>l*c),a=pt(j(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],s=[];a.forEach(l=>{let[c,u]=m1(l,t);r.push(c),s.push(u)});let i=j(Mt(r,0),e.shape),o=j(Mt(s,0),e.shape);return[i,o]}}function m1(e,t=!1){return P.tidy(()=>{F(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],a=e.shape[1],r=tb(n),s=es(e),i=Ea([[1]],[1,1]),o=es(i),l=n>=a?a:n;for(let c=0;c<l;++c){let u=s,p=o,d=r;[o,s,r]=P.tidy(()=>{let h=We(s,[c,c],[n-c,1]),m=Zh(h),f=We(s,[c,c],[1,1]),g=In(ea(f,0),Ea([[-1]]),Ea([[1]])),y=fe(f,L(g,m)),b=ve(h,y);b.shape[0]===1?o=es(i):o=Ze([i,We(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let x=St(ve(ze(g,y),m)),v=We(s,[c,0],[n-c,a]),N=L(x,o),T=Ue(o);if(c===0)s=fe(v,ze(N,ze(T,v)));else{let $=fe(v,ze(N,ze(T,v)));s=Ze([We(s,[0,0],[c,a]),$],0)}let E=Ue(N),A=We(r,[0,c],[n,r.shape[1]-c]);if(c===0)r=fe(A,ze(ze(A,o),E));else{let $=fe(A,ze(ze(A,o),E));r=Ze([We(r,[0,0],[n,c]),$],1)}return[o,s,r]}),Ae([u,p,d])}return!t&&n>a&&(r=We(r,[0,0],[n,a]),s=We(s,[0,0],[a,a])),[r,s]})}var CO=R({qr_:SO}),fn;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(fn||(fn={}));function EO(e,t,n=fn.SUM_BY_NONZERO_WEIGHTS){let a=C(e,"losses","computeWeightedLoss"),r=null;t!=null&&(r=C(t,"weights","computeWeightedLoss"));let s=r==null?a:L(a,r);if(n===fn.NONE)return s;if(n===fn.SUM)return Ce(s);if(n===fn.MEAN){if(r==null)return Ct(s);{let i=a.size/r.size,o=ve(Ce(s),Ce(r));return i>1?ve(o,de(i)):o}}if(n===fn.SUM_BY_NONZERO_WEIGHTS){if(r==null)return ve(Ce(s),de(a.size));{let i=L(r,Ya(a.shape)),o=pe(Ce(ss(i,de(0))),"float32");return ve(Ce(s),o)}}throw Error(`Unknown reduction: ${n}`)}var Tr=R({computeWeightedLoss_:EO});function _O(e,t,n,a=fn.SUM_BY_NONZERO_WEIGHTS){let r=C(e,"labels","absoluteDifference"),s=C(t,"predictions","absoluteDifference"),i=null;n!=null&&(i=C(n,"weights","absoluteDifference")),rt(r.shape,s.shape,"Error in absoluteDifference: ");let o=Wt(fe(r,s));return Tr(o,i,a)}var FO=R({absoluteDifference_:_O});function AO(e,t,n,a,r=fn.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"labels","cosineDistance"),i=C(t,"predictions","cosineDistance"),o=null;a!=null&&(o=C(a,"weights","cosineDistance")),rt(s.shape,i.shape,"Error in cosineDistance: ");let l=de(1),c=fe(l,Ce(L(s,i),n,!0));return Tr(c,o,r)}var $O=R({cosineDistance_:AO});function DO(e,t,n,a=fn.SUM_BY_NONZERO_WEIGHTS){let r=C(e,"labels","hingeLoss"),s=C(t,"predictions","hingeLoss"),i=null;n!=null&&(i=C(n,"weights","hingeLoss")),rt(r.shape,s.shape,"Error in hingeLoss: ");let o=de(1);r=fe(L(de(2),r),o);let l=Xe(fe(o,L(r,s)));return Tr(l,i,a)}var MO=R({hingeLoss_:DO});function RO(e,t,n,a=1,r=fn.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"labels","huberLoss"),i=C(t,"predictions","huberLoss"),o=null;n!=null&&(o=C(n,"weights","huberLoss")),rt(s.shape,i.shape,"Error in huberLoss: ");let l=de(a),c=Wt(fe(i,s)),u=Pi(c,l),p=fe(c,u),d=Z(L(de(.5),lt(u)),L(l,p));return Tr(d,o,r)}var PO=R({huberLoss_:RO});function OO(e,t,n,a=1e-7,r=fn.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"labels","logLoss"),i=C(t,"predictions","logLoss"),o=null;n!=null&&(o=C(n,"weights","logLoss")),rt(s.shape,i.shape,"Error in logLoss: ");let l=de(1),c=de(a),u=St(L(s,Dn(Z(i,c)))),p=L(fe(l,s),Dn(Z(fe(l,i),c))),d=fe(u,p);return Tr(d,o,r)}var LO=R({logLoss_:OO});function zO(e,t,n,a=fn.SUM_BY_NONZERO_WEIGHTS){let r=C(e,"labels","meanSquaredError"),s=C(t,"predictions","meanSquaredError"),i=null;n!=null&&(i=C(n,"weights","meanSquaredError")),rt(r.shape,s.shape,"Error in meanSquaredError: ");let o=Qc(r,s);return Tr(o,i,a)}var BO=R({meanSquaredError_:zO});function WO(e,t){let n=C(e,"labels","sigmoidCrossEntropyWithLogits"),a=C(t,"logits","sigmoidCrossEntropyWithLogits");rt(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=Xe(a),s=L(a,n),i=Rh(mn(St(Wt(a))));return Z(fe(r,s),i)}function VO(e,t,n,a=0,r=fn.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"multiClassLabels","sigmoidCrossEntropy"),i=C(t,"logits","sigmoidCrossEntropy"),o=null;if(n!=null&&(o=C(n,"weights","sigmoidCrossEntropy")),rt(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),a>0){let c=de(a),u=de(1),p=de(.5);s=Z(L(s,fe(u,c)),L(p,c))}let l=WO(s,i);return Tr(l,o,r)}var UO=R({sigmoidCrossEntropy_:VO});function GO(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Xa((a,r,s)=>{let i=sb(r,[n],!0),o=fe(pe(r,"float32"),i);s([a,o]);let l=St(L(o,a));return{value:Ce(l,[n]),gradFunc:(c,u)=>{let[p,d]=u,h=Ri(c.shape,[n]);return[L(j(c,h),fe(pe(p,"float32"),mn(d))),L(j(c,h),fe(mn(d),pe(p,"float32")))]}}})(e,t)}function HO(e,t,n,a=0,r=fn.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"onehotLabels","softmaxCrossEntropy"),i=C(t,"logits","softmaxCrossEntropy"),o=null;if(n!=null&&(o=C(n,"weights","softmaxCrossEntropy")),rt(s.shape,i.shape,"Error in softmaxCrossEntropy: "),a>0){let c=de(a),u=de(1),p=de(s.shape[1]);s=Z(L(s,fe(u,c)),ve(c,p))}let l=GO(s,i);return Tr(l,o,r)}var jO=R({softmaxCrossEntropy_:HO}),qO={fft:Jc,ifft:tu,rfft:Zc,irfft:Xh},KO={hammingWindow:HP,hannWindow:i1,frame:o1,stft:XP},Za={flipLeftRight:QP,resizeNearestNeighbor:h1,resizeBilinear:d1,rotateWithOffset:tO,cropAndResize:JP,nonMaxSuppression:aO,nonMaxSuppressionAsync:pO,nonMaxSuppressionWithScore:hO,nonMaxSuppressionWithScoreAsync:fO,nonMaxSuppressionPadded:yO,nonMaxSuppressionPaddedAsync:xO},f1={bandPart:IO,gramSchmidt:TO,qr:CO},XO={absoluteDifference:FO,computeWeightedLoss:Tr,cosineDistance:$O,hingeLoss:MO,huberLoss:PO,logLoss:LO,meanSquaredError:BO,sigmoidCrossEntropy:UO,softmaxCrossEntropy:jO},Sr=class extends ek{minimize(e,t=!1,n){let{value:a,grads:r}=this.computeGradients(e,n);if(n!=null){let s=n.map(i=>({name:i.name,tensor:r[i.name]}));this.applyGradients(s)}else this.applyGradients(r);return Ae(r),t?a:(a.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Tk(e,t)}dispose(){this.iterations_!=null&&Ae(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:de(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Sr,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var am=class extends Sr{constructor(e,t,n=null){super();this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=P.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let a=P.registeredVariables[t],r=!1;this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:D(()=>He(a).variable(r))}),this.accumulatedUpdates[n]==null&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:D(()=>He(a).variable(r))});let s=Array.isArray(e)?e[n].tensor:e[t];if(s==null)return;let i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;D(()=>{let l=Z(L(i,this.rho),L(lt(s),1-this.rho)),c=L(ve(rn(Z(o,this.epsilon)),rn(Z(i,this.epsilon))),s),u=Z(L(o,this.rho),L(lt(c),1-this.rho));i.assign(l),o.assign(u);let p=Z(L(c,-this.learningRate),a);a.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ae(this.accumulatedGrads.map(e=>e.variable)),Ae(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(a=>({originalName:a.name,variable:a.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(a=>({originalName:a.name,variable:a.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};am.className="Adadelta";ts(am);var rm=class extends Sr{constructor(e,t=.1){super();this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let a=P.registeredVariables[t];if(this.accumulatedGrads[n]==null){let i=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:D(()=>Nn(a.shape,this.initialAccumulatorValue).variable(i))}}let r=Array.isArray(e)?e[n].tensor:e[t];if(r==null)return;let s=this.accumulatedGrads[n].variable;D(()=>{let i=Z(s,lt(r));s.assign(i);let o=Z(L(ve(r,rn(Z(i,P.backend.epsilon()))),-this.learningRate),a);a.assign(o)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ae(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};rm.className="Adagrad";ts(rm);var sm=class extends Sr{constructor(e,t,n,a=null){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],D(()=>{this.accBeta1=de(t).variable(),this.accBeta2=de(n).variable()}),a==null&&(this.epsilon=P.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);D(()=>{let n=fe(1,this.accBeta1),a=fe(1,this.accBeta2);t.forEach((r,s)=>{let i=P.registeredVariables[r],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${r}/m`,variable:D(()=>He(i).variable(o))}),this.accumulatedSecondMoment[s]==null&&(this.accumulatedSecondMoment[s]={originalName:`${r}/v`,variable:D(()=>He(i).variable(o))});let l=Array.isArray(e)?e[s].tensor:e[r];if(l==null)return;let c=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,p=Z(L(c,this.beta1),L(l,1-this.beta1)),d=Z(L(u,this.beta2),L(lt(l),1-this.beta2)),h=ve(p,n),m=ve(d,a);c.assign(p),u.assign(d);let f=Z(L(ve(h,Z(rn(m),this.epsilon)),-this.learningRate),i);i.assign(f)}),this.accBeta1.assign(L(this.accBeta1,this.beta1)),this.accBeta2.assign(L(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ae(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Ae(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),D(()=>{this.accBeta1.assign(Ja(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ja(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(a=>({originalName:a.name,variable:a.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(a=>({originalName:a.name,variable:a.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};sm.className="Adam";ts(sm);var im=class extends Sr{constructor(e,t,n,a=null,r=0){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],D(()=>{this.iteration=de(0).variable(),this.accBeta1=de(t).variable()}),a==null&&(this.epsilon=P.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);D(()=>{let n=fe(1,this.accBeta1),a=ve(-this.learningRate,Z(L(this.iteration,this.decay),1));t.forEach((r,s)=>{let i=P.registeredVariables[r],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${r}/m`,variable:He(i).variable(o)}),this.accumulatedWeightedInfNorm[s]==null&&(this.accumulatedWeightedInfNorm[s]={originalName:`${r}/v`,variable:He(i).variable(o)});let l=Array.isArray(e)?e[s].tensor:e[r];if(l==null)return;let c=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,p=Z(L(c,this.beta1),L(l,1-this.beta1)),d=L(u,this.beta2),h=Wt(l),m=Sa(d,h);c.assign(p),u.assign(m);let f=Z(L(ve(a,n),ve(p,Z(m,this.epsilon))),i);i.assign(f)}),this.iteration.assign(Z(this.iteration,1)),this.accBeta1.assign(L(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ae(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Ae(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};im.className="Adamax";ts(im);var ep=class extends Sr{constructor(e){super();this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let a=Array.isArray(e)?e[n].tensor:e[t];if(a==null)return;let r=P.registeredVariables[t];D(()=>{let s=Z(L(this.c,a),r);r.assign(s)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Xt(de(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};ep.className="SGD";ts(ep);var om=class extends ep{constructor(e,t,n=!1){super(e);this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=de(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let a=P.registeredVariables[t];if(this.accumulations[n]==null){let i=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:D(()=>He(a).variable(i))}}let r=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];s!=null&&D(()=>{let i,o=Z(L(this.m,r),s);this.useNesterov?i=Z(L(this.c,Z(s,L(o,this.m))),a):i=Z(L(this.c,o),a),r.assign(o),a.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ae(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};om.className="Momentum";ts(om);var lm=class extends Sr{constructor(e,t=.9,n=0,a=null,r=!1){super();if(this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,a==null&&(this.epsilon=P.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let a=P.registeredVariables[t],r=!1;this.accumulatedMeanSquares[n]==null&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:D(()=>He(a).variable(r))}),this.accumulatedMoments[n]==null&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:D(()=>He(a).variable(r))}),this.accumulatedMeanGrads[n]==null&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:D(()=>He(a).variable(r))});let s=Array.isArray(e)?e[n].tensor:e[t];if(s==null)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;D(()=>{let l=Z(L(i,this.decay),L(lt(s),1-this.decay));if(this.centered){let c=this.accumulatedMeanGrads[n].variable,u=Z(L(c,this.decay),L(s,1-this.decay)),p=ve(L(s,this.learningRate),rn(fe(l,Z(lt(u),this.epsilon)))),d=Z(L(o,this.momentum),p);i.assign(l),c.assign(u),o.assign(d);let h=fe(a,d);a.assign(h)}else{let c=Z(L(i,this.decay),L(lt(s),1-this.decay)),u=Z(L(o,this.momentum),ve(L(s,this.learningRate),rn(Z(c,this.epsilon))));i.assign(c),o.assign(u);let p=fe(a,u);a.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ae(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ae(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Ae(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(a=>({originalName:a.name,variable:a.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(a=>({originalName:a.name,variable:a.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(a=>({originalName:a.name,variable:a.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};lm.className="RMSProp";ts(lm);var Li=class{static sgd(e){return new ep(e)}static momentum(e,t,n=!1){return new om(e,t,n)}static rmsprop(e,t=.9,n=0,a=null,r=!1){return new lm(e,t,n,a,r)}static adam(e=.001,t=.9,n=.999,a=null){return new sm(e,t,n,a)}static adadelta(e=.001,t=.95,n=null){return new am(e,t,n)}static adamax(e=.002,t=.9,n=.999,a=null,r=0){return new im(e,t,n,a,r)}static adagrad(e,t=.1){return new rm(e,t)}},zi={sgd:Li.sgd,momentum:Li.momentum,adadelta:Li.adadelta,adagrad:Li.adagrad,rmsprop:Li.rmsprop,adamax:Li.adamax,adam:Li.adam},YO=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:e=>e())();function um(){return new Promise(e=>YO(()=>e()))}var _={};Oe(_,{ERF_A1:()=>oL,ERF_A2:()=>lL,ERF_A3:()=>uL,ERF_A4:()=>cL,ERF_A5:()=>pL,ERF_P:()=>iL,PARALLELIZE_THRESHOLD:()=>Ib,SELU_SCALE:()=>y1,SELU_SCALEALPHA:()=>g1,applyActivation:()=>tm,assertAndGetBroadcastShape:()=>vt,assertAxesAreInnerMostDims:()=>vM,assertParamsConsistent:()=>JO,assignToTypedArray:()=>xL,axesAreInnerMostDims:()=>ab,calculateShapes:()=>V0,castTensor:()=>IL,combineLocations:()=>Ck,complexWithEvenIndex:()=>gL,complexWithOddIndex:()=>yL,computeConv2DInfo:()=>Bc,computeConv3DInfo:()=>uk,computeDefaultPad:()=>Hy,computeDilation2DInfo:()=>G$,computeOptimalWindowSize:()=>QO,computeOutAndReduceShapes:()=>Ek,computeOutShape:()=>ZO,computePool2DInfo:()=>lk,computePool3DInfo:()=>H$,convertConv2DDataFormat:()=>ok,eitherStridesOrDilationsAreOne:()=>$n,expandShapeToKeepDim:()=>Ri,exponent:()=>wL,exponents:()=>vL,fromStringArrayToUint8:()=>SL,fromUint8ToStringArray:()=>TL,getAxesPermutation:()=>_k,getBroadcastDims:()=>PD,getComplexWithIndex:()=>bL,getFusedBiasGradient:()=>em,getFusedDyActivation:()=>Qh,getImageCenter:()=>eL,getInnerMostAxes:()=>wM,getPermuted:()=>nL,getReductionAxes:()=>Vt,getReshaped:()=>tL,getReshapedPermuted:()=>aL,getSliceBeginCoords:()=>rL,getSliceSize:()=>sL,getUndoAxesPermutation:()=>rb,log:()=>hL,mergeRealAndImagArrays:()=>mL,prepareAndValidate:()=>W0,prepareSplitSize:()=>kL,reshapeTensor:()=>NL,segment_util:()=>b1,shouldFuse:()=>nm,slice_util:()=>hn,splitRealAndImagArrays:()=>fL,tupleValuesAreOne:()=>as,upcastType:()=>pa,validateInput:()=>$y,validateUpdateShape:()=>Ay,warn:()=>dL});function JO(e,t){let n=e[0].length;e.forEach((r,s)=>{F(r.length===n,()=>`Error in concat${n}D: rank of tensors[${s}] must be the same as the rank of the rest (${n})`)}),F(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let a=e[0];e.forEach((r,s)=>{for(let i=0;i<n;i++)F(i===t||r[i]===a[i],()=>`Error in concat${n}D: Shape of tensors[${s}] (${r}) does not match the shape of the rest (${a}) along the non-concatenated axis ${s}.`)})}function ZO(e,t){let n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var Ib=30;function QO(e){return e<=Ib?e:Pd(e,Math.floor(Math.sqrt(e)))}function eL(e,t,n){let a=n*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[a,r]}function tL(e,t,n,a=!0){let r=[];if(a)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let s=t.length;for(let i=0;i<s;++i)r=r.concat([e[i+1]/t[i],t[i]]);r=r.concat(e.slice(s+1))}return r}function nL(e,t,n=!0){let a=[];if(n){a.push(t);for(let r=t+1;r<e;++r)r<=2*t?(a.push(r),a.push(r-(t+1))):a.push(r)}else{let r=[],s=[];for(let i=1;i<e;++i)i>=t*2+1||i%2==1?s.push(i):r.push(i);a.push(...r),a.push(0),a.push(...s)}return a}function aL(e,t,n,a=!0){let r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?a?r.push(t[s-1]*e[s]):r.push(e[s]/t[s-1]):r.push(e[s]);return r}function rL(e,t){let n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function sL(e,t,n){let a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}var g1=1.7580993408473768,y1=1.0507009873554805,iL=.3275911,oL=.254829592,lL=-.284496736,uL=1.421413741,cL=-1.453152027,pL=1.061405429;function dL(...e){ee().getBool("IS_TEST")||console.warn(...e)}function hL(...e){ee().getBool("IS_TEST")||console.log(...e)}function mL(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function fL(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function gL(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function yL(e){let t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function bL(e,t){let n=e[t*2],a=e[t*2+1];return{real:n,imag:a}}function xL(e,t,n,a){e[a*2]=t,e[a*2+1]=n}function vL(e,t){let n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let s=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function wL(e,t,n){let a=(n?2:-2)*Math.PI*(e/t),r=Math.cos(a),s=Math.sin(a);return{real:r,imag:s}}function kL(e,t,n=0){let a=[];if(typeof t=="number")F(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),a=new Array(t).fill(e.shape[n]/t);else{let r=t.reduce((i,o)=>(o===-1&&(i+=1),i),0);F(r<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let i=t.reduce((o,l)=>l>0?o+l:o);t[s]=e.shape[n]-i}F(e.shape[n]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),a=t}return a}var b1={};Oe(b1,{collectGatherOpShapeInfo:()=>_L,computeOutShape:()=>EL,segOpComputeOptimalWindowSize:()=>CL});function CL(e,t){let n=!1,a;for(e<=Ib?(a=e,n=!0):a=Pd(e,Math.floor(Math.sqrt(e)));!n;)a>t||a===e?n=!0:a=Pd(e,a+1);return a}function EL(e,t,n){let a=[],r=e.length;for(let s=0;s<r;s++)s!==t?a.push(e[s]):a.push(n);return a}function _L(e,t,n,a){let r=t.shape.length,s=e.shape.length;if(a!==0&&(a<-r||a>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${a}`);if(a<0&&(a+=r),a>s)throw new Error(`batchDims (${a}) must be less than rank(x) (
    ${s}).`);if(n<a)throw new Error(`batchDims (${a}) must be less than or equal to axis (${n}).`);for(let p=0;p<a;++p)if(e.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${e.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let i=e.shape[n],o=[],l=1,c=1,u=1;for(let p=0;p<a;++p)o.push(e.shape[p]),l*=e.shape[p];for(let p=a;p<n;p++)o.push(e.shape[p]),c*=e.shape[p];for(let p=a;p<r;p++)o.push(t.shape[p]);for(let p=n+1;p<s;p++)o.push(e.shape[p]),u*=e.shape[p];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:i,outputShape:o}}function IL(e,t,n){if(t==="complex64"){if(e.dtype==="complex64")return e.clone();let a=bt(e.shape),r=pe(e,"float32"),s=n.complex(r,a);return a.dispose(),r.dispose(),s}if(!n0(e.dtype,t))return P.makeTensorFromDataId(e.dataId,e.shape,t);if(e.dtype==="complex64"){let a=n.real(e),r=pe(a,t);return a.dispose(),r}if(t==="int32")return n.int(e);if(t==="bool"){let a=de(0,e.dtype),r=n.notEqual(e,a);return a.dispose(),r}else throw new Error(`Error in Cast: failed to cast ${e.dtype} to ${t}`)}function NL(e,t){return P.makeTensorFromDataId(e.dataId,t,e.dtype)}function TL(e){try{return e.map(t=>yh(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function SL(e){return e.map(t=>Ac(t))}var Qa={};Oe(Qa,{nonMaxSuppressionV3Impl:()=>l1,nonMaxSuppressionV4Impl:()=>u1,nonMaxSuppressionV5Impl:()=>c1,whereImpl:()=>Ok});var x1={kernelName:Lo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,nu(pe(n,"float32"),-1))}}},FL={kernelName:zo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let a=lt(pe(n,"float32")),r=rn(fe(de(1),a));return St(ve(e,r))}}}},AL={kernelName:Bo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let a=rn(fe(lt(pe(n,"float32")),1));return ve(e,a)}}}},$L={kernelName:qr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=vt(n.shape,a.shape);return{a:()=>{let s=e,i=Vt(n.shape,r);return i.length>0&&(s=Ce(s,i)),j(s,n.shape)},b:()=>{let s=e,i=Vt(a.shape,r);return i.length>0&&(s=Ce(s,i)),j(s,a.shape)}}}},DL={kernelName:Rs,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((a,r)=>{n[r]=()=>e.clone()}),n}},ML={kernelName:Ps,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>He(n)}}},RL={kernelName:dc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>He(n)}}},PL={kernelName:Wo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ve(e,rn(fe(de(1),lt(pe(n,"float32")))))}}},OL={kernelName:Vo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let a=rn(Z(de(1),lt(pe(n,"float32"))));return ve(e,a)}}}},LL={kernelName:Ho,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=vt(n.shape,a.shape);return{a:()=>{let s=Z(lt(n),lt(a)),i=L(e,ve(a,s)),o=Vt(n.shape,r);return o.length>0&&(i=Ce(i,o)),j(i,n.shape)},b:()=>{let s=Z(lt(n),lt(a)),i=St(L(e,ve(n,s))),o=Vt(a.shape,r);return o.length>0&&(i=Ce(i,o)),j(i,a.shape)}}}},zL={kernelName:Uo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ve(e,Z(lt(pe(n,"float32")),1))}}},BL={kernelName:Go,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ve(e,fe(de(1),lt(pe(n,"float32"))))}}};function WL(e,t,n,a,r=[1,1,1],s,i){let o=C(e,"dy","avgPool3dGrad"),l=C(t,"input","avgPool3dGrad"),c=o,u=l,p=!1;l.rank===4&&(p=!0,c=j(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),u=j(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),F(c.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),F(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),F($n(a,r),()=>`Error in avgPool3dGrad: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`),i!=null&&F(qt(s),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);let d={dy:c,input:u},h={filterSize:n,strides:a,dilations:r,pad:s,dimRoundingMode:i},m=P.runKernel(Wd,d,h);return p?j(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var VL=R({avgPool3dGrad_:WL}),UL={kernelName:hc,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{filterSize:r,strides:s,dilations:i,pad:o,dimRoundingMode:l}=n,c=i==null?[1,1,1]:i;return{x:()=>VL(e,a,r,s,c,o,l)}}};function GL(e,t,n,a,r){let s=C(e,"dy","avgPoolGrad"),i=C(t,"input","avgPoolGrad");F(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,l=s,c=!1;i.rank===3&&(c=!0,o=j(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=j(s,[1,s.shape[0],s.shape[1],s.shape[2]])),F(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),F(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let u={dy:l,input:o},p={filterSize:n,strides:a,pad:r},d=P.runKernel(Bd,u,p);return c?j(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var HL=R({avgPoolGrad_:GL}),jL={kernelName:Os,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{filterSize:r,strides:s,pad:i}=n;return{x:()=>HL(e,a,r,s,i)}}},qL={kernelName:Ls,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[a,r]=t,{transposeA:s,transposeB:i}=n;return!s&&!i?{a:()=>ze(e,r,!1,!0),b:()=>ze(a,e,!0,!1)}:!s&&i?{a:()=>ze(e,r,!1,!1),b:()=>ze(e,a,!0,!1)}:s&&!i?{a:()=>ze(r,e,!1,!0),b:()=>ze(a,e,!1,!1)}:{a:()=>ze(r,e,!0,!0),b:()=>ze(e,a,!0,!0)}}},KL={kernelName:mc,gradFunc:(e,t,n)=>{let{blockShape:a,crops:r}=n;return{x:()=>qc(e,a,r)}}},XL={kernelName:d0,gradFunc:(e,t,n)=>{let a=n,r=a.inputShape,s=a.shape,i=Array.from(s);for(let l=r.length-1;l>=0;l--)if(r[l]===s[l])i[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${s}].`);let o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>Ce(e,o,!0)}}},YL={kernelName:zs,gradFunc:e=>({x:()=>e.clone()})},JL={kernelName:jo,gradFunc:e=>({x:()=>He(e)})},ZL={kernelName:Kr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>In(ha(Nr(a,r),rs(a,s)),e,He(e))}}},QL={kernelName:fc,inputsToSave:["x"],gradFunc:x1.gradFunc},e3={kernelName:qo,saveAllInputs:!0,gradFunc:(e,t,n)=>{let a=t.map(o=>o.shape),{axis:r}=n,s=ca(r,t[0].shape)[0],i=a.map(o=>o[s]);return Pn(e,i,s).map(o=>()=>o)}},t3={kernelName:Bs,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[a,r]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return F(as(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Ky(a.shape,e,r,i,o,l),filter:()=>wb(a,e,r.shape,i,o,l)}}},n3={kernelName:Ws,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[a,r]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>$t(e,r,s,i,o,1,l),filter:()=>wb(e,a,r.shape,s,i,o,l)}}};function a3(e,t,n,a,r){let s=e;e.rank===4&&(s=j(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;i.rank===4&&(i=j(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),F(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),F(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),F(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),F(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),F(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);let o={x:s,dy:i},l={strides:a,pad:r,filterShape:n};return P.runKernel(Hd,o,l)}var r3=R({conv3DBackpropFilter_:a3}),s3={kernelName:gc,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:a,strides:r,pad:s}=n;F(as(a),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let[i,o]=t;return{x:()=>bk(i.shape,e,o,r,s),filter:()=>r3(i,e,o.shape,r,s)}}},i3={kernelName:Vs,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(St(jh(pe(n,"float32"))),e)}}},o3={kernelName:Ko,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(qh(pe(n,"float32")),e)}}},l3={kernelName:Us,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{axis:r,exclusive:s,reverse:i}=n;return{x:()=>{let o=_k([r],a.rank),l=Dh(e,r,s,!i);return o!=null&&(l=Ue(l,o)),l}}}},u3={kernelName:Gs,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:a,strides:r,pad:s,dimRoundingMode:i}=n,o=a==null?[1,1]:a;F(as(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[l,c]=t;return F(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),F(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),F(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),F($n(r,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`),i!=null&&F(qt(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`),{x:()=>s1(l.shape,e,c,r,s,a,i),filter:()=>r1(l,e,c.shape,r,s,a,i)}}},c3={kernelName:yc,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[a,r]=t,s={x:a,filter:r,dy:e},i={x:a,filter:r,dy:e};return{x:()=>P.runKernel(Jd,s,n),filter:()=>P.runKernel(Zd,i,n)}}},p3={kernelName:Jo,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,a={dy:e,y:n};return{x:()=>P.runKernel(Qd,a)}}},d3={kernelName:Zo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,a=L(mn(St(lt(n))),2/Math.sqrt(Math.PI));return{x:()=>L(e,a)}}},h3={kernelName:js,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,n)}}},m3={kernelName:el,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>j(e,n.shape)}}},f3={kernelName:tl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,mn(n))}}},g3={kernelName:qs,gradFunc:e=>({x:()=>He(e)})},y3={kernelName:Ks,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=vt(n.shape,a.shape);return{a:()=>{let s=ve(e,pe(a,"float32")),i=Vt(n.shape,r);return i.length>0?j(Ce(s,i),n.shape):s},b:()=>{let s=L(e,pe(n,"float32")),i=Vt(a.shape,r);i.length>0&&(s=j(Ce(s,i),a.shape));let o=lt(a);return St(ve(s,pe(o,"float32")))}}}},b3={kernelName:Xs,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:a}=n,[r,s,i,o]=t,l=o==null?de(1):o,c=Vt(s.shape,r.shape),u=[];if(s.rank===1){for(let f=0;f<r.shape.length-1;++f)u.push(r.shape[f]);u.push(1)}let p=fe(r,s),d=L(e,l),h=Gh(Z(i,de(a))),m=L(L(L(h,h),h),de(-.5));return{x:()=>s.rank===1?j(L(L(e,Ka(j(h,[1,1,1,s.shape[0]]),u)),l),r.shape):j(L(L(e,h),l),r.shape),mean:()=>{let f=L(L(h,de(-1)),d);return s.rank===1&&(f=Ce(f,c)),j(f,s.shape)},variance:()=>{let f=L(L(m,p),d);return s.rank===1&&(f=Ce(f,c)),j(f,s.shape)},scale:()=>{let f=L(p,h),g=L(e,f);return s.rank===1&&(g=Ce(g,c)),j(g,s.shape)},offset:()=>{let f=e;return s.rank===1&&(f=Ce(f,c)),j(f,s.shape)}}}},x3={kernelName:al,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[a,r]=t,{axis:s}=n,i=ca(s,a.shape)[0];return{x:()=>{let o=a.shape,l=r.size,c=o.slice(0,i),u=c.length,p=o.slice(s,o.length).slice(1),d=p.length,h=v1(0,u),m=v1(u+1,u+1+d),f=w1([c,[l],p]),g=j(e,f),y=j(r,[l]),b=w1([[u],h,m]),x=Ue(g,b),v=yb(x,y,a.shape[i]),N=rb(b);return v=Ue(v,N),v},indices:()=>r}}};function v1(e,t){let n=[];for(let a=e;a<t;++a)n.push(a);return n}function w1(e){let t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}var v3={kernelName:Ys,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t;return{a:()=>He(n),b:()=>He(a)}}},w3={kernelName:il,gradFunc:e=>({x:()=>pe(e,"float32")})},k3={kernelName:ol,gradFunc:e=>({x:()=>He(e)})},I3={kernelName:ll,gradFunc:e=>({x:()=>He(e)})},N3={kernelName:ul,gradFunc:e=>({x:()=>He(e)})},T3={kernelName:Js,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{alpha:r}=n,s=ea(a,0);return{x:()=>In(s,e,L(e,r))}}},S3={kernelName:dl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ve(e,Z(n,1))}}},C3={kernelName:Zs,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ve(e,pe(n,"float32"))}}},E3={kernelName:h0,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a]=t,{axis:r}=n;return{logits:()=>{let s=!0,i=mn(a);return fe(e,L(Ce(e,r,s),i))}}}};function _3(e,t,n,a=5,r=1,s=1,i=.5){let o={x:e,y:t,dy:n},l={depthRadius:a,bias:r,alpha:s,beta:i};return P.runKernel(rh,o,l)}var F3=R({localResponseNormalizationBackprop_:_3}),A3={kernelName:wc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a,r]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>F3(a,r,e,s,i,o,l)}}};function k1(e,t,n,a){return t.rank<n.rank&&(t=j(t,Ri(t.shape,a))),e.rank<n.rank&&(e=j(e,Ri(e.shape,a))),{x:()=>L(e,pe(Ir(n,t),e.dtype))}}var I1={kernelName:Qs,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let a=n,{reductionIndices:r}=a,s=t[0],i=t[1],o=ca(r,s.shape),l=k1(e,i,s,o);return{x:()=>l.x()}}},$3={kernelName:ei,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t;return{a:()=>L(e,pe(Nr(n,a),"float32")),b:()=>L(e,pe(Hc(n,a),"float32"))}}};function D3(e,t,n,a,r,s=[1,1,1],i,o){let l=C(e,"dy","maxPool3dGrad"),c=C(t,"input","maxPool3dGrad"),u=C(n,"output","maxPool3dGrad"),p=l,d=c,h=u,m=!1;c.rank===4&&(m=!0,p=j(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=j(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),h=j(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),F(p.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),F(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),F(h.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),F($n(r,s),()=>`Error in maxPool3dGrad: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`),o!=null&&F(qt(i),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`);let f={dy:p,input:d,output:h},g={filterSize:a,strides:r,dilations:s,pad:i,dimRoundingMode:o},y=P.runKernel(ih,f,g);return m?j(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}var M3=R({maxPool3dGrad_:D3}),R3={kernelName:kc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a,r]=t,{filterSize:s,strides:i,dilations:o,pad:l,dimRoundingMode:c}=n,u=o==null?[1,1,1]:o;return{x:()=>M3(e,a,r,s,i,u,l,c)}}};function P3(e,t,n,a,r,s,i){let o=C(e,"dy","maxPoolGrad"),l=C(t,"input","maxPoolGrad"),c=C(n,"output","maxPoolGrad");F(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),F(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),F(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),i!=null&&F(qt(s),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);let u={dy:o,input:l,output:c},p={filterSize:a,strides:r,pad:s,dimRoundingMode:i};return P.runKernel(sh,u,p)}var O3=R({maxPoolGrad_:P3}),L3={kernelName:ti,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a,r]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>O3(e,a,r,s,i,o)}}},z3={kernelName:ni,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{axis:r}=n,s=ca(r,a.shape),i=Ek(a.shape,s)[1],o=zt(i);return{x:()=>{let l=a.shape.slice();s.forEach(u=>{l[u]=1});let c=j(e,l);return ve(L(c,Ya(a.shape,"float32")),o)}}}},B3={kernelName:ai,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let a=n,{axis:r}=a,[s,i]=t,o=ca(r,s.shape),l=k1(e,i,s,o);return{x:()=>l.x()}}},W3={kernelName:ri,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t;return{a:()=>L(e,pe(rs(n,a),"float32")),b:()=>L(e,pe(ea(n,a),"float32"))}}},V3={kernelName:Ic,inputsToSave:["x"],gradFunc:(e,t,n)=>{let a=t[0],{paddings:r}=n,s=r.map(i=>i[0]);return{x:()=>We(e,s,a.shape)}}},U3={kernelName:ml,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=vt(n.shape,a.shape);return{a:()=>{let s=Vt(n.shape,r);return s.length>0?j(Ce(e,s),n.shape):e},b:()=>{let s=L(e,St(Yl(ve(n,a)))),i=Vt(a.shape,r);return i.length>0?j(Ce(s,i),a.shape):s}}}},G3={kernelName:si,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=vt(n.shape,a.shape);return{a:()=>{let s=L(e,pe(a,"float32")),i=Vt(n.shape,r);return i.length>0?j(Ce(s,i),n.shape):s},b:()=>{let s=L(e,pe(n,"float32")),i=Vt(a.shape,r);return i.length>0?j(Ce(s,i),a.shape):s}}}},H3={kernelName:fl,gradFunc:e=>({x:()=>St(e)})},j3={kernelName:ii,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>bt(n.shape,"float32")}}},q3={kernelName:vl,gradFunc:e=>({x:()=>He(e)})},K3={kernelName:wl,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:a}=n;return pt(e,a).map(r=>()=>r)}},N1={kernelName:oi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let a=t[0],{paddings:r}=n,s=r.map(i=>i[0]);return{x:()=>We(e,s,a.shape)}}},X3={kernelName:li,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,a,r]=t,s=n,i=a,o=vt(s.shape,i.shape);return{a:()=>{let l=pe(i,"float32"),c=L(e,L(l,Ja(s,fe(l,de(1))))),u=Vt(s.shape,o);return u.length>0&&(c=Ce(c,u)),j(c,s.shape)},b:()=>{let l=ea(s,0),c=In(l,Dn(s),He(s)),u=L(e,L(r,c)),p=Vt(i.shape,o);return p.length>0&&(u=Ce(u,p)),j(u,i.shape)}}}},Y3={kernelName:ui,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,a]=t,r=ea(n,0);return{x:()=>In(r,e,L(e,a)),alpha:()=>{let s=In(r,He(e),L(e,n)),i=Vt(a.shape,e.shape);return i.length>0&&(s=Ce(s,i)),j(s,a.shape)}}}},J3={kernelName:Hs,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=vt(n.shape,a.shape);return{a:()=>{let s=ve(e,pe(a,"float32")),i=Vt(n.shape,r);return i.length>0?j(Ce(s,i),n.shape):s},b:()=>{let s=L(e,pe(n,"float32")),i=Vt(a.shape,r);i.length>0&&(s=j(Ce(s,i),a.shape));let o=lt(a);return St(ve(s,pe(o,"float32")))}}}},Z3={kernelName:Il,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ve(e,St(lt(n)))}}},Q3={kernelName:di,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,a=L(rs(n,6),nu(n));return{x:()=>L(e,pe(a,"float32"))}}},ez={kernelName:ci,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,pe(nu(n),"float32"))}}},tz={kernelName:Nl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>j(e,n.shape)}}},nz={kernelName:pi,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[a]=t,r={dy:e,images:a};return{images:()=>P.runKernel(ph,r,n)}}},az={kernelName:Tc,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[a]=t,r={dy:e,images:a};return{images:()=>P.runKernel(ch,r,n)}}},rz={kernelName:hi,gradFunc:(e,t,n)=>{let{dims:a}=n,r=ca(a,e.shape);return{x:()=>Rn(e,r)}}},sz={kernelName:mi,gradFunc:e=>({x:()=>He(e)})},iz={kernelName:fi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>St(ve(e,L(Ja(n,1.5),2)))}}},oz={kernelName:Sl,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>pe(He(n),"float32"),t:()=>L(e,pe(n,e.dtype)),e:()=>L(e,pe(jc(n),e.dtype))}}},lz={kernelName:Cl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let a=ea(n,de(0)),r=de(g1),s=de(y1),i=L(e,s),o=L(L(e,r),mn(pe(n,"float32")));return In(a,i,o)}}}},uz={kernelName:yi,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,L(n,fe(de(1),n)))}}},cz={kernelName:Fl,gradFunc:e=>({x:()=>He(e)})},pz={kernelName:gi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(Uc(pe(n,"float32")),e)}}},dz={kernelName:_l,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L($h(pe(n,"float32")),e)}}},hz={kernelName:El,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{begin:r,size:s}=n,i=a.shape,[o,l]=J0(a,r,s),c=[];for(let u=0;u<e.rank;u++)c.push([o[u],i[u]-o[u]-l[u]]);return{x:()=>na(e,c)}}},mz={kernelName:vi,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a]=t,{dim:r}=n,s=!0,i=L(e,a);return{logits:()=>fe(i,L(Ce(i,[r],s),a))}}},fz={kernelName:Al,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,da(n))}}},T1={kernelName:Sc,gradFunc:(e,t,n)=>{let{blockShape:a,paddings:r}=n;return{x:()=>Wc(e,a,r)}}},S1={kernelName:$l,gradFunc:(e,t,n)=>{let{axis:a}=n;return{x:()=>Ze(e,a)}}},gz={kernelName:bi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ve(e,L(rn(pe(n,"float32")),2))}}},yz={kernelName:Cc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,L(pe(n,"float32"),2))}}},bz={kernelName:wi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=de(2);return{a:()=>L(e,L(r,fe(n,a))),b:()=>L(e,L(r,fe(a,n)))}}},xz={kernelName:Ll,gradFunc:e=>({x:()=>He(e)})},vz={kernelName:ki,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=vt(n.shape,a.shape);return{a:()=>{let s=e,i=Vt(n.shape,r);return i.length>0&&(s=Ce(s,i)),j(s,n.shape)},b:()=>{let s=e,i=Vt(a.shape,r);return i.length>0&&(s=Ce(s,i)),j(St(s),a.shape)}}}},wz={kernelName:xi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,r=a.shape.slice(),{axis:s}=n;ca(s,a.shape).forEach(l=>{r[l]=1});let i=j(e,r),o=L(i,Ya(a.shape,"float32"));return{x:()=>o}}},kz={kernelName:Ml,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ve(e,lt(Uc(n)))}}},Iz={kernelName:Ii,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(fe(de(1),lt(n)),e)}}},Nz={kernelName:Xr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{reps:r}=n;return{x:()=>{let s=He(a);if(a.rank===1)for(let i=0;i<r[0];++i)s=Z(s,We(e,[i*a.shape[0]],[a.shape[0]]));else if(a.rank===2)for(let i=0;i<r[0];++i)for(let o=0;o<r[1];++o)s=Z(s,We(e,[i*a.shape[0],o*a.shape[1]],[a.shape[0],a.shape[1]]));else if(a.rank===3)for(let i=0;i<r[0];++i)for(let o=0;o<r[1];++o)for(let l=0;l<r[2];++l)s=Z(s,We(e,[i*a.shape[0],o*a.shape[1],l*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else if(a.rank===4)for(let i=0;i<r[0];++i)for(let o=0;o<r[1];++o)for(let l=0;l<r[2];++l)for(let c=0;c<r[3];++c)s=Z(s,We(e,[i*a.shape[0],o*a.shape[1],l*a.shape[2],c*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${a.rank} tensors yet.`);return s}}}},Tz={kernelName:Ni,gradFunc:(e,t,n)=>{let a=n,{perm:r}=a,s=rb(r);return{x:()=>Ue(e,s)}}},Sz={kernelName:Pl,gradFunc:(e,t,n)=>{let a=n,{axis:r}=a;return{value:()=>Mt(e,r)}}},Ez={kernelName:Ec,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Cz(e,n)}}};function Cz(e,t){let n=Sa(t,He(t)),a=Mi(e,n),r=Nr(t,de(0,"int32")),s=a.rank-r.rank;for(let o=0;o<s;++o)r=Qn(r,o+1);r=ha(r,Ya(a.shape,"bool"));let i=He(a);return In(r,a,i)}var _z={kernelName:Ol,gradFunc:e=>({x:()=>He(e)})},Fz=[x1,FL,AL,$L,DL,ML,RL,PL,OL,LL,zL,BL,UL,jL,qL,KL,XL,YL,JL,ZL,QL,e3,n3,t3,s3,i3,o3,l3,u3,c3,J3,p3,d3,h3,m3,f3,y3,g3,b3,x3,v3,w3,k3,I3,N3,T3,S3,C3,E3,A3,I1,I1,$3,R3,L3,z3,B3,W3,V3,U3,G3,H3,j3,q3,K3,N1,N1,X3,Y3,Z3,Q3,ez,tz,nz,az,rz,sz,iz,oz,lz,uz,cz,pz,dz,hz,mz,fz,T1,T1,S1,S1,gz,bz,yz,xz,vz,wz,kz,Iz,Nz,Tz,Sz,Ez,_z];for(let e of Fz)m0(e);z.prototype.abs=function(){return this.throwIfDisposed(),Wt(this)};z.prototype.acos=function(){return this.throwIfDisposed(),Py(this)};z.prototype.acosh=function(){return this.throwIfDisposed(),Oy(this)};z.prototype.addStrict=function(e){return this.throwIfDisposed(),Gk(this,e)};z.prototype.add=function(e){return this.throwIfDisposed(),Z(this,e)};z.prototype.all=function(e,t){return this.throwIfDisposed(),Eh(this,e,t)};z.prototype.any=function(e,t){return this.throwIfDisposed(),Lc(this,e,t)};z.prototype.argMax=function(e){return this.throwIfDisposed(),zc(this,e)};z.prototype.argMin=function(e){return this.throwIfDisposed(),Ly(this,e)};z.prototype.asScalar=function(){return this.throwIfDisposed(),F(this.size===1,()=>"The array must have only 1 element."),j(this,[])};z.prototype.asType=function(e){return this.throwIfDisposed(),pe(this,e)};z.prototype.as1D=function(){return this.throwIfDisposed(),j(this,[this.size])};z.prototype.as2D=function(e,t){return this.throwIfDisposed(),j(this,[e,t])};z.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),j(this,[e,t,n])};z.prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),j(this,[e,t,n,a])};z.prototype.as5D=function(e,t,n,a,r){return this.throwIfDisposed(),j(this,[e,t,n,a,r])};z.prototype.asin=function(){return this.throwIfDisposed(),zy(this)};z.prototype.asinh=function(){return this.throwIfDisposed(),By(this)};z.prototype.atan=function(){return this.throwIfDisposed(),Wy(this)};z.prototype.atan2=function(e){return this.throwIfDisposed(),Vy(this,e)};z.prototype.atanh=function(){return this.throwIfDisposed(),Uy(this)};z.prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),Zn(this,e,t,n,a)};z.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Wc(this,e,t)};z.prototype.batchNorm=function(e,t,n,a,r){return this.throwIfDisposed(),wr(this,e,t,n,a,r)};z.prototype.broadcastTo=function(e){return this.throwIfDisposed(),Vc(this,e)};z.prototype.cast=function(e){return this.throwIfDisposed(),pe(this,e)};z.prototype.ceil=function(){return this.throwIfDisposed(),qy(this)};z.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Yt(this,e,t)};z.prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof z&&(e=[e]),Ze([this,...e],t)};z.prototype.conv1d=function(e,t,n,a,r,s){return this.throwIfDisposed(),Fh(this,e,t,n,a,r,s)};z.prototype.conv2dTranspose=function(e,t,n,a,r){return this.throwIfDisposed(),Ah(this,e,t,n,a,r)};z.prototype.conv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),$t(this,e,t,n,a,r,s)};z.prototype.cos=function(){return this.throwIfDisposed(),Uc(this)};z.prototype.cosh=function(){return this.throwIfDisposed(),$h(this)};z.prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Dh(this,e,t,n)};z.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Yy(this,e,t)};z.prototype.depthwiseConv2D=function(e,t,n,a,r,s){return Pt("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),kr(this,e,t,n,a,r,s)};z.prototype.depthwiseConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),kr(this,e,t,n,a,r,s)};z.prototype.dilation2d=function(e,t,n,a,r){return this.throwIfDisposed(),Jy(this,e,t,n,a,r)};z.prototype.divNoNan=function(e){return this.throwIfDisposed(),Zy(this,e)};z.prototype.divStrict=function(e){return this.throwIfDisposed(),Hk(this,e)};z.prototype.div=function(e){return this.throwIfDisposed(),ve(this,e)};z.prototype.dot=function(e){return this.throwIfDisposed(),vk(this,e)};z.prototype.elu=function(){return this.throwIfDisposed(),Xl(this)};z.prototype.equalStrict=function(e){return this.throwIfDisposed(),Lk(this,e)};z.prototype.equal=function(e){return this.throwIfDisposed(),Ir(this,e)};z.prototype.erf=function(){return this.throwIfDisposed(),Qy(this)};z.prototype.exp=function(){return this.throwIfDisposed(),mn(this)};z.prototype.expandDims=function(e){return this.throwIfDisposed(),Qn(this,e)};z.prototype.expm1=function(){return this.throwIfDisposed(),eb(this)};z.prototype.fft=function(){return this.throwIfDisposed(),Jc(this)};z.prototype.flatten=function(){return this.throwIfDisposed(),j(this,[this.size])};z.prototype.floor=function(){return this.throwIfDisposed(),Yl(this)};z.prototype.floorDiv=function(e){return this.throwIfDisposed(),Ch(this,e)};z.prototype.gather=function(e,t){return this.throwIfDisposed(),Mi(this,e,t)};z.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),zk(this,e)};z.prototype.greaterEqual=function(e){return this.throwIfDisposed(),Nr(this,e)};z.prototype.greaterStrict=function(e){return this.throwIfDisposed(),Bk(this,e)};z.prototype.greater=function(e){return this.throwIfDisposed(),ea(this,e)};z.prototype.ifft=function(){return this.throwIfDisposed(),tu(this)};z.prototype.irfft=function(){return this.throwIfDisposed(),Xh(this)};z.prototype.isFinite=function(){return this.throwIfDisposed(),wk(this)};z.prototype.isInf=function(){return this.throwIfDisposed(),kk(this)};z.prototype.isNaN=function(){return this.throwIfDisposed(),Ik(this)};z.prototype.leakyRelu=function(e){return this.throwIfDisposed(),Gc(this,e)};z.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),Wk(this,e)};z.prototype.lessEqual=function(e){return this.throwIfDisposed(),rs(this,e)};z.prototype.lessStrict=function(e){return this.throwIfDisposed(),Vk(this,e)};z.prototype.less=function(e){return this.throwIfDisposed(),Hc(this,e)};z.prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),nb(this,e,t,n,a)};z.prototype.logSigmoid=function(){return this.throwIfDisposed(),Sk(this)};z.prototype.logSoftmax=function(e){return this.throwIfDisposed(),Oh(this,e)};z.prototype.logSumExp=function(e,t){return this.throwIfDisposed(),sb(this,e,t)};z.prototype.log=function(){return this.throwIfDisposed(),Dn(this)};z.prototype.log1p=function(){return this.throwIfDisposed(),Rh(this)};z.prototype.logicalAnd=function(e){return this.throwIfDisposed(),ha(this,e)};z.prototype.logicalNot=function(){return this.throwIfDisposed(),jc(this)};z.prototype.logicalOr=function(e){return this.throwIfDisposed(),Lh(this,e)};z.prototype.logicalXor=function(e){return this.throwIfDisposed(),Fk(this,e)};z.prototype.matMul=function(e,t,n){return this.throwIfDisposed(),ze(this,e,t,n)};z.prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),Dt(this,e,t,n,a)};z.prototype.max=function(e,t){return this.throwIfDisposed(),ta(this,e,t)};z.prototype.maximumStrict=function(e){return this.throwIfDisposed(),jk(this,e)};z.prototype.maximum=function(e){return this.throwIfDisposed(),Sa(this,e)};z.prototype.mean=function(e,t){return this.throwIfDisposed(),Ct(this,e,t)};z.prototype.min=function(e,t){return this.throwIfDisposed(),Zl(this,e,t)};z.prototype.minimumStrict=function(e){return this.throwIfDisposed(),qk(this,e)};z.prototype.minimum=function(e){return this.throwIfDisposed(),Pi(this,e)};z.prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),ob(this,e,t)};z.prototype.modStrict=function(e){return this.throwIfDisposed(),Kk(this,e)};z.prototype.mod=function(e){return this.throwIfDisposed(),zh(this,e)};z.prototype.mulStrict=function(e){return this.throwIfDisposed(),Xk(this,e)};z.prototype.mul=function(e){return this.throwIfDisposed(),L(this,e)};z.prototype.neg=function(){return this.throwIfDisposed(),St(this)};z.prototype.norm=function(e,t,n){return this.throwIfDisposed(),Zh(this,e,t,n)};z.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),Uk(this,e)};z.prototype.notEqual=function(e){return this.throwIfDisposed(),ss(this,e)};z.prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Hl(this,e,t,n)};z.prototype.onesLike=function(){return this.throwIfDisposed(),Mn(this)};z.prototype.pad=function(e,t){return this.throwIfDisposed(),na(this,e,t)};z.prototype.pool=function(e,t,n,a,r){return this.throwIfDisposed(),Dk(this,e,t,n,a,r)};z.prototype.powStrict=function(e){return this.throwIfDisposed(),Yk(this,e)};z.prototype.pow=function(e){return this.throwIfDisposed(),Ja(this,e)};z.prototype.prelu=function(e){return this.throwIfDisposed(),Kc(this,e)};z.prototype.prod=function(e,t){return this.throwIfDisposed(),Wh(this,e,t)};z.prototype.reciprocal=function(){return this.throwIfDisposed(),cb(this)};z.prototype.relu=function(){return this.throwIfDisposed(),Xe(this)};z.prototype.relu6=function(){return this.throwIfDisposed(),Uh(this)};z.prototype.reshapeAs=function(e){return this.throwIfDisposed(),j(this,e.shape)};z.prototype.reshape=function(e){return this.throwIfDisposed(),j(this,e)};z.prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),d1(this,e,t,n)};z.prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),h1(this,e,t,n)};z.prototype.reverse=function(e){return this.throwIfDisposed(),Rn(this,e)};z.prototype.rfft=function(){return this.throwIfDisposed(),Zc(this)};z.prototype.round=function(){return this.throwIfDisposed(),pb(this)};z.prototype.rsqrt=function(){return this.throwIfDisposed(),Gh(this)};z.prototype.selu=function(){return this.throwIfDisposed(),Hh(this)};z.prototype.separableConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),Oi(this,e,t,n,a,r,s)};z.prototype.sigmoid=function(){return this.throwIfDisposed(),da(this)};z.prototype.sign=function(){return this.throwIfDisposed(),db(this)};z.prototype.sin=function(){return this.throwIfDisposed(),jh(this)};z.prototype.sinh=function(){return this.throwIfDisposed(),qh(this)};z.prototype.slice=function(e,t){return this.throwIfDisposed(),We(this,e,t)};z.prototype.softmax=function(e){return this.throwIfDisposed(),Ca(this,e)};z.prototype.softplus=function(){return this.throwIfDisposed(),Jl(this)};z.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),qc(this,e,t)};z.prototype.split=function(e,t){return this.throwIfDisposed(),Pn(this,e,t)};z.prototype.sqrt=function(){return this.throwIfDisposed(),rn(this)};z.prototype.square=function(){return this.throwIfDisposed(),lt(this)};z.prototype.squaredDifference=function(e){return this.throwIfDisposed(),Qc(this,e)};z.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),Jk(this,e)};z.prototype.squeeze=function(e){return this.throwIfDisposed(),is(this,e)};z.prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof z?[this,e]:[this,...e];return Mt(n,t)};z.prototype.step=function(e){return this.throwIfDisposed(),nu(this,e)};z.prototype.stridedSlice=function(e,t,n,a,r,s,i,o){return this.throwIfDisposed(),mb(this,e,t,n,a,r,s,i,o)};z.prototype.subStrict=function(e){return this.throwIfDisposed(),Zk(this,e)};z.prototype.sub=function(e){return this.throwIfDisposed(),fe(this,e)};z.prototype.sum=function(e,t){return this.throwIfDisposed(),Ce(this,e,t)};z.prototype.tan=function(){return this.throwIfDisposed(),fb(this)};z.prototype.tanh=function(){return this.throwIfDisposed(),Kl(this)};z.prototype.tile=function(e){return this.throwIfDisposed(),Ka(this,e)};z.prototype.toBool=function(){return this.throwIfDisposed(),pe(this,"bool")};z.prototype.toFloat=function(){return this.throwIfDisposed(),pe(this,"float32")};z.prototype.toInt=function(){return this.throwIfDisposed(),pe(this,"int32")};z.prototype.topk=function(e,t){return this.throwIfDisposed(),gb(this,e,t)};z.prototype.transpose=function(e){return this.throwIfDisposed(),Ue(this,e)};z.prototype.unique=function(e){return this.throwIfDisposed(),Jh(this,e)};z.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),yb(this,e,t)};z.prototype.unstack=function(e){return this.throwIfDisposed(),pt(this,e)};z.prototype.where=function(e,t){return this.throwIfDisposed(),In(e,this,t)};z.prototype.zerosLike=function(){return this.throwIfDisposed(),He(this)};var C1={};Oe(C1,{maxNorm:()=>Az,minMaxNorm:()=>Mz,nonNeg:()=>Dz,unitNorm:()=>$z});var Nb;function Ut(){return Nb==null&&(Nb=sk().epsilon()),Nb}function Fa(){return"channelsLast"}var Cr=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Cr.prototype)}},Aa=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Aa.prototype)}},B=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,B.prototype)}},$e=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,$e.prototype)}},E1=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,E1.prototype)}},Rz=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Rz.prototype)}};function Bi(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function er(e,t){if(!e)throw new E1(t)}function _1(e,t){let n=0;for(let a of e)a===t&&n++;return n}function Tn(e){return e.length===1?e[0]:e}function xt(e){return Array.isArray(e)?e:[e]}function Er(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Wi(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var ma={};function Tb(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Sb(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>Sb(t));else{let t=Object.keys(e);for(let n of t){let a=e[n];a!=null&&typeof a=="object"&&(!Array.isArray(a)&&a.type==="ndarray"&&typeof a.value=="number"?e[n]=a.value:Sb(a))}}}function tp(e,t={},n={},a="object",r=!1){if(typeof e=="string"){let s=e,i;if(s in n)i=n[s];else if(s in ma)i=ma[s];else if(i=t[s],i==null)throw new B(`Unknown ${a}: ${e}. This may be due to one of the following reasons:
1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=e;if(s.className==null||s.config==null)throw new B(`${a}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,o,l;if(i in n?[o,l]=n[i]:i in ma?[o,l]=ma.className:i in t&&([o,l]=t[i]),o==null)throw new B(`Unknown ${a}: ${i}. This may be due to one of the following reasons:
1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let c={};for(let h of Object.keys(ma))c[h]=ma[h];for(let h of Object.keys(n))c[h]=n[h];let u=s.config;u.customObjects=c;let p=Object.assign({},ma);for(let h of Object.keys(n))ma[h]=n[h];Sb(s.config);let d=l(o,s.config,n,r);return ma=Object.assign({},p),d}else{let c=Object.assign({},ma);for(let p of Object.keys(n))ma[p]=n[p];let u=new o(s.config);return ma=Object.assign({},c),u}}}function Pz(e,t){return e<t?-1:e>t?1:0}function cm(e,t){return-1*Pz(e,t)}function ls(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function Oz(e){if(e==null)throw new B(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function Vi(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new B(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Cb(e,t,n=0,a=Infinity){return er(n>=0),er(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every(r=>typeof r===t)}function Jt(e,t){Array.isArray(e)?(k.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,a)=>Jt(n,`element ${a+1} of ${t}`))):k.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${F1(e)}.`)}function F1(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>F1(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function Lz(e,t){let n=k.now(),a;return(...r)=>{let s=k.now();return s-n<t||(n=s,a=e(...r)),a}}function A1(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}function Eb(e,t){return D(()=>rn(Ce(L(e,e),t,!0)))}var np=class extends se.Serializable{getConfig(){return{}}},_b=class extends np{constructor(e){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return D(()=>{let t=Eb(e,this.axis),n=Yt(t,0,this.maxValue);return L(e,ve(n,Z(Ut(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};_b.className="MaxNorm";se.registerClass(_b);var Fb=class extends np{constructor(e){super();this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return D(()=>ve(e,Z(Ut(),Eb(e,this.axis))))}getConfig(){return{axis:this.axis}}};Fb.className="UnitNorm";se.registerClass(Fb);var Ab=class extends np{apply(e){return Xe(e)}};Ab.className="NonNeg";se.registerClass(Ab);var $b=class extends np{constructor(e){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return D(()=>{let t=Eb(e,this.axis),n=Z(L(this.rate,Yt(t,this.minValue,this.maxValue)),L(1-this.rate,t));return L(e,ve(n,Z(Ut(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};$b.className="MinMaxNorm";se.registerClass($b);var $1={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Gt(e){return Tb(e)}function D1(e,t={}){return tp(e,se.SerializationMap.getMap().classNameMap,t,"constraint")}function Ht(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in $1?$1[e]:e,config:{}};return D1(t)}else return e instanceof np?e:D1(e)}function Az(e){return new _b(e)}function $z(e){return new Fb(e)}function Dz(){return new Ab}function Mz(e){return new $b(e)}var M1={};Oe(M1,{constant:()=>Wz,glorotNormal:()=>Kz,glorotUniform:()=>qz,heNormal:()=>Xz,heUniform:()=>Yz,identity:()=>Hz,leCunNormal:()=>Jz,leCunUniform:()=>Zz,ones:()=>Bz,orthogonal:()=>Qz,randomNormal:()=>Uz,randomUniform:()=>Vz,truncatedNormal:()=>Gz,varianceScaling:()=>jz,zeros:()=>zz});var eB=["channelsFirst","channelsLast"],tB=["nearest","bilinear"],nB=["valid","same","causal"],aB=["max","avg"],rB=["sum","mul","concat","ave"],ru=new Map;function Rt(e){Vi(eB,"DataFormat",e)}function sB(e){Vi(tB,"InterpolationFormat",e)}function aa(e){Vi(nB,"PaddingMode",e)}function R1(e){Vi(aB,"PoolMode",e)}var ap=[],P1="/";function Ui(e,t){ap.push(e);try{let n=t();return ap.pop(),n}catch(n){throw ap.pop(),n}}function iB(){return ap.length===0?"":ap.join(P1)+P1}function L1(e){if(!O1(e))throw new Error("Not a valid tensor name: '"+e+"'");return iB()+e}function z1(e){if(!O1(e))throw new Error("Not a valid tensor name: '"+e+"'");ru.has(e)||ru.set(e,0);let t=ru.get(e);if(ru.set(e,ru.get(e)+1),t>0){let n=`${e}_${t}`;return ru.set(n,1),n}else return e}var oB=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function O1(e){return!!e.match(oB)}function lB(e){return e===parseInt(e.toString(),10)}function us(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let a=1;for(let r=t;r<n;++r)a*=e[r];return a}function B1(e){return e=Array.isArray(e)?new Float32Array(e):e,tt(e)}function su(e){return Zl(B1(e)).dataSync()[0]}function cs(e){return ta(B1(e)).dataSync()[0]}function $a(e,t){if(t<e)throw new B(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let a=e;a<t;++a)n.push(a);return n}function rp(e,t){return e.asType(t)}function sp(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function uB(e,t){return D(()=>{if(e.shape.length!==2)throw new B(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=sp(e,1);return Db(n,[1,t,1])})}function cB(e){let t=[us(e.shape)];return e.reshape(t)}function pB(e){if(e.rank<=1)throw new B(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],us(e.shape,1)];return e.reshape(t)}function Gi(e,t,n){return D(()=>{switch(e.rank){case 1:return Kh(e,t,n);case 2:return hb(e,[t,0],[n,e.shape[1]]);case 3:return eu(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Yc(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return We(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return We(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new B(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Mb(e,t,n){return D(()=>{switch(e.rank){case 1:return Kh(e,t,n);case 2:return hb(e,[0,t],[e.shape[0],n]);case 3:return eu(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Yc(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new B(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function pm(e,t,n,a){return D(()=>{switch(e.rank){case 1:return Kh(e,t,n);case 2:switch(a){case 1:return Gi(e,t,n);case 2:return Mb(e,t,n);default:throw new B(`The axis is not within the rank of the tensor ${a}`)}case 3:switch(a){case 1:return Gi(e,t,n);case 2:return eu(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Mb(e,t,n);default:throw new B(`The axis is not within the rank of the tensor ${a}`)}case 4:switch(a){case 1:return Gi(e,t,n);case 2:return Yc(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Yc(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Mb(e,t,n);default:throw new B(`The axis is not within the rank of the tensor ${a}`)}default:throw new B(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Rb(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),Ze(e,t)}function W1(e,t){switch(e.rank){case 1:return mk([e,t]);case 2:return fk([e,t],0);case 3:return gk([e,t],0);case 4:return yk([e,t],0);default:throw new B(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Db(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new B(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Ka(e,t)}function dm(e,t=0,n=1,a,r){return Mk(e,t,n,a,r)}function tr(e,t,n,a){if(e.rank<2||t.rank<2)throw new $e(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let r=e.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(r!==s)throw new $e(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2){let r=!1,s=!1;return os.matMul({a:e,b:t,transposeA:r,transposeB:s,bias:a?Pb(e.rank,a,Fa()):null,activation:n})}else{let r=e.shape.slice(),s=r.pop();e=e.reshape([-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),c=[...i,o],u=Array.from({length:t.rank},(m,f)=>f===0?t.rank-2:f<=t.rank-2?f-1:f);t=t.transpose(u).reshape([l,-1]);let p=[...r,...c],d=!1,h=!1;return os.matMul({a:e,b:t,transposeA:d,transposeB:h,bias:a?Pb(e.rank,a,Fa()):null,activation:n}).reshape(p)}}function V1(e,t,n){return D(()=>(Array.isArray(t)?t=tt(t,"int32"):t=t.toInt(),Mi(e,t,n)))}function ip(e){return L(e,e)}function Pb(e,t,n){let a=t.shape;if(t.rank!==1&&t.rank!==e)throw new B(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return a.length===1?t.reshape([1,a[0],1,1,1]):t.reshape([1,a[3],a[0],a[1],a[2]]);if(n==="channelsLast")return a.length===1?t.reshape([1,1,1,1,a[0]]):t.reshape([1].concat(a))}else if(e===4){if(n==="channelsFirst")return a.length===1?t.reshape([1,a[0],1,1]):t.reshape([1,a[2],a[0],a[1]]);if(n==="channelsLast")return a.length===1?t.reshape([1,1,1,a[0]]):t.reshape([1].concat(a))}else if(e===3){if(n==="channelsFirst")return a.length===1?t.reshape([1,a[0],1]):t.reshape([1,a[1],a[0]]);if(n==="channelsLast")return a.length===1?t.reshape([1,1,a[0]]):t.reshape([1].concat(a))}else if(e<3)return t;throw new B(`Unsupported input rank by biasAdd: ${t.rank}`)}function nr(e,t,n){return D(()=>(n==null&&(n=Fa()),Rt(n),e.add(Pb(e.rank,t,n))))}function dB(e,t=1){if(t!==1)throw new $e(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Xl(e)}function hB(e){return D(()=>ve(e,Wt(e).add(1)))}function U1(e,t,n,a){return D(()=>n1(e,t,n,a))}function mB(e){return D(()=>{let t=Z(.5,L(.2,e));return Yt(t,0,1)})}function op(e,t,n=!1){return n?e():t()}var fB=["fanIn","fanOut","fanAvg"],gB=["normal","uniform","truncatedNormal"];function yB(e){Vi(fB,"FanMode",e)}function bB(e){Vi(gB,"Distribution",e)}var fa=class extends se.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Ob=class extends fa{apply(e,t){return bt(e,t)}};Ob.className="Zeros";se.registerClass(Ob);var hm=class extends fa{apply(e,t){return Ya(e,t)}};hm.className="Ones";se.registerClass(hm);var Lb=class extends fa{constructor(e){super();if(typeof e!="object")throw new B(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new B(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return D(()=>L(de(this.value),Ya(e,t)))}getConfig(){return{value:this.value}}};Lb.className="Constant";se.registerClass(Lb);var zb=class extends fa{constructor(e){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Ql(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};zb.className="RandomUniform";se.registerClass(zb);var Bb=class extends fa{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new $e(`randomNormal does not support dType ${t}.`);return dm(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Bb.className="RandomNormal";se.registerClass(Bb);var Wb=class extends fa{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new $e(`truncatedNormal does not support dType ${t}.`);return Yh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Wb.className="TruncatedNormal";se.registerClass(Wb);var Vb=class extends fa{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return D(()=>{if(e.length!==2||e[0]!==e[1])throw new B("Identity matrix initializer can only be used for 2D square matrices.");return L(this.gain,tb(e[0]))})}getConfig(){return{gain:this.gain}}};Vb.className="Identity";se.registerClass(Vb);function xB(e,t="channelsLast"){let n,a;if(Rt(t),e.length===2)n=e[0],a=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let r=us(e,2);n=e[1]*r,a=e[0]*r}else if(t==="channelsLast"){let r=us(e,0,e.length-2);n=e[e.length-2]*r,a=e[e.length-1]*r}}else{let r=us(e);n=Math.sqrt(r),a=Math.sqrt(r)}return[n,a]}var Sn=class extends fa{constructor(e){super();if(e.scale<0)throw new B(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,yB(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,bB(this.distribution),this.seed=e.seed}apply(e,t){let n=xB(e),a=n[0],r=n[1],s=this.scale;if(this.mode==="fanIn"?s/=Math.max(1,a):this.mode==="fanOut"?s/=Math.max(1,r):s/=Math.max(1,(a+r)/2),this.distribution==="normal"){let i=Math.sqrt(s);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new $e(`${this.getClassName()} does not support dType ${t}.`);return Yh(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*s);return Ql(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Sn.className="VarianceScaling";se.registerClass(Sn);var mm=class extends Sn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Sn.className}};mm.className="GlorotUniform";se.registerClass(mm);var fm=class extends Sn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Sn.className}};fm.className="GlorotNormal";se.registerClass(fm);var gm=class extends Sn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Sn.className}};gm.className="HeNormal";se.registerClass(gm);var ym=class extends Sn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Sn.className}};ym.className="HeUniform";se.registerClass(ym);var bm=class extends Sn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Sn.className}};bm.className="LeCunNormal";se.registerClass(bm);var xm=class extends Sn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Sn.className}};xm.className="LeCunNormal";se.registerClass(xm);var Ub=class extends fa{constructor(e){super();if(this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new $e("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return D(()=>{if(e.length<2)throw new $e("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,a=dm(n,0,1,"float32"),r=f1.gramSchmidt(a);return e[0]>e[1]&&(r=r.transpose()),L(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}};Ub.className="Orthogonal";se.registerClass(Ub);var G1={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function H1(e,t={}){return tp(e,se.SerializationMap.getMap().classNameMap,t,"initializer")}function Et(e){return Tb(e)}function wt(e){if(typeof e=="string"){let t=e in G1?G1[e]:e;if(t==="GlorotNormal")return new fm;if(t==="GlorotUniform")return new mm;if(t==="HeNormal")return new gm;if(t==="HeUniform")return new ym;if(t==="LeCunNormal")return new bm;if(t==="LeCunUniform")return new xm;{let n={};return n.className=t,n.config={},H1(n)}}else return e instanceof fa?e:H1(e)}function zz(){return new Ob}function Bz(){return new hm}function Wz(e){return new Lb(e)}function Vz(e){return new zb(e)}function Uz(e){return new Bb(e)}function Gz(e){return new Wb(e)}function Hz(e){return new Vb(e)}function jz(e){return new Sn(e)}function qz(e){return new mm(e)}function Kz(e){return new fm(e)}function Xz(e){return new gm(e)}function Yz(e){return new ym(e)}function Jz(e){return new bm(e)}function Zz(e){return new xm(e)}function Qz(e){return new Ub(e)}var j1={};Oe(j1,{Layer:()=>qe,RNN:()=>ar,RNNCell:()=>lp,activation:()=>RB,add:()=>GB,alphaDropout:()=>CW,average:()=>HB,averagePooling1d:()=>Gb,averagePooling2d:()=>Hb,averagePooling3d:()=>jb,avgPool1d:()=>eW,avgPool2d:()=>nW,avgPool3d:()=>rW,avgPooling1d:()=>tW,avgPooling2d:()=>aW,avgPooling3d:()=>sW,batchNormalization:()=>JB,bidirectional:()=>xW,concatenate:()=>jB,conv1d:()=>CB,conv2d:()=>EB,conv2dTranspose:()=>_B,conv3d:()=>FB,convLstm2d:()=>fW,convLstm2dCell:()=>gW,cropping2D:()=>$B,dense:()=>PB,depthwiseConv2d:()=>MB,dot:()=>YB,dropout:()=>OB,elu:()=>wB,embedding:()=>UB,flatten:()=>zB,gaussianDropout:()=>SW,gaussianNoise:()=>TW,globalAveragePooling1d:()=>iW,globalAveragePooling2d:()=>oW,globalMaxPool1d:()=>wW,globalMaxPool2d:()=>kW,globalMaxPooling1d:()=>K1,globalMaxPooling2d:()=>X1,gru:()=>uW,gruCell:()=>cW,input:()=>q1,inputLayer:()=>vB,layerNormalization:()=>ZB,leakyReLU:()=>IB,lstm:()=>pW,lstmCell:()=>dW,masking:()=>EW,maxPool1d:()=>IW,maxPool2d:()=>NW,maxPooling1d:()=>Y1,maxPooling2d:()=>J1,maxPooling3d:()=>lW,maximum:()=>qB,minimum:()=>KB,multiply:()=>XB,permute:()=>VB,prelu:()=>NB,reLU:()=>kB,repeatVector:()=>BB,reshape:()=>WB,rnn:()=>yW,separableConv2d:()=>AB,simpleRNN:()=>hW,simpleRNNCell:()=>mW,softmax:()=>TB,spatialDropout1d:()=>LB,stackedRNNCells:()=>bW,thresholdedReLU:()=>SB,timeDistributed:()=>vW,upSampling2d:()=>DB,zeroPadding2d:()=>QB});var _W=0;function Z1(){return _W++}var vm={};function wm(e=""){return e in vm||(vm[e]=0),vm[e]+=1,e+vm[e].toString()}function qb(e){return Array.isArray(e)&&Array.isArray(e[0])}function km(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Re(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new B(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function dt(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new B(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function Im(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((a,r)=>a*r);return t}var Q1="Variable",eI=class{constructor(e,t="float32",n=Q1,a=!0,r=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=Z1(),n=n==null?Q1:n,this.originalName=L1(n),this.name=z1(this.originalName),this.trainable_=a,this.constraint=r,this.val=Pk(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),FW(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function FW(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function Kb(e){return e.map(t=>t.read())}function Xb(e){e.forEach(t=>{t[0].write(t[1])})}var Zt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Da=class{constructor(e,t,n,a,r,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=i,this.id=Z1(),s!=null&&(this.originalName=L1(s),this.name=z1(this.originalName)),this.rank=t.length}},AW=0,Nm=class{constructor(e,t){this.callArgs=t,this.id=AW++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},$W=0,qe=class extends se.Serializable{constructor(e={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=$W++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=Er(n)+"_"+wm(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),n=[r].concat(e.inputShape)}this.batchInputShape=n;let a=e.dtype;a==null&&(a=e.inputDType),a==null&&(a="float32"),this.dtype=a}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Aa(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new B(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Tn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Tn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Cr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Cr(`Layer ${this.name} is not connected, no input to return.`);return Tn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Cr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Cr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Tn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=xt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=xt(this.inputSpec);if(e.length!==t.length)throw new B(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let a=e[n],r=t[n];if(r==null)continue;let s=a.rank;if(r.ndim!=null&&s!==r.ndim)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${s}`);if(r.maxNDim!=null&&s>r.maxNDim)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${s}`);if(r.minNDim!=null&&s<r.minNDim)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${s}.`);if(r.dtype!=null&&a.dtype!==r.dtype)throw new B(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${a.dtype}.`);if(r.axes){let i=a.shape;for(let o in r.axes){let l=Number(o),c=r.axes[o],u=l>=0?i[l]:i[i.length+l];if(c!=null&&[c,null].indexOf(u)===-1)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${c} but got shape ${i}.`)}}if(r.shape!=null)for(let i=0;i<r.shape.length;++i){let o=r.shape[i],l=a.shape[i];if(o!=null&&l!=null&&o!==l)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${a.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=xt(e),a=!0;for(let s of n)if(!(s instanceof Da)){a=!1;break}let r=!0;for(let s of n)if(s instanceof Da){r=!1;break}if(a===r)throw new B("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ui(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let s=[];for(let i of xt(e))s.push(i.shape);this.build(Tn(s)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let s=this.call(e,t),i=xt(s),o=[];for(let l of i)n.indexOf(l)!==-1&&(l=l.clone()),o.push(l);if(s=Tn(o),this.activityRegularizer!=null)throw new $e("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}else{let s=DW(e),i=this.computeOutputShape(s),o,l=MW(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?s[0]:s),i!=null&&i.length>0&&Array.isArray(i[0])?o=i.map((c,u)=>new Da(l,c,this,xt(e),t,this.name,u)):o=new Da(l,i,this,xt(e),t,this.name),this.addInboundNode(e,o,null,null,s,i,t),this._refCount++,this.activityRegularizer!=null)throw new $e("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,a)=>{n!=null&&e[a]!=null&&e[a]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Cr(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Cr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Aa(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Im(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Kb(e?this.trainableWeights:this.weights)}setWeights(e){D(()=>{let t=this.weights;if(t.length!==e.length)throw new B(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],a=Kb(t);for(let r=0;r<a.length;++r){let s=a[r],i=t[r],o=e[r];if(!k.arraysEqual(s.shape,o.shape))throw new B(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Xb(n)})}addWeight(e,t,n,a,r,s,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new B(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(a=wt("zeros"));let o=a.apply(t,n),l=new eI(o,n,e,s,i);return o.dispose(),r!=null&&this.addLoss(()=>r.apply(l.read())),s==null&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=xt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,a,r,s,i=null){let o=xt(e);t=xt(t),n=xt(n),a=xt(a),r=km(r),s=km(s);let l=[],c=[],u=[];for(let p of o)l.push(p.sourceLayer),c.push(p.nodeIndex),u.push(p.tensorIndex);new Nm({outboundLayer:this,inboundLayers:l,nodeIndices:c,tensorIndices:u,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:s},i);for(let p=0;p<t.length;p++)t[p].sourceLayer=this,t[p].nodeIndex=this.inboundNodes.length-1,t[p].tensorIndex=p}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount==0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function DW(e){e=xt(e);let t=[];for(let n of e)t.push(n.shape);return Tn(t)}function MW(e){return"float32"}function tI(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let a=t.inboundNodes[n];if(a.inboundLayers.length===0)return a.inputTensors;{let r=[];for(let s=0;s<a.inboundLayers.length;s++){let i=a.inputTensors[s],o=a.inboundLayers[s],l=a.nodeIndices[s],c=tI(i,o,l);for(let u of c)r.indexOf(u)===-1&&r.push(u)}return r}}}var iu=class extends qe{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:wm("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new B("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new B("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new B("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let a=new Da(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Nm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new B(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};iu.className="InputLayer";se.registerClass(iu);function nI(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new B("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new iu({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function ps(e){if(e==null)return;let t=[],n=[],a=[];for(let r in e){let s=e[r];if(typeof s!="number"){let i=s;t.push(i.data()),n.push(r),a.push(i)}}if(t.length>0){let r=await Promise.all(t);for(let s=0;s<r.length;++s)e[n[s]]=r[s][0];Ae(a)}}function aI(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var rI;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(rI||(rI={}));var RW=125,ou=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},sI=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},PW=class extends ou{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let a in t){let r=t[a];if(typeof r=="number")this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+r*n;else{let s;a in this.totals?s=this.totals[a]:this.totals[a]=0;let i=D(()=>Z(this.totals[a],L(r,n)));this.totals[a]=i,s!=null&&s.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:D(()=>{let a=L(ve(1,this.seen),this.totals[n]);t[n]=a,this.totals[n].dispose(),Xt(t[n])}))}},iI=class extends ou{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let s=this.history[r];for(let i=0;i<s.length;++i)if(typeof s[i]!="number"){let o=s[i];e.push(o.data()),t.push(r),n.push(i)}}let a=await Promise.all(e);for(let r=0;r<a.length;++r)this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=a[r][0]}},oI=class extends ou{constructor(e,t){super();if(this.currentEpoch=0,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=RW),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");k.isNumber(this.yieldEvery)&&(this.maybeWait=Lz(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let a=[];this.yield!=null&&(await ps(n),a.push(this.yield(e,t,n))),a.push(um()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await ps(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await ps(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(um()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await ps(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await ps(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(um()):k.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await ps(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await ps(e),await this.trainEnd(e))}};function lI(e,t){return e==null&&(e={}),e instanceof ou?[e]:Array.isArray(e)&&e[0]instanceof ou?e:xt(e).map(n=>new oI(n,t))}var ga=class{constructor(){}static registerCallbackConstructor(e,t){k.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),ga.checkForDuplicate(t),ga.constructors[e]==null&&(ga.constructors[e]=[]),ga.constructors[e].push(t)}static checkForDuplicate(e){for(let t in ga.constructors)ga.constructors[+t].forEach(n=>{if(n===e)throw new B("Duplicate callback constructor.")})}static clear(){ga.constructors={}}static createCallbacks(e){let t=[];for(let n in ga.constructors){let a=+n;e>=a&&t.push(...ga.constructors[a])}return t.map(n=>new n)}};ga.constructors={};function uI(e,t,n,a,r,s,i,o,l){let c=new iI,u=[new PW,...ga.createCallbacks(t)];e!=null&&u.push(...e),u.push(c);let p=new sI(u);return p.setParams({epochs:n,initialEpoch:a,samples:r,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:p,history:c}}function Ma(e,t={},n=!1){return tp(e,se.SerializationMap.getMap().classNameMap,t,"layer",n)}function Tm(e,t){return D(()=>{e.dtype!=="float32"&&(e=e.asType("float32"));let n=Ce(ip(e),t,!0),a=Nn(n.shape,Ut()),r=rn(Sa(n,a));return ve(e,r)})}function Hi(e,t){return D(()=>Ct(ip(fe(t,e)),-1))}function Sm(e,t){return D(()=>Ct(Wt(fe(t,e)),-1))}function lu(e,t){return D(()=>{let n=fe(e,t),a=Yt(Wt(e),Ut(),Number.MAX_VALUE),r=Wt(ve(n,a));return L(100,Ct(r,-1))})}function OW(e,t){return D(()=>{let n=Yt(t,Ut(),Number.MAX_VALUE),a=Dn(Z(1,n)),r=Yt(e,Ut(),Number.MAX_VALUE),s=Dn(Z(1,r));return Ct(ip(fe(a,s)),-1)})}function LW(e,t){return D(()=>{let n=Sa(0,fe(1,L(e,t)));return Ct(ip(n),-1)})}function zW(e,t){return D(()=>{let n=Sa(0,fe(1,L(e,t)));return Ct(n,-1)})}function BW(e,t){return D(()=>{let n=Ce(L(e,t),-1),a=ta(L(fe(1,e),t),-1);return Sa(0,Z(1,fe(a,n)))})}function WW(e,t){return D(()=>{let n=Math.log(2),a=fe(t,e),r=fe(Z(a,Jl(L(-2,a))),n);return Ct(r,-1)})}function up(e,t,n=!1){return D(()=>{if(n)t=Ca(t);else{let a=Ce(t,t.shape.length-1,!0);t=ve(t,a)}return t=Yt(t,Ut(),1-Ut()),St(Ce(L(e.toFloat(),Dn(t)),t.shape.length-1))})}function Cm(e,t,n=!1){return D(()=>{let a=Yl(cB(e)).toInt();t=Yt(t,Ut(),1-Ut());let r=t.shape,s=Hl(a,r[r.length-1]).reshape(r);return up(s,t,n)})}function VW(e,t){if(!k.arraysEqual(e.shape,t.shape))throw new B(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return D(()=>{let n=t.relu(),a=t.abs().neg();return n.sub(t.mul(e)).add(a.exp().log1p())})}function Em(e,t){return D(()=>{let n;return n=Yt(t,Ut(),1-Ut()),n=Dn(ve(n,fe(1,n))),Ct(VW(e,n),-1)})}function UW(e,t){return D(()=>{let n=Yt(e,Ut(),1),a=Yt(t,Ut(),1);return Ce(L(e,Dn(ve(n,a))),-1)})}function GW(e,t){return D(()=>{let n=Dn(Z(Ut(),t));return Ct(fe(t,L(e,n)),-1)})}function Yb(e,t){return D(()=>{let n=Tm(e,-1),a=Tm(t,-1),r=L(n,a);return St(Ce(r,-1))})}var _m={meanSquaredError:Hi,meanAbsoluteError:Sm,meanAbsolutePercentageError:lu,meanSquaredLogarithmicError:OW,squaredHinge:LW,hinge:zW,categoricalHinge:BW,logcosh:WW,categoricalCrossentropy:up,sparseCategoricalCrossentropy:Cm,binaryCrossentropy:Em,kullbackLeiblerDivergence:UW,poisson:GW,cosineProximity:Yb};function Jb(e){if(typeof e=="string"){if(e in _m)return _m[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new B(t)}else return e}function Zb(e,t){return D(()=>{let n=L(.5,Mn(t)),a=rp(ea(t,n),e.dtype);return Ct(Ir(e,a),-1)})}function Qb(e,t){return D(()=>rp(Ir(zc(e,-1),zc(t,-1)),"float32"))}function cI(e,t){return D(()=>ha(e.equal(1),t.equal(1)).sum().cast("float32"))}function HW(e,t){return D(()=>ha(e.equal(1),t.equal(0)).sum().cast("float32"))}function jW(e,t){return D(()=>ha(e.equal(0),t.equal(1)).sum().cast("float32"))}function pI(e,t){return D(()=>{let n=cI(e,t),a=jW(e,t),r=n.add(a);return In(ea(r,0),n.div(r),0).cast("float32")})}function qW(e,t){return D(()=>{let n=cI(e,t),a=HW(e,t),r=n.add(a);return In(ea(r,0),n.div(r),0).cast("float32")})}function dI(e,t){return Em(e,t)}function hI(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),t=t.argMax(-1),t.dtype!==e.dtype&&(t=t.asType(e.dtype)),Ir(e,t).asType("float32")}var KW=Hi,XW=Hi,YW=Sm,JW=Sm,ZW=lu,QW=lu,ex=up,e4=Yb,mI=Cm,Fm={binaryAccuracy:Zb,categoricalAccuracy:Qb,precision:pI,categoricalCrossentropy:ex,sparseCategoricalCrossentropy:mI,mse:KW,MSE:XW,mae:YW,MAE:JW,mape:ZW,MAPE:QW,cosine:e4};function t4(e){if(typeof e=="string"&&e in Fm)return Fm[e];if(typeof e!="string"&&e!=null)return e;throw new B(`Unknown metric ${e}`)}function Am(e){if(er(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(_m))if(_m[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(Fm))if(Fm[n]===e){t=n;break}return t!==void 0?t:e.name}}function n4(e){let t={Adagrad:()=>zi.adagrad(.01),Adadelta:()=>zi.adadelta(1,.95,Ut()),Adam:()=>zi.adam(.001,.9,.999,Ut()),Adamax:()=>zi.adamax(.002,.9,.999,Ut(),0),RMSProp:()=>zi.rmsprop(.001,.9,0,Ut()),SGD:()=>zi.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new B(`Unknown Optimizer ${e}`)}var fI=1*1024*1024;function gI(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!tx(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let a=JSON.stringify(e);a.length>fI&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${a.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${fI}.`)}}function tx(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!tx(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!tx(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function o4(e,t,n,a=console.log){let r=r4(e),s=["Layer (type)","Output shape","Param #"];r?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(u=>Math.floor(t*u)));let i;if(!r){s.push("Receives inputs"),i=[];for(let u in e.nodesByDepth)i.push(...e.nodesByDepth[u])}a("_".repeat(t)),$m(s,n,a),a("=".repeat(t));let o=e.layers;for(let u=0;u<o.length;++u)r?s4(o[u],n,a):i4(o[u],n,i,a),a((u===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=a4(e),c=Im(e.nonTrainableWeights);a(`Total params: ${l+c}`),a(`Trainable params: ${l}`),a(`Non-trainable params: ${c}`),a("_".repeat(t))}function a4(e){let t;return e.collectedTrainableWeights!=null?t=Im(e.collectedTrainableWeights):t=Im(e.trainableWeights),t}function r4(e){let t=!0,n=[],a=[];for(let r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(let r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}a.push(...r)}if(t)for(let r of e.layers){let s=!1;for(let i of r.inboundNodes)if(a.indexOf(i)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function $m(e,t,n=console.log){let a="";for(let r=0;r<e.length;++r)r>0&&(a=a.slice(0,a.length-1)+" "),a+=e[r],a=a.slice(0,t[r]),a+=" ".repeat(t[r]-a.length);n(a)}function s4(e,t,n){let a;try{a=JSON.stringify(e.outputShape)}catch(o){a="multiple"}let r=e.name,s=e.getClassName(),i=[`${r} (${s})`,a,e.countParams().toString()];$m(i,t,n)}function i4(e,t,n,a){let r;try{r=JSON.stringify(e.outputShape)}catch(u){r="multiple"}let s=[];for(let u of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(u)===-1))for(let p=0;p<u.inboundLayers.length;++p){let d=u.inboundLayers[p].name,h=u.nodeIndices[p],m=u.tensorIndices[p];s.push(`${d}[${h}][${m}]`)}let i=e.name,o=e.getClassName(),l=s.length===0?"":s[0],c=[`${i} (${o})`,r,e.countParams().toString(),l];$m(c,t,a);for(let u=1;u<s.length;++u)$m(["","","",s[u]],t,a)}function yI(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function cp(e,t){if(e===null)return null;if(typeof e=="string")return Wi(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],a=e.length;for(let r=0;r<a;++r){let s=e[r];yI(t,r,s)?n.push(s):n.push(cp(s,t))}return n}else{let n={};for(let a of Object.keys(e)){let r=e[a];if(a==="name"&&typeof r=="string")n[a]=r;else{let s=Wi(a);n[s]=cp(r,s)}}return n}}function nx(e,t){if(e==null)return null;if(typeof e=="string")return Er(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],a=e.length;for(let r=0;r<a;++r){let s=e[r];yI(t,r,s)?n.push(s):n.push(nx(s,t))}return n}else{let n={};for(let a of Object.keys(e)){let r=e[a],s=Er(a);(a==="name"||a==="className")&&typeof r=="string"?n[s]=r:n[s]=nx(r,a)}return n}}var Dm="2.8.3";function l4(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return pe(t,e.dtype)}catch(n){throw new B(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var ji=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof ji)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=l4(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new B(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Da){if(this.id2Value[e.id]==null)throw new B(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new B(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Da){if(this.id2Value[e.id]==null)throw new B(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new B(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Ae(this.id2Mask)}},ax={},bI={};function pp(e,t,n,a){let r=n==null?!1:n.training,s=Array.isArray(e),i=s?e:[e],o=i.map(m=>m.name),l=[],c=t.names();for(let m of o)c.indexOf(m)!==-1?l.push(t.getValue(m)):l.push(null);a!=null&&(a.maxNumTensors=-Infinity,a.minNumTensors=Infinity);let u=o.join(",")+"|"+t.names().join(","),p,d;if(ax[u]==null){let m=u4(i,t);p=m.sorted,d=m.recipientCounts,ax[u]=p,bI[u]=d}p=ax[u],d={},r||Object.assign(d,bI[u]);let h=new ji(t);for(let m=0;m<p.length;++m){if(a!=null){let $=Th().numTensors;$>a.maxNumTensors&&(a.maxNumTensors=$),$<a.minNumTensors&&(a.minNumTensors=$)}let f=p[m],g=f.sourceLayer;if(g instanceof iu)continue;let y=[],b=[],x=[],v=!1;for(let $ of f.inputs){let O=h.getValue($),V=h.getMask($);y.push(O),b.push(V),V!=null&&(v=!0),r||(d[$.name]--,d[$.name]===0&&!t.hasKey($)&&o.indexOf($.name)===-1&&!O.isDisposed&&$.sourceLayer.stateful!==!0&&x.push(O))}v&&(n=n||{},n.mask=b[0]);let N=xt(g.apply(y,n)),T=null;g.supportsMasking&&(T=g.computeMask(y,b));let E=c4(f),A=Array.isArray(E)?E:[E];for(let $=0;$<A.length;++$){h.hasKey(A[$])||h.add(A[$],N[$],Array.isArray(T)?T[0]:T);let O=o.indexOf(A[$].name);O!==-1&&(l[O]=N[$])}r||Ae(x)}return h.disposeMasks(),s?l:l[0]}function u4(e,t){k.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],a={};if(e.length===1){let r=xI(e[0],t);n=r.sorted,a=r.recipientMap}else{let r=new Set;for(let s of e){let{sorted:i,recipientMap:o}=xI(s,t);for(let l of i)r.has(l.name)||(n.push(l),r.add(l.name));for(let l in o)a[l]==null&&(a[l]=new Set),o[l].forEach(c=>a[l].add(c))}}return{sorted:n,recipientCounts:p4(a)}}function p4(e){let t={};for(let n in e)t[n]=e[n].size;return t}function xI(e,t){let n=new Set,a=[],r={};for(let o of t.names())n.add(o);let s=[],i=[];for(s.push(e);s.length>0;){let o=s[s.length-1];if(n.has(o.name)){s.pop();continue}let l=i[i.length-1]===s.length-1;if(o.inputs.length===0||l)s.pop(),a.push(o),n.add(o.name),l&&i.pop();else{i.push(s.length-1);for(let c of o.inputs)r[c.name]==null&&(r[c.name]=new Set),r[c.name].add(o.name),!n.has(c.name)&&s.push(c)}}return{sorted:a,recipientMap:r}}function c4(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let a=0;a<e.sourceLayer.inboundNodes.length;++a)for(let r of e.sourceLayer.inboundNodes[a].outputTensors)if(r.id===e.id){n=a;break}t=e.sourceLayer.getOutputAt(n)}return t}var rr=class extends qe{constructor(e){super({});if(this.containerNodes=new Set,this.name=e.name,this.name==null){let y=this.getClassName().toLowerCase();this.name=wm(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],ls(this.inputs).length!==this.inputs.length)throw new B(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);ls(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let b=y.sourceLayer,x=y.nodeIndex,v=y.tensorIndex;this.outputLayers.push(b),this.outputLayersNodeIndices.push(x),this.outputLayersTensorIndices.push(v)}for(let y of this.inputs){let b=y.sourceLayer,x=y.nodeIndex,v=y.tensorIndex;er(x===0,"input layer has >1 nodes"),er(v===0,"input layer has >1 tensors"),this.inputLayers.push(b),this.inputLayersNodeIndices.push(x),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let b=this.inputLayers[y];if(!(b instanceof iu))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${b.getClassName()}.`);this.inputNames.push(b.name),this.feedInputShapes.push(b.batchInputShape),this.feedInputNames.push(b.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let t={},n={},a={},r={},s={},i=[],o=(y,b,x,v,N,T)=>{(v==null||N==null||T==null)&&(v=y.sourceLayer,N=y.nodeIndex,T=y.tensorIndex);let E=v.inboundNodes[N];if(x.indexOf(E)!==-1)throw new Aa(`The tensor ${y.name} at layer "${v.name}" is part of a cycle.`);if(b.indexOf(E)!==-1)return;this.containerNodes.add(rr.nodeKey(v,N)),v.id in s||(s[v.id]=Object.keys(s).length),x.indexOf(E)===-1&&x.push(E);let A=E.inboundLayers.length;for(let $=0;$<A;$++){let O=E.inputTensors[$],V=E.inboundLayers[$],W=E.nodeIndices[$],H=E.tensorIndices[$];o(O,b,x,V,W,H)}for(b.push(E);x.indexOf(E)>=0;)x.splice(x.indexOf(E),1);i.push(E)},l=[],c=[];for(let y of this.outputs)o(y,l,c);let u=i.slice().reverse();for(let y of u){n[y.id]=y,y.id in t||(t[y.id]=0);let b=t[y.id],x=a[y.outboundLayer.id]==null?0:a[y.outboundLayer.id];b=Math.max(b,x),a[y.outboundLayer.id]=b,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=b;for(let v=0;v<y.inboundLayers.length;v++){let N=y.inboundLayers[v],T=y.nodeIndices[v],E=N.inboundNodes[T],A=t[E.id]==null?0:t[E.id];t[E.id]=Math.max(b+1,A),n[E.id]=E}}let p={};for(let y in t){let b=t[y];b in p||(p[b]=[]),p[b].push(n[y])}let d={};for(let y in a){let b=a[y];b in d||(d[b]=[]),d[b].push(r[y])}let h=Object.keys(d).map(y=>parseInt(y,10)).sort(cm);this.layers=[];for(let y of h){let b=d[y];b.sort((x,v)=>{let N=s[x.id],T=s[v.id];return N<T?-1:N>T?1:0});for(let x of b)x instanceof rr&&this.internalContainerRefs.push(x),this.layers.push(x)}this.layersByDepth=d,h=Object.keys(p).map(y=>parseInt(y,10)).sort(cm);let m=this.inputs.slice(),f=[];for(let y of h)for(let b of p[y]){let x=b.outboundLayer;if(x!=null){for(let v of b.inputTensors)if(m.indexOf(v)===-1)throw new Aa(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${x.name}". The following previous layers were accessed without issue: ${f}`);for(let v of b.outputTensors)m.push(v);f.push(x.name)}}this.nodesByDepth=p;let g=this.layers.map(y=>y.name);for(let y of g){let b=g.filter(x=>x===y).length;if(b!==1)throw new Aa(`The name "${y}" is used ${b} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Nm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new B("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},a=0;for(let s of this.layers)for(let i of s.weights){if(n[i.originalName]!=null)throw new B(`Duplicate weight name: ${i.originalName}`);n[i.originalName]=i,a++}let r=[];for(let s in e){let i=s;if(n[s]==null){let o=s.split("/");i=o.slice(0,-2).concat([o[o.length-1]]).join("/")}if(n[i]!=null)r.push([n[i],e[s]]);else if(t)throw new B(`Provided weight data has no target variable: ${s}`);delete n[i]}if(t){let s=[];for(let i in n)s.push(i);if(s.length>0)throw new B(`${s.length} of ${a} weights are not set: ${s}`)}Xb(r)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Dm}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=nx(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return D(()=>{e=xt(e);let n=new ji;for(let a=0;a<this.inputs.length;++a)n.add(this.inputs[a],e[a]);return pp(this.outputs,n,t)})}computeMask(e,t){return D(()=>{e=xt(e);let n;return t==null?n=Bi(null,e.length):n=xt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=km(e);if(t.length!==this.inputLayers.length)throw new B(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let o=this.inputLayers[i],l=t[i],c=o.name+"_0_0";n[c]=l}let a=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(cm);if(a.length>1)for(let i of a){let o=this.nodesByDepth[i];for(let l of o){let c=l.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(c.id)!==-1)continue;let u=[];for(let m=0;m<l.inboundLayers.length;m++){let f=l.inboundLayers[m],g=l.nodeIndices[m],y=l.tensorIndices[m],b=`${f.name}_${g}_${y}`,x=n[b];u.push(x)}let p=c.computeOutputShape(Tn(u)),d=km(p),h=c.inboundNodes.indexOf(l);for(let m=0;m<d.length;m++){let f=`${c.name}_${h}_${m}`;n[f]=d[m]}}}let r=[],s=[];for(let i=0;i<this.outputLayers.length;i++){let o=this.outputLayers[i],l=this.outputLayersNodeIndices[i],c=this.outputLayersTensorIndices[i],u=`${o.name}_${l}_${c}`;s.push(u)}for(let i=0;i<s.length;i++){let o=s[i];er(o in n),r.push(n[o])}return Tn(r)}runInternalGraph(e,t){t==null&&(t=Bi(null,e.length));let n={};for(let o=0;o<this.inputs.length;++o){let l=this.inputs[o],c=e[o],u=t[o];n[l.id]=[c,u]}let a=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(cm);for(let o of a){let l=this.nodesByDepth[o];for(let c of l){let u=c.outboundLayer,p=c.inputTensors,d=c.outputTensors,h=new Array;for(let m of p)m.id in n&&h.push(n[m.id]);if(h.length===p.length){let m={},f,g,y,b;if(c.callArgs!=null&&(m=c.callArgs),h.length===1){let[x,v]=h[0];m.mask==null&&(m.mask=v),y=xt(u.call(x,m)),b=xt(u.computeMask(x,v)),f=[x],g=[v]}else f=h.map(x=>x[0]),g=h.map(x=>x[1]),m.mask==null&&(m.mask=g),y=xt(u.call(f,m)),b=xt(u.computeMask(f,g));if(u.activityRegularizer)throw new $e("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let x=0;x<d.length;++x){let v=d[x],N=y[x],T=b[x];n[v.id]=[N,T]}}}}let r=[],s=[],i=[];for(let o of this.outputs){er(o.id in n,`Could not compute output ${o.name} : ${o.id}`);let[l,c]=n[o.id];i.push(l.shape),r.push(l),s.push(c)}return[r,s,i]}buildNodeConversionMap(e){let t={},n;for(let a of this.layers){n=a instanceof rr?1:0;for(let r=0;r<a.inboundNodes.length;r++){let s=rr.nodeKey(a,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new B(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new B("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new B(`No such layer: ${e}`)}calculateLosses(){return D(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let a=rr.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let s of this.layers){let i=s.getClassName(),o=s.getConfig(),l=[];for(let u=0;u<s.inboundNodes.length;u++){let p=s.inboundNodes[u],d=rr.nodeKey(s,u),h={};if(this.containerNodes.has(d)){if(p.callArgs)try{JSON.stringify(p.callArgs),h=p.callArgs}catch(m){console.warn(`Layer ${s.name} was passed non-serializable keyword arguments: ${p.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(p.inboundLayers.length>0){let m=[];for(let f=0;f<p.inboundLayers.length;f++){let g=p.inboundLayers[f],y=p.nodeIndices[f],b=p.tensorIndices[f],x=rr.nodeKey(g,y),v=t[x];v==null&&(v=0),m.push([g.name,v,b,h])}l.push(m)}}}let c={};c.name=s.name,c.className=i,c.config=o,c.inboundNodes=l,n.push(c)}e.layers=n;let a=[];for(let s=0;s<this.inputLayers.length;s++){let i=this.inputLayers[s],o=this.inputLayersNodeIndices[s],l=rr.nodeKey(i,o);if(!this.containerNodes.has(l))continue;let c=t[l];c==null&&(c=0);let u=this.inputLayersTensorIndices[s];a.push([i.name,c,u])}e.inputLayers=a;let r=[];for(let s=0;s<this.outputLayers.length;s++){let i=this.outputLayers[s],o=this.outputLayersNodeIndices[s],l=rr.nodeKey(i,o);if(!this.containerNodes.has(l))continue;let c=t[l];c==null&&(c=0);let u=this.outputLayersTensorIndices[s];r.push([i.name,c,u])}return e.outputLayers=r,e}static fromConfig(e,t,n={},a=!1){let r={},s={};function i(f,g){f.name in s?s[f.name].push(g):s[f.name]=[g]}function o(f,g){let y=[],b;for(let x of g){let v=x[0],N=x[1],T=x[2];if(b=x[3]==null?{}:x[3],!(v in r)){i(f,g);return}let E=r[v];if(E.inboundNodes.length<=N){i(f,g);return}let A=E.inboundNodes[N];y.push(A.outputTensors[T])}y.length>0&&f.apply(Tn(y),b)}function l(f){let g=f.name,y=Ma(f,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(a),r[g]=y,f.inboundNodes.forEach(b=>{if(!(b instanceof Array))throw new B(`Corrupted configuration, expected array for nodeData: ${b}`);i(y,b)})}let c=t.name,u=t.layers;for(let f of u)l(f);for(;!Oz(s);)for(let f of u){let g=r[f.name];if(g.name in s){let y=s[g.name];delete s[g.name];for(let b of y)o(g,b)}}let p=[],d=[],h=t.inputLayers;for(let f of h){let g=f[0],y=f[1],b=f[2];er(g in r);let x=r[g].inboundNodes[y].outputTensors;p.push(x[b])}let m=t.outputLayers;for(let f of m){let g=f[0],y=f[1],b=f[2];er(g in r);let x=r[g].inboundNodes[y].outputTensors;d.push(x[b])}return new e({inputs:p,outputs:d,name:c})}get stateful(){if(this._stateful)throw new B("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){D(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function d4(e,t,n){let a=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>null);if(a===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${a} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let r=[];return t.forEach(s=>{s in e?r.push(e[s]):r.push(null)}),r}else throw new Error(`The model has multiple (${a}) outputs, so ${n} must be either an array with ${a} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function vI(e,t){return d4(e,t,"classWeight")}async function wI(e,t,n,a){if(t!=null||a!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let r=D(()=>{if(e.shape.length===1)return e.clone();if(e.shape.length===2)if(e.shape[1]>1){let o=1;return e.argMax(o)}else{if(e.shape[1]===1)return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await r.data());Ae(r);let i=[];return s.forEach(o=>{if(n[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(n[o])}),tt(i,"float32")}else return null}function h4(e,t){return L(e,t)}var m4=32;function II(e,t){let n,a,r=t;n=r.xs,a=r.ys,k.assert(n!=null&&a!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=kI("input",e.inputNames,n),i=kI("output",e.outputNames,a),o=s[0].shape[0];k.assert(s.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),k.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<s.length;l++)k.assert(s[l].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${s[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let l=0;l<i.length;l++)k.assert(i[l].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:s,ys:i}}function kI(e,t,n){if(n instanceof z)return[n];if(Array.isArray(n))return k.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let a=[];for(let r of t){if(n[r]==null)throw new B(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);a.push(n[r])}return a}}function f4(e){if(e.length===3)throw new $e("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function y4(e,t,n){let a=n.batchesPerEpoch!=null;if(k.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),k.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),k.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),k.assert(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),k.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let r=n.validationData!=null,s,i;if(r)if(NI(n.validationData))k.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=f4(n.validationData);s=g.xs,i=g.ys}let o=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),c;r?c=l.slice().concat(l.map(g=>"val_"+g)):c=l.slice();let u=lI(n.callbacks,n.yieldEvery),p=n.verbose==null?1:n.verbose,{callbackList:d,history:h}=uI(u,p,n.epochs,null,null,g4(t,n),null,r,c);d.setModel(e),e.history=h,await d.onTrainBegin(),e.stopTraining_=!1;let m=n.initialEpoch==null?0:n.initialEpoch,f=await t.iterator();for(;m<n.epochs;){let g={};await d.onEpochBegin(m);let y=0,b=0;for(a||(f=await t.iterator());a?y<n.batchesPerEpoch:!0;){let x=await f.next();if(a&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:v,ys:N}=II(e,x.value),T={};T.batch=b,T.size=v[0].shape[0],await d.onBatchBegin(b,T);let E=[];if(n.classWeight!=null){let O=vI(n.classWeight,e.outputNames);for(let V=0;V<O.length;++V)E.push(await wI(N[V],null,O[V]))}let A=v.concat(N).concat(E),$=o(A);Ae(A);for(let O=0;O<l.length;++O){let V=l[O],W=$[O];T[V]=W,Xt(W)}await d.onBatchEnd(b,T),aI(T),b++,y++}if(a?y>=n.batchesPerEpoch:x.done){if(r){let v;NI(n.validationData)?v=xt(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):v=xt(e.evaluate(s,i,{batchSize:n.validationBatchSize==null?m4:n.validationBatchSize,verbose:0}));for(let N=0;N<e.metricsNames.length;++N)g[`val_${e.metricsNames[N]}`]=v[N]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(m,g),m++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function g4(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function NI(e){return typeof e.iterator=="function"}function b4(e){return typeof e.next=="function"}async function x4(e,t,n){n=n||{};let a=n.batches!=null,r=e.testFunction,s=[];if(n.verbose>0)throw new $e("Verbose mode is not implemented yet.");k.assert(!a||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let i=b4(t)?t:await t.iterator(),o=0,l=0;for(;a?l<n.batches:!0;){let c=await i.next();if(s=D(()=>{if(c.value){let{xs:u,ys:p}=II(e,c.value),d=u.concat(p),h=D(()=>r(d));if(Ae(d),l===0)for(let f=0;f<h.length;++f)s.push(de(0));let m=d[0].shape[0];for(let f=0;f<h.length;++f){let g=h[f],y=s[f];s[f]=D(()=>Z(s[f],L(m,g))),l>0&&Ae(y)}Ae(h),o+=m,++l}return s}),c.done){a&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<s.length;++c){let u=s[c];s[c]=ve(s[c],o),Ae(u)}return Tn(s)}function rx(e){k.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function dp(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(a=>Gi(a,t,n-t)):Gi(e,t,n-t)}function sx(e,t){return D(()=>e==null?null:Array.isArray(e)?e.map(n=>sx(n,t)):V1(e,t.dtype==="int32"?t:t.toInt()))}function ix(e,t){let n=[],a=0,r=null;for(;a<e;)r=a+t,r>=e&&(r=e),n.push([a,r]),a=r;return n}async function v4(e,t,n,a,r,s,i,o,l,c,u,p,d,h,m){r==null&&(r=32),s==null&&(s=1),u==null&&(u=!0),d==null&&(d=0);let f=!1;if(l!=null&&c!=null&&(f=!0),m!=null&&(f=!0,h==null))throw new B("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,r,h,"steps_per_epoch"),y;g!=null&&(y=$a(0,g)),i==null&&(i=1);let{callbackList:b,history:x}=uI(o,i,s,d,g,h,r,f,p);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let v=d;v<s;++v){await b.onEpochBegin(v);let N={};if(h!=null)throw new $e("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new $e("batch shuffling is not implemneted yet");u&&k.shuffle(y);let T=tt(y),E=ix(g,r);for(let A=0;A<E.length;++A){let $={};if(await b.onBatchBegin(A,$),D(()=>{let O=E[A][0],V=E[A][1],W=Gi(T,O,V-O);$.batch=A,$.size=V-O;let H=sx(n,W),X=t(H);for(let q=0;q<a.length;++q){let K=a[q],J=X[q];$[K]=J,Xt(J)}if(A===E.length-1&&f){let q=e.testLoop(l,c,r);for(let K=0;K<a.length;++K){let J=a[K],te=q[K];Xt(te),N["val_"+J]=te}}}),await b.onBatchEnd(A,$),aI($),e.stopTraining_)break}T.dispose()}if(await b.onEpochEnd(v,N),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}async function w4(e,t,n,a={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let r,s,i,o,l,c,u;try{let p=a.batchSize==null?32:a.batchSize;rx(p);let d=!1,h=await e.standardizeUserData(t,n,a.sampleWeight,a.classWeight,d,p);r=h[0],s=h[1],u=h[2];let m=!1,f;if(a.validationData!=null&&a.validationData.length>0){if(m=!0,a.validationData.length===2)i=a.validationData[0],o=a.validationData[1];else throw a.validationData.length===3?new $e("validationData including sample weights is not supported yet."):new B(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${a.validationData} is invalid.`);let T=!0,E=await e.standardizeUserData(i,o,null,null,T,p);l=E[0],c=E[1],f=l.concat(c)}else if(a.validationSplit!=null&&a.validationSplit>0&&a.validationSplit<1){m=!0;let T=Math.floor(r[0].shape[0]*(1-a.validationSplit)),E=r[0].shape[0];l=dp(r,T,E),r=dp(r,0,T),c=dp(s,T,E),s=dp(s,0,T),f=l.concat(c)}else a.validationSteps!=null&&(m=!0);let g=r.concat(s).concat(u);e.checkTrainableWeightsConsistency();let y=e.makeTrainFunction(),b=e.getDedupedMetricsNames(),x,v;m?(e.makeTestFunction(),x=e.testFunction,v=b.slice().concat(b.map(T=>"val_"+T))):(x=null,f=[],v=b.slice());let N=lI(a.callbacks,a.yieldEvery);return await v4(e,y,g,b,p,a.epochs,a.verbose,N,x,f,a.shuffle,v,a.initialEpoch,null,null)}finally{e.isTraining=!1,qi(r,t),qi(s,n),qi(l,i),qi(c,o),u!=null&&Ae(u)}}function TI(e){let t=[];e instanceof z&&(e=[e]);for(let n=0;n<e.length;++n){let a=e[n];if(a.rank===1)t.push(sp(a,1));else{if(a.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function qi(e,t){if(e==null)return;let n=[];if(t instanceof z)n.push(t.id);else if(Array.isArray(t))t.forEach(r=>n.push(r.id));else if(t!=null)for(let r in t){let s=t[r];n.push(s.id)}let a=[];if(e instanceof z)n.indexOf(e.id)===-1&&a.push(e);else if(Array.isArray(e))e.forEach(r=>{n.indexOf(r.id)===-1&&a.push(r)});else if(e!=null)for(let r in e){let s=e[r];n.indexOf(s.id)===-1&&a.push(s)}a.forEach(r=>{r.isDisposed||r.dispose()})}function k4(e){return e instanceof z}function ox(e){return Array.isArray(e)}function SI(e){return!k4(e)&&!ox(e)}function CI(e,t,n,a=!0,r=""){if(t==null||t.length===0){if(e!=null){let i=!1;if(ox(e)&&e.length>0)i=!0;else if(SI(e)){for(let o in e)if(e.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new B(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(i=>null);let s;if(SI(e)){e=e,s=[];for(let i of t){if(e[i]==null)throw new B(`No data provided for "${i}". Need data for each key in: ${t}`);s.push(e[i])}}else if(ox(e)){if(e=e,e.length!==t.length)throw new B(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new B(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=TI(s),n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=s[i];if(o.shape.length!==n[i].length)throw new B(`Error when checking ${r}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<n[i].length;++l){if(l===0&&!a)continue;let c=o.shape[l],u=n[i][l];if(u!=null&&u>=0&&c!==u)throw new B(`Error when checking ${r}: expected ${t[i]} to have shape [${n[i]}], but got array with shape [${o.shape}].`)}}return s}function I4(e,t,n){let a=ls(e.map(s=>s.shape[0]));a.sort();let r=ls(t.map(s=>s.shape[0]));if(r.sort(),a.length>1)throw new B(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(r.length>1)throw new B(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(a.length>0&&r.length>0&&!k.arraysEqual(a,r))throw new B(`Input Tensors should have the same number of samples as target Tensors. Found ${a[0]} input sample(s) and ${r[0]} target sample(s).`)}function N4(e,t,n){let a=[Hi,Em,up];for(let r=0;r<e.length;++r){let s=e[r],i=t[r],o=n[r];if(i!=null){if(i===up&&s.shape[s.shape.length-1]===1)throw new B(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(a.indexOf(i)!==-1){let l=s.shape.slice(1),c=o.slice(1);for(let u=0;u<l.length;++u){let p=l[u],d=c[u];if(d!=null&&p!==d)throw new B(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function EI(e,t,n,a=!0,r=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new B(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new B(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=s[i];if(o.shape.length!==n[i].length)throw new B(`Error when checking ${r}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<n[i].length;++l){if(l===0&&!a)continue;let c=o.shape[l],u=n[i][l];if(u!=null&&u!==c)throw new B(`Error when checking ${r}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function T4(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(a=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(a=>n);{let a=[];for(let r of t){let s=n.hasOwnProperty(r)?n[r]:[];Array.isArray(s)||(s=[s]),a.push(s)}return a}}var S4="layers-model",_r=class extends rr{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new B("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");o4(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=n4(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Sr))throw new B("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let s in e.loss)if(this.outputNames.indexOf(s)===-1)throw new B(`Unknown entry in loss dictionary: "${s}". Only expected the following keys: ${this.outputNames}`);for(let s of this.outputNames)e.loss[s]==null&&console.warn(`Output "${s}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${s} during training`),t.push(Jb(e.loss[s]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new B(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(s=>Jb(s))}else{let s=Jb(e.loss);this.outputs.forEach(i=>{t.push(s)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){let i=this.internalOutputShapes[s],o=this.outputNames[s];this.feedOutputNames.push(o),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[s])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ui("loss",()=>{for(let s=0;s<this.outputs.length;++s){if(n.indexOf(s)!==-1)continue;let i=this.lossFunctions[s];this.outputs.length>1&&(this.metricsTensors.push([i,s]),this.metricsNames.push(this.outputNames[s]+"_loss"))}});let a=T4(e.metrics,this.outputNames),r=(s,i,o)=>{this.outputNames.length>1&&(i=this.outputNames[s]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([o,s])};Ui("metric",()=>{for(let s=0;s<this.outputs.length;++s){if(n.indexOf(s)!==-1)continue;let i=a[s];(o=>{let l="",c,u,p;for(let d of o){if(typeof d=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(d)!==-1){let m=this.internalOutputShapes[s];m[m.length-1]===1||this.lossFunctions[s]===Em?["accuracy","acc"].indexOf(d)!==-1?u=Zb:["crossentropy","ce"].indexOf(d)!==-1&&(u=dI):this.lossFunctions[s]===Cm?["accuracy","acc"].indexOf(d)!==-1?u=hI:["crossentropy","ce"].indexOf(d)!==-1&&(u=mI):["accuracy","acc"].indexOf(d)!==-1?u=Qb:["crossentropy","ce"].indexOf(d)!==-1&&(u=ex);let f;["accuracy","acc"].indexOf(d)!==-1?f="acc":["crossentropy","ce"].indexOf(d)!==-1&&(f="ce"),p=u,c=l+f}else p=t4(d),c=l+Am(d);let h;Ui(c,()=>{h=p}),r(s,c,h)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let a=n.batchSize==null?32:n.batchSize;rx(a);let r=!0,s=this.standardizeUserDataXY(e,t,r,a);try{let i=s[0].concat(s[1]);this.makeTestFunction();let o=this.testFunction,l=this.testLoop(o,i,a,n.verbose,n.steps);return Tn(l)}finally{qi(s[0],e),qi(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),x4(this,e,t)}checkNumSamples(e,t,n,a="steps"){let r;if(n!=null){if(r=null,t!=null)throw new B(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new B(`Either the input data should have a defined shape, or ${a} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new B("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),a=n?t:[t],r=this.retrieveSymbolicTensors(a),s=new ji;if(e instanceof z&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new B(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let o=0;o<this.inputs.length;++o)s.add(this.inputs[o],e[o])}else for(let o of this.inputs){let l=e[o.name];if(l==null)throw new B(`No value is provided for the model's input ${o.name}`);s.add(o,l)}let i=pp(r,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=Bi(null,e.length),n=e.length;for(let a of this.layers){let r=Array.isArray(a.output)?a.output:[a.output],s=r.map(i=>i.name);for(let i=0;i<e.length;++i){let o=s.indexOf(e[i]);if(o!==-1&&(t[i]=r[o],n--),n===0)break}if(n===0)break}if(n>0){let a=[];throw t.forEach((r,s)=>{r==null&&a.push(e[s])}),new B(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(a)}`)}return t}predictLoop(e,t=32,n=!1){return D(()=>{let a=this.checkNumSamples(e);if(n)throw new $e("Verbose predictLoop() is not implemented yet.");let r=ix(a,t),s=this.outputs.map(i=>[]);for(let i=0;i<r.length;++i)D(()=>{let o=r[i][0],l=r[i][1],c=dp(e,o,l),u=[];if(Array.isArray(c))for(let d=0;d<c.length;++d)u.push({key:this.inputs[d],value:c[d]});else u.push({key:this.inputs[0],value:c});let p=new ji(u);return pp(this.outputs,p)}).forEach((o,l)=>s[l].push(o));return Tn(s.map(i=>Ze(i,0)))})}predict(e,t={}){let n=TI(e);EI(n,this.inputNames,this.feedInputShapes,!1);try{let a=t.batchSize==null?32:t.batchSize;return rx(a),this.predictLoop(n,a)}finally{qi(n,e)}}predictOnBatch(e){EI(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,a){if(this.optimizer_==null)throw new Aa("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let s=0;s<this.feedOutputShapes.length;++s){let i=this.feedOutputShapes[s];this.feedLossFns[s]===Cm?r.push(i.slice(0,i.length-1).concat([1])):r.push(i)}if(e=CI(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=CI(t,this.feedOutputNames,r,!1,"target"),I4(e,t,null),N4(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&a!=null&&a>0&&e[0].shape[0]%a!=0)throw new B(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,a,r=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,r,s);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(a!=null){let c=vI(a,this.outputNames);l=[];for(let u=0;u<c.length;++u)l.push(await wI(o[u],null,c[u]))}return[i,o,l]}testLoop(e,t,n,a=0,r){return D(()=>{let s=this.checkNumSamples(t,n,r,"steps"),i=[];if(a>0)throw new $e("Verbose mode is not implemented yet.");if(r!=null)throw new $e("steps mode in testLoop() is not implemented yet");{let o=ix(s,n),l=tt($a(0,s));for(let c=0;c<o.length;++c){let u=o[c][0],p=o[c][1],d=Gi(l,u,p-u),h=sx(t,d),m=e(h);if(c===0)for(let f=0;f<m.length;++f)i.push(de(0));for(let f=0;f<m.length;++f){let g=m[f];i[f]=Z(i[f],L(p-u,g))}}for(let c=0;c<i.length;++c)i[c]=ve(i[c],s)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let a=e[n],r=a;_1(e,a)>1&&(r+=`_${_1(e.slice(0,n),a)}`),t.push(r)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),s=[],i=()=>{let c=[];for(let h=0;h<this.inputs.length;++h)c.push({key:this.inputs[h],value:n[h]});let u=new ji(c),p=pp(this.outputs,u,{training:!0}),d;for(let h=0;h<this.lossFunctions.length;++h){let m=this.lossFunctions[h](a[h],p[h]);r[h]!=null&&(m=h4(m,r[h]));let f=Ct(m);t.push(f),h===0?d=m:d=Z(d,m)}for(let h=0;h<this.metricsTensors.length;++h){let m;if(this.outputs.length>1&&h<this.outputs.length)m=t[h];else{let f=this.metricsTensors[h][0],g=this.metricsTensors[h][1];m=Ct(f(a[g],p[g]))}Xt(m),s.push(m)}return d=Ct(d),this.calculateLosses().forEach(h=>{d=Z(d,h)}),d},o=this.collectedTrainableWeights.map(c=>c.read()),l=!0;return[this.optimizer_.minimize(i,l,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>D(()=>{let t=[],n,a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let l=0;l<this.inputs.length;++l)s.push({key:this.inputs[l],value:a[l]});let i=new ji(s),o=pp(this.outputs,i);for(let l=0;l<this.lossFunctions.length;++l){let c=this.lossFunctions[l],u=Ct(c(r[l],o[l]));l===0?n=u:n=Z(n,u),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let c=this.metricsTensors[l][0],u=this.metricsTensors[l][1],p=Ct(c(r[u],o[u]));t.push(p)}return t})}async fit(e,t,n={}){return w4(this,e,t,n)}async fitDataset(e,t){return y4(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),a=n[0],r=n[1],s=this.makeTrainFunction()(a.concat(r)),i=[];for(let o of s){let l=await o.data();i.push(l[0])}return Ae(s),Tn(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let s=0;s<a.length;++s)n&&!a[s].trainable||t.push({name:a[s].originalName,tensor:r[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=Th().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Th().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Er(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Er(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let a of t)if(typeof n[a]=="string")e[a]=Er(n[a]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Er(Am(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Er(Am(e)));{let e={};for(let t in this.metrics)e[t]=Er(Am(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=cp(e.optimizer_config),n=Ma(t),a;if(typeof e.loss=="string")a=Wi(e.loss);else if(Array.isArray(e.loss))a=e.loss.map(s=>Wi(s));else if(e.loss!=null){a={};for(let s in e.loss)a[s]=Wi(e.loss[s])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(s=>Wi(s));else if(e.metrics!=null){r={};for(let s in e.metrics)r[s]=Wi(e.metrics[s])}this.compile({loss:a,metrics:r,optimizer:n})}async save(e,t){if(typeof e=="string"){let i=Kt.getSaveHandlers(e);if(i.length===0)throw new B(`Cannot find any save handlers for URL '${e}'`);if(i.length>1)throw new B(`Found more than one (${i.length}) save handlers for URL '${e}'`);e=i[0]}if(e.save==null)throw new B("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Kt.encodeWeights(this.getNamedWeights(t)),a=!1,r=null,s={modelTopology:this.toJSON(r,a),format:S4,generatedBy:`TensorFlow.js tfjs-layers v${Dm}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){s.trainingConfig=this.getTrainingConfig();let i="optimizer",{data:o,specs:l}=await Kt.encodeWeights(await this.optimizer.getWeights(),i);n.specs.push(...l),n.data=Kt.concatenateArrayBuffers([n.data,o])}if(this.userDefinedMetadata!=null){let i=!0;gI(this.userDefinedMetadata,this.name,i),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=n.data,s.weightSpecs=n.specs,e.save(s)}setUserDefinedMetadata(e){gI(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};_r.className="Model";se.registerClass(_r);var _I=class extends _r{};_I.className="Functional";se.registerClass(_I);async function C4(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let a=cp(n),r=Ma(a,t);if(e.weightsManifest!=null){let s=await Kt.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(o=>o.originalName)),i={};for(let o of r.weights)i[o.originalName]=s[o.originalName];r.loadWeights(i),Ae(s)}return r}async function _4(e,t){if(t==null&&(t={}),typeof e=="string"){let n=Kt.getLoadHandlers(e,t);if(n.length===0)n.push(Kt.browserHTTPRequest(e,t));else if(n.length>1)throw new B(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return E4(e,void 0,t)}async function E4(e,t,n){if(n==null&&(n={}),e.load==null)throw new B("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let a=await e.load(),r=a.modelTopology;r.model_config!=null&&(r=r.model_config);let s=n.strict==null?!0:n.strict,i=a.weightData!=null&&a.weightSpecs!=null&&s,o=Ma(cp(r),t,i),l=a.trainingConfig;if(l!=null&&o.loadTrainingConfig(l),a.userDefinedMetadata!=null&&o.setUserDefinedMetadata(a.userDefinedMetadata),a.weightData!=null){if(a.weightSpecs==null)throw new B("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:c,optimizerWeights:u}=F4(a.weightData,a.weightSpecs);o.loadWeights(c,s),o.optimizer!=null&&u.length>0&&await o.optimizer.setWeights(u),Ae(c),Ae(u.map(p=>p.tensor))}return o}function F4(e,t){let n=Kt.decodeWeights(e,t),a={},r=[];return t.forEach(s=>{s.group==="optimizer"?r.push({name:s.name,tensor:n[s.name]}):a[s.name]=n[s.name]}),{modelWeights:a,optimizerWeights:r}}var uu=class extends _r{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:wm("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new B(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof uu||e instanceof _r,n;if(t){if(n=e,n.outputs.length!==1)throw new B("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new B("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new B("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let a=nI({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(a)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new B(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new B("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=tI(this.outputs[0])}this.inboundNodes=[],new Nm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Bi(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(a=>a.shape),outputShapes:this.outputs[0].shape})}else{let a=e.apply(this.outputs[0]);if(Array.isArray(a))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[a],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(dt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new _r({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Aa("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Aa("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Aa("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Aa("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},a=!1){let r,s={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new B("Legacy serialization format not supported yet.");r=t}else k.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof uu))throw new $e(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let o of r){let l=Ma(o,void 0,a);a&&l.setFastWeightInitDuringBuild(!0),i.add(l)}return i}set stopTraining(e){if(this.model==null)throw new B("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new B("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};uu.className="Sequential";se.registerClass(uu);function A4(e){return new _r(e)}function $4(e){return new uu(e)}function D4(e,t){return t==null&&(t={}),_4(e,t)}function q1(e){return nI(e)}function M4(e,t){ga.registerCallbackConstructor(e,t)}var On=class extends se.Serializable{getConfig(){return{}}},FI=class extends On{apply(e,t=1){return dB(e,t)}};FI.className="elu";se.registerClass(FI);var AI=class extends On{apply(e){return Hh(e)}};AI.className="selu";se.registerClass(AI);var $I=class extends On{apply(e){return Xe(e)}};$I.className="relu";se.registerClass($I);var DI=class extends On{apply(e){return D(()=>Pi(6,Xe(e)))}};DI.className="relu6";se.registerClass(DI);var MI=class extends On{apply(e){return e}};MI.className="linear";se.registerClass(MI);var RI=class extends On{apply(e){return da(e)}};RI.className="sigmoid";se.registerClass(RI);var PI=class extends On{apply(e){return mB(e)}};PI.className="hardSigmoid";se.registerClass(PI);var OI=class extends On{apply(e){return Jl(e)}};OI.className="softplus";se.registerClass(OI);var LI=class extends On{apply(e){return hB(e)}};LI.className="softsign";se.registerClass(LI);var zI=class extends On{apply(e){return Kl(e)}};zI.className="tanh";se.registerClass(zI);var lx=class extends On{apply(e,t=-1){return Ca(e,t)}};lx.className="softmax";se.registerClass(lx);var BI=class extends On{apply(e,t=-1){return Oh(e,t)}};BI.className="logSoftmax";se.registerClass(BI);var WI=class extends On{apply(e,t=1){return D(()=>da(e.mul(t)).mul(e))}};WI.className="swish";se.registerClass(WI);function ds(e){return e.getClassName()}function ux(e,t={}){return tp(e,se.SerializationMap.getMap().classNameMap,t,"activation")}function hs(e){if(e==null){let t={};return t.className="linear",t.config={},ux(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},ux(t)}else return e instanceof On?e:ux(e)}function cx(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var VI=class extends se.Serializable{},hp=class extends VI{constructor(e){super();cx(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return D(()=>{let t=bt([1]);return this.hasL1&&(t=Z(t,Ce(L(this.l1,Wt(e))))),this.hasL2&&(t=Z(t,Ce(L(this.l2,ip(e))))),t.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};hp.className="L1L2";se.registerClass(hp);function R4(e){return cx(e),new hp({l1:e!=null?e.l1:null,l2:0})}function P4(e){return cx(e),new hp({l2:e!=null?e.l2:null,l1:0})}var UI={l1l2:"L1L2"};function ht(e){return Tb(e)}function GI(e,t={}){return tp(e,se.SerializationMap.getMap().classNameMap,t,"regularizer")}function kt(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in UI?UI[e]:e,config:{}};return GI(t)}else return e instanceof VI?e:GI(e)}var px=class extends qe{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Re(e);let n=Xe(e);return this.maxValue!=null&&(n=Yt(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};px.className="ReLU";se.registerClass(px);var dx=class extends qe{constructor(e){super(e==null?{}:e);this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Re(e);return Gc(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};dx.className="LeakyReLU";se.registerClass(dx);var hx=class extends qe{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=wt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=kt(e.alphaRegularizer),this.alphaConstraint=Ht(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new B(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=dt(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let a of this.sharedAxes)t[a-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let a=1;a<e.length;++a)n[a]=e[a];this.inputSpec=[new Zt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Re(e),Kc(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Et(this.alphaInitializer),alphaRegularizer:ht(this.alphaRegularizer),alphaConstraint:Gt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};hx.className="PReLU";se.registerClass(hx);var mx=class extends qe{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new $e(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Re(e);return Xl(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};mx.className="ELU";se.registerClass(mx);var fx=class extends qe{constructor(e){super(e==null?{}:e);this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Re(e);return n.mul(rp(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};fx.className="ThresholdedReLU";se.registerClass(fx);var gx=class extends qe{constructor(e){super(e==null?{}:e);this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new lx().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Re(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};gx.className="Softmax";se.registerClass(gx);function cu(e,t,n){if(typeof e=="number")return Bi(e,t);if(e.length!==t)throw new B(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){let r=e[a];if(!lB(r))throw new B(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function Ra(e,t,n,a,r=1){if(e==null)return e;let s=t+(t-1)*(r-1),i;return n==="same"?i=e:i=e-s+1,Math.floor((i+a-1)/a)}function Mm(e,t,n,a){if(e==null)return null;if(a==="valid")e=e*t+cs([n-t,0]);else if(a==="same")e=e*t;else throw new B(`Unsupport padding mode: ${a}.`);return e}function yx(e,t){return D(()=>(Rt(t),t==="channelsFirst"?Ue(e,[0,2,3,1]):e))}function HI(e,t){return D(()=>(Rt(t),t==="channelsFirst"?Ue(e,[0,2,3,4,1]):e))}function O4(e,t,n,a=1,r="valid",s,i=1){return D(()=>{if(s==null&&(s=Fa()),Rt(s),e.shape.length!==3)throw new B(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new B(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new B(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(s==="channelsFirst"&&(e=Ue(e,[0,2,1])),r==="causal")throw new $e("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Fh(e,t,a,r==="same"?"same":"valid","NWC",i);return n!=null&&(o=nr(o,n)),o})}function jI(e,t,n,a=[1,1],r="valid",s,i,o=null){return D(()=>{if(s==null&&(s=Fa()),Rt(s),e.rank!==3&&e.rank!==4)throw new B(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new B(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=yx(e,s);if(r==="causal")throw new $e("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=os.conv2d({x:l,filter:t,strides:a,pad:r==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),s==="channelsFirst"&&(l=Ue(l,[0,3,1,2])),l})}function L4(e,t,n,a=[1,1,1],r="valid",s,i){return D(()=>{if(s==null&&(s=Fa()),Rt(s),e.rank!==4&&e.rank!==5)throw new B(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new B(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=HI(e,s);if(r==="causal")throw new $e("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Xy(o,t,a,r==="same"?"same":"valid","NDHWC",i),n!=null&&(o=nr(o,n)),s==="channelsFirst"&&(o=Ue(o,[0,4,1,2,3])),o})}var bx=class extends qe{constructor(e,t){super(t);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",bx.verifyArgs(t),this.rank=e,Jt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new $e(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=cu(t.kernelSize,e,"kernelSize"),this.strides=cu(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,aa(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Rt(this.dataFormat),this.activation=hs(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=wt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ht(t.biasConstraint),this.biasRegularizer=kt(t.biasRegularizer),this.activityRegularizer=kt(t.activityRegularizer),this.dilationRate=cu(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new B(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new B(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new B(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(er("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Cb(e.kernelSize,"number",1,3))throw new B(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ds(this.activation),useBias:this.useBias,biasInitializer:Et(this.biasInitializer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),biasConstraint:Gt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},mp=class extends bx{constructor(e,t){super(e,t);this.kernel=null,mp.verifyArgs(t),this.filters=t.filters,Jt(this.filters,"filters"),this.kernelInitializer=wt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ht(t.kernelConstraint),this.kernelRegularizer=kt(t.kernelRegularizer)}build(e){e=dt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new B(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return D(()=>{e=Re(e);let n,a=this.bias==null?null:this.bias.read(),r=A1(this.activation.getClassName());if(r!=null&&this.rank===2)n=jI(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=O4(e,this.kernel.read(),a,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=jI(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=L4(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new $e("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=dt(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){let s=Ra(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(s)}let a=[e[0]];return this.dataFormat==="channelsLast"?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){let e={filters:this.filters,kernelInitializer:Et(this.kernelInitializer),kernelRegularizer:ht(this.kernelRegularizer),kernelConstraint:Gt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new B(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},fp=class extends mp{constructor(e){super(2,e);fp.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Cb(e.kernelSize,"number",1,2))throw new B(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};fp.className="Conv2D";se.registerClass(fp);var Rm=class extends mp{constructor(e){super(3,e);Rm.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new B(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};Rm.className="Conv3D";se.registerClass(Rm);var xx=class extends fp{constructor(e){super(e);if(this.inputSpec=[new Zt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new B(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=dt(e),e.length!==4)throw new B("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new B("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Zt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return D(()=>{let n=Re(e);if(n.shape.length!==4)throw new B(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let a=n.shape,r=a[0],s,i;this.dataFormat==="channelsFirst"?(s=2,i=3):(s=1,i=2);let o=a[s],l=a[i],c=this.kernelSize[0],u=this.kernelSize[1],p=this.strides[0],d=this.strides[1],h=Mm(o,p,c,this.padding),m=Mm(l,d,u,this.padding),f=[r,h,m,this.filters];this.dataFormat!=="channelsLast"&&(n=Ue(n,[0,2,3,1]));let g=Ah(n,this.kernel.read(),f,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=Ue(g,[0,3,1,2])),this.bias!=null&&(g=nr(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=dt(e);let t=e.slice(),n,a,r;this.dataFormat==="channelsFirst"?(n=1,a=2,r=3):(n=3,a=1,r=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[a]=Mm(t[a],o,s,this.padding),t[r]=Mm(t[r],l,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};xx.className="Conv2DTranspose";se.registerClass(xx);var qI=class extends mp{constructor(e,t){super(e,t);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new B("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new B("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new B(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=wt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=kt(t.depthwiseRegularizer),this.depthwiseConstraint=Ht(t.depthwiseConstraint),this.pointwiseInitializer=wt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=kt(t.pointwiseRegularizer),this.pointwiseConstraint=Ht(t.pointwiseConstraint)}build(e){if(e=dt(e),e.length<this.rank+2)throw new B(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new B(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let i=0;i<this.rank;++i)r.push(1);r.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Zt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return D(()=>{e=Re(e);let n;if(this.rank===1)throw new $e("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Ue(e,[0,2,3,1])),n=Oi(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=nr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Ue(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Et(this.depthwiseInitializer),e.pointwiseInitializer=Et(this.pointwiseInitializer),e.depthwiseRegularizer=ht(this.depthwiseRegularizer),e.pointwiseRegularizer=ht(this.pointwiseRegularizer),e.depthwiseConstraint=Gt(this.depthwiseConstraint),e.pointwiseConstraint=Gt(this.pointwiseConstraint),e}};qI.className="SeparableConv";var vx=class extends qI{constructor(e){super(2,e)}};vx.className="SeparableConv2D";se.registerClass(vx);var Pm=class extends mp{constructor(e){super(1,e);Pm.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Cb(e.kernelSize,"number",1,1))throw new B(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};Pm.className="Conv1D";se.registerClass(Pm);var wx=class extends qe{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return D(()=>{if(e=Re(e),this.dataFormat==="channelsLast"){let n=pm(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return pm(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=pm(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return pm(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};wx.className="Cropping2D";se.registerClass(wx);var kx=class extends qe{constructor(e){super(e);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Rt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,sB(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return D(()=>{let n=Re(e),a=n.shape;if(this.dataFormat==="channelsFirst"){n=Ue(n,[0,2,3,1]);let r=this.size[0]*a[2],s=this.size[1]*a[3],i=this.interpolation==="nearest"?n.resizeNearestNeighbor([r,s]):n.resizeBilinear([r,s]);return Ue(i,[0,3,1,2])}else{let r=this.size[0]*a[1],s=this.size[1]*a[2];return this.interpolation==="nearest"?n.resizeNearestNeighbor([r,s]):n.resizeBilinear([r,s])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};kx.className="UpSampling2D";se.registerClass(kx);function z4(e,t,n=[1,1],a="valid",r,s){return D(()=>{r==null&&(r=Fa()),Rt(r);let i=yx(e,r);if(e.rank!==4)throw new B(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new B(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=kr(i,t,n,a==="same"?"same":"valid","NHWC",s),r==="channelsFirst"&&(i=Ue(i,[0,3,1,2])),i})}var Ix=class extends bx{constructor(e){super(2,e);this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=wt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ht(e.depthwiseConstraint),this.depthwiseRegularizer=kt(e.depthwiseRegularizer)}build(e){if(e=dt(e),e.length<4)throw new B(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new B(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return D(()=>{e=Re(e);let n=z4(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=nr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=dt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],a=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Ra(t,this.kernelSize[0],this.padding,this.strides[0]),s=Ra(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],a,r,s]:[e[0],r,s,a]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Et(this.depthwiseInitializer),e.depthwiseRegularizer=ht(this.depthwiseRegularizer),e.depthwiseConstraint=Gt(this.depthwiseRegularizer),e}};Ix.className="DepthwiseConv2D";se.registerClass(Ix);function KI(e,t,n,a){if(Array.isArray(e)){if(t!=null||n!=null)throw new B("When inputs is an array, neither initialState or constants should be provided");a!=null&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(s){return s==null||Array.isArray(s)?s:[s]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function XI(e,t,n,a=!1,r,s,i=!1,o=!1){return D(()=>{let l=t.shape.length;if(l<3)throw new B(`Input should be at least 3D, but is ${l}D.`);let c=[1,0].concat($a(2,l));if(t=Ue(t,c),s!=null)throw new $e("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=r.asType("bool").asType("float32"),r.rank===l-1&&(r=Qn(r,-1)),r=Ue(r,c)),a&&(t=Rn(t,0),r!=null&&(r=Rn(r,0)));let u=[],p,d=n,h=t.shape[0],m=pt(t),f;r!=null&&(f=pt(r));for(let y=0;y<h;++y){let b=m[y],x=D(()=>e(b,d));if(r==null)p=x[0],d=x[1];else{let v=D(()=>{let N=f[y],T=Mn(N).sub(N),E=x[0].mul(N).add(d[0].mul(T)),A=d.map(($,O)=>x[1][O].mul(N).add($.mul(T)));return{output:E,newStates:A}});p=v.output,d=v.newStates}o&&u.push(p)}let g;return o&&(g=Mt(u,1)),[p,g,d]})}var ar=class extends qe{constructor(e){super(e);let t;if(e.cell==null)throw new B("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Om({cells:e.cell}):t=e.cell,t.stateSize==null)throw new B("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Zt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return $a(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){qb(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],a;if(this.returnSequences?a=[e[0],e[1],n]:a=[e[0],n],this.returnState){let r=[];for(let s of t)r.push([e[0],s]);return[a].concat(r)}else return a}computeMask(e,t){return D(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let a=this.states.map(r=>null);return[n].concat(a)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){let t=null;if(this.numConstants!=null)throw new $e("Constants support is not implemented in RNN yet.");qb(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,a=e.slice(2);this.inputSpec[0]=new Zt({shape:[n,null,...a]});let r=[e[0]].concat(e.slice(2));if(t!=null)throw new $e("Constants support is not implemented in RNN yet.");this.cell.build(r);let s;if(Array.isArray(this.cell.stateSize)?s=this.cell.stateSize:s=[this.cell.stateSize],this.stateSpec!=null){if(!k.arraysEqual(this.stateSpec.map(i=>i.shape[i.shape.length-1]),s))throw new B(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map(i=>new Zt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){D(()=>{if(!this.stateful)throw new Cr("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new B("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>bt([n,a])):this.states_=[bt([n,this.cell.stateSize])];else if(e==null)Ae(this.states_),this.keptStates!=null&&(Ae(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>bt([n,a])):this.states_[0]=bt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new B(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Ae(this.states_);for(let a=0;a<this.states_.length;++a){let r=e[a],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[a]:this.cell.stateSize,i=[n,s];if(!k.arraysEqual(r.shape,i))throw new B(`State ${a} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[a]=r}}this.states_=this.states_.map(a=>Xt(a.clone()))})}apply(e,t){let n=t==null?null:t.initialState,a=t==null?null:t.constants;t==null&&(t={});let r=KI(e,n,a,this.numConstants);e=r.inputs,n=r.initialState,a=r.constants;let s=[],i=[];if(n!=null){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(let o of n)this.stateSpec.push(new Zt({shape:o.shape}));i=i.concat(this.stateSpec)}if(a!=null&&(t.constants=a,s=s.concat(a),this.numConstants=a.length),s[0]instanceof Da){let o=[e].concat(s),l=this.inputSpec.concat(i),c=this.inputSpec;this.inputSpec=l;let u=super.apply(o,t);return this.inputSpec=c,u}else return super.apply(e,t)}call(e,t){return D(()=>{let n=t==null?null:t.mask,a=t==null?null:t.training,r=t==null?null:t.initialState;e=Re(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==s)throw new B(`RNN Layer has ${s} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:a},o=XI((d,h)=>{let m=this.cell.call([d].concat(h),i);return[m[0],m.slice(1)]},e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],c=o[1],u=o[2];this.stateful&&this.resetStates(u,a);let p=this.returnSequences?c:l;return this.returnState?[p].concat(u):p})}getInitialState(e){return D(()=>{let t=bt(e.shape);return t=Ce(t,[1,2]),t=sp(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?Db(t,[1,n]):t):this.cell.stateSize>1?[Db(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===ar.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){let a=t.cell,r=Ma(a,n);return new e(Object.assign(t,{cell:r}))}};ar.className="RNN";se.registerClass(ar);var lp=class extends qe{},Lm=class extends lp{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Jt(this.units,"units"),this.activation=hs(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=wt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=kt(e.kernelRegularizer),this.recurrentRegularizer=kt(e.recurrentRegularizer),this.biasRegularizer=kt(e.biasRegularizer),this.kernelConstraint=Ht(e.kernelConstraint),this.recurrentConstraint=Ht(e.recurrentConstraint),this.biasConstraint=Ht(e.biasConstraint),this.dropout=su([1,cs([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=su([1,cs([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=dt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return D(()=>{if(e=e,e.length!==2)throw new B(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let a=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ms({ones:()=>Mn(e),rate:this.dropout,training:a})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ms({ones:()=>Mn(n),rate:this.recurrentDropout,training:a}));let r,s=this.dropoutMask,i=this.recurrentDropoutMask;s!=null?r=tr(L(e,s),this.kernel.read()):r=tr(e,this.kernel.read()),this.bias!=null&&(r=nr(r,this.bias.read())),i!=null&&(n=L(n,i));let o=Z(r,tr(n,this.recurrentKernel.read()));return this.activation!=null&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:ds(this.activation),useBias:this.useBias,kernelInitializer:Et(this.kernelInitializer),recurrentInitializer:Et(this.recurrentInitializer),biasInitializer:Et(this.biasInitializer),kernelRegularizer:ht(this.kernelRegularizer),recurrentRegularizer:ht(this.recurrentRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:Gt(this.kernelConstraint),recurrentConstraint:Gt(this.recurrentConstraint),biasConstraint:Gt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};Lm.className="SimpleRNNCell";se.registerClass(Lm);var Nx=class extends ar{constructor(e){e.cell=new Lm(e),super(e)}call(e,t){return D(()=>{this.cell.dropoutMask!=null&&(Ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,a=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})})}static fromConfig(e,t){return new e(t)}};Nx.className="SimpleRNN";se.registerClass(Nx);var zm=class extends lp{constructor(e){super(e);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new B("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Jt(this.units,"units"),this.activation=hs(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=hs(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=wt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=kt(e.kernelRegularizer),this.recurrentRegularizer=kt(e.recurrentRegularizer),this.biasRegularizer=kt(e.biasRegularizer),this.kernelConstraint=Ht(e.kernelConstraint),this.recurrentConstraint=Ht(e.recurrentConstraint),this.biasConstraint=Ht(e.biasConstraint),this.dropout=su([1,cs([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=su([1,cs([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=dt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return D(()=>{if(e=e,e.length!==2)throw new B(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ms({ones:()=>Mn(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ms({ones:()=>Mn(a),rate:this.recurrentDropout,training:n,count:3}));let r=this.dropoutMask,s=this.recurrentDropoutMask,i,o,l;0<this.dropout&&this.dropout<1&&(e=L(e,r[0]));let c=tr(e,this.kernel.read());this.useBias&&(c=nr(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=L(a,s[0]));let u=this.recurrentKernel.read(),[p,d]=Pn(u,[2*this.units,this.units],u.rank-1),h=tr(a,p),[m,f,g]=Pn(c,3,c.rank-1),[y,b]=Pn(h,2,h.rank-1);i=this.recurrentActivation.apply(Z(m,y)),o=this.recurrentActivation.apply(Z(f,b));let x=tr(L(o,a),d);l=this.activation.apply(Z(g,x));let v=Z(L(i,a),L(Z(1,St(i)),l));return[v,v]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:ds(this.activation),recurrentActivation:ds(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Et(this.kernelInitializer),recurrentInitializer:Et(this.recurrentInitializer),biasInitializer:Et(this.biasInitializer),kernelRegularizer:ht(this.kernelRegularizer),recurrentRegularizer:ht(this.recurrentRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:Gt(this.kernelConstraint),recurrentConstraint:Gt(this.recurrentConstraint),biasConstraint:Gt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};zm.className="GRUCell";se.registerClass(zm);var Tx=class extends ar{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new zm(e),super(e)}call(e,t){return D(()=>{this.cell.dropoutMask!=null&&(Ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,a=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Tx.className="GRU";se.registerClass(Tx);var gp=class extends lp{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Jt(this.units,"units"),this.activation=hs(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=hs(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=wt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=kt(e.kernelRegularizer),this.recurrentRegularizer=kt(e.recurrentRegularizer),this.biasRegularizer=kt(e.biasRegularizer),this.kernelConstraint=Ht(e.kernelConstraint),this.recurrentConstraint=Ht(e.recurrentConstraint),this.biasConstraint=Ht(e.biasConstraint),this.dropout=su([1,cs([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=su([1,cs([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=dt(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let a;if(this.useBias){if(this.unitForgetBias){let r=this.biasInitializer,s=this.units;a=new(t=class extends fa{apply(i,o){let l=r.apply([s]),c=new hm().apply([s]),u=r.apply([s*2]);return W1(W1(l,c),u)}},t.className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return D(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new B(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let a=e[1],r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ms({ones:()=>Mn(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ms({ones:()=>Mn(a),rate:this.recurrentDropout,training:n,count:4}));let s=this.dropoutMask,i=this.recurrentDropoutMask,o,l,c,u;0<this.dropout&&this.dropout<1&&(e=L(e,s[0]));let p=tr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=L(a,i[0])),p=Z(p,tr(a,this.recurrentKernel.read())),this.useBias&&(p=nr(p,this.bias.read()));let[d,h,m,f]=Pn(p,4,p.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(h),c=Z(L(l,r),L(o,this.activation.apply(m))),u=this.recurrentActivation.apply(f);let g=L(u,this.activation.apply(c));return[g,g,c]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:ds(this.activation),recurrentActivation:ds(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Et(this.kernelInitializer),recurrentInitializer:Et(this.recurrentInitializer),biasInitializer:Et(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ht(this.kernelRegularizer),recurrentRegularizer:ht(this.recurrentRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:Gt(this.kernelConstraint),recurrentConstraint:Gt(this.recurrentConstraint),biasConstraint:Gt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};gp.className="LSTMCell";se.registerClass(gp);var Sx=class extends ar{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new gp(e),super(e)}call(e,t){return D(()=>{this.cell.dropoutMask!=null&&(Ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,a=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Sx.className="LSTM";se.registerClass(Sx);var Om=class extends lp{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return D(()=>{e=e;let n=e.slice(1),a=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?a.push(n.splice(0,i.stateSize.length)):a.push(n.splice(0,1));a.reverse();let r=[],s;for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=a[i],i===0?s=[e[0]].concat(n):s=[s[0]].concat(n),s=o.call(s,t),r.push(s.slice(1))}n=[];for(let i of r.slice().reverse())n.push(...i);return[s[0]].concat(n)})}build(e){qb(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,a)=>{Ui(`RNNCell_${a}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=a=>({className:a.getClassName(),config:a.getConfig()}),n={cells:this.cells.map(t)};return Object.assign({},e,n)}static fromConfig(e,t,n={}){let a=[];for(let r of t.cells)a.push(Ma(r,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return Kb(e)}setWeights(e){let t=[];for(let n of this.cells){let a=n.weights.length,r=e.splice(a);for(let s=0;s<n.weights.length;++s)t.push([n.weights[s],r[s]])}Xb(t)}};Om.className="StackedRNNCells";se.registerClass(Om);function ms(e){let{ones:t,rate:n,training:a=!1,count:r=1}=e,s=()=>U1(t(),n),i=()=>op(s,t,a);return!r||r<=1?Xt(i().clone()):Array(r).fill(void 0).map(i).map(o=>Xt(o.clone()))}var B4=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]]);return n},YI=class extends ar{constructor(e){if(e.unroll)throw new $e("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new $e("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Zt({ndim:5})]}call(e,t){return D(()=>{if(this.cell.dropoutMask!=null&&(Ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new B("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,a=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return D(()=>{let{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)],s=bt(r);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){D(()=>{if(!this.stateful)throw new Cr("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(n[0]==null)throw new B("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>bt(r)):this.states_=[bt(r)];else if(e==null)Ae(this.states_),this.keptStates!=null&&(Ae(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>bt(r)):this.states_[0]=bt(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new B(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ae(this.states_);for(let s=0;s<this.states_.length;++s){let i=e[s],o=r;if(!k.arraysEqual(i.shape,o))throw new B(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${i.shape}`);this.states_[s]=i}}this.states_=this.states_.map(s=>Xt(s.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:a,padding:r,strides:s,dilationRate:i}=this.cell,o=t==="channelsFirst",l=e[o?3:2],c=e[o?4:3],u=Ra(l,a[0],r,s[0],i[0]),p=Ra(c,a[1],r,s[1],i[1]);return[...e.slice(0,2),...o?[n,u,p]:[u,p,n]]}};YI.className="ConvRNN2D";var Bm=class extends gp{constructor(e){let{filters:t,kernelSize:n,strides:a,padding:r,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t}));this.filters=t,Jt(this.filters,"filters"),this.kernelSize=cu(n,2,"kernelSize"),this.kernelSize.forEach(o=>Jt(o,"kernelSize")),this.strides=cu(a||1,2,"strides"),this.strides.forEach(o=>Jt(o,"strides")),this.padding=r||"valid",aa(this.padding),this.dataFormat=s||"channelsLast",Rt(this.dataFormat),this.dilationRate=cu(i||1,2,"dilationRate"),this.dilationRate.forEach(o=>Jt(o,"dilationRate"))}build(e){var t;e=dt(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new B(`The channel dimension of the input should be defined. Found ${e[n]}`);let a=e[n],r=4,s=this.kernelSize.concat([a,this.filters*r]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let o;if(this.unitForgetBias){let l=this.biasInitializer,c=this.filters;o=new(t=class extends fa{apply(u,p){let d=l.apply([c]),h=Ya([c]),m=l.apply([c*2]);return Rb([d,h,m])}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,o,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return D(()=>{if(e.length!==3)throw new B(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,a=e[0],r=e[1],s=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ms({ones:()=>Mn(a),rate:this.dropout,training:n,count:i}));let o=this.dropoutMask,l=(Q,ie,re)=>!ie||!ie[re]?Q:L(ie[re],Q),c=l(a,o,0),u=l(a,o,1),p=l(a,o,2),d=l(a,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ms({ones:()=>Mn(r),rate:this.recurrentDropout,training:n,count:i}));let h=this.recurrentDropoutMask,m=l(r,h,0),f=l(r,h,1),g=l(r,h,2),y=l(r,h,3),b=3,[x,v,N,T]=Pn(this.kernel.read(),i,b),[E,A,$,O]=this.useBias?Pn(this.bias.read(),i):[null,null,null,null];c=this.inputConv(c,x,E,this.padding),u=this.inputConv(u,v,A,this.padding),p=this.inputConv(p,N,$,this.padding),d=this.inputConv(d,T,O,this.padding);let[V,W,H,X]=Pn(this.recurrentKernel.read(),i,b);m=this.recurrentConv(m,V),f=this.recurrentConv(f,W),g=this.recurrentConv(g,H),y=this.recurrentConv(y,X);let q=this.recurrentActivation.apply(Z(c,m)),K=this.recurrentActivation.apply(Z(u,f)),J=Z(L(K,s),L(q,this.activation.apply(Z(p,g)))),te=L(this.recurrentActivation.apply(Z(d,y)),this.activation.apply(J));return[te,te,J]})}getConfig(){let e=super.getConfig(),{units:t}=e,n=B4(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,a)}inputConv(e,t,n,a){let r=$t(e,t,this.strides,a||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?nr(r,n,this.dataFormat):r}recurrentConv(e,t){return $t(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Bm.className="ConvLSTM2DCell";se.registerClass(Bm);var Cx=class extends YI{constructor(e){let t=new Bm(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};Cx.className="ConvLSTM2D";se.registerClass(Cx);var Wm=class extends qe{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(this.noiseShape[a]==null?t[a]:this.noiseShape[a]);return n}call(e,t){return D(()=>{this.invokeCallHook(e,t);let n=Re(e);if(0<this.rate&&this.rate<1){let a=t.training==null?!1:t.training,r=this.getNoiseShape(n);return op(()=>U1(n,this.rate,r,this.seed),()=>n,a)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Wm.className="Dropout";se.registerClass(Wm);var Ex=class extends Wm{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Ex.className="SpatialDropout1D";se.registerClass(Ex);var _x=class extends qe{constructor(e){super(e);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Jt(this.units,"units"),this.activation=hs(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=wt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=wt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ht(e.kernelConstraint),this.biasConstraint=Ht(e.biasConstraint),this.kernelRegularizer=kt(e.kernelRegularizer),this.biasRegularizer=kt(e.biasRegularizer),this.activityRegularizer=kt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=dt(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=dt(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return D(()=>{this.invokeCallHook(e,t);let n=Re(e),a=A1(this.activation.getClassName()),r;return a!=null?r=tr(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=tr(n,this.kernel.read()),this.bias!=null&&(r=nr(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){let e={units:this.units,activation:ds(this.activation),useBias:this.useBias,kernelInitializer:Et(this.kernelInitializer),biasInitializer:Et(this.biasInitializer),kernelRegularizer:ht(this.kernelRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:Gt(this.kernelConstraint),biasConstraint:Gt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};_x.className="Dense";se.registerClass(_x);var Fx=class extends qe{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=dt(e);for(let t of e.slice(1))if(t==null)throw new B(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],us(e,1)]}call(e,t){return D(()=>{this.invokeCallHook(e,t);let n=Re(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let a=[0];for(let r=2;r<n.rank;++r)a.push(r);a.push(1),n=n.transpose(a)}return pB(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Fx.className="Flatten";se.registerClass(Fx);var Ax=class extends qe{constructor(e){super(e);this.supportsMasking=!0,this.activation=hs(e.activation)}call(e,t){return D(()=>{this.invokeCallHook(e,t);let n=Re(e);return this.activation.apply(n)})}getConfig(){let e={activation:ds(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Ax.className="Activation";se.registerClass(Ax);var $x=class extends qe{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return D(()=>(e=Re(e),uB(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};$x.className="RepeatVector";se.registerClass($x);var Dx=class extends qe{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",a=t.slice(),r=1,s=null;for(let o=0;o<a.length;++o){let l=a[o];if(this.isUnknown(l))if(s===null)s=o;else throw new B("Can only specifiy one unknown dimension.");else r*=l}let i=us(e);if(s!==null){if(r===0||i%r!=0)throw new B(n);a[s]=i/r}else if(i!==r)throw new B(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return D(()=>{this.invokeCallHook(e,t);let n=Re(e),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return n.reshape(r)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Dx.className="Reshape";se.registerClass(Dx);var Mx=class extends qe{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=$a(1,e.dims.length+1);if(!k.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Zt({ndim:this.dims.length+1})]}computeOutputShape(e){e=dt(e);let t=e.slice();return this.dims.forEach((n,a)=>{t[a+1]=e[n]}),t}call(e,t){return Ue(Re(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Mx.className="Permute";se.registerClass(Mx);var Rx=class extends qe{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Re(e),a=-1;return Lc(ss(n,this.maskValue),a)}call(e,t){return D(()=>{this.invokeCallHook(e,t);let n=Re(e),a=-1,r=!0,s=Lc(ss(n,this.maskValue),a,r);return n.mul(s.asType(n.dtype))})}};Rx.className="Masking";se.registerClass(Rx);var Px=class extends qe{constructor(e){super(e);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(xt(e.inputLength))}this.inputDim=e.inputDim,Jt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Jt(this.outputDim,"outputDim"),this.embeddingsInitializer=wt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=kt(e.embeddingsRegularizer),this.activityRegularizer=kt(e.activityRegularizer),this.embeddingsConstraint=Ht(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return D(()=>this.maskZero?(e=Re(e),ss(e,He(e))):null)}computeOutputShape(e){if(e=dt(e),this.inputLength==null)return[...e,this.outputDim];let t=xt(this.inputLength);if(t.length!==e.length-1)throw new B(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let a=0;a<t.length;++a){let r=t[a],s=e[a+1];if(r!=null&&s!=null&&r!==s)throw new B(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return D(()=>{this.invokeCallHook(e,t);let n=Re(e);return n.dtype!=="int32"&&(n=rp(n,"int32")),V1(this.embeddings.read(),n.as1D()).reshape(dt(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Et(this.embeddingsInitializer),embeddingsRegularizer:ht(this.embeddingsRegularizer),activityRegularizer:ht(this.activityRegularizer),embeddingsConstraint:Gt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Px.className="Embedding";se.registerClass(Px);var Ki=class extends qe{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new $e}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){let r=e[e.length-t.length+a],s=t[a];if(r==null||s==null||r<0||s<0)n.push(null);else if(r===1)n.push(s);else if(s===1)n.push(r);else{if(r!==s)throw new B("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[dt(e)]),e=e,e.length<2)throw new B(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=ls(t),t.length>1)throw new B(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){let s=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}let a=e.map(r=>r.length);e.indexOf(null)===-1&&ls(a).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return D(()=>{if(e=e,this.reshapeRequired){let n=[],a=e.map(r=>r.rank);if(a.indexOf(null)===-1){let r=cs(a);for(let s of e){let i=s.rank;for(let o=0;o<r-i;++o)s=sp(s,1);n.push(s)}return this.mergeFunction(n)}else{let r=!1;for(let o of e){let l=o.rank;if(l==null){let c=o.shape,u=c[0],p=c.slice(1).concat([u]),d=o.reshape([u].concat(us(c.slice(1))));d=Ue(d,[1,0]),d=d.reshape(p),n.push(d),r=!0}else if(l>1){let c=$a(1,l).concat([0]);n.push(Ue(o,c)),r=!0}else n.push(o)}let s=this.mergeFunction(n),i=s.rank;if(r){if(i==null){let o=s.shape,l=o.length,c=o[l-1],u=[c].concat(o.slice(0,o.length-1));s=Ue(s.reshape([-1,c]),[1,0]).reshape(u)}else if(i>1){let o=[i-1].concat($a(0,i-1));s=Ue(s,o)}}return s}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let a=1;a<e.length;++a){let r=e[a]==null?null:e[a].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let a of e)a!=null&&a[0]!==null&&n.push(a[0]);return n=ls(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return D(()=>{if(t==null)return null;if(!Array.isArray(t))throw new B("`mask` should be an Array");if(!Array.isArray(e))throw new B("`inputs` should be an Array");if(t.length!==e.length)throw new B(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(a=>a==null))return null;t=t.map(a=>a==null?a:Qn(a,0));let n=t[0];for(let a=1;a<t.length-1;++a)n=ha(n,t[a]);return n})}},Ox=class extends Ki{constructor(e){super(e)}mergeFunction(e){return D(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Z(t,e[n]);return t})}};Ox.className="Add";se.registerClass(Ox);var Lx=class extends Ki{constructor(e){super(e)}mergeFunction(e){return D(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=L(t,e[n]);return t})}};Lx.className="Multiply";se.registerClass(Lx);var zx=class extends Ki{constructor(e){super(e)}mergeFunction(e){return D(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Z(t,e[n]);return L(1/e.length,t)})}};zx.className="Average";se.registerClass(zx);var Bx=class extends Ki{constructor(e){super(e)}mergeFunction(e){return D(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Sa(t,e[n]);return t})}};Bx.className="Maximum";se.registerClass(Bx);var Wx=class extends Ki{constructor(e){super(e)}mergeFunction(e){return D(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Pi(t,e[n]);return t})}};Wx.className="Minimum";se.registerClass(Wx);var Vx=class extends Ki{constructor(e){super(e);this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new B("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let a of e)if(a!=null){t=!1;break}if(t)return;let n=[];for(let a=0;a<e.length;++a){let r=e[a].slice();r.splice(this.axis,1);let s=!1;for(let i of n)if(k.arraysEqual(i,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new B("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return D(()=>Rb(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new B("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(let r of t.slice(1)){if(n[a]==null||r[a]==null){n[a]=null;break}n[a]+=r[a]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new B("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new B("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new B(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return D(()=>{let n=!0;if(t.forEach(s=>{if(s!=null){n=!1;return}}),n)return null;let a=[];for(let s=0;s<e.length;++s)t[s]==null?a.push(Mn(e[s]).asType("bool")):t[s].rank<e[s].rank?a.push(Qn(t[s],-1)):a.push(t[s]);let r=Ze(a,this.axis);return Eh(r,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Vx.className="Concatenate";se.registerClass(Vx);function yp(e,t){for(;e<0;)e+=t;return e}function W4(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new $e("batchDot is not implemented for tensors of 4D or higher rank yet");if(k.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),k.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new $e("batchDot is not implemented for complex64-type Tensors yet.");let a=e.shape.length,r=t.shape.length;n==null&&(n=[a-1,r-2]);let s=n;return D(()=>{let i;if(a>r){i=a-r;let l=[];for(let c=0;c<i;++c)l.push(1);t=t.reshape(t.shape.concat(l))}else if(r>a){i=r-a;let l=[];for(let c=0;c<i;++c)l.push(1);e=e.reshape(e.shape.concat(l))}else i=0;let o;if(e.shape.length===2&&t.shape.length===2)s[0]===s[1]?o=e.mul(t).sum(s[0]):o=e.transpose([1,0]).mul(t).sum(s[1]);else{let l=s[0]!==e.shape.length-1,c=s[1]===t.shape.length-1;o=e.matMul(t,l,c)}if(i>0){let l;a>r?l=a+r-3:l=a-1;let c=[];for(let u=l;u<l+i;++u)c.push(u);o=o.squeeze(c)}return o.shape.length===1&&(o=o.expandDims(1)),o})}var Ux=class extends Ki{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){k.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new $e("Dot layer does not support tensors of 4D or higher rank yet.");let a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new B(`Dimension incompatibility: ${t[a[0]]} !== ${n[a[1]]}`)}mergeFunction(e){if(e.length!==2)throw new B(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],a;return Array.isArray(this.axes)?a=this.axes.map((r,s)=>yp(r,e[s].shape.length)):a=[yp(this.axes,t.shape.length),yp(this.axes,n.shape.length)],this.normalize&&(t=Tm(t,a[0]),n=Tm(n,a[1])),W4(t,n,a)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[yp(this.axes,e.length),yp(this.axes,t.length)],n}computeOutputShape(e){k.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new $e("Dot layer does not support tensors of 4D or higher rank yet.");let a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);let r=t.concat(n);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Ux.className="Dot";se.registerClass(Ux);var Gx=class extends qe{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return D(()=>{this.invokeCallHook(e,t);let n=Re(e);return op(()=>dm(n.shape,0,this.stddev).add(n),()=>n,t.training||!1)})}};Gx.className="GaussianNoise";se.registerClass(Gx);var Hx=class extends qe{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return D(()=>{this.invokeCallHook(e,t);let n=Re(e);return this.rate>0&&this.rate<1?op(()=>{let a=Math.sqrt(this.rate/(1-this.rate));return n.mul(dm(n.shape,1,a))},()=>n,t.training||!1):n})}};Hx.className="GaussianDropout";se.registerClass(Hx);var jx=class extends qe{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Re(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return D(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return op(()=>{let a=Re(e),r=1.6732632423543772,s=1.0507009873554805,i=-r*s,o=Nr(Ql(n),this.rate);o=rp(o,"float32");let l=((1-this.rate)*(1+this.rate*i**2))**-.5,c=-l*i*this.rate;return a.mul(o).add(o.add(-1).mul(i)).mul(l).add(c)},()=>Re(e),t.training||!1)}return e})}};jx.className="AlphaDropout";se.registerClass(jx);function bp(e,t,n,a,r,s=.001){let i;if(e.rank===2)i=ck(e,t,n,a,r,s);else if(e.rank===3)i=pk(e,t,n,a,r,s);else if(e.rank===4)i=dk(e,t,n,a,r,s);else throw new $e(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return i}function V4(e,t,n,a,r=.001){return D(()=>{let s=Bh(e,a),i=s.mean,o=s.variance;return[bp(e,i,o,n,t,r),i,o]})}function U4(e,t,n,a,r=.001){return D(()=>{let s=Bh(e,a),i=s.mean,o=s.variance,l=[];for(let h of $a(0,e.rank))a.indexOf(h)!==-1?l.push(1):l.push(e.shape[h]);let c=i.reshape(l),u=o.reshape(l),p=t==null?null:t.reshape(l),d=n==null?null:n.reshape(l);return[bp(e,c,u,d,p,r),i,o]})}function G4(e,t,n,a,r=.001){return k.arraysEqual(a.slice().sort(),$a(0,e.rank-1))?V4(e,t,n,a,r):U4(e,t,n,a,r)}var qx=class extends qe{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=wt(e.betaInitializer||"zeros"),this.gammaInitializer=wt(e.gammaInitializer||"ones"),this.movingMeanInitializer=wt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=wt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ht(e.betaConstraint),this.gammaConstraint=Ht(e.gammaConstraint),this.betaRegularizer=kt(e.betaRegularizer),this.gammaRegularizer=kt(e.gammaRegularizer)}build(e){e=dt(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new B(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Zt({ndim:e.length,axes:{[t]:n}})];let a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return D(()=>{let n=t.training==null?!1:t.training,a=Re(e),r=a.shape,s=r.length,i=$a(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=Bi(1,s);l[o]=r[o];let c=i.slice();c.sort();let u=!k.arraysEqual(c,$a(0,s).slice(0,s-1)),p=()=>{if(u){let g=this.movingMean.read().reshape(l),y=this.movingVariance.read().reshape(l),b=this.center?this.beta.read().reshape(l):null,x=this.scale?this.gamma.read().reshape(l):null;return bp(a,g,y,b,x,this.epsilon)}else return bp(a,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return p();let[d,h,m]=G4(a,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(g,y,b)=>{D(()=>{let x=1-b,v=g.read(),N=v.sub(y).mul(x);g.write(v.sub(N))})};return(()=>{f(this.movingMean,h,this.momentum),f(this.movingVariance,m,this.momentum)})(),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Et(this.betaInitializer),gammaInitializer:Et(this.gammaInitializer),movingMeanInitializer:Et(this.movingMeanInitializer),movingVarianceInitializer:Et(this.movingVarianceInitializer),betaRegularizer:ht(this.betaRegularizer),gammaRegularizer:ht(this.gammaRegularizer),betaConstraint:Gt(this.betaConstraint),gammaConstraint:Gt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};qx.className="BatchNormalization";se.registerClass(qx);var Kx=class extends qe{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=wt(e.betaInitializer||"zeros"),this.gammaInitializer=wt(e.gammaInitializer||"ones"),this.betaRegularizer=kt(e.betaRegularizer),this.gammaRegularizer=kt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=dt(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(let r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==ls(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(r=>e[r]),a=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(e,t){let n=Re(e),a=n.shape,r=a.length;return D(()=>{let s=!0,{mean:i,variance:o}=Bh(n,this.axis,s),l=Bi(1,r);for(let m of this.axis)l[m]=a[m];let c=m=>m!=null&&m.shape.length!==r&&this.axis!==[r-1]?m.reshape(l):m,u=c(this.gamma.read()),p=c(this.beta.read()),d=[],h=[];for(let m=0;m<r;++m)this.axis.indexOf(m)!==-1?(d.push(a[m]),h.push(1)):(d.push(1),h.push(a[m]));return i=i.tile(d),o=o.tile(d),u=u.tile(h),p=p.tile(h),bp(n,i,o,p,u,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Et(this.betaInitializer),gammaInitializer:Et(this.gammaInitializer),betaRegularizer:ht(this.betaRegularizer),gammaRegularizer:ht(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Kx.className="LayerNormalization";se.registerClass(Kx);function H4(e,t,n){return D(()=>{if(e.rank!==4)throw new B(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new B("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=Fa()),n!=="channelsLast"&&n!=="channelsFirst")throw new B(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let a;return n==="channelsFirst"?a=[[0,0],[0,0],t[0],t[1]]:a=[[0,0],t[0],t[1],[0,0]],na(e,a)})}var Xx=class extends qe{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Fa():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new B(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new B(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new B(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Zt({ndim:4})]}computeOutputShape(e){e=dt(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return D(()=>H4(Re(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Xx.className="ZeroPadding2D";se.registerClass(Xx);function Vm(e,t,n,a,r,s){return D(()=>{Rt(r),R1(s),aa(a),n==null&&(n=[1,1]),a==null&&(a="valid"),r==null&&(r=Fa()),s==null&&(s="max"),e=yx(e,r);let i,o=a==="same"?"same":"valid";return s==="max"?i=Dt(e,t,n,o):i=Zn(e,t,n,o),r==="channelsFirst"&&(i=Ue(i,[0,3,1,2])),i})}function JI(e,t,n,a,r,s){return D(()=>{Rt(r),R1(s),aa(a),n==null&&(n=[1,1,1]),a==null&&(a="valid"),r==null&&(r=Fa()),s==null&&(s="max"),e=HI(e,r);let i,o=a==="same"?"same":"valid";return s==="max"?i=ib(e,t,n,o):i=jy(e,t,n,o),r==="channelsFirst"&&(i=Ue(i,[0,4,1,2,3])),i})}var ZI=class extends qe{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new B(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Jt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new B(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Jt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,aa(this.padding),this.inputSpec=[new Zt({ndim:3})]}computeOutputShape(e){e=dt(e);let t=Ra(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return D(()=>{this.invokeCallHook(e,t),e=sp(Re(e),2);let n=this.poolingFunction(Re(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return is(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},Yx=class extends ZI{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Rt(r),aa(a),Vm(e,t,n,a,r,"max")}};Yx.className="MaxPooling1D";se.registerClass(Yx);var Jx=class extends ZI{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Rt(r),aa(a),Vm(e,t,n,a,r,"avg")}};Jx.className="AveragePooling1D";se.registerClass(Jx);var QI=class extends qe{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new B(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Jt(this.poolSize,"poolSize"),Jt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Rt(this.dataFormat),aa(this.padding),this.inputSpec=[new Zt({ndim:4})]}computeOutputShape(e){e=dt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Ra(t,this.poolSize[0],this.padding,this.strides[0]),n=Ra(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return D(()=>(this.invokeCallHook(e,t),this.poolingFunction(Re(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Zx=class extends QI{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Rt(r),aa(a),Vm(e,t,n,a,r,"max")}};Zx.className="MaxPooling2D";se.registerClass(Zx);var Qx=class extends QI{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Rt(r),aa(a),Vm(e,t,n,a,r,"avg")}};Qx.className="AveragePooling2D";se.registerClass(Qx);var eN=class extends qe{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new B(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Jt(this.poolSize,"poolSize"),Jt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Rt(this.dataFormat),aa(this.padding),this.inputSpec=[new Zt({ndim:5})]}computeOutputShape(e){e=dt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],a=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Ra(t,this.poolSize[0],this.padding,this.strides[0]),n=Ra(n,this.poolSize[1],this.padding,this.strides[1]),a=Ra(a,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return D(()=>(this.invokeCallHook(e,t),this.poolingFunction(Re(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},ev=class extends eN{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Rt(r),aa(a),JI(e,t,n,a,r,"max")}};ev.className="MaxPooling3D";se.registerClass(ev);var tv=class extends eN{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Rt(r),aa(a),JI(e,t,n,a,r,"avg")}};tv.className="AveragePooling3D";se.registerClass(tv);var tN=class extends qe{constructor(e){super(e);this.inputSpec=[new Zt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new $e}},nv=class extends tN{constructor(e){super(e||{})}call(e,t){return D(()=>{let n=Re(e);return Ct(n,1)})}};nv.className="GlobalAveragePooling1D";se.registerClass(nv);var av=class extends tN{constructor(e){super(e||{})}call(e,t){return D(()=>{let n=Re(e);return ta(n,1)})}};av.className="GlobalMaxPooling1D";se.registerClass(av);var nN=class extends qe{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Rt(this.dataFormat),this.inputSpec=[new Zt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new $e}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},rv=class extends nN{call(e,t){return D(()=>{let n=Re(e);return this.dataFormat==="channelsLast"?Ct(n,[1,2]):Ct(n,[2,3])})}};rv.className="GlobalAveragePooling2D";se.registerClass(rv);var sv=class extends nN{call(e,t){return D(()=>{let n=Re(e);return this.dataFormat==="channelsLast"?ta(n,[1,2]):ta(n,[2,3])})}};sv.className="GlobalMaxPooling2D";se.registerClass(sv);var aN=class extends qe{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let a=t.layer,r=Ma(a,n);delete t.layer;let s={layer:r};return Object.assign(s,t),new e(s)}},iv=class extends aN{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=dt(e),e.length<3)throw new B(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=dt(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return D(()=>(e=Re(e),XI((n,a)=>[Re(this.layer.call(n,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};iv.className="TimeDistributed";se.registerClass(iv);function j4(e){Vi(rB,"BidirectionalMergeMode",e)}var q4="concat",ov=class extends aN{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Ma(n),t.goBackwards=t.goBackwards!==!0;let a={};if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=Ma(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?q4:e.mergeMode,j4(this.mergeMode),e.weights)throw new $e("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,a,r;return this.returnState&&(r=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,a=[n]):this.mergeMode==null?a=[n,n.slice()]:a=[n],this.returnState?this.mergeMode==null?a.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):Tn(a)}apply(e,t){let n=t==null?null:t.initialState,a=t==null?null:t.constants;t==null&&(t={});let r=KI(e,n,a,this.numConstants);if(e=r.inputs,n=r.initialState,a=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&a==null)return super.apply(e,t);let s=[],i=[];if(n!=null){let l=n.length;if(l%2>0)throw new B("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let c=n.map(u=>new Zt({shape:u.shape}));this.forwardLayer.stateSpec=c.slice(0,l/2),this.backwardLayer.stateSpec=c.slice(l/2),i.push(...c)}if(a!=null)throw new $e("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof Da;for(let l of s)if(l instanceof Da!==o)throw new B("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let l=[e].concat(s),c=this.inputSpec.concat(i),u=this.inputSpec;this.inputSpec=c;let p=super.apply(l,t);return this.inputSpec=u,p}else return super.apply(e,t)}call(e,t){return D(()=>{let n=t.initialState,a,r;if(n==null)a=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let o=n.slice(0,n.length/2),l=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let s;this.returnState&&(Array.isArray(a)&&(s=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=Rn(r,1));let i;return this.mergeMode==="concat"?i=Rb([a,r]):this.mergeMode==="sum"?i=Z(a,r):this.mergeMode==="ave"?i=L(.5,Z(a,r)):this.mergeMode==="mul"?i=L(a,r):this.mergeMode==null&&(i=[a,r]),this.returnState?this.mergeMode==null?i.concat(s):[i].concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ui(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Ui(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let a=this.forwardLayer.states.map(r=>null);return Array.isArray(n)?n.concat(a).concat(a):[n].concat(a).concat(a)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Ma(t.layer);if(delete t.layer,t.numConstants!=null)throw new $e("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let a=t;return a.layer=n,new e(a)}};ov.className="Bidirectional";se.registerClass(ov);function vB(e){return new iu(e)}function wB(e){return new mx(e)}function kB(e){return new px(e)}function IB(e){return new dx(e)}function NB(e){return new hx(e)}function TB(e){return new gx(e)}function SB(e){return new fx(e)}function CB(e){return new Pm(e)}function EB(e){return new fp(e)}function _B(e){return new xx(e)}function FB(e){return new Rm(e)}function AB(e){return new vx(e)}function $B(e){return new wx(e)}function DB(e){return new kx(e)}function MB(e){return new Ix(e)}function RB(e){return new Ax(e)}function PB(e){return new _x(e)}function OB(e){return new Wm(e)}function LB(e){return new Ex(e)}function zB(e){return new Fx(e)}function BB(e){return new $x(e)}function WB(e){return new Dx(e)}function VB(e){return new Mx(e)}function UB(e){return new Px(e)}function GB(e){return new Ox(e)}function HB(e){return new zx(e)}function jB(e){return new Vx(e)}function qB(e){return new Bx(e)}function KB(e){return new Wx(e)}function XB(e){return new Lx(e)}function YB(e){return new Ux(e)}function JB(e){return new qx(e)}function ZB(e){return new Kx(e)}function QB(e){return new Xx(e)}function Gb(e){return new Jx(e)}function eW(e){return Gb(e)}function tW(e){return Gb(e)}function Hb(e){return new Qx(e)}function nW(e){return Hb(e)}function aW(e){return Hb(e)}function jb(e){return new tv(e)}function rW(e){return jb(e)}function sW(e){return jb(e)}function iW(e){return new nv(e)}function oW(e){return new rv(e)}function K1(e){return new av(e)}function X1(e){return new sv(e)}function Y1(e){return new Yx(e)}function J1(e){return new Zx(e)}function lW(e){return new ev(e)}function uW(e){return new Tx(e)}function cW(e){return new zm(e)}function pW(e){return new Sx(e)}function dW(e){return new gp(e)}function hW(e){return new Nx(e)}function mW(e){return new Lm(e)}function fW(e){return new Cx(e)}function gW(e){return new Bm(e)}function yW(e){return new ar(e)}function bW(e){return new Om(e)}function xW(e){return new ov(e)}function vW(e){return new iv(e)}var wW=K1,kW=X1,IW=Y1,NW=J1;function TW(e){return new Gx(e)}function SW(e){return new Hx(e)}function CW(e){return new jx(e)}function EW(e){return new Rx(e)}var rN={};Oe(rN,{MAPE:()=>rV,MSE:()=>oV,binaryAccuracy:()=>K4,binaryCrossentropy:()=>X4,categoricalAccuracy:()=>J4,categoricalCrossentropy:()=>Z4,cosineProximity:()=>tV,mape:()=>sV,meanAbsoluteError:()=>nV,meanAbsolutePercentageError:()=>aV,meanSquaredError:()=>iV,mse:()=>lV,precision:()=>Q4,recall:()=>eV,sparseCategoricalAccuracy:()=>Y4});function K4(e,t){return Zb(e,t)}function X4(e,t){return dI(e,t)}function Y4(e,t){return hI(e,t)}function J4(e,t){return Qb(e,t)}function Z4(e,t){return ex(e,t)}function Q4(e,t){return pI(e,t)}function eV(e,t){return qW(e,t)}function tV(e,t){return Yb(e,t)}function nV(e,t){return Sm(e,t)}function aV(e,t){return lu(e,t)}function rV(e,t){return lu(e,t)}function sV(e,t){return lu(e,t)}function iV(e,t){return Hi(e,t)}function oV(e,t){return Hi(e,t)}function lV(e,t){return Hi(e,t)}var sN={};Oe(sN,{modelFromJSON:()=>C4});var iN={};Oe(iN,{l1:()=>cV,l1l2:()=>uV,l2:()=>pV});function uV(e){return new hp(e)}function cV(e){return R4(e)}function pV(e){return P4(e)}var oN=class extends ou{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof _r))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Um(e,t){return e<t}function lN(e,t){return e>t}var uN=class extends oN{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new $e("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Um:this.mode==="max"?this.monitorFunc=lN:this.monitor.indexOf("acc")!==-1?this.monitorFunc=lN:this.monitorFunc=Um,this.monitorFunc===Um&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Um?Infinity:-Infinity}async onEpochEnd(e,t){await ps(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function dV(e){return new uN(e)}var hV={earlyStopping:dV},Pa;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(Pa||(Pa={}));var cN;(function(e){let t;(function(n){n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(cN||(cN={}));var lv={};function mV(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};lv[e]=n}function pN(e){return lv[e]}function fV(e){delete lv[e]}function I(e,t,n,a,r){let s=t.inputParams[e];if(s&&s.inputIndexStart!==void 0){let o=s.inputIndexStart,l=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?o+1:s.inputIndexEnd;if(s.type==="tensor")return Cn(t.inputNames[s.inputIndexStart],n,a,r);if(s.type==="tensors")return t.inputNames.slice(o,l).map(p=>Cn(p,n,a,r));let c=Cn(t.inputNames.slice(o)[0],n,a,r),u=c.dataSync();return s.type==="number"?u[0]:k.toNestedArray(c.shape,u)}let i=t.attrParams[e];return i&&i.value}function Cn(e,t,n,a){let[r,s]=Ln(e);if(a!=null){let o=a.getHashTableHandleByName(r);if(o!=null)return o}let i=n.currentContextIds.find(o=>!!t[Gm(r,o)]);return i!==void 0?t[Gm(r,i)][s]:void 0}function gV(e,t,n){return t[Gm(e,n.currentContextId)]}function Fr(e,t){let[n,a]=Ln(e);return[Gm(n,t&&t.currentContextId),a]}function Gm(e,t){return t?`${e}-${t}`:e}function Ln(e){let t=e.split(":");return t.length===1?[e,0]:[t[0],Number(t[t.length-1])]}function Hm(e,t,n){let a=I("pad",e,t,n);if(a==="explicit"){a=I("explicitPaddings",e,t,n);let r=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)r[s][0]=a[s*2],r[s][1]=a[s*2+1];return r}return a}function Ar(e){return e.kept?e:es(e)}var dN={};Oe(dN,{json:()=>yV});var yV=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],hN={};Oe(hN,{json:()=>bV});var bV=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],mN={};Oe(mN,{json:()=>xV});var xV=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],fN={};Oe(fN,{json:()=>vV});var vV=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],gN={};Oe(gN,{json:()=>wV});var wV=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],yN={};Oe(yN,{json:()=>kV});var kV=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],bN={};Oe(bN,{json:()=>IV});var IV=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],xN={};Oe(xN,{json:()=>NV});var NV=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],vN={};Oe(vN,{json:()=>TV});var TV=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}],wN={};Oe(wN,{json:()=>SV});var SV=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],kN={};Oe(kN,{json:()=>CV});var CV=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],IN={};Oe(IN,{json:()=>EV});var EV=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],NN={};Oe(NN,{json:()=>_V});var _V=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],TN={};Oe(TN,{json:()=>FV});var FV=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],SN={};Oe(SN,{json:()=>AV});var AV=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],CN={};Oe(CN,{json:()=>$V});var $V=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],EN={};Oe(EN,{json:()=>DV});var DV=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}],FN=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[dN,hN,mN,fN,gN,yN,bN,kN,wN,xN,IN,NN,TN,SN,CN,EN,vN],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,a)=>(n[a.tfOpName]=a,n),{})}transformGraph(e,t={}){let n=e.node,a=[],r=[],s=[],i=n.reduce((m,f)=>(m[f.name]=this.mapNode(f),f.op.startsWith("Placeholder")?a.push(m[f.name]):f.op==="Const"?r.push(m[f.name]):(f.input==null||f.input.length===0)&&s.push(m[f.name]),m),{}),o=[],l=[],c={},u={};t!=null&&(c=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));let p=Object.keys(i);p.forEach(m=>{let f=i[m];f.inputNames.forEach(g=>{let[y]=Fr(g);f.inputs.push(i[y]),i[y].children.push(f)})}),Object.keys(u).length===0?p.forEach(m=>{let f=i[m];f.children.length===0&&l.push(f)}):Object.keys(u).forEach(m=>{let[f]=Fr(m),g=i[f];g!=null&&(g.signatureKey=u[m],l.push(g))}),Object.keys(c).length>0?Object.keys(c).forEach(m=>{let[f]=Fr(m),g=i[f];g&&(g.signatureKey=c[m],o.push(g))}):o=a;let d={};e.library!=null&&e.library.function!=null&&(d=e.library.function.reduce((m,f)=>(m[f.signature.name]=this.mapFunction(f),m),{}));let h={nodes:i,inputs:o,outputs:l,weights:r,placeholders:a,signature:t,functions:d};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=pN(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(a=>a.startsWith("^")?a.substr(1):a),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((a,r)=>(a[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},a),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((a,r)=>{let s=r.type,i;switch(r.type){case"string":i=uv(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=uv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":i=yv(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=yv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":i=pv(e.attr,r.tfName,r.defaultValue||0),i===void 0&&!!r.tfDeprecatedName&&(i=pv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":i=gv(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=gv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":i=cv(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=cv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":i=xv(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=xv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":i=fv(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=fv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":i=bv(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=bv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":i=hv(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=hv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":i=mv(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=mv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":i=_N(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=_N(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return a[r.name]={value:i,type:s},a},{})),n}mapFunction(e){let t=e.nodeDef,n=[],a=[],r={};t!=null&&(r=t.reduce((c,u)=>(c[u.name]=this.mapNode(u),u.op==="Const"&&a.push(c[u.name]),c),{}));let s=[],i=[];e.signature.inputArg.forEach(c=>{let[u]=Fr(c.name),p={name:u,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:dv(c.type),type:"dtype"}},children:[]};p.signatureKey=c.name,s.push(p),r[u]=p}),Object.keys(r).forEach(c=>{let u=r[c];u.inputNames.forEach(p=>{let[d]=Fr(p);u.inputs.push(r[d]),r[d].children.push(u)})});let o=e.ret;e.signature.outputArg.forEach(c=>{let[u,p]=Fr(o[c.name]),d=r[u];d!=null&&(d.defaultOutput=p,i.push(d))});let l=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:i,weights:a,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function MV(e){let t=ee().global;if(typeof t.atob!="undefined")return t.atob(e);if(typeof Buffer!="undefined")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function AN(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):MV(e);return t?n:n.toLowerCase()}function uv(e,t,n,a=!1){let r=e[t];return r!=null?AN(r.s,a):n}function cv(e,t,n){let a=e[t];return a?a.b:n}function pv(e,t,n){let a=e[t]||{},r=a.i!=null?a.i:a.f!=null?a.f:n;return typeof r=="number"?r:parseInt(r,10)}function dv(e){switch(typeof e=="string"&&(e=Pa[e]),e){case Pa.DT_FLOAT:return"float32";case Pa.DT_INT32:case Pa.DT_INT64:case Pa.DT_INT8:case Pa.DT_UINT8:return"int32";case Pa.DT_BOOL:return"bool";case Pa.DT_DOUBLE:return"float32";case Pa.DT_STRING:return"string";default:return null}}function _N(e,t,n){let a=e[t];return a&&a.func?a.func.name:n}function hv(e,t,n){let a=e[t];return a&&a.type?dv(a.type):n}function mv(e,t,n){let a=e[t];return a&&a.list&&a.list.type?a.list.type.map(r=>dv(r)):n}function $N(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function fv(e,t,n){let a=e[t];return a&&a.shape?$N(a.shape):n}function gv(e,t,n){let a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):n}function yv(e,t,n,a=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map(s=>AN(s,a)):n}function bv(e,t,n){let a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map(r=>$N(r)):n}function xv(e,t,n){let a=e[t];return a&&a.list&&a.list.b?a.list.b:n}var RV=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(a=>this.getInput(a)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((a,r)=>(a[r]=this.getAttr(r),a),{}))}getInput(e){return Cn(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return Cn(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return pv(this.node.rawAttrs,e,t);if(n.s!=null)return uv(this.node.rawAttrs,e,t);if(n.b!=null)return cv(this.node.rawAttrs,e,t);if(n.shape!=null)return fv(this.node.rawAttrs,e,t);if(n.type!=null)return hv(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return gv(this.node.rawAttrs,e,t);if(n.list.s!=null)return yv(this.node.rawAttrs,e,t);if(n.list.shape!=null)return bv(this.node.rawAttrs,e,t);if(n.list.b!=null)return xv(this.node.rawAttrs,e,t);if(n.list.type!=null)return mv(this.node.rawAttrs,e,t)}return t}},PV=(e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[Z(I("a",e,t,n),I("b",e,t,n))];case"AddN":return[ik(I("tensors",e,t,n))];case"FloorMod":case"Mod":return[zh(I("a",e,t,n),I("b",e,t,n))];case"Mul":return[L(I("a",e,t,n),I("b",e,t,n))];case"RealDiv":case"Div":return[ve(I("a",e,t,n),I("b",e,t,n))];case"DivNoNan":return[Zy(I("a",e,t,n),I("b",e,t,n))];case"FloorDiv":return[Ch(I("a",e,t,n),I("b",e,t,n))];case"Sub":return[fe(I("a",e,t,n),I("b",e,t,n))];case"Minimum":return[Pi(I("a",e,t,n),I("b",e,t,n))];case"Maximum":return[Sa(I("a",e,t,n),I("b",e,t,n))];case"Pow":return[Ja(I("a",e,t,n),I("b",e,t,n))];case"SquaredDifference":return[Qc(I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},OV=(e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Wt(I("x",e,t,n))];case"Acos":return[Py(I("x",e,t,n))];case"Acosh":return[Oy(I("x",e,t,n))];case"Asin":return[zy(I("x",e,t,n))];case"Asinh":return[By(I("x",e,t,n))];case"Atan":return[Wy(I("x",e,t,n))];case"Atan2":return[Vy(I("x",e,t,n),I("y",e,t,n))];case"Atanh":return[Uy(I("x",e,t,n))];case"Ceil":return[qy(I("x",e,t,n))];case"Complex":return[Jr(I("real",e,t,n),I("imag",e,t,n))];case"Cos":return[Uc(I("x",e,t,n))];case"Cosh":return[$h(I("x",e,t,n))];case"Elu":return[Xl(I("x",e,t,n))];case"Erf":return[Qy(I("x",e,t,n))];case"Exp":return[mn(I("x",e,t,n))];case"Expm1":return[eb(I("x",e,t,n))];case"Floor":return[Yl(I("x",e,t,n))];case"Log":return[Dn(I("x",e,t,n))];case"Log1p":return[Rh(I("x",e,t,n))];case"Imag":return[Mh(I("x",e,t,n))];case"Neg":return[St(I("x",e,t,n))];case"Reciprocal":return[cb(I("x",e,t,n))];case"Real":return[Xc(I("x",e,t,n))];case"Relu":return[Xe(I("x",e,t,n))];case"Round":return[pb(I("x",e,t,n))];case"Selu":return[Hh(I("x",e,t,n))];case"Sigmoid":return[da(I("x",e,t,n))];case"Sin":return[jh(I("x",e,t,n))];case"Sign":return[db(I("x",e,t,n))];case"Sinh":return[qh(I("x",e,t,n))];case"Softplus":return[Jl(I("x",e,t,n))];case"Sqrt":return[rn(I("x",e,t,n))];case"Square":return[lt(I("x",e,t,n))];case"Tanh":return[Kl(I("x",e,t,n))];case"Tan":return[fb(I("x",e,t,n))];case"ClipByValue":return[Yt(I("x",e,t,n),I("clipValueMin",e,t,n),I("clipValueMax",e,t,n))];case"Relu6":return[Uh(I("x",e,t,n))];case"Rsqrt":return[Gh(Cn(e.inputNames[0],t,n))];case"Prod":return[Wh(I("x",e,t,n),I("axes",e,t,n))];case"LeakyRelu":return[Gc(I("x",e,t,n),I("alpha",e,t,n))];case"Prelu":return[Kc(I("x",e,t,n),I("alpha",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function ya(e,t,n=""){k.assert(LV(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function LV(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==-1&&t[n]!==-1&&e[n]!==t[n])return!1;return!0}var zV=class{constructor(e,t,n,a,r,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=de(0),Xt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),ya(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Xt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,a)=>this.write(n,t[a]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let a=0;a<this.size();a++)e.push(a)}if(e.length===0)return Yn([],[0].concat(this.elementShape));let n=this.readMany(e);return ya(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Mt(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Yn([],[0].concat(this.elementShape));let t=[];for(let a=0;a<this.size();a++)t.push(a);let n=this.readMany(t);return ya(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Ze(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,pt(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,a=e.map(o=>(n+=o,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=n===0?0:t.size/n,s=[];D(()=>{t=j(t,[1,n,r]);for(let o=0;o<e.length;++o){let l=o===0?0:a[o-1],c=[0,l,0],u=[1,e[o],r];s[o]=j(We(t,c,u),this.elementShape)}return s});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}},xp=class{constructor(e,t,n,a=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(r=>{if(n!==r.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${r.dtype}`);ya(t,r.shape,"TensorList shape mismatch: "),Xt(r)}),this.idTensor=de(0),this.maxNumElements=a,Xt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new xp([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return ya(e,this.elementShape,"TensorList shape mismatch: "),D(()=>{let a=this.tensors.map(r=>j(r,e));return Mt(a,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=this.tensors.pop();return ya(n.shape,e,"TensorList shape mismatch: "),j(n,e)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(ya(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Xt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);return ya(this.tensors[e].shape,t,"TensorList shape mismatch: "),this.tensors[e]}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);ya(this.elementShape,t.shape,"TensorList shape mismatch: "),Xt(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);return ya(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size()),e.length===0?Yn([],[0].concat(this.elementShape)):D(()=>{let a=e.map(r=>j(this.tensors[r],n));return Mt(a,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);return ya(this.elementShape,t,"TensorList shape mismatch: "),this.size()===0?Yn([],[0].concat(this.elementShape)):D(()=>{let n=this.tensors.map(a=>j(a,t));return Ze(n,0)})}};function BV(e,t,n){let a=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let r=e.shape.slice(1);ya(r,t,"TensorList shape mismatch: ");let s=pt(e);return new xp(s,t,a)}function WV(e,t,n){return new xp([],e,t,n)}function VV(e,t,n,a){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(a!=null&&a!==-1&&r>=a)throw new Error(`Max index must be < array size (${r}  vs. ${a})`);let s=new xp([],n,e.dtype,a),i=pt(e,0);return t.forEach((o,l)=>{s.setItem(o,i[l])}),s}function UV(e,t,n){let a=0,r=t.map(l=>(a+=l,a));if(a!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${a}, and tensor's shape is: ${e.shape}`);let s=a===0?0:e.size/a,i=D(()=>{let l=[];e=j(e,[1,a,s]);for(let c=0;c<t.length;++c){let u=c===0?0:r[c-1],p=[0,u,0],d=[1,t[c],s];l[c]=j(We(e,p,d),n)}return e.dispose(),l}),o=new xp([],n,e.dtype,t.length);for(let l=0;l<i.length;l++)o.setItem(l,i[l]);return o}var GV=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let a=I("thenBranch",e,t,n),r=I("elseBranch",e,t,n),s=I("cond",e,t,n),i=I("args",e,t,n);return(await s.data())[0]?n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let a=I("body",e,t,n),r=I("cond",e,t,n),s=I("args",e,t,n),i=await n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map(u=>u.id),l=await i[0].data();i.forEach(u=>{!u.kept&&o.indexOf(u.id)===-1&&u.dispose()});let c=s;for(;l[0];){let u=c;c=await n.functionMap[a].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);let p=c.map(h=>h.id);u.forEach(h=>{!h.kept&&o.indexOf(h.id)===-1&&p.indexOf(h.id)===-1&&h.dispose()});let d=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);l=await d[0].data(),d.forEach(h=>{!h.kept&&o.indexOf(h.id)===-1&&p.indexOf(h.id)===-1&&h.dispose()})}return c}case"LoopCond":{let a=I("pred",e,t,n);return[Ar(a)]}case"Switch":{let a=I("pred",e,t,n),r=I("data",e,t,n);return r.kept||(r=Ar(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let a=e.inputNames.find(r=>Cn(r,t,n)!==void 0);if(a){let r=Cn(a,t,n);return[Ar(r)]}return}case"Enter":{let a=I("frameName",e,t,n),r=I("tensor",e,t,n);return n.enterFrame(a),[Ar(r)]}case"Exit":{let a=I("tensor",e,t,n);return n.exitFrame(),[Ar(a)]}case"NextIteration":{let a=I("tensor",e,t,n);return n.nextIteration(),[Ar(a)]}case"TensorArrayV3":{let a=I("size",e,t,n),r=I("dtype",e,t,n),s=I("elementShape",e,t,n),i=I("dynamicSize",e,t,n),o=I("clearAfterRead",e,t,n),l=I("identicalElementShapes",e,t,n),c=I("name",e,t,n),u=new zV(c,r,a,s,l,i,o);return n.addTensorArray(u),[u.idTensor,de(1)]}case"TensorArrayWriteV3":{let a=I("tensorArrayId",e,t,n),r=I("index",e,t,n),s=I("tensor",e,t,n),i=n.getTensorArray(a.id);return i.write(r,s),[i.idTensor]}case"TensorArrayReadV3":{let a=I("tensorArrayId",e,t,n),r=I("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{let a=I("tensorArrayId",e,t,n),r=I("indices",e,t,n),s=I("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,s)]}case"TensorArrayScatterV3":{let a=I("tensorArrayId",e,t,n),r=I("indices",e,t,n),s=I("tensor",e,t,n),i=n.getTensorArray(a.id);return i.scatter(r,s),[i.idTensor]}case"TensorArrayConcatV3":{let a=I("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),s=I("dtype",e,t,n);return[r.concat(s)]}case"TensorArraySplitV3":{let a=I("tensorArrayId",e,t,n),r=I("tensor",e,t,n),s=I("lengths",e,t,n),i=n.getTensorArray(a.id);return i.split(s,r),[i.idTensor]}case"TensorArraySizeV3":{let a=I("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return[de(r.size(),"int32")]}case"TensorArrayCloseV3":{let a=I("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let a=I("tensorListId",e,t,n),r=I("index",e,t,n),s=I("tensor",e,t,n),i=n.getTensorList(a.id);return i.setItem(r,s),[i.idTensor]}case"TensorListGetItem":{let a=I("tensorListId",e,t,n),r=I("index",e,t,n),s=I("elementShape",e,t,n),i=I("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let a=I("indices",e,t,n),r=I("tensor",e,t,n),s=I("elementShape",e,t,n),i=I("numElements",e,t,n),o=VV(r,a,s,i);return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let a=I("elementShape",e,t,n),r=I("elementDType",e,t,n),s;e.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=I(s,e,t,n),o=WV(a,r,i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{let a=I("tensorListId",e,t,n),r=I("indices",e,t,n),s=I("elementShape",e,t,n),i=I("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,i,s)]}case"TensorListStack":{let a=I("tensorListId",e,t,n),r=I("elementShape",e,t,n),s=I("elementDType",e,t,n),i=I("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,s,i)]}case"TensorListFromTensor":{let a=I("tensor",e,t,n),r=I("elementShape",e,t,n),s=I("elementDType",e,t,n),i=BV(a,r,s);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":{let a=I("tensorListId",e,t,n),r=n.getTensorList(a.id),s=I("dtype",e,t,n),i=I("elementShape",e,t,n);return[r.concat(s,i)]}case"TensorListPushBack":{let a=I("tensorListId",e,t,n),r=I("tensor",e,t,n),s=n.getTensorList(a.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{let a=I("tensorListId",e,t,n),r=I("elementShape",e,t,n),s=I("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,s)]}case"TensorListSplit":{let a=I("tensor",e,t,n),r=I("elementShape",e,t,n),s=I("lengths",e,t,n),i=UV(a,s,r);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function DN(e,t,n){let[a,r]=I("fusedOps",e,t,n),s=a==="biasadd",i=r==="prelu",o=a==="fusedbatchnorm",l=I("numArgs",e,t,n);if(s){if(i&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");let c=I("strides",e,t,n),u=Hm(e,t,n),p=I("dataFormat",e,t,n).toUpperCase(),d=I("dilations",e,t,n),[h,m]=I("args",e,t,n),f=I("leakyreluAlpha",e,t,n);return{stride:c,pad:u,dataFormat:p,dilations:d,biasArg:h,preluArg:m,activationFunc:r,leakyreluAlpha:f}}var HV=(e,t,n)=>{switch(e.op){case"Conv1D":{let a=I("stride",e,t,n),r=I("pad",e,t,n),s=I("dataFormat",e,t,n).toUpperCase(),i=I("dilation",e,t,n);return[Fh(I("x",e,t,n),I("filter",e,t,n),a,r,s,i)]}case"Conv2D":{let a=I("strides",e,t,n),r=Hm(e,t,n),s=I("dataFormat",e,t,n).toUpperCase(),i=I("dilations",e,t,n);return[$t(I("x",e,t,n),I("filter",e,t,n),[a[1],a[2]],r,s,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:a,pad:r,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:c,leakyreluAlpha:u}=DN(e,t,n);return[os.conv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[a[1],a[2]],pad:r,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:c,preluActivationWeights:l,leakyreluAlpha:u})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:r,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:c,leakyreluAlpha:u}=DN(e,t,n);return[os.depthwiseConv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[a[1],a[2]],pad:r,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:c,preluActivationWeights:l,leakyreluAlpha:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=I("outputShape",e,t,n),r=I("strides",e,t,n),s=Hm(e,t,n);return[Ah(I("x",e,t,n),I("filter",e,t,n),a,[r[1],r[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=I("strides",e,t,n),r=Hm(e,t,n),s=I("dilations",e,t,n),i=I("dataFormat",e,t,n).toUpperCase();return[kr(I("input",e,t,n),I("filter",e,t,n),[a[1],a[2]],r,i,[s[1],s[2]])]}case"Conv3D":{let a=I("strides",e,t,n),r=I("pad",e,t,n),s=I("dataFormat",e,t,n).toUpperCase(),i=I("dilations",e,t,n);return[Xy(I("x",e,t,n),I("filter",e,t,n),[a[1],a[2],a[3]],r,s,[i[1],i[2],i[3]])]}case"AvgPool":{let a=I("strides",e,t,n),r=I("pad",e,t,n),s=I("kernelSize",e,t,n);return[Zn(I("x",e,t,n),[s[1],s[2]],[a[1],a[2]],r)]}case"MaxPool":{let a=I("strides",e,t,n),r=I("pad",e,t,n),s=I("kernelSize",e,t,n);return[Dt(I("x",e,t,n),[s[1],s[2]],[a[1],a[2]],r)]}case"MaxPoolWithArgmax":{let a=I("strides",e,t,n),r=I("pad",e,t,n),s=I("kernelSize",e,t,n),i=I("includeBatchInIndex",e,t,n),{result:o,indexes:l}=Ak(I("x",e,t,n),[s[1],s[2]],[a[1],a[2]],r,i);return[o,l]}case"AvgPool3D":{let a=I("strides",e,t,n),r=I("pad",e,t,n),s=I("kernelSize",e,t,n);return[jy(I("x",e,t,n),[s[1],s[2],s[3]],[a[1],a[2],a[3]],r)]}case"MaxPool3D":{let a=I("strides",e,t,n),r=I("pad",e,t,n),s=I("kernelSize",e,t,n);return[ib(I("x",e,t,n),[s[1],s[2],s[3]],[a[1],a[2],a[3]],r)]}case"Dilation2D":{let a=I("strides",e,t,n),r=I("pad",e,t,n),s=I("dilations",e,t,n),i=a[1],o=a[2],l=s[1],c=s[2];return[Jy(I("x",e,t,n),I("filter",e,t,n),[i,o],r,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},jV=(e,t,n)=>{switch(e.op){case"Fill":{let a=I("shape",e,t,n),r=I("dtype",e,t,n),s=I("value",e,t,n);return[Nn(a,s,r)]}case"LinSpace":{let a=I("start",e,t,n),r=I("stop",e,t,n),s=I("num",e,t,n);return[Nk(a,r,s)]}case"Multinomial":{let a=I("logits",e,t,n),r=I("numSamples",e,t,n),s=I("seed",e,t,n);return[$k(a,r,s)]}case"OneHot":{let a=I("indices",e,t,n),r=I("depth",e,t,n),s=I("onValue",e,t,n),i=I("offValue",e,t,n);return[Hl(a,r,s,i)]}case"Ones":return[Ya(I("shape",e,t,n),I("dtype",e,t,n))];case"OnesLike":return[Mn(I("x",e,t,n))];case"RandomUniform":return[Ql(I("shape",e,t,n),I("minval",e,t,n),I("maxval",e,t,n),I("dtype",e,t,n))];case"Range":{let a=I("start",e,t,n),r=I("stop",e,t,n),s=I("step",e,t,n);return[Vh(a,r,s,I("dtype",e,t,n))]}case"TruncatedNormal":{let a=I("shape",e,t,n),r=I("mean",e,t,n),s=I("stdDev",e,t,n),i=I("seed",e,t,n);return[Yh(a,r,s,I("dtype",e,t,n),i)]}case"Zeros":return[bt(I("shape",e,t,n),I("dtype",e,t,n))];case"ZerosLike":return[He(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function vv(e,t,n){let a=I("boxes",e,t,n),r=I("scores",e,t,n),s=I("maxOutputSize",e,t,n),i=I("iouThreshold",e,t,n),o=I("scoreThreshold",e,t,n),l=I("softNmsSigma",e,t,n);return{boxes:a,scores:r,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}}var qV=async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:a,scores:r,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=vv(e,t,n),c=await Za.nonMaxSuppressionWithScoreAsync(a,r,s,i,o,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:a,scores:r,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=vv(e,t,n),l=I("padToMaxOutputSize",e,t,n),c=await Za.nonMaxSuppressionPaddedAsync(a,r,s,i,o,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:a,scores:r,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=vv(e,t,n);return[await Za.nonMaxSuppressionAsync(a,r,s,i,o)]}case"Where":{let a=pe(I("condition",e,t,n),"bool"),r=[await bb(a)];return a.dispose(),r}case"ListDiff":return Rk(I("x",e,t,n),I("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},KV=(e,t,n)=>{switch(e.op){case"TopKV2":{let a=I("x",e,t,n),r=I("k",e,t,n),s=I("sorted",e,t,n),i=gb(a,r,s);return[i.values,i.indices]}case"Unique":{let a=I("x",e,t,n),r=Jh(a);return[r.values,r.indices]}case"UniqueV2":{let a=I("x",e,t,n),r=I("axis",e,t,n),s=Jh(a,r);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},XV=(e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=I("default",e,t,n);return[Cn(e.name,t,n)||a];case"Placeholder":return[Cn(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=I("x",e,t,n);return[Ar(c)]}case"IdentityN":return I("x",e,t,n).map(c=>Ar(c));case"Snapshot":let r=I("x",e,t,n);return[Ar(r)];case"Shape":return[tt(I("x",e,t,n).shape,"int32")];case"ShapeN":return I("x",e,t,n).map(c=>tt(c.shape));case"Size":return[de(I("x",e,t,n).size,"int32")];case"Rank":return[de(I("x",e,t,n).rank,"int32")];case"NoOp":return[de(1)];case"Print":let s=I("x",e,t,n),i=I("data",e,t,n),o=I("message",e,t,n),l=I("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let c=0;c<i.length;c++)console.log(Array.prototype.slice.call(i[c].dataSync()).slice(0,l));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}},YV=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=de(0),this.tensorMap=new Map,Xt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(a=>a.dispose()),this.tensorMap.clear(),D(()=>{let a=pt(t),r=n.length,s=a.length;k.assert(r===s,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`);for(let i=0;i<r;i++){let o=n[i],l=a[i];Xt(l),this.tensorMap.set(o,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return D(()=>{let a=[];for(let r=0;r<n.length;r++){let s=n[r],i=this.findWithDefault(s,t);a.push(i)}return Mt(a)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},JV=async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=I("keyDType",e,t,n),s=I("valueDType",e,t,n),i=new YV(r,s);return a.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let r=I("tableHandle",e,t,n,a),s=I("keys",e,t,n),i=I("values",e,t,n);return[await a.getHashTableById(r.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let r=I("tableHandle",e,t,n,a),s=I("keys",e,t,n),i=I("defaultValue",e,t,n);return[await a.getHashTableById(r.id).find(s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},ZV=(e,t,n)=>{switch(e.op){case"ResizeBilinear":{let a=I("images",e,t,n),r=I("size",e,t,n),s=I("alignCorners",e,t,n),i=I("halfPixelCenters",e,t,n);return[Za.resizeBilinear(a,[r[0],r[1]],s,i)]}case"ResizeNearestNeighbor":{let a=I("images",e,t,n),r=I("size",e,t,n),s=I("alignCorners",e,t,n),i=I("halfPixelCenters",e,t,n);return[Za.resizeNearestNeighbor(a,[r[0],r[1]],s,i)]}case"CropAndResize":{let a=I("image",e,t,n),r=I("boxes",e,t,n),s=I("boxInd",e,t,n),i=I("cropSize",e,t,n),o=I("method",e,t,n),l=I("extrapolationValue",e,t,n);return[Za.cropAndResize(a,r,s,i,o,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},QV=(e,t,n)=>{switch(e.op){case"Equal":return[Ir(I("a",e,t,n),I("b",e,t,n))];case"NotEqual":return[ss(I("a",e,t,n),I("b",e,t,n))];case"Greater":return[ea(I("a",e,t,n),I("b",e,t,n))];case"GreaterEqual":return[Nr(I("a",e,t,n),I("b",e,t,n))];case"Less":return[Hc(I("a",e,t,n),I("b",e,t,n))];case"LessEqual":return[rs(I("a",e,t,n),I("b",e,t,n))];case"LogicalAnd":return[ha(I("a",e,t,n),I("b",e,t,n))];case"LogicalNot":return[jc(I("a",e,t,n))];case"LogicalOr":return[Lh(I("a",e,t,n),I("b",e,t,n))];case"Select":case"SelectV2":return[In(I("condition",e,t,n),I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},eU=(e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[ze(I("a",e,t,n),I("b",e,t,n),I("transposeA",e,t,n),I("transposeB",e,t,n))];case"Transpose":return[Ue(I("x",e,t,n),I("perm",e,t,n))];case"_FusedMatMul":let[a,r]=I("fusedOps",e,t,n),s=a==="biasadd",i=r==="prelu",o=I("numArgs",e,t,n),l=I("leakyreluAlpha",e,t,n);if(s){if(i&&o!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&o!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,u]=I("args",e,t,n);return[os.matMul({a:I("a",e,t,n),b:I("b",e,t,n),transposeA:I("transposeA",e,t,n),transposeB:I("transposeB",e,t,n),bias:c,activation:r,preluActivationWeights:u,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},tU=(e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[wr(I("x",e,t,n),I("mean",e,t,n),I("variance",e,t,n),I("offset",e,t,n),I("scale",e,t,n),I("epsilon",e,t,n))];case"FusedBatchNormV3":return[wr(I("x",e,t,n),I("mean",e,t,n),I("variance",e,t,n),I("offset",e,t,n),I("scale",e,t,n),I("epsilon",e,t,n))];case"LRN":return[nb(I("x",e,t,n),I("radius",e,t,n),I("bias",e,t,n),I("alpha",e,t,n),I("beta",e,t,n))];case"Softmax":return[Ca(I("x",e,t,n))];case"LogSoftmax":return[Oh(I("x",e,t,n))];case"SparseToDense":return[xb(I("sparseIndices",e,t,n),I("outputShape",e,t,n),I("sparseValues",e,t,n),I("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},nU=(e,t,n)=>{switch(e.op){case"Max":{let i=I("axis",e,t,n),o=I("keepDims",e,t,n);return[ta(I("x",e,t,n),i,o)]}case"Mean":{let i=I("axis",e,t,n),o=I("keepDims",e,t,n);return[Ct(I("x",e,t,n),i,o)]}case"Min":{let i=I("axis",e,t,n),o=I("keepDims",e,t,n);return[Zl(I("x",e,t,n),i,o)]}case"Sum":{let i=I("axis",e,t,n),o=I("keepDims",e,t,n);return[Ce(I("x",e,t,n),i,o)]}case"All":{let i=I("axis",e,t,n),o=I("keepDims",e,t,n);return[Eh(I("x",e,t,n),i,o)]}case"Any":{let i=I("axis",e,t,n),o=I("keepDims",e,t,n);return[Lc(I("x",e,t,n),i,o)]}case"ArgMax":{let i=I("axis",e,t,n);return[zc(I("x",e,t,n),i)]}case"ArgMin":{let i=I("axis",e,t,n);return[Ly(I("x",e,t,n),i)]}case"Prod":{let i=I("axis",e,t,n),o=I("keepDims",e,t,n);return[Wh(I("x",e,t,n),i,o)]}case"Cumsum":{let i=I("axis",e,t,n),o=I("exclusive",e,t,n),l=I("reverse",e,t,n);return[Dh(I("x",e,t,n),i,o,l)]}case"Bincount":let a=I("x",e,t,n),r=I("weights",e,t,n),s=I("size",e,t,n);return[hk(a,r,s)];case"DenseBincount":{let i=I("x",e,t,n),o=I("weights",e,t,n),l=I("size",e,t,n),c=I("binaryOutput",e,t,n);return[xk(i,o,l,c)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},aU=(e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=I("n",e,t,n),r=I("axis",e,t,n),s=I("tensors",e,t,n);return s=s.slice(0,a),[Ze(s,r)]}case"Gather":{let a=I("x",e,t,n),r=I("indices",e,t,n);return[Mi(a,pe(r,"int32"),0)]}case"GatherV2":{let a=I("axis",e,t,n),r=I("batchDims",e,t,n),s=I("x",e,t,n),i=I("indices",e,t,n);return[Mi(s,pe(i,"int32"),a,r)]}case"Reverse":{let a=I("dims",e,t,n),r=[];for(let i=0;i<a.length;i++)a[i]&&r.push(i);let s=I("x",e,t,n);return[Rn(s,r)]}case"ReverseV2":{let a=I("axis",e,t,n),r=I("x",e,t,n);return[Rn(r,a)]}case"Slice":{let a=I("begin",e,t,n),r=I("size",e,t,n);return[We(I("x",e,t,n),a,r)]}case"StridedSlice":{let a=I("begin",e,t,n),r=I("end",e,t,n),s=I("strides",e,t,n),i=I("beginMask",e,t,n),o=I("endMask",e,t,n),l=I("ellipsisMask",e,t,n),c=I("newAxisMask",e,t,n),u=I("shrinkAxisMask",e,t,n),p=I("x",e,t,n);return[mb(p,a,r,s,i,o,l,c,u)]}case"Pack":return D(()=>{let a=I("axis",e,t,n),r=I("tensors",e,t,n),s=r[0].shape,i=is(r[0]).shape,o=r.map(l=>{let c=k.arraysEqual(l.shape,s);if(!c&&!k.arraysEqual(is(l).shape,i))throw new Error("the input tensors shape does not match");return c?l:j(l,s)});return[Mt(o,a)]});case"Unpack":{let a=I("axis",e,t,n),r=I("tensor",e,t,n);return pt(r,a)}case"Tile":{let a=I("reps",e,t,n);return[Ka(I("x",e,t,n),a)]}case"Split":case"SplitV":{let a=I("axis",e,t,n),r=I("numOrSizeSplits",e,t,n),s=I("x",e,t,n);return Pn(s,r,a)}case"ScatterNd":{let a=I("indices",e,t,n),r=I("values",e,t,n),s=I("shape",e,t,n);return[e1(a,r,s)]}case"GatherNd":{let a=I("x",e,t,n),r=I("indices",e,t,n);return[t1(a,r)]}case"SparseToDense":{let a=I("sparseIndices",e,t,n),r=I("outputShape",e,t,n),s=I("sparseValues",e,t,n),i=I("defaultValue",e,t,n);return[xb(a,s,r,s.dtype===i.dtype?i:pe(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},rU=(e,t,n)=>{switch(e.op){case"FFT":return[Jc(I("x",e,t,n))];case"IFFT":return[tu(I("x",e,t,n))];case"RFFT":return[Zc(I("x",e,t,n))];case"IRFFT":return[Xh(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},sU=(e,t,n)=>{switch(e.op){case"Cast":return[pe(I("x",e,t,n),I("dtype",e,t,n))];case"ExpandDims":{let a=I("axis",e,t,n);return[Qn(I("x",e,t,n),a)]}case"Squeeze":{let a=I("axis",e,t,n);return[is(I("x",e,t,n),a)]}case"Reshape":return[j(I("x",e,t,n),I("shape",e,t,n))];case"MirrorPad":return[ob(I("x",e,t,n),I("padding",e,t,n),I("mode",e,t,n))];case"PadV2":case"Pad":return[na(I("x",e,t,n),I("padding",e,t,n),I("constantValue",e,t,n))];case"SpaceToBatchND":{let a=I("blockShape",e,t,n),r=I("paddings",e,t,n);return[qc(I("x",e,t,n),a,r)]}case"BatchToSpaceND":{let a=I("blockShape",e,t,n),r=I("crops",e,t,n);return[Wc(I("x",e,t,n),a,r)]}case"DepthToSpace":{let a=I("blockSize",e,t,n),r=I("dataFormat",e,t,n).toUpperCase();return[Yy(I("x",e,t,n),a,r)]}case"BroadcastTo":return[Vc(I("x",e,t,n),I("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function MN(e,t,n,a){let r=((s,i,o)=>{switch(s.category){case"arithmetic":return D(()=>PV(s,i,o));case"basic_math":return D(()=>OV(s,i,o));case"control":return GV(s,i,o);case"convolution":return D(()=>HV(s,i,o));case"creation":return D(()=>jV(s,i,o));case"dynamic":return qV(s,i,o);case"evaluation":return D(()=>KV(s,i,o));case"image":return D(()=>ZV(s,i,o));case"graph":return D(()=>XV(s,i,o));case"logical":return D(()=>QV(s,i,o));case"matrices":return D(()=>eU(s,i,o));case"normalization":return D(()=>tU(s,i,o));case"reduction":return D(()=>nU(s,i,o));case"slice_join":return D(()=>aU(s,i,o));case"spectral":return D(()=>rU(s,i,o));case"transformation":return D(()=>sU(s,i,o));case"hash_table":return JV(s,i,o,a);case"custom":let l=pN(s.op);if(l&&l.customExecutor)return l.customExecutor(new RV(s,i,o));throw TypeError(`Custom op ${s.op} is not registered.`);default:throw TypeError(`Unknown op '${s.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return k.isPromise(r)?r.then(s=>[].concat(s)):[].concat(r)}var RN=class{constructor(e={},t={},n={},a={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function ON(e,t,n,a){let r=new Set,s=[],i=null,o=null,l=new Set,c=Object.keys(e).map(d=>Ln(d)[0]),u=[];a!=null&&(u=a.map(d=>Ln(d.name)[0]));let p=[...t];for(;p.length>0;){let d=p.pop();if((PN(d)||iU(d)||oU(d))&&i==null&&(i=d,o=i.children.map(h=>h.name).filter(h=>r.has(h))),r.add(d.name),n[d.name]==null&&c.indexOf(d.name)===-1&&u.indexOf(d.name)===-1){if(d.inputs.length===0){s.push(d.name);continue}d.inputs.forEach(h=>{l.has(h.name)||(l.add(h.name),p.push(h))})}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:s,dynamicNode:i,syncInputs:o}}function lU(e,t,n){let{usedNodes:a,inputs:r}=n,s=[],i=Object.keys(r).map(u=>Ln(u)[0]).map(u=>e.nodes[u]),o=e.initNodes;i.forEach(u=>{a.has(u.name)&&s.push(u)}),e.weights.forEach(u=>{a.has(u.name)&&s.push(u)}),o!=null&&o.forEach(u=>{a.has(u.name)&&s.push(u)});let l=new Set,c=[];for(;s.length>0;){let u=s.pop();l.add(u.name),t[u.name]||c.push(u),u.children.forEach(p=>{!l.has(p.name)&&a.has(p.name)&&p.inputs.every(d=>l.has(d.name))&&s.push(p)})}return c}var uU=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],cU=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],pU=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function PN(e){return uU.indexOf(e.op)>=0}function iU(e){return cU.indexOf(e.op)>=0}function oU(e){return pU.indexOf(e.op)>=0}var wv=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new wv(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(a=>a.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(r=>r.name).sort(),a=t.map(r=>r.name).sort();return n.join(this.SEPERATOR)+"--"+a.join(this.SEPERATOR)}compile(e,t){let n=ON(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:s}=n;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(a.length>0){let i=t.map(l=>l.name),o=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${o}]. Missing the following inputs: [${a}]`)}return lU(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let a=n.map(u=>this.graph.nodes[Ln(u)[0]]),r=t.map(u=>Ln(u)[0]),s=r.map(u=>this.graph.nodes[u]);s.length===0&&(s=this._outputs);let i=this.getCompilationKey(a,s),o=this.compiledMap.get(i);o==null&&(o=this.compile(e,s),this.compiledMap.set(i,o));let l={},c={};return D(()=>{let u=new RN(this.weightMap,l,c,this.functionExecutorMap),p=Object.assign({},this.weightMap);Object.keys(e).forEach(m=>{let[f,g]=Ln(m),y=[];y[g]=e[m],p[f]=y});let d=this.getFrozenTensorIds(p),h={};for(let m=0;m<o.length;m++){let f=o[m];if(!p[f.name]){let g=MN(f,p,u,this._resourceManager);if(k.isPromise(g))throw new Error(`The execution of the op '${f.op}' returned a promise. Please use model.executeAsync() instead.`);p[f.name]=g,this.checkTensorForDisposal(f.name,f,p,u,d,r,h)}}return this.parent==null&&u.dispose(d),t.map(m=>Cn(m,p,u))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(a=>a.id)));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,s,i){t.category==="control"||s.indexOf(e)!==-1||(n[e].forEach(o=>{o!=null&&(i[o.id]=(i[o.id]||0)+t.children.length)}),t.inputs.forEach(o=>{if(o.category!=="control"){let l=gV(o.name,n,a);l!=null&&l.forEach(c=>{if(c&&!r.has(c.id)){let u=i[c.id];u===1?(c.dispose(),delete i[c.id]):u!=null&&i[c.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,a={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));let s=new RN(this.weightMap,a,r,this.functionExecutorMap),i=await this.executeWithControlFlow(e,s,t,n),o=t.map(p=>Cn(p,i,s)),l=o.map(p=>p.id),c=Object.keys(e).map(p=>e[p].id),u=new Set([...l,...c,...this.weightIds]);return Object.keys(i).forEach(p=>{i[p].forEach(d=>{d&&!d.isDisposed&&!u.has(d.id)&&d.dispose()})}),this.parent==null&&s.dispose(u),o}async executeFunctionAsync(e,t,n){let a=e.reduce((r,s,i)=>(r[this.inputs[i].name]=s,r),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){let r=Object.keys(e),s=r.map(b=>this.graph.nodes[Ln(b)[0]]),i=n.map(b=>Ln(b)[0]),o=i.map(b=>this.graph.nodes[b]);o.length===0&&(o=this._outputs);let{usedNodes:l,missingInputs:c,dynamicNode:u,syncInputs:p}=ON(e,o,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map(b=>({node:b,contexts:t.currentContext})),h=Object.assign({},this.weightMap);Object.keys(e).forEach(b=>{let[x,v]=Ln(b),N=[];N[v]=e[b],h[x]=N});let m={},f=this.getFrozenTensorIds(h),g={};for(;d.length>0;){let b=this.processStack(s,d,t,h,g,f,i,m,l);await Promise.all(b)}u==null&&!a&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=o.filter(b=>!PN(b)&&!Cn(b.name,h,t)).map(b=>b.name);if(y.length>0){let b="";throw u!=null&&(b=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${c}]. ${b}`)}return h}processStack(e,t,n,a,r,s,i,o,l){let c=[];for(;t.length>0;){let u=t.pop();n.currentContext=u.contexts;let p="";if(u.node.op==="Enter"&&I("isConstant",u.node,a,n)&&([p]=Fr(u.node.name,n)),a[u.node.name]==null){let d=MN(u.node,a,n,this._resourceManager);p||([p]=Fr(u.node.name,n));let h=n.currentContext;k.isPromise(d)?c.push(d.then(m=>(a[p]=m,n.currentContext=h,this.checkTensorForDisposal(p,u.node,a,n,s,i,o),this.processChildNodes(u.node,t,n,a,r,l),m))):(a[p]=d,this.checkTensorForDisposal(p,u.node,a,n,s,i,o),this.processChildNodes(u.node,t,n,a,r,l))}else this.processChildNodes(u.node,t,n,a,r,l)}return c}processChildNodes(e,t,n,a,r,s){e.children.forEach(i=>{let[o]=Fr(i.name,n);r[o]||!s.has(i.name)||(i.op==="Merge"?i.inputNames.some(l=>!!Cn(l,a,n))&&(r[o]=!0,t.push({contexts:n.currentContext,node:i})):i.inputNames.every(l=>!!Cn(l,a,n))&&(r[o]=!0,t.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[a]=Ln(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){let s=r.attrParams.shape.value,i=s.length===n.shape.length&&n.shape.every((o,l)=>s[l]===-1||s[l]===o);k.assert(i,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${s}], but was [${n.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&k.assert(n.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let a=this._signature.inputs[n];t[a.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[a]=Ln(n);return this.graph.nodes[a]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=Ln(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},dU=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},hU="?tfjs-format=file",mU="model.json",LN=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new dU}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=Kt.browserHTTPRequest(e,this.loadOptions);else{let t=Kt.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(Kt.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let a=Kt.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new wv(FN.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(a),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let r=FN.Instance.transformGraph(e.modelInitializer);this.initializer=new wv(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=Kt.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof z)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,a)=>(t[n]=e[a],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function fU(e,t={}){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&e.load==null&&(e.endsWith("/")||(e=e+"/"),e=`${e}${mU}${hU}`);let n=new LN(e,t);return await n.load(),n}var zN="2.8.3",BN={};Oe(BN,{CSVDataset:()=>VN,Dataset:()=>pu,FileDataSource:()=>UN,TextLineDataset:()=>WN,URLDataSource:()=>GN,array:()=>gU,csv:()=>bU,func:()=>xU,generator:()=>vU,microphone:()=>kU,version_data:()=>HN,webcam:()=>wU,zip:()=>yU});var IU=Ro(Dd()),NU=Ro(Dd());function TU(e,t){return jm(e,t)}function jm(e,t,n=new Map,a=new Set){if(e==null)return null;if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse)if(du(e)){let s=Array.isArray(e)?[]:{};a.add(e);for(let i in e){let o=e[i],l=jm(o,t,n,a);s[i]=l}return a.delete(e),s}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,r.value),r.value}function SU(e,t=qN){return jN(e,t)}function jN(e,t,n=new Set){let a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse)if(du(a)){let s=Array.isArray(a)?[]:{};n.add(a);for(let i in a){let o=e.map(c=>c[i]),l=jN(o,t,n);s[i]=l}return n.delete(a),s}else throw new Error(`Can't recurse into non-iterable type: ${a}`);else return r.value}function qN(e){return e===null?null:du(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function KN(e,t){let n=new Map;jm(e,t,n);for(let a of Array.from(n.keys())){let r=n.get(a);if(k.isPromise(r)){let s=await r;n.set(a,s)}}return jm(e,t,n)}function du(e){return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof z))}function EU(e){return e==null||CU(e)||Array.isArray(e)||typeof e=="object"&&e instanceof z||k.isTypedArray(e)}function CU(e){return e===null||typeof e!="object"&&typeof e!="function"}function FU(e){return TU(e,_U)}function _U(e){return e instanceof z?{value:e.clone(),recurse:!1}:du(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var XN=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},kv=class extends XN{constructor(){super(kv.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let a=0;a<n;a++)t[a]=this.get(this.wrap(this.begin+a));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};kv.INITIAL_CAPACITY=32;function YN(e){return new AU(e)}function Iv(e){return new $U(e)}function DU(e,t){return new JN(e,t)}function RU(e,t=fs.FAIL){return new MU(e,t)}var Qt=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new VU(this,e)}filter(e){return new BU(this,e)}map(e){return new WU(this,e)}mapAsync(e){return new ZN(this,e)}serialMapAsync(e){return new ZN(this,e).serial()}flatmap(e){return new UU(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new zU(this,e,t)}columnMajorBatch(e,t=!0,n=qN){return this.rowMajorBatch(e,t).map(a=>SU(a,n))}concatenate(e,t){return new JN(YN([this,e]),t)}take(e){return e<0||e==null?this:new LU(this,e)}skip(e){return e<0||e==null?this:new OU(this,e)}prefetch(e){return new QN(this,e)}shuffle(e,t){return new GU(this,e,t)}serial(){return new PU(this)}},AU=class extends Qt{constructor(e){super();this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:FU(e),done:!1}}},$U=class extends Qt{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},PU=class extends Qt{constructor(e){super();this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},OU=class extends Qt{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Ae(e.value)}return this.upstream.next()}},LU=class extends Qt{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},zU=class extends Qt{constructor(e,t,n=!0){super();this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},BU=class extends Qt{constructor(e,t){super();this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Ae(e.value)}}},WU=class extends Qt{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ta.getTensorsInContainer(e.value),n=this.transform(e.value),a=Ta.getTensorsInContainer(n);for(let r of t)Ta.isTensorInList(r,a)||r.dispose();return{value:n,done:!1}}},VU=class extends Qt{constructor(e,t){super();this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},ZN=class extends Qt{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ta.getTensorsInContainer(e.value),n=await this.transform(e.value),a=Ta.getTensorsInContainer(n);for(let r of t)Ta.isTensorInList(r,a)||r.dispose();return{value:n,done:!1}}},Nv=class extends Qt{constructor(){super();this.outputQueue=new kv,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},UU=class extends Nv{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Ta.getTensorsInContainer(e.value),n=this.transform(e.value),a=Ta.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let r of t)Ta.isTensorInList(r,a)||r.dispose();return!0}},JN=class extends Qt{constructor(e,t){super();this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},fs;(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(fs||(fs={}));var MU=class extends Qt{constructor(e,t=fs.FAIL){super();this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function a(s){return s instanceof Qt?{value:s.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let r=await KN(this.iterators,a);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case fs.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case fs.SHORTEST:return{value:null,done:!0};case fs.LONGEST:default:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},QN=class extends Qt{constructor(e,t){super();this.upstream=e,this.bufferSize=t,this.buffer=new XN(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},GU=class extends QN{constructor(e,t,n){super(e,t);this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=NU.alea(n||k.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},pu=class{constructor(){this.size=null}batch(e,t=!0){let n=this;k.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let a;return this.size===Infinity||this.size==null?a=this.size:t?a=Math.ceil(this.size/e):a=Math.floor(this.size/e),zn(async()=>(await n.iterator()).columnMajorBatch(e,t,HU),a)}concatenate(e){let t=this,n;return this.size===Infinity||e.size===Infinity?n=Infinity:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,zn(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===Infinity?n=Infinity:n=null,zn(async()=>(await t.iterator()).filter(a=>D(()=>e(a))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return zn(async()=>(await t.iterator()).map(n=>D(()=>e(n))),this.size)}mapAsync(e){let t=this;return zn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return zn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=Infinity:n=null,zn(async()=>{let a=Iv(async()=>({value:await t.iterator(),done:!1}));return DU(a.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,zn(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let a=this,r=IU.alea(t||k.now().toString());return zn(async()=>{let s=r.int32();return n&&(s+=r.int32()),(await a.iterator()).shuffle(e,s.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,zn(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===Infinity)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===Infinity)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};pu.MAX_BUFFER_SIZE=1e4;function zn(e,t=null){return new class extends pu{constructor(){super(...arguments);this.size=t}async iterator(){return e()}}}function gU(e){return zn(async()=>YN(e),e.length)}function yU(e){if(!du(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return zn(async()=>{let n=await KN(e,a=>{if(a instanceof pu)return{value:a.iterator(),recurse:!1};if(du(a))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return RU(n,fs.SHORTEST)},t)}function HU(e){if(e===null)return null;let t=e[0];return EU(t)?{value:jU(e),recurse:!1}:{value:null,recurse:!0}}function jU(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof z?Mt(e):Yn(e)}var WN=class extends pu{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}},qm='"',vp=Symbol("out"),eT=Symbol("field"),Km=Symbol("quote"),Tv=Symbol("quoteafterquote"),tT=Symbol("quoteinquote"),VN=class extends pu{constructor(e,t){super();this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new WN(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(k.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&k.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((a,r)=>(a[r]=a[r]+1||1,a),{}),n=Object.keys(t).filter(a=>t[a]>1);if(k.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let a of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(a)===-1)throw new Error('The key "'+a+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},a={};for(let r=0;r<this.fullColumnNames.length;r++){let s=this.fullColumnNames[r],i=this.columnConfigs?this.columnConfigs[s]:null;if(!(this.configuredColumnsOnly&&!i)){let o=t[r],l=null;if(o==="")if(i&&i.default!==void 0)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let c=Number(o);if(isNaN(c))i&&i.dtype==="bool"?l=this.getBoolean(o):l=o;else if(!i||!i.dtype)l=c;else switch(i.dtype){case"float32":l=c;break;case"int32":l=Math.floor(c);break;case"bool":l=this.getBoolean(o);break;default:l=c}}i&&i.isLabel?a[s]=l:n[s]=l}}return Object.keys(a).length===0?n:{xs:n,ys:a}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],a=0,r=e.length,s=vp;for(let i=0;i<r;i++)switch(s){case vp:switch(e.charAt(i)){case qm:a=i+1,s=Km;break;case this.delimiter:if(a=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),s=vp;break;default:s=eT,a=i;break}break;case eT:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(a,i)),s=vp,a=i+1;break;default:}break;case Km:switch(e.charAt(i)){case qm:s=Tv;break;default:}break;case Tv:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(a,i-1)),s=vp,a=i+1;break;case qm:s=Km;break;default:s=tT;break}break;case tT:switch(e.charAt(i)){case qm:s=Km;break;default:}break;default:}if(s===Tv?n.push(e.substring(a,r-1)):n.push(e.substring(a)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},nT=class extends Qt{constructor(e){super();this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(ee().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new nT(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let a=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(a,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let a=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(a,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(a=>{let r=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-Infinity&&a({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),a({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((a,r)=>n.set(a,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(k.sizeFromShape(t));return n.set(e,n.length-e.length),Yn(n,t)}},aT=class extends Qt{constructor(e,t){super();if(this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=tt([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,a=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,r=(1-n)/2,s=(1-a)/2,i=r+n,o=a+s;this.cropBox=Ea([s,r,o,i],[1,4])}else this.cropBox=Ea([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(ee().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new aT(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&k.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Ai.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return D(()=>{let t=e.toFloat().expandDims(0),n;n=Za.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let a=n.shape;return n.reshape(a.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},rT=class{},sT=class extends Qt{split(e){return new qU(this,e)}},qU=class extends sT{constructor(e,t){super();this.upstream=e,this.impl=new KU(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},KU=class extends Nv{constructor(e,t){super();this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},YU=class extends Qt{decodeUTF8(){return new XU(this)}},XU=class extends sT{constructor(e){super();this.upstream=e,this.impl=new JU(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},JU=class extends Nv{constructor(e){super();if(this.upstream=e,ee().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=rF();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return ee().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},iT=class extends YU{constructor(e,t={}){super();this.file=e,this.options=t,k.assert(e instanceof Uint8Array||(ee().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let a=new FileReader;a.onload=s=>{let i=a.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(i)},a.onabort=s=>t(new Error("Aborted")),a.onerror=s=>t(new Error(s.type));let r=this.file.slice(this.offset,n);a.readAsArrayBuffer(r)}this.offset=n}),done:!1}}};async function QU(e,t={}){let n,a;typeof e=="string"?n=e:(n=e.url,a=ZU(e));let r=await k.fetch(n,a);if(r.ok){let s=new Uint8Array(await r.arrayBuffer());return new iT(s,t)}else throw new Error(r.statusText)}var ZU=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function oT(e){return typeof e=="string"&&e.substr(0,7)==="file://"}var UN=class extends rT{constructor(e,t={}){super();this.input=e,this.options=t}async iterator(){if(oT(this.input)&&ee().get("IS_NODE")){let e=require("fs");this.input=e.readFileSync(this.input.substr(7))}return new iT(this.input,this.options)}},GN=class extends rT{constructor(e,t={}){super();this.url=e,this.fileOptions=t}async iterator(){return oT(this.url)?new UN(this.url,this.fileOptions).iterator():QU(this.url,this.fileOptions)}};function bU(e,t={}){return new VN(new GN(e),t)}function xU(e){let t=Iv(e);return zn(async()=>t)}function vU(e){return zn(async()=>{let t=await e();return Iv(()=>t.next())})}async function wU(e,t){return aT.create(e,t)}async function kU(e){return nT.create(e)}var HN="2.8.3";function ke(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&k.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var eG=Qa.whereImpl,tG=class extends uc{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new Md(this,ns())}write(e,t,n){this.firstUse&&(this.firstUse=!1,ee().get("IS_NODE")&&_.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let a={};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if(t==="string"&&n!=null&&n.length>0&&k.isString(n[0])){let r=n.map(s=>k.encodeString(s));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,a){this.data.set(e,{values:t,dtype:a,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let a=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return _.mergeRealAndImagArrays(a,r)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(a=>k.decodeString(a))}catch(a){throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,n)}makeOutput(e,t,n){let a=this.write(e,t,n);return ns().makeTensorFromDataId(a,t,n,this)}disposeData(e){if(this.data.has(e)){let{complexTensorInfos:t}=this.data.get(e);t!=null&&(this.disposeData(t.real.dataId),this.disposeData(t.imag.dataId)),this.data.delete(e)}}disposeIntermediateTensorInfo(e){let t=e.dataId;if(this.data.has(t)){let n=this.data.get(t);n.refCount--,n.refCount<1&&this.disposeData(t)}}async time(e){let t=k.now();return e(),{kernelMs:k.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ke([e],"where");let t=this.readSync(e.dataId);return eG(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},lT={};Oe(lT,{addImpl:()=>cT,bincountImpl:()=>Sv,bincountReduceImpl:()=>pT,ceilImpl:()=>dT,concatImpl:()=>Cv,expImpl:()=>hT,expm1Impl:()=>mT,floorImpl:()=>fT,gatherV2Impl:()=>gT,greaterImpl:()=>yT,lessImpl:()=>bT,linSpaceImpl:()=>xT,logImpl:()=>vT,maxImpl:()=>wT,maximumImpl:()=>kT,minimumImpl:()=>IT,multiplyImpl:()=>Ev,negImpl:()=>NT,notEqualImpl:()=>TT,prodImpl:()=>ST,rangeImpl:()=>Fv,rsqrtImpl:()=>CT,simpleAbsImpl:()=>uT,sliceImpl:()=>Xm,squaredDifferenceImpl:()=>ET,stridedSliceImpl:()=>_T,subImpl:()=>FT,tileImpl:()=>AT,topKImpl:()=>$T,transposeImpl:()=>_v,uniqueImpl:()=>DT});function uT(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var nG=e=>{let{x:t}=e.inputs,n=e.backend;ke(t,"abs");let a=new Float32Array(k.sizeFromShape(t.shape)),r=n.data.get(t.dataId).values;return a=uT(r),n.makeOutput(a,t.shape,"float32")},aG={kernelName:Lo,backendName:"cpu",kernelFunc:nG};function Ot(e){return(t,n,a,r,s)=>{let i=_.assertAndGetBroadcastShape(t,n),o=i.length,l=k.computeStrides(i),c=k.sizeFromShape(i),u=k.getTypedArrayFromDType(s,c),p=t.length,d=n.length,h=k.computeStrides(t),m=k.computeStrides(n),f=_.getBroadcastDims(t,i),g=_.getBroadcastDims(n,i);if(f.length+g.length===0)for(let y=0;y<u.length;++y)u[y]=e(a[y%a.length],r[y%r.length]);else for(let y=0;y<u.length;++y){let b=k.indexToLoc(y,o,l),x=b.slice(-p);f.forEach(E=>x[E]=0);let v=k.locToIndex(x,p,h),N=b.slice(-d);g.forEach(E=>N[E]=0);let T=k.locToIndex(N,d,m);u[y]=e(a[v],r[T])}return[u,i]}}function Bn(e){let{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(a.shape,"complex64"),l=n.data.get(o.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",i)},o}var rG={kernelName:Ud,backendName:"cpu",kernelFunc:Bn};function Ym(e,t,n="float32"){if(n==="complex64"){let r=Ym(e,t,"float32"),s=Ym(e,t,"float32");return Bn({inputs:{real:r,imag:s},backend:e})}let a=k.makeZerosTypedArray(k.sizeFromShape(t),n);return e.makeTensorInfo(t,n,a)}function sr(e){let{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}var sG={kernelName:il,backendName:"cpu",kernelFunc:sr};function Xi(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}var iG={kernelName:uh,backendName:"cpu",kernelFunc:Xi};function gs(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:s}=a;if(s==="complex64"){if(r.dtype==="complex64")return sr({inputs:{x:r},backend:n});let i=Ym(n,r.shape,r.dtype),o=gs({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=Bn({inputs:{real:o,imag:i},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}if(r.dtype==="complex64"){let i=Xi({inputs:{input:r},backend:n}),o=gs({inputs:{x:i},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(i),o}if(!k.hasEncodingLoss(r.dtype,s)){let i=sr({inputs:{x:r},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32"){let i=n.data.get(r.dataId).values,o=Int32Array.from(i);return n.makeTensorInfo(r.shape,"int32",o)}if(s==="bool"){let i=n.data.get(r.dataId).values,o=k.toTypedArray([0],r.dtype),[l,c]=Ot((u,p)=>u!==p?1:0)(r.shape,[],i,o,"bool");return n.makeTensorInfo(c,"bool",l)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${s}`)}var oG={kernelName:zs,backendName:"cpu",kernelFunc:gs};function en(e,t,n,a){return n==null?({inputs:r,backend:s})=>{let{a:i,b:o}=r,l=s;ke([i,o],e);let c=l.data.get(i.dataId).values,u=l.data.get(o.dataId).values,p=a||i.dtype,[d,h]=t(i.shape,o.shape,c,u,p);return l.makeTensorInfo(h,p,d)}:({inputs:r,backend:s})=>{let{a:i,b:o}=r,l=s;if(i.dtype==="complex64"||o.dtype==="complex64"){let c=gs({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),p=u.complexTensorInfos.real,d=u.complexTensorInfos.imag,h=l.data.get(p.dataId).values,m=l.data.get(d.dataId).values,f=gs({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(f.dataId),y=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,x=l.data.get(y.dataId).values,v=l.data.get(b.dataId).values,[N,T,E]=n(i.shape,o.shape,h,m,x,v),A=l.makeTensorInfo(E,"float32",N),$=l.makeTensorInfo(E,"float32",T),O=Bn({inputs:{real:A,imag:$},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(f),l.disposeIntermediateTensorInfo(A),l.disposeIntermediateTensorInfo($),O}else{let c=l.data.get(i.dataId).values,u=l.data.get(o.dataId).values,p=a||i.dtype,[d,h]=t(i.shape,o.shape,c,u,p);return l.makeTensorInfo(h,p,d)}}}function Av(e){return(t,n,a,r,s,i)=>{let o=_.assertAndGetBroadcastShape(t,n),l=k.sizeFromShape(o),c=o.length,u=k.computeStrides(o),p=k.getTypedArrayFromDType("float32",l),d=k.getTypedArrayFromDType("float32",l),h=_.getBroadcastDims(t,o),m=_.getBroadcastDims(n,o),f=_.mergeRealAndImagArrays(a,r),g=_.mergeRealAndImagArrays(s,i),y=t.length,b=k.computeStrides(t),x=n.length,v=k.computeStrides(n);if(h.length+m.length===0)for(let N=0;N<p.length;N++){let T=N%f.length,E=N%g.length,A=e(f[T*2],f[T*2+1],g[E*2],g[E*2+1]);p[N]=A.real,d[N]=A.imag}else for(let N=0;N<p.length;N++){let T=k.indexToLoc(N,c,u),E=T.slice(-y);h.forEach(W=>E[W]=0);let A=k.locToIndex(E,y,b),$=T.slice(-x);m.forEach(W=>$[W]=0);let O=k.locToIndex($,x,v),V=e(f[A*2],f[A*2+1],g[O*2],g[O*2+1]);p[N]=V.real,d[N]=V.imag}return[p,d,o]}}var cT=Ot((e,t)=>e+t),lG=Av((e,t,n,a)=>({real:e+n,imag:t+a})),wp=en(qr,cT,lG),uG={kernelName:qr,backendName:"cpu",kernelFunc:wp};function Sv(e,t,n,a,r){let s=k.sizeFromShape(a),i=k.makeZerosTypedArray(r,n);for(let o=0;o<e.length;o++){let l=e[o];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(s>0?i[l]+=t[o]:i[l]+=1)}return i}function pT(e,t,n,a=!1){let r=e.shape[0],s=e.shape[1],i=Le([r,n],t.dtype);for(let o=0;o<r;o++)for(let l=0;l<s;l++){let c=e.get(o,l);if(c<0)throw new Error("Input x must be non-negative!");c>=n||(a?i.set(1,o,c):t.size>0?i.set(i.get(o,c)+t.get(o,l),o,c):i.set(i.get(o,c)+1,o,c))}return i}function hu(e){return(t,n,a)=>{let r=k.getTypedArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)r[s]=e(t[s],a);return r}}function it(e,t,n){return({inputs:a,attrs:r,backend:s})=>{let{x:i}=a;if(ke(i,e),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,c=k.sizeFromShape(i.shape),u=n||i.dtype,p=k.getArrayFromDType(u,c);for(let d=0;d<c;++d)p[d]=t(l[d],r);return o.makeTensorInfo(i.shape,u,p)}}function mu(e,t,n){return({inputs:a,attrs:r,backend:s})=>{let{x:i}=a;if(ke(i,e),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,c=n||i.dtype,u=t(l,c,r);return o.makeTensorInfo(i.shape,c,u)}}var dT=hu(e=>Math.ceil(e)),cG=mu(jo,dT),pG={kernelName:jo,backendName:"cpu",kernelFunc:cG};function Cv(e,t,n,a){let r=k.getArrayFromDType(n,k.sizeFromShape(t));if(a&&n!=="string"){let s=0;e.forEach(i=>{let o=k.sizeFromShape(i.shape);r.set(i.vals,s),s+=o})}else{let s=0;e.forEach(i=>{let o=n==="string"?_.fromUint8ToStringArray(i.vals):i.vals,l=0;for(let c=0;c<i.shape[0];++c){let u=c*t[1]+s;for(let p=0;p<i.shape[1];++p)r[u+p]=o[l++]}s+=i.shape[1]})}return r}var hT=hu(e=>Math.exp(e)),MT=mu(js,hT),dG={kernelName:js,backendName:"cpu",kernelFunc:MT},mT=hu(e=>Math.expm1(e)),hG=mu(tl,mT),mG={kernelName:tl,backendName:"cpu",kernelFunc:hG},fT=hu(e=>Math.floor(e)),fG=mu(qs,fT),gG={kernelName:qs,backendName:"cpu",kernelFunc:fG};function gT(e,t,n){let a=Le(n,e.dtype);for(let r=0;r<a.size;++r){let s=a.indexToLoc(r).slice(),i=s[0],o=s[2],l=t.locToIndex([i,o]);s[2]=t.values[l];let c=e.locToIndex(s);a.values[r]=e.values[c]}return a}var yT=Ot((e,t)=>e>t?1:0),yG=en(sl,yT,null,"bool"),bG={kernelName:sl,backendName:"cpu",kernelFunc:yG},bT=Ot((e,t)=>e<t?1:0),xG=en(cl,bT,null,"bool"),vG={kernelName:cl,backendName:"cpu",kernelFunc:xG};function xT(e,t,n){let a=(t-e)/(n-1),r=k.makeZerosTypedArray(n,"float32");r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+a;return r}var vT=hu(e=>Math.log(e)),wG=mu(Zs,vT),kG={kernelName:Zs,backendName:"cpu",kernelFunc:wG};function wT(e,t,n,a){let r=k.getTypedArrayFromDType(a,k.sizeFromShape(n));for(let s=0;s<r.length;++s){let i=s*t,o=e[i];for(let l=0;l<t;++l){let c=e[i+l];c>o&&(o=c)}r[s]=o}return r}var kT=Ot((e,t)=>Math.max(e,t)),IG=en(ei,kT),NG={kernelName:ei,backendName:"cpu",kernelFunc:IG},IT=Ot((e,t)=>Math.min(e,t)),TG=en(ri,IT),SG={kernelName:ri,backendName:"cpu",kernelFunc:TG},Ev=Ot((e,t)=>e*t),CG=Av((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n})),$v=en(si,Ev,CG),EG={kernelName:si,backendName:"cpu",kernelFunc:$v};function NT(e,t,n){let a=k.createScalarValue(-1,n);return Ev([],t,a,e,n)}function _G(e){let{inputs:t,backend:n}=e,{x:a}=t;ke(a,"neg");let r=n.data.get(a.dataId).values,[s,i]=NT(r,a.shape,a.dtype);return n.makeTensorInfo(i,a.dtype,s)}var FG={kernelName:fl,backendName:"cpu",kernelFunc:_G},TT=Ot((e,t)=>e!==t?1:0),AG=en(gl,TT,null,"bool"),$G={kernelName:gl,backendName:"cpu",kernelFunc:AG};function _v(e,t,n,a,r){let s=t.length,i=k.sizeFromShape(t),o=k.computeStrides(t),l=k.computeStrides(r),c=k.getTypedArrayFromDType(n,k.sizeFromShape(r));for(let u=0;u<i;++u){let p=k.indexToLoc(u,s,o),d=new Array(p.length);for(let m=0;m<d.length;m++)d[m]=p[a[m]];let h=k.locToIndex(d,s,l);c[h]=e[u]}return c}function ba(e){let{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:s}=n;ke(r,"transpose");let i=r.shape.length,o=new Array(i);for(let u=0;u<o.length;u++)o[u]=r.shape[s[u]];let l=a.data.get(r.dataId).values,c=_v(l,r.shape,r.dtype,s,o);return{dataId:a.write(c,o,r.dtype),shape:o,dtype:r.dtype}}var DG={kernelName:Ni,backendName:"cpu",kernelFunc:ba};function ST(e,t,n,a){let[r,s]=_.computeOutAndReduceShapes(e,a),i=pa(t,"int32"),o=k.makeZerosTypedArray(k.sizeFromShape(r),i),l=k.sizeFromShape(s);for(let c=0;c<o.length;++c){let u=c*l,p=1;for(let d=0;d<l;++d)p*=n[u+d];o[c]=p}return{outVals:o,outShape:r,outDtype:i}}function MG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;ke(r,"prod");let o=r.shape.length,l=k.parseAxisParam(s,r.shape),c=_.getAxesPermutation(l,o),u=l,p=r,d=[];c!=null&&(p=ba({inputs:{x:r},backend:n,attrs:{perm:c}}),d.push(p),u=_.getInnerMostAxes(u.length,o));let h=n.data.get(p.dataId).values,{outVals:m,outShape:f,outDtype:g}=ST(p.shape,p.dtype,h,u),y=f;return i&&(y=_.expandShapeToKeepDim(f,l)),d.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.makeTensorInfo(y,g,m)}var RG={kernelName:kl,backendName:"cpu",kernelFunc:MG};function Fv(e,t,n,a){let r=e===t,s=e<t&&n<0,i=t<e&&n>1;if(r||s||i)return k.makeZerosTypedArray(0,a);let o=Math.abs(Math.ceil((t-e)/n)),l=k.makeZerosTypedArray(o,a);t<e&&n===1&&(n=-1),l[0]=e;for(let c=1;c<l.length;c++)l[c]=l[c-1]+n;return l}var CT=hu(e=>1/Math.sqrt(e)),PG=mu(fi,CT),OG={kernelName:fi,backendName:"cpu",kernelFunc:PG};function Xm(e,t,n,a,r){let s=hn.isSliceContinous(a,t,n),i=k.sizeFromShape(n),o=k.computeStrides(a);if(s){let p=hn.computeFlatOffset(t,o);return r==="string"?e.slice(p,p+i):e.subarray(p,p+i)}let l=r==="string"?_.fromUint8ToStringArray(e):e,c=Le(a,r,l),u=Le(n,r);for(let p=0;p<u.size;++p){let d=u.indexToLoc(p),h=d.map((m,f)=>m+t[f]);u.set(c.get(...h),...d)}return r==="string"?_.fromStringArrayToUint8(u.values):u.values}function Yi(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a;ke(r,"slice");let[o,l]=hn.parseSliceParams(r,s,i);hn.assertParamsValid(r,o,l);let c=n.data.get(r.dataId).values,u=Xm(c,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}var LG={kernelName:El,backendName:"cpu",kernelFunc:Yi},ET=Ot((e,t)=>{let n=e-t;return n*n}),zG=en(wi,ET),BG={kernelName:wi,backendName:"cpu",kernelFunc:zG};function _T(e,t,n,a){let r=Le(e,t.dtype);for(let s=0;s<r.size;s++){let i=r.indexToLoc(s),o=new Array(i.length);for(let l=0;l<o.length;l++)o[l]=i[l]*n[l]+a[l];r.set(t.get(...o),...i)}return r}var FT=Ot((e,t)=>e-t),WG=Av((e,t,n,a)=>({real:e-n,imag:t-a})),Dv=en(ki,FT,WG),VG={kernelName:ki,backendName:"cpu",kernelFunc:Dv};function AT(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let a=Le(n,e.dtype);for(let r=0;r<a.values.length;++r){let s=a.indexToLoc(r),i=new Array(e.rank);for(let l=0;l<i.length;l++)i[l]=s[l]%e.shape[l];let o=e.locToIndex(i);a.values[r]=e.values[o]}return a}function $T(e,t,n,a,r){let s=t[t.length-1],[i,o]=[e.length/s,s],l=k.getTypedArrayFromDType(n,i*a),c=k.getTypedArrayFromDType("int32",i*a);for(let p=0;p<i;p++){let d=p*o,h=e.subarray(d,d+o),m=[];for(let b=0;b<h.length;b++)m.push({value:h[b],index:b});m.sort((b,x)=>x.value-b.value);let f=p*a,g=l.subarray(f,f+a),y=c.subarray(f,f+a);for(let b=0;b<a;b++)g[b]=m[b].value,y[b]=m[b].index}let u=t.slice();return u[u.length-1]=a,[Le(u,n,l),Le(u,"int32",c)]}function DT(e,t,n,a){let r=k.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let m=0;m<r;m++)s[0]*=n[m];s[1]=n[r];for(let m=r+1;m<n.length;m++)s[2]*=n[m];let i={},o=new Int32Array(n[r]),l=new Bt(s,a,e),c=[],u=s[0]===1&&s[2]===1;for(let m=0;m<n[r];m++){let f;if(u)f=e[m].toString();else{let g=[];for(let y=0;y<s[0];y++)for(let b=0;b<s[2];b++)g.push(l.get(y,m,b));f=g.join(",")}if(i[f]!==void 0)o[m]=i[f];else{let g=Object.keys(i).length;i[f]=g,o[m]=g,c.push(m)}}let p=s.slice();p[1]=Object.keys(i).length;let d=new Bt(p,a);c.forEach((m,f)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)d.set(l.get(g,m,y),g,f,y)});let h=n.slice();return h[r]=p[1],{outputValues:d.values,outputShape:h,indices:o}}var UG="2.8.3";Sh("cpu",()=>new tG,1);var RT=it(Jo,e=>e>=0?e:Math.exp(e)-1),GG={kernelName:Jo,backendName:"cpu",kernelFunc:RT};function PT(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a;ke([r],"leakyRelu");let i=k.sizeFromShape(r.shape),o=n.data.get(r.dataId).values,l=k.getTypedArrayFromDType("float32",i);for(let c=0;c<o.length;c++)l[c]=o[c]<0?s*o[c]:o[c];return n.makeTensorInfo(r.shape,"float32",l)}var HG={kernelName:Js,backendName:"cpu",kernelFunc:PT},jG=Ot((e,t)=>e<0?t*e:e);function OT(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t;ke([a,r],"prelu");let s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,[o,l]=jG(a.shape,r.shape,s,i,a.dtype);return n.makeTensorInfo(l,a.dtype,o)}var qG={kernelName:ui,backendName:"cpu",kernelFunc:OT},LT=it(ci,e=>Math.max(0,e)),KG={kernelName:ci,backendName:"cpu",kernelFunc:LT},zT=it(di,e=>Math.min(Math.max(0,e),6)),XG={kernelName:di,backendName:"cpu",kernelFunc:zT};function Mv(e,t,n,a,r){if(n==="linear")return sr({inputs:{x:t},backend:e});if(n==="relu")return LT({inputs:{x:t},backend:e});if(n==="elu")return RT({inputs:{x:t},backend:e});if(n==="relu6")return zT({inputs:{x:t},backend:e});if(n==="prelu")return OT({inputs:{x:t,alpha:a},backend:e});if(n==="leakyrelu")return PT({inputs:{x:t},backend:e,attrs:{alpha:r}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function It(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,i=k.sizeFromShape(r.shape),o=k.inferFromImplicitShape(s,i),l=k.sizeFromShape(o);k.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);let c=n.data.get(r.dataId);if(c.complexTensorInfos!=null){let u=c.complexTensorInfos.real,p=c.complexTensorInfos.imag;u.shape=o,p.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}var YG={kernelName:Nl,backendName:"cpu",kernelFunc:It};function BT(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;ke([r,s],"matMul");let l=r.shape.length,c=s.shape.length,u=i?r.shape[l-2]:r.shape[l-1],p=o?s.shape[c-1]:s.shape[c-2],d=i?r.shape[l-1]:r.shape[l-2],h=o?s.shape[c-2]:s.shape[c-1],m=r.shape.slice(0,-2),f=s.shape.slice(0,-2),g=k.sizeFromShape(m),y=k.sizeFromShape(f),b=g===y||g===1||y===1;k.assert(l>=2&&c>=2&&b,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${f}).`);let x=(g>y?r.shape.slice(0,-2):s.shape.slice(0,-2)).concat([d,h]);k.assert(u===p,()=>`Error in matMul: inner shapes (${u}) and (${p}) of Tensors with shapes ${r.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let v=i?[g,u,d]:[g,d,u],N=o?[y,h,p]:[y,p,h],T=It({inputs:{x:r},backend:n,attrs:{shape:v}}),E=It({inputs:{x:s},backend:n,attrs:{shape:N}}),A=i?T.shape[1]:T.shape[2],$=i?T.shape[2]:T.shape[1],O=o?E.shape[1]:E.shape[2],V=Math.max(g,y),W=n.data.get(T.dataId).values,H=n.data.get(E.dataId).values,X=k.computeStrides(T.shape),q=k.computeStrides(E.shape),[K,J,te]=i?[X[0],1,X[1]]:[X[0],X[1],1],[Q,ie,re]=o?[1,q[1],q[0]]:[q[1],1,q[0]],ae=$*O,oe=Le([V,$,O],T.dtype),he=oe.values,ce=n.blockSize;for(let ge=0;ge<V;ge++)for(let be=0;be<$;be+=ce)for(let Ie=0;Ie<O;Ie+=ce)for(let Te=0;Te<A;Te+=ce){let Ee=Math.min(be+ce,$),Me=Math.min(Ie+ce,O),Je=Math.min(Te+ce,A);for(let nt=be;nt<Ee;nt++)for(let Ve=Ie;Ve<Me;Ve++){let ut=0;for(let Ge=Te;Ge<Je;Ge++){let ct=Math.min(ge,g-1)*K,gt=Math.min(ge,y-1)*re,Fn=W[ct+nt*J+Ge*te],_t=H[Ge*Q+Ve*ie+gt];ut+=Fn*_t}he[ge*ae+(nt*O+Ve)]+=ut}}return n.disposeIntermediateTensorInfo(T),n.disposeIntermediateTensorInfo(E),n.makeTensorInfo(x,oe.dtype,oe.values)}var JG={kernelName:Ls,backendName:"cpu",kernelFunc:BT};function ZG(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:p}=a,d,h,m,f=[];d=BT({inputs:{a:r,b:s},attrs:{transposeA:l,transposeB:c},backend:n}),i&&(h=wp({inputs:{a:d,b:i},backend:n}),f.push(d),d=h),u&&(m=Mv(n,d,u,o,p),f.push(d),d=m);for(let g of f)n.disposeIntermediateTensorInfo(g);return d}var QG={kernelName:Ti,backendName:"cpu",kernelFunc:ZG},eH=it(zo,e=>Math.acos(e)),tH={kernelName:zo,backendName:"cpu",kernelFunc:eH},nH=it(Bo,e=>Math.acosh(e)),aH={kernelName:Bo,backendName:"cpu",kernelFunc:nH};function rH(e){let{inputs:t,backend:n}=e,a=t;ke(t,"addN");let r=a.map(o=>n.data.get(o.dataId).values),s=Le(a[0].shape,a[0].dtype),i=s.values;for(let o=0;o<a.length;o++){let l=r[o];for(let c=0;c<i.length;c++)i[c]+=l[c]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}var sH={kernelName:Rs,backendName:"cpu",kernelFunc:rH};function iH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;ke(r,"all");let o=k.parseAxisParam(s,r.shape),l=o,c=_.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=ba({inputs:{x:r},backend:n,attrs:{perm:c}}),l=_.getInnerMostAxes(l.length,r.shape.length)),_.assertAxesAreInnerMostDims("all",l,u.shape.length);let[p,d]=_.computeOutAndReduceShapes(u.shape,l),h=k.sizeFromShape(d),m=k.makeZerosTypedArray(k.sizeFromShape(p),u.dtype),f=n.data.get(u.dataId).values;for(let y=0;y<m.length;++y){let b=y*h,x=f[b];for(let v=0;v<h;++v){let N=f[b+v];x=x&&N}m[y]=x}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(p,u.dtype,m);if(i){let y=_.expandShapeToKeepDim(p,o),b=It({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var oH={kernelName:Ld,backendName:"cpu",kernelFunc:iH};function lH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;ke(r,"any");let o=k.parseAxisParam(s,r.shape),l=o,c=_.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=ba({inputs:{x:r},backend:n,attrs:{perm:c}}),l=_.getInnerMostAxes(l.length,r.shape.length)),_.assertAxesAreInnerMostDims("any",l,u.shape.length);let[p,d]=_.computeOutAndReduceShapes(u.shape,l),h=k.sizeFromShape(d),m=k.makeZerosTypedArray(k.sizeFromShape(p),u.dtype),f=n.data.get(u.dataId).values;for(let y=0;y<m.length;++y){let b=y*h,x=f[b];for(let v=0;v<h;++v){let N=f[b+v];x=x||N}m[y]=x}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(p,u.dtype,m);if(i){let y=_.expandShapeToKeepDim(p,o),b=It({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var uH={kernelName:zd,backendName:"cpu",kernelFunc:lH};function cH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;ke(r,"argMax");let i=k.parseAxisParam(s,r.shape),o=_.getAxesPermutation(i,r.shape.length),l=r,c=[];o!=null&&(l=ba({inputs:{x:r},backend:n,attrs:{perm:o}}),c.push(l),i=_.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],_.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[u,p]=_.computeOutAndReduceShapes(l.shape,i),d=k.sizeFromShape(u),h=k.makeZerosTypedArray(d,"int32"),m=k.sizeFromShape(p),f=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let y=g*m,b=f[y],x=0;for(let v=0;v<m;++v){let N=f[y+v];N>b&&(b=N,x=v)}h[g]=x}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",h)}var pH={kernelName:Ps,backendName:"cpu",kernelFunc:cH};function dH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;ke(r,"argMin");let i=k.parseAxisParam(s,r.shape),o=_.getAxesPermutation(i,r.shape.length),l=r,c=[];o!=null&&(l=ba({inputs:{x:r},backend:n,attrs:{perm:o}}),c.push(l),i=_.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],_.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[u,p]=_.computeOutAndReduceShapes(l.shape,i),d=k.sizeFromShape(u),h=k.makeZerosTypedArray(d,"int32"),m=k.sizeFromShape(p),f=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let y=g*m,b=f[y],x=0;for(let v=0;v<m;++v){let N=f[y+v];N<b&&(b=N,x=v)}h[g]=x}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",h)}var hH={kernelName:dc,backendName:"cpu",kernelFunc:dH},mH=it(Wo,e=>Math.asin(e)),fH={kernelName:Wo,backendName:"cpu",kernelFunc:mH},gH=it(Vo,e=>Math.asinh(e)),yH={kernelName:Vo,backendName:"cpu",kernelFunc:gH},bH=it(Uo,e=>Math.atan(e)),xH={kernelName:Uo,backendName:"cpu",kernelFunc:bH},vH=Ot((e,t)=>Math.atan2(e,t)),wH=en(Ho,vH),kH={kernelName:Ho,backendName:"cpu",kernelFunc:wH},IH=it(Go,e=>Math.atanh(e)),NH={kernelName:Go,backendName:"cpu",kernelFunc:IH};function Rv(e,t,n,a,r,s){let i=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,u=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,h=r.padInfo.left,m=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,f=Le(r.outShape,n),g=f.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let v=0;v<r.batchSize;++v){let N=v*y,T=v*a[0];for(let E=0;E<r.inChannels;++E)for(let A=0;A<r.outHeight;++A){let $=A*i-d,O=Math.max(0,$),V=Math.min(r.inHeight,u+$),W=N+A*b;for(let H=0;H<r.outWidth;++H){let X=H*o-h,q=Math.max(0,X),K=Math.min(r.inWidth,p+X),J=m,te=0,Q=0;for(let re=O;re<V;re+=l){let ae=T+re*a[1];for(let oe=q;oe<K;oe+=c){let he=ae+oe*a[2],ce=e[he+E];s==="max"&&ce>J?J=ce:s==="avg"&&(te+=ce,Q++)}if(isNaN(J))break}let ie=W+H*x+E;g[ie]=s==="avg"?te/Q:J}}}return f}function WT(e,t,n,a,r=!1,s=!1){let i=Le(a.outShape,"int32"),o=a.strideHeight,l=a.strideWidth,c=a.dilationHeight,u=a.dilationWidth,p=a.effectiveFilterHeight,d=a.effectiveFilterWidth,h=a.padInfo.top,m=a.padInfo.left,f=Le(t,n,e);for(let g=0;g<a.batchSize;++g)for(let y=0;y<a.inChannels;++y)for(let b=0;b<a.outHeight;++b){let x=b*o-h,v=x;for(;v<0;)v+=c;let N=Math.min(a.inHeight,p+x);for(let T=0;T<a.outWidth;++T){let E=T*l-m,A=E;for(;A<0;)A+=u;let $=Math.min(a.inWidth,d+E),O=Number.NEGATIVE_INFINITY,V=-1;for(let W=v;W<N;W+=c){let H=W-x;for(let X=A;X<$;X+=u){let q=X-E,K=f.get(g,W,X,y);K>O&&(O=K,r?V=s?((g*a.inHeight+W)*a.inWidth+X)*a.inChannels+y:(W*a.inWidth+X)*a.inChannels+y:V=H*d+q)}}i.set(V,g,b,T,y)}}return i}function VT(e,t,n,a,r,s){let i=r.strideDepth,o=r.strideHeight,l=r.strideWidth,c=r.dilationDepth,u=r.dilationHeight,p=r.dilationWidth,d=r.effectiveFilterDepth,h=r.effectiveFilterHeight,m=r.effectiveFilterWidth,f=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Le(r.outShape,n),v=x.values,N=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],T=r.outShape[2]*r.outShape[3]*r.outShape[4],E=r.outShape[3]*r.outShape[4],A=r.outShape[4];for(let $=0;$<r.batchSize;++$){let O=$*N,V=$*a[0];for(let W=0;W<r.inChannels;++W)for(let H=0;H<r.outDepth;++H){let X=H*i-f,q=X;for(;q<0;)q+=c;let K=Math.min(r.inDepth,d+X),J=O+H*T;for(let te=0;te<r.outHeight;++te){let Q=te*o-g,ie=Q;for(;ie<0;)ie+=u;let re=Math.min(r.inHeight,h+Q),ae=J+te*E;for(let oe=0;oe<r.outWidth;++oe){let he=oe*l-y,ce=he;for(;ce<0;)ce+=p;let ge=Math.min(r.inWidth,m+he),be=ae+oe*A,Ie=b,Te=0,Ee=0;for(let Je=q;Je<K;Je+=c){let nt=V+Je*a[1];for(let Ve=ie;Ve<re;Ve+=u){let ut=nt+Ve*a[2];for(let Ge=ce;Ge<ge;Ge+=p){let ct=ut+Ge*a[3],gt=e[ct+W];if(s==="max"&&gt>Ie?Ie=gt:s==="avg"&&(Te+=gt,Ee++),isNaN(Ie))break}if(isNaN(Ie))break}if(isNaN(Ie))break}let Me=be+W;v[Me]=s==="avg"?Te/Ee:Ie}}}}return x}function TH(e,t){let n=Le(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,h=t.padInfo.top,m=t.padInfo.left;for(let f=0;f<t.batchSize;++f)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*a-d,x=b;for(;x<0;)x+=i;let v=Math.min(t.inDepth,c+b);for(let N=0;N<t.outHeight;++N){let T=N*r-h,E=T;for(;E<0;)E+=o;let A=Math.min(t.inHeight,u+T);for(let $=0;$<t.outWidth;++$){let O=$*s-m,V=O;for(;V<0;)V+=l;let W=Math.min(t.inWidth,p+O),H=Number.NEGATIVE_INFINITY,X=-1;for(let q=x;q<v;q+=i){let K=q-b;for(let J=E;J<A;J+=o){let te=J-T;for(let Q=V;Q<W;Q+=l){let ie=Q-O,re=e.get(f,q,J,Q,g);re>=H&&(H=re,X=K*u*p+te*u+ie)}}}n.set(X,f,y,N,$,g)}}}return n}function SH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;ke(r,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a,c=1;k.assert(_.eitherStridesOrDilationsAreOne(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let u=_.computePool2DInfo(r.shape,s,i,c,o,l),p;if(u.filterWidth===1&&u.filterHeight===1&&k.arraysEqual(u.inShape,u.outShape))p=sr({inputs:{x:r},backend:n});else{let d=n.data.get(r.dataId).values,h=k.computeStrides(r.shape),m=Rv(d,r.shape,r.dtype,h,u,"avg");p=n.makeTensorInfo(u.outShape,r.dtype,m.values)}return p}var CH={kernelName:Os,backendName:"cpu",kernelFunc:SH};function EH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:c,dilations:u}=a;ke(r,"avgPool3d");let p=u;p==null&&(p=[1,1,1]);let d=_.computePool3DInfo(r.shape,s,i,p,o,l,c),h=n.data.get(r.dataId).values,m=VT(h,r.shape,r.dtype,k.computeStrides(r.shape),d,"avg");return n.makeTensorInfo(m.shape,"float32",m.values)}var _H={kernelName:hc,backendName:"cpu",kernelFunc:EH};function FH(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:l,dilations:c,dimRoundingMode:u}=a;ke([r,s],"avgPool3DGrad");let p=_.computePool3DInfo(s.shape,i,o,c,l,u),d=p.strideDepth,h=p.strideHeight,m=p.strideWidth,f=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=p.dilationDepth,x=p.dilationHeight,v=p.dilationWidth,N=p.effectiveFilterDepth,T=p.effectiveFilterHeight,E=p.effectiveFilterWidth,A=N-1-p.padInfo.front,$=E-1-p.padInfo.left,O=T-1-p.padInfo.top,V=Le(s.shape,"float32"),W=1/(f*g*y),H=n.bufferSync(r);for(let X=0;X<p.batchSize;++X)for(let q=0;q<p.inChannels;++q)for(let K=0;K<p.inDepth;++K)for(let J=0;J<p.inHeight;++J)for(let te=0;te<p.inWidth;++te){let Q=K-A,ie=J-O,re=te-$,ae=0;for(let oe=0;oe<N;oe+=b){let he=(Q+oe)/d;if(!(he<0||he>=p.outDepth||Math.floor(he)!==he))for(let ce=0;ce<T;ce+=x){let ge=(ie+ce)/h;if(!(ge<0||ge>=p.outHeight||Math.floor(ge)!==ge))for(let be=0;be<E;be+=v){let Ie=(re+be)/m;Ie<0||Ie>=p.outWidth||Math.floor(Ie)!==Ie||(ae+=H.get(X,he,ge,Ie,q))}}}V.set(ae*W,X,K,J,te,q)}return n.makeTensorInfo(V.shape,V.dtype,V.values)}var AH={kernelName:Wd,backendName:"cpu",kernelFunc:FH};function $H(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;ke([r,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:c}=a,u=_.computePool2DInfo(i.shape,o,l,1,c),p=u.strideHeight,d=u.strideWidth,h=u.filterHeight,m=u.filterWidth,f=u.dilationHeight,g=u.dilationWidth,y=u.effectiveFilterHeight,b=u.effectiveFilterWidth,x=b-1-u.padInfo.left,v=y-1-u.padInfo.top,N=Le(i.shape,"float32"),T=1/(h*m),E=n.data.get(r.dataId).values,A=Le(r.shape,"float32",E);for(let $=0;$<u.batchSize;++$)for(let O=0;O<u.inChannels;++O)for(let V=0;V<u.inHeight;++V)for(let W=0;W<u.inWidth;++W){let H=V-v,X=W-x,q=0;for(let K=0;K<y;K+=f){let J=(H+K)/p;if(!(J<0||J>=u.outHeight||Math.floor(J)!==J))for(let te=0;te<b;te+=g){let Q=(X+te)/d;Q<0||Q>=u.outWidth||Math.floor(Q)!==Q||(q+=A.get($,J,Q,O))}}N.set(q*T,$,V,W,O)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}var DH={kernelName:Bd,backendName:"cpu",kernelFunc:$H};function MH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,scale:s,offset:i,mean:o,variance:l}=t;k.assert(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k.assert(s==null||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ke([r,o,l,s,i],"batchNorm");let{varianceEpsilon:c}=a;c==null&&(c=.001);let u=n.data.get(r.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,h=s?n.data.get(s.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),f=new Float32Array(u.length),g=m.length,y=h.length,b=d.length,x=p.length,v=0,N=0,T=0,E=0;for(let A=0;A<u.length;++A)f[A]=m[v++]+(u[A]-p[N++])*h[T++]/Math.sqrt(d[E++]+c),v>=g&&(v=0),N>=x&&(N=0),T>=y&&(T=0),E>=b&&(E=0);return n.makeTensorInfo(r.shape,r.dtype,f)}var RH={kernelName:Xs,backendName:"cpu",kernelFunc:MH};function PH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;ke([r],"batchToSpaceND");let o=s.reduce((y,b)=>y*b),l=_.getReshaped(r.shape,s,o),c=_.getPermuted(l.length,s.length),u=_.getReshapedPermuted(r.shape,s,o),p=_.getSliceBeginCoords(i,s.length),d=_.getSliceSize(u,i,s.length),h=It({inputs:{x:r},backend:n,attrs:{shape:l}}),m=ba({inputs:{x:h},backend:n,attrs:{perm:c}}),f=It({inputs:{x:m},backend:n,attrs:{shape:u}}),g=Yi({inputs:{x:f},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}var OH={kernelName:mc,backendName:"cpu",kernelFunc:PH};function LH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i}=a,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,c=Sv(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,c)}var zH={kernelName:Vd,backendName:"cpu",kernelFunc:LH},BH=it(Kr,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),WH={kernelName:Kr,backendName:"cpu",kernelFunc:BH},VH=e=>{let{x:t}=e.inputs,n=e.backend,a=new Float32Array(k.sizeFromShape(t.shape)),r=n.data.get(t.dataId),s=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let c=0;c<o.length;c++){let u=o[c],p=l[c];a[c]=Math.hypot(u,p)}return n.makeOutput(a,t.shape,"float32")},UH={kernelName:fc,backendName:"cpu",kernelFunc:VH};function fu(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}var GH={kernelName:nh,backendName:"cpu",kernelFunc:fu};function gu(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=k.parseAxisParam(r,t[0].shape)[0],i=_.computeOutShape(t.map(f=>f.shape),s);if(k.sizeFromShape(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(f=>k.sizeFromShape(f.shape)>0);if(o.length===1)return sr({inputs:{x:o[0]},backend:n});let l=o.map(f=>f.shape);if(_.assertParamsConsistent(l,s),o[0].dtype==="complex64"){let f=o.map(v=>Xi({inputs:{input:v},backend:n})),g=o.map(v=>fu({inputs:{input:v},backend:n})),y=gu({inputs:f,backend:n,attrs:{axis:s}}),b=gu({inputs:g,backend:n,attrs:{axis:s}}),x=Bn({inputs:{real:y,imag:b},backend:n});return f.forEach(v=>n.disposeIntermediateTensorInfo(v)),g.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),x}let c=o.map(f=>{let g=k.sizeFromShape(f.shape.slice(s));return It({inputs:{x:f},backend:n,attrs:{shape:[-1,g]}})}),u=c.map(f=>({vals:n.data.get(f.dataId).values,shape:f.shape}));i=_.computeOutShape(c.map(f=>f.shape),1);let p=c[0].shape[0]===1,d=Cv(u,i,t[0].dtype,p),h=_.computeOutShape(o.map(f=>f.shape),s),m=n.makeTensorInfo(h,t[0].dtype,d);return c.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var HH={kernelName:qo,backendName:"cpu",kernelFunc:gu};function UT(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:c,dimRoundingMode:u}=a;ke([r,s],"conv2d");let p=_.convertConv2DDataFormat(l),d=_.computeConv2DInfo(r.shape,s.shape,i,c,o,u,!1,p),h=d.filterHeight,m=d.filterWidth,f=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x=d.dataFormat==="channelsLast",v=new Bt(d.outShape,r.dtype),N=k.computeStrides(r.shape),T=k.computeStrides(s.shape),E=N[0],A=x?N[1]:N[2],$=x?N[2]:1,O=x?1:N[1],V=v.strides[0],W=x?v.strides[1]:v.strides[2],H=x?v.strides[2]:1,X=x?1:v.strides[1],q=n.data.get(r.dataId).values,K=n.data.get(s.dataId).values,J=v.values;for(let te=0;te<d.batchSize;++te){let Q=te*E,ie=te*V;for(let re=0;re<d.outHeight;++re){let ae=ie+re*W,oe=re*d.strideHeight-b;for(let he=0;he<h;++he){let ce=oe+he*f;if(ce<0||ce>=d.inHeight)continue;let ge=he*T[0],be=Q+ce*A;for(let Ie=0;Ie<d.outWidth;++Ie){let Te=ae+Ie*H,Ee=Ie*d.strideWidth-y;for(let Me=0;Me<m;++Me){let Je=Ee+Me*g;if(Je<0||Je>=d.inWidth)continue;let nt=ge+Me*T[1],Ve=be+Je*$,ut=nt;for(let Ge=0;Ge<d.inChannels;++Ge){let ct=q[Ve+Ge*O];for(let gt=0;gt<d.outChannels;++gt)J[Te+gt*X]+=ct*K[ut+gt];ut+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,J)}var jH={kernelName:Bs,backendName:"cpu",kernelFunc:UT};function qH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:c,filterShape:u}=a;ke([r,s],"conv2dBackpropFilter");let p=_.convertConv2DDataFormat(l),d=_.computeConv2DInfo(r.shape,u,i,1,o,c,!1,p),{strideHeight:h,strideWidth:m,filterHeight:f,filterWidth:g}=d,y=d.dataFormat==="channelsLast",b=new Bt(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,N=n.data.get(r.dataId).values,T=n.data.get(s.dataId).values,E=new Bt(r.shape,r.dtype,N),A=new Bt(s.shape,s.dtype,T);for(let $=0;$<f;++$){let O=Math.max(0,Math.ceil((v-$)/h)),V=Math.min(d.outHeight,(d.inHeight+v-$)/h);for(let W=0;W<g;++W){let H=Math.max(0,Math.ceil((x-W)/m)),X=Math.min(d.outWidth,(d.inWidth+x-W)/m);for(let q=0;q<d.inChannels;++q)for(let K=0;K<d.outChannels;++K){let J=0;for(let te=0;te<d.batchSize;++te)for(let Q=O;Q<V;++Q){let ie=$+Q*h-v;for(let re=H;re<X;++re){let ae=W+re*m-x;y?J+=E.get(te,ie,ae,q)*A.get(te,Q,re,K):J+=E.get(te,q,ie,ae)*A.get(te,K,Q,re)}}b.set(J,$,W,q,K)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var KH={kernelName:Gd,backendName:"cpu",kernelFunc:qH};function XH(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:c,dimRoundingMode:u}=a;ke([r,s],"conv2dBackpropInput");let p=k.computeStrides(s.shape),d=k.computeStrides(r.shape),h=_.convertConv2DDataFormat(c),m=_.computeConv2DInfo(i,s.shape,o,1,l,u,!1,h),f=new Bt(m.inShape,"float32"),g=f.values,y=n.data.get(r.dataId).values,b=n.data.get(s.dataId).values,[x,v,N]=p,{batchSize:T,filterHeight:E,filterWidth:A,inChannels:$,inHeight:O,inWidth:V,outChannels:W,outHeight:H,outWidth:X,strideHeight:q,strideWidth:K}=m;h=m.dataFormat;let J=E-1-m.padInfo.top,te=A-1-m.padInfo.left,Q=h==="channelsLast",ie=f.strides[0],re=Q?f.strides[1]:f.strides[2],ae=Q?f.strides[2]:1,oe=Q?1:f.strides[1],he=d[0],ce=Q?d[1]:d[2],ge=Q?d[2]:1,be=Q?1:d[1];for(let Ie=0;Ie<T;++Ie)for(let Te=0;Te<$;++Te)for(let Ee=0;Ee<O;++Ee){let Me=Ee-J,Je=Math.max(0,Math.ceil(Me/q)),nt=Math.min(H,(E+Me)/q);for(let Ve=0;Ve<V;++Ve){let ut=Ve-te,Ge=Math.max(0,Math.ceil(ut/K)),ct=Math.min(X,(A+ut)/K),gt=0;for(let _t=Je;_t<nt;++_t){let Nt=_t*q-Me;for(let an=Ge;an<ct;++an){let kn=an*K-ut,la=he*Ie+ce*_t+ge*an,An=x*(E-1-Nt)+v*(A-1-kn)+N*Te;for(let pn=0;pn<W;++pn){let jn=y[la+be*pn],dr=b[An+pn];gt+=jn*dr}}}let Fn=ie*Ie+re*Ee+ae*Ve+oe*Te;g[Fn]=gt}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var YH={kernelName:Ws,backendName:"cpu",kernelFunc:XH};function JH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a;ke([r,s],"conv3d");let c=_.computeConv3DInfo(r.shape,s.shape,i,l,o),{filterDepth:u,filterHeight:p,filterWidth:d,dilationDepth:h,dilationHeight:m,dilationWidth:f,padInfo:g}=c,y=g.front,b=g.left,x=g.top,v=new Bt(c.outShape,r.dtype),N=n.data.get(r.dataId).values,T=n.data.get(s.dataId).values,E=v.values,A=k.computeStrides(r.shape),$=k.computeStrides(s.shape);for(let O=0;O<c.batchSize;++O){let V=O*A[0],W=O*v.strides[0];for(let H=0;H<c.outDepth;++H){let X=W+H*v.strides[1],q=H*c.strideDepth-y;for(let K=0;K<u;++K){let J=q+K*h;if(J<0||J>=c.inDepth)continue;let te=K*$[0],Q=V+J*A[1];for(let ie=0;ie<c.outHeight;++ie){let re=X+ie*v.strides[2],ae=ie*c.strideHeight-x;for(let oe=0;oe<p;++oe){let he=ae+oe*m;if(he<0||he>=c.inHeight)continue;let ce=te+oe*$[1],ge=Q+he*A[2];for(let be=0;be<c.outWidth;++be){let Ie=re+be*c.outChannels,Te=be*c.strideWidth-b;for(let Ee=0;Ee<d;++Ee){let Me=Te+Ee*f;if(Me<0||Me>=c.inWidth)continue;let Je=ce+Ee*$[2],nt=ge+Me*c.inChannels,Ve=Je;for(let ut=0;ut<c.inChannels;++ut){let Ge=N[nt+ut];for(let ct=0;ct<c.outChannels;++ct)E[Ie+ct]+=Ge*T[Ve+ct];Ve+=c.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}var ZH={kernelName:gc,backendName:"cpu",kernelFunc:JH};function QH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:l}=a;ke([r,s],"conv3dBackpropFilterV2");let c=k.computeStrides(r.shape),u=k.computeStrides(s.shape),p=_.computeConv3DInfo(r.shape,l,i,1,o),d=p.strideDepth,h=p.strideHeight,m=p.strideWidth,f=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=new Bt(p.filterShape,"float32"),x=b.values,[v,N,T,E]=b.strides,A=n.data.get(s.dataId).values,[$,O,V,W]=u,H=n.data.get(r.dataId).values,[X,q,K,J]=c,te=p.padInfo.front,Q=p.padInfo.left,ie=p.padInfo.top;for(let re=0;re<f;++re){let ae=Math.max(0,Math.ceil((te-re)/d)),oe=Math.min(p.outDepth,(p.inDepth+te-re)/d),he=re*v;for(let ce=0;ce<g;++ce){let ge=Math.max(0,Math.ceil((ie-ce)/h)),be=Math.min(p.outHeight,(p.inHeight+ie-ce)/h),Ie=ce*N+he;for(let Te=0;Te<y;++Te){let Ee=Math.max(0,Math.ceil((Q-Te)/m)),Me=Math.min(p.outWidth,(p.inWidth+Q-Te)/m),Je=Te*T+Ie;for(let nt=0;nt<p.inChannels;++nt){let Ve=nt*E+Je;for(let ut=0;ut<p.outChannels;++ut){let Ge=0;for(let ct=0;ct<p.batchSize;++ct){let gt=ct*X,Fn=ct*$;for(let _t=ae;_t<oe;++_t){let Nt=(re+_t*d-te)*q+gt,an=_t*O+Fn;for(let kn=ge;kn<be;++kn){let la=(ce+kn*h-ie)*K+Nt,An=kn*V+an;for(let pn=Ee;pn<Me;++pn){let jn=(Te+pn*m-Q)*J+la,dr=pn*W+An;Ge+=H[jn+nt]*A[dr+ut]}}}}x[Ve+ut]=Ge}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var e6={kernelName:Hd,backendName:"cpu",kernelFunc:QH};function t6(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:l}=a;ke([r],"conv3dBackpropInputV2");let c=k.computeStrides(r.shape),u=k.computeStrides(s.shape),p=_.computeConv3DInfo(l,s.shape,o,1,i),d=new Bt(p.inShape,"float32"),h=d.values,[m,f,g,y]=d.strides,b=n.data.get(r.dataId).values,[x,v,N,T]=c,E=n.data.get(s.dataId).values,[A,$,O,V]=u,{batchSize:W,filterDepth:H,filterHeight:X,filterWidth:q,inChannels:K,inDepth:J,inHeight:te,inWidth:Q,outChannels:ie,outDepth:re,outHeight:ae,outWidth:oe,strideDepth:he,strideHeight:ce,strideWidth:ge}=p,be=H-1-p.padInfo.front,Ie=X-1-p.padInfo.top,Te=q-1-p.padInfo.left;for(let Ee=0;Ee<W;++Ee)for(let Me=0;Me<K;++Me)for(let Je=0;Je<J;++Je){let nt=Je-be,Ve=Math.max(0,Math.ceil(nt/he)),ut=Math.min(re,(H+nt)/he);for(let Ge=0;Ge<te;++Ge){let ct=Ge-Ie,gt=Math.max(0,Math.ceil(ct/ce)),Fn=Math.min(ae,(X+ct)/ce);for(let _t=0;_t<Q;++_t){let Nt=_t-Te,an=Math.max(0,Math.ceil(Nt/ge)),kn=Math.min(oe,(q+Nt)/ge),la=0;for(let An=Ve;An<ut;++An){let pn=An*he-nt;for(let jn=gt;jn<Fn;++jn){let dr=jn*ce-ct;for(let hr=an;hr<kn;++hr){let ka=hr*ge-Nt,Io=x*Ee+v*An+N*jn+T*hr,Ia=A*(H-1-pn)+$*(X-1-dr)+O*(q-1-ka)+V*Me;for(let Ua=0;Ua<ie;++Ua){let Na=b[Io+Ua],Ss=E[Ia+Ua];la+=Na*Ss}}}}h[m*Ee+f*Je+g*Ge+y*_t+Me]=la}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}var n6={kernelName:jd,backendName:"cpu",kernelFunc:t6},a6=it(Vs,e=>Math.cos(e)),r6={kernelName:Vs,backendName:"cpu",kernelFunc:a6},s6=it(Ko,e=>Math.cosh(e)),i6={kernelName:Ko,backendName:"cpu",kernelFunc:s6};function o6(e){let{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:c}=a,[u,p,d,h]=r.shape,m=s.shape[0],[f,g]=o,y=Le([m,f,g,h],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(r.dataId).values,N=k.computeStrides(r.shape),T=k.computeStrides(y.shape);for(let E=0;E<m;E++){let A=E*4,$=b[A],O=b[A+1],V=b[A+2],W=b[A+3],H=x[E];if(H>=u)continue;let X=f>1?(V-$)*(p-1)/(f-1):0,q=g>1?(W-O)*(d-1)/(g-1):0;for(let K=0;K<f;K++){let J=f>1?$*(p-1)+K*X:.5*($+V)*(p-1);if(J<0||J>p-1){for(let te=0;te<g;te++)for(let Q=0;Q<h;Q++){let ie=Q+te*T[2]+K*T[1]+E*T[0];y.values[ie]=c}continue}if(l==="bilinear"){let te=Math.floor(J),Q=Math.ceil(J),ie=J-te;for(let re=0;re<g;re++){let ae=g>1?O*(d-1)+re*q:.5*(O+W)*(d-1);if(ae<0||ae>d-1){for(let ge=0;ge<h;ge++){let be=ge+re*T[2]+K*T[1]+E*T[0];y.values[be]=c}continue}let oe=Math.floor(ae),he=Math.ceil(ae),ce=ae-oe;for(let ge=0;ge<h;ge++){let be=ge+oe*N[2]+te*N[1]+H*N[0],Ie=v[be];be=ge+he*N[2]+te*N[1]+H*N[0];let Te=v[be];be=ge+oe*N[2]+Q*N[1]+H*N[0];let Ee=v[be];be=ge+he*N[2]+Q*N[1]+H*N[0];let Me=v[be],Je=Ie+(Te-Ie)*ce,nt=Ee+(Me-Ee)*ce;be=ge+re*T[2]+K*T[1]+E*T[0],y.values[be]=Je+(nt-Je)*ie}}}else for(let te=0;te<g;++te){let Q=g>1?O*(d-1)+te*q:.5*(O+W)*(d-1);if(Q<0||Q>d-1){for(let ae=0;ae<h;ae++){let oe=ae+te*T[2]+K*T[1]+E*T[0];y.values[oe]=c}continue}let ie=Math.round(Q),re=Math.round(J);for(let ae=0;ae<h;ae++){let oe=ae+ie*N[2]+re*N[1]+H*N[0],he=ae+te*T[2]+K*T[1]+E*T[0];y.values[he]=v[oe]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var l6={kernelName:Xo,backendName:"cpu",kernelFunc:o6};function u6(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;ke(r,"cumsum");let l=_.getAxesPermutation([s],r.shape.length),c=r;l!=null&&(c=ba({inputs:{x:r},backend:n,attrs:{perm:l}}));let u=_.getInnerMostAxes(1,r.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);let p=pa(c.dtype,"int32"),d=k.makeZerosTypedArray(k.sizeFromShape(c.shape),p),h=n.data.get(c.dataId).values,m=c.shape[c.shape.length-1],f=o?(y,b)=>y+m-b-1:(y,b)=>y+b;for(let y=0;y<h.length;y+=m)for(let b=0;b<m;b++){let x=f(y,b);if(b===0)d[x]=i?0:h[x];else{let v=f(y,b-1);d[x]=i?h[v]+d[v]:h[x]+d[v]}}let g=n.makeTensorInfo(c.shape,p,d);if(l!=null){let y=_.getUndoAxesPermutation(l),b=ba({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),b}return g}var c6={kernelName:Us,backendName:"cpu",kernelFunc:u6};function p6(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=a;if(r.shape.length===1){let l=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,u=Sv(l,c,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}else if(r.shape.length===2){let l=n.bufferSync(r),c=n.bufferSync(s),u=pT(l,c,i,o);return n.makeTensorInfo(u.shape,s.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var d6={kernelName:qd,backendName:"cpu",kernelFunc:p6};function h6(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:i}=a;k.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`),k.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);let o=r.shape[0],l=r.shape[1],c=r.shape[2],u=r.shape[3],p=l*s,d=c*s,h=u/(s*s),m=n.data.get(r.dataId).values,f=new Float32Array(o*p*d*h),g=0;for(let y=0;y<o;++y)for(let b=0;b<p;++b){let x=Math.floor(b/s),v=b%s;for(let N=0;N<d;++N){let T=Math.floor(N/s),E=N%s,A=(v*s+E)*h;for(let $=0;$<h;++$){let O=$+A+u*(T+c*(x+l*y));f[g++]=m[O]}}}return n.makeTensorInfo([o,p,d,h],r.dtype,f)}var m6={kernelName:Yo,backendName:"cpu",kernelFunc:h6};function GT(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:c}=a;ke([r,s],"depthwiseConv2DNative");let u=k.computeStrides(r.shape),p=k.computeStrides(s.shape),d=l;d==null&&(d=[1,1]),k.assert(_.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let h=_.computeConv2DInfo(r.shape,s.shape,i,d,o,c,!0),{filterHeight:m,filterWidth:f,dilationHeight:g,dilationWidth:y,padInfo:b}=h,x=b.left,v=b.top,N=h.outChannels/h.inChannels,T=new Bt(h.outShape,r.dtype),E=n.data.get(r.dataId).values,A=n.data.get(s.dataId).values,$=T.values;for(let O=0;O<h.batchSize;++O){let V=O*u[0],W=O*T.strides[0];for(let H=0;H<h.outHeight;++H){let X=W+H*T.strides[1],q=H*h.strideHeight-x;for(let K=0;K<m;++K){let J=q+K*g;if(J<0||J>=h.inHeight)continue;let te=K*p[0],Q=V+J*u[1];for(let ie=0;ie<h.outWidth;++ie){let re=X+ie*T.strides[2],ae=ie*h.strideWidth-v;for(let oe=0;oe<f;++oe){let he=ae+oe*y;if(he<0||he>=h.inWidth)continue;let ce=te+oe*p[1],ge=Q+he*h.inChannels,be=re,Ie=ce;for(let Te=0;Te<h.inChannels;++Te){let Ee=E[ge+Te];for(let Me=0;Me<N;++Me)$[be+Me]+=Ee*A[Ie+Me];be+=N,Ie+=N}}}}}}return n.makeTensorInfo(T.shape,T.dtype,T.values)}var f6={kernelName:Gs,backendName:"cpu",kernelFunc:GT};function g6(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:c,filterShape:u}=a;ke([r,s],"depthwiseConv2dNativeBackpropFilter");let p=_.computeConv2DInfo(r.shape,u,i,o,l,c,!0),{strideHeight:d,strideWidth:h,filterHeight:m,filterWidth:f}=p,g=new Bt(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,x=p.outChannels/p.inChannels,v=n.data.get(r.dataId).values,N=new Bt(r.shape,r.dtype,v),T=n.data.get(s.dataId).values,E=new Bt(s.shape,s.dtype,T);for(let A=0;A<m;++A){let $=Math.max(0,Math.ceil((b-A)/d)),O=Math.min(p.outHeight,(p.inHeight+b-A)/d);for(let V=0;V<f;++V){let W=Math.max(0,Math.ceil((y-V)/h)),H=Math.min(p.outWidth,(p.inWidth+y-V)/h);for(let X=0;X<p.outChannels;++X){let q=Math.trunc(X/x),K=X%x,J=0;for(let te=0;te<p.batchSize;++te)for(let Q=$;Q<O;++Q){let ie=A+Q*d-b;for(let re=W;re<H;++re){let ae=V+re*h-y;J+=N.get(te,ie,ae,q)*E.get(te,Q,re,X)}}g.set(J,A,V,q,K)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var y6={kernelName:Kd,backendName:"cpu",kernelFunc:g6};function b6(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:c,inputShape:u}=a;ke([r,s],"depthwiseConv2DNativeBackpropInput");let p=k.computeStrides(r.shape),d=k.computeStrides(s.shape),h=_.computeConv2DInfo(u,s.shape,i,o,l,c,!0),m=new Bt(h.inShape,"float32"),f=m.values,[g,y,b]=m.strides,x=n.data.get(r.dataId).values,[v,N,T]=p,E=n.data.get(s.dataId).values,[A,$,O]=d,{batchSize:V,filterHeight:W,filterWidth:H,inChannels:X,inHeight:q,inWidth:K,outChannels:J,outHeight:te,outWidth:Q,strideHeight:ie,strideWidth:re}=h,ae=W-1-h.padInfo.top,oe=H-1-h.padInfo.left,he=J/X;for(let ce=0;ce<V;++ce)for(let ge=0;ge<X;++ge)for(let be=0;be<q;++be){let Ie=be-ae,Te=Math.max(0,Math.ceil(Ie/ie)),Ee=Math.min(te,(W+Ie)/ie);for(let Me=0;Me<K;++Me){let Je=Me-oe,nt=Math.max(0,Math.ceil(Je/re)),Ve=Math.min(Q,(H+Je)/re),ut=0;for(let Ge=Te;Ge<Ee;++Ge){let ct=Ge*ie-Ie;for(let gt=nt;gt<Ve;++gt){let Fn=gt*re-Je,_t=v*ce+N*Ge+T*gt,Nt=A*(W-1-ct)+$*(H-1-Fn)+O*ge;for(let an=0;an<he;++an){let kn=ge*he+an,la=x[_t+kn],An=E[Nt+an];ut+=la*An}}}f[g*ce+y*be+b*Me+ge]=ut}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var x6={kernelName:Xd,backendName:"cpu",kernelFunc:b6};function v6(e){let{inputs:t,backend:n}=e,{x:a}=t,r=k.sizeFromShape(a.shape),s=n.data.get(a.dataId).values,i=Le([r,r],a.dtype),o=i.values;for(let c=0;c<s.length;c++)o[c*r+c]=s[c];let l=[...a.shape,...a.shape];return n.makeTensorInfo(l,i.dtype,i.values)}var w6={kernelName:Yd,backendName:"cpu",kernelFunc:v6},k6={kernelName:yc,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,filter:r}=e,{strides:s,pad:i,dilations:o}=n,l=t,c=l.data.get(a.dataId).values,u=a.shape.length,p=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:h,inHeight:m,inWidth:f,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:N,filterHeight:T,filterWidth:E,dilationHeight:A,dilationWidth:$,outShape:O}=_.computeDilation2DInfo(a.shape,r.shape,s,i,"NHWC",o),V=k.sizeFromShape(O),W=O.length,H=k.getArrayFromDType(a.dtype,V);for(let X=0;X<h;++X)for(let q=0;q<y;++q){let K=q*v-x.top;for(let J=0;J<b;++J){let te=J*N-x.left;for(let Q=0;Q<g;++Q){let ie=Number.MIN_SAFE_INTEGER;for(let ae=0;ae<T;++ae){let oe=K+ae*A;if(oe>=0&&oe<m)for(let he=0;he<E;++he){let ce=te+he*$;if(ce>=0&&ce<f){let ge=k.locToIndex([X,oe,ce,Q],u,k.computeStrides(a.shape)),be=k.locToIndex([ae,he,Q],d,k.computeStrides(r.shape)),Ie=c[ge]+p[be];Ie>ie&&(ie=Ie)}}}let re=k.locToIndex([X,q,J,Q],W,k.computeStrides(O));H[re]=ie}}}return{dataId:l.write(k.toTypedArray(H,a.dtype),O,a.dtype),shape:O,dtype:a.dtype}}},I6={kernelName:Zd,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,filter:r,dy:s}=e,{strides:i,pad:o,dilations:l}=n,c=t,u=k.toNestedArray(a.shape,c.data.get(a.dataId).values),p=k.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:d,inHeight:h,inWidth:m,inChannels:f,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:N,filterWidth:T,dilationHeight:E,dilationWidth:A,outShape:$}=_.computeDilation2DInfo(a.shape,r.shape,i,o,"NHWC",l);k.assert(s.rank===$.length,()=>`Error in ${Zd}, dy must have the same rank as output ${$.length}, but got ${s.rank}`);let O=k.toNestedArray($,c.data.get(s.dataId).values),V=k.makeZerosNestedTypedArray(r.shape,r.dtype);for(let W=0;W<d;++W)for(let H=0;H<g;++H){let X=H*x-b.top;for(let q=0;q<y;++q){let K=q*v-b.left;for(let J=0;J<f;++J){let te=Number.MIN_SAFE_INTEGER,Q=0,ie=0;for(let re=0;re<N;++re){let ae=X+re*E;if(ae>=0&&ae<h)for(let oe=0;oe<T;++oe){let he=K+oe*A;if(he>=0&&he<m){let ce=u[W][ae][he][J]+p[re][oe][J];ce>te&&(te=ce,Q=re,ie=oe)}}}V[Q][ie][J]+=O[W][H][q][J]}}}return{dataId:c.write(k.toTypedArray(V,a.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},N6={kernelName:Jd,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,filter:r,dy:s}=e,{strides:i,pad:o,dilations:l}=n,c=t,u=k.toNestedArray(a.shape,c.data.get(a.dataId).values),p=k.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:d,inHeight:h,inWidth:m,inChannels:f,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:N,filterWidth:T,dilationHeight:E,dilationWidth:A,outShape:$}=_.computeDilation2DInfo(a.shape,r.shape,i,o,"NHWC",l);k.assert(s.rank===$.length,()=>`Error in ${Jd}, dy must have the same rank as output ${$.length}, but got ${s.rank}`);let O=k.toNestedArray($,c.data.get(s.dataId).values),V=k.makeZerosNestedTypedArray(a.shape,a.dtype);for(let W=0;W<d;++W)for(let H=0;H<g;++H){let X=H*x-b.top;for(let q=0;q<y;++q){let K=q*v-b.left;for(let J=0;J<f;++J){let te=Number.MIN_SAFE_INTEGER,Q=X<0?0:X,ie=K<0?0:K;for(let re=0;re<N;++re){let ae=X+re*E;if(ae>=0&&ae<h)for(let oe=0;oe<T;++oe){let he=K+oe*A;if(he>=0&&he<m){let ce=u[W][ae][he][J]+p[re][oe][J];ce>te&&(te=ce,Q=ae,ie=he)}}}V[W][Q][ie][J]+=O[W][H][q][J]}}}return{dataId:c.write(k.toTypedArray(V,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};function T6(e){let{inputs:t,backend:n}=e,{dy:a,y:r}=t;ke([a,r],"eluGrad");let s=new Float32Array(k.sizeFromShape(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values;for(let l=0;l<i.length;++l){let c=i[l];c>=1?s[l]=o[l]:s[l]=o[l]*(c+1)}return n.makeTensorInfo(r.shape,"float32",s)}var S6={kernelName:Qd,backendName:"cpu",kernelFunc:T6},C6=Ot((e,t)=>e===t?1:0),HT=en(Qo,C6,null,"bool"),E6={kernelName:Qo,backendName:"cpu",kernelFunc:HT},_6=_.ERF_P,F6=_.ERF_A1,A6=_.ERF_A2,$6=_.ERF_A3,D6=_.ERF_A4,M6=_.ERF_A5,R6=it(Zo,e=>{let t=Math.sign(e),n=Math.abs(e),a=1/(1+_6*n);return t*(1-((((M6*a+D6)*a+$6)*a+A6)*a+F6)*a*Math.exp(-n*n))}),P6={kernelName:Zo,backendName:"cpu",kernelFunc:R6};function Jm(e){let{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:s}=a,i=r.shape.length,o=r.shape.slice(),l=s;return s<0&&(k.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),It({inputs:{x:r},backend:n,attrs:{shape:o}})}var O6={kernelName:el,backendName:"cpu",kernelFunc:Jm},L6=Ot((e,t)=>e/t),Pv=en(Hs,L6),Ov={kernelName:Hs,backendName:"cpu",kernelFunc:Pv};function jT(e,t,n){let a=e.shape,r=a[0],s=a[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,c=[r,s],u=k.sizeFromShape(c),p=k.getTypedArrayFromDType("float32",u),d=k.getTypedArrayFromDType("float32",u);for(let g=0;g<r;g++){let y=Yi({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),b=Yi({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,s]}}),x=Bn({inputs:{real:y,imag:b},backend:n}),{real:v,imag:N}=z6(x,t,n),T=_.mergeRealAndImagArrays(v,N);for(let E=0;E<s;E++){let A=_.getComplexWithIndex(T,E);p[g*s+E]=A.real,d[g*s+E]=A.imag}n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x)}let h=n.makeTensorInfo(c,"float32",p),m=n.makeTensorInfo(c,"float32",d),f=Bn({inputs:{real:h,imag:m},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),f}function z6(e,t,n){let a=k.sizeFromShape(e.shape),r=n.data.get(e.dataId),s=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(B6(a)){let o=Lv(s,i,a,t,n),l=[e.shape[0],e.shape[1]];if(t){let c=n.makeTensorInfo(l,"float32",o.real),u=n.makeTensorInfo(l,"float32",o.imag),p=n.makeTensorInfo([],"float32",k.createScalarValue(a,"float32")),d=sr({inputs:{x:p},backend:n}),h=Ov.kernelFunc({inputs:{a:c,b:p},backend:n}),m=Ov.kernelFunc({inputs:{a:u,b:d},backend:n}),f=n.data.get(h.dataId).values,g=n.data.get(m.dataId).values;return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),{real:f,imag:g}}return o}else{let o=_.mergeRealAndImagArrays(s,i),l=W6(o,a,t);return _.splitRealAndImagArrays(l)}}function B6(e){return(e&e-1)==0}function Lv(e,t,n,a,r){if(n===1)return{real:e,imag:t};let s=_.mergeRealAndImagArrays(e,t),i=n/2,o=_.complexWithEvenIndex(s),l=o.real,c=o.imag,u=[l.length],p=r.makeTensorInfo(u,"float32",l),d=r.makeTensorInfo(u,"float32",c),h=Bn({inputs:{real:p,imag:d},backend:r}),m=_.complexWithOddIndex(s),f=m.real,g=m.imag,y=[f.length],b=r.makeTensorInfo(y,"float32",f),x=r.makeTensorInfo(y,"float32",g),v=Bn({inputs:{real:b,imag:x},backend:r}),N=Lv(l,c,i,a,r),T=N.real,E=N.imag,A=[T.length],$=r.makeTensorInfo(A,"float32",T),O=r.makeTensorInfo(A,"float32",E),V=Bn({inputs:{real:$,imag:O},backend:r}),W=Lv(f,g,i,a,r),H=W.real,X=W.imag,q=[H.length],K=r.makeTensorInfo(q,"float32",H),J=r.makeTensorInfo(q,"float32",X),te=Bn({inputs:{real:K,imag:J},backend:r}),Q=_.exponents(n,a),ie=[Q.real.length],re=r.makeTensorInfo(ie,"float32",Q.real),ae=r.makeTensorInfo(ie,"float32",Q.imag),oe=Bn({inputs:{real:re,imag:ae},backend:r}),he=$v({inputs:{a:oe,b:te},backend:r}),ce=wp({inputs:{a:V,b:he},backend:r}),ge=Dv({inputs:{a:V,b:he},backend:r}),be=Xi({inputs:{input:ce},backend:r}),Ie=Xi({inputs:{input:ge},backend:r}),Te=fu({inputs:{input:ce},backend:r}),Ee=fu({inputs:{input:ge},backend:r}),Me=gu({inputs:[be,Ie],backend:r,attrs:{axis:0}}),Je=gu({inputs:[Te,Ee],backend:r,attrs:{axis:0}}),nt=r.data.get(Me.dataId).values,Ve=r.data.get(Je.dataId).values;return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(J),r.disposeIntermediateTensorInfo(te),r.disposeIntermediateTensorInfo(re),r.disposeIntermediateTensorInfo(ae),r.disposeIntermediateTensorInfo(oe),r.disposeIntermediateTensorInfo(he),r.disposeIntermediateTensorInfo(ce),r.disposeIntermediateTensorInfo(ge),r.disposeIntermediateTensorInfo(be),r.disposeIntermediateTensorInfo(Te),r.disposeIntermediateTensorInfo(Ie),r.disposeIntermediateTensorInfo(Ee),r.disposeIntermediateTensorInfo(Me),r.disposeIntermediateTensorInfo(Je),{real:nt,imag:Ve}}function W6(e,t,n){let a=new Float32Array(t*2);for(let r=0;r<t;r++){let s=0,i=0;for(let o=0;o<t;o++){let l=_.exponent(r*o,t,n),c=_.getComplexWithIndex(e,o);s+=c.real*l.real-c.imag*l.imag,i+=c.real*l.imag+c.imag*l.real}n&&(s/=t,i/=t),_.assignToTypedArray(a,s,i,r)}return a}function V6(e){let{inputs:t,backend:n}=e,{input:a}=t,r=k.sizeFromShape(a.shape),s=a.shape[a.shape.length-1],i=r/s,o=It({inputs:{x:a},backend:n,attrs:{shape:[i,s]}}),l=jT(o,!1,n),c=It({inputs:{x:l},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),c}var U6={kernelName:eh,backendName:"cpu",kernelFunc:V6};function zv(e){let{backend:t,attrs:n}=e,{shape:a,value:r,dtype:s}=n,i=s||k.inferDtype(r),o=k.getArrayFromDType(i,k.sizeFromShape(a));return G6(o,r,i),t.makeTensorInfo(a,i,o)}var H6={kernelName:bc,backendName:"cpu",kernelFunc:zv};function G6(e,t,n){e.fill(t)}var j6={kernelName:nl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,r=n,s=k.getTypedArrayFromDType(a.dtype,k.sizeFromShape(a.shape)),[i,o,l,c]=a.shape,u=r.data.get(a.dataId).values;for(let p=0;p<i;p++){let d=p*l*o*c;for(let h=0;h<o;h++){let m=h*(l*c);for(let f=0;f<l;f++){let g=f*c;for(let y=0;y<c;y++){let b=[i,h,f,y][2],x=Math.round(l-b),v=d+m+g+y,N=u[v];if(x>=0&&x<l){let T=x*c,E=d+m+T+y;N=u[E]}s[v]=N}}}}return{dataId:r.write(s,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},q6=Ot((e,t)=>Math.floor(e/t)),K6=en(Ks,q6,null,"int32"),X6={kernelName:Ks,backendName:"cpu",kernelFunc:K6};function Y6(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:c,dataFormat:u,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:m}=a,f=UT({inputs:{x:r,filter:s},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:p,dimRoundingMode:d}});if(i){let g=f;f=wp({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=f;f=Mv(n,f,h,o,m),n.disposeIntermediateTensorInfo(g)}return f}var J6={kernelName:Si,backendName:"cpu",kernelFunc:Y6};function Z6(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:c,dataFormat:u,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:m}=a,f=GT({inputs:{x:r,filter:s},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:p,dimRoundingMode:d}});if(i){let g=f;f=wp({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=f;f=Mv(n,f,h,o,m),n.disposeIntermediateTensorInfo(g)}return f}var Q6={kernelName:Ci,backendName:"cpu",kernelFunc:Z6};function ej(e){let{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=k.sizeFromShape(a.shape),i=r.shape,o=i[i.length-1],[l,c,u,p]=_.prepareAndValidate(a,r);if(c===0)return n.makeTensorInfo(l,a.dtype,[]);let d=Le([c,u],a.dtype),h=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values;for(let f=0;f<c;f++){let g=[],y=0;for(let b=0;b<o;b++){let x=h[f*o+b];y+=x*p[b],g.push(x)}if(y<0||y>=s/u)throw new Error(`Invalid indices: ${g} does not index into ${a.shape}`);for(let b=0;b<u;b++)d.values[f*u+b]=m[y*u+b]}return n.makeTensorInfo(l,d.dtype,d.values)}var tj={kernelName:rl,backendName:"cpu",kernelFunc:ej};function nj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=a;ke([r,s],"gatherV2");let l=o;o==null&&(l=0);let c=k.sizeFromShape(s.shape),u=k.parseAxisParam(i,r.shape)[0],p=_.segment_util.collectGatherOpShapeInfo(r,s,u,l),d=It({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),h=It({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,c/p.batchSize]}}),m=[p.batchSize,p.outerSize,c/p.batchSize,p.sliceSize],f=n.bufferSync(h),g=n.bufferSync(d),y=gT(g,f,m);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.makeTensorInfo(p.outputShape,y.dtype,y.values)}var aj={kernelName:al,backendName:"cpu",kernelFunc:nj},rj=Ot((e,t)=>e>=t?1:0),sj=en(Ys,rj,null,"bool"),ij={kernelName:Ys,backendName:"cpu",kernelFunc:sj};function oj(e){let{inputs:t,backend:n}=e,{input:a}=t,r=k.sizeFromShape(a.shape),s=a.shape[a.shape.length-1],i=r/s,o=It({inputs:{x:a},backend:n,attrs:{shape:[i,s]}}),l=jT(o,!0,n),c=It({inputs:{x:l},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),c}var lj={kernelName:th,backendName:"cpu",kernelFunc:oj},uj=it(ol,e=>Number.isFinite(e)?1:0,"bool"),cj={kernelName:ol,backendName:"cpu",kernelFunc:uj},pj=it(ll,e=>Math.abs(e)===Infinity?1:0,"bool"),dj={kernelName:ll,backendName:"cpu",kernelFunc:pj},hj=it(ul,e=>Number.isNaN(e)?1:0,"bool"),mj={kernelName:ul,backendName:"cpu",kernelFunc:hj},fj=Ot((e,t)=>e<=t?1:0),gj=en(pl,fj,null,"bool"),yj={kernelName:pl,backendName:"cpu",kernelFunc:gj};function bj(e){let{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,i=xT(a,r,s);return t.makeTensorInfo([i.length],"float32",i)}var xj={kernelName:ah,backendName:"cpu",kernelFunc:bj},vj=it(dl,e=>Math.log1p(e)),wj={kernelName:dl,backendName:"cpu",kernelFunc:vj},kj=Ot((e,t)=>e&&t),Ij=en(hl,kj,null,"bool"),Nj={kernelName:hl,backendName:"cpu",kernelFunc:Ij},Tj=it(xc,e=>e?0:1,"bool"),Sj={kernelName:xc,backendName:"cpu",kernelFunc:Tj},Cj=Ot((e,t)=>e||t),Ej=en(vc,Cj,null,"bool"),_j={kernelName:vc,backendName:"cpu",kernelFunc:Ej};function Fj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=a;ke(r,"LRN");let c=r.shape[3],u=c-1,p=n.data.get(r.dataId).values,d=k.sizeFromShape(r.shape),h=new Float32Array(d);function m(f){let g=f%c,y=f-g+Math.max(0,g-s),b=f-g+Math.min(g+s,u),x=0;for(;y<=b;y++){let v=p[y];x+=v*v}return x}for(let f=0;f<d;f++){let g=m(f),y=p[f]*Math.pow(i+o*g,-l);h[f]=y}return n.makeTensorInfo(r.shape,r.dtype,h)}var Aj={kernelName:wc,backendName:"cpu",kernelFunc:Fj};function $j(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:c,beta:u}=a;ke(i,"LRNGrad");let p=k.sizeFromShape(i.shape),d=i.shape[3],h=n.data.get(i.dataId).values,m=n.data.get(r.dataId).values,f=n.data.get(s.dataId).values,g=new Float32Array(p),y=p;for(let b=0;b<y;b++){let x=b%d,v=b-x+Math.max(0,x-o),N=b-x+Math.min(d,x+o+1),T=0;for(let E=v;E<N;E++)T+=Math.pow(m[E],2);T=c*T+l;for(let E=v;E<N;E++){let A=-2*c*u*m[E]*f[b]/T;b===E&&(A+=Math.pow(T,-u)),A*=h[b],g[E]+=A}}return n.makeTensorInfo(i.shape,r.dtype,g)}var Dj={kernelName:rh,backendName:"cpu",kernelFunc:$j};function qT(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a,o=n,l=r.shape,c=l.length,u=k.parseAxisParam(s,l),p=u,d=_.getAxesPermutation(p,c),h=o.data.get(r.dataId).values;if(d!=null){let v=new Array(c);for(let N=0;N<v.length;N++)v[N]=l[d[N]];h=_v(h,l,r.dtype,d,v),p=_.getInnerMostAxes(p.length,c),l=v}ke(r,"max"),_.assertAxesAreInnerMostDims("max",p,c);let[m,f]=_.computeOutAndReduceShapes(l,p),g=k.sizeFromShape(f),y=wT(h,g,m,r.dtype),b=o.write(y,m,r.dtype),x=m;return i&&(x=_.expandShapeToKeepDim(m,u)),{dataId:b,shape:x,dtype:r.dtype}}var Mj={kernelName:Qs,backendName:"cpu",kernelFunc:qT};function Rj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;ke(r,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a,c=1;k.assert(_.eitherStridesOrDilationsAreOne(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let u=_.computePool2DInfo(r.shape,s,i,c,o,l),p;if(u.filterWidth===1&&u.filterHeight===1&&k.arraysEqual(u.inShape,u.outShape))p=sr({inputs:{x:r},backend:n});else{let d=n.data.get(r.dataId).values,h=k.computeStrides(r.shape),m=Rv(d,r.shape,r.dtype,h,u,"max");p=n.makeTensorInfo(u.outShape,r.dtype,m.values)}return p}var Pj={kernelName:ti,backendName:"cpu",kernelFunc:Rj};function Oj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:c,dilations:u}=a;ke(r,"maxPool3d");let p=u;p==null&&(p=[1,1,1]);let d=_.computePool3DInfo(r.shape,s,i,p,o,l,c),h=n.data.get(r.dataId).values,m=VT(h,r.shape,r.dtype,k.computeStrides(r.shape),d,"max");return n.makeTensorInfo(m.shape,"float32",m.values)}var Lj={kernelName:kc,backendName:"cpu",kernelFunc:Oj};function zj(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:l,dilations:c,dimRoundingMode:u}=a;ke([r,s],"maxPool3DGrad");let p=_.computePool3DInfo(s.shape,i,o,c,l,u),d=n.bufferSync(s),h=TH(d,p),m=p.strideDepth,f=p.strideHeight,g=p.strideWidth,y=p.dilationDepth,b=p.dilationHeight,x=p.dilationWidth,v=p.effectiveFilterDepth,N=p.effectiveFilterHeight,T=p.effectiveFilterWidth,E=v-1-p.padInfo.front,A=T-1-p.padInfo.left,$=N-1-p.padInfo.top,O=Le(s.shape,"float32"),V=n.bufferSync(r);for(let W=0;W<p.batchSize;++W)for(let H=0;H<p.inChannels;++H)for(let X=0;X<p.inDepth;++X)for(let q=0;q<p.inHeight;++q)for(let K=0;K<p.inWidth;++K){let J=X-E,te=q-$,Q=K-A,ie=0;for(let re=0;re<v;re+=y){let ae=(J+re)/m;if(!(ae<0||ae>=p.outDepth||Math.floor(ae)!==ae))for(let oe=0;oe<N;oe+=b){let he=(te+oe)/f;if(!(he<0||he>=p.outHeight||Math.floor(he)!==he))for(let ce=0;ce<T;ce+=x){let ge=(Q+ce)/g;if(ge<0||ge>=p.outWidth||Math.floor(ge)!==ge)continue;let be=v*N*T-1-h.get(W,ae,he,ge,H),Ie=re*N*T+oe*T+ce,Te=be===Ie?1:0;Te!==0&&(ie+=V.get(W,ae,he,ge,H)*Te)}}}O.set(ie,W,X,q,K,H)}return n.makeTensorInfo(O.shape,O.dtype,O.values)}var Bj={kernelName:ih,backendName:"cpu",kernelFunc:zj};function Wj(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,o=s;ke([s,i],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:p}=a,d=_.computePool2DInfo(o.shape,l,c,1,u,p),h=n.data.get(o.dataId).values,m=Le(d.outShape,o.dtype,WT(h,o.shape,o.dtype,d).values),f=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,N=v-1-d.padInfo.left,T=x-1-d.padInfo.top,E=Le(o.shape,"float32"),A=n.data.get(r.dataId).values,$=Le(r.shape,"float32",A);for(let O=0;O<d.batchSize;++O)for(let V=0;V<d.inChannels;++V)for(let W=0;W<d.inHeight;++W)for(let H=0;H<d.inWidth;++H){let X=W-T,q=H-N,K=0;for(let J=0;J<x;J+=y){let te=(X+J)/f;if(!(te<0||te>=d.outHeight||Math.floor(te)!==te))for(let Q=0;Q<v;Q+=b){let ie=(q+Q)/g;if(ie<0||ie>=d.outWidth||Math.floor(ie)!==ie)continue;let re=x*v-1-m.get(O,te,ie,V),ae=J*v+Q,oe=re===ae?1:0;oe!==0&&(K+=$.get(O,te,ie,V)*oe)}}E.set(K,O,W,H,V)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}var Vj={kernelName:sh,backendName:"cpu",kernelFunc:Wj};function Uj(e,t,n,a,r){let s=k.computeStrides(t),i=Rv(e,t,n,s,r,"max"),o=WT(e,t,n,r,!0,a);return[i.values,o.values]}var Gj={kernelName:oh,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;ke(a,"MaxPoolWithArgmax");let c=l.data.get(a.dataId).values,u=_.computePool2DInfo(a.shape,r,s,[1,1],i),[p,d]=Uj(c,a.shape,a.dtype,o,u),h=l.write(p,u.outShape,a.dtype),m=l.write(d,u.outShape,a.dtype);return[{dataId:h,shape:u.outShape,dtype:a.dtype},{dataId:m,shape:u.outShape,dtype:"int32"}]}};function Zm(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;ke(r,"sum");let o;r.dtype==="bool"?o=gs({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):o=sr({inputs:{x:r},backend:n});let l=o.shape.length,c=k.parseAxisParam(s,o.shape),u=_.getAxesPermutation(c,l),p=c,d=o;u!=null&&(d=ba({inputs:{x:o},backend:n,attrs:{perm:u}}),p=_.getInnerMostAxes(p.length,l)),_.assertAxesAreInnerMostDims("sum",p,d.shape.length);let[h,m]=_.computeOutAndReduceShapes(d.shape,p),f=_.upcastType(d.dtype,"int32"),g=Ym(n,h,f),y=k.sizeFromShape(m),b=n.data.get(g.dataId).values,x=n.data.get(d.dataId).values;for(let v=0;v<b.length;++v){let N=v*y,T=0;for(let E=0;E<y;++E)T+=x[N+E];b[v]=T}if(i){let v=_.expandShapeToKeepDim(g.shape,c),N=g;g=It({inputs:{x:g},backend:n,attrs:{shape:v}}),n.disposeIntermediateTensorInfo(N)}return n.disposeIntermediateTensorInfo(o),u!=null&&n.disposeIntermediateTensorInfo(d),g}var Hj={kernelName:xi,backendName:"cpu",kernelFunc:Zm};function jj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=k.parseAxisParam(s,r.shape),l=_.computeOutAndReduceShapes(r.shape,o)[1],c=k.sizeFromShape(l),u=[],p=n.makeTensorInfo([],"float32",new Float32Array([c]));u.push(p);let d=gs({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});u.push(d);let h=Pv({inputs:{a:d,b:p},backend:n});u.push(h);let m=Zm({inputs:{x:h},backend:n,attrs:{axis:s,keepDims:i}});return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var qj={kernelName:ni,backendName:"cpu",kernelFunc:jj};function Kj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;ke(r,"min");let o=k.parseAxisParam(s,r.shape),l=o,c=_.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=ba({inputs:{x:r},backend:n,attrs:{perm:c}}),l=_.getInnerMostAxes(l.length,r.shape.length)),_.assertAxesAreInnerMostDims("min",l,u.shape.length);let[p,d]=_.computeOutAndReduceShapes(u.shape,l),h=k.sizeFromShape(d),m=k.makeZerosTypedArray(k.sizeFromShape(p),u.dtype),f=n.data.get(u.dataId).values;for(let y=0;y<m.length;++y){let b=y*h,x=f[b];for(let v=0;v<h;++v){let N=f[b+v];N<x&&(x=N)}m[y]=x}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(p,u.dtype,m);if(i){let y=_.expandShapeToKeepDim(p,o),b=It({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var Xj={kernelName:ai,backendName:"cpu",kernelFunc:Kj};function Yj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,mode:i}=a;ke(r,"mirrorPad");let o=s.map((b,x)=>b[0]+r.shape[x]+b[1]),l=s.map(b=>b[0]),c=s.map((b,x)=>b[0]+r.shape[x]),u=i==="reflect"?0:1,p=n.data.get(r.dataId).values,d=r.shape.length,h=k.computeStrides(r.shape),m=k.sizeFromShape(o),f=o.length,g=k.computeStrides(o),y=k.getTypedArrayFromDType(r.dtype,m);for(let b=0;b<m;b++){let x=k.indexToLoc(b,f,g);for(let N=0;N<f;N++)x[N]<l[N]?x[N]=l[N]*2-x[N]-u:x[N]>=c[N]&&(x[N]=(c[N]-1)*2-x[N]+u);x=x.map((N,T)=>N-l[T]);let v=k.locToIndex(x,d,h);y[b]=p[v]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}var Jj={kernelName:Ic,backendName:"cpu",kernelFunc:Yj},Zj=Ot((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),Qj=en(ml,Zj),e5={kernelName:ml,backendName:"cpu",kernelFunc:Qj},t5=Ro(Dd());function KT(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=r.shape.length,o=s;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=k.parseAxisParam([o],r.shape),c=qT({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),u=_.expandShapeToKeepDim(c.shape,l),p=It({inputs:{x:c},backend:n,attrs:{shape:u}}),d=Dv({inputs:{a:r,b:p},backend:n}),h=MT({inputs:{x:d},backend:n}),m=Zm({inputs:{x:h},backend:n,attrs:{axis:l,keepDims:!1}}),f=It({inputs:{x:m},backend:n,attrs:{shape:u}}),g=Pv({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}var n5={kernelName:vi,backendName:"cpu",kernelFunc:KT};function a5(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=a;ke(r,"multinomial");let l=o?r:KT({inputs:{logits:r},backend:n,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],p=n.data.get(l.dataId).values,d=[c,s],h=k.makeZerosTypedArray(k.sizeFromShape(d),"int32");for(let m=0;m<c;++m){let f=m*u,g=new Float32Array(u-1);g[0]=p[f];for(let x=1;x<g.length;++x)g[x]=g[x-1]+p[f+x];let y=t5.alea(i.toString()),b=m*s;for(let x=0;x<s;++x){let v=y();h[b+x]=g.length;for(let N=0;N<g.length;N++)if(v<g[N]){h[b+x]=N;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",h)}var r5={kernelName:lh,backendName:"cpu",kernelFunc:a5},s5=Qa.nonMaxSuppressionV3Impl;function i5(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=a;ke(r,"NonMaxSuppression");let c=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,{selectedIndices:p}=s5(c,u,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var o5={kernelName:yl,backendName:"cpu",kernelFunc:i5},l5=Qa.nonMaxSuppressionV4Impl;function u5(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:c}=a;ke(r,"NonMaxSuppressionPadded");let u=n.data.get(r.dataId).values,p=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:h}=l5(u,p,i,o,l,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var c5={kernelName:bl,backendName:"cpu",kernelFunc:u5},p5=Qa.nonMaxSuppressionV5Impl;function d5(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:c}=a;ke(r,"NonMaxSuppressionWithScore");let u=n.data.get(r.dataId).values,p=n.data.get(s.dataId).values,d=i,h=o,m=l,f=c,{selectedIndices:g,selectedScores:y}=p5(u,p,d,h,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var h5={kernelName:xl,backendName:"cpu",kernelFunc:d5};function m5(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{depth:s,onValue:i,offValue:o}=a;ke(r,"oneHot");let l=k.sizeFromShape(r.shape),c=new Float32Array(l*s);c.fill(o);let u=n.data.get(r.dataId).values;for(let p=0;p<l;++p)u[p]>=0&&u[p]<s&&(c[p*s+u[p]]=i);return n.makeTensorInfo([...r.shape,s],"int32",c)}var f5={kernelName:ii,backendName:"cpu",kernelFunc:m5};function Qm(e){let{inputs:t,backend:n}=e,{x:a}=t;if(a.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(a.dtype==="complex64"){let r=Xi({inputs:{input:a},backend:n}),s=Qm({inputs:{x:r},backend:n}),i=fu({inputs:{input:a},backend:n}),o=Qm({inputs:{x:i},backend:n}),l=Bn({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return zv({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}var g5={kernelName:Ol,backendName:"cpu",kernelFunc:Qm};function XT(e){let{inputs:t,backend:n}=e,{x:a}=t;if(a.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(a.dtype==="complex64"){let r=Xi({inputs:{input:a},backend:n}),s=XT({inputs:{x:r},backend:n}),i=fu({inputs:{input:a},backend:n}),o=Qm({inputs:{x:i},backend:n}),l=Bn({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return zv({backend:n,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}var y5={kernelName:vl,backendName:"cpu",kernelFunc:XT};function YT(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(t.length===1)return Jm({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach(u=>{k.assertShapesMatch(s,u.shape,"All tensors passed to stack must have matching shapes"),k.assert(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(u=>{let p=Jm({inputs:{input:u},backend:n,attrs:{dim:r}});return o.push(p),p}),c=gu({inputs:l,backend:n,attrs:{axis:r}});return o.forEach(u=>n.disposeIntermediateTensorInfo(u)),c}var b5={kernelName:wl,backendName:"cpu",kernelFunc:YT};function x5(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a;ke(r,"pad");let o=s.map((y,b)=>y[0]+r.shape[b]+y[1]),l=s.map(y=>y[0]),c=n.data.get(r.dataId).values,u=k.sizeFromShape(r.shape),p=r.shape.length,d=k.computeStrides(r.shape),h=k.sizeFromShape(o),m=o.length,f=k.computeStrides(o),g=k.getTypedArrayFromDType(r.dtype,h);i!==0&&g.fill(i);for(let y=0;y<u;y++){let b=k.indexToLoc(y,p,d).map((v,N)=>v+l[N]),x=k.locToIndex(b,m,f);g[x]=c[y]}return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}var JT={kernelName:oi,backendName:"cpu",kernelFunc:x5},v5=Ot((e,t)=>Math.pow(e,t)),w5=en(li,v5),k5={kernelName:li,backendName:"cpu",kernelFunc:w5};function I5(e){let{backend:t,attrs:n}=e,{start:a,stop:r,dtype:s,step:i}=n,o=Fv(a,r,i,s);return t.makeTensorInfo([o.length],s,o)}var N5={kernelName:Nc,backendName:"cpu",kernelFunc:I5},T5=it(Il,e=>1/e),S5={kernelName:Il,backendName:"cpu",kernelFunc:T5};function C5(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a;ke(r,"resizeBilinear");let l=k.computeStrides(r.shape),[c,u]=o,[p,d,h,m]=r.shape,f=n.data.get(r.dataId).values,g=new Float32Array(k.sizeFromShape([p,c,u,m])),y=[s&&c>1?d-1:d,s&&u>1?h-1:h],b=[s&&c>1?c-1:c,s&&u>1?u-1:u],x=0,v=y[0]/b[0],N=y[1]/b[1];for(let T=0;T<p;T++)for(let E=0;E<c;E++){let A;i?A=v*(E+.5)-.5:A=v*E;let $=Math.max(0,Math.floor(A)),O=A-$,V=Math.min(d-1,Math.ceil(A)),W=T*l[0]+$*l[1],H=T*l[0]+V*l[1];for(let X=0;X<u;X++){let q;i?q=N*(X+.5)-.5:q=N*X;let K=Math.max(0,Math.floor(q)),J=q-K,te=Math.min(h-1,Math.ceil(q)),Q=W+K*l[2],ie=H+K*l[2],re=W+te*l[2],ae=H+te*l[2];for(let oe=0;oe<m;oe++){let he=f[Q+oe],ce=f[ie+oe],ge=f[re+oe],be=f[ae+oe],Ie=he+(ge-he)*J,Te=ce+(be-ce)*J,Ee=Ie+(Te-Ie)*O;g[x++]=Ee}}}return n.makeTensorInfo([p,c,u,m],"float32",g)}var E5={kernelName:pi,backendName:"cpu",kernelFunc:C5};function _5(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a;ke([s,r],"resizeBilinearGrad");let o=k.computeStrides(r.shape),[l,c,u,p]=r.shape,[,d,h]=s.shape,m=new Float32Array(l*c*u*p),f=[i&&d>1?c-1:c,i&&h>1?u-1:u],g=[i&&d>1?d-1:d,i&&h>1?h-1:h],y=f[0]/g[0],b=f[1]/g[1],x=n.data.get(s.dataId).values,v=0;for(let N=0;N<l;N++){let T=N*o[0];for(let E=0;E<d;E++){let A=E*y,$=Math.floor(A),O=Math.min(Math.ceil(A),c-1),V=T+$*o[1],W=T+O*o[1],H=A-$,X=1-H;for(let q=0;q<h;q++){let K=q*b,J=Math.floor(K),te=Math.min(Math.ceil(K),u-1),Q=K-J,ie=1-Q,re=V+J*o[2],ae=V+te*o[2],oe=W+J*o[2],he=W+te*o[2],ce=X*ie,ge=X*Q,be=H*ie,Ie=H*Q;for(let Te=0;Te<p;Te++){let Ee=x[v++];m[re+Te]+=Ee*ce,m[ae+Te]+=Ee*ge,m[oe+Te]+=Ee*be,m[he+Te]+=Ee*Ie}}}}return n.makeTensorInfo([l,u,c,p],"float32",m)}var F5={kernelName:ph,backendName:"cpu",kernelFunc:_5};function A5(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a;ke(r,"resizeNearestNeighbor");let l=k.computeStrides(r.shape),[c,u]=o,[p,d,h,m]=r.shape,f=n.data.get(r.dataId).values,g=new Float32Array(p*c*u*m),y=[s&&c>1?d-1:d,s&&u>1?h-1:h],b=[s&&c>1?c-1:c,s&&u>1?u-1:u],x=y[0]/b[0],v=y[1]/b[1],N=0;for(let T=0;T<p;T++){let E=T*l[0];for(let A=0;A<c;A++){let $=i?x*(A+.5):x*A,O=Math.min(d-1,s?Math.round($):Math.floor($));i&&(O=Math.max(0,O));let V=E+O*l[1];for(let W=0;W<u;W++){let H=i?v*(W+.5):v*W,X=Math.min(h-1,s?Math.round(H):Math.floor(H));i&&(X=Math.max(0,X));let q=V+X*l[2];for(let K=0;K<m;K++){let J=f[q+K];g[N++]=J}}}}return n.makeTensorInfo([p,c,u,m],r.dtype,g)}var $5={kernelName:Tc,backendName:"cpu",kernelFunc:A5};function D5(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a;ke([s,r],"resizeNearestNeighborGrad");let o=k.computeStrides(r.shape),l=k.computeStrides(s.shape),[c,u,p,d]=r.shape,[,h,m]=s.shape,f=new Float32Array(c*u*p*d),g=n.data.get(s.dataId).values,y=[i&&h>1?u-1:u,i&&m>1?p-1:p],b=[i&&h>1?h-1:h,i&&m>1?m-1:m],x=y[0]/b[0],v=y[1]/b[1],N=1/x,T=1/v,E=Math.ceil(N)*2+2,A=Math.ceil(T)*2+2;for(let $=0;$<c;$++){let O=$*o[0];for(let V=0;V<u;V++){let W=O+V*o[1],H=Math.floor(V*N),X=Math.floor(H-E/2);for(let q=0;q<p;q++){let K=W+q*o[2],J=Math.floor(q*T),te=Math.floor(J-A/2);for(let Q=0;Q<d;Q++){let ie=0;for(let re=0;re<E;re++){let ae=re+X;if(ae<0||ae>=h)continue;let oe=O+ae*l[1],he=ae*x,ce=Math.min(u-1,i?Math.round(he):Math.floor(he));if(V===ce)for(let ge=0;ge<A;ge++){let be=ge+te;if(be<0||be>=m)continue;let Ie=oe+be*l[2],Te=be*v,Ee=Math.min(p-1,i?Math.round(Te):Math.floor(Te));q===Ee&&(ie+=g[Ie+Q])}}f[K+Q]=ie}}}}return n.makeTensorInfo(r.shape,r.dtype,f)}var M5={kernelName:ch,backendName:"cpu",kernelFunc:D5};function R5(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a;ke(r,"reverse");let i=r.shape.length,o=k.parseAxisParam(s,r.shape);if(i===0)return sr({inputs:{x:r},backend:n});let l=new Bt(r.shape,r.dtype),c=n.bufferSync(r);for(let u=0;u<l.size;u++){let p=l.indexToLoc(u),d=p.slice();o.forEach(h=>d[h]=r.shape[h]-1-d[h]),l.set(c.get(...d),...p)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var P5={kernelName:hi,backendName:"cpu",kernelFunc:R5},O5={kernelName:zl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,{radians:r,fillValue:s,center:i}=t,o=n,l=k.getTypedArrayFromDType(a.dtype,k.sizeFromShape(a.shape)),[c,u,p,d]=a.shape,[h,m]=_.getImageCenter(i,u,p),f=255,g=Math.sin(r),y=Math.cos(r),b=o.data.get(a.dataId).values;for(let x=0;x<c;x++){let v=x*p*u*d;for(let N=0;N<u;N++){let T=N*(p*d);for(let E=0;E<p;E++){let A=E*d;for(let $=0;$<d;$++){let O=[c,N,E,$],V=O[2],W=O[1],H=(V-h)*y-(W-m)*g,X=(V-h)*g+(W-m)*y;H=Math.round(H+h),X=Math.round(X+m);let q=s;if(typeof s!="number"&&($===3?q=f:q=s[$]),H>=0&&H<p&&X>=0&&X<u){let J=X*(p*d),te=H*d,Q=v+J+te+$;q=b[Q]}let K=v+T+A+$;l[K]=q}}}}return{dataId:o.write(l,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},L5=it(mi,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),z5={kernelName:mi,backendName:"cpu",kernelFunc:L5};function ZT(e,t,n,a,r,s,i,o,l,c){let u=[a/r,r],p=e.values,d=t.values;if(a===0)return Le(n,t.dtype);let h=Le(u,t.dtype);h.values.fill(l);for(let m=0;m<s;m++){let f=[],g=0;for(let y=0;y<i;y++){let b=p[m*i+y];f.push(b),g+=b*o[y]}if(g<0||g>=a/r)throw new Error(`Invalid indices: ${f} does not index into ${n}`);for(let y=0;y<r;y++)c?h.values[g*r+y]+=d[m*r+y]:h.values[g*r+y]=t.rank===0?d[0]:d[m*r+y]}return h}function B5(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:o,numUpdates:l,sliceSize:c,strides:u,outputSize:p}=_.calculateShapes(s,r,i),d=!0,h=n.bufferSync(r),m=n.bufferSync(s),f=ZT(h,m,i,p,c,l,o,u,0,d);return n.makeTensorInfo(i,f.dtype,f.values)}var W5={kernelName:Tl,backendName:"cpu",kernelFunc:B5};function V5(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t;ke([a,r,s],"select");let i=a.shape.length,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,u=pa(r.dtype,s.dtype),p=k.makeZerosTypedArray(k.sizeFromShape(r.shape),u),d=0,h=i===0||i>1||r.shape.length===1?1:k.sizeFromShape(r.shape.slice(1));for(let m=0;m<o.length;m++)for(let f=0;f<h;f++)o[m]===1?p[d++]=l[m]:p[d++]=c[m];return n.makeTensorInfo(r.shape,u,p)}var U5={kernelName:Sl,backendName:"cpu",kernelFunc:V5},G5=_.SELU_SCALEALPHA,H5=_.SELU_SCALE,j5=it(Cl,e=>e>=0?H5*e:G5*(Math.exp(e)-1)),q5={kernelName:Cl,backendName:"cpu",kernelFunc:j5},K5=it(yi,e=>1/(1+Math.exp(-e))),X5={kernelName:yi,backendName:"cpu",kernelFunc:K5},Y5=it(Fl,e=>e<0?-1:e>0?1:0),J5={kernelName:Fl,backendName:"cpu",kernelFunc:Y5},Z5=it(gi,e=>Math.sin(e)),Q5={kernelName:gi,backendName:"cpu",kernelFunc:Z5},eq=it(_l,e=>Math.sinh(e)),tq={kernelName:_l,backendName:"cpu",kernelFunc:eq},nq=11920928955078125e-23,QT=Math.log(nq)+2,aq=it(Al,e=>{let t=e>-QT,n=e<QT,a=Math.exp(e),r;return n?r=a:t?r=e:r=Math.log(1+a),r}),rq={kernelName:Al,backendName:"cpu",kernelFunc:aq};function sq(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;ke([r],"spaceToBatchND");let o=k.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<r.shape.length;++g)l.push([0,0]);let c=JT.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),u=_.getReshaped(c.shape,s,o,!1),p=_.getPermuted(u.length,s.length,!1),d=_.getReshapedPermuted(c.shape,s,o,!1),h=It({inputs:{x:c},backend:n,attrs:{shape:u}}),m=ba({inputs:{x:h},backend:n,attrs:{perm:p}}),f=It({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),f}var iq={kernelName:Sc,backendName:"cpu",kernelFunc:sq};function oq(e){let{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:c,sliceSize:u,strides:p,outputSize:d}=_.calculateShapes(s,r,o),h=!1,m=n.bufferSync(r),f=n.bufferSync(s),g=n.data.get(i.dataId).values[0],y=ZT(m,f,o,d,u,c,l,p,g,h);return n.makeTensorInfo(o,y.dtype,y.values)}var lq={kernelName:dh,backendName:"cpu",kernelFunc:oq};function uq(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=k.parseAxisParam(i,r.shape)[0],l=_.prepareSplitSize(r,s,o),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(p=>{let d=[...u];d[o]=p;let h=Yi({inputs:{x:r},backend:n,attrs:{begin:c,size:d}});return c[o]+=p,h})}var cq={kernelName:$l,backendName:"cpu",kernelFunc:uq},pq=it(bi,e=>Math.sqrt(e)),dq={kernelName:bi,backendName:"cpu",kernelFunc:pq},hq={kernelName:Cc,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,a=t;ke(n,"square");let r=a.data.get(n.dataId).values,s=new Float32Array(r.length);for(let i=0;i<r.length;++i){let o=r[i];s[i]=o*o}return{dataId:a.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},mq=it(Ll,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),fq={kernelName:Ll,backendName:"cpu",kernelFunc:mq};function gq(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:p,shrinkAxisMask:d}=a;ke(r,"stridedSlice");let{nonStrided:h,$begin:m,$strides:f,size:g,newShape:y,outShape:b}=hn.sliceInfo(r.shape,s,i,o,l,c,u,p,d),x=It({inputs:{x:r},backend:n,attrs:{shape:y}}),v;if(h){let T=Yi({inputs:{x},backend:n,attrs:{begin:m,size:g}});v=It({inputs:{x:T},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(T)}else if(b.some(T=>T===0))v=n.makeTensorInfo(b,r.dtype,[]);else{let T=n.bufferSync(x),E=_T(b,T,f,m);v=n.makeTensorInfo(E.shape,E.dtype,E.values)}let N=It({inputs:{x:v},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),N}var yq={kernelName:Dl,backendName:"cpu",kernelFunc:gq},bq=it(Ml,e=>Math.tan(e)),xq={kernelName:Ml,backendName:"cpu",kernelFunc:bq},vq=it(Ii,e=>Math.tanh(e)),wq={kernelName:Ii,backendName:"cpu",kernelFunc:vq};function kq(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;ke(r,"tile");let i=AT(n.bufferSync(r),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}var Iq={kernelName:Xr,backendName:"cpu",kernelFunc:kq};function Nq(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a;ke(r,"topk");let o=n.data.get(r.dataId).values,[l,c]=$T(o,r.shape,r.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}var Tq={kernelName:Rl,backendName:"cpu",kernelFunc:Nq};function Sq(e){let{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;ke(s,"unique");let i=a.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:c}=DT(i,r,s.shape,s.dtype);return[a.makeTensorInfo(l,s.dtype,o),a.makeTensorInfo([c.length],"int32",c)]}var Cq={kernelName:hh,backendName:"cpu",kernelFunc:Sq};function Eq(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:s}=a;s<0&&(s+=r.shape.length);let i=r.shape.length,o=r.shape[s],l=new Array(i-1),c=0;for(let h=0;h<i;h++)h!==s&&(l[c++]=r.shape[h]);let u=new Array(i).fill(0),p=r.shape.slice();p[s]=1;let d=new Array(o);for(let h=0;h<d.length;h++){u[s]=h;let m=Yi({inputs:{x:r},backend:n,attrs:{begin:u,size:p}});d[h]=It({inputs:{x:m},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(m)}return d}var _q={kernelName:Pl,backendName:"cpu",kernelFunc:Eq};function Fq(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a;ke(r,"unsortedSegmentSum");let o=r.shape.length,l=s.shape.length,c=[],u=[],p=o-l,d=s;for(let m=0;m<p;++m){let f=Jm({inputs:{input:d},backend:n,attrs:{dim:m+1}});d=f,u.push(f)}for(let m=0;m<i;++m){let f=k.createScalarValue(m,"int32"),g=n.makeTensorInfo([],"int32",f),y=HT({inputs:{a:g,b:d},backend:n}),b=gs({inputs:{x:y},backend:n,attrs:{dtype:"float32"}}),x=$v({inputs:{a:b,b:r},backend:n}),v=Zm({inputs:{x},backend:n,attrs:{axis:0,keepDims:!1}});c.push(v),u.push(g),u.push(y),u.push(b),u.push(x),u.push(v)}let h=YT({inputs:c,backend:n,attrs:{axis:0}});return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),h}var Aq={kernelName:Ec,backendName:"cpu",kernelFunc:Fq},$q=[QG,aG,tH,aH,uG,sH,oH,uH,pH,hH,fH,yH,xH,kH,NH,CH,_H,AH,DH,JG,RH,OH,zH,oG,pG,WH,rG,UH,HH,KH,YH,jH,e6,n6,ZH,r6,i6,l6,c6,d6,m6,f6,y6,x6,w6,k6,N6,I6,Ov,GG,S6,E6,P6,dG,O6,mG,U6,H6,j6,gG,X6,J6,Q6,tj,aj,bG,ij,sG,lj,GH,cj,dj,mj,HG,vG,yj,xj,kG,wj,Nj,Sj,_j,Aj,Dj,NG,Pj,Lj,Bj,Vj,Gj,Mj,qj,Xj,SG,Jj,e5,r5,EG,FG,o5,c5,h5,$G,f5,y5,b5,JT,k5,qG,RG,N5,iG,S5,KG,XG,YG,E5,F5,$5,M5,P5,O5,z5,OG,W5,U5,q5,X5,J5,Q5,tq,LG,n5,rq,iq,lq,cq,dq,hq,BG,fq,yq,VG,Hj,xq,wq,Iq,Tq,DG,Cq,_q,Aq,g5];for(let e of $q)Fc(e);var Ji={},Bv={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Dq(e,t){Ji[e]=t}function ir(e){if(!(e in Ji)){let n=Mq(e);if(n!==null)Ji[e]=n;else return console.log("Could not get context for WebGL version",e),null}let t=Ji[e];return t.isContextLost()?(delete Ji[e],ir(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Ji[e])}function Rq(e){if(typeof OffscreenCanvas!="undefined"&&e===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function Mq(e){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=Rq(e);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete Ji[e]},!1),e===1?t.getContext("webgl",Bv)||t.getContext("experimental-webgl",Bv):t.getContext("webgl2",Bv)}var kp;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(kp||(kp={}));var ra;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(ra||(ra={}));var sn;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(sn||(sn={}));function Ip(e,t){return[t,e]}function Pq(e,t){return e*t}function Np(e){let t=k.sizeFromShape(e),n=Math.ceil(t/4);return k.sizeToSquarishShape(n)}function yu(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Oq(e,t){let[n,a]=yu(e,t);return n*a*4}function Wv(e,t){let n=e,a,r,s,i,o,l,c,u,p,d;return ee().getNumber("WEBGL_VERSION")===2?(a=n.R32F,r=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,c=4,u=1,p=n.HALF_FLOAT,d=n.FLOAT):(a=e.RGBA,r=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,c=4,u=4,p=t!=null?t.HALF_FLOAT_OES:null,d=e.FLOAT),l=e.RGBA,{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:p,textureTypeFloat:d}}function Se(e,t){let n=t();return ee().getBool("DEBUG")&&Lq(e),n}function Lq(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+zq(e,t))}var Bq=596e-10,Wq=65504;function Vq(e){return!!(ee().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||Bq<Math.abs(e)&&Math.abs(e)<Wq)}function zq(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function ef(e,t){return $r(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function Uq(e,t){let n=$r(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Se(e,()=>e.shaderSource(n,t)),Se(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function Hq(e,t){let n=$r(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Se(e,()=>e.shaderSource(n,t)),Se(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw Gq(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var jq=/ERROR: [0-9]+:([0-9]+):/g;function Gq(e,t){let n=jq.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let a=+n[1],r=e.split(`
`),s=r.length.toString().length+2,i=r.map((p,d)=>k.rightPad((d+1).toString(),s)+p),o=0;for(let p=0;p<i.length;p++)o=Math.max(i[p].length,o);let l=i.slice(0,a-1),c=i.slice(a-1,a),u=i.slice(a);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${k.rightPad(c[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function qq(e){return $r(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function Kq(e,t){if(Se(e,()=>e.linkProgram(t)),e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Vv(e,t){if(Se(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function Xq(e,t){let n=$r(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Se(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Se(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function Yq(e,t){let n=$r(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Se(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),Se(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function Jq(e){return $r(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function Zq(e,t){let n=ee().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let a=`[${e}x${t}]`;throw new Error("Requested texture size "+a+" is invalid.")}if(e>n||t>n){let a=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+r+".")}}function Qq(e){return $r(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function eS(e,t,n,a,r,s,i){let o=e.getAttribLocation(t,n);return o===-1?!1:(Se(e,()=>e.bindBuffer(e.ARRAY_BUFFER,a)),Se(e,()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,s,i)),Se(e,()=>e.enableVertexAttribArray(o)),!0)}function t8(e,t,n){e8(e,n),Se(e,()=>e.activeTexture(e.TEXTURE0+n)),Se(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function n8(e,t,n){return $r(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function a8(e,t,n){return e.getUniformLocation(t,n)}function r8(e,t,n,a){Se(e,()=>t8(e,t,a)),Se(e,()=>e.uniform1i(n,a))}function Uv(e,t,n){Se(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),Se(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function tS(e,t){Se(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),Se(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function tf(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+s8(e,t))}function s8(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function $r(e,t,n){let a=Se(e,()=>t());if(a==null)throw new Error(n);return a}function e8(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n){let r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function bu(e,t=2){return k.sizeFromShape(e.slice(0,e.length-t))}function xu(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Gv(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[bu(e),...xu(e)]),t}function i8(e,t=!1){let n=ee().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,e=e.map((r,s)=>s>=e.length-2?k.nearestLargerEven(e[s]):e[s]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=k.squeezeShape(e).newShape);let a=k.sizeFromShape(e);if(e.length<=1&&a<=n)return[1,a];if(e.length===2&&e[0]<=n&&e[1]<=n)return e;if(e.length===3&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let r=bu(e),s=2,i=2;return e.length&&([s,i]=xu(e)),a=r*(s/2)*(i/2),k.sizeToSquarishShape(a).map(o=>o*2)}return k.sizeToSquarishShape(a)}function nf(e){return e%2==0}function af(e,t){if(e=e.slice(-2),t=t.slice(-2),k.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],a=t.slice(-1)[0];if(n===a||nf(n)&&nf(a)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&nf(e[0])&&nf(t[0])}var Hv,jv;function o8(e){if(Hv==null){let t=ir(e);Hv=t.getParameter(t.MAX_TEXTURE_SIZE)}return Hv}function l8(e){if(jv==null){let t=ir(e);jv=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,jv)}function u8(e){if(e===0)return 0;let t,n=ir(e);return xa(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:xa(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function xa(e,t){return e.getExtension(t)!=null}function nS(e){try{if(ir(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function c8(e){if(e===0)return!1;let t=ir(e);if(e===1){if(!xa(t,"OES_texture_float"))return!1}else if(!xa(t,"EXT_color_buffer_float"))return!1;return qv(t)}function d8(e){if(e===0)return!1;let t=ir(e);if(e===1){if(!xa(t,"OES_texture_float")||!xa(t,"WEBGL_color_buffer_float"))return!1}else{if(xa(t,"EXT_color_buffer_float"))return qv(t);let n="EXT_color_buffer_half_float";if(xa(t,n)){let a=t.getExtension(n);return p8(t,a)}return!1}return qv(t)}function qv(e){let t=Wv(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let a=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,a,r,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),i}function p8(e,t){let n=Wv(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);let r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(i),o}function h8(e){return e!==2?!1:ir(e).fenceSync!=null}function Tp(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&k.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Fe=ee();Fe.registerFlag("HAS_WEBGL",()=>Fe.getNumber("WEBGL_VERSION")>0);Fe.registerFlag("WEBGL_VERSION",()=>nS(2)?2:nS(1)?1:0);Fe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Fe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Fe.get("WEBGL_VERSION")===2);Fe.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Fe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Fe.registerFlag("WEBGL_PACK",()=>Fe.getBool("HAS_WEBGL"));Fe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_CLIP",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1);Fe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_REDUCE",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_LAZILY_UNPACK",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_CONV_IM2COL",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>o8(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>l8(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=Fe.getNumber("WEBGL_VERSION");return e===0?0:u8(e)});Fe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Fe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!vh.isMobile());Fe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>c8(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Fe.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Fe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Fe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>d8(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>h8(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Fe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Fe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});function gn(){let e,t,n,a,r,s,i,o,l,c;return ee().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",a="in",r="texture",s="outputColor",i="out vec4 outputColor;",o=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",a="varying",r="texture2D",s="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:c}}function Zi(e,t,n="index"){let a=k.computeStrides(t);return a.map((r,s)=>{let i=`int ${e[s]} = ${n} / ${r}`,o=s===a.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r}`:`index -= ${e[s]} * ${r}`;return`${i}; ${o};`}).join("")}function Kv(e){let t=k.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}var aS=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,m8=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=kp.DENSE;let t=Np(e),n=gn();this.outputShape=e,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${Zi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${t[0]}, ${t[1]}));
        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${n.output} = result;
      }
    `}},f8=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=kp.DENSE;let t=Np(e),n=gn();this.outputShape=e,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${Zi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${t[0]}, ${t[1]}));
        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${n.output} = result;
      }
    `}},g8=class{constructor(e){this.variableNames=["A"],this.outTexUsage=ra.DOWNLOAD;let t=gn();this.outputShape=e,this.userCode=`
      ${aS}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},y8=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=ra.DOWNLOAD;let t=gn();this.outputShape=e,this.userCode=`
      ${aS}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},b8=class{constructor(e,t,n=!1){this.variableNames=["A"];let a=gn(),[r,s]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`
      ${Kv(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / ${s};
        int c = imod(flatIndex, ${s});
        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${r}.0);
        vec4 values = ${a.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${a.output} = vec4(${i}, 0., 0., 0.);
      }
    `}},x8=class{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let a=gn(),[r,s]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let l=0;l<=1;l++)for(let c=0;c<=1;c++){let u=l*2+c;i+=`
          localCoords = coords;
          if(localCoords[2] + ${c} < ${e[2]}) {
            localCoords[2] += ${c};
            if(localCoords[1] + ${l} < ${e[1]}) {
              localCoords[1] += ${l};

              flatIndex = getFlatIndex(localCoords);
              offset = imod(flatIndex, 4);

              flatIndex = idiv(flatIndex, 4, 1.);

              r = flatIndex / ${s};
              c = imod(flatIndex, ${s});
              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${r}.0);
              values = ${a.texture2D}(A, uv);

              if(offset == 0) {
                result[${u}] = values[0];
              } else if(offset == 1) {
                result[${u}] = values[1];
              } else if(offset == 2) {
                result[${u}] = values[2];
              } else {
                result[${u}] = values[3];
              }
            }
          }
        `}this.userCode=`
      ${Kv(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        vec4 result = vec4(0.);
        int flatIndex, r, c, offset;
        ivec3 localCoords;
        vec2 uv;
        vec4 values;

        ${i}

        ${a.output} = ${o};
      }
    `}};function v8(e){let t=gn(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return Uq(e,n)}function w8(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return Xq(e,t)}function k8(e){let t=new Uint16Array([0,1,2,2,1,3]);return Yq(e,t)}function Sp(e,t,n,a,r,s){Zq(t,n);let i=Jq(e),o=e.TEXTURE_2D;return Se(e,()=>e.bindTexture(o,i)),Se(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),Se(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),Se(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),Se(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),Se(e,()=>e.texImage2D(o,0,a,t,n,0,r,s,null)),Se(e,()=>e.bindTexture(e.TEXTURE_2D,null)),i}function rS(e){return e.internalFormatFloat}function I8(e,t,n,a){let[r,s]=Ip(t,n);return Sp(e,r,s,rS(a),a.textureFormatFloat,e.FLOAT)}function sS(e){return e.internalFormatHalfFloat}function N8(e,t,n,a){let[r,s]=Ip(t,n);return Sp(e,r,s,sS(a),a.textureFormatFloat,a.textureTypeHalfFloat)}function iS(e){return e.downloadTextureFormat}function T8(e,t,n,a){let[r,s]=Ip(t,n);return Sp(e,r,s,iS(a),e.RGBA,e.UNSIGNED_BYTE)}function oS(e){return e.internalFormatPackedFloat}function S8(e,t,n,a){let[r,s]=yu(t,n);return Sp(e,r,s,oS(a),e.RGBA,e.FLOAT)}function lS(e){return e.internalFormatPackedHalfFloat}function C8(e,t,n,a){let[r,s]=yu(t,n);return Sp(e,r,s,lS(a),e.RGBA,a.textureTypeHalfFloat)}function E8(e,t,n){let a=0,r=3*4,s=3*4+2*4;return Se(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),eS(e,t,"clipSpacePos",n,3,s,a)&&eS(e,t,"uv",n,2,s,r)}function _8(e,t,n,a,r,s){Se(e,()=>e.bindTexture(e.TEXTURE_2D,t));let i,o,l;r instanceof Uint8Array?(i=new Uint8Array(n*a*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*a*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(r),Se(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,a,0,e.RGBA,o,i)),Se(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function F8(e,t,n){Se(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?Se(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):Se(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),Se(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function A8(e,t,n,a){let r=e.createBuffer();Se(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let s=4*4*t*n;return Se(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),Se(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),Se(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function $8(e,t,n){let a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}function D8(e,t,n,a){let[r,s]=Ip(t,n),i=4,o=new Uint8Array(Pq(t*n,i));return Se(e,()=>e.readPixels(0,0,r,s,a.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function M8(e,t,n,a,r,s,i,o){let l=e,c=new Float32Array(Oq(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function R8(e,t,n){let a=new Float32Array(t*n*4);return Se(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a)),a}var O8=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=ee().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,Dq(t,e)):this.gl=ir(t);let n="WEBGL_color_buffer_float",a="EXT_color_buffer_half_float";if(ee().getNumber("WEBGL_VERSION")===1){let r="OES_texture_float",s="OES_texture_half_float";if(this.textureFloatExtension=ef(this.gl,r),xa(this.gl,s))this.textureHalfFloatExtension=ef(this.gl,s);else if(ee().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),xa(this.gl,a))this.colorBufferHalfFloatExtension=ef(this.gl,a);else if(ee().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",xa(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(xa(this.gl,a))this.colorBufferHalfFloatExtension=this.gl.getExtension(a);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=w8(this.gl),this.indexBuffer=k8(this.gl),this.framebuffer=Qq(this.gl),this.textureConfig=Wv(this.gl,this.textureHalfFloatExtension)}get debug(){return ee().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;Se(e,()=>e.finish()),Se(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Se(e,()=>e.deleteFramebuffer(this.framebuffer)),Se(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Se(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Se(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),I8(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),N8(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),T8(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),F8(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),_8(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),C8(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),S8(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(tS(this.gl,this.framebuffer),this.outputTexture=null),Se(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>D8(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,a,r,s){return M8(this.gl,e,t,n,a,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return $8(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let a=A8(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(ee().getBool("WEBGL_FENCE_API_ENABLED")){let a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let s=a.clientWaitSync(r,0,0);return s===a.ALREADY_SIGNALED||s===a.CONDITION_SATISFIED},t=r}else ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>R8(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl,n=Hq(t,e),a=v8(t),r=qq(t);return Se(t,()=>t.attachShader(r,a)),Se(t,()=>t.attachShader(r,n)),Kq(t,r),this.debug&&Vv(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=E8(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&Se(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Vv(this.gl,this.program),Se(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?n8(this.gl,e,t):a8(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Se(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),r8(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[a,r]=yu(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Vv(this.gl,this.program),tf(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),Se(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Se(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=ef(this.gl,ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,a=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(a.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await k.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,a=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),a=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=P8(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&k.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Uv(this.gl,e,this.framebuffer),this.debug&&tf(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Uv(this.gl,this.outputTexture,this.framebuffer),this.debug&&tf(this.gl)):tS(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let a=this.gl;Uv(a,e,this.framebuffer),this.debug&&tf(a),this.outputTexture=e,Se(a,()=>a.viewport(0,0,t,n)),Se(a,()=>a.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),Se(this.gl,()=>this.gl.scissor(e,t,n,a))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function P8(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{getBroadcastDims:uS}=_;function j8(e,t,n,a){let r=[];e.forEach(h=>{let m=k.sizeFromShape(h.shapeInfo.logicalShape);h.shapeInfo.isUniform?r.push(`uniform float ${h.name}${m>1?`[${m}]`:""};`):(r.push(`uniform sampler2D ${h.name};`),r.push(`uniform int offset${h.name};`))});let s=r.join(`
`),i=e.map(h=>L8(h,t,a)).join(`
`),o=t.texShape,l=gn(),c=W8(l),u,p,d=G8(l);return t.isPacked?(u=z8(t.logicalShape,o),p=U8(l)):(u=B8(t.logicalShape,o),p=V8(l)),a&&(d+=H8),[d,c,p,s,u,i,n].join(`
`)}function vu(e){let t=e.shapeInfo.logicalShape;switch(t.length){case 0:return q8(e);case 1:return K8(e);case 2:return X8(e);case 3:return Y8(e);case 4:return J8(e);case 5:return Z8(e);case 6:return Q8(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function cS(e){switch(e.shapeInfo.logicalShape.length){case 0:return eK(e);case 1:return tK(e);case 2:return nK(e);case 3:return aK(e);default:return rK(e)}}function L8(e,t,n=!1){let a="";n?a+=cS(e):a+=vu(e);let r=e.shapeInfo.logicalShape,s=t.logicalShape;return r.length<=s.length&&(n?a+=sK(e,t):a+=iK(e,t)),a}function z8(e,t){switch(e.length){case 0:return pS();case 1:return oK(e,t);case 2:return cK(e,t);case 3:return lK(e,t);default:return uK(e,t)}}function B8(e,t){switch(e.length){case 0:return pS();case 1:return pK(e,t);case 2:return gK(e,t);case 3:return dK(e,t);case 4:return hK(e,t);case 5:return mK(e,t);case 6:return fK(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function W8(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function V8(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function U8(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function G8(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${yK}
    ${bK}
    ${xK}
  `}var yK=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,bK=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,xK=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,H8=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function pS(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function oK(e,t){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return n[0]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function pK(e,t){return t[0]===1?`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function lK(e,t){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),r=a*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}function dK(e,t){let n=Zi(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function uK(e,t){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),r=a*Math.ceil(e[e.length-2]/2),s=r,i="",o="b, r, c";for(let l=2;l<e.length-1;l++)s*=e[e.length-l-1],i=`
      int b${l} = index / ${s};
      index -= b${l} * ${s};
    `+i,o=`b${l}, `+o;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${i}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${e.length}(${o});
    }
  `}function hK(e,t){let n=Zi(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function mK(e,t){let n=Zi(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function fK(e,t){let n=Zi(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function cK(e,t){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(k.arraysEqual(e,t))return`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let a=Math.ceil(e[1]/2);return`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}function gK(e,t){return k.arraysEqual(e,t)?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function Qi(e){return`offset${e}`}function eK(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=gn();return`
    vec4 ${n}() {
      return ${a.texture2D}(${t}, halfCR);
    }
  `}function q8(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;let[a,r]=e.shapeInfo.texShape;if(a===1&&r===1)return`
      float ${n}() {
        return sampleTexture(${t}, halfCR);
      }
    `;let[s,i]=e.shapeInfo.texShape,o=Qi(t);return`
    float ${n}() {
      vec2 uv = uvFromFlat(${s}, ${i}, ${o});
      return sampleTexture(${t}, uv);
    }
  `}function tK(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=e.shapeInfo.texShape,r=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],s=gn();return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${r[0]}, ${r[1]}, index);
      return ${s.texture2D}(${t}, uv);
    }
  `}function K8(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${wu(e)}
      }
    `;let a=e.shapeInfo.texShape,r=a[0],s=a[1];if(s===1&&r===1)return`
      float ${n}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;let i=Qi(t);return s===1?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${r}.0);
        return sampleTexture(${t}, uv);
      }
    `:r===1?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${s}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${r}, ${s}, index + ${i});
      return sampleTexture(${t}, uv);
    }
  `}function nK(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=r[0],i=r[1],o=gn();if(r!=null&&k.arraysEqual(t,r))return`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${s}.0);

        return ${o.texture2D}(${n}, uv);
      }
    `;let l=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],c=Math.ceil(t[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);
      return ${o.texture2D}(${n}, uv);
    }
  `}function X8(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape;if(r!=null&&k.arraysEqual(t,r)){let p=r[0],d=r[1];return`
    float ${a}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${d}.0, ${p}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:s,keptDims:i}=k.squeezeShape(t),o=s;if(o.length<t.length){let p=ku(e,o),d=["row","col"];return`
      ${vu(p)}
      float ${a}(int row, int col) {
        return ${a}(${Iu(d,i)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${wu(e)}
      }
    `;let l=r[0],c=r[1],u=Qi(n);return c===1?`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${u}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${n}, uv);
    }
  `:l===1?`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${u}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:`
  float ${a}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${u};
    vec2 uv = uvFromFlat(${l}, ${c}, index);
    return sampleTexture(${n}, uv);
  }
`}function aK(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(t[0]===1){let p=t.slice(1),d=[1,2],h=ku(e,p),m=["b","row","col"];return`
        ${cS(h)}
        vec4 ${a}(int b, int row, int col) {
          return ${a}(${Iu(m,d)});
        }
      `}let i=s[0],o=s[1],l=Math.ceil(t[2]/2),c=l*Math.ceil(t[1]/2),u=gn();return`
    vec4 ${a}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${i}, ${o}, ${c}, ${l}, b, row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `}function Y8(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[1]*t[2],s=t[2],{newShape:i,keptDims:o}=k.squeezeShape(t),l=i;if(l.length<t.length){let m=ku(e,l),f=["row","col","depth"];return`
        ${vu(m)}
        float ${a}(int row, int col, int depth) {
          return ${a}(${Iu(f,o)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${s}, 1)));
        ${wu(e)}
      }
    `;let c=e.shapeInfo.texShape,u=c[0],p=c[1],d=e.shapeInfo.flatOffset;if(p===r&&d==null)return`
        float ${a}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${s}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${u}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(p===s&&d==null)return`
    float ${a}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${u}.0);
      return sampleTexture(${n}, uv);
    }
  `;let h=Qi(n);return`
      float ${a}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${s} + depth + ${h};
        vec2 uv = uvFromFlat(${u}, ${p}, index);
        return sampleTexture(${n}, uv);
      }
  `}function rK(e){let t=e.shapeInfo.logicalShape,n=t.length,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=i[0],l=i[1],c=Math.ceil(t[n-1]/2),u=c*Math.ceil(t[n-2]/2),p="int b, int row, int col",d=`b * ${u} + (row / 2) * ${c} + (col / 2)`;for(let m=2;m<n-1;m++)p=`int b${m}, `+p,u*=t[n-m-1],d=`b${m} * ${u} + `+d;let h=gn();return`
    vec4 ${r}(${p}) {
      int index = ${d};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});
      return ${h.texture2D}(${a}, uv);
    }
  `}function J8(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[3],s=t[2]*r,i=t[1]*s,{newShape:o,keptDims:l}=k.squeezeShape(t);if(o.length<t.length){let m=ku(e,o),f=["row","col","depth","depth2"];return`
      ${vu(m)}
      float ${a}(int row, int col, int depth, int depth2) {
        return ${a}(${Iu(f,l)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${s}, ${r}, 1)));
        ${wu(e)}
      }
    `;let c=e.shapeInfo.flatOffset,u=e.shapeInfo.texShape,p=u[0],d=u[1];if(d===i&&c==null)return`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${s}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(d===r&&c==null)return`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;let h=Qi(n);return`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${s} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${p}, ${d}, index + ${h});
      return sampleTexture(${n}, uv);
    }
  `}function Z8(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],s=t[3]*r,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:c}=k.squeezeShape(t);if(l.length<t.length){let f=ku(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${vu(f)}
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        return ${a}(${Iu(g,c)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${s}, ${r})) +
          depth3;
        ${wu(e)}
      }
    `;let u=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1];if(h===o&&u==null)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(h===r&&u==null)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=Qi(n);return`
    float ${a}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${s} +
          depth2 * ${r} + depth3 + ${m};
      vec2 uv = uvFromFlat(${d}, ${h}, index);
      return sampleTexture(${n}, uv);
    }
  `}function Q8(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:s}=k.squeezeShape(t);if(r.length<t.length){let g=ku(e,r),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${vu(g)}
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${a}(${Iu(y,s)});
      }
    `}let i=t[5],o=t[4]*i,l=t[3]*o,c=t[2]*l,u=t[1]*c;if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${wu(e)}
      }
    `;let p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],m=d[1];if(m===u&&p==null)return`
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(m===i&&p==null)return`
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=Qi(n);return`
    float ${a}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${f};
      vec2 uv = uvFromFlat(${h}, ${m}, index);
      return sampleTexture(${n}, uv);
    }
  `}function wu(e){let t=e.name,n=k.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function sK(e,t){let n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=uS(e.shapeInfo.logicalShape,t.logicalShape),l=mt(i),c=i-s,u,p=["x","y","z","w","u","v"];s===0?u="":i<2&&o.length>=1?u="coords = 0;":u=o.map(g=>`coords.${p[g+c]} = 0;`).join(`
`);let d="";i<2&&s>0?d="coords":d=e.shapeInfo.logicalShape.map((g,y)=>`coords.${p[y+c]}`).join(", ");let h="return outputValue;",m=k.sizeFromShape(e.shapeInfo.logicalShape)===1,f=k.sizeFromShape(t.logicalShape)===1;if(s===1&&!m&&!f)h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!f)i===1?h=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:h=`
        return vec4(outputValue.x);
      `;else if(o.length){let g=s-2,y=s-1;o.indexOf(g)>-1&&o.indexOf(y)>-1?h="return vec4(outputValue.x);":o.indexOf(g)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(y)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${a}(${d});
      ${h}
    }
  `}function iK(e,t){let n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&e.shapeInfo.flatOffset==null&&k.arraysEqual(i,s))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let c=mt(l),u=uS(e.shapeInfo.logicalShape,t.logicalShape),p=l-o,d,h=["x","y","z","w","u","v"];o===0?d="":l<2&&u.length>=1?d="coords = 0;":d=u.map(f=>`coords.${h[f+p]} = 0;`).join(`
`);let m="";return l<2&&o>0?m="coords":m=e.shapeInfo.logicalShape.map((f,g)=>`coords.${h[g+p]}`).join(", "),`
    float ${r}() {
      ${c} coords = getOutputCoords();
      ${d}
      return get${a}(${m});
    }
  `}function mt(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function ku(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Iu(e,t){return t.map(n=>e[n]).join(", ")}function vK(e,t,n,a){let r=t.userCode,s=n.map((h,m)=>{let f={logicalShape:h.shape,texShape:h.isUniform?null:h.texData.texShape,isUniform:h.isUniform,isPacked:h.isUniform?!1:h.texData.isPacked,flatOffset:null};return h.texData!=null&&h.texData.slice!=null&&h.texData.slice.flatOffset>0&&(f.flatOffset=h.texData.slice.flatOffset),{name:t.variableNames[m],shapeInfo:f}}),i=s.map(h=>h.shapeInfo),o={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},l=j8(s,o,r,t.packedInputs),c=e.createProgram(l),u=null,p=e.getUniformLocation(c,"NAN",!1);ee().getNumber("WEBGL_VERSION")===1&&(u=e.getUniformLocation(c,"INFINITY",!1));let d={};for(let h=0;h<t.variableNames.length;h++){let m=t.variableNames[h],f=!1;d[m]=e.getUniformLocation(c,m,f),d[`offset${m}`]=e.getUniformLocation(c,`offset${m}`,f)}return{program:t,source:l,webGLProgram:c,uniformLocations:d,inShapeInfos:i,outShapeInfo:o,infLoc:u,nanLoc:p}}function dS(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,a)=>{let r=n.logicalShape,s=t[a],i=s.shape;if(!k.arraysEqual(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(n.isUniform&&s.isUniform)return;let o=n.texShape,l=s.isUniform?null:s.texData.texShape;if(!k.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function wK(e,t,n,a,r){dS(t.inShapeInfos,n),dS([t.outShapeInfo],[a]);let s=a.texData.texture,i=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(s,i[0],i[1]):e.setOutputMatrixTexture(s,i[0],i[1]),e.setProgram(t.webGLProgram),ee().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,Infinity),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((o,l)=>{let c=t.program.variableNames[l],u=t.uniformLocations[c],p=t.uniformLocations[`offset${c}`];if(u!=null){if(o.isUniform){if(k.sizeFromShape(o.shape)<2)e.gl.uniform1f(u,o.uniformValues[0]);else{let d=o.uniformValues;d instanceof Float32Array||(d=new Float32Array(d)),e.gl.uniform1fv(u,d)}return}o.texData.slice!=null&&p!=null&&e.gl.uniform1i(p,o.texData.slice.flatOffset),e.setInputMatrixTexture(o.texData.texture,u,l)}}),r!=null&&r(e,t.webGLProgram),e.executeProgram()}function kK(e,t,n){let a="";t.concat(n).forEach(i=>{let o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0,l=i.isUniform?"uniform":i.texData.texShape;a+=`${i.shape}_${l}_${o}`});let r=e.userCode,s=e.constructor.name;return s+="_"+a+"_"+r,s}var{addImpl:IK,bincountImpl:hS,bincountReduceImpl:NK,ceilImpl:TK,concatImpl:SK,expImpl:CK,expm1Impl:EK,floorImpl:_K,gatherV2Impl:FK,greaterImpl:AK,lessImpl:$K,linSpaceImpl:DK,logImpl:MK,maxImpl:RK,maximumImpl:PK,minimumImpl:OK,multiplyImpl:LK,negImpl:zK,prodImpl:BK,rangeImpl:WK,rsqrtImpl:VK,simpleAbsImpl:mS,sliceImpl:UK,stridedSliceImpl:GK,subImpl:HK,tileImpl:jK,topKImpl:qK,transposeImpl:Xv,uniqueImpl:KK}=lT;function fS(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function yn(e,t){return t===1?[e]:fS(e,t)}function XK(e,t){if(e===1)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}var QK=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;let t=e.length;if(t===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let n=yn("rc",t),a=mt(t),r=YK(t,e,n),s=JK(t,e[e.length-1],e[e.length-2],n),i=ZK(e,n);this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${i}));
          }
        }
      `}}};function eX(e,t){let n=[];for(let a=0;a<=1;a++)for(let r=0;r<=1;r++){let s=`${a===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let i=2;i<e;i++)s=`${t[t.length-1-i]},`+s;n.push(s)}return n}function YK(e,t,n){if(e===1)return`rc > ${t[0]}`;let a="";for(let r=e-2;r<e;r++)a+=`${n[r]} >= ${t[r]}`,r<e-1&&(a+="||");return a}function JK(e,t,n,a){if(e===1)return"";let r=a.slice(-2);return`
    int r = ${r[0]};
    int c = ${r[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${t};
    bool rEdge = rp1 >= ${n};
  `}function ZK(e,t){let n=e.length,a=eX(n,t);return n===1?`getA(rc),
            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${a[0]}),
          cEdge ? 0. : getA(${a[1]}),
          rEdge ? 0. : getA(${a[2]}),
          rEdge || cEdge ? 0. : getA(${a[3]})`}var gS=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let a=0;a<4;a++){let r="thisRC = rc;";a%2==1&&(r+="thisRC.z += 1;"),a>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${a}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${a>0?"}":""}
      `}this.userCode=`
      ${tX(t)}
      ${Kv(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${e[1]};
        int cols = ${e[2]};

        ${n}

        setOutput(result);
      }
    `}};function tX(e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${Zi(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var nX=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let a=bS(t,n),r=xS(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let s=yS(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let o=this.freeTextures[r].shift();return this.usedTextures[r].push(o),o}let i;return a===sn.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===sn.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===sn.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===sn.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===sn.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,a){if(this.freeTextures==null)return;let r=bS(n,a),s=xS(t,r,a);s in this.freeTextures||(this.freeTextures[s]=[]);let i=yS(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),o=ee().get("WEBGL_DELETE_TEXTURE_THRESHOLD");o!==-1&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],c=l.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function aX(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F||t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}function yS(e,t,n,a,r){let s=rX(t,a),i;if(r){let[l,c]=yu(e[0],e[1]);i=l*c}else{let[l,c]=Ip(e[0],e[1]);i=l*c}let o=aX(n,s);return i*o}function rX(e,t){switch(e){case sn.PACKED_2X2_FLOAT32:return oS(t);case sn.PACKED_2X2_FLOAT16:return lS(t);case sn.UNPACKED_FLOAT32:return rS(t);case sn.UNPACKED_FLOAT16:return sS(t);case sn.PACKED_4X1_UNSIGNED_BYTE:return iS(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function sX(e){return ee().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?sn.PACKED_2X2_FLOAT32:sn.UNPACKED_FLOAT32:e?sn.PACKED_2X2_FLOAT16:sn.UNPACKED_FLOAT16}function bS(e,t){if(e===ra.UPLOAD)return sn.PACKED_2X2_FLOAT32;if(e===ra.RENDER||e==null)return sX(t);if(e===ra.DOWNLOAD||e===ra.PIXELS)return sn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function xS(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var ys=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Oa="if (isnan(x)) return x;",iX="return x;",vS="return abs(x);",oX="return (x >= 0.0) ? x : (exp(x) - 1.0);",lX=Oa+`
  return (x < 0.0) ? 0.0 : x;
`,uX=Oa+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,rf="return x;",cX="return x;",pX=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,dX=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,hX=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Nu=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},mX=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;let t=e.length,n=yn("rc",t),a=mt(t),r=XK(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${a} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}},fX=Qa.whereImpl,gX=1e-7,yX=1e-4,Yv={};function bX(e){return e in Yv||(Yv[e]={}),Yv[e]}var xX=128,vX=600;function wX(){return ee().global.screen==null?1024:ee().global.screen.height*ee().global.screen.width*window.devicePixelRatio*vX/1024/1024}var IX=class extends uc{constructor(e){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!ee().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(e==null){let t=ir(ee().getNumber("WEBGL_VERSION"));this.binaryCache=bX(ee().getNumber("WEBGL_VERSION")),this.gpgpu=new O8(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new nX(this.gpgpu),this.numMBBeforeWarning=wX(),this.texData=new Md(this,ns())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((ee().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ee().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a={};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:ra.UPLOAD,refCount:1,complexParentRefCount:0}),a}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,a){if(ee().getBool("DEBUG")&&this.checkNumericalProblems(t),a==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:ra.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(e){let t=e.dataId;if(this.texData.has(t)){let n=this.texData.get(t);n.refCount--,n.refCount<1&&this.disposeData(t)}}readSync(e){let t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:s,shape:i,isPacked:o}=t;if(s!=null){let p;o?p=new Nu(i,rf):p=new ys(i,rf);let d=this.runWebGLProgram(p,[{dataId:e,shape:i,dtype:a}],a),h=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),h}if(n!=null)return this.convertAndCacheOnCPU(e);if(a==="string")return n;let l=this.activeTimers!=null,c;l&&(c=k.now());let u;if(a==="complex64"){let p=this.readSync(r.real.dataId),d=this.readSync(r.imag.dataId);u=_.mergeRealAndImagArrays(p,d)}else u=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=k.now()-c),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(m=>h.push(m))}let t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(r!=null){let h;o?h=new Nu(a,rf):h=new ys(a,rf);let m=this.runWebGLProgram(h,[{dataId:e,shape:a,dtype:s}],s),f=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),f}if(n!=null)return this.convertAndCacheOnCPU(e);if(!ee().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&ee().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,c;if(s!=="complex64"&&ee().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);let h=this.texData.get(c.dataId);l=this.gpgpu.createBufferFromTexture(h.texture,...Np(a))}this.pendingRead.set(e,[]),s!=="complex64"&&await this.gpgpu.createAndWaitForFence();let u;if(s==="complex64"){let h=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),m=h[0],f=h[1];u=_.mergeRealAndImagArrays(m,f)}else if(l==null)u=this.getValuesFromTexture(e);else{let h=k.sizeFromShape(a);u=this.gpgpu.downloadFloat32MatrixFromBuffer(l,h)}c!=null&&this.disposeIntermediateTensorInfo(c);let p=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(h=>h(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),p}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(a=>k.decodeString(a))}catch(a){throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!Vq(n))throw ee().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=k.sizeFromShape(t);if(ee().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let p=this.decode(e),d=this.texData.get(p.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(d.texture,...Np(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(p),h}let s=ee().getBool("WEBGL_PACK")&&a===!0,i=s?Gv(t):t,o=s?new y8(i):new g8(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),u}async time(e){let t=this.activeTimers,n=[],a=!1;this.programTimersStack==null?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=k.flatten(this.activeTimers.map(o=>o.query)).filter(o=>o!=null),s=k.flatten(this.activeTimers.map(o=>o.name)).filter(o=>o!=null);this.activeTimers=t,a&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let o=await Promise.all(r);i.kernelMs=k.sum(o),i.getExtraProfileInfo=()=>o.map((l,c)=>({name:s[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:k.now(),endMs:null}}endTimer(e){return ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=k.now(),e)}async getQueryTime(e){if(ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e){if(this.pendingDisposal.has(e))return;if(this.pendingRead.has(e)){this.pendingDisposal.add(e),this.pendingDeletes++;return}if(!this.texData.has(e))return;if(this.texData.get(e).complexParentRefCount>0){this.texData.get(e).refCount--;return}this.releaseGPUData(e);let{complexTensorInfos:t}=this.texData.get(e);t!=null&&(this.texData.get(t.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.real),this.texData.get(t.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.imag)),this.texData.delete(e)}releaseGPUData(e){let{texture:t,dtype:n,texShape:a,usage:r,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),t!=null&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,s)));let c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return ee().getBool("WEBGL_CPU_FORWARD")?(this.cpuBackend==null&&(this.cpuBackend=ns().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=xX){let n=this.getCPUBackend();return!ee().getBool("IS_TEST")&&!this.warnedAboutCPUBackend&&n==null&&(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),n!=null&&e.every(a=>this.texData.get(a.dataId).texture==null&&k.sizeFromShape(a.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){_.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return fX(e.shape,t)}packedUnaryOp(e,t,n){let a=new Nu(e.shape,t);return this.compileAndRun(a,[e],n)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let n=mS(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,n)}if(ee().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,vS,e.dtype);let t=new ys(e.shape,vS);return this.compileAndRun(t,[e])}makeTensorInfo(e,t,n){let a;if(t==="string"&&n!=null&&n.length>0&&k.isString(n[0])){let r=n.map(s=>k.encodeString(s));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:a}=this.makeTensorInfo(e,t,n);return ns().makeTensorFromDataId(a,e,t,this)}unpackTensor(e){let t=new mX(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new QK(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[bu(e.shape),...xu(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[bu(t),...xu(t)],s=new gS(r,n),i=!0,o=this.runWebGLProgram(s,[a],e.dtype,null,i);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e){let t=this.texData.get(e),{isPacked:n,shape:a,dtype:r}=t,s=Gv(a),i;n?i=new f8(s):i=new m8(s);let o=!0,l=this.runWebGLProgram(i,[{shape:s,dtype:r,dataId:e}],r,null,o);return{dtype:r,shape:a,dataId:l.dataId}}runWebGLProgram(e,t,n,a,r=!1){let s=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(s.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===kp.DENSE){let m=Np(e.outputShape);i.texShape=m.map(f=>f*2)}if(e.outTexUsage!=null&&(i.usage=e.outTexUsage),k.sizeFromShape(s.shape)===0)return i.values=k.getTypedArrayFromDType(s.dtype,0),s;let o=[],l=t.map(m=>{if(m.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let f=this.texData.get(m.dataId);if(f.texture==null){if(!e.packedInputs&&k.sizeFromShape(m.shape)<=ee().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:m.shape,texData:null,isUniform:!0,uniformValues:f.values};e.packedInputs&&(f.isPacked=!0,f.shape=m.shape)}else if(!!f.isPacked!=!!e.packedInputs)m=f.isPacked?this.unpackTensor(m):this.packTensor(m),o.push(m),f=this.texData.get(m.dataId);else if(f.isPacked&&!af(f.shape,m.shape)){let g=m,y=m.shape;m.shape=f.shape,m=this.packedReshape(m,y),o.push(m),f=this.texData.get(m.dataId),g.shape=y}return this.uploadToGPU(m.dataId),{shape:m.shape,texData:f,isUniform:!1}});this.uploadToGPU(s.dataId);let c={shape:s.shape,texData:i,isUniform:!1},u=kK(e,l,c),p=this.getAndSaveBinary(u,()=>vK(this.gpgpu,e,l,c)),d=this.activeTimers!=null,h;if(d&&(h=this.startTimer()),wK(this.gpgpu,p,l,c,a),o.forEach(m=>this.disposeIntermediateTensorInfo(m)),d&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)})),!ee().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&r===!1){let m=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),m}return s}compileAndRun(e,t,n,a,r=!1){n=n||t[0].dtype;let s=this.runWebGLProgram(e,t,n,a,r);return ns().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(ee().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=D(()=>{if(!ee().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=ee().getBool("DEBUG");ee().set("DEBUG",!1);let t=this.abs(de(1e-8)).dataSync()[0];if(ee().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?gX:yX}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:s,usage:i,isPacked:o}=t;if(s!=null)return;let l=this.activeTimers!=null,c;l&&(c=k.now());let u=t.texShape;if(u==null&&(u=i8(n,o),t.texShape=u),r!=null){let p=Gv(n),d,h=u[1],m=u[0],f=r instanceof Uint8Array;o?([h,m]=yu(u[0],u[1]),d=new x8(p,[m,h],f)):d=new b8(p,[m,h],f);let g=this.makeTensorInfo([m,h],a);f?this.texData.get(g.dataId).usage=ra.PIXELS:this.texData.get(g.dataId).usage=ra.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(g.dataId),h,m,r);let y=!0,b=this.runWebGLProgram(d,[g],a,null,y),x=this.texData.get(b.dataId);t.texture=x.texture,t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,this.disposeIntermediateTensorInfo(g),this.texData.delete(b.dataId),t.values=null,l&&(this.uploadWaitMs+=k.now()-c)}else{let p=this.acquireTexture(u,i,a,o);t.texture=p}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:a}=n;return this.releaseGPUData(e),t!=null&&(n.values=kX(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*k.bytesPerElement(t)}};function kX(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let a=0;a<n.length;++a)n[a]=Math.round(e[a]);return n}else throw new Error(`Unknown dtype ${t}`)}var NX="2.8.3";vh.isBrowser()&&Sh("webgl",()=>new IX,2);var wS=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,Tu=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=_.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},sf=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,Cp=class{constructor(e,t,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=_.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length,s="";if(a)if(r===0||k.sizeFromShape(this.outputShape)===1)s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(s=`
          ${mt(r)} coords = getOutputCoords();
        `,r===1)s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=yn("coords",r);s+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}};function Wn(e){let{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}var TX={kernelName:il,backendName:"webgl",kernelFunc:Wn};function bs(e){let{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.makeTensorInfo(a.shape,"complex64"),i=n.texData.get(s.dataId),o=Wn({inputs:{x:a},backend:n}),l=n.texData.get(o.dataId);l.complexParentRefCount++;let c=Wn({inputs:{x:r},backend:n}),u=n.texData.get(c.dataId);return u.complexParentRefCount++,i.complexTensorInfos={real:o,imag:c},s}var SX={kernelName:Ud,backendName:"webgl",kernelFunc:bs},kS="return (a < 0.) ? b * a : a;",IS=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function CX(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a,i=n.makeTensorInfo([],"float32",k.createScalarValue(s,"float32")),o=ee().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Cp(IS,r.shape,i.shape):new Tu(kS,r.shape,i.shape),l=n.runWebGLProgram(o,[r,i],r.dtype);return n.disposeIntermediateTensorInfo(i),l}var EX={kernelName:Js,backendName:"webgl",kernelFunc:CX},NS="return (a < 0.) ? b * a : a;",TS=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function _X(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=ee().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Cp(TS,a.shape,r.shape):new Tu(NS,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)}var FX={kernelName:ui,backendName:"webgl",kernelFunc:_X},SS="if (isnan(x)) return x;",AX=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,$X=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Ye({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:a}){return({inputs:r,backend:s})=>{let{x:i}=r,o=s,l=a||i.dtype;if(o.shouldExecuteOnCPU([i])&&n!=null){let p=o.texData.get(i.dataId),d=n(p.values,l);return o.makeTensorInfo(i.shape,l,d)}let c=ee().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,u;return c?u=new Nu(i.shape,t):u=new ys(i.shape,e),o.runWebGLProgram(u,[i],l)}}function on({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:r,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:c}=i,u=o;if(a&&l.dtype==="complex64"){let m=u.texData.get(l.dataId),f=u.texData.get(c.dataId),[g,y]=[[m.complexTensorInfos.real,f.complexTensorInfos.real],[m.complexTensorInfos.imag,f.complexTensorInfos.imag]].map(x=>{let[v,N]=x,T={dataId:v.dataId,dtype:v.dtype,shape:l.shape},E={dataId:N.dataId,dtype:N.dtype,shape:c.shape},A=new Tu(e,l.shape,c.shape);return u.runWebGLProgram(A,[T,E],pa(v.dtype,N.dtype))}),b=bs({inputs:{real:g,imag:y},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(y),b}let p=s||pa(l.dtype,c.dtype);if(u.shouldExecuteOnCPU([l,c])&&r!=null){let m=u.texData.get(l.dataId),f=u.texData.get(c.dataId),[g,y]=r(l.shape,c.shape,m.values,f.values,p),b=u.makeTensorInfo(y,p),x=u.texData.get(b.dataId);return x.values=g,b}let d=ee().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,h;return d?h=new Cp(t,l.shape,c.shape,n):h=new Tu(e,l.shape,c.shape),u.runWebGLProgram(h,[l,c],p)}}function of(e,t=!1){if(e==="linear")return t?cX:iX;if(e==="relu")return t?dX:lX;if(e==="elu")return t?pX:oX;if(e==="relu6")return t?hX:uX;if(e==="prelu")return t?TS:NS;if(e==="leakyrelu")return t?IS:kS;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var CS=class{constructor(e,t,n,a=!1,r=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;let c=a?e[1]:e[2],u=Math.ceil(c/2),p=a?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",h=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],f="",g="";i&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:f=`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${f}

      const float sharedDimension = ${u}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${u}; i++) {
          int batchA = ${b};
          int batchB = ${x};
          vec4 a = getMatrixA(batchA, ${p});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${m[0]});
          result += (${h[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},ES={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},_S=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=_.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},FS="return a * b;";function AS(e){let{inputs:t,backend:n}=e,{a,b:r}=t,s=_.upcastType(a.dtype,r.dtype);if(a.dtype==="complex64"){let o=n.texData.get(a.dataId),l=n.texData.get(r.dataId),c=new _S(ES.REAL,a.shape,r.shape),u=new _S(ES.IMAG,a.shape,r.shape),p=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:a.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],d=n.runWebGLProgram(c,p,"float32"),h=n.runWebGLProgram(u,p,"float32"),m=bs({inputs:{real:d,imag:h},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),m}if(n.shouldExecuteOnCPU([a,r])){let o=n.texData.get(a.dataId),l=n.texData.get(r.dataId),[c,u]=LK(a.shape,r.shape,o.values,l.values,s),p=n.makeTensorInfo(u,s),d=n.texData.get(p.dataId);return d.values=c,p}let i;return ee().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Cp(FS,a.shape,r.shape):i=new Tu(FS,a.shape,r.shape),n.runWebGLProgram(i,[a,r],s)}var DX={kernelName:si,backendName:"webgl",kernelFunc:AS};function MX(e,t,n){let a=[bu(e.shape),...xu(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},s=[bu(t),...xu(t)],i=new gS(s,a),o=!0,l=n.runWebGLProgram(i,[r],e.dtype,null,o);return{dataId:l.dataId,shape:t,dtype:l.dtype}}function xe(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,i=n,o=k.sizeFromShape(r.shape),l=k.inferFromImplicitShape(s,o),c=k.sizeFromShape(l);k.assert(o===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let u=i.texData.get(r.dataId);return u.isPacked&&!af(r.shape,l)&&!(u.texture!==null&&af(u.shape,l))?MX(r,l,i):(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}var RX={kernelName:Nl,backendName:"webgl",kernelFunc:xe},$S=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let i=Math.floor(n/4)*4,o=n%4,l="sumValue += dot(values, ones);";if(t!=null){let u=1/t;l=`sumValue += dot(values * ${k.isInt(u)?u.toPrecision(2):u}, ones);`}let c="";r%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${o===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${o===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${o===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},PX=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let i="0.0",o="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",o="min"):t==="max"&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let c=Math.floor(n/4)*4,u=n%4,p=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
      }
    `,d="vec4";t==="all"?(i="1.0",p=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):t==="any"&&(i="0.0",p=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${c};
        if (${u===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${u===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${u===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${p}
        }
        setOutput(${l});
      }
    `}};function OX(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],a=_.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}function eo(e,t,n,a){let r=OX(e.shape),s=e;for(let i=0;i<r.length;i++){let{inSize:o,windowSize:l,outSize:c}=r[i],u,p;n==="mean"?u=i===0?new $S({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:c},o):new $S({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:c}):u=new PX({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:c},n),p=s,s=a.runWebGLProgram(u,[s],t),p.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(p)}return s}var zX=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;let a=mt(this.rank),r=LX(t);this.userCode=`
    void main() {
      ${a} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function LX(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let r=0;r<e.length;r++)a[e[r]]=n[r];return a.join()}var BX=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let a=mt(this.rank),r=fS("rc",this.rank),s=new Array(this.rank);for(let c=0;c<t.length;c++)s[t[c]]=r[c];let i=`vec2(${s.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`
    void main() {
      ${a} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${o}) {
        result[1] = ${l};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${o}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function lf(e,t,n){let a=ee().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new BX(e.shape,t):new zX(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function WX(e,t,n,a){let r=t,s=e.shape.length,i=k.parseAxisParam(r,e.shape),o=i,l=_.getAxesPermutation(o,s),c=l!=null,u=e;c&&(u=lf(e,l,a),o=_.getInnerMostAxes(o.length,s)),_.assertAxesAreInnerMostDims("sum",o,s);let[p,d]=_.computeOutAndReduceShapes(u.shape,o),h=p;n&&(h=_.expandShapeToKeepDim(p,i));let m=k.sizeFromShape(d),f=k.sizeFromShape(e.shape)/m,g=xe({inputs:{x:u},attrs:{shape:[f,m]},backend:a}),y=xh(e.dtype),b=eo(g,y,"sum",a),x=xe({inputs:{x:b},attrs:{shape:h},backend:a});return a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(b),c&&a.disposeIntermediateTensorInfo(u),x}function Jv(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;return WX(r,s,i,n)}var VX={kernelName:xi,backendName:"webgl",kernelFunc:Jv};function En(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:s}=a,i=n,o=r.shape.length,l=new Array(o);for(let u=0;u<l.length;u++)l[u]=r.shape[s[u]];let c;if(i.shouldExecuteOnCPU([r])){let u=i.texData.get(r.dataId).values,p=Xv(u,r.shape,r.dtype,s,l);c=i.makeTensorInfo(l,r.dtype);let d=i.texData.get(c.dataId);d.values=p}else c=lf(r,s,i);return c}var UX={kernelName:Ni,backendName:"webgl",kernelFunc:En},DS=1e3;function uf({a:e,b:t,transposeA:n,transposeB:a,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let c=e.shape.length,u=t.shape.length,p=n?e.shape[c-2]:e.shape[c-1],d=a?t.shape[u-1]:t.shape[u-2],h=n?e.shape[c-1]:e.shape[c-2],m=a?t.shape[u-2]:t.shape[u-1],f=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=k.sizeFromShape(f),b=k.sizeFromShape(g),x=y===b||y===1||b===1;k.assert(c>=2&&u>=2&&x,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${g}).`);let v=(y>b?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([h,m]);k.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`);let N=n?[y,p,h]:[y,h,p],T=a?[b,m,d]:[b,d,m],E=xe({inputs:{x:e},backend:r,attrs:{shape:N}}),A=xe({inputs:{x:t},backend:r,attrs:{shape:T}}),$=[E,A],O=Math.max(y,b),V=n?E.shape[1]:E.shape[2],W=s!=null,H=i!=null,X=l==="leakyrelu",q=l!=null?of(l,!0):null,K=W||H||X||q!=null,J;if((h===1||m===1)&&V>DS&&K===!1){let Q=E,ie=A;n&&(Q=En({inputs:{x:E},backend:r,attrs:{perm:[0,2,1]}}),$.push(Q)),a&&(ie=En({inputs:{x:A},backend:r,attrs:{perm:[0,2,1]}}),$.push(ie));let re=m!==1,ae=m===1,oe=Q;re&&(oe=xe({inputs:{x:Q},backend:r,attrs:{shape:[O,V,1]}}),$.push(oe));let he=m===1?2:1,ce=ie;ae&&(ce=xe({inputs:{x:ie},backend:r,attrs:{shape:[O,1,V]}}),$.push(ce));let ge=AS({inputs:{a:oe,b:ce},backend:r});J=Jv({inputs:{x:ge},backend:r,attrs:{axis:he,keepDims:!0}}),$.push(ge)}else{let Q=pa(e.dtype,t.dtype),ie=new CS(N,T,[O,h,m],n,a,W,q,H,X),re=[E,A];if(s!=null&&re.push(s),H&&re.push(i),X){let ae=r.makeTensorInfo([],"float32",k.createScalarValue(o,"float32"));re.push(ae),$.push(ae)}J=r.runWebGLProgram(ie,re,Q)}let te=xe({inputs:{x:J},backend:r,attrs:{shape:v}});$.push(J);for(let Q of $)r.disposeIntermediateTensorInfo(Q);return te}function GX(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:p}=a;return uf({a:r,b:s,transposeA:l,transposeB:c,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:u})}var HX={kernelName:Ti,backendName:"webgl",kernelFunc:GX},MS="return abs(x);";function jX(e){let{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&a.dtype!=="complex64"){let s=n.texData.get(a.dataId),i=mS(s.values);return n.makeTensorInfo(a.shape,a.dtype,i)}let r;return ee().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Nu(a.shape,MS):r=new ys(a.shape,MS),n.runWebGLProgram(r,[a],a.dtype)}var qX={kernelName:Lo,backendName:"webgl",kernelFunc:jX},KX=Oa+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,XX=Ye({opSnippet:KX}),YX={kernelName:zo,backendName:"webgl",kernelFunc:XX},JX=Oa+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,ZX=Ye({opSnippet:JX}),QX={kernelName:Bo,backendName:"webgl",kernelFunc:ZX},RS="return a + b;",eY=on({opSnippet:RS,packedOpSnippet:RS,supportsComplex:!0,cpuKernelImpl:IK}),tY={kernelName:qr,backendName:"webgl",kernelFunc:eY},nY=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,s)=>`T${s}`);let n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});let a=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${a};
        setOutput(result);
      }
    `}},aY=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,s)=>`T${s}`);let n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});let a=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${a};
        setOutput(result);
      }
    `}};function cf(e){let{inputs:t,backend:n}=e,a=t;if(a.length===1)return Wn({inputs:{x:a[0]},backend:n});if(a.length>ee().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let o=Math.floor(a.length/2),l=cf({inputs:a.slice(0,o),backend:n}),c=cf({inputs:a.slice(o),backend:n});return cf({inputs:[l,c],backend:n})}let r=a.map(o=>o.dtype).reduce((o,l)=>pa(o,l)),s=a.map(o=>o.shape),i=ee().getBool("WEBGL_PACK")?new aY(a[0].shape,s):new nY(a[0].shape,s);return n.runWebGLProgram(i,a,r)}var rY={kernelName:Rs,backendName:"webgl",kernelFunc:cf};function sY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=k.parseAxisParam(s,r.shape),c=l,u=_.getAxesPermutation(c,o),p=r;u!=null&&(p=En({inputs:{x:r},backend:n,attrs:{perm:u}}),c=_.getInnerMostAxes(c.length,o)),_.assertAxesAreInnerMostDims("all",c,o);let[d,h]=_.computeOutAndReduceShapes(p.shape,c),m=k.sizeFromShape(h),f=xe({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}}),g=eo(f,f.dtype,"all",n),y;if(i){let b=_.expandShapeToKeepDim(d,l);y=xe({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=xe({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(p),y}var iY={kernelName:Ld,backendName:"webgl",kernelFunc:sY};function oY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=k.parseAxisParam(s,r.shape),c=l,u=_.getAxesPermutation(c,o),p=r;u!=null&&(p=En({inputs:{x:r},backend:n,attrs:{perm:u}}),c=_.getInnerMostAxes(c.length,o)),_.assertAxesAreInnerMostDims("any",c,o);let[d,h]=_.computeOutAndReduceShapes(p.shape,c),m=k.sizeFromShape(h),f=xe({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}}),g=eo(f,f.dtype,"any",n),y;if(i){let b=_.expandShapeToKeepDim(d,l);y=xe({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=xe({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(p),y}var lY={kernelName:zd,backendName:"webgl",kernelFunc:oY},uY=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:a,batchSize:r,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];let i=t==="max"?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${a}; i++) {
          int inIdx = ${o};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},cY=class{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,k.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let r=e[e.length-1],s=Math.ceil(r/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");let i=this.outputShape,o=i.length,l=mt(o),c=yn("coords",o),u,p;if(s===1){p=o+1;let E=mt(p);u=`
        ${E} sourceLocR = ${E}(${c.join()}, 0);
        ++${c[o-1]};
        ${E} sourceLocG = ${E}(${c.join()}, 0);
        ++${c[o-2]};
        ${E} sourceLocA = ${E}(${c.join()}, 0);
        --${c[o-1]};
        ${E} sourceLocB = ${E}(${c.join()}, 0);
        --${c[o-2]};`}else p=o,u=`
        ${l} sourceLocR = coords;
        ++${c[o-1]};
        ${l} sourceLocG = coords;
        ++${c[o-2]};
        ${l} sourceLocA = coords;
        --${c[o-1]};
        ${l} sourceLocB = coords;
        --${c[o-2]};`;let d=["x","y","z","w","u","v"].slice(0,p),h="."+d[p-1],m=d.map(E=>"int "+E),f=yn("sourceLocR",p-1).concat("inIdx.r"),g=yn("sourceLocG",p-1).concat("inIdx.g"),y=yn("sourceLocB",p-1).concat("inIdx.b"),b=yn("sourceLocA",p-1).concat("inIdx.a"),x=n==="max"?"greaterThan":"lessThan",v=a?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${f.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()})));`,N=`vec4(
            getAChannel(${f.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,T=a?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${T}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${c[o-1]} < ${i[o-1]-1};
        bool hasNextRow = ${c[o-2]} < ${i[o-2]-1};
        ${u}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${N};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${N};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function PS(e,t,n,a=null){let r=t.shape[0],s=t.shape[1];a!=null&&(r=a.shape[0],s=a.shape[1]);let i=_.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:r,outSize:Math.ceil(s/i)},l=new uY(o,n,a==null),c=[t];a!=null&&c.push(a);let u=e.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;let p=PS(e,t,n,u);return e.disposeIntermediateTensorInfo(u),p}function OS(e,t,n,a=null){let r=a!=null?a.shape:t.shape,s=r[r.length-1],i=_.computeOptimalWindowSize(s),o=new cY(r,i,n,a==null),l=a==null?[t]:[t,a],c=e.runWebGLProgram(o,l,"int32");if(c.shape.length===t.shape.length){let u=OS(e,t,n,c);return e.disposeIntermediateTensorInfo(c),u}return c}function LS(e,t,n,a){let r=[n];if(_.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!ee().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],[i,o]=_.computeOutAndReduceShapes(t.shape,r),l=k.sizeFromShape(o),c=xe({inputs:{x:t},backend:e,attrs:{shape:[-1,l]}});s.push(c);let u=PS(e,c,a);s.push(u);let p=xe({inputs:{x:u},backend:e,attrs:{shape:i}});return s.forEach(d=>e.disposeIntermediateTensorInfo(d)),p}return OS(e,t,a)}function pY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a,i=k.parseAxisParam(s,r.shape),o=_.getAxesPermutation(i,r.shape.length),l=r,c=[];o!=null&&(l=En({inputs:{x:r},backend:n,attrs:{perm:o}}),c.push(l),i=_.getInnerMostAxes(i.length,l.shape.length)),_.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let u=LS(n,l,i[0],"max");return c.forEach(p=>n.disposeIntermediateTensorInfo(p)),u}var dY={kernelName:Ps,backendName:"webgl",kernelFunc:pY};function hY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a,i=k.parseAxisParam(s,r.shape),o=_.getAxesPermutation(i,r.shape.length),l=r,c=[];o!=null&&(l=En({inputs:{x:r},backend:n,attrs:{perm:o}}),c.push(l),i=_.getInnerMostAxes(i.length,l.shape.length)),_.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let u=LS(n,l,i[0],"min");return c.forEach(p=>n.disposeIntermediateTensorInfo(p)),u}var mY={kernelName:dc,backendName:"webgl",kernelFunc:hY},fY=Oa+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,gY=Ye({opSnippet:fY}),yY={kernelName:Wo,backendName:"webgl",kernelFunc:gY},bY=Oa+"return log(x + sqrt(x * x + 1.0));",xY=Ye({opSnippet:bY}),vY={kernelName:Vo,backendName:"webgl",kernelFunc:xY},wY=Oa+`
  return atan(x);
`,kY=Ye({opSnippet:wY}),IY={kernelName:Uo,backendName:"webgl",kernelFunc:kY},NY=AX+`
  return atan(a, b);
`,TY=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+$X+`
  return result;
`,SY=on({opSnippet:NY,packedOpSnippet:TY}),CY={kernelName:Ho,backendName:"webgl",kernelFunc:SY},EY=Oa+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,_Y=Ye({opSnippet:EY}),FY={kernelName:Go,backendName:"webgl",kernelFunc:_Y},Ep=class{constructor(e,t,n,a=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let m=t==="avg",f=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(m||(y="-1.0 / 1e-20"),n){let E=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${d}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${u};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${E} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${a?r?f:g:`wR * ${p} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(x="avgValue / count");let v=Math.floor(s/4)*4,N=s%4,T=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${d}, ${h});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${u};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${T}
          }

          int xC = xCCorner + ${v};
          if (${N===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${N===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${N===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${T}
          }
        }
        setOutput(${x});
      }
    `}},Zv=class{constructor(e,t,n,a=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,c=e.dilationDepth,u=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b=t==="avg",x="0.0";if(b||(x="-1.0 / 1e-20"),n){let $=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${l});
        const ivec3 pads = ivec3(${f}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${u}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${p}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${$} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${a?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let v="max",N=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(N="avgValue / count");let T=Math.floor(s/4)*4,E=s%4,A=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${l});
      const ivec3 pads = ivec3(${f}, ${g}, ${y});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${T}; wC += 4) {
              int xC = xCCorner + wC * ${p};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                getValue(batch, xD, xR, xC + 3 * ${p}, ch)
              );

              ${A}
            }

            int xC = xCCorner + ${T};
            if (${E===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${A}
            } else if (${E===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                initializationValue,
                initializationValue
              );

              ${A}
            } else if (${E===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                initializationValue
              );

              ${A}
            }
          }
          setOutput(${N});
        }
      }
    `}};function AY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;Tp(r,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a,c=1;k.assert(_.eitherStridesOrDilationsAreOne(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let u=_.computePool2DInfo(r.shape,s,i,c,o,l);if(u.filterWidth===1&&u.filterHeight===1&&k.arraysEqual(u.inShape,u.outShape))return Wn({inputs:{x:r},backend:n});let p=new Ep(u,"avg",!1);return n.runWebGLProgram(p,[r],"float32")}var $Y={kernelName:Os,backendName:"webgl",kernelFunc:AY};function DY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:c}=a,u=[1,1,1],p=_.computePool3DInfo(r.shape,s,i,u,o,l,c),d=new Zv(p,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}var MY={kernelName:hc,backendName:"webgl",kernelFunc:DY},RY=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.top,u=l-1-e.padInfo.left,p=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${u});
      const float avgMultiplier = float(${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},PY=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=u-1-e.padInfo.front,m=p-1-e.padInfo.top,f=d-1-e.padInfo.left,g=1/(t*n*a);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${m}, ${f});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function OY(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:l,pad:c,dimRoundingMode:u}=a,p=[1,1,1],d=_.computePool3DInfo(i.shape,o,l,p,c,u),h=new PY(d);return n.runWebGLProgram(h,[r],i.dtype)}var LY={kernelName:Wd,backendName:"webgl",kernelFunc:OY};function zY(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;Tp([r,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:c}=a,u=_.computePool2DInfo(i.shape,o,l,1,c),p=new RY(u);return n.runWebGLProgram(p,[r],i.dtype)}var BY={kernelName:Bd,backendName:"webgl",kernelFunc:zY};function WY(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;return uf({a:r,b:s,transposeA:i,transposeB:o,backend:n})}var VY={kernelName:Ls,backendName:"webgl",kernelFunc:WY},UY=class{constructor(e,t,n,a,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],_.assertAndGetBroadcastShape(e,t),_.assertAndGetBroadcastShape(e,n);let i="0.0";a!=null&&(_.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";r!=null&&(_.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},GY=class{constructor(e,t,n,a,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],_.assertAndGetBroadcastShape(e,t),_.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";a!=null&&(_.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";r!=null&&(_.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}},HY=({inputs:e,backend:t,attrs:n})=>{let{x:a,mean:r,variance:s,offset:i,scale:o}=e;k.assert(r.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k.assert(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k.assert(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);let c=[a,r,s],u=null;i!=null&&(u=i.shape,c.push(i));let p=null;o!=null&&(p=o.shape,c.push(o));let d=ee().getBool("WEBGL_PACK_NORMALIZATION")?new GY(a.shape,r.shape,s.shape,u,p,l):new UY(a.shape,r.shape,s.shape,u,p,l);return t.runWebGLProgram(d,c,c[0].dtype)},jY={kernelName:Xs,backendName:"webgl",kernelFunc:HY},KY=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=mt(this.rank),n=`uniform int start[${this.rank}];`,a=qY(this.rank),r,s=e.map((i,o)=>`sourceLoc.${Qv[o]} = start[${o}] + coords.${Qv[o]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      ${n}
      void main() {
        ${r}
        setOutput(getSource(${a}));
      }
    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{this.startLoc==null&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),this.startLoc==null)||t.gl.uniform1iv(this.startLoc,e)}}},Qv=["x","y","z","w","u","v"];function qY(e){if(e===1)return"sourceLoc";if(e<=6)return Qv.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var XY=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;let t=mt(this.rank),n=yn("coords",this.rank),a=yn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${a.slice(-2).join()})`,s=`getChannel(getSource(${a.join()}), ${r})`,i=`
      result.x = ${s};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${a[this.rank-1]};
        result.y = ${s};
        --${a[this.rank-1]};
      }
    `,o=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${a[this.rank-2]};
        result.z = ${s};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${a[this.rank-1]};
          result.w = ${s};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,u)=>`start[${u}]`).join()});`:e.map((c,u)=>`${a[u]} = ${n[u]} + start[${u}];`).join(`
`);this.userCode=`
      uniform int start[${this.rank}];
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{this.startLoc==null&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),this.startLoc==null)||t.gl.uniform1iv(this.startLoc,e)}}};function YY(e,t,n,a){let r=a.texData.get(e.dataId),s=a.makeTensorInfo(n,e.dtype),i=a.texData.get(s.dataId);Object.assign(i,r),i.shape=n,i.dtype=e.dtype;let o=hn.computeFlatOffset(t,k.computeStrides(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};let l=a.dataRefCount.get(i.slice.origDataId)||1;return a.dataRefCount.set(i.slice.origDataId,l+1),s}function _p(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a,[o,l]=hn.parseSliceParams(r,s,i);if(hn.assertParamsValid(r,o,l),k.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){let p=n.texData.get(r.dataId),d=UK(p.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,d)}let{isPacked:c}=n.texData.get(r.dataId),u=hn.isSliceContinous(r.shape,o,l);if(c||!u){let p=ee().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new XY(l):new KY(l),d=p.getCustomSetupFunc(o);return n.runWebGLProgram(p,[r],r.dtype,d)}return n.uploadToGPU(r.dataId),YY(r,o,l,n)}var JY={kernelName:El,backendName:"webgl",kernelFunc:_p},ZY=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;k.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((b,x)=>b*x),l=_.getReshaped(r.shape,s,o),c=_.getPermuted(l.length,s.length),u=_.getReshapedPermuted(r.shape,s,o),p=_.getSliceBeginCoords(i,s.length),d=_.getSliceSize(u,i,s.length),h=[],m=xe({inputs:{x:r},backend:n,attrs:{shape:l}}),f=En({inputs:{x:m},backend:n,attrs:{perm:c}}),g=xe({inputs:{x:f},backend:n,attrs:{shape:u}}),y=_p({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return h.push(m),h.push(f),h.push(g),h.forEach(b=>n.disposeIntermediateTensorInfo(b)),y},QY={kernelName:mc,backendName:"webgl",kernelFunc:ZY};function e7(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i}=a,o=n.readSync(r.dataId),l=n.readSync(s.dataId),c=hS(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,c)}var t7={kernelName:Vd,backendName:"webgl",kernelFunc:e7},n7="return float(a != b);",zS=on({opSnippet:n7,dtype:"bool"}),a7={kernelName:gl,backendName:"webgl",kernelFunc:zS};function Fp(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.texData.get(a.dataId);return Wn({inputs:{x:r.complexTensorInfos.real},backend:n})}var r7={kernelName:uh,backendName:"webgl",kernelFunc:Fp},s7="return float(int(x));";function i7(e,t){let n=new ys(e.shape,s7),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}function ew(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:s}=a;if(s==="complex64"){if(r.dtype==="complex64")return Wn({inputs:{x:r},backend:n});let i=bt(r.shape),o=ew({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=bs({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeIntermediateTensorInfo(o),l}if(r.dtype==="complex64"){let i=Fp({inputs:{input:r},backend:n}),o=ew({inputs:{x:i},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(i),o}if(!k.hasEncodingLoss(r.dtype,s)){let i=Wn({inputs:{x:r},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32")return i7(r,n);if(s==="bool"){let i=n.makeTensorInfo([],"bool",k.getTypedArrayFromDType("bool",1)),o=zS({inputs:{a:r,b:i},backend:n});return n.disposeIntermediateTensorInfo(i),o}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${s}`)}var o7={kernelName:zs,backendName:"webgl",kernelFunc:ew},BS="return ceil(x);",l7=Ye({opSnippet:BS,packedOpSnippet:BS,cpuKernelImpl:TK}),u7={kernelName:jo,backendName:"webgl",kernelFunc:l7},c7=class{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}getCustomSetupFunc(e,t){return(n,a)=>{this.minLoc==null&&(this.minLoc=n.getUniformLocationNoThrow(a,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(a,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}},p7=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}getCustomSetupFunc(e,t){return(n,a)=>{this.minLoc==null&&(this.minLoc=n.getUniformLocationNoThrow(a,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(a,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}};function d7(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=a,o;ee().getBool("WEBGL_PACK_CLIP")?o=new p7(r.shape):o=new c7(r.shape);let l=o.getCustomSetupFunc(s,i);return n.runWebGLProgram(o,[r],r.dtype,l)}var h7={kernelName:Kr,backendName:"webgl",kernelFunc:d7},m7=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function WS(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function f7(e){let{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),s=new m7(a.shape),i=[WS(a,r.complexTensorInfos.real),WS(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}var g7={kernelName:fc,backendName:"webgl",kernelFunc:f7},y7=class{constructor(e){this.outputShape=[],this.outputShape=_.computeOutShape(e,1),this.variableNames=e.map((s,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){let i=t[s-1];n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${i}));`)}let a=t.length,r=t[t.length-1];n.push(`else setOutput(getT${a}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},b7=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=_.computeOutShape(e,t);let n=this.outputShape,a=n.length,r=mt(a),s=yn("coords",a),i=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map((m,f)=>`T${f}`);let o=new Array(e.length-1);o[0]=e[0][t];for(let m=1;m<o.length;m++)o[m]=o[m-1]+e[m][t];let l=i[t],c=i.slice(-2),u=i.join(),p=`if (${l} < ${o[0]}) {
        return getChannel(
            getT0(${u}), vec2(${c.join()}));
        }`;for(let m=1;m<o.length;m++){let f=o[m-1];p+=`
        if (${l} < ${o[m]}  && ${l} >= ${o[m-1]}) {
          return getChannel(
            getT${m}(${pf(i,l,f)}),
            vec2(${pf(c,l,f)}));
        }`}let d=o.length,h=o[o.length-1];p+=`
        return getChannel(
          getT${d}(${pf(i,l,h)}),
          vec2(${pf(c,l,h)}));`,this.userCode=`
      float getValue(${i.map(m=>"int "+m)}) {
        ${p}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[a-1]} = ${s[a-1]} + 1;
        if (${s[a-1]} < ${n[a-1]}) {
          result.g = getValue(${s});
        }

        ${s[a-2]} = ${s[a-2]} + 1;
        if (${s[a-2]} < ${n[a-2]}) {
          result.a = getValue(${s});
        }

        ${s[a-1]} = ${s[a-1]} - 1;
        if (${s[a-2]} < ${n[a-2]} &&
            ${s[a-1]} < ${n[a-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}};function pf(e,t,n){let a=e.indexOf(t);return e.map((r,s)=>s===a?`${r} - ${n}`:r).join()}function df(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.texData.get(a.dataId);return Wn({inputs:{x:r.complexTensorInfos.imag},backend:n})}var x7={kernelName:nh,backendName:"webgl",kernelFunc:df};function Su(e,t,n){let a=e[0].dtype;if(a==="complex64"){let c=e.map(m=>Fp({inputs:{input:m},backend:n})),u=e.map(m=>df({inputs:{input:m},backend:n})),p=Su(c,t,n),d=Su(u,t,n),h=bs({inputs:{real:p,imag:d},backend:n});return c.forEach(m=>n.disposeIntermediateTensorInfo(m)),u.forEach(m=>n.disposeIntermediateTensorInfo(m)),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),h}if(a==="string"){let{tensors2D:c,outShape:u}=VS(e,t,n),p=c.map(g=>({vals:n.readSync(g.dataId),shape:g.shape})),d=c[0].shape[0]===1,h=SK(p,u,a,d),m=_.computeOutShape(e.map(g=>g.shape),t),f=n.makeTensorInfo(m,a,h);return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),f}if(e.length>ee().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let c=Math.floor(e.length/2),u=Su(e.slice(0,c),t,n),p=Su(e.slice(c),t,n),d=Su([u,p],t,n);return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),d}if(ee().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let c=new b7(e.map(u=>u.shape),t);return n.runWebGLProgram(c,e,a)}let{tensors2D:r,outShape:s}=VS(e,t,n),i=new y7(r.map(c=>c.shape)),o=n.runWebGLProgram(i,r,a);r.forEach(c=>n.disposeIntermediateTensorInfo(c));let l=xe({inputs:{x:o},attrs:{shape:s},backend:n});return n.disposeIntermediateTensorInfo(o),l}function VS(e,t,n){let a=_.computeOutShape(e.map(r=>r.shape),t);return{tensors2D:e.map(r=>xe({inputs:{x:r},attrs:{shape:[-1,k.sizeFromShape(r.shape.slice(t))]},backend:n})),outShape:a}}function US(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=k.parseAxisParam(r,t[0].shape)[0],i=_.computeOutShape(t.map(c=>c.shape),s);if(k.sizeFromShape(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(c=>k.sizeFromShape(c.shape)>0);if(o.length===1)return Wn({inputs:{x:o[0]},backend:n});let l=o.map(c=>c.shape);return _.assertParamsConsistent(l,s),Su(o,s,n)}var v7={kernelName:qo,backendName:"webgl",kernelFunc:US},GS=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,u=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,h=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,f=e.dataFormat==="channelsLast",g=f?1:2,y=f?2:3,b=f?3:1,x="",v="";n&&(a?x=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?x=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:x=`
          float activation(float x) {
            ${n}
          }
        `,v="result = activation(result);");let N=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${b}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${u};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${f}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${f}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${f}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${f}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${N}
        ${v}
        setOutput(result);
      }
    `}},w7=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,u=e.filterDepth,p=e.filterHeight,d=e.filterWidth,h=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${s}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${a});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${u}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},k7=class{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let{filterWidth:a,inChannels:r,strideWidth:s,strideHeight:i,padInfo:o,outWidth:l,dilationWidth:c,dilationHeight:u,dataFormat:p}=n,{left:d,top:h}=o,m=r*a,f=gn(),g=p==="channelsLast",y=g?0:1,b=g?1:2,x="";for(let v=0;v<=1;v++)for(let N=0;N<=1;N++)x+=`
          blockIndex = rc.y + ${N};
          pos = rc.x + ${v};

          if(blockIndex < ${e[1]} && pos < ${e[0]}) {
            offsetY = int(blockIndex / (${l})) * ${i} - ${h};
            d0 = offsetY + ${u} * (pos / ${m});

            if(d0 < ${t[y]} && d0 >= 0) {

              offsetX = int(mod(float(blockIndex), ${l}.) * ${s}. - ${d}.);
              d1 = offsetX + ${c} * (int(mod(float(pos), ${m}.) / ${r}.));

              if(d1 < ${t[b]} && d1 >= 0) {

                ch = int(mod(float(pos), ${r}.));

                if (${g}) {
                  innerDims = vec2(d1, ch);
                  result[${v*2+N}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${v*2+N}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${x}

        ${f.output} = result;
      }
    `}};function HS({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=e.shape,c=a.texData.get(e.dataId),u=n.inChannels,p=l[0]*l[1]*l[2],d=n.outChannels,h=n.dataFormat==="channelsLast",m=!1,f=!1,g,y=[],b=(p===1||d===1)&&u>DS,x=l[2]%2!=0&&!!c.isPacked;if(b||!ee().getBool("WEBGL_LAZILY_UNPACK")||!ee().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!x){let v=h?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],N=xe({inputs:{x:e},backend:a,attrs:{shape:[1,v,n.inChannels]}}),T=xe({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),E=uf({a:N,b:T,transposeA:m,transposeB:f,backend:a,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i});g=xe({inputs:{x:E},backend:a,attrs:{shape:n.outShape}}),y.push(N),y.push(T),y.push(E)}else{let v=h?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),N={dataId:e.dataId,shape:[1,v,n.inChannels],dtype:e.dtype},T=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,k.assert(af(c.shape,N.shape),()=>`packed reshape ${c.shape} to ${N.shape} isn't free`);let E=xe({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(E);let A=uf({a:N,b:E,backend:a,transposeA:m,transposeB:f,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),$=a.texData.get(A.dataId);k.assert($.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=T,$.shape=n.outShape,g=Wn({inputs:{x:A},backend:a}),g.shape=n.outShape,y.push(A)}for(let v of y)a.disposeIntermediateTensorInfo(v);return g}function jS({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:c,inChannels:u,outWidth:p,outHeight:d,dataFormat:h}=n,m=h==="channelsLast",f=l*c*u,g=d*p,y=[f,g],b=!0,x=!1,v=[],N=xe({inputs:{x:e},backend:a,attrs:{shape:e.shape.slice(1)}}),T=xe({inputs:{x:t},backend:a,attrs:{shape:[1,f,k.sizeFromShape(t.shape)/f]}});v.push(N),v.push(T);let E=new k7(y,N.shape,n),A=a.runWebGLProgram(E,[N],"float32"),$=xe({inputs:{x:A},backend:a,attrs:{shape:[1,y[0],y[1]]}});v.push(A),v.push($);let O=r!=null,V=s!=null,W=o==="leakyrelu",H=o?of(o,!0):null,X=new CS($.shape,T.shape,[1,g,n.outChannels],b,x,O,H,V,W),q=[$,T];if(r&&q.push(r),V&&q.push(s),W){let Q=a.makeTensorInfo([],"float32",k.createScalarValue(i,"float32"));q.push(Q),v.push(Q)}let K=a.runWebGLProgram(X,q,"float32"),J=m?[1,d,p,n.outChannels]:[1,n.outChannels,d,p],te=xe({inputs:{x:K},backend:a,attrs:{shape:J}});v.push(K);for(let Q of v)a.disposeIntermediateTensorInfo(Q);return te}function I7(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:c,dimRoundingMode:u}=a,p=_.convertConv2DDataFormat(l),d=_.computeConv2DInfo(r.shape,s.shape,i,c,o,u,!1,p),h;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))h=HS({x:r,filter:s,convInfo:d,backend:n});else if(ee().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)h=jS({x:r,filter:s,convInfo:d,backend:n});else{let f=new GS(d);h=n.runWebGLProgram(f,[r,s],"float32")}let m=xe({inputs:{x:h},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(h),m}var N7={kernelName:Bs,backendName:"webgl",kernelFunc:I7},T7=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${a};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${s}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},S7=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,c=s?2:3,u=s?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${u}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},C7=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${a} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},E7=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,c=a-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${l}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${a}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${a} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function _7(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:c,filterShape:u}=a,p=_.convertConv2DDataFormat(l),d=_.computeConv2DInfo(r.shape,u,i,1,o,c,!1,p),h=new T7(d);return n.runWebGLProgram(h,[r,s],"float32")}var F7={kernelName:Gd,backendName:"webgl",kernelFunc:_7};function A7(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:c,dimRoundingMode:u}=a,p=_.convertConv2DDataFormat(c),d=_.computeConv2DInfo(i,s.shape,o,1,l,u,!1,p),h=new S7(d);return n.runWebGLProgram(h,[r,s],"float32")}var $7={kernelName:Ws,backendName:"webgl",kernelFunc:A7};function D7(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a,c=_.computeConv3DInfo(r.shape,s.shape,i,l,o),u=new w7(c);return n.runWebGLProgram(u,[r,s],"float32")}var M7={kernelName:gc,backendName:"webgl",kernelFunc:D7};function R7(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:l}=a,c=_.computeConv3DInfo(r.shape,l,i,1,o),u=new C7(c);return n.runWebGLProgram(u,[r,s],"float32")}var P7={kernelName:Hd,backendName:"webgl",kernelFunc:R7};function O7(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:l}=a,c=_.computeConv3DInfo(l,s.shape,o,1,i),u=new E7(c);return n.runWebGLProgram(u,[r,s],"float32")}var L7={kernelName:jd,backendName:"webgl",kernelFunc:O7},z7=SS+`
  return cos(x);
`,B7=Ye({opSnippet:z7}),W7={kernelName:Vs,backendName:"webgl",kernelFunc:B7},V7=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,U7=Ye({opSnippet:V7}),G7={kernelName:Ko,backendName:"webgl",kernelFunc:U7},H7=class{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[c]=t,[u,p]=n;this.outputShape=[c,u,p,l];let d=a==="bilinear"?1:0,[h,m]=[`${i-1}.0`,`${o-1}.0`],[f,g,y]=u>1?[`${(i-1)/(u-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[b,x,v]=p>1?[`${(o-1)/(p-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${f});
      const float width_ratio = float(${b});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${x};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},j7=e=>{let{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:c}=a,u=new H7(r.shape,s.shape,o,l,c);return n.runWebGLProgram(u,[r,s,i],"float32")},q7={kernelName:Xo,backendName:"webgl",kernelFunc:j7},XS=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;let a=e.length,r=t?"0.0":`getX(${qS(a,"coords")})`,s=e[e.length-1],i="",o="";t?(i=n?`end != ${s-1}`:"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`
      uniform float index;
      void main() {
        ${mt(a)} coords = getOutputCoords();
        int end = ${KS(a,"coords")};
        float val = ${r};
        int pow2 = int(pow(2.0, index));
        if (${i}) {
          int idx = ${o};
          ${KS(a,"coords")} = idx;
          val += getX(${qS(a,"coords")});
        }
        setOutput(val);
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.index==null&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}};function qS(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function KS(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function K7(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a,l=r.shape.length,c=_.getAxesPermutation([s],l),u=r;c!=null&&(u=En({inputs:{x:r},backend:n,attrs:{perm:c}}));let p=_.getInnerMostAxes(1,l)[0];if(p!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${s}`);let d=r.shape[p],h=Wn({inputs:{x:u},backend:n});for(let m=0;m<=Math.ceil(Math.log2(d))-1;m++){let f=new XS(u.shape,!1,o),g=f.getCustomSetupFunc(m),y=h;h=n.runWebGLProgram(f,[h],h.dtype,g),n.disposeIntermediateTensorInfo(y)}if(i){let m=new XS(u.shape,i,o),f=h;h=n.runWebGLProgram(m,[h],h.dtype),n.disposeIntermediateTensorInfo(f)}if(c!=null){let m=_.getUndoAxesPermutation(c),f=En({inputs:{x:h},backend:n,attrs:{perm:m}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),f}return h}var X7={kernelName:Us,backendName:"webgl",kernelFunc:K7};function Y7(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=a;if(r.shape.length===1){let l=n.readSync(r.dataId),c=n.readSync(s.dataId),u=hS(l,c,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}else if(r.shape.length===2){let l=n.bufferSync(r),c=n.bufferSync(s),u=NK(l,c,i,o);return n.makeTensorInfo(u.shape,s.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var J7={kernelName:qd,backendName:"webgl",kernelFunc:Y7},Z7=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Q7(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:i}=a;k.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);let o=r.shape[0],l=i==="NHWC"?r.shape[1]:r.shape[2],c=i==="NHWC"?r.shape[2]:r.shape[3],u=i==="NHWC"?r.shape[3]:r.shape[1],p=l*s,d=c*s,h=u/(s*s),m=i==="NHWC"?[o,p,d,h]:[o,h,p,d],f=new Z7(m,s,i);return n.runWebGLProgram(f,[r],r.dtype)}var eJ={kernelName:Yo,backendName:"webgl",kernelFunc:Q7},YS=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,c=e.strideHeight,u=e.strideWidth,p=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,m=e.filterWidth,f=e.outChannels/e.inChannels,g="",y="";n&&(a?g=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?g=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:g=`
          float activation(float x) {
            ${n}
          }
        `,y="result = activation(result);");let b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${g}

      const ivec2 strides = ivec2(${c}, ${u});
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${f};
        int q = d2 - d1 * ${f};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${p};

          if (xR < 0 || xR >= ${s}) {
            continue;
          }

          for (int wC = 0; wC < ${m}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${i}) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${b}
        ${y}
        setOutput(result);
      }
    `}},JS=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;let s=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,c=e.strideHeight,u=e.strideWidth,p=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,m=e.filterWidth,f=m,g="int xR; int xC; int xCOffset;";for(let v=0;v<h;v++)for(let N=0;N<m;N++)g+=`
          vec4 xTexelR${v}C${N*2} = vec4(0.);
          vec4 wR${v}C${N} = vec4(0.);
          vec4 xR${v}C${N} = vec4(0.);`;for(let v=0;v<h;v++)for(let N=0;N<f;N++){let T=N*2;if(g+=`
          xR = xRCorner + ${v*p};
          xC = xCCorner + ${T*d};
        `,u===1){if(T<m&&(l%2==1?g+=`
                xCOffset = xC + 1;
                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${v}C${T} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${i}) {
                    xTexelR${v}C${T}.zw = vec2(0.);
                  }
                } else {
                  xTexelR${v}C${T} = vec4(0.);
                }

                xCOffset = xC + 1 - 2;
                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {
                  vec4 previous = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${i}) {
                    previous.zw = vec2(0.);
                  }

                  xR${v}C${T} = vec4(previous.zw, xTexelR${v}C${T}.xy);
                } else {
                  xR${v}C${T} = vec4(0, 0, xTexelR${v}C${T}.xy);
                }
              `:g+=`
                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${i}) {
                  xTexelR${v}C${T} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${v}C${T} = vec4(0.);
                }

                xR${v}C${T} = xTexelR${v}C${T};
              `,T+1<m)){let E=l%2==0?k.nearestLargerEven(d):d;d%2==0&&l%2==1||d%2!=0&&l%2!=1?(g+=`
                  xCOffset = xC + ${l%2} + ${E};

                  if(xR >= 0 && xR < ${s} &&
                    xCOffset >= 0 && xCOffset < ${i}) {
                    xTexelR${v}C${T+2} = getX(batch, xR, xCOffset, d1);
                  }
                `,d>1&&(g+=`
                    xCOffset -= 2;
                    if(xR >= 0 && xR < ${s} &&
                      xCOffset >= 0 && xCOffset < ${i}) {
                      xTexelR${v}C${T} = getX(batch, xR, xCOffset, d1);
                    } else {
                      xTexelR${v}C${T} = vec4(0.);
                    }
                  `),g+=`
                  xR${v}C${T+1} = vec4(
                    xTexelR${v}C${T}.zw, xTexelR${v}C${T+2}.xy);
                `):g+=`
                  xCOffset = xC + ${E};

                  if(xR >= 0 && xR < ${s} &&
                    xCOffset >= 0 && xCOffset < ${i}) {
                    xTexelR${v}C${T+2} = getX(batch, xR, xCOffset, d1);
                  }

                  xR${v}C${T+1} = xTexelR${v}C${T+2};
                `}}else T<m&&(g+=`
              if(xR >= 0 && xR < ${s}) {
            `,l%2==1?(g+=`
                xCOffset = xC + 1 - ${u};
                if(xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${v}C${T} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${v}C${T} = vec4(0.);
                }

                if(xC + 1 >= 0 && xC + 1 < ${i}) {
                  xTexelR${v}C${T+2} = getX(batch, xR, xC + 1, d1);
                } else {
                  xTexelR${v}C${T+2} = vec4(0.);
                }

                xR${v}C${T} = vec4(
                  xTexelR${v}C${T}.zw, xTexelR${v}C${T+2}.zw);
              `,T+1<m&&(g+=`
                  vec4 final = vec4(0.);
                  xCOffset = xC + 1 + ${u};
                  if(xCOffset >= 0 && xCOffset < ${i}) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xR${v}C${T+1} = vec4(xTexelR${v}C${T+2}.xy, final.xy);
                `)):(g+=`
                if(xC >= 0 && xC < ${i}) {
                  xTexelR${v}C${T} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${v}C${T} = vec4(0.);
                }

                xCOffset = xC + ${u};
                if(xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${v}C${T+2} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${v}C${T+2} = vec4(0.);
                }

                xR${v}C${T} = vec4(
                  xTexelR${v}C${T}.xy, xTexelR${v}C${T+2}.xy);
              `,T+1<m&&(g+=`
                  xR${v}C${T+1} = vec4(
                    xTexelR${v}C${T}.zw, xTexelR${v}C${T+2}.zw);
                `)),g+="}");T<m&&(g+=`
            vec4 wTexelR${v}C${T} = getW(${v}, ${T}, d1, q);
            wR${v}C${T} = vec4(wTexelR${v}C${T}.xz, wTexelR${v}C${T}.xz);
          `,T+1<m&&(g+=`
              vec4 wTexelR${v}C${T+1} = getW(${v}, ${T+1}, d1, q);
              wR${v}C${T+1} =
                vec4(wTexelR${v}C${T+1}.xz, wTexelR${v}C${T+1}.xz);`))}for(let v=0;v<h;v++)for(let N=0;N<m;N++)g+=`dotProd += xR${v}C${N} * wR${v}C${N};`;let y="",b="";n&&(a?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:y=`vec4 activation(vec4 x) {
          ${n}
        }`,b="result = activation(result);");let x=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      const ivec2 strides = ivec2(${c}, ${u});
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {

        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2;
        int q = 0;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        vec4 dotProd = vec4(0.);

        ${g}

        vec4 result = dotProd;
        ${x}
        ${b}
        setOutput(result);
      }
    `}};function tJ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:c}=a,u=l;u==null&&(u=[1,1]),k.assert(_.eitherStridesOrDilationsAreOne(i,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let p=_.computeConv2DInfo(r.shape,s.shape,i,u,o,c,!0),d;return ee().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?d=new JS(p):d=new YS(p),n.runWebGLProgram(d,[r,s],"float32")}var nJ={kernelName:Gs,backendName:"webgl",kernelFunc:tJ},aJ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${a};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},rJ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function sJ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:c,filterShape:u}=a,p=_.computeConv2DInfo(r.shape,u,i,o,l,c,!0),d=new aJ(p);return n.runWebGLProgram(d,[r,s],"float32")}var iJ={kernelName:Kd,backendName:"webgl",kernelFunc:sJ};function oJ(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:c,inputShape:u}=a,p=_.computeConv2DInfo(u,s.shape,i,o,l,c,!0),d=new rJ(p);return n.runWebGLProgram(d,[r,s],"float32")}var lJ={kernelName:Xd,backendName:"webgl",kernelFunc:oJ},uJ=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function cJ(e){let{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],s=k.sizeFromShape(a.shape),i=xe({inputs:{x:a},backend:n,attrs:{shape:[s]}}),o=new uJ(s),l=n.runWebGLProgram(o,[i],i.dtype),c=xe({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}var pJ={kernelName:Yd,backendName:"webgl",kernelFunc:cJ},dJ=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:c}=e,{top:u,left:p}=a;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${s});
      const ivec2 pads = ivec2(${u}, ${p});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function hJ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a,c=_.computeDilation2DInfo(r.shape,s.shape,i,o,"NHWC",l),u,p=new dJ(c);u=n.runWebGLProgram(p,[r,s],"float32");let d=xe({inputs:{x:u},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(u),d}var mJ={kernelName:yc,backendName:"webgl",kernelFunc:hJ},fJ="return (x >= 0.0) ? x : (exp(x) - 1.0);",gJ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,yJ=Ye({opSnippet:fJ,packedOpSnippet:gJ}),bJ={kernelName:Jo,backendName:"webgl",kernelFunc:yJ},xJ="return (b >= 1.0) ? a : a * (b + 1.0);",vJ=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,wJ=e=>{let{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=ee().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Cp(vJ,a.shape,r.shape):new Tu(xJ,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)},kJ={kernelName:Qd,backendName:"webgl",kernelFunc:wJ},IJ=`
  return vec4(equal(a, b));
`,NJ="return float(a == b);",TJ=on({opSnippet:NJ,packedOpSnippet:IJ,dtype:"bool"}),SJ={kernelName:Qo,backendName:"webgl",kernelFunc:TJ},CJ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${_.ERF_P};
  float a1 = ${_.ERF_A1};
  float a2 = ${_.ERF_A2};
  float a3 = ${_.ERF_A3};
  float a4 = ${_.ERF_A4};
  float a5 = ${_.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,EJ=Ye({opSnippet:CJ}),_J={kernelName:Zo,backendName:"webgl",kernelFunc:EJ},ZS="return exp(x);",QS=Ye({opSnippet:ZS,packedOpSnippet:ZS,cpuKernelImpl:CK}),FJ={kernelName:js,backendName:"webgl",kernelFunc:QS};function tw(e){let{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=r;return r<0&&(k.assert(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+r+1),o.splice(l,0,1),xe({inputs:{x:s},backend:a,attrs:{shape:o}})}var AJ={kernelName:el,backendName:"webgl",kernelFunc:tw},e2="return exp(x) - 1.0;",$J=Ye({opSnippet:e2,packedOpSnippet:e2,cpuKernelImpl:EK}),DJ={kernelName:tl,backendName:"webgl",kernelFunc:$J},t2=class{constructor(e,t,n){this.variableNames=["real","imag"];let a=t[1];this.outputShape=t;let r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${a}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${a});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${a}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function n2(e,t,n){let a=n.texData.get(e.dataId),r=k.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=r/s,o=xe({inputs:{x:e},backend:n,attrs:{shape:[i,s]}}).shape,l=new t2("real",o,t),c=new t2("imag",o,t),u=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o}],p=n.runWebGLProgram(l,u,"float32"),d=n.runWebGLProgram(c,u,"float32"),h=bs({inputs:{real:p,imag:d},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d);let m=xe({inputs:{x:h},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(m),m}function MJ(e){let{inputs:t,backend:n}=e,{input:a}=t;return n2(a,!1,n)}var RJ={kernelName:eh,backendName:"webgl",kernelFunc:MJ},PJ=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      uniform float value;
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.valueLoc==null&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}};function nw(e){let{backend:t,attrs:n}=e,{shape:a,value:r}=n,{dtype:s}=n;if(s=s||k.inferDtype(r),s==="string"){let i=k.getArrayFromDType(s,k.sizeFromShape(a));return i.fill(r),t.makeTensorInfo(a,s,i)}else{let i=new PJ(a,r),o=i.getCustomSetupFunc(r);return t.runWebGLProgram(i,[],s,o)}}var OJ={kernelName:bc,backendName:"webgl",kernelFunc:nw},LJ=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},zJ={kernelName:nl,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,a=t,r=new LJ(n.shape);return a.runWebGLProgram(r,[n],n.dtype)}},a2="return floor(x);",BJ=Ye({opSnippet:a2,packedOpSnippet:a2,cpuKernelImpl:_K}),WJ={kernelName:qs,backendName:"webgl",kernelFunc:BJ},VJ=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,UJ=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,GJ=on({opSnippet:VJ,packedOpSnippet:UJ,dtype:"int32"}),HJ={kernelName:Ks,backendName:"webgl",kernelFunc:GJ},jJ=class{constructor(e){this.variableNames=["A"];let t=gn(),[n,a]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},qJ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=gn(),[n,a]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${a}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},XJ={kernelName:mh,backendName:"webgl",kernelFunc:KJ},Cu;function KJ(e){let{inputs:t,backend:n,attrs:a}=e,{pixels:r}=t,{numChannels:s}=a,i=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,o=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,l=typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap,[c,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],p=[u,c],d=[u,c,s];(o||i||l)&&(Cu==null&&(Cu=document.createElement("canvas").getContext("2d")),Cu.canvas.width=c,Cu.canvas.height=u,Cu.drawImage(r,0,0,c,u),r=Cu.canvas);let h=n.makeTensorInfo(p,"int32");n.texData.get(h.dataId).usage=ra.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),r);let m=ee().getBool("WEBGL_PACK")?new qJ(d):new jJ(d),f=n.runWebGLProgram(m,[h],"int32");return n.disposeData(h.dataId),f}function YJ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:c,dataFormat:u,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:m}=a,f=_.convertConv2DDataFormat(u),g=_.computeConv2DInfo(r.shape,s.shape,l,p,c,d,!1,f),y,b=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=HS({x:r,filter:s,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:m});else if(ee().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)y=jS({x:r,filter:s,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:m});else{let v=i!=null,N=o!=null,T=h==="leakyrelu",E=h?of(h,!1):null,A=new GS(g,v,E,N,T),$=[r,s];if(i&&$.push(i),o&&$.push(o),T){let O=n.makeTensorInfo([],"float32",k.createScalarValue(m,"float32"));$.push(O),b.push(O)}y=n.runWebGLProgram(A,$,"float32")}let x=xe({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach(v=>n.disposeIntermediateTensorInfo(v)),x}var JJ={kernelName:Si,backendName:"webgl",kernelFunc:YJ};function ZJ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:p,activation:d,leakyreluAlpha:h}=a,m=[],f=u;f==null&&(f=[1,1]),k.assert(_.eitherStridesOrDilationsAreOne(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);let g=_.computeConv2DInfo(r.shape,s.shape,l,f,c,p,!0),y=ee().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=d?of(d,y):null,x=[r,s],v=i!=null,N=o!=null,T=d==="leakyrelu";if(v&&x.push(i),N&&x.push(o),T){let $=n.makeTensorInfo([],"float32",k.createScalarValue(h,"float32"));x.push($),m.push($)}let E;y?E=new JS(g,v,b,N,T):E=new YS(g,v,b,N,T);let A=n.runWebGLProgram(E,x,"float32");return m.forEach($=>n.disposeIntermediateTensorInfo($)),A}var QJ={kernelName:Ci,backendName:"webgl",kernelFunc:ZJ},eZ=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let a=mt(t.length),r=mt(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${a} strides = ${a}(${this.strides});
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${s};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function tZ(e){let{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,i=s[s.length-1],[o,l,c,u]=_.prepareAndValidate(a,r),p=xe({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),d=xe({inputs:{x:a},backend:n,attrs:{shape:[k.sizeFromShape(a.shape)/c,c]}}),h=new eZ(i,u,[l,c]),m=n.runWebGLProgram(h,[d,p],d.dtype),f=xe({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),f}var nZ={kernelName:rl,backendName:"webgl",kernelFunc:tZ},rZ=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=mt(this.rank),a=aZ(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}};function aZ(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<e.length;r++)r===2?a.push("int(getIndices(resRC.x, resRC.z))"):a.push(`${n[r]}`);return a.join()}function sZ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=a,l=k.parseAxisParam(i,r.shape)[0],c=_.segment_util.collectGatherOpShapeInfo(r,s,l,o),u=k.sizeFromShape(s.shape),p=[],d=xe({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),h=xe({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}});p.push(d),p.push(h);let m=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([r,s])||r.dtype==="string"){let b=n.bufferSync(h),x=n.bufferSync(d),v=FK(x,b,m);return p.forEach(N=>n.disposeIntermediateTensorInfo(N)),n.makeTensorInfo(c.outputShape,v.dtype,v.values)}let f=new rZ(d.shape,m),g=n.runWebGLProgram(f,[d,h],d.dtype);p.push(g);let y=xe({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return p.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}var iZ={kernelName:al,backendName:"webgl",kernelFunc:sZ},oZ="return float(a > b);",lZ=`
  return vec4(greaterThan(a, b));
`,uZ=on({opSnippet:oZ,packedOpSnippet:lZ,cpuKernelImpl:AK,dtype:"bool"}),cZ={kernelName:sl,backendName:"webgl",kernelFunc:uZ},pZ="return float(a >= b);",dZ=`
  return vec4(greaterThanEqual(a, b));
`,hZ=on({opSnippet:pZ,packedOpSnippet:dZ,dtype:"bool"}),mZ={kernelName:Ys,backendName:"webgl",kernelFunc:hZ};function fZ(e){let{inputs:t,backend:n}=e,{input:a}=t;return n2(a,!0,n)}var gZ={kernelName:th,backendName:"webgl",kernelFunc:fZ},yZ="return float(!isnan(x) && !isinf(x));",bZ=Ye({opSnippet:yZ,dtype:"bool"}),xZ={kernelName:ol,backendName:"webgl",kernelFunc:bZ},vZ="return float(isinf(x));",wZ=Ye({opSnippet:vZ,dtype:"bool"}),kZ={kernelName:ll,backendName:"webgl",kernelFunc:wZ},IZ="return float(isnan(x));",NZ=Ye({opSnippet:IZ,dtype:"bool"}),TZ={kernelName:ul,backendName:"webgl",kernelFunc:NZ},SZ="return float(a < b);",CZ=`
  return vec4(lessThan(a, b));
`,EZ=on({opSnippet:SZ,packedOpSnippet:CZ,cpuKernelImpl:$K,dtype:"bool"}),_Z={kernelName:cl,backendName:"webgl",kernelFunc:EZ},FZ="return float(a <= b);",AZ=`
  return vec4(lessThanEqual(a, b));
`,$Z=on({opSnippet:FZ,packedOpSnippet:AZ,dtype:"bool"}),DZ={kernelName:pl,backendName:"webgl",kernelFunc:$Z};function MZ(e){let{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,i=DK(a,r,s);return t.makeTensorInfo([i.length],"float32",i)}var RZ={kernelName:ah,backendName:"webgl",kernelFunc:MZ},PZ=`if (x < 0.0) return NAN;
  return log(x);`,OZ=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,LZ=Ye({opSnippet:PZ,packedOpSnippet:OZ,cpuKernelImpl:MK}),zZ={kernelName:Zs,backendName:"webgl",kernelFunc:LZ},BZ="return log(1.0 + x);",WZ=Ye({opSnippet:BZ}),VZ={kernelName:dl,backendName:"webgl",kernelFunc:WZ},UZ="return float(a >= 1.0 && b >= 1.0);",GZ=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,HZ=on({opSnippet:UZ,packedOpSnippet:GZ,dtype:"bool"}),jZ={kernelName:hl,backendName:"webgl",kernelFunc:HZ},qZ="return float(!(x >= 1.0));",KZ=Ye({opSnippet:qZ}),XZ={kernelName:xc,backendName:"webgl",kernelFunc:KZ},YZ="return float(a >= 1.0 || b >= 1.0);",JZ=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,ZZ=on({opSnippet:YZ,packedOpSnippet:JZ,dtype:"bool"}),QZ={kernelName:vc,backendName:"webgl",kernelFunc:ZZ},e9=class{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${a}) * sum`;r===.5?o=`inversesqrt(${l})`:r===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${s}; j <= ${s}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${o};
        setOutput(val);
      }
    `}},t9=class{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${a}) * sum`;r===.5?o=`inversesqrt(${l})`:r===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${s};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${s}; j <= ${s}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${o};
        setOutput(result);
      }
    `}},n9=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=a,c=ee().getBool("WEBGL_PACK_NORMALIZATION")?new t9(r.shape,s,i,o,l):new e9(r.shape,s,i,o,l);return n.runWebGLProgram(c,[r],r.dtype)},a9={kernelName:wc,backendName:"webgl",kernelFunc:n9},r9=class{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${a}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${a})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},s9=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:c,beta:u}=a,p=new r9(r.shape,o,l,c,u);return n.runWebGLProgram(p,[r,s,i],r.dtype)},i9={kernelName:rh,backendName:"webgl",kernelFunc:s9};function o9(e,t,n,a){let r=k.sizeFromShape(t),s=k.sizeFromShape(e.shape)/r,i=xe({inputs:{x:e},attrs:{shape:[s,r]},backend:a}),o=eo(i,e.dtype,"max",a),l=xe({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),l}function r2(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a,o=r.shape.length,l=k.parseAxisParam(s,r.shape),c=l,u=_.getAxesPermutation(c,o),p=u!=null,d=n.shouldExecuteOnCPU([r]),h=r;if(p){if(d){let b=n.texData.get(h.dataId).values,x=new Array(o);for(let T=0;T<x.length;T++)x[T]=r.shape[u[T]];let v=Xv(b,r.shape,r.dtype,u,x);h=n.makeTensorInfo(x,r.dtype);let N=n.texData.get(h.dataId);N.values=v}else h=lf(r,u,n);c=_.getInnerMostAxes(c.length,o)}_.assertAxesAreInnerMostDims("max",c,o);let[m,f]=_.computeOutAndReduceShapes(h.shape,c),g=m;i&&(g=_.expandShapeToKeepDim(m,l));let y;if(d){let b=n.texData.get(h.dataId).values,x=RK(b,k.sizeFromShape(f),g,r.dtype);y=n.makeTensorInfo(g,r.dtype);let v=n.texData.get(y.dataId);v.values=x}else y=o9(h,f,g,n);return p&&n.disposeIntermediateTensorInfo(h),y}var l9={kernelName:Qs,backendName:"webgl",kernelFunc:r2},u9=wS+`
  return max(a, b);
`,c9=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+sf+`
  return result;
`,p9=on({opSnippet:u9,packedOpSnippet:c9,cpuKernelImpl:PK}),d9={kernelName:ei,backendName:"webgl",kernelFunc:p9};function h9(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;Tp(r,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a,c=1;k.assert(_.eitherStridesOrDilationsAreOne(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let u=_.computePool2DInfo(r.shape,s,i,c,o,l);if(u.filterWidth===1&&u.filterHeight===1&&k.arraysEqual(u.inShape,u.outShape))return Wn({inputs:{x:r},backend:n});let p=new Ep(u,"max",!1);return n.runWebGLProgram(p,[r],r.dtype)}var m9={kernelName:ti,backendName:"webgl",kernelFunc:h9};function f9(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:c}=a,u=[1,1,1],p=_.computePool3DInfo(r.shape,s,i,u,o,c,l),d=new Zv(p,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}var g9={kernelName:kc,backendName:"webgl",kernelFunc:f9},y9=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=s-1-e.padInfo.left,l=r*s-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},b9=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,u=o-1-e.padInfo.front,p=l-1-e.padInfo.top,d=c-1-e.padInfo.left,h=o*l*c-1;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${p}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function x9(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:l,pad:c,dimRoundingMode:u}=a,p=[1,1,1],d=_.computePool3DInfo(i.shape,o,l,p,c,u),h=new Zv(d,"max",!0),m=n.runWebGLProgram(h,[i],i.dtype),f=new b9(d),g=n.runWebGLProgram(f,[r,m],i.dtype);return n.disposeIntermediateTensorInfo(m),g}var v9={kernelName:ih,backendName:"webgl",kernelFunc:x9};function w9(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,o=s;Tp([s,i],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:p}=a,d=_.computePool2DInfo(o.shape,l,c,1,u,p),h=!0,m=new Ep(d,"max",h),f=n.runWebGLProgram(m,[o],o.dtype),g=new y9(d),y=n.runWebGLProgram(g,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),y}var k9={kernelName:sh,backendName:"webgl",kernelFunc:w9};function I9(e,t,n,a){let r=new Ep(n,"max",!1),s=a.runWebGLProgram(r,[e],"float32");r=new Ep(n,"max",!0,!0,t);let i=a.runWebGLProgram(r,[e],"float32");return[s,i]}var N9={kernelName:oh,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;k.assert(a.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`);let c=[1,1];k.assert(_.eitherStridesOrDilationsAreOne(s,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`);let u=_.computePool2DInfo(a.shape,r,s,c,i),[p,d]=I9(a,o,u,l);return[p,d]}};function T9(e,t,n,a){let r=k.sizeFromShape(t),s=k.sizeFromShape(e.shape)/r,i=xe({inputs:{x:e},attrs:{shape:[s,r]},backend:a}),o=eo(i,"float32","mean",a),l=xe({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),l}var S9={kernelName:ni,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{keepDims:r,axis:s}=t,i=n,o=a.shape.length,l=k.parseAxisParam(s,a.shape),c=l,u=_.getAxesPermutation(c,o),p=u!=null,d=i.shouldExecuteOnCPU([a]),h=[],m=a;if(p){if(d){let x=i.texData.get(m.dataId).values,v=new Array(o);for(let E=0;E<v.length;E++)v[E]=a.shape[u[E]];let N=Xv(x,a.shape,a.dtype,u,v);m=i.makeTensorInfo(v,a.dtype);let T=i.texData.get(m.dataId);T.values=N}else m=lf(a,u,i);h.push(m),c=_.getInnerMostAxes(c.length,o)}_.assertAxesAreInnerMostDims("sum",c,o);let[f,g]=_.computeOutAndReduceShapes(m.shape,c),y=f;r&&(y=_.expandShapeToKeepDim(f,l));let b=T9(m,g,y,i);for(let x of h)i.disposeIntermediateTensorInfo(x);return b}};function C9(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=k.parseAxisParam(s,r.shape),c=l,u=_.getAxesPermutation(c,o),p=r;u!=null&&(p=En({inputs:{x:r},backend:n,attrs:{perm:u}}),c=_.getInnerMostAxes(c.length,r.shape.length)),_.assertAxesAreInnerMostDims("min",c,o);let[d,h]=_.computeOutAndReduceShapes(p.shape,c),m=k.sizeFromShape(h),f=xe({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}}),g=eo(f,f.dtype,"min",n),y;if(i){let b=_.expandShapeToKeepDim(d,l);y=xe({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=xe({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(p),y}var E9={kernelName:ai,backendName:"webgl",kernelFunc:C9},_9=wS+`
  return min(a, b);
`,F9=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+sf+`
  return result;
`,A9=on({opSnippet:_9,packedOpSnippet:F9,cpuKernelImpl:OK}),$9={kernelName:ri,backendName:"webgl",kernelFunc:A9},D9=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((c,u)=>c[0]+e[u]+c[1]);let a=e.length,r=mt(a),s=t.map(c=>c[0]).join(","),i=t.map((c,u)=>c[0]+e[u]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),l=n==="reflect"?0:1;if(a===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${s});
      ${r} end = ${r}(${i});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${a}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}},M9=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,m)=>h[0]+e[m]+h[1]);let a=e.length,r=mt(a),s=t.map(h=>h[0]).join(","),i=t.map((h,m)=>h[0]+e[m]).join(","),o=yn("rc",a),l=yn("source",a),c=`${o[a-1]} < ${this.outputShape[a-1]}`,u=a===1?"source":`vec2(${l.slice(-2).join()})`,p=n==="reflect"?0:1,d="";if(a===1){let h=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${p};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${p};
        }
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${o[a-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
      `}else{let h=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${p}) +
                gte * ((end - 1) * 2 - source + ${p});
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${o[a-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
        rc = outputLoc;
        ${o[a-2]} += 1;
        if(${o[a-2]} < ${this.outputShape[a-2]}) {
          ${h}
          result[2] = getChannel(getX(${l.join()}), ${u});
          ${o[a-1]} += 1;
          if(${c}) {
            ${h}
            result[3] = getChannel(getX(${l.join()}), ${u});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${s});
      const ${r} end = ${r}(${i});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}},R9=({inputs:e,backend:t,attrs:n})=>{let{x:a}=e,{paddings:r,mode:s}=n,i=ee().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new M9(a.shape,r,s):new D9(a.shape,r,s);return t.runWebGLProgram(i,[a],a.dtype)},P9={kernelName:Ic,backendName:"webgl",kernelFunc:R9},O9=`if (b == 0.0) return NAN;
  return mod(a, b);`,L9=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+sf+`
  return result;
`,z9=on({opSnippet:O9,packedOpSnippet:L9}),B9={kernelName:ml,backendName:"webgl",kernelFunc:z9},W9=class{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`
      uniform float seed;

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.seedLoc==null&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}},V9=`
if (a == b) {
  return 1.0;
};
return a / b;`,U9=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,s2=on({opSnippet:V9,packedOpSnippet:U9,checkOutOfBounds:!0}),G9={kernelName:Hs,backendName:"webgl",kernelFunc:s2},i2="return a - b;",o2=on({opSnippet:i2,packedOpSnippet:i2,supportsComplex:!0,cpuKernelImpl:HK}),H9={kernelName:ki,backendName:"webgl",kernelFunc:o2};function l2(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=k.parseAxisParam([s],r.shape),o=r2({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=_.expandShapeToKeepDim(o.shape,i),c=xe({inputs:{x:o},backend:n,attrs:{shape:l}}),u=o2({inputs:{a:r,b:c},backend:n}),p=QS({inputs:{x:u},backend:n}),d=Jv({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),h=xe({inputs:{x:d},backend:n,attrs:{shape:l}}),m=s2({inputs:{a:p,b:h},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),m}var j9={kernelName:vi,backendName:"webgl",kernelFunc:l2};function q9(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=a,l=o?r:l2({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),c=l.shape[0],u=l.shape[1],p=new W9(c,u,s),d=p.getCustomSetupFunc(i),h=n.runWebGLProgram(p,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),h}var K9={kernelName:lh,backendName:"webgl",kernelFunc:q9},u2="return -x;";function X9(e){let{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){let s=n.texData.get(a.dataId),[i,o]=zK(s.values,a.shape,a.dtype);return n.makeTensorInfo(o,a.dtype,i)}let r;return ee().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Nu(a.shape,u2):r=new ys(a.shape,u2),n.runWebGLProgram(r,[a],a.dtype)}var Y9={kernelName:fl,backendName:"webgl",kernelFunc:X9},J9=Qa.nonMaxSuppressionV3Impl;function Z9(e){_.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=a,c=n.readSync(r.dataId),u=n.readSync(s.dataId),{selectedIndices:p}=J9(c,u,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var Q9={kernelName:yl,backendName:"webgl",kernelFunc:Z9},eQ=Qa.nonMaxSuppressionV4Impl;function tQ(e){_.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:c}=a,u=n.readSync(r.dataId),p=n.readSync(s.dataId),{selectedIndices:d,validOutputs:h}=eQ(u,p,i,o,l,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var nQ={kernelName:bl,backendName:"webgl",kernelFunc:tQ},aQ=Qa.nonMaxSuppressionV5Impl;function rQ(e){_.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:c}=a,u=n.readSync(r.dataId),p=n.readSync(s.dataId),d=i,h=o,m=l,f=c,{selectedIndices:g,selectedScores:y}=aQ(u,p,d,h,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var sQ={kernelName:xl,backendName:"webgl",kernelFunc:rQ},iQ=class{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${a}), float(${n}),
                      float(index == coords.y)));
      }
    `}},oQ=e=>{let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{depth:s,onValue:i,offValue:o}=a,l=k.sizeFromShape(r.shape),c=new iQ(l,s,i,o),u=xe({inputs:{x:r},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(c,[u],r.dtype);n.disposeIntermediateTensorInfo(u);let d=[...r.shape,s],h=xe({inputs:{x:p},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(p),h},lQ={kernelName:ii,backendName:"webgl",kernelFunc:oQ};function hf(e){let{inputs:t,backend:n}=e,{x:a}=t;if(a.dtype==="complex64"){let r=Fp({inputs:{input:a},backend:n}),s=hf({inputs:{x:r},backend:n}),i=df({inputs:{input:a},backend:n}),o=hf({inputs:{x:i},backend:n}),l=bs({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return nw({attrs:{shape:a.shape,dtype:a.dtype,value:a.dtype==="string"?"":0},backend:n})}var uQ={kernelName:Ol,backendName:"webgl",kernelFunc:hf};function c2(e){let{inputs:t,backend:n}=e,{x:a}=t;if(a.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(a.dtype==="complex64"){let r=Fp({inputs:{input:a},backend:n}),s=c2({inputs:{x:r},backend:n}),i=df({inputs:{input:a},backend:n}),o=hf({inputs:{x:i},backend:n}),l=bs({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return nw({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:n})}var cQ={kernelName:vl,backendName:"webgl",kernelFunc:c2};function pQ(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(t.length===1)return tw({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach(u=>{k.assertShapesMatch(s,u.shape,"All tensors passed to stack must have matching shapes"),k.assert(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(u=>{let p=tw({inputs:{input:u},backend:n,attrs:{dim:r}});return o.push(p),p}),c=US({inputs:l,backend:n,attrs:{axis:r}});return o.forEach(u=>n.disposeIntermediateTensorInfo(u)),c}var dQ={kernelName:wl,backendName:"webgl",kernelFunc:pQ},hQ=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((l,c)=>l[0]+e[c]+l[1]);let a=e.length,r=mt(a),s=t.map(l=>l[0]).join(","),i=t.map((l,c)=>l[0]+e[c]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);if(a===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(float(${n}));
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${s});
      ${r} end = ${r}(${i});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(float(${n}));
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}},mQ=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((m,f)=>m[0]+e[f]+m[1]);let a=e.length,r=mt(a),s=t.map(m=>m[0]).join(","),i=t.map((m,f)=>m[0]+e[f]).join(","),o=yn("rc",a),l=yn("source",a),c=`${o[a-1]} < ${this.outputShape[a-1]}`,u=a===1?"source":`vec2(${l.slice(-2).join()})`,p=[`${r} rc = outputLoc;`,`${o[a-1]} += 1;
       if(${c}) {
      `,a===1?"":`}
       rc = outputLoc;
       ${o[a-2]} += 1;
       if(${o[a-2]} < ${this.outputShape[a-2]}) {`,a===1?"":`  ${o[a-1]} += 1;
         if(${c}) {`],d=a===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let m=0,f=a===1?2:4;m<f;m++)h+=`
        ${p[m]}
        if (${d}) {
          result[${m}] = float(${n});
        } else {
          ${r} source = rc - start;
          result[${m}] = getChannel(getX(${l.join()}), ${u});
        }
      `;h+=a===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${s});
      const ${r} end = ${r}(${i});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},p2=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a,o=ee().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mQ(r.shape,s,i):new hQ(r.shape,s,i);return n.runWebGLProgram(o,[r],r.dtype)},fQ={kernelName:oi,backendName:"webgl",kernelFunc:p2},gQ=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,yQ=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+sf+`
  return result;
`,bQ=on({opSnippet:gQ,packedOpSnippet:yQ}),xQ={kernelName:li,backendName:"webgl",kernelFunc:bQ};function vQ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=[],c=k.parseAxisParam(s,r.shape),u=c,p=_.getAxesPermutation(u,o),d=r;p!=null&&(d=En({inputs:{x:r},backend:n,attrs:{perm:p}}),u=_.getInnerMostAxes(u.length,o),l.push(d)),_.assertAxesAreInnerMostDims("prod",u,o);let h;if(n.shouldExecuteOnCPU([d])){let m=n.texData.get(d.dataId).values,{outVals:f,outShape:g,outDtype:y}=BK(d.shape,d.dtype,m,u);h=n.makeTensorInfo(g,y,f)}else{let[m,f]=_.computeOutAndReduceShapes(d.shape,u),g=k.sizeFromShape(f),y=xe({inputs:{x:d},backend:n,attrs:{shape:[-1,g]}}),b=xh(r.dtype),x=eo(y,b,"prod",n);h=xe({inputs:{x},backend:n,attrs:{shape:m}}),l.push(y),l.push(x)}if(i){l.push(h);let m=_.expandShapeToKeepDim(h.shape,c);h=xe({inputs:{x:h},backend:n,attrs:{shape:m}})}return l.forEach(m=>n.disposeIntermediateTensorInfo(m)),h}var wQ={kernelName:kl,backendName:"webgl",kernelFunc:vQ},d2=e=>{let{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:i}=n,o=WK(a,r,s,i);return t.makeTensorInfo([o.length],i,o)},kQ={kernelName:Nc,backendName:"webgl",kernelFunc:d2},IQ="return 1.0 / x;",NQ=Ye({opSnippet:IQ}),TQ={kernelName:Il,backendName:"webgl",kernelFunc:NQ},SQ=Oa+`
  return (x < 0.0) ? 0.0 : x;
`,CQ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,EQ=Ye({opSnippet:SQ,packedOpSnippet:CQ}),_Q={kernelName:ci,backendName:"webgl",kernelFunc:EQ},FQ=Oa+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,AQ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,$Q=Ye({opSnippet:FQ,packedOpSnippet:AQ}),DQ={kernelName:di,backendName:"webgl",kernelFunc:$Q},MQ=class{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let c=[a&&t>1?i-1:i,a&&n>1?o-1:o],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],p;r?p="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/u[0]},
          ${c[1]/u[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},RQ=class{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let c=[a&&t>1?i-1:i,a&&n>1?o-1:o],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],p;r?p="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/u[0]},
          ${c[1]/u[1]},
          ${c[1]/u[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function PQ(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,c]=o,u=ee().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new RQ(r.shape,l,c,s,i):new MQ(r.shape,l,c,s,i);return n.runWebGLProgram(u,[r],"float32")}var OQ={kernelName:pi,backendName:"webgl",kernelFunc:PQ},LQ=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,a,r]=t,[,s,i]=e,o=[n&&s>1?a-1:a,n&&i>1?r-1:r],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/l[0],u=o[1]/l[1],p=1/c,d=1/u,h=Math.ceil(p)*2+2,m=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${u});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${h});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function zQ(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,o=new LQ(s.shape,r.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var BQ={kernelName:ph,backendName:"webgl",kernelFunc:zQ},WQ=class{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let c=[a&&t>1?i-1:i,a&&n>1?o-1:o],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],p=a?"0.5":"0.0",d;r?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/u[0]},
          ${c[1]/u[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};function VQ(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,c]=o,u=new WQ(r.shape,l,c,s,i);return n.runWebGLProgram(u,[r],r.dtype)}var UQ={kernelName:Tc,backendName:"webgl",kernelFunc:VQ},GQ=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,a,r]=t,[,s,i]=e,o=[n&&s>1?a-1:a,n&&i>1?r-1:r],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/l[0],u=o[1]/l[1],p=1/c,d=1/u,h=Math.ceil(p)*2+2,m=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${u});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${h});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${a}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function HQ(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,o=new GQ(s.shape,r.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var jQ={kernelName:ch,backendName:"webgl",kernelFunc:HQ},qQ=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let a=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,r=e.map((i,o)=>a(o)).join(","),s=mt(n);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}},KQ=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let a=yn("rc",n),r=`${a[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${a[n-2]} + 1 < ${this.outputShape[n-2]}`,i=mt(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(a.slice())};
          if(${r}){
            result.g = ${l(a.slice())};
          }
          if(${s}) {
            result.b = ${c(a.slice())};
            if(${r}) {
              result.a = ${u(a.slice())};
            }
          }
          setOutput(result);
        }
    `;function o(h){return p(h)}function l(h){return h[n-1]="("+h[n-1]+" + 1)",p(h)}function c(h){return h[n-2]="("+h[n-2]+" + 1)",p(h)}function u(h){return h[n-1]="("+h[n-1]+" + 1)",h[n-2]="("+h[n-2]+" + 1)",p(h)}function p(h){let m=e.map((y,b)=>d(b,h)),f=m.join(","),g=m.slice(-2).join(",");return`getChannel(getX(${f}), vec2(${g}))`}function d(h,m){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${m[h]} - 1`:`${m[h]}`}}};function XQ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,i=r.shape.length,o=k.parseAxisParam(s,r.shape);if(i===0)return Wn({inputs:{x:r},backend:n});let l=ee().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new KQ(r.shape,o):new qQ(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}var YQ={kernelName:hi,backendName:"webgl",kernelFunc:XQ},JQ=class{constructor(e,t,n,a){this.variableNames=["Image"],this.outputShape=[];let r=e[1],s=e[2],i=Math.sin(t).toFixed(3),o=Math.cos(t).toFixed(3);this.outputShape=e;let[l,c]=_.getImageCenter(a,r,s),u=l.toFixed(3),p=c.toFixed(3),d="";typeof n=="number"?d=`float outputValue = ${n.toFixed(2)};`:d=`
        vec3 fill = vec3(${n.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - ${u}) * ${o} - (float(y) - ${p}) * ${i};
          float coordYFloat = (float(x) - ${u}) * ${i} + (float(y) - ${p}) * ${o};
          int coordX = int(round(coordXFloat + ${u}));
          int coordY = int(round(coordYFloat + ${p}));
          ${d}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},ZQ={kernelName:zl,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,{radians:r,fillValue:s,center:i}=t,o=n,l=new JQ(a.shape,r,s,i);return o.runWebGLProgram(l,[a],a.dtype)}},QQ=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,eee=Ye({opSnippet:QQ}),tee={kernelName:mi,backendName:"webgl",kernelFunc:eee},nee="return inversesqrt(x);",aee=Ye({opSnippet:nee,cpuKernelImpl:VK}),ree={kernelName:fi,backendName:"webgl",kernelFunc:aee},h2=class{constructor(e,t,n,a,r,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let o=mt(r.length),l=mt(s.length),c="";n===1?c="i":n===2&&(c="i, j");let u=`getIndices(${c})`,p="";a===1?p="i":a===2&&(p="i, coords[1]");let d=`getUpdates(${p})`,h=t>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${r});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${u});
              flattenedIndex += index * ${h};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function see(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:o,numUpdates:l,sliceSize:c,strides:u,outputSize:p}=_.calculateShapes(s,r,i),d=[p/c,c];if(p===0)return n.makeTensorInfo(i,r.dtype);let h=xe({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),m=xe({inputs:{x:s},backend:n,attrs:{shape:[l,c]}}),f=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new h2(l,o,h.shape.length,m.shape.length,u,d),y=n.runWebGLProgram(g,[m,h,f],m.dtype),b=xe({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(f),b}var iee={kernelName:Tl,backendName:"webgl",kernelFunc:see},oee=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let a,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",a="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],l=[];for(let c=0;c<t.length;c++)l.push(`${i[c]}`),c<e&&o.push(`${i[c]}`);a=o.join(),r=l.join()}let s=mt(n);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${a});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};function lee(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=new oee(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[a,r,s],pa(r.dtype,s.dtype))}var uee={kernelName:Sl,backendName:"webgl",kernelFunc:lee},cee=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${_.SELU_SCALEALPHA};
  float scale = ${_.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,pee=Ye({opSnippet:cee}),dee={kernelName:Cl,backendName:"webgl",kernelFunc:pee},hee="return 1.0 / (1.0 + exp(-1.0 * x));",mee=Ye({opSnippet:hee}),fee={kernelName:yi,backendName:"webgl",kernelFunc:mee},gee=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,yee=Ye({opSnippet:gee}),bee={kernelName:Fl,backendName:"webgl",kernelFunc:yee},xee=SS+`
  return sin(x);
`,vee=Ye({opSnippet:xee}),wee={kernelName:gi,backendName:"webgl",kernelFunc:vee},kee=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Iee=Ye({opSnippet:kee}),Nee={kernelName:_l,backendName:"webgl",kernelFunc:Iee},Tee=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,See=Ye({opSnippet:Tee}),Cee={kernelName:Al,backendName:"webgl",kernelFunc:See},Eee=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;k.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((y,b)=>y*b),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<r.shape.length;++y)l.push([0,0]);let c=[],u=p2({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),p=_.getReshaped(u.shape,s,o,!1),d=_.getPermuted(p.length,s.length,!1),h=_.getReshapedPermuted(u.shape,s,o,!1),m=xe({inputs:{x:u},backend:n,attrs:{shape:p}}),f=En({inputs:{x:m},backend:n,attrs:{perm:d}}),g=xe({inputs:{x:f},backend:n,attrs:{shape:h}});return c.push(u),c.push(m),c.push(f),c.forEach(y=>n.disposeIntermediateTensorInfo(y)),g},_ee={kernelName:Sc,backendName:"webgl",kernelFunc:Eee};function Fee(e){let{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:c,strides:u,outputSize:p}=_.calculateShapes(s,r,o),d=!1,h=new h2(c,l,r.shape.length,s.shape.length,u,[p,1],d),m=n.runWebGLProgram(h,[s,r,i],s.dtype),f=xe({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),f}var Aee={kernelName:dh,backendName:"webgl",kernelFunc:Fee};function $ee(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=k.parseAxisParam(i,r.shape)[0],l=_.prepareSplitSize(r,s,o),c=r.shape.length,u=new Array(c).fill(0),p=r.shape.slice();return l.map(d=>{let h=[...p];h[o]=d;let m=_p({inputs:{x:r},backend:n,attrs:{begin:u,size:h}});return u[o]+=d,m})}var Dee={kernelName:$l,backendName:"webgl",kernelFunc:$ee},Mee="return sqrt(x);",Ree=Ye({opSnippet:Mee}),Pee={kernelName:bi,backendName:"webgl",kernelFunc:Ree},Oee="return x * x;",Lee=Ye({opSnippet:Oee}),zee={kernelName:Cc,backendName:"webgl",kernelFunc:Lee},m2="return (a - b) * (a - b);",Bee=on({opSnippet:m2,packedOpSnippet:m2}),Wee={kernelName:wi,backendName:"webgl",kernelFunc:Bee};function Vee({inputs:e,attrs:t,backend:n}){let{x:a}=e,r=Oa+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new ys(a.shape,r);return n.runWebGLProgram(s,[a],a.dtype)}var Uee={kernelName:Ll,backendName:"webgl",kernelFunc:Vee},Gee=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let a=n.length,r=mt(n.length),s=mt(n.length),i="";if(a===1)i="coords * strides + begin";else{let o=0;i=n.map((l,c)=>(o++,n.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${o-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function Hee(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:p,shrinkAxisMask:d}=a,{nonStrided:h,$begin:m,$strides:f,size:g,newShape:y,outShape:b}=hn.sliceInfo(r.shape,s,i,o,l,c,u,p,d),x=xe({inputs:{x:r},backend:n,attrs:{shape:y}}),v;if(h){let T=_p({inputs:{x},backend:n,attrs:{begin:m,size:g}});v=xe({inputs:{x:T},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(T)}else if(b.some(T=>T===0))v=n.makeTensorInfo(b,r.dtype,[]);else if(n.shouldExecuteOnCPU([x])){let T=n.texData.get(x.dataId).values,E=Le(x.shape,x.dtype,T),A=GK(b,E,f,m);v=n.makeTensorInfo(b,x.dtype,A.values)}else{let T=new Gee(m,f,b);v=n.runWebGLProgram(T,[x],x.dtype)}let N=xe({inputs:{x:v},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),N}var jee={kernelName:Dl,backendName:"webgl",kernelFunc:Hee},qee="return tan(x);",Kee=Ye({opSnippet:qee}),Xee={kernelName:Ml,backendName:"webgl",kernelFunc:Kee},Yee=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Jee=Ye({opSnippet:Yee}),Zee={kernelName:Ii,backendName:"webgl",kernelFunc:Jee},ete=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;let a=mt(this.rank),r=Qee(e);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function Qee(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<e.length;r++)a.push(`imod(${n[r]}, ${e[r]})`);return a.join()}function f2(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if(r.dtype==="string"){let o=n.readSync(r.dataId).map(u=>k.decodeString(u)),l=Le(r.shape,r.dtype,o),c=jK(l,s);return n.makeTensorInfo(c.shape,c.dtype,c.values)}let i=new ete(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}var tte={kernelName:Xr,backendName:"webgl",kernelFunc:f2};function nte(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a,o=n.readSync(r.dataId),[l,c]=qK(o,r.shape,r.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}var ate={kernelName:Rl,backendName:"webgl",kernelFunc:nte};function rte(e){let{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;Tp(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=a.readSync(s.dataId),{outputValues:o,outputShape:l,indices:c}=KK(i,r,s.shape,s.dtype);return[a.makeTensorInfo(l,s.dtype,o),a.makeTensorInfo([c.length],"int32",c)]}var ste={kernelName:hh,backendName:"webgl",kernelFunc:rte};function ite(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:s}=a;s<0&&(s+=r.shape.length);let i=r,o=i.shape.length,l=r.shape[s],c=new Array(o-1),u=0;for(let f=0;f<o;f++)f!==s&&(c[u++]=i.shape[f]);let p=[],d=new Array(o).fill(0),h=i.shape.slice();h[s]=1;let m=new Array(l);for(let f=0;f<m.length;f++){d[s]=f;let g=_p({inputs:{x:i},backend:n,attrs:{begin:d,size:h}}),y=xe({inputs:{x:g},backend:n,attrs:{shape:c}});m[f]=y,p.push(g)}return p.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var ote={kernelName:Pl,backendName:"webgl",kernelFunc:ite},lte=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,a=e.batchSize,r=e.inSize,s=e.numSegments,i=s*Math.ceil(r/n);this.outputShape=[a,i];let o="0.0",l="sumValue",c=Math.floor(n/4)*4,u=n%4,p=`
        sumValue += dot(values, segFilter);
    `,d="";r%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${o};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${p}
        }

        int inIdx = inOffset + ${c};
        if (${u===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${p}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${p}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${p}
        }
        setOutput(${l});
      }
    `}};function ute(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a,o=r.shape.length,l=[],c=0,u=_.getAxesPermutation([c],o),p=r;u!=null&&(p=En({inputs:{x:r},backend:n,attrs:{perm:u}}),l.push(p),c=_.getInnerMostAxes(1,o)[0]);let d=_.segment_util.computeOutShape(p.shape,c,i),h=k.sizeFromShape([p.shape[c]]),m=xe({inputs:{x:p},backend:n,attrs:{shape:[-1,h]}});l.push(m);let f=xh(r.dtype),g=(v,N,T,E,A)=>{let $=v.shape[0],O=v.shape[1],V=_.segment_util.segOpComputeOptimalWindowSize(O,A),W={windowSize:V,inSize:O,batchSize:$,numSegments:A},H=new lte(W,N),X=n.compileAndRun(H,[v,T],E);if(l.push(X),X.shape[1]===A)return X;let q=d2({backend:n,attrs:{start:0,stop:A,step:1,dtype:"float32"}}),K=f2({inputs:{x:q},backend:n,attrs:{reps:[O/V]}});return l.push(q),l.push(K),g(X,N,K,E,A)},y=g(m,"unsortedSegmentSum",s,f,i),b=xe({inputs:{x:y},backend:n,attrs:{shape:d}}),x=b;if(u!=null){l.push(b);let v=_.getUndoAxesPermutation(u);x=En({inputs:{x},backend:n,attrs:{perm:v}})}return l.forEach(v=>n.disposeIntermediateTensorInfo(v)),x}var cte={kernelName:Ec,backendName:"webgl",kernelFunc:ute},pte=[a9,i9,HX,qX,YX,QX,tY,rY,iY,lY,dY,mY,yY,vY,CY,IY,FY,MY,$Y,LY,BY,VY,jY,QY,t7,o7,u7,h7,g7,SX,v7,F7,$7,N7,P7,L7,M7,W7,G7,q7,X7,J7,eJ,iJ,lJ,nJ,pJ,mJ,bJ,kJ,SJ,_J,FJ,AJ,DJ,RJ,OJ,zJ,WJ,HJ,XJ,JJ,QJ,nZ,iZ,cZ,mZ,TX,gZ,x7,xZ,kZ,TZ,EX,_Z,DZ,RZ,VZ,zZ,jZ,XZ,QZ,l9,g9,m9,v9,k9,N9,d9,S9,E9,$9,P9,B9,K9,DX,Y9,Q9,nQ,sQ,a7,lQ,cQ,dQ,fQ,xQ,FX,wQ,kQ,r7,G9,TQ,DQ,_Q,RX,OQ,BQ,UQ,jQ,YQ,ZQ,tee,ree,iee,uee,dee,fee,bee,wee,Nee,JY,j9,Cee,_ee,Aee,Dee,Pee,zee,Wee,Uee,jee,H9,VX,Xee,Zee,tte,ate,UX,ste,ote,cte,uQ];for(let e of pte)Fc(e);var dte="2.8.3",hte={"tfjs-core":rk,"tfjs-backend-cpu":UG,"tfjs-backend-webgl":NX,"tfjs-data":HN,"tfjs-layers":Dm,"tfjs-converter":zN,tfjs:dte},Vn;(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(Vn||(Vn={}));var Ap;(function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu"})(Ap||(Ap={}));var g2;function mte(e){g2=e.wasm.cwrap(Ti,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function fte(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t;if(r.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:p}=a,d=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(s.dataId).id,m=0;if(i!=null){let A=n.dataIdMap.get(i.dataId);if(A.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${A.shape.length}.`);m=A.id}let f=o==null?0:n.dataIdMap.get(o.dataId).id,g=Ap[u];if(g==null)throw new Error(`${u} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?r.shape[2]:r.shape[1],b=c?s.shape[1]:s.shape[2],x=r.shape[0],v=n.makeOutput([x,y,b],r.dtype),N=n.dataIdMap.get(v.dataId).id,T=new Uint8Array(new Int32Array(r.shape).buffer),E=new Uint8Array(new Int32Array(s.shape).buffer);return g2(d,T,r.shape.length,h,E,s.shape.length,l,c,g,m,f,p||0,N),v}var gte={kernelName:Ti,backendName:"wasm",setupFunc:mte,kernelFunc:fte};function Un(e){let t;function n(r){t=r.wasm.cwrap(e,null,["number","number"])}function a(r){let{backend:s,inputs:{x:i}}=r,o=s.dataIdMap.get(i.dataId).id,l=s.makeOutput(i.shape,i.dtype),c=s.dataIdMap.get(l.dataId).id;return k.sizeFromShape(l.shape)===0||t(o,c),l}return{kernelName:e,backendName:"wasm",setupFunc:n,kernelFunc:a}}var yte=Un(Lo);function bn(e,t,n){let a;function r(i){a=i.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function s(i){let{backend:o,inputs:l}=i,{a:c,b:u}=l,p=o.dataIdMap.get(c.dataId).id,d=o.dataIdMap.get(u.dataId).id,h=n!=null?n:c.dtype,m=_.assertAndGetBroadcastShape(c.shape,u.shape),f=o.makeOutput(m,h);if(k.sizeFromShape(m)===0)return f;let g=new Uint8Array(new Int32Array(c.shape).buffer),y=new Uint8Array(new Int32Array(u.shape).buffer),b=o.dataIdMap.get(f.dataId).id,x=()=>a(p,g,c.shape.length,d,y,u.shape.length,Vn[c.dtype],b);if(t&&c.dtype==="float32")return x(),f;let v=_.getBroadcastDims(c.shape,m),N=_.getBroadcastDims(u.shape,m),T=v.every((A,$)=>A===$),E=N.every((A,$)=>A===$);if(T&&E)return x(),f;throw new Error(`Broadcasting along outer dims is not yet supported for ${c.dtype} ${e}.`)}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:s}}var bte=!0,xte=bn(qr,bte),y2;function vte(e){y2=e.wasm.cwrap(Rs,null,["array","number","number","number"])}function wte(e){let{inputs:t,backend:n}=e,a=n.makeOutput(t[0].shape,t[0].dtype);if(k.sizeFromShape(a.shape)===0)return a;let r=t.map(o=>n.dataIdMap.get(o.dataId).id),s=new Uint8Array(new Int32Array(r).buffer),i=n.dataIdMap.get(a.dataId).id;return y2(s,r.length,Vn[a.dtype],i),a}var kte={kernelName:Rs,backendName:"wasm",setupFunc:vte,kernelFunc:wte};function mf(e){let{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(a).set(r),a}var Ite={kernelName:il,backendName:"wasm",kernelFunc:mf},b2;function Nte(e){b2=e.wasm.cwrap(Ni,null,["number","array","number","number","number","array","number"])}function ff(e){let{inputs:t,backend:n,attrs:a}=e,[r,s]=Ste(t.x.shape,a.perm),i=!0;for(let m=0;m<s.length;m++)s[m]!==m&&(i=!1);let o=Tte(t.x.shape,a.perm),l={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(i){let m=mf({inputs:t,backend:n});return m.shape=o,m}let c=n.makeOutput(o,l.dtype),u=n.dataIdMap.get(l.dataId).id,p=n.dataIdMap.get(c.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),h=new Uint8Array(new Int32Array(l.shape).buffer);return b2(u,h,l.shape.length,Vn[l.dtype],p,d,s.length),c}function Tte(e,t){let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];return n}function Ste(e,t){let n=[],a=[];for(let r=0;r<e.length;++r)e[r]!==1&&n.push(e[r]),e[t[r]]!==1&&a.push(t[r]);for(let r=0;r<a.length;++r){let s=-1;for(let i=0;i<a.length;++i)a[i]>=r&&(s===-1||a[s]>a[i])&&(s=i);a[s]=r}return[n,a]}var Cte={kernelName:Ni,backendName:"wasm",kernelFunc:ff,setupFunc:Nte};function Eu(e,t,n){let a=e.shape,r=e.shape.length,s=k.parseAxisParam(t,a),i=s,o=_.getAxesPermutation(i,r),l=null,c=!1;if(o!=null){let u=new Array(r);for(let d=0;d<u.length;d++)u[d]=a[o[d]];i=_.getInnerMostAxes(i.length,r),l=ff({inputs:{x:e},attrs:{perm:o},backend:n});let p=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==p&&(c=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:c}}var x2;function Ete(e){x2=e.wasm.cwrap(Ps,null,["number","number","number","number","number"])}function _te(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r}=a,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=i,l=s,{transposed:c,axes:u,inputWasTransposed:p}=Eu(s,r,t);if(p){let y=t.dataIdMap.get(c.dataId).id;y!==i&&(l=c,o=y)}let d=l.shape.slice(0,-1),h=t.makeOutput(d,"int32"),m=t.dataIdMap.get(h.dataId).id,f=k.sizeFromShape(h.shape),g=l.shape[u[0]];return x2(o,Vn[l.dtype],f,g,m),p&&t.disposeData(c.dataId),h}var Fte={kernelName:Ps,backendName:"wasm",kernelFunc:_te,setupFunc:Ete},v2;function Ate(e){v2=e.wasm.cwrap(Os,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function $te(e){let{inputs:t,attrs:n,backend:a}=e,r=t.x,s=a.dataIdMap.get(r.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:c}=n,u=_.computePool2DInfo(r.shape,i,o,1,l,c),p=u.filterHeight,d=u.filterWidth,h=u.padInfo.top,m=u.padInfo.right,f=u.padInfo.bottom,g=u.padInfo.left,y=u.strideHeight,b=u.strideWidth,x=u.inChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);if(u.dilationWidth!==1||u.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${u.dilationHeight}, ${u.dilationWidth}].`);let v=a.makeOutput(u.outShape,"float32"),N=a.dataIdMap.get(v.dataId).id;return v2(s,r.shape[0],r.shape[1],r.shape[2],p,d,h,m,f,g,y,b,x,N),v}var Dte={kernelName:Os,backendName:"wasm",setupFunc:Ate,kernelFunc:$te};function La(e){let{inputs:t,attrs:n}=e,{x:a}=t,{shape:r}=n,s=k.sizeFromShape(a.shape),i=k.inferFromImplicitShape(r,s);return k.assert(s===k.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${a.shape}. New shape and old shape must have the same number of elements.`),{dataId:a.dataId,shape:i,dtype:a.dtype}}var Mte={kernelName:Nl,backendName:"wasm",kernelFunc:La},w2;function Rte(e){w2=e.wasm.cwrap(Ls,null,["number","array","number","number","array","number","number","number","number"])}function Pte(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;if(r.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=r.shape.length,c=s.shape.length,u=i?r.shape[l-2]:r.shape[l-1],p=o?s.shape[c-1]:s.shape[c-2],d=i?r.shape[l-1]:r.shape[l-2],h=o?s.shape[c-2]:s.shape[c-1],m=r.shape.slice(0,-2),f=s.shape.slice(0,-2),g=k.sizeFromShape(m),y=k.sizeFromShape(f),b=g===y||g===1||y===1;k.assert(l>=2&&c>=2&&b,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${f}).`);let x=(g>y?r.shape.slice(0,-2):s.shape.slice(0,-2)).concat([d,h]);k.assert(u===p,()=>`Error in matMul: inner shapes (${u}) and (${p}) of Tensors with shapes ${r.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let v=i?[g,u,d]:[g,d,u],N=o?[y,h,p]:[y,p,h],T=La({inputs:{x:r},backend:n,attrs:{shape:v}}),E=La({inputs:{x:s},backend:n,attrs:{shape:N}}),A=n.dataIdMap.get(T.dataId).id,$=n.dataIdMap.get(E.dataId).id,O=i?T.shape[2]:T.shape[1],V=o?E.shape[1]:E.shape[2],W=Math.max(g,y),H=n.makeOutput([W,O,V],T.dtype),X=n.dataIdMap.get(H.dataId).id,q=new Uint8Array(new Int32Array(T.shape).buffer),K=new Uint8Array(new Int32Array(E.shape).buffer);return w2(A,q,T.shape.length,$,K,E.shape.length,i,o,X),H.shape=x,H}var Ote={kernelName:Ls,backendName:"wasm",setupFunc:Rte,kernelFunc:Pte};function gf(e){let{inputs:{x:t},attrs:{dtype:n},backend:a}=e,r=a.makeOutput(t.shape,n),s=a.typedArrayFromHeap(t);return a.typedArrayFromHeap(r).set(s),r}var Lte={kernelName:zs,backendName:"wasm",kernelFunc:gf},k2;function zte(e){k2=e.wasm.cwrap(Kr,null,["number","number","number","number"])}function Bte(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=a,o=n.dataIdMap.get(r.dataId).id,l=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(l.dataId).id;return k2(o,s,i,c),l}var Wte={kernelName:Kr,backendName:"wasm",setupFunc:zte,kernelFunc:Bte};function I2(e){let{inputs:t,backend:n}=e,a=k.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=_.computeOutShape(t.map(h=>h.shape),a),s=t.filter(h=>k.sizeFromShape(h.shape)>0);if(s.length===1)return mf({inputs:{x:s[0]},backend:n});let i=n.makeOutput(r,t[0].dtype);if(k.sizeFromShape(r)===0)return i;let o=s.map(h=>h.shape);if(_.assertParamsConsistent(o,a),s[0].dtype==="string"){let h=s.map(x=>{let v=k.sizeFromShape(x.shape.slice(a));return La({inputs:{x},backend:n,attrs:{shape:[-1,v]}})}),m=h.map(x=>({vals:n.readSync(x.dataId),shape:x.shape}));r=_.computeOutShape(h.map(x=>x.shape),1);let f=h[0].shape[0]===1,g=Cv(m,r,t[0].dtype,f),y=_.computeOutShape(s.map(x=>x.shape),a);i.shape=y;let b=n.dataIdMap.get(i.dataId);return b.stringBytes=_.fromStringArrayToUint8(g),i}let l=k.sizeFromShape(s[0].shape.slice(0,a)),c=0,u=s.map(h=>{let m=k.sizeFromShape(h.shape.slice(a));return c+=m,m}),p=s.map(h=>n.typedArrayFromHeap(h)),d=n.typedArrayFromHeap(i);for(let h=0;h<l;h++){let m=h*c;for(let f=0;f<p.length;f++){let g=u[f],y=h*g,b=p[f].subarray(y,y+g);d.set(b,m),m+=g}}return i}var Vte={kernelName:qo,backendName:"wasm",kernelFunc:I2},N2;function Ute(e){N2=e.wasm.cwrap(Bs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Gte(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s}=t,i=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(s.dataId).id,{strides:l,dilations:c,pad:u,dimRoundingMode:p,dataFormat:d}=n,h=_.convertConv2DDataFormat(d),m=_.computeConv2DInfo(r.shape,s.shape,l,c,u,p,!1,h),f=m.filterHeight,g=m.filterWidth,y=m.padInfo.top,b=m.padInfo.right,x=m.padInfo.bottom,v=m.padInfo.left,N=m.dilationHeight,T=m.dilationWidth,E=m.strideHeight,A=m.strideWidth,$=m.inChannels,O=m.outChannels,V=m.padInfo.type==="SAME"?1:0;if(m.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${m.dataFormat}'. Please use 'channelsLast'.`);let W=a.makeOutput(m.outShape,"float32"),H=a.dataIdMap.get(W.dataId).id;return N2(i,r.shape[0],r.shape[1],r.shape[2],o,f,g,y,b,x,v,V,N,T,E,A,$,O,H),W}var Hte={kernelName:Bs,backendName:"wasm",setupFunc:Ute,kernelFunc:Gte},T2;function jte(e){T2=e.wasm.cwrap(Ws,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function qte(e){let{backend:t,inputs:n,attrs:a}=e,{dy:r,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:c,inputShape:u}=a,p=1,d=_.convertConv2DDataFormat(l),h=_.computeConv2DInfo(u,s.shape,i,p,o,c,!1,d),{batchSize:m,filterHeight:f,filterWidth:g,inChannels:y,inHeight:b,inWidth:x,outChannels:v,outHeight:N,outWidth:T,strideHeight:E,strideWidth:A}=h,$=f-1-h.padInfo.top,O=g-1-h.padInfo.left,V=h.dataFormat==="channelsLast",W=k.computeStrides(h.inShape),H=k.computeStrides(r.shape),[X,q,K]=k.computeStrides(s.shape),J=W[0],te=V?W[1]:W[2],Q=V?W[2]:1,ie=V?1:W[1],re=H[0],ae=V?H[1]:H[2],oe=V?H[2]:1,he=V?1:H[1],ce=t.makeOutput(h.inShape,"float32"),ge=t.dataIdMap.get(ce.dataId).id,be=t.dataIdMap.get(r.dataId).id,Ie=t.dataIdMap.get(s.dataId).id;return T2(be,Ie,m,f,g,b,x,y,N,T,v,E,A,$,O,X,q,K,J,te,Q,ie,re,ae,oe,he,ge),ce}var Kte={kernelName:Ws,backendName:"wasm",setupFunc:jte,kernelFunc:qte},Xte=Un(Vs),aw;(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(aw||(aw={}));var S2;function Yte(e){S2=e.wasm.cwrap(Xo,null,["number","number","number","number","array","number","number","number","number","number"])}function Jte(e){let{backend:t,inputs:n,attrs:a}=e,{method:r,extrapolationValue:s,cropSize:i}=a,{image:o,boxes:l,boxInd:c}=n,u=l.shape[0],[p,d]=i,h=[u,p,d,o.shape[3]],m=t.dataIdMap.get(o.dataId),f;o.dtype!=="float32"&&(f=gf({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));let g=m.id,y=t.dataIdMap.get(l.dataId).id,b=t.dataIdMap.get(c.dataId).id,x=t.makeOutput(h,"float32"),v=t.dataIdMap.get(x.dataId).id,N=new Uint8Array(new Int32Array(o.shape).buffer);return S2(g,y,b,u,N,p,d,aw[r],s,v),f!=null&&t.disposeData(f.dataId),x}var Zte={kernelName:Xo,backendName:"wasm",setupFunc:Yte,kernelFunc:Jte},C2;function Qte(e){C2=e.wasm.cwrap(Us,null,["number","number","number","number","number","number"])}function ene(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a,l=r.shape.length;k.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);let c=_.getAxesPermutation([s],l),u=r;c!==null&&(u=ff({inputs:{x:r},attrs:{perm:c},backend:n}));let p=_.getInnerMostAxes(1,l)[0];_.assertAxesAreInnerMostDims("cumsum",[p],l);let d=n.makeOutput(u.shape,u.dtype),h=u.shape[p],m=n.dataIdMap.get(u.dataId).id,f=n.dataIdMap.get(d.dataId).id;C2(m,i?1:0,o?1:0,h,f,Vn[r.dtype]);let g=d;if(c!==null){let y=_.getUndoAxesPermutation(c);g=ff({inputs:{x:d},attrs:{perm:y},backend:n}),n.disposeData(u.dataId),n.disposeData(d.dataId)}return g}var tne={kernelName:Us,backendName:"wasm",setupFunc:Qte,kernelFunc:ene},E2;function nne(e){E2=e.wasm.cwrap(Yo,null,["number","number","number","array","number","array","array","number","number"])}function ane(e){let{backend:t,inputs:n,attrs:a}=e,{x:r}=n,{blockSize:s,dataFormat:i}=a;k.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);let o=r.shape[0],l=i==="NHWC"?r.shape[1]:r.shape[2],c=i==="NHWC"?r.shape[2]:r.shape[3],u=i==="NHWC"?r.shape[3]:r.shape[1],p=l*s,d=c*s,h=u/(s*s),m=i==="NHWC"?[o,p,d,h]:[o,h,p,d],f=t.makeOutput(m,"float32"),g=t.dataIdMap.get(r.dataId).id,y=new Uint8Array(new Int32Array(k.computeStrides(r.shape)).buffer),b=new Uint8Array(new Int32Array(m).buffer),x=new Uint8Array(new Int32Array(k.computeStrides(m)).buffer),v=t.dataIdMap.get(f.dataId).id;return E2(g,s,i==="NHWC"?1:0,y,r.shape.length-1,b,x,m.length,v),f}var rne={kernelName:Yo,backendName:"wasm",setupFunc:nne,kernelFunc:ane},_2;function sne(e){_2=e.wasm.cwrap(Gs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ine(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s}=t,i=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(s.dataId).id,{strides:l,dilations:c,pad:u,dimRoundingMode:p}=n,d=c==null?[1,1]:c,h=_.computeConv2DInfo(r.shape,s.shape,l,d,u,p,!0),m=h.filterHeight,f=h.filterWidth,g=h.padInfo.top,y=h.padInfo.right,b=h.padInfo.bottom,x=h.padInfo.left,v=h.dilationHeight,N=h.dilationWidth,T=h.strideHeight,E=h.strideWidth,A=h.inChannels,$=h.outChannels,O=h.padInfo.type==="SAME"?1:0;if(h.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let V=a.makeOutput(h.outShape,"float32"),W=a.dataIdMap.get(V.dataId).id;return _2(i,r.shape[0],r.shape[1],r.shape[2],o,m,f,g,y,b,x,O,v,N,T,E,A,$,W),V}var one={kernelName:Gs,backendName:"wasm",setupFunc:sne,kernelFunc:ine},lne=!1,une=bn(Qo,lne,"bool"),cne=Un(js);function rw(e){let{inputs:t,attrs:n,backend:a}=e,{input:r}=t,{dim:s}=n,i=r.shape.length,o=r.shape.slice(),l=s;return s<0&&(k.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),La({inputs:{x:r},backend:a,attrs:{shape:o}})}var pne={kernelName:el,backendName:"wasm",kernelFunc:rw};function dne(e){let{attrs:{shape:t,value:n,dtype:a},backend:r}=e,s=r.makeOutput(t,a);return r.typedArrayFromHeap(s).fill(n),s}var hne={kernelName:bc,backendName:"wasm",kernelFunc:dne},F2;function mne(e){F2=e.wasm.cwrap(nl,null,["number","number","number","number","number","number"])}function fne(e){let{inputs:t,backend:n}=e,{image:a}=t,r=n.makeOutput(a.shape,a.dtype),s=n.dataIdMap.get(a.dataId).id,i=n.dataIdMap.get(r.dataId).id,[o,l,c,u]=a.shape;return F2(s,o,l,c,u,i),r}var gne={kernelName:nl,backendName:"wasm",kernelFunc:fne,setupFunc:mne},yne=Un(qs),bne=!1,xne=bn(Ks,bne),A2;function vne(e){A2=e.wasm.cwrap(Xs,null,["number","number","number","number","number","number","number"])}function wne(e){let{backend:t,inputs:n,attrs:a}=e,{varianceEpsilon:r}=a,{x:s,mean:i,variance:o,offset:l,scale:c}=n,u=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,h=l!=null?t.dataIdMap.get(l.dataId).id:0,m=c!=null?t.dataIdMap.get(c.dataId).id:0,f=t.makeOutput(s.shape,s.dtype);if(k.sizeFromShape(s.shape)===0)return f;let g=t.dataIdMap.get(f.dataId).id;return A2(u,p,d,h,m,r,g),f}var kne={kernelName:Xs,backendName:"wasm",setupFunc:vne,kernelFunc:wne},$2;function Ine(e){$2=e.wasm.cwrap(Si,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Nne(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:c,dilations:u,dataFormat:p,dimRoundingMode:d,activation:h,leakyreluAlpha:m}=n,f=_.computeConv2DInfo(r.shape,s.shape,l,u,c,d),g=Ap[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let y=a.dataIdMap.get(r.dataId).id,b=a.dataIdMap.get(s.dataId).id,x=f.outChannels,v=0;if(i!=null){let oe=a.dataIdMap.get(i.dataId);if(oe.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${oe.shape.length}.`);if(oe.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${oe.shape}) does not match the number of output channels (${x})`);v=oe.id}let N=f.filterHeight,T=f.filterWidth,E=f.padInfo.top,A=f.padInfo.right,$=f.padInfo.bottom,O=f.padInfo.left,V=f.dilationHeight,W=f.dilationWidth,H=f.strideHeight,X=f.strideWidth,q=f.inChannels,K=f.padInfo.type==="SAME"?1:0,J=f.batchSize,te=f.inHeight,Q=f.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let ie=a.makeOutput(f.outShape,"float32"),re=a.dataIdMap.get(ie.dataId).id,ae=o==null?0:a.dataIdMap.get(o.dataId).id;return $2(y,J,te,Q,b,N,T,v,E,A,$,O,K,V,W,H,X,q,x,g,ae,m||0,re),ie}var Tne={kernelName:Si,backendName:"wasm",setupFunc:Ine,kernelFunc:Nne},D2;function Sne(e){D2=e.wasm.cwrap(Ci,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Cne(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:c,dilations:u,dataFormat:p,dimRoundingMode:d,activation:h,leakyreluAlpha:m}=n,f=_.computeConv2DInfo(r.shape,s.shape,l,u,c,d,!0),g=Ap[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=a.dataIdMap.get(r.dataId).id,b=a.dataIdMap.get(s.dataId).id,x=f.outChannels,v=0;if(i!=null){let oe=a.dataIdMap.get(i.dataId);if(oe.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${oe.shape.length}.`);if(oe.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${oe.shape}) does not match the number of output channels (${x})`);v=oe.id}let N=f.filterHeight,T=f.filterWidth,E=f.padInfo.top,A=f.padInfo.right,$=f.padInfo.bottom,O=f.padInfo.left,V=f.dilationHeight,W=f.dilationWidth,H=f.strideHeight,X=f.strideWidth,q=f.inChannels,K=f.padInfo.type==="SAME"?1:0,J=f.batchSize,te=f.inHeight,Q=f.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let ie=a.makeOutput(f.outShape,"float32"),re=a.dataIdMap.get(ie.dataId).id,ae=o==null?0:a.dataIdMap.get(o.dataId).id;return D2(y,J,te,Q,b,N,T,v,E,A,$,O,K,V,W,H,X,q,x,g,ae,m||0,re),ie}var Ene={kernelName:Ci,backendName:"wasm",setupFunc:Sne,kernelFunc:Cne},M2;function _ne(e){M2=e.wasm.cwrap(rl,null,["number","number","number","number","number","number","array","number"])}function Fne(e){let{backend:t,inputs:n}=e,{params:a,indices:r}=n,[s,i,o,l]=_y.prepareAndValidate(a,r),c=t.makeOutput(s,a.dtype);if(i===0)return c;let u=r.shape,p=u[u.length-1],d=t.dataIdMap.get(a.dataId).id,h=t.dataIdMap.get(r.dataId).id,m=new Uint8Array(new Int32Array(l).buffer),f=t.dataIdMap.get(c.dataId).id;return M2(d,Vn[a.dtype],h,i,p,o,m,f),c}var Ane={kernelName:rl,backendName:"wasm",setupFunc:_ne,kernelFunc:Fne},R2;function $ne(e){R2=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Dne(e){let{backend:t,inputs:n,attrs:a}=e,{x:r,indices:s}=n,{axis:i,batchDims:o}=a,l=k.parseAxisParam(i,r.shape)[0],c=_.segment_util.collectGatherOpShapeInfo(r,s,l,o),u=La({inputs:{x:r},attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]},backend:t}),p=k.sizeFromShape(s.shape),d=La({inputs:{x:s},attrs:{shape:[c.batchSize,p/c.batchSize]},backend:t}),h=[c.batchSize,c.outerSize,p/c.batchSize,c.sliceSize],m=t.makeOutput(h,r.dtype);if(k.sizeFromShape(r.shape)===0)return m;let f=u.shape.length-1,g=t.dataIdMap.get(u.dataId).id,y=t.dataIdMap.get(d.dataId).id,b=t.dataIdMap.get(m.dataId).id,x=new Uint8Array(new Int32Array(k.computeStrides(u.shape)).buffer),v=new Uint8Array(new Int32Array(k.computeStrides(h)).buffer);return R2(g,Vn[r.dtype],x,f,y,c.batchSize,v,b),m.shape=c.outputShape,m}var Mne={kernelName:al,backendName:"wasm",setupFunc:$ne,kernelFunc:Dne},Rne=!1,Pne=bn(sl,Rne,"bool"),One=!1,Lne=bn(Ys,One,"bool"),P2;function zne(e){P2=e.wasm.cwrap(Js,null,["number","number","number"])}function Bne(e){let{inputs:{x:t},attrs:{alpha:n},backend:a}=e,r=a.dataIdMap.get(t.dataId).id,s=a.makeOutput(t.shape,t.dtype);if(k.sizeFromShape(t.shape)!==0){let i=a.dataIdMap.get(s.dataId).id;P2(r,n,i)}return s}var Wne={kernelName:Js,backendName:"wasm",setupFunc:zne,kernelFunc:Bne},Vne=!1,Une=bn(cl,Vne,"bool"),Gne=!1,Hne=bn(pl,Gne,"bool"),jne=Un(Zs),qne=!1,Kne=bn(hl,qne,"bool"),O2;function Xne(e){O2=e.wasm.cwrap(Qs,null,["number, number, number"])}function Yne(e){let{backend:t,inputs:n,attrs:a}=e,{reductionIndices:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:c,axes:u,originalAxes:p,inputWasTransposed:d}=Eu(i,r,t);if(d){let b=t.dataIdMap.get(c.dataId).id;l=c,o=b}let h=l.shape.length;_.assertAxesAreInnerMostDims("max",u,h);let[m,f]=_.computeOutAndReduceShapes(l.shape,u),g=k.sizeFromShape(f),y=t.makeOutput(m,i.dtype);if(k.sizeFromShape(l.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;O2(o,g,b)}if(d&&t.disposeData(c.dataId),s){let b=_.expandShapeToKeepDim(y.shape,p);y.shape=b}return y}var Jne={kernelName:Qs,backendName:"wasm",setupFunc:Xne,kernelFunc:Yne},Zne=!1,Qne=bn(ei,Zne),L2;function eae(e){L2=e.wasm.cwrap(ti,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function tae(e){let{inputs:t,attrs:n,backend:a}=e,r=t.x,s=a.dataIdMap.get(r.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:c}=n,u=_.computePool2DInfo(r.shape,i,o,1,l,c),p=u.filterHeight,d=u.filterWidth,h=u.padInfo.top,m=u.padInfo.right,f=u.padInfo.bottom,g=u.padInfo.left,y=u.dilationHeight,b=u.dilationWidth,x=u.strideHeight,v=u.strideWidth,N=u.inChannels,T=u.outChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);let E=a.makeOutput(u.outShape,"float32"),A=a.dataIdMap.get(E.dataId).id;return L2(s,r.shape[0],r.shape[1],r.shape[2],p,d,h,m,f,g,y,b,x,v,N,T,A),E}var nae={kernelName:ti,backendName:"wasm",setupFunc:eae,kernelFunc:tae},z2;function aae(e){z2=e.wasm.cwrap(ni,null,["number, number, number"])}function rae(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,c=i,{transposed:u,axes:p,originalAxes:d,inputWasTransposed:h}=Eu(i,r,t),m=p;if(h){let v=t.dataIdMap.get(u.dataId).id;v!==o&&(c=u,l=v,m=_.getInnerMostAxes(m.length,c.shape.length))}_.assertAxesAreInnerMostDims("mean",m,c.shape.length);let[f,g]=_.computeOutAndReduceShapes(c.shape,m),y=k.sizeFromShape(g),b=c;c.dtype!=="float32"&&(b=gf({backend:t,inputs:{x:c},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(f,"float32");if(k.sizeFromShape(c.shape)!==0){let v=t.dataIdMap.get(x.dataId).id;z2(l,y,v)}if(h&&t.disposeData(u.dataId),s){let v=_.expandShapeToKeepDim(x.shape,d);x.shape=v}return c.dtype!=="float32"&&t.disposeData(b.dataId),x}var sae={kernelName:ni,backendName:"wasm",setupFunc:aae,kernelFunc:rae},B2;function iae(e){B2=e.wasm.cwrap(ai,null,["number, number, number"])}function oae(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,c=i,{transposed:u,axes:p,originalAxes:d,inputWasTransposed:h}=Eu(i,r,t);if(h){let x=t.dataIdMap.get(u.dataId).id;x!==o&&(c=u,l=x)}let m=c.shape.length;_.assertAxesAreInnerMostDims("min",p,m);let[f,g]=_.computeOutAndReduceShapes(c.shape,p),y=k.sizeFromShape(g),b=t.makeOutput(f,c.dtype);if(k.sizeFromShape(c.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;B2(l,y,x)}if(h&&t.disposeData(u.dataId),s){let x=_.expandShapeToKeepDim(b.shape,d);b.shape=x}return b}var lae={kernelName:ai,backendName:"wasm",setupFunc:iae,kernelFunc:oae},uae=!1,cae=bn(ri,uae),pae=!0,dae=bn(si,pae),hae=Un(fl);function sw(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),a=n[0],r=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:a,selectedSize:r,pSelectedScores:s,pValidOutputs:i}}var W2;function mae(e){W2=e.wasm.cwrap(yl,"number",["number","number","number","number","number"])}function fae(e){let{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i}=a,{boxes:o,scores:l}=n,c=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(l.dataId).id,p=W2(c,u,s,r,i),{pSelectedIndices:d,selectedSize:h,pSelectedScores:m,pValidOutputs:f}=sw(t,p);return t.wasm._free(m),t.wasm._free(f),t.makeOutput([h],"int32",d)}var gae={kernelName:yl,backendName:"wasm",setupFunc:mae,kernelFunc:fae},V2;function yae(e){V2=e.wasm.cwrap(bl,"number",["number","number","number","number","number","bool"])}function bae(e){let{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=a,{boxes:l,scores:c}=n,u=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(c.dataId).id,d=V2(u,p,s,r,i,o),{pSelectedIndices:h,selectedSize:m,pSelectedScores:f,pValidOutputs:g}=sw(t,d);t.wasm._free(f);let y=t.makeOutput([m],"int32",h),b=t.makeOutput([],"int32",g);return[y,b]}var xae={kernelName:bl,backendName:"wasm",setupFunc:yae,kernelFunc:bae},U2;function vae(e){U2=e.wasm.cwrap(xl,"number",["number","number","number","number","number","number"])}function wae(e){let{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=a,{boxes:l,scores:c}=n,u=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(c.dataId).id,d=U2(u,p,s,r,i,o),{pSelectedIndices:h,selectedSize:m,pSelectedScores:f,pValidOutputs:g}=sw(t,d);t.wasm._free(g);let y=t.makeOutput([m],"int32",h),b=t.makeOutput([m],"float32",f);return[y,b]}var kae={kernelName:xl,backendName:"wasm",setupFunc:vae,kernelFunc:wae},Iae=!1,Nae=bn(gl,Iae,"bool"),G2;function Tae(e){G2=e.wasm.cwrap(ii,null,["number","number","number","number","number"])}function Sae(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{depth:s,onValue:i,offValue:o}=a,l=n.makeOutput([...r.shape,s],"int32"),c=n.dataIdMap.get(l.dataId).id,u=n.dataIdMap.get(r.dataId).id;return G2(u,s,i,o,c),l}var Cae={kernelName:ii,backendName:"wasm",setupFunc:Tae,kernelFunc:Sae};function Eae(e){let{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(1),a}var _ae={kernelName:vl,backendName:"wasm",kernelFunc:Eae};function Fae(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(t.length===1)return rw({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach(l=>{k.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),k.assert(i===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=t.map(l=>rw({inputs:{input:l},backend:n,attrs:{dim:r}}));return I2({inputs:o,backend:n,attrs:{axis:r}})}var Aae={kernelName:wl,backendName:"wasm",kernelFunc:Fae},H2;function $ae(e){H2=e.wasm.cwrap(oi,null,["number","array","number","number","array","array","number","number"])}function Dae(e){let{inputs:{x:t},backend:n,attrs:{paddings:a,constantValue:r}}=e,s=a.map((m,f)=>m[0]+t.shape[f]+m[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),u=a.map(m=>m[0]),p=a.map(m=>m[1]),d=new Uint8Array(new Int32Array(u).buffer),h=new Uint8Array(new Int32Array(p).buffer);return H2(i,c,t.shape.length,Vn[t.dtype],d,h,r,l),o}var Mae={kernelName:oi,backendName:"wasm",kernelFunc:Dae,setupFunc:$ae},Rae=!1,Pae=bn(li,Rae),j2;function Oae(e){j2=e.wasm.cwrap(ui,null,["number","number","number"])}function Lae(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=n.dataIdMap.get(a.dataId).id,i=n.dataIdMap.get(r.dataId).id,o=n.makeOutput(a.shape,"float32"),l=n.dataIdMap.get(o.dataId).id;return j2(s,i,l),o}var zae={kernelName:ui,backendName:"wasm",setupFunc:Oae,kernelFunc:Lae},q2;function Bae(e){q2=e.wasm.cwrap(kl,null,["number","number","number","number"])}function Wae(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,c=i,{transposed:u,axes:p,originalAxes:d,inputWasTransposed:h}=Eu(i,r,t),m=p;if(h){let x=t.dataIdMap.get(u.dataId).id;x!==o&&(c=u,l=x,m=_.getInnerMostAxes(m.length,c.shape.length))}_.assertAxesAreInnerMostDims("prod",m,c.shape.length);let[f,g]=_.computeOutAndReduceShapes(c.shape,m),y=k.sizeFromShape(g),b=t.makeOutput(f,c.dtype);if(k.sizeFromShape(c.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;q2(l,y,Vn[b.dtype],x)}if(h&&t.disposeData(u.dataId),s){let x=_.expandShapeToKeepDim(b.shape,d);b.shape=x}return b}var Vae={kernelName:kl,backendName:"wasm",setupFunc:Bae,kernelFunc:Wae},Uae=e=>{let{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:i}=n,o=Fv(a,r,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l},Gae={kernelName:Nc,backendName:"wasm",kernelFunc:Uae},Hae=!0,jae=bn(Hs,Hae),qae=Un(ci),Kae=Un(di),K2;function Xae(e){K2=e.wasm.cwrap(pi,null,["number","number","number","number","number","number","number","number","number","number"])}function Yae(e){let{backend:t,inputs:n,attrs:a}=e,{images:r}=n,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,c]=o,[u,p,d,h]=r.shape,m=[u,l,c,h],f=t.dataIdMap.get(r.dataId),g;f.dtype!=="float32"&&(g=gf({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(g.dataId));let y=f.id,b=t.makeOutput(m,"float32");if(k.sizeFromShape(r.shape)===0)return b;let x=t.dataIdMap.get(b.dataId).id;return K2(y,u,p,d,h,l,c,s?1:0,i?1:0,x),g!=null&&t.disposeData(g.dataId),b}var Jae={kernelName:pi,backendName:"wasm",setupFunc:Xae,kernelFunc:Yae},X2;function Zae(e){X2=e.wasm.cwrap(hi,null,["number","array","number","array","number","number"])}function Qae(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,i=k.parseAxisParam(s,r.shape);if(r.shape.length===0)return mf({inputs:{x:r},backend:n});let o=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(i).buffer),p=new Uint8Array(new Int32Array(r.shape).buffer);return X2(l,u,i.length,p,r.shape.length,c),La({inputs:{x:o},attrs:{shape:r.shape},backend:n})}var ere={kernelName:hi,backendName:"wasm",kernelFunc:Qae,setupFunc:Zae},Y2;function tre(e){Y2=e.wasm.cwrap(zl,null,["number","number","number","number","number","number","number","number","array","number","number"])}function nre(e){let{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{radians:s,fillValue:i,center:o}=a,l=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(l.dataId).id,[p,d,h,m]=r.shape,[f,g]=_.getImageCenter(o,d,h),y=i===0,b=255,x=typeof i=="number"?[i,i,i,y?0:b]:[...i,b],v=new Uint8Array(new Int32Array(x).buffer);return Y2(c,p,d,h,m,s,f,g,v,x.length,u),l}var are={kernelName:zl,backendName:"wasm",kernelFunc:nre,setupFunc:tre},rre=Un(mi),sre=Un(fi),J2;function ire(e){J2=e.wasm.cwrap(Tl,null,["number","number","number","number","number","number","array","number","number"])}function ore(e){let{backend:t,inputs:n,attrs:a}=e,{indices:r,updates:s}=n,{shape:i}=a,o=t.makeOutput(i,s.dtype);if(k.sizeFromShape(i)===0)return o;let{sliceRank:l,numUpdates:c,sliceSize:u,strides:p,outputSize:d}=Fy.calculateShapes(s,r,i),h=t.dataIdMap.get(r.dataId).id,m=t.dataIdMap.get(s.dataId).id,f=new Uint8Array(new Int32Array(p).buffer),g=t.dataIdMap.get(o.dataId).id;return J2(h,m,Vn[s.dtype],l,c,u,f,d,g),o}var lre={kernelName:Tl,backendName:"wasm",setupFunc:ire,kernelFunc:ore},Z2;function ure(e){Z2=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function cre(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=n.dataIdMap.get(a.dataId).id,o=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(s.dataId).id,c=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(c.dataId).id,p=a.shape.length,d=r.shape.length,h=p===0||p>1||d===1?1:k.sizeFromShape(r.shape.slice(1));return Z2(i,o,l,h,u),c}var pre={kernelName:Sl,backendName:"wasm",kernelFunc:cre,setupFunc:ure},Q2;function dre(e){Q2=e.wasm.cwrap(yi,null,["number","number"])}function hre(e){let{backend:t,inputs:{x:n}}=e,a=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(r.dataId).id;return k.sizeFromShape(r.shape)===0||Q2(a,s),r}var mre={kernelName:"Sigmoid",backendName:"wasm",setupFunc:dre,kernelFunc:hre},fre=Un(gi);function yf(e){let{inputs:{x:t},attrs:{begin:n,size:a},backend:r}=e,[s,i]=hn.parseSliceParams(t,n,a),o=hn.isSliceContinous(t.shape,s,i),l=r.readSync(t.dataId),c=r.makeOutput(i,t.dtype),u=k.computeStrides(t.shape),p=r.dataIdMap.get(c.dataId);if(o){let m=hn.computeFlatOffset(s,u);return t.dtype==="string"?p.stringBytes=l.slice(m,m+k.sizeFromShape(i)):r.typedArrayFromHeap(c).set(l.subarray(m,m+k.sizeFromShape(i))),c}if(t.dtype==="string"){let m=Xm(l,s,i,t.shape,t.dtype);return p.stringBytes=m,c}let d=r.typedArrayFromHeap(c),h=t.shape.length;if(h===2)gre(l,u[0],d,s,i);else if(h===3)yre(l,u[0],u[1],d,s,i);else if(h===4)bre(l,u[0],u[1],u[2],d,s,i);else{let m=Xm(l,s,i,t.shape,t.dtype);d.set(m)}return c}function gre(e,t,n,a,r){let s=0,i=a[0],o=a[1],l=i+r[0];for(let c=i;c<l;c++){let u=c*t+o;n.set(e.subarray(u,u+r[1]),s),s+=r[1]}}function yre(e,t,n,a,r,s){let i=0,o=r[0],l=r[1],c=r[2],u=o+s[0],p=l+s[1];for(let d=o;d<u;d++)for(let h=l;h<p;h++){let m=d*t+h*n+c;a.set(e.subarray(m,m+s[2]),i),i+=s[2]}}function bre(e,t,n,a,r,s,i){let o=0,l=s[0],c=s[1],u=s[2],p=l+i[0],d=c+i[1],h=u+i[2],m=s[3];for(let f=l;f<p;f++)for(let g=c;g<d;g++)for(let y=u;y<h;y++){let b=f*t+g*n+y*a+m;r.set(e.subarray(b,b+i[3]),o),o+=i[3]}}var xre={kernelName:El,backendName:"wasm",kernelFunc:yf},eC;function vre(e){eC=e.wasm.cwrap(vi,null,["number","number","number","number"])}function wre(e){let{backend:t,inputs:{logits:n},attrs:{dim:a}}=e,r=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[a],l=k.sizeFromShape(n.shape)/o;return k.sizeFromShape(s.shape)===0||eC(r,i,o,l),s}var kre={kernelName:vi,backendName:"wasm",setupFunc:vre,kernelFunc:wre};function Ire(e){let{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=n,o=k.parseAxisParam(i,r.shape)[0],l=_.prepareSplitSize(r,s,o),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(p=>{let d=[...u];d[o]=p;let h=yf({inputs:{x:r},attrs:{begin:c,size:d},backend:a});return c[o]+=p,h})}var Nre={kernelName:$l,backendName:"wasm",kernelFunc:Ire},Tre=Un(bi),Sre=Un(Cc),Cre=!0,Ere=bn(wi,Cre),tC;function _re(e){tC=e.wasm.cwrap(Dl,null,["number","array","number","array","array","array","array","array","number","number"])}function Fre(e){let{backend:t,inputs:n,attrs:a}=e,{x:r}=n,{begin:s,end:i,strides:o}=a;o==null&&(o=new Array(s.length));let{beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:p,shrinkAxisMask:d}=a,h=_.slice_util.maskToAxes(u);if(h.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(u!==0&&p!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(u!==0&&d!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let m=r.shape.length-s.length,f=_.slice_util.maskToAxes(p),g=r.shape.slice();f.forEach($=>{s[$]=0,i[$]=1,g.splice($,0,1)});let y=La({inputs:{x:r},attrs:{shape:g},backend:t}),{begin:b,end:x,strides:v}=_.slice_util.getNormalizedAxes(y.shape,h,m,s,i,o,l,c,u);s=b,i=x,o=v;let N=_.slice_util.maskToAxes(d);N.forEach($=>{i[$]=s[$]+1,o[$]=1});let T=_.slice_util.computeOutShape(s,i,o),E=T.filter(($,O)=>N.indexOf(O)===-1);if(o.every($=>$===1)){let $=yf({inputs:{x:r},attrs:{begin:s,size:T},backend:t});return La({inputs:{x:$},attrs:{shape:E},backend:t})}let A=t.makeOutput(E,"float32");if(!E.some($=>$===0)){let $=t.dataIdMap.get(y.dataId).id,O=new Uint8Array(new Int32Array(k.computeStrides(y.shape)).buffer),V=new Uint8Array(new Int32Array(s).buffer),W=new Uint8Array(new Int32Array(i).buffer),H=new Uint8Array(new Int32Array(o).buffer),X=new Uint8Array(new Int32Array(E).buffer),q=new Uint8Array(new Int32Array(k.computeStrides(E)).buffer),K=t.dataIdMap.get(A.dataId).id;tC($,O,y.shape.length,V,W,H,X,q,E.length,K)}return La({inputs:{x:A},attrs:{shape:E},backend:t})}var Are={kernelName:Dl,backendName:"wasm",setupFunc:_re,kernelFunc:Fre},$re=!0,Dre=bn(ki,$re),nC;function Mre(e){nC=e.wasm.cwrap(xi,null,["number, number, number"])}function Rre(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,c=i,{transposed:u,axes:p,originalAxes:d,inputWasTransposed:h}=Eu(i,r,t),m=p;if(h){let x=t.dataIdMap.get(u.dataId).id;x!==o&&(c=u,l=x,m=_.getInnerMostAxes(m.length,c.shape.length))}_.assertAxesAreInnerMostDims("sum",m,c.shape.length);let[f,g]=_.computeOutAndReduceShapes(c.shape,m),y=k.sizeFromShape(g),b=t.makeOutput(f,c.dtype);if(k.sizeFromShape(c.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;nC(l,y,x)}if(h&&t.disposeData(u.dataId),s){let x=_.expandShapeToKeepDim(b.shape,d);b.shape=x}return b}var Pre={kernelName:xi,backendName:"wasm",setupFunc:Mre,kernelFunc:Rre},Ore=Un(Ii),aC;function Lre(e){aC=e.wasm.cwrap(Xr,null,["number","array","number","array","number","number"])}function zre(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,s=n.dataIdMap.get(r.dataId).id,{reps:i}=a,o=new Array(r.shape.length);for(let d=0;d<o.length;d++)o[d]=r.shape[d]*i[d];let l=new Uint8Array(new Int32Array(r.shape).buffer),c=new Uint8Array(new Int32Array(o).buffer),u=n.makeOutput(o,r.dtype),p=n.dataIdMap.get(u.dataId).id;return aC(s,l,r.shape.length,c,o.length,Vn[u.dtype],p),u}var Bre={kernelName:Xr,backendName:"wasm",setupFunc:Lre,kernelFunc:zre},rC;function Wre(e){rC=e.wasm.cwrap(Rl,null,["number","array","number","number","number","bool","number","number"])}var Vre=({inputs:e,backend:t,attrs:n})=>{let{x:a}=e,{k:r,sorted:s}=n,i=t.dataIdMap.get(a.dataId).id,o=new Uint8Array(new Int32Array(a.shape).buffer),l=a.shape.slice();l[l.length-1]=r;let c=t.makeOutput(l,a.dtype),u=t.dataIdMap.get(c.dataId).id,p=t.makeOutput(l,"int32"),d=t.dataIdMap.get(p.dataId).id;return rC(i,o,a.shape.length,Vn[a.dtype],r,s,u,d),[c,p]},Ure={kernelName:Rl,backendName:"wasm",setupFunc:Wre,kernelFunc:Vre};function Gre(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:s}=a;s<0&&(s+=r.shape.length);let i=r.shape[s],o=r.shape.length,l=new Array(o-1),c=0;for(let h=0;h<o;h++)h!==s&&(l[c++]=r.shape[h]);let u=new Array(i),p=new Array(o).fill(0),d=r.shape.slice();d[s]=1;for(let h=0;h<u.length;h++)p[s]=h,u[h]=yf({inputs:{x:r},attrs:{begin:p,size:d},backend:n});return u.map(({dataId:h,dtype:m})=>({dataId:h,dtype:m,shape:l}))}var Hre={kernelName:Pl,backendName:"wasm",kernelFunc:Gre};function jre(e){let{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(0),a}var qre={kernelName:Ol,backendName:"wasm",kernelFunc:jre},Kre=[yte,xte,kte,Fte,Dte,Ote,Lte,Wte,Vte,Hte,Kte,Xte,Zte,tne,rne,one,une,cne,pne,hne,gne,yne,xne,gte,kne,Tne,Ene,Ane,Mne,Pne,Lne,Ite,Wne,Une,Hne,jne,Kne,Jne,Qne,nae,sae,lae,cae,dae,hae,gae,xae,kae,Nae,Cae,_ae,Aae,Mae,Pae,zae,Vae,Gae,jae,qae,Kae,Mte,Jae,ere,are,sre,rre,lre,pre,mre,fre,xre,kre,Nre,Tre,Sre,Ere,Are,Dre,Pre,Ore,Bre,Ure,Cte,Hre,qre];for(let e of Kre)Fc(e);var iw=ee();iw.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));iw.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(iw.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var sC=Ro(oF()),Xre='var threadInfoStruct=0;var selfThreadId=0;var parentThreadId=0;var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:selfThreadId})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["DYNAMIC_BASE"]=e.data.DYNAMIC_BASE;Module["DYNAMICTOP_PTR"]=e.data.DYNAMICTOP_PTR;Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}Module=WasmBackendModuleThreadedSimd(Module);postMessage({"cmd":"loaded"})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;threadInfoStruct=e.data.threadInfoStruct;Module["__register_pthread_ptr"](threadInfoStruct,0,0);selfThreadId=e.data.selfThreadId;parentThreadId=e.data.parentThreadId;var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["dynCall_ii"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){Atomics.store(Module["HEAPU32"],threadInfoStruct+4>>2,ex instanceof Module["ExitStatus"]?ex.status:-2);Atomics.store(Module["HEAPU32"],threadInfoStruct+0>>2,1);Module["_emscripten_futex_wake"](threadInfoStruct+0,2147483647);if(!(ex instanceof Module["ExitStatus"]))throw ex}}}else if(e.data.cmd==="cancel"){if(threadInfoStruct){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(threadInfoStruct){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}',Yre=Ro(lF()),iC=class extends uc{constructor(e){super();this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new Md(this,ns())}write(e,t,n){let a={};return this.move(a,e,t,n),a}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=k.now();return e(),{kernelMs:k.now()-t}}move(e,t,n,a){let r=this.dataIdNextNumber++;if(a==="string"){let l=t;this.dataIdMap.set(e,{id:r,stringBytes:l,shape:n,dtype:a,memoryOffset:null});return}let s=k.sizeFromShape(n),i=s*k.bytesPerElement(a),o=this.wasm._malloc(i);this.dataIdMap.set(e,{id:r,memoryOffset:o,shape:n,dtype:a}),this.wasm.tfjs.registerTensor(r,s,o),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),o)}async read(e){return this.readSync(e)}readSync(e){let{memoryOffset:t,dtype:n,shape:a,stringBytes:r}=this.dataIdMap.get(e);if(n==="string")return r;let s=this.wasm.HEAPU8.slice(t,t+k.sizeFromShape(a)*k.bytesPerElement(n));return Jre(s.buffer,n)}disposeData(e){let t=this.dataIdMap.get(e);this.wasm._free(t.memoryOffset),this.wasm.tfjs.disposeData(t.id),this.dataIdMap.delete(e)}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let a;if(n==null)a=this.write(null,e,t);else{a={};let r=this.dataIdNextNumber++;this.dataIdMap.set(a,{id:r,memoryOffset:n,shape:e,dtype:t});let s=k.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,s,n)}return{dataId:a,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let a=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),s=k.sizeFromShape(e);switch(t){case"float32":return new Float32Array(a,r,s);case"int32":return new Int32Array(a,r,s);case"bool":return new Uint8Array(a,r,s);default:throw new Error(`Unknown dtype ${t}`)}}};function Zre(e){return(t,n)=>(k.fetch(e,{credentials:"same-origin"}).then(a=>{a.ok||t.env.a(`failed to load wasm binary file at '${e}'`),a.arrayBuffer().then(r=>{WebAssembly.instantiate(r,t).then(s=>{n(s.instance)})})}),{})}function oC(e,t,n){if(bf!=null)return bf;let a="tfjs-backend-wasm.wasm";return e&&t?a="tfjs-backend-wasm-threaded-simd.wasm":e&&(a="tfjs-backend-wasm-simd.wasm"),$p!=null&&$p[a]!=null?$p[a]:n+a}async function Qre(){let[e,t]=await Promise.all([ee().getAsync("WASM_HAS_SIMD_SUPPORT"),ee().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,a)=>{let r={};r.locateFile=(l,c)=>{if(l.endsWith(".worker.js")){let u=Xre,p=new Blob([u],{type:"application/javascript"});return URL.createObjectURL(p)}return l.endsWith(".wasm")?oC(e,t,Dp!=null?Dp:c):c+l},ow&&(r.instantiateWasm=Zre(oC(e,t,Dp!=null?Dp:"")));let s;t&&e&&bf==null?(s=sC.default(r),s.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+sC.default.toString()],{type:"text/javascript"})):s=Yre.default(r);let i=null;s.tfjs={init:s.cwrap("init",null,[]),registerTensor:s.cwrap("register_tensor",null,["number","number","number"]),disposeData:s.cwrap("dispose_data",i,["number"]),dispose:s.cwrap("dispose",i,[])};let o=!1;s.onRuntimeInitialized=()=>{o=!0,Mp=!1,n({wasm:s})},s.onAbort=()=>{o||Mp||(Mp=!0,a({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))}})}function Jre(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var ese=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],bf=null,Dp=null,$p={},Mp=!1,ow=!1;function tse(e,t=!1){if(Pt("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Mp)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");bf=e,ow=t}function nse(e,t=!1){if(Mp)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")Dp=e;else{$p=e;let n=ese.filter(a=>$p[a]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}ow=t}var ase="2.8.3",rse=2;Sh("wasm",async()=>{let{wasm:e}=await Qre();return new iC(e)},rse);var Gf={};oc(Gf,{AnchorPosition:()=>ur,DrawBox:()=>Cf,DrawBoxOptions:()=>xw,DrawFaceLandmarks:()=>ww,DrawFaceLandmarksOptions:()=>vw,DrawTextField:()=>ws,DrawTextFieldOptions:()=>Rp,drawContour:()=>Dr,drawDetections:()=>hse,drawFaceExpressions:()=>mse,drawFaceLandmarks:()=>fse});function Dr(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach(({x:a,y:r},s)=>{let i=t[s];e.moveTo(i.x,i.y),e.lineTo(a,r)}),n){let a=t[t.length-1],r=t[0];if(!a||!r)return;e.moveTo(a.x,a.y),e.lineTo(r.x,r.y)}e.stroke()}var xf={};oc(xf,{computeReshapedDimensions:()=>cw,getCenterPoint:()=>ao,isDimensions:()=>wf,isEven:()=>vf,isFloat:()=>uw,isTensor:()=>to,isTensor1D:()=>sse,isTensor2D:()=>lw,isTensor3D:()=>Mr,isTensor4D:()=>sa,isValidNumber:()=>za,isValidProbablitiy:()=>_u,range:()=>or,round:()=>no});var cn=class{constructor(t,n){if(!za(t)||!za(n))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:t,height:n})}`);this._width=t,this._height=n}get width(){return this._width}get height(){return this._height}reverse(){return new cn(1/this.width,1/this.height)}};function to(e,t){return e instanceof z&&e.shape.length===t}function sse(e){return to(e,1)}function lw(e){return to(e,2)}function Mr(e){return to(e,3)}function sa(e){return to(e,4)}function uw(e){return e%1!=0}function vf(e){return e%2==0}function no(e,t=2){let n=10**t;return Math.floor(e*n)/n}function wf(e){return e&&e.width&&e.height}function cw({width:e,height:t},n){let a=n/Math.max(t,e);return new cn(Math.round(e*a),Math.round(t*a))}function ao(e){return e.reduce((t,n)=>t.add(n),new De(0,0)).div(new De(e.length,e.length))}function or(e,t,n){return Array(e).fill(0).map((a,r)=>t+r*n)}function za(e){return!!e&&e!==Infinity&&e!==-Infinity&&!Number.isNaN(e)||e===0}function _u(e){return za(e)&&e>=0&&e<=1}var De=class{constructor(t,n){this._x=t,this._y=n}get x(){return this._x}get y(){return this._y}add(t){return new De(this.x+t.x,this.y+t.y)}sub(t){return new De(this.x-t.x,this.y-t.y)}mul(t){return new De(this.x*t.x,this.y*t.y)}div(t){return new De(this.x/t.x,this.y/t.y)}abs(){return new De(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new De(Math.floor(this.x),Math.floor(this.y))}};var ot=class{static isRect(t){return!!t&&[t.x,t.y,t.width,t.height].every(za)}static assertIsValidBox(t,n,a=!1){if(!ot.isRect(t))throw new Error(`${n} - invalid box: ${JSON.stringify(t)}, expected object with properties x, y, width, height`);if(!a&&(t.width<0||t.height<0))throw new Error(`${n} - width (${t.width}) and height (${t.height}) must be positive numbers`)}constructor(t,n=!0){let a=t||{},r=[a.left,a.top,a.right,a.bottom].every(za),s=[a.x,a.y,a.width,a.height].every(za);if(!s&&!r)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(a)}`);let[i,o,l,c]=s?[a.x,a.y,a.width,a.height]:[a.left,a.top,a.right-a.left,a.bottom-a.top];ot.assertIsValidBox({x:i,y:o,width:l,height:c},"Box.constructor",n),this._x=i,this._y=o,this._width=l,this._height=c}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new De(this.left,this.top)}get topRight(){return new De(this.right,this.top)}get bottomLeft(){return new De(this.left,this.bottom)}get bottomRight(){return new De(this.right,this.bottom)}round(){let[t,n,a,r]=[this.x,this.y,this.width,this.height].map(s=>Math.round(s));return new ot({x:t,y:n,width:a,height:r})}floor(){let[t,n,a,r]=[this.x,this.y,this.width,this.height].map(s=>Math.floor(s));return new ot({x:t,y:n,width:a,height:r})}toSquare(){let{x:t,y:n,width:a,height:r}=this,s=Math.abs(a-r);return a<r&&(t-=s/2,a+=s),r<a&&(n-=s/2,r+=s),new ot({x:t,y:n,width:a,height:r})}rescale(t){let n=wf(t)?t.width:t,a=wf(t)?t.height:t;return new ot({x:this.x*n,y:this.y*a,width:this.width*n,height:this.height*a})}pad(t,n){let[a,r,s,i]=[this.x-t/2,this.y-n/2,this.width+t,this.height+n];return new ot({x:a,y:r,width:s,height:i})}clipAtImageBorders(t,n){let{x:a,y:r,right:s,bottom:i}=this,o=Math.max(a,0),l=Math.max(r,0),c=s-o,u=i-l,p=Math.min(c,t-o),d=Math.min(u,n-l);return new ot({x:o,y:l,width:p,height:d}).floor()}shift(t,n){let{width:a,height:r}=this,s=this.x+t,i=this.y+n;return new ot({x:s,y:i,width:a,height:r})}padAtBorders(t,n){let a=this.width+1,r=this.height+1,s=1,i=1,o=a,l=r,c=this.left,u=this.top,p=this.right,d=this.bottom;return p>n&&(o=-p+n+a,p=n),d>t&&(l=-d+t+r,d=t),c<1&&(l=2-c,c=1),u<1&&(l=2-u,u=1),{dy:i,edy:l,dx:s,edx:o,y:u,ey:d,x:c,ex:p,w:a,h:r}}calibrate(t){return new ot({left:this.left+t.left*this.width,top:this.top+t.top*this.height,right:this.right+t.right*this.width,bottom:this.bottom+t.bottom*this.height}).toSquare().round()}};var ro=class extends ot{constructor(t,n,a,r,s=!1){super({left:t,top:n,right:a,bottom:r},s)}};var Rr=class{constructor(t,n,a,r,s){this._imageDims=new cn(s.width,s.height),this._score=t,this._classScore=n,this._className=a,this._box=new ot(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new ot(this._box).rescale(this.imageDims.reverse())}forSize(t,n){return new Rr(this.score,this.classScore,this.className,this.relativeBox,{width:t,height:n})}};var yt=class extends Rr{constructor(t,n,a){super(t,t,"",n,a)}forSize(t,n){let{score:a,relativeBox:r,imageDims:s}=super.forSize(t,n);return new yt(a,r,s)}};function kf(e,t,n=!0){let a=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left)),r=Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top)),s=a*r;return n?s/(e.area+t.area-s):s/Math.min(e.area,t.area)}function If(e){let t=e.map(o=>o.x),n=e.map(o=>o.y),a=t.reduce((o,l)=>l<o?l:o,Infinity),r=n.reduce((o,l)=>l<o?l:o,Infinity),s=t.reduce((o,l)=>o<l?l:o,0),i=n.reduce((o,l)=>o<l?l:o,0);return new ro(a,r,s,i)}function Nf(e,t,n,a=!0){let r=t.map((i,o)=>({score:i,boxIndex:o})).sort((i,o)=>i.score-o.score).map(i=>i.boxIndex),s=[];for(;r.length>0;){let i=r.pop();s.push(i);let o=r,l=[];for(let c=0;c<o.length;c++){let u=o[c],p=e[i],d=e[u];l.push(kf(p,d,a))}r=r.filter((c,u)=>l[u]<=n)}return s}function va(e,t){return D(()=>{let[n,a,r]=t,s=Nn([...e.shape.slice(0,3),1],n,"float32"),i=Nn([...e.shape.slice(0,3),1],a,"float32"),o=Nn([...e.shape.slice(0,3),1],r,"float32"),l=Ze([s,i,o],3);return fe(e,l)})}function Tf(e,t=!1){return D(()=>{let[n,a]=e.shape.slice(1);if(n===a)return e;let r=Math.abs(n-a),s=Math.round(r*(t?.5:1)),i=n>a?2:1,o=d=>{let h=e.shape.slice();return h[i]=d,Nn(h,0,"float32")},l=o(s),c=r-l.shape[i],p=[t&&c?o(c):null,e,l].filter(d=>!!d).map(d=>pe(d,"float32"));return Ze(p,i)})}function lC(e){let t=e.slice();for(let n=t.length-1;n>0;n--){let a=Math.floor(Math.random()*(n+1)),r=t[n];t[n]=t[a],t[a]=r}return t}function Fu(e){return 1/(1+Math.exp(-e))}function uC(e){return Math.log(e/(1-e))}var so=class extends ot{constructor(t,n,a,r,s=!1){super({x:t,y:n,width:a,height:r},s)}};var ise=.5,ose=.43,lse=.45,Gn=class{constructor(t,n,a=new De(0,0)){let{width:r,height:s}=n;this._imgDims=new cn(r,s),this._shift=a,this._positions=t.map(i=>i.mul(new De(r,s)).add(a))}get shift(){return new De(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map(t=>t.sub(this._shift).div(new De(this.imageWidth,this.imageHeight)))}forSize(t,n){return new this.constructor(this.relativePositions,{width:t,height:n})}shiftBy(t,n){return new this.constructor(this.relativePositions,this._imgDims,new De(t,n))}shiftByPoint(t){return this.shiftBy(t.x,t.y)}align(t,n={}){if(t){let s=t instanceof yt?t.box.floor():new ot(t);return this.shiftBy(s.x,s.y).align(null,n)}let{useDlibAlignment:a,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...n};return a?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let t=this.getRefPointsForAlignment(),[n,a,r]=t,s=p=>r.sub(p).magnitude(),i=(s(n)+s(a))/2,o=Math.floor(i/lse),l=ao(t),c=Math.floor(Math.max(0,l.x-ise*o)),u=Math.floor(Math.max(0,l.y-ose*o));return new so(c,u,Math.min(o,this.imageWidth+c),Math.min(o,this.imageHeight+u))}alignMinBbox(t){let n=If(this.positions);return n.pad(n.width*t,n.height*t)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}};var pw=class extends Gn{getRefPointsForAlignment(){let t=this.positions;return[t[0],t[1],ao([t[3],t[4]])]}};var io=class extends Gn{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(ao)}};var Au=class{constructor(t,n){this._label=t,this._distance=n}get label(){return this._label}get distance(){return this._distance}toString(t=!0){return`${this.label}${t?` (${no(this.distance)})`:""}`}};var $u=class extends ot{static assertIsValidLabeledBox(t,n){if(ot.assertIsValidBox(t,n),!za(t.label))throw new Error(`${n} - expected property label (${t.label}) to be a number`)}constructor(t,n){super(t);this._label=n}get label(){return this._label}};var lr=class{constructor(t,n){if(typeof t!="string")throw new Error("LabeledFaceDescriptors - constructor expected label to be a string");if(!Array.isArray(n)||n.some(a=>!(a instanceof Float32Array)))throw new Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array");this._label=t,this._descriptors=n}get label(){return this._label}get descriptors(){return this._descriptors}toJSON(){return{label:this.label,descriptors:this.descriptors.map(t=>Array.from(t))}}static fromJSON(t){let n=t.descriptors.map(a=>new Float32Array(a));return new lr(t.label,n)}};var dw=class extends $u{static assertIsValidPredictedBox(t,n){if($u.assertIsValidLabeledBox(t,n),!_u(t.score)||!_u(t.classScore))throw new Error(`${n} - expected properties score (${t.score}) and (${t.classScore}) to be a number between [0, 1]`)}constructor(t,n,a,r){super(t,n);this._score=a,this._classScore=r}get score(){return this._score}get classScore(){return this._classScore}};function Ba(e){return e.detection instanceof yt}function xs(e,t){return{...e,...{detection:t}}}function hw(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");let t=()=>{throw new Error("readFile - filesystem not available for browser environment")};return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),fetch:e,readFile:t}}function Sf(e){let t="";if(!e)try{e=require("fs")}catch(a){t=a.toString()}return{readFile:e?a=>new Promise((r,s)=>{e.readFile(a,(i,o)=>i?s(i):r(o))}):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function mw(){let e=global.Canvas||global.HTMLCanvasElement,t=global.Image||global.HTMLImageElement,n=()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},a=()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},r=global.fetch,s=Sf();return{Canvas:e||class{},CanvasRenderingContext2D:global.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:global.ImageData||class{},Video:global.HTMLVideoElement||class{},createCanvasElement:n,createImageElement:a,fetch:r,...s}}function fw(){return typeof window=="object"&&typeof document!="undefined"&&typeof HTMLImageElement!="undefined"&&typeof HTMLCanvasElement!="undefined"&&typeof HTMLVideoElement!="undefined"&&typeof ImageData!="undefined"&&typeof CanvasRenderingContext2D!="undefined"}var gw=V_(pC()),tn;function pse(){if(!tn)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return tn}function yw(e){tn=e}function bw(){return fw()?yw(hw()):gw.isNodejs()?yw(mw()):null}function dse(e){if(tn||bw(),!tn)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=tn.Canvas,Image:n=tn.Image}=e;tn.Canvas=t,tn.Image=n,tn.createCanvasElement=e.createCanvasElement||(()=>new t),tn.createImageElement=e.createImageElement||(()=>new n),tn.ImageData=e.ImageData||tn.ImageData,tn.Video=e.Video||tn.Video,tn.fetch=e.fetch||tn.fetch,tn.readFile=e.readFile||tn.readFile}var st={getEnv:pse,setEnv:yw,initialize:bw,createBrowserEnv:hw,createFileSystem:Sf,createNodejsEnv:mw,monkeyPatch:dse,isBrowser:fw,isNodejs:gw.isNodejs};bw();function vs(e){return!st.isNodejs()&&typeof e=="string"?document.getElementById(e):e}function xn(e){let{Canvas:t,CanvasRenderingContext2D:n}=st.getEnv();if(e instanceof n)return e;let a=vs(e);if(!(a instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let r=a.getContext("2d");if(!r)throw new Error("resolveContext2d - canvas 2d context is null");return r}var ur;(function(e){e.TOP_LEFT="TOP_LEFT",e.TOP_RIGHT="TOP_RIGHT",e.BOTTOM_LEFT="BOTTOM_LEFT",e.BOTTOM_RIGHT="BOTTOM_RIGHT"})(ur||(ur={}));var Rp=class{constructor(t={}){let{anchorPosition:n,backgroundColor:a,fontColor:r,fontSize:s,fontStyle:i,padding:o}=t;this.anchorPosition=n||ur.TOP_LEFT,this.backgroundColor=a||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=s||14,this.fontStyle=i||"Georgia",this.padding=o||4}},ws=class{constructor(t,n,a={}){this.text=typeof t=="string"?[t]:t instanceof ws?t.text:t,this.anchor=n,this.options=new Rp(a)}measureWidth(t){let{padding:n}=this.options;return this.text.map(a=>t.measureText(a).width).reduce((a,r)=>a<r?r:a,0)+2*n}measureHeight(){let{fontSize:t,padding:n}=this.options;return this.text.length*t+2*n}getUpperLeft(t,n){let{anchorPosition:a}=this.options,r=a===ur.BOTTOM_RIGHT||a===ur.TOP_RIGHT,s=a===ur.BOTTOM_LEFT||a===ur.BOTTOM_RIGHT,i=this.measureWidth(t),o=this.measureHeight(),l=r?this.anchor.x-i:this.anchor.x,c=s?this.anchor.y-o:this.anchor.y;if(n){let{width:u,height:p}=n,d=Math.max(Math.min(l,u-i),0),h=Math.max(Math.min(c,p-o),0);return{x:d,y:h}}return{x:l,y:c}}draw(t){let n=vs(t),a=xn(n),{backgroundColor:r,fontColor:s,fontSize:i,fontStyle:o,padding:l}=this.options;a.font=`${i}px ${o}`;let c=this.measureWidth(a),u=this.measureHeight();a.fillStyle=r;let p=this.getUpperLeft(a,n);a.fillRect(p.x,p.y,c,u),a.fillStyle=s,this.text.forEach((d,h)=>{let m=l+p.x,f=l+p.y+(h+1)*i;a.fillText(d,m,f)})}};var xw=class{constructor(t={}){let{boxColor:n,lineWidth:a,label:r,drawLabelOptions:s}=t;this.boxColor=n||"rgba(0, 0, 255, 1)",this.lineWidth=a||2,this.label=r;let i={anchorPosition:ur.BOTTOM_LEFT,backgroundColor:this.boxColor};this.drawLabelOptions=new Rp({...i,...s})}},Cf=class{constructor(t,n={}){this.box=new ot(t),this.options=new xw(n)}draw(t){let n=xn(t),{boxColor:a,lineWidth:r}=this.options,{x:s,y:i,width:o,height:l}=this.box;n.strokeStyle=a,n.lineWidth=r,n.strokeRect(s,i,o,l);let{label:c}=this.options;c&&new ws([c],{x:s-r/2,y:i},this.options.drawLabelOptions).draw(t)}};function hse(e,t){(Array.isArray(t)?t:[t]).forEach(a=>{let r=a instanceof yt?a.score:Ba(a)?a.detection.score:void 0,s=a instanceof yt?a.box:Ba(a)?a.detection.box:new ot(a),i=r?`${no(r)}`:void 0;new Cf(s,{label:i}).draw(e)})}function Du(e){let{Image:t,Video:n}=st.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function Ef(e){return new Promise((t,n)=>{if(e instanceof st.getEnv().Canvas||Du(e))return t(null);function a(s){!s.currentTarget||(s.currentTarget.removeEventListener("load",r),s.currentTarget.removeEventListener("error",a),n(s))}function r(s){!s.currentTarget||(s.currentTarget.removeEventListener("load",r),s.currentTarget.removeEventListener("error",a),t(s))}e.addEventListener("load",r),e.addEventListener("error",a)})}function _f(e){return new Promise((t,n)=>{e instanceof Blob||n(new Error("bufferToImage - expected buf to be of type: Blob"));let a=new FileReader;a.onload=()=>{typeof a.result!="string"&&n(new Error("bufferToImage - expected reader.result to be a string, in onload"));let r=st.getEnv().createImageElement();r.onload=()=>t(r),r.onerror=n,r.src=a.result},a.onerror=n,a.readAsDataURL(e)})}function ks(e){let{Image:t,Video:n}=st.getEnv();return e instanceof t?new cn(e.naturalWidth,e.naturalHeight):e instanceof n?new cn(e.videoWidth,e.videoHeight):new cn(e.width,e.height)}function oo({width:e,height:t}){let{createCanvasElement:n}=st.getEnv(),a=n();return a.width=e,a.height=t,a}function Mu(e,t){let{ImageData:n}=st.getEnv();if(!(e instanceof n)&&!Du(e))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:a,height:r}=t||ks(e),s=oo({width:a,height:r});return e instanceof n?xn(s).putImageData(e,0,0):xn(s).drawImage(e,0,0,a,r),s}async function Ff(e,t){let n=t||st.getEnv().createCanvasElement(),[a,r,s]=e.shape.slice(sa(e)?1:0),i=D(()=>e.as3D(a,r,s).toInt());return await Ai.toPixels(i,n),i.dispose(),n}function Pp(e){let{Image:t,Canvas:n,Video:a}=st.getEnv();return e instanceof t||e instanceof n||e instanceof a}function Af(e,t,n=!1){let{Image:a,Canvas:r}=st.getEnv();if(!(e instanceof a||e instanceof r))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");let s=ks(e),i=t/Math.max(s.height,s.width),o=i*s.width,l=i*s.height,c=oo({width:t,height:t}),u=e instanceof r?e:Mu(e),p=Math.abs(o-l)/2,d=n&&o<l?p:0,h=n&&l<o?p:0;return xn(c).drawImage(u,d,h,o,l),c}var cr=class{constructor(t,n=!1){this._imageTensors=[];this._canvases=[];this._treatAsBatchInput=!1;this._inputDimensions=[];if(!Array.isArray(t))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${t}`);this._treatAsBatchInput=n,this._batchSize=t.length,t.forEach((a,r)=>{if(Mr(a)){this._imageTensors[r]=a,this._inputDimensions[r]=a.shape;return}if(sa(a)){let i=a.shape[0];if(i!==1)throw new Error(`NetInput - tf.Tensor4D with batchSize ${i} passed, but not supported in input array`);this._imageTensors[r]=a,this._inputDimensions[r]=a.shape.slice(1);return}let s=a instanceof st.getEnv().Canvas?a:Mu(a);this._canvases[r]=s,this._inputDimensions[r]=[s.height,s.width,3]})}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return or(this.batchSize,0,1).map((t,n)=>this.getReshapedInputDimensions(n))}getInput(t){return this.canvases[t]||this.imageTensors[t]}getInputDimensions(t){return this._inputDimensions[t]}getInputHeight(t){return this._inputDimensions[t][0]}getInputWidth(t){return this._inputDimensions[t][1]}getReshapedInputDimensions(t){if(typeof this.inputSize!="number")throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");let n=this.getInputWidth(t),a=this.getInputHeight(t);return cw({width:n,height:a},this.inputSize)}toBatchTensor(t,n=!0){return this._inputSize=t,D(()=>{let a=or(this.batchSize,0,1).map(s=>{let i=this.getInput(s);if(i instanceof z){let o=sa(i)?i:i.expandDims();return o=Tf(o,n),(o.shape[1]!==t||o.shape[2]!==t)&&(o=Za.resizeBilinear(o,[t,t])),o.as3D(t,t,3)}if(i instanceof st.getEnv().Canvas)return Ai.fromPixels(Af(i,t,n));throw new Error(`toBatchTensor - at batchIdx ${s}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${i}`)});return Mt(a.map(s=>pe(s,"float32"))).as4D(this.batchSize,t,t,3)})}};async function ft(e){if(e instanceof cr)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=r=>Array.isArray(e)?` at input index ${r}:`:"",a=t.map(vs);return a.forEach((r,s)=>{if(!Pp(r)&&!Mr(r)&&!sa(r))throw typeof t[s]=="string"?new Error(`toNetInput -${n(s)} string passed, but could not resolve HTMLElement for element id ${t[s]}`):new Error(`toNetInput -${n(s)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(sa(r)){let i=r.shape[0];if(i!==1)throw new Error(`toNetInput -${n(s)} tf.Tensor4D with batchSize ${i} passed, but not supported in input array`)}}),await Promise.all(a.map(r=>Pp(r)&&Ef(r))),new cr(a,Array.isArray(e))}async function lo(e,t){let{Canvas:n}=st.getEnv(),a=e;if(!(e instanceof n)){let i=await ft(e);if(i.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let o=i.getInput(0);a=o instanceof n?o:await Ff(o)}let r=xn(a);return t.map(i=>i instanceof yt?i.forSize(a.width,a.height).box.floor():i).map(i=>i.clipAtImageBorders(a.width,a.height)).map(({x:i,y:o,width:l,height:c})=>{let u=oo({width:l,height:c});return xn(u).putImageData(r.getImageData(i,o,l,c),0,0),u})}async function uo(e,t){if(!Mr(e)&&!sa(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(sa(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return D(()=>{let[n,a,r]=e.shape.slice(sa(e)?1:0);return t.map(o=>o instanceof yt?o.forSize(a,n).box:o).map(o=>o.clipAtImageBorders(a,n)).map(({x:o,y:l,width:c,height:u})=>eu(e.as3D(n,a,r),[l,o,0],[u,c,r]))})}async function Is(e,t){let{fetch:n}=st.getEnv(),a=await n(e,t);if(!(a.status<400))throw new Error(`failed to fetch: (${a.status}) ${a.statusText}, from url: ${a.url}`);return a}async function dC(e){let t=await Is(e),n=await t.blob();if(!n.type.startsWith("image/"))throw new Error(`fetchImage - expected blob type to be of type image/*, instead have: ${n.type}, for url: ${t.url}`);return _f(n)}async function $f(e){return(await Is(e)).json()}async function hC(e){return new Float32Array(await(await Is(e)).arrayBuffer())}function Df(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if(e==="/")return{modelBaseUri:"/",manifestUri:`/${n}`};let a=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"";e=e.replace(a,"");let r=e.split("/").filter(o=>o),s=e.endsWith(".json")?r[r.length-1]:n,i=a+(e.endsWith(".json")?r.slice(0,r.length-1):r).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:i==="/"?`/${s}`:`${i}/${s}`}}async function Mf(e,t){let{manifestUri:n,modelBaseUri:a}=Df(e,t),r=await $f(n);return Kt.loadWeights(r,a)}function mC(e,t,n=!1){let{width:a,height:r}=n?ks(t):t;return e.width=a,e.height=r,{width:a,height:r}}var nn=class{constructor(){this._params=void 0;this._paramMappings=[]}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(t){let{obj:n,objProp:a}=this.traversePropertyPath(t);return n[a]}reassignParamFromPath(t,n){let{obj:a,objProp:r}=this.traversePropertyPath(t);a[r].dispose(),a[r]=n}getParamList(){return this._paramMappings.map(({paramPath:t})=>({path:t,tensor:this.getParamFromPath(t)}))}getTrainableParams(){return this.getParamList().filter(t=>t.tensor instanceof Yr)}getFrozenParams(){return this.getParamList().filter(t=>!(t.tensor instanceof Yr))}variable(){this.getFrozenParams().forEach(({path:t,tensor:n})=>{this.reassignParamFromPath(t,n.variable())})}freeze(){this.getTrainableParams().forEach(({path:t,tensor:n})=>{let a=Yn(n.dataSync());n.dispose(),this.reassignParamFromPath(t,a)})}dispose(t=!0){this.getParamList().forEach(n=>{if(t&&n.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${n.path}`);n.tensor.dispose()}),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map(({tensor:t})=>Array.from(t.dataSync())).reduce((t,n)=>t.concat(n)))}async load(t){if(t instanceof Float32Array){this.extractWeights(t);return}await this.loadFromUri(t)}async loadFromUri(t){if(t&&typeof t!="string")throw new Error(`${this._name}.loadFromUri - expected model uri`);let n=await Mf(t,this.getDefaultModelName());this.loadFromWeightMap(n)}async loadFromDisk(t){if(t&&typeof t!="string")throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:n}=st.getEnv(),{manifestUri:a,modelBaseUri:r}=Df(t,this.getDefaultModelName()),s=c=>Promise.all(c.map(u=>n(u).then(p=>p.buffer))),i=Kt.weightsLoaderFactory(s),o=JSON.parse((await n(a)).toString()),l=await i(o,r);this.loadFromWeightMap(l)}loadFromWeightMap(t){let{paramMappings:n,params:a}=this.extractParamsFromWeigthMap(t);this._paramMappings=n,this._params=a}extractWeights(t){let{paramMappings:n,params:a}=this.extractParams(t);this._paramMappings=n,this._params=a}traversePropertyPath(t){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let n=t.split("/").reduce((s,i)=>{if(!s.nextObj.hasOwnProperty(i))throw new Error(`traversePropertyPath - object does not have property ${i}, for path ${t}`);return{obj:s.nextObj,objProp:i,nextObj:s.nextObj[i]}},{nextObj:this.params}),{obj:a,objProp:r}=n;if(!a||!r||!(a[r]instanceof z))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${t}`);return{obj:a,objProp:r}}};function _n(e,t,n){return D(()=>{let a=Oi(e,t.depthwise_filter,t.pointwise_filter,n,"same");return a=Z(a,t.bias),a})}function Rf(e,t,n=!1){return D(()=>{let a=Xe(n?Z($t(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):_n(e,t.conv0,[2,2])),r=_n(a,t.conv1,[1,1]),s=Xe(Z(a,r)),i=_n(s,t.conv2,[1,1]);return Xe(Z(a,Z(r,i)))})}function Op(e,t,n=!1,a=!0){return D(()=>{let r=Xe(n?Z($t(e,t.conv0.filters,a?[2,2]:[1,1],"same"),t.conv0.bias):_n(e,t.conv0,a?[2,2]:[1,1])),s=_n(r,t.conv1,[1,1]),i=Xe(Z(r,s)),o=_n(i,t.conv2,[1,1]),l=Xe(Z(r,Z(s,o))),c=_n(l,t.conv3,[1,1]);return Xe(Z(r,Z(s,Z(o,c))))})}function co(e,t,n="same",a=!1){return D(()=>{let r=Z($t(e,t.filters,[1,1],n),t.bias);return a?Xe(r):r})}function vn(e,t){Object.keys(e).forEach(n=>{t.some(a=>a.originalPath===n)||e[n].dispose()})}function Ru(e,t){return(n,a,r,s)=>{let i=_a(e(n*a*r*r),[r,r,n,a]),o=tt(e(a));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function Pf(e,t){return(n,a,r)=>{let s=Ea(e(n*a),[n,a]),i=tt(e(a));return t.push({paramPath:`${r}/weights`},{paramPath:`${r}/bias`}),{weights:s,bias:i}}}var Of=class{constructor(t,n,a){this.depthwise_filter=t;this.pointwise_filter=n;this.bias=a}};function Pu(e,t){return(n,a,r)=>{let s=_a(e(3*3*n),[3,3,n,1]),i=_a(e(n*a),[1,1,n,a]),o=tt(e(a));return t.push({paramPath:`${r}/depthwise_filter`},{paramPath:`${r}/pointwise_filter`},{paramPath:`${r}/bias`}),new Of(s,i,o)}}function Ou(e){return t=>{let n=e(`${t}/depthwise_filter`,4),a=e(`${t}/pointwise_filter`,4),r=e(`${t}/bias`,1);return new Of(n,a,r)}}function Hn(e,t){return(n,a,r)=>{let s=e[n];if(!to(s,a))throw new Error(`expected weightMap[${n}] to be a Tensor${a}D, instead have ${s}`);return t.push({originalPath:n,paramPath:r||n}),s}}function wn(e){let t=e;function n(r){let s=t.slice(0,r);return t=t.slice(r),s}function a(){return t}return{extractWeights:n,getRemainingWeights:a}}function Lf(e,t){let n=Ru(e,t),a=Pu(e,t);function r(i,o,l,c=!1){let u=c?n(i,o,3,`${l}/conv0`):a(i,o,`${l}/conv0`),p=a(o,o,`${l}/conv1`),d=a(o,o,`${l}/conv2`);return{conv0:u,conv1:p,conv2:d}}function s(i,o,l,c=!1){let{conv0:u,conv1:p,conv2:d}=r(i,o,l,c),h=a(o,o,`${l}/conv3`);return{conv0:u,conv1:p,conv2:d,conv3:h}}return{extractDenseBlock3Params:r,extractDenseBlock4Params:s}}function fC(e){let t=[],{extractWeights:n,getRemainingWeights:a}=wn(e),{extractDenseBlock4Params:r}=Lf(n,t),s=r(3,32,"dense0",!0),i=r(32,64,"dense1"),o=r(64,128,"dense2"),l=r(128,256,"dense3");if(a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:l}}}function zf(e){return t=>{let n=e(`${t}/filters`,4),a=e(`${t}/bias`,1);return{filters:n,bias:a}}}function Bf(e,t){let n=Hn(e,t),a=zf(n),r=Ou(n);function s(o,l=!1){let c=l?a(`${o}/conv0`):r(`${o}/conv0`),u=r(`${o}/conv1`),p=r(`${o}/conv2`);return{conv0:c,conv1:u,conv2:p}}function i(o,l=!1){let c=l?a(`${o}/conv0`):r(`${o}/conv0`),u=r(`${o}/conv1`),p=r(`${o}/conv2`),d=r(`${o}/conv3`);return{conv0:c,conv1:u,conv2:p,conv3:d}}return{extractDenseBlock3Params:s,extractDenseBlock4Params:i}}function gC(e){let t=[],{extractDenseBlock4Params:n}=Bf(e,t),a={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return vn(e,t),{params:a,paramMappings:t}}var Lp=class extends nn{constructor(){super("FaceFeatureExtractor")}forwardInput(t){let{params:n}=this;if(!n)throw new Error("FaceFeatureExtractor - load model before inference");return D(()=>{let a=pe(t.toBatchTensor(112,!0),"float32"),s=va(a,[122.782,117.001,104.298]).div(de(255)),i=Op(s,n.dense0,!0);return i=Op(i,n.dense1),i=Op(i,n.dense2),i=Op(i,n.dense3),i=Zn(i,[7,7],[2,2],"valid"),i})}async forward(t){return this.forwardInput(await ft(t))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeigthMap(t){return gC(t)}extractParams(t){return fC(t)}};function zp(e,t){return D(()=>Z(ze(e,t.weights),t.bias))}function yC(e,t,n){let a=[],{extractWeights:r,getRemainingWeights:s}=wn(e),o=Pf(r,a)(t,n,"fc");if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:a,params:{fc:o}}}function bC(e){let t=[],n=Hn(e,t);function a(s){let i=n(`${s}/weights`,2),o=n(`${s}/bias`,1);return{weights:i,bias:o}}let r={fc:a("fc")};return vn(e,t),{params:r,paramMappings:t}}function Wf(e){let t={},n={};return Object.keys(e).forEach(a=>{let r=a.startsWith("fc")?n:t;r[a]=e[a]}),{featureExtractorMap:t,classifierMap:n}}var Bp=class extends nn{constructor(t,n){super(t);this._faceFeatureExtractor=n}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(t){let{params:n}=this;if(!n)throw new Error(`${this._name} - load model before inference`);return D(()=>{let a=t instanceof cr?this.faceFeatureExtractor.forwardInput(t):t;return zp(a.as2D(a.shape[0],-1),n.fc)})}dispose(t=!0){this.faceFeatureExtractor.dispose(t),super.dispose(t)}loadClassifierParams(t){let{params:n,paramMappings:a}=this.extractClassifierParams(t);this._params=n,this._paramMappings=a}extractClassifierParams(t){return yC(t,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeigthMap(t){let{featureExtractorMap:n,classifierMap:a}=Wf(t);return this.faceFeatureExtractor.loadFromWeightMap(n),bC(a)}extractParams(t){let n=this.getClassifierChannelsIn(),a=this.getClassifierChannelsOut(),r=a*n+a,s=t.slice(0,t.length-r),i=t.slice(t.length-r);return this.faceFeatureExtractor.extractWeights(s),this.extractClassifierParams(i)}};var Vf=["neutral","happy","sad","angry","fearful","disgusted","surprised"],Pr=class{constructor(t){if(t.length!==7)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${t.length}`);Vf.forEach((n,a)=>{this[n]=t[a]})}asSortedArray(){return Vf.map(t=>({expression:t,probability:this[t]})).sort((t,n)=>n.probability-t.probability)}};var Wp=class extends Bp{constructor(t=new Lp){super("FaceExpressionNet",t)}forwardInput(t){return D(()=>Ca(this.runNet(t)))}async forward(t){return this.forwardInput(await ft(t))}async predictExpressions(t){let n=await ft(t),a=await this.forwardInput(n),r=await Promise.all(pt(a).map(async i=>{let o=await i.data();return i.dispose(),o}));a.dispose();let s=r.map(i=>new Pr(i));return n.isBatchInput?s:s[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function Uf(e){return e.expressions instanceof Pr}function Vp(e,t){return{...e,...{expressions:t}}}function mse(e,t,n=.1,a){(Array.isArray(t)?t:[t]).forEach(s=>{let i=s instanceof Pr?s:Uf(s)?s.expressions:void 0;if(!i)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let l=i.asSortedArray().filter(p=>p.probability>n),c=Ba(s)?s.detection.box.bottomLeft:a||new De(0,0);new ws(l.map(p=>`${p.expression} (${no(p.probability)})`),c).draw(e)})}function Ns(e){return Ba(e)&&e.landmarks instanceof Gn&&e.unshiftedLandmarks instanceof Gn&&e.alignedRect instanceof yt}function po(e,t){let{box:n}=e.detection,a=t.shiftBy(n.x,n.y),r=a.align(),{imageDims:s}=e.detection,i=new yt(e.detection.score,r.rescale(s.reverse()),s);return{...e,...{landmarks:a,unshiftedLandmarks:t,alignedRect:i}}}var vw=class{constructor(t={}){let{drawLines:n=!0,drawPoints:a=!0,lineWidth:r,lineColor:s,pointSize:i,pointColor:o}=t;this.drawLines=n,this.drawPoints=a,this.lineWidth=r||1,this.pointSize=i||2,this.lineColor=s||"rgba(0, 255, 255, 1)",this.pointColor=o||"rgba(255, 0, 255, 1)"}},ww=class{constructor(t,n={}){this.faceLandmarks=t,this.options=new vw(n)}draw(t){let n=xn(t),{drawLines:a,drawPoints:r,lineWidth:s,lineColor:i,pointSize:o,pointColor:l}=this.options;if(a&&this.faceLandmarks instanceof io&&(n.strokeStyle=i,n.lineWidth=s,Dr(n,this.faceLandmarks.getJawOutline()),Dr(n,this.faceLandmarks.getLeftEyeBrow()),Dr(n,this.faceLandmarks.getRightEyeBrow()),Dr(n,this.faceLandmarks.getNose()),Dr(n,this.faceLandmarks.getLeftEye(),!0),Dr(n,this.faceLandmarks.getRightEye(),!0),Dr(n,this.faceLandmarks.getMouth(),!0)),r){n.strokeStyle=l,n.fillStyle=l;let c=u=>{n.beginPath(),n.arc(u.x,u.y,o,0,2*Math.PI),n.fill()};this.faceLandmarks.positions.forEach(c)}}};function fse(e,t){(Array.isArray(t)?t:[t]).forEach(a=>{let r=a instanceof Gn?a:Ns(a)?a.landmarks:void 0;if(!r)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new ww(r).draw(e)})}var xC="0.11.2";function gse(e,t){let n=Ru(e,t),a=Pu(e,t);function r(i,o,l){let c=a(i,o,`${l}/separable_conv0`),u=a(o,o,`${l}/separable_conv1`),p=n(i,o,1,`${l}/expansion_conv`);return{separable_conv0:c,separable_conv1:u,expansion_conv:p}}function s(i,o){let l=a(i,i,`${o}/separable_conv0`),c=a(i,i,`${o}/separable_conv1`),u=a(i,i,`${o}/separable_conv2`);return{separable_conv0:l,separable_conv1:c,separable_conv2:u}}return{extractConvParams:n,extractSeparableConvParams:a,extractReductionBlockParams:r,extractMainBlockParams:s}}function vC(e,t){let n=[],{extractWeights:a,getRemainingWeights:r}=wn(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:l}=gse(a,n),c=s(3,32,3,"entry_flow/conv_in"),u=o(32,64,"entry_flow/reduction_block_0"),p=o(64,128,"entry_flow/reduction_block_1"),d={conv_in:c,reduction_block_0:u,reduction_block_1:p},h={};or(t,0,1).forEach(y=>{h[`main_block_${y}`]=l(128,`middle_flow/main_block_${y}`)});let m=o(128,256,"exit_flow/reduction_block"),f=i(256,512,"exit_flow/separable_conv"),g={reduction_block:m,separable_conv:f};if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:n,params:{entry_flow:d,middle_flow:h,exit_flow:g}}}function yse(e,t){let n=Hn(e,t),a=zf(n),r=Ou(n);function s(o){let l=r(`${o}/separable_conv0`),c=r(`${o}/separable_conv1`),u=a(`${o}/expansion_conv`);return{separable_conv0:l,separable_conv1:c,expansion_conv:u}}function i(o){let l=r(`${o}/separable_conv0`),c=r(`${o}/separable_conv1`),u=r(`${o}/separable_conv2`);return{separable_conv0:l,separable_conv1:c,separable_conv2:u}}return{extractConvParams:a,extractSeparableConvParams:r,extractReductionBlockParams:s,extractMainBlockParams:i}}function wC(e,t){let n=[],{extractConvParams:a,extractSeparableConvParams:r,extractReductionBlockParams:s,extractMainBlockParams:i}=yse(e,n),o=a("entry_flow/conv_in"),l=s("entry_flow/reduction_block_0"),c=s("entry_flow/reduction_block_1"),u={conv_in:o,reduction_block_0:l,reduction_block_1:c},p={};or(t,0,1).forEach(f=>{p[`main_block_${f}`]=i(`middle_flow/main_block_${f}`)});let d=s("exit_flow/reduction_block"),h=r("exit_flow/separable_conv"),m={reduction_block:d,separable_conv:h};return vn(e,n),{params:{entry_flow:u,middle_flow:p,exit_flow:m},paramMappings:n}}function kC(e,t,n){return Z($t(e,t.filters,n,"same"),t.bias)}function kw(e,t,n=!0){let a=n?Xe(e):e;return a=_n(a,t.separable_conv0,[1,1]),a=_n(Xe(a),t.separable_conv1,[1,1]),a=Dt(a,[3,3],[2,2],"same"),a=Z(a,kC(e,t.expansion_conv,[2,2])),a}function bse(e,t){let n=_n(Xe(e),t.separable_conv0,[1,1]);return n=_n(Xe(n),t.separable_conv1,[1,1]),n=_n(Xe(n),t.separable_conv2,[1,1]),n=Z(n,e),n}var Iw=class extends nn{constructor(t){super("TinyXception");this._numMainBlocks=t}forwardInput(t){let{params:n}=this;if(!n)throw new Error("TinyXception - load model before inference");return D(()=>{let a=pe(t.toBatchTensor(112,!0),"float32"),s=va(a,[122.782,117.001,104.298]).div(de(256)),i=Xe(kC(s,n.entry_flow.conv_in,[2,2]));return i=kw(i,n.entry_flow.reduction_block_0,!1),i=kw(i,n.entry_flow.reduction_block_1),or(this._numMainBlocks,0,1).forEach(o=>{i=bse(i,n.middle_flow[`main_block_${o}`])}),i=kw(i,n.exit_flow.reduction_block),i=Xe(_n(i,n.exit_flow.separable_conv,[1,1])),i})}async forward(t){return this.forwardInput(await ft(t))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeigthMap(t){return wC(t,this._numMainBlocks)}extractParams(t){return vC(t,this._numMainBlocks)}};function IC(e){let t=[],{extractWeights:n,getRemainingWeights:a}=wn(e),r=Pf(n,t),s=r(512,1,"fc/age"),i=r(512,2,"fc/gender");if(a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}function NC(e){let t=[],n=Hn(e,t);function a(s){let i=n(`${s}/weights`,2),o=n(`${s}/bias`,1);return{weights:i,bias:o}}let r={fc:{age:a("fc/age"),gender:a("fc/gender")}};return vn(e,t),{params:r,paramMappings:t}}var pr;(function(e){e.FEMALE="female",e.MALE="male"})(pr||(pr={}));var Up=class extends nn{constructor(t=new Iw(2)){super("AgeGenderNet");this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(t){let{params:n}=this;if(!n)throw new Error(`${this._name} - load model before inference`);return D(()=>{let a=t instanceof cr?this.faceFeatureExtractor.forwardInput(t):t,r=Zn(a,[7,7],[2,2],"valid").as2D(a.shape[0],-1),s=zp(r,n.fc.age).as1D(),i=zp(r,n.fc.gender);return{age:s,gender:i}})}forwardInput(t){return D(()=>{let{age:n,gender:a}=this.runNet(t);return{age:n,gender:Ca(a)}})}async forward(t){return this.forwardInput(await ft(t))}async predictAgeAndGender(t){let n=await ft(t),a=await this.forwardInput(n),r=pt(a.age),s=pt(a.gender),i=r.map((l,c)=>({ageTensor:l,genderTensor:s[c]})),o=await Promise.all(i.map(async({ageTensor:l,genderTensor:c})=>{let u=(await l.data())[0],p=(await c.data())[0],d=p>.5,h=d?pr.MALE:pr.FEMALE,m=d?p:1-p;return l.dispose(),c.dispose(),{age:u,gender:h,genderProbability:m}}));return a.age.dispose(),a.gender.dispose(),n.isBatchInput?o:o[0]}getDefaultModelName(){return"age_gender_model"}dispose(t=!0){this.faceFeatureExtractor.dispose(t),super.dispose(t)}loadClassifierParams(t){let{params:n,paramMappings:a}=this.extractClassifierParams(t);this._params=n,this._paramMappings=a}extractClassifierParams(t){return IC(t)}extractParamsFromWeigthMap(t){let{featureExtractorMap:n,classifierMap:a}=Wf(t);return this.faceFeatureExtractor.loadFromWeightMap(n),NC(a)}extractParams(t){let n=512*1+1+(512*2+2),a=t.slice(0,t.length-n),r=t.slice(t.length-n);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(r)}};var Gp=class extends Bp{postProcess(t,n,a){let r=a.map(({width:i,height:o})=>{let l=n/Math.max(o,i);return{width:i*l,height:o*l}}),s=r.length;return D(()=>{let i=(p,d)=>Mt([Nn([68],p,"float32"),Nn([68],d,"float32")],1).as2D(1,136).as1D(),o=(p,d)=>{let{width:h,height:m}=r[p];return d(h,m)?Math.abs(h-m)/2:0},l=p=>o(p,(d,h)=>d<h),c=p=>o(p,(d,h)=>h<d);return t.mul(Nn([s,136],n,"float32")).sub(Mt(Array.from(Array(s),(p,d)=>i(l(d),c(d))))).div(Mt(Array.from(Array(s),(p,d)=>i(r[d].width,r[d].height))))})}forwardInput(t){return D(()=>{let n=this.runNet(t);return this.postProcess(n,t.inputSize,t.inputDimensions.map(([a,r])=>({height:a,width:r})))})}async forward(t){return this.forwardInput(await ft(t))}async detectLandmarks(t){let n=await ft(t),a=D(()=>pt(this.forwardInput(n))),r=await Promise.all(a.map(async(s,i)=>{let o=Array.from(await s.data()),l=o.filter((u,p)=>vf(p)),c=o.filter((u,p)=>!vf(p));return new io(Array(68).fill(0).map((u,p)=>new De(l[p],c[p])),{height:n.getInputHeight(i),width:n.getInputWidth(i)})}));return a.forEach(s=>s.dispose()),n.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}};var ho=class extends Gp{constructor(t=new Lp){super("FaceLandmark68Net",t)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};function TC(e){let t=[],{extractDenseBlock3Params:n}=Bf(e,t),a={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return vn(e,t),{params:a,paramMappings:t}}function SC(e){let t=[],{extractWeights:n,getRemainingWeights:a}=wn(e),{extractDenseBlock3Params:r}=Lf(n,t),s=r(3,32,"dense0",!0),i=r(32,64,"dense1"),o=r(64,128,"dense2");if(a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}var Nw=class extends nn{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(t){let{params:n}=this;if(!n)throw new Error("TinyFaceFeatureExtractor - load model before inference");return D(()=>{let a=pe(t.toBatchTensor(112,!0),"float32"),s=va(a,[122.782,117.001,104.298]).div(de(255)),i=Rf(s,n.dense0,!0);return i=Rf(i,n.dense1),i=Rf(i,n.dense2),i=Zn(i,[14,14],[2,2],"valid"),i})}async forward(t){return this.forwardInput(await ft(t))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeigthMap(t){return TC(t)}extractParams(t){return SC(t)}};var Hp=class extends Gp{constructor(t=new Nw){super("FaceLandmark68TinyNet",t)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}};var Tw=class extends ho{};function CC(e,t){return Z(L(e,t.weights),t.biases)}function Sw(e,t,n,a,r="same"){let{filters:s,bias:i}=t.conv,o=$t(e,s,n,r);return o=Z(o,i),o=CC(o,t.scale),a?Xe(o):o}function EC(e,t){return Sw(e,t,[1,1],!0)}function Cw(e,t){return Sw(e,t,[1,1],!1)}function Hf(e,t){return Sw(e,t,[2,2],!0,"valid")}function xse(e,t){function n(o,l,c){let u=e(o),p=u.length/(l*c*c);if(uw(p))throw new Error(`depth has to be an integer: ${p}, weights.length: ${u.length}, numFilters: ${l}, filterSize: ${c}`);return D(()=>Ue(_a(u,[l,p,c,c]),[2,3,1,0]))}function a(o,l,c,u){let p=n(o,l,c),d=tt(e(l));return t.push({paramPath:`${u}/filters`},{paramPath:`${u}/bias`}),{filters:p,bias:d}}function r(o,l){let c=tt(e(o)),u=tt(e(o));return t.push({paramPath:`${l}/weights`},{paramPath:`${l}/biases`}),{weights:c,biases:u}}function s(o,l,c,u){let p=a(o,l,c,`${u}/conv`),d=r(l,`${u}/scale`);return{conv:p,scale:d}}function i(o,l,c,u,p=!1){let d=s((p?.5:1)*o,l,c,`${u}/conv1`),h=s(o,l,c,`${u}/conv2`);return{conv1:d,conv2:h}}return{extractConvLayerParams:s,extractResidualLayerParams:i}}function _C(e){let{extractWeights:t,getRemainingWeights:n}=wn(e),a=[],{extractConvLayerParams:r,extractResidualLayerParams:s}=xse(t,a),i=r(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),c=s(9216,32,3,"conv32_3"),u=s(36864,64,3,"conv64_down",!0),p=s(36864,64,3,"conv64_1"),d=s(36864,64,3,"conv64_2"),h=s(36864,64,3,"conv64_3"),m=s(147456,128,3,"conv128_down",!0),f=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),v=s(589824,256,3,"conv256_down_out"),N=D(()=>Ue(Ea(t(256*128),[128,256]),[1,0]));if(a.push({paramPath:"fc"}),n().length!==0)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:l,conv32_3:c,conv64_down:u,conv64_1:p,conv64_2:d,conv64_3:h,conv128_down:m,conv128_1:f,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:v,fc:N},paramMappings:a}}function vse(e,t){let n=Hn(e,t);function a(i){let o=n(`${i}/scale/weights`,1),l=n(`${i}/scale/biases`,1);return{weights:o,biases:l}}function r(i){let o=n(`${i}/conv/filters`,4),l=n(`${i}/conv/bias`,1),c=a(i);return{conv:{filters:o,bias:l},scale:c}}function s(i){return{conv1:r(`${i}/conv1`),conv2:r(`${i}/conv2`)}}return{extractConvLayerParams:r,extractResidualLayerParams:s}}function FC(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:a}=vse(e,t),r=n("conv32_down"),s=a("conv32_1"),i=a("conv32_2"),o=a("conv32_3"),l=a("conv64_down"),c=a("conv64_1"),u=a("conv64_2"),p=a("conv64_3"),d=a("conv128_down"),h=a("conv128_1"),m=a("conv128_2"),f=a("conv256_down"),g=a("conv256_1"),y=a("conv256_2"),b=a("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!lw(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);let v={conv32_down:r,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:l,conv64_1:c,conv64_2:u,conv64_3:p,conv128_down:d,conv128_1:h,conv128_2:m,conv256_down:f,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return vn(e,t),{params:v,paramMappings:t}}function Wa(e,t){let n=EC(e,t.conv1);return n=Cw(n,t.conv2),n=Z(n,e),n=Xe(n),n}function jp(e,t){let n=Hf(e,t.conv1);n=Cw(n,t.conv2);let a=Zn(e,2,2,"valid"),r=bt(a.shape),s=a.shape[3]!==n.shape[3];if(a.shape[1]!==n.shape[1]||a.shape[2]!==n.shape[2]){let o=[...n.shape];o[1]=1;let l=bt(o);n=Ze([n,l],1);let c=[...n.shape];c[2]=1;let u=bt(c);n=Ze([n,u],2)}return a=s?Ze([a,r],3):a,n=Z(a,n),n=Xe(n),n}var mo=class extends nn{constructor(){super("FaceRecognitionNet")}forwardInput(t){let{params:n}=this;if(!n)throw new Error("FaceRecognitionNet - load model before inference");return D(()=>{let a=pe(t.toBatchTensor(150,!0),"float32"),s=va(a,[122.782,117.001,104.298]).div(de(256)),i=Hf(s,n.conv32_down);i=Dt(i,3,2,"valid"),i=Wa(i,n.conv32_1),i=Wa(i,n.conv32_2),i=Wa(i,n.conv32_3),i=jp(i,n.conv64_down),i=Wa(i,n.conv64_1),i=Wa(i,n.conv64_2),i=Wa(i,n.conv64_3),i=jp(i,n.conv128_down),i=Wa(i,n.conv128_1),i=Wa(i,n.conv128_2),i=jp(i,n.conv256_down),i=Wa(i,n.conv256_1),i=Wa(i,n.conv256_2),i=jp(i,n.conv256_down_out);let o=i.mean([1,2]);return ze(o,n.fc)})}async forward(t){return this.forwardInput(await ft(t))}async computeFaceDescriptor(t){let n=await ft(t),a=D(()=>pt(this.forwardInput(n))),r=await Promise.all(a.map(s=>s.data()));return a.forEach(s=>s.dispose()),n.isBatchInput?r:r[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeigthMap(t){return FC(t)}extractParams(t){return _C(t)}};function AC(e){let t=new mo;return t.extractWeights(e),t}function qp(e,t){return{...e,...{descriptor:t}}}function $C(e){return typeof e.age=="number"}function Kp(e,t){return{...e,...{age:t}}}function DC(e){return(e.gender===pr.MALE||e.gender===pr.FEMALE)&&_u(e.genderProbability)}function Xp(e,t,n){return{...e,...{gender:t,genderProbability:n}}}function wse(e,t){function n(l,c){let u=_a(e(3*3*l),[3,3,l,1]),p=tt(e(l)),d=tt(e(l)),h=tt(e(l)),m=tt(e(l));return t.push({paramPath:`${c}/filters`},{paramPath:`${c}/batch_norm_scale`},{paramPath:`${c}/batch_norm_offset`},{paramPath:`${c}/batch_norm_mean`},{paramPath:`${c}/batch_norm_variance`}),{filters:u,batch_norm_scale:p,batch_norm_offset:d,batch_norm_mean:h,batch_norm_variance:m}}function a(l,c,u,p,d){let h=_a(e(l*c*u*u),[u,u,l,c]),m=tt(e(c));return t.push({paramPath:`${p}/filters`},{paramPath:`${p}/${d?"batch_norm_offset":"bias"}`}),{filters:h,bias:m}}function r(l,c,u,p){let{filters:d,bias:h}=a(l,c,u,p,!0);return{filters:d,batch_norm_offset:h}}function s(l,c,u){let p=n(l,`${u}/depthwise_conv`),d=r(l,c,1,`${u}/pointwise_conv`);return{depthwise_conv:p,pointwise_conv:d}}function i(){let l=r(3,32,3,"mobilenetv1/conv_0"),c=s(32,64,"mobilenetv1/conv_1"),u=s(64,128,"mobilenetv1/conv_2"),p=s(128,128,"mobilenetv1/conv_3"),d=s(128,256,"mobilenetv1/conv_4"),h=s(256,256,"mobilenetv1/conv_5"),m=s(256,512,"mobilenetv1/conv_6"),f=s(512,512,"mobilenetv1/conv_7"),g=s(512,512,"mobilenetv1/conv_8"),y=s(512,512,"mobilenetv1/conv_9"),b=s(512,512,"mobilenetv1/conv_10"),x=s(512,512,"mobilenetv1/conv_11"),v=s(512,1024,"mobilenetv1/conv_12"),N=s(1024,1024,"mobilenetv1/conv_13");return{conv_0:l,conv_1:c,conv_2:u,conv_3:p,conv_4:d,conv_5:h,conv_6:m,conv_7:f,conv_8:g,conv_9:y,conv_10:b,conv_11:x,conv_12:v,conv_13:N}}function o(){let l=r(1024,256,1,"prediction_layer/conv_0"),c=r(256,512,3,"prediction_layer/conv_1"),u=r(512,128,1,"prediction_layer/conv_2"),p=r(128,256,3,"prediction_layer/conv_3"),d=r(256,128,1,"prediction_layer/conv_4"),h=r(128,256,3,"prediction_layer/conv_5"),m=r(256,64,1,"prediction_layer/conv_6"),f=r(64,128,3,"prediction_layer/conv_7"),g=a(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),y=a(512,9,1,"prediction_layer/box_predictor_0/class_predictor"),b=a(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),x=a(1024,18,1,"prediction_layer/box_predictor_1/class_predictor"),v=a(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),N=a(512,18,1,"prediction_layer/box_predictor_2/class_predictor"),T=a(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),E=a(256,18,1,"prediction_layer/box_predictor_3/class_predictor"),A=a(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),$=a(256,18,1,"prediction_layer/box_predictor_4/class_predictor"),O=a(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),V=a(128,18,1,"prediction_layer/box_predictor_5/class_predictor");return{conv_0:l,conv_1:c,conv_2:u,conv_3:p,conv_4:d,conv_5:h,conv_6:m,conv_7:f,box_predictor_0:{box_encoding_predictor:g,class_predictor:y},box_predictor_1:{box_encoding_predictor:b,class_predictor:x},box_predictor_2:{box_encoding_predictor:v,class_predictor:N},box_predictor_3:{box_encoding_predictor:T,class_predictor:E},box_predictor_4:{box_encoding_predictor:A,class_predictor:$},box_predictor_5:{box_encoding_predictor:O,class_predictor:V}}}return{extractMobilenetV1Params:i,extractPredictionLayerParams:o}}function MC(e){let t=[],{extractWeights:n,getRemainingWeights:a}=wn(e),{extractMobilenetV1Params:r,extractPredictionLayerParams:s}=wse(n,t),i=r(),o=s(),c={extra_dim:Ih(n(5118*4),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:c},paramMappings:t}}function kse(e,t){let n=Hn(e,t);function a(c,u,p){let d=n(`${c}/Conv2d_${u}_pointwise/weights`,4,`${p}/filters`),h=n(`${c}/Conv2d_${u}_pointwise/convolution_bn_offset`,1,`${p}/batch_norm_offset`);return{filters:d,batch_norm_offset:h}}function r(c){let u=`mobilenetv1/conv_${c}`,p=`MobilenetV1/Conv2d_${c}_depthwise`,d=`${u}/depthwise_conv`,h=`${u}/pointwise_conv`,m=n(`${p}/depthwise_weights`,4,`${d}/filters`),f=n(`${p}/BatchNorm/gamma`,1,`${d}/batch_norm_scale`),g=n(`${p}/BatchNorm/beta`,1,`${d}/batch_norm_offset`),y=n(`${p}/BatchNorm/moving_mean`,1,`${d}/batch_norm_mean`),b=n(`${p}/BatchNorm/moving_variance`,1,`${d}/batch_norm_variance`);return{depthwise_conv:{filters:m,batch_norm_scale:f,batch_norm_offset:g,batch_norm_mean:y,batch_norm_variance:b},pointwise_conv:a("MobilenetV1",c,h)}}function s(){return{conv_0:a("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:r(1),conv_2:r(2),conv_3:r(3),conv_4:r(4),conv_5:r(5),conv_6:r(6),conv_7:r(7),conv_8:r(8),conv_9:r(9),conv_10:r(10),conv_11:r(11),conv_12:r(12),conv_13:r(13)}}function i(c,u){let p=n(`${c}/weights`,4,`${u}/filters`),d=n(`${c}/biases`,1,`${u}/bias`);return{filters:p,bias:d}}function o(c){let u=i(`Prediction/BoxPredictor_${c}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${c}/box_encoding_predictor`),p=i(`Prediction/BoxPredictor_${c}/ClassPredictor`,`prediction_layer/box_predictor_${c}/class_predictor`);return{box_encoding_predictor:u,class_predictor:p}}function l(){return{conv_0:a("Prediction",0,"prediction_layer/conv_0"),conv_1:a("Prediction",1,"prediction_layer/conv_1"),conv_2:a("Prediction",2,"prediction_layer/conv_2"),conv_3:a("Prediction",3,"prediction_layer/conv_3"),conv_4:a("Prediction",4,"prediction_layer/conv_4"),conv_5:a("Prediction",5,"prediction_layer/conv_5"),conv_6:a("Prediction",6,"prediction_layer/conv_6"),conv_7:a("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:o(0),box_predictor_1:o(1),box_predictor_2:o(2),box_predictor_3:o(3),box_predictor_4:o(4),box_predictor_5:o(5)}}return{extractMobilenetV1Params:s,extractPredictionLayerParams:l}}function RC(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:a}=kse(e,t),r=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!Mr(r))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${r}`);let s={mobilenetv1:n(),prediction_layer:a(),output_layer:{extra_dim:r}};return vn(e,t),{params:s,paramMappings:t}}function wa(e,t,n){return D(()=>{let a=$t(e,t.filters,n,"same");return a=Z(a,t.batch_norm_offset),Yt(a,0,6)})}var Ise=.0010000000474974513;function Nse(e,t,n){return D(()=>{let a=kr(e,t.filters,n,"same");return a=wr(a,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,Ise),Yt(a,0,6)})}function Tse(e){return[2,4,6,12].some(t=>t===e)?[2,2]:[1,1]}function PC(e,t){return D(()=>{let n,a=wa(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach((s,i)=>{let o=i+1,l=Tse(o);a=Nse(a,s.depthwise_conv,l),a=wa(a,s.pointwise_conv,[1,1]),o===11&&(n=a)}),n===null)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:a,conv11:n}})}function Sse(e,t,n){let a=e.arraySync(),r=Math.min(a[t][0],a[t][2]),s=Math.min(a[t][1],a[t][3]),i=Math.max(a[t][0],a[t][2]),o=Math.max(a[t][1],a[t][3]),l=Math.min(a[n][0],a[n][2]),c=Math.min(a[n][1],a[n][3]),u=Math.max(a[n][0],a[n][2]),p=Math.max(a[n][1],a[n][3]),d=(i-r)*(o-s),h=(u-l)*(p-c);if(d<=0||h<=0)return 0;let m=Math.max(r,l),f=Math.max(s,c),g=Math.min(i,u),y=Math.min(o,p),b=Math.max(g-m,0)*Math.max(y-f,0);return b/(d+h-b)}function OC(e,t,n,a,r){let s=e.shape[0],i=Math.min(n,s),o=t.map((u,p)=>({score:u,boxIndex:p})).filter(u=>u.score>r).sort((u,p)=>p.score-u.score),l=u=>u<=a?1:0,c=[];return o.forEach(u=>{if(c.length>=i)return;let p=u.score;for(let d=c.length-1;d>=0;--d){let h=Sse(e,u.boxIndex,c[d]);if(h!==0&&(u.score*=l(h),u.score<=r))break}p===u.score&&c.push(u.boxIndex)}),c}function Cse(e){let t=pt(Ue(e,[1,0])),n=[fe(t[2],t[0]),fe(t[3],t[1])],a=[Z(t[0],ve(n[0],de(2))),Z(t[1],ve(n[1],de(2)))];return{sizes:n,centers:a}}function Ese(e,t){let{sizes:n,centers:a}=Cse(e),r=pt(Ue(t,[1,0])),s=ve(L(mn(ve(r[2],de(5))),n[0]),de(2)),i=Z(L(ve(r[0],de(10)),n[0]),a[0]),o=ve(L(mn(ve(r[3],de(5))),n[1]),de(2)),l=Z(L(ve(r[1],de(10)),n[1]),a[1]);return Ue(Mt([fe(i,s),fe(l,o),Z(i,s),Z(l,o)]),[1,0])}function LC(e,t,n){return D(()=>{let a=e.shape[0],r=Ese(j(Ka(n.extra_dim,[a,1,1]),[-1,4]),j(e,[-1,4]));r=j(r,[a,r.shape[0]/a,4]);let s=da(We(t,[0,0,1],[-1,-1,-1])),i=We(s,[0,0,0],[-1,-1,1]);i=j(i,[a,i.shape[1]]);let o=pt(r),l=pt(i);return{boxes:o,scores:l}})}function fo(e,t){return D(()=>{let n=e.shape[0],a=j(co(e,t.box_encoding_predictor),[n,-1,1,4]),r=j(co(e,t.class_predictor),[n,-1,3]);return{boxPredictionEncoding:a,classPrediction:r}})}function zC(e,t,n){return D(()=>{let a=wa(e,n.conv_0,[1,1]),r=wa(a,n.conv_1,[2,2]),s=wa(r,n.conv_2,[1,1]),i=wa(s,n.conv_3,[2,2]),o=wa(i,n.conv_4,[1,1]),l=wa(o,n.conv_5,[2,2]),c=wa(l,n.conv_6,[1,1]),u=wa(c,n.conv_7,[2,2]),p=fo(t,n.box_predictor_0),d=fo(e,n.box_predictor_1),h=fo(r,n.box_predictor_2),m=fo(i,n.box_predictor_3),f=fo(l,n.box_predictor_4),g=fo(u,n.box_predictor_5),y=Ze([p.boxPredictionEncoding,d.boxPredictionEncoding,h.boxPredictionEncoding,m.boxPredictionEncoding,f.boxPredictionEncoding,g.boxPredictionEncoding],1),b=Ze([p.classPrediction,d.classPrediction,h.classPrediction,m.classPrediction,f.classPrediction,g.classPrediction],1);return{boxPredictions:y,classPredictions:b}})}var ia=class{constructor({minConfidence:t,maxResults:n}={}){this._name="SsdMobilenetv1Options";if(this._minConfidence=t||.5,this._maxResults=n||100,typeof this._minConfidence!="number"||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if(typeof this._maxResults!="number")throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}};var Ts=class extends nn{constructor(){super("SsdMobilenetv1")}forwardInput(t){let{params:n}=this;if(!n)throw new Error("SsdMobilenetv1 - load model before inference");return D(()=>{let a=pe(t.toBatchTensor(512,!1),"float32"),r=fe(L(a,de(.007843137718737125)),de(1)),s=PC(r,n.mobilenetv1),{boxPredictions:i,classPredictions:o}=zC(s.out,s.conv11,n.prediction_layer);return LC(i,o,n.output_layer)})}async forward(t){return this.forwardInput(await ft(t))}async locateFaces(t,n={}){let{maxResults:a,minConfidence:r}=new ia(n),s=await ft(t),{boxes:i,scores:o}=this.forwardInput(s),l=i[0],c=o[0];for(let x=1;x<i.length;x++)i[x].dispose(),o[x].dispose();let u=Array.from(await c.data()),d=OC(l,u,a,.5,r),h=s.getReshapedInputDimensions(0),m=s.inputSize,f=m/h.width,g=m/h.height,y=l.arraySync(),b=d.map(x=>{let[v,N]=[Math.max(0,y[x][0]),Math.min(1,y[x][2])].map(A=>A*g),[T,E]=[Math.max(0,y[x][1]),Math.min(1,y[x][3])].map(A=>A*f);return new yt(u[x],new so(T,v,E-T,N-v),{height:s.getInputHeight(0),width:s.getInputWidth(0)})});return l.dispose(),c.dispose(),b}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeigthMap(t){return RC(t)}extractParams(t){return MC(t)}};function Ew(e){let t=new Ts;return t.extractWeights(e),t}function BC(e){return Ew(e)}var _w=class extends Ts{};var WC=.4,VC=[new De(.738768,.874946),new De(2.42204,2.65704),new De(4.30971,7.04493),new De(10.246,4.59428),new De(12.6868,11.8741)],UC=[new De(1.603231,2.094468),new De(6.041143,7.080126),new De(2.882459,3.518061),new De(4.266906,5.178857),new De(9.041765,10.66308)],GC=[117.001,114.697,97.404],HC="tiny_yolov2_model",jC="tiny_yolov2_separable_conv_model";var jf=e=>typeof e=="number";function qf(e){if(!e)throw new Error(`invalid config: ${e}`);if(typeof e.withSeparableConvs!="boolean")throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!jf(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every(t=>typeof t=="string"))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map(t=>t||{}).every(t=>jf(t.x)&&jf(t.y)))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||e.meanRgb.length!==3||!e.meanRgb.every(jf)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}function Lu(e){return D(()=>{let t=L(e,de(.10000000149011612));return Z(Xe(fe(e,t)),t)})}function Or(e,t){return D(()=>{let n=na(e,[[0,0],[1,1],[1,1],[0,0]]);return n=$t(n,t.conv.filters,[1,1],"valid"),n=fe(n,t.bn.sub),n=L(n,t.bn.truediv),n=Z(n,t.conv.bias),Lu(n)})}function Lr(e,t){return D(()=>{let n=na(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Oi(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=Z(n,t.bias),Lu(n)})}function _se(e,t){let n=Ru(e,t);function a(i,o){let l=tt(e(i)),c=tt(e(i));return t.push({paramPath:`${o}/sub`},{paramPath:`${o}/truediv`}),{sub:l,truediv:c}}function r(i,o,l){let c=n(i,o,3,`${l}/conv`),u=a(o,`${l}/bn`);return{conv:c,bn:u}}let s=Pu(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:r,extractSeparableConvParams:s}}function qC(e,t,n,a){let{extractWeights:r,getRemainingWeights:s}=wn(e),i=[],{extractConvParams:o,extractConvWithBatchNormParams:l,extractSeparableConvParams:c}=_se(r,i),u;if(t.withSeparableConvs){let[p,d,h,m,f,g,y,b,x]=a,v=t.isFirstLayerConv2d?o(p,d,3,"conv0"):c(p,d,"conv0"),N=c(d,h,"conv1"),T=c(h,m,"conv2"),E=c(m,f,"conv3"),A=c(f,g,"conv4"),$=c(g,y,"conv5"),O=b?c(y,b,"conv6"):void 0,V=x?c(b,x,"conv7"):void 0,W=o(x||b||y,5*n,1,"conv8");u={conv0:v,conv1:N,conv2:T,conv3:E,conv4:A,conv5:$,conv6:O,conv7:V,conv8:W}}else{let[p,d,h,m,f,g,y,b,x]=a,v=l(p,d,"conv0"),N=l(d,h,"conv1"),T=l(h,m,"conv2"),E=l(m,f,"conv3"),A=l(f,g,"conv4"),$=l(g,y,"conv5"),O=l(y,b,"conv6"),V=l(b,x,"conv7"),W=o(x,5*n,1,"conv8");u={conv0:v,conv1:N,conv2:T,conv3:E,conv4:A,conv5:$,conv6:O,conv7:V,conv8:W}}if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{params:u,paramMappings:i}}function Fse(e,t){let n=Hn(e,t);function a(o){let l=n(`${o}/sub`,1),c=n(`${o}/truediv`,1);return{sub:l,truediv:c}}function r(o){let l=n(`${o}/filters`,4),c=n(`${o}/bias`,1);return{filters:l,bias:c}}function s(o){let l=r(`${o}/conv`),c=a(`${o}/bn`);return{conv:l,bn:c}}let i=Ou(n);return{extractConvParams:r,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}}function KC(e,t){let n=[],{extractConvParams:a,extractConvWithBatchNormParams:r,extractSeparableConvParams:s}=Fse(e,n),i;if(t.withSeparableConvs){let o=t.filterSizes&&t.filterSizes.length||9;i={conv0:t.isFirstLayerConv2d?a("conv0"):s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:o>7?s("conv6"):void 0,conv7:o>8?s("conv7"):void 0,conv8:a("conv8")}}else i={conv0:r("conv0"),conv1:r("conv1"),conv2:r("conv2"),conv3:r("conv3"),conv4:r("conv4"),conv5:r("conv5"),conv6:r("conv6"),conv7:r("conv7"),conv8:a("conv8")};return vn(e,n),{params:i,paramMappings:n}}var Va=class{constructor({inputSize:t,scoreThreshold:n}={}){this._name="TinyYolov2Options";if(this._inputSize=t||416,this._scoreThreshold=n||.5,typeof this._inputSize!="number"||this._inputSize%32!=0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if(typeof this._scoreThreshold!="number"||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}};var Fw=class extends nn{constructor(t){super("TinyYolov2");qf(t),this._config=t}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(t,n){let a=Or(t,n.conv0);return a=Dt(a,[2,2],[2,2],"same"),a=Or(a,n.conv1),a=Dt(a,[2,2],[2,2],"same"),a=Or(a,n.conv2),a=Dt(a,[2,2],[2,2],"same"),a=Or(a,n.conv3),a=Dt(a,[2,2],[2,2],"same"),a=Or(a,n.conv4),a=Dt(a,[2,2],[2,2],"same"),a=Or(a,n.conv5),a=Dt(a,[2,2],[1,1],"same"),a=Or(a,n.conv6),a=Or(a,n.conv7),co(a,n.conv8,"valid",!1)}runMobilenet(t,n){let a=this.config.isFirstLayerConv2d?Lu(co(t,n.conv0,"valid",!1)):Lr(t,n.conv0);return a=Dt(a,[2,2],[2,2],"same"),a=Lr(a,n.conv1),a=Dt(a,[2,2],[2,2],"same"),a=Lr(a,n.conv2),a=Dt(a,[2,2],[2,2],"same"),a=Lr(a,n.conv3),a=Dt(a,[2,2],[2,2],"same"),a=Lr(a,n.conv4),a=Dt(a,[2,2],[2,2],"same"),a=Lr(a,n.conv5),a=Dt(a,[2,2],[1,1],"same"),a=n.conv6?Lr(a,n.conv6):a,a=n.conv7?Lr(a,n.conv7):a,co(a,n.conv8,"valid",!1)}forwardInput(t,n){let{params:a}=this;if(!a)throw new Error("TinyYolov2 - load model before inference");return D(()=>{let r=pe(t.toBatchTensor(n,!1),"float32");return r=this.config.meanRgb?va(r,this.config.meanRgb):r,r=r.div(de(256)),this.config.withSeparableConvs?this.runMobilenet(r,a):this.runTinyYolov2(r,a)})}async forward(t,n){return this.forwardInput(await ft(t),n)}async detect(t,n={}){let{inputSize:a,scoreThreshold:r}=new Va(n),s=await ft(t),i=await this.forwardInput(s,a),o=D(()=>pt(i)[0].expandDims()),l={width:s.getInputWidth(0),height:s.getInputHeight(0)},c=await this.extractBoxes(o,s.getReshapedInputDimensions(0),r);i.dispose(),o.dispose();let u=c.map(g=>g.box),p=c.map(g=>g.score),d=c.map(g=>g.classScore),h=c.map(g=>this.config.classes[g.label]);return Nf(u.map(g=>g.rescale(a)),p,this.config.iouThreshold,!0).map(g=>new Rr(p[g],d[g],h[g],u[g],l))}getDefaultModelName(){return""}extractParamsFromWeigthMap(t){return KC(t,this.config)}extractParams(t){let n=this.config.filterSizes||Fw.DEFAULT_FILTER_SIZES,a=n?n.length:void 0;if(a!==7&&a!==8&&a!==9)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${a} filterSizes in config`);return qC(t,this.config,this.boxEncodingSize,n)}async extractBoxes(t,n,a){let{width:r,height:s}=n,i=Math.max(r,s),o=i/r,l=i/s,c=t.shape[1],u=this.config.anchors.length,[p,d,h]=D(()=>{let y=t.reshape([c,c,u,this.boxEncodingSize]),b=y.slice([0,0,0,0],[c,c,u,4]),x=y.slice([0,0,0,4],[c,c,u,1]),v=this.withClassScores?Ca(y.slice([0,0,0,5],[c,c,u,this.config.classes.length]),3):de(0);return[b,x,v]}),m=[],f=await d.array(),g=await p.array();for(let y=0;y<c;y++)for(let b=0;b<c;b++)for(let x=0;x<u;x++){let v=Fu(f[y][b][x][0]);if(!a||v>a){let N=(b+Fu(g[y][b][x][0]))/c*o,T=(y+Fu(g[y][b][x][1]))/c*l,E=Math.exp(g[y][b][x][2])*this.config.anchors[x].x/c*o,A=Math.exp(g[y][b][x][3])*this.config.anchors[x].y/c*l,$=N-E/2,O=T-A/2,V={row:y,col:b,anchor:x},{classScore:W,label:H}=this.withClassScores?await this.extractPredictedClass(h,V):{classScore:1,label:0};m.push({box:new ro($,O,$+E,O+A),score:v,classScore:v*W,label:H,...V})}}return p.dispose(),d.dispose(),h.dispose(),m}async extractPredictedClass(t,n){let{row:a,col:r,anchor:s}=n,i=await t.array();return Array(this.config.classes.length).fill(0).map((o,l)=>i[a][r][s][l]).map((o,l)=>({classScore:o,label:l})).reduce((o,l)=>o.classScore>l.classScore?o:l)}},zu=Fw;zu.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var go=class extends zu{constructor(t=!0){let n={withSeparableConvs:t,iouThreshold:WC,classes:["face"],...t?{anchors:UC,meanRgb:GC}:{anchors:VC,withClassScores:!0}};super(n)}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(t,n){return(await this.detect(t,n)).map(r=>new yt(r.score,r.relativeBox,{width:r.imageWidth,height:r.imageHeight}))}getDefaultModelName(){return this.withSeparableConvs?jC:HC}extractParamsFromWeigthMap(t){return super.extractParamsFromWeigthMap(t)}};function XC(e,t=!0){let n=new go(t);return n.extractWeights(e),n}var Yp=class extends Va{constructor(){super(...arguments);this._name="TinyFaceDetectorOptions"}};var oa=class{async then(t){return t(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function yo(e,t,n,a,r=({alignedRect:s})=>s){let s=e.map(l=>Ns(l)?r(l):l.detection),i=a||(t instanceof z?await uo(t,s):await lo(t,s)),o=await n(i);return i.forEach(l=>l instanceof z&&l.dispose()),o}async function Bu(e,t,n,a,r){return yo([e],t,async s=>n(s[0]),a,r)}var YC=.4,JC=[new De(1.603231,2.094468),new De(6.041143,7.080126),new De(2.882459,3.518061),new De(4.266906,5.178857),new De(9.041765,10.66308)],ZC=[117.001,114.697,97.404];var bo=class extends zu{constructor(){let t={withSeparableConvs:!0,iouThreshold:YC,classes:["face"],anchors:JC,meanRgb:ZC,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]};super(t)}get anchors(){return this.config.anchors}async locateFaces(t,n){return(await this.detect(t,n)).map(r=>new yt(r.score,r.relativeBox,{width:r.imageWidth,height:r.imageHeight}))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeigthMap(t){return super.extractParamsFromWeigthMap(t)}};var Qe={ssdMobilenetv1:new Ts,tinyFaceDetector:new bo,tinyYolov2:new go,faceLandmark68Net:new ho,faceLandmark68TinyNet:new Hp,faceRecognitionNet:new mo,faceExpressionNet:new Wp,ageGenderNet:new Up},Aw=(e,t)=>Qe.ssdMobilenetv1.locateFaces(e,t),QC=(e,t)=>Qe.tinyFaceDetector.locateFaces(e,t),eE=(e,t)=>Qe.tinyYolov2.locateFaces(e,t),$w=e=>Qe.faceLandmark68Net.detectLandmarks(e),tE=e=>Qe.faceLandmark68TinyNet.detectLandmarks(e),nE=e=>Qe.faceRecognitionNet.computeFaceDescriptor(e),aE=e=>Qe.faceExpressionNet.predictExpressions(e),rE=e=>Qe.ageGenderNet.predictAgeAndGender(e),Dw=e=>Qe.ssdMobilenetv1.load(e),sE=e=>Qe.tinyFaceDetector.load(e),iE=e=>Qe.tinyYolov2.load(e),oE=e=>Qe.faceLandmark68Net.load(e),lE=e=>Qe.faceLandmark68TinyNet.load(e),uE=e=>Qe.faceRecognitionNet.load(e),cE=e=>Qe.faceExpressionNet.load(e),pE=e=>Qe.ageGenderNet.load(e),dE=Dw,hE=Aw,mE=$w;var Mw=class extends oa{constructor(t,n,a){super();this.parentTask=t;this.input=n;this.extractedFaces=a}},Uu=class extends Mw{async run(){let t=await this.parentTask,n=await yo(t,this.input,async a=>Promise.all(a.map(r=>Qe.faceExpressionNet.predictExpressions(r))),this.extractedFaces);return t.map((a,r)=>Vp(a,n[r]))}withAgeAndGender(){return new Wu(this,this.input)}},Gu=class extends Mw{async run(){let t=await this.parentTask;if(!t)return;let n=await Bu(t,this.input,a=>Qe.faceExpressionNet.predictExpressions(a),this.extractedFaces);return Vp(t,n)}withAgeAndGender(){return new Vu(this,this.input)}},wo=class extends Uu{withAgeAndGender(){return new xo(this,this.input)}withFaceDescriptors(){return new zr(this,this.input)}},ko=class extends Gu{withAgeAndGender(){return new vo(this,this.input)}withFaceDescriptor(){return new Br(this,this.input)}};var Rw=class extends oa{constructor(t,n,a){super();this.parentTask=t;this.input=n;this.extractedFaces=a}},Wu=class extends Rw{async run(){let t=await this.parentTask,n=await yo(t,this.input,async a=>Promise.all(a.map(r=>Qe.ageGenderNet.predictAgeAndGender(r))),this.extractedFaces);return t.map((a,r)=>{let{age:s,gender:i,genderProbability:o}=n[r];return Kp(Xp(a,i,o),s)})}withFaceExpressions(){return new Uu(this,this.input)}},Vu=class extends Rw{async run(){let t=await this.parentTask;if(!t)return;let{age:n,gender:a,genderProbability:r}=await Bu(t,this.input,s=>Qe.ageGenderNet.predictAgeAndGender(s),this.extractedFaces);return Kp(Xp(t,a,r),n)}withFaceExpressions(){return new Gu(this,this.input)}},xo=class extends Wu{withFaceExpressions(){return new wo(this,this.input)}withFaceDescriptors(){return new zr(this,this.input)}},vo=class extends Vu{withFaceExpressions(){return new ko(this,this.input)}withFaceDescriptor(){return new Br(this,this.input)}};var Jp=class extends oa{constructor(t,n){super();this.parentTask=t;this.input=n}},zr=class extends Jp{async run(){let t=await this.parentTask;return(await yo(t,this.input,a=>Promise.all(a.map(r=>Qe.faceRecognitionNet.computeFaceDescriptor(r))),null,a=>a.landmarks.align(null,{useDlibAlignment:!0}))).map((a,r)=>qp(t[r],a))}withFaceExpressions(){return new wo(this,this.input)}withAgeAndGender(){return new xo(this,this.input)}},Br=class extends Jp{async run(){let t=await this.parentTask;if(!t)return;let n=await Bu(t,this.input,a=>Qe.faceRecognitionNet.computeFaceDescriptor(a),null,a=>a.landmarks.align(null,{useDlibAlignment:!0}));return qp(t,n)}withFaceExpressions(){return new ko(this,this.input)}withAgeAndGender(){return new vo(this,this.input)}};var Zp=class extends oa{constructor(t,n,a){super();this.parentTask=t;this.input=n;this.useTinyLandmarkNet=a}get landmarkNet(){return this.useTinyLandmarkNet?Qe.faceLandmark68TinyNet:Qe.faceLandmark68Net}},Qp=class extends Zp{async run(){let t=await this.parentTask,n=t.map(s=>s.detection),a=this.input instanceof z?await uo(this.input,n):await lo(this.input,n),r=await Promise.all(a.map(s=>this.landmarkNet.detectLandmarks(s)));return a.forEach(s=>s instanceof z&&s.dispose()),t.map((s,i)=>po(s,r[i]))}withFaceExpressions(){return new wo(this,this.input)}withAgeAndGender(){return new xo(this,this.input)}withFaceDescriptors(){return new zr(this,this.input)}},ed=class extends Zp{async run(){let t=await this.parentTask;if(!t)return;let{detection:n}=t,a=this.input instanceof z?await uo(this.input,[n]):await lo(this.input,[n]),r=await this.landmarkNet.detectLandmarks(a[0]);return a.forEach(s=>s instanceof z&&s.dispose()),po(t,r)}withFaceExpressions(){return new ko(this,this.input)}withAgeAndGender(){return new vo(this,this.input)}withFaceDescriptor(){return new Br(this,this.input)}};var td=class extends oa{constructor(t,n=new ia){super();this.input=t;this.options=n}},Hu=class extends td{async run(){let{input:t,options:n}=this,a=n instanceof Yp?r=>Qe.tinyFaceDetector.locateFaces(r,n):n instanceof ia?r=>Qe.ssdMobilenetv1.locateFaces(r,n):n instanceof Va?r=>Qe.tinyYolov2.locateFaces(r,n):null;if(!a)throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | MtcnnOptions | TinyYolov2Options");return a(t)}runAndExtendWithFaceDetections(){return new Promise(async t=>{let n=await this.run();t(n.map(a=>xs({},a)))})}withFaceLandmarks(t=!1){return new Qp(this.runAndExtendWithFaceDetections(),this.input,t)}withFaceExpressions(){return new Uu(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new Wu(this.runAndExtendWithFaceDetections(),this.input)}},nd=class extends td{async run(){let t=await new Hu(this.input,this.options),n=t[0];return t.forEach(a=>{a.score>n.score&&(n=a)}),n}runAndExtendWithFaceDetection(){return new Promise(async t=>{let n=await this.run();t(n?xs({},n):void 0)})}withFaceLandmarks(t=!1){return new ed(this.runAndExtendWithFaceDetection(),this.input,t)}withFaceExpressions(){return new Gu(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new Vu(this.runAndExtendWithFaceDetection(),this.input)}};function fE(e,t=new ia){return new nd(e,t)}function ad(e,t=new ia){return new Hu(e,t)}async function Pw(e,t){return ad(e,new ia(t?{minConfidence:t}:{})).withFaceLandmarks().withFaceDescriptors()}async function gE(e,t={}){return ad(e,new Va(t)).withFaceLandmarks().withFaceDescriptors()}var yE=Pw;function Kf(e,t){if(e.length!==t.length)throw new Error("euclideanDistance: arr1.length !== arr2.length");let n=Array.from(e),a=Array.from(t);return Math.sqrt(n.map((r,s)=>r-a[s]).reduce((r,s)=>r+s**2,0))}var rd=class{constructor(t,n=.6){this._distanceThreshold=n;let a=Array.isArray(t)?t:[t];if(!a.length)throw new Error("FaceRecognizer.constructor - expected atleast one input");let r=1,s=()=>`person ${r++}`;this._labeledDescriptors=a.map(i=>{if(i instanceof lr)return i;if(i instanceof Float32Array)return new lr(s(),[i]);if(i.descriptor&&i.descriptor instanceof Float32Array)return new lr(s(),[i.descriptor]);throw new Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>")})}get labeledDescriptors(){return this._labeledDescriptors}get distanceThreshold(){return this._distanceThreshold}computeMeanDistance(t,n){return n.map(a=>Kf(a,t)).reduce((a,r)=>a+r,0)/(n.length||1)}matchDescriptor(t){return this.labeledDescriptors.map(({descriptors:n,label:a})=>new Au(a,this.computeMeanDistance(t,n))).reduce((n,a)=>n.distance<a.distance?n:a)}findBestMatch(t){let n=this.matchDescriptor(t);return n.distance<this.distanceThreshold?n:new Au("unknown",n.distance)}toJSON(){return{distanceThreshold:this.distanceThreshold,labeledDescriptors:this.labeledDescriptors.map(t=>t.toJSON())}}static fromJSON(t){let n=t.labeledDescriptors.map(a=>lr.fromJSON(a));return new rd(n,t.distanceThreshold)}};function bE(e){let t=new bo;return t.extractWeights(e),t}function Ow(e,t){let{width:n,height:a}=new cn(t.width,t.height);if(n<=0||a<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:a})}`);if(Array.isArray(e))return e.map(r=>Ow(r,{width:n,height:a}));if(Ns(e)){let r=e.detection.forSize(n,a),s=e.unshiftedLandmarks.forSize(r.box.width,r.box.height);return po(xs(e,r),s)}return Ba(e)?xs(e,e.detection.forSize(n,a)):e instanceof Gn||e instanceof yt?e.forSize(n,a):e}var $se=typeof process!="undefined",Dse=typeof navigator!="undefined"&&typeof navigator.userAgent!="undefined",xE={faceapi:xC,node:$se,browser:Dse};return Ase;})();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/** @license See the LICENSE file. */
//# sourceMappingURL=face-api.js.map
