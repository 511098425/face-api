
  /*
  Face-API
  homepage: <https://github.com/vladmandic/face-api>
  author: <https://github.com/vladmandic>'
  */

var faceapi=(()=>{var iF=Object.create,vd=Object.defineProperty,oF=Object.getPrototypeOf,lF=Object.prototype.hasOwnProperty,uF=Object.getOwnPropertyNames,cF=Object.getOwnPropertyDescriptor;var n0=e=>vd(e,"__esModule",{value:!0});var pF=(e,t)=>()=>(t||(t={exports:{}},e(t.exports,t)),t.exports),Ju=(e,t)=>{for(var n in t)vd(e,n,{get:t[n],enumerable:!0})},dF=(e,t,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of uF(t))!lF.call(e,a)&&a!=="default"&&vd(e,a,{get:()=>t[a],enumerable:!(n=cF(t,a))||n.enumerable});return e},hF=e=>dF(n0(vd(e!=null?iF(oF(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e);var sC=pF((Qre,rC)=>{n0(Qre);Ju(Qre,{isNodejs:()=>Zre});function Zre(){return typeof global=="object"&&!0&&typeof rC!="undefined"&&typeof process!="undefined"&&!!process.version}});var wse={};Ju(wse,{AgeGenderNet:()=>Rp,BoundingBox:()=>ao,Box:()=>ot,ComposableTask:()=>ia,ComputeAllFaceDescriptorsTask:()=>Mr,ComputeFaceDescriptorsTaskBase:()=>Up,ComputeSingleFaceDescriptorTask:()=>Rr,DetectAllFaceLandmarksTask:()=>Hp,DetectAllFacesTask:()=>Bu,DetectFaceLandmarksTaskBase:()=>Gp,DetectFacesTaskBase:()=>qp,DetectSingleFaceLandmarksTask:()=>jp,DetectSingleFaceTask:()=>Xp,Dimensions:()=>cn,FACE_EXPRESSION_LABELS:()=>Ef,FaceDetection:()=>ft,FaceDetectionNet:()=>Rw,FaceExpressionNet:()=>Dp,FaceExpressions:()=>Er,FaceLandmark68Net:()=>co,FaceLandmark68TinyNet:()=>Op,FaceLandmarkNet:()=>Ew,FaceLandmarks:()=>jn,FaceLandmarks5:()=>gw,FaceLandmarks68:()=>so,FaceMatch:()=>Cu,FaceMatcher:()=>Yp,FaceRecognitionNet:()=>po,Gender:()=>cr,LabeledBox:()=>Au,LabeledFaceDescriptors:()=>or,NetInput:()=>ur,NeuralNetwork:()=>en,ObjectDetection:()=>_r,Point:()=>De,PredictedBox:()=>yw,Rect:()=>ro,SsdMobilenetv1:()=>Ts,SsdMobilenetv1Options:()=>sa,TinyFaceDetector:()=>go,TinyFaceDetectorOptions:()=>Vp,TinyYolov2:()=>mo,TinyYolov2Options:()=>Ba,allFaces:()=>pA,allFacesSsdMobilenetv1:()=>Vw,allFacesTinyYolov2:()=>cA,awaitMediaLoaded:()=>yf,bufferToImage:()=>bf,computeFaceDescriptor:()=>YC,createCanvas:()=>ks,createCanvasFromMedia:()=>_u,createFaceDetectionNet:()=>MC,createFaceRecognitionNet:()=>TC,createSsdMobilenetv1:()=>Mw,createTinyFaceDetector:()=>dA,createTinyYolov2:()=>UC,detectAllFaces:()=>Kp,detectFaceLandmarks:()=>Lw,detectFaceLandmarksTiny:()=>KC,detectLandmarks:()=>lA,detectSingleFace:()=>uA,draw:()=>Cw,env:()=>nt,euclideanDistance:()=>Pf,extendWithAge:()=>Wp,extendWithFaceDescriptor:()=>zp,extendWithFaceDetection:()=>bs,extendWithFaceExpressions:()=>Mp,extendWithFaceLandmarks:()=>uo,extendWithGender:()=>Bp,extractFaceTensors:()=>oo,extractFaces:()=>io,fetchImage:()=>iC,fetchJson:()=>wf,fetchNetWeights:()=>oC,fetchOrThrow:()=>Is,getContext2dOrThrow:()=>bn,getMediaDimensions:()=>ws,imageTensorToCanvas:()=>xf,imageToSquare:()=>vf,inverseSigmoid:()=>aC,iou:()=>pf,isMediaElement:()=>Ap,isMediaLoaded:()=>Fu,isWithAge:()=>SC,isWithFaceDetection:()=>za,isWithFaceExpressions:()=>$f,isWithFaceLandmarks:()=>Ns,isWithGender:()=>CC,loadAgeGenderModel:()=>sA,loadFaceDetectionModel:()=>iA,loadFaceExpressionModel:()=>rA,loadFaceLandmarkModel:()=>tA,loadFaceLandmarkTinyModel:()=>nA,loadFaceRecognitionModel:()=>aA,loadSsdMobilenetv1Model:()=>zw,loadTinyFaceDetectorModel:()=>ZC,loadTinyYolov2Model:()=>eA,loadWeightMap:()=>If,locateFaces:()=>oA,matchDimensions:()=>lC,minBbox:()=>df,nets:()=>Qe,nonMaxSuppression:()=>hf,normalize:()=>wa,padToSquare:()=>mf,predictAgeAndGender:()=>QC,recognizeFaceExpressions:()=>JC,resizeResults:()=>Uw,resolveInput:()=>xs,shuffleArray:()=>nC,sigmoid:()=>Su,ssdMobilenetv1:()=>Ow,tf:()=>Qg,tinyFaceDetector:()=>qC,tinyYolov2:()=>XC,toNetInput:()=>mt,utils:()=>dw,validateConfig:()=>Rf,version:()=>hA});var Qg={};Ju(Qg,{Abs:()=>Po,Acos:()=>Oo,Acosh:()=>Lo,AdadeltaOptimizer:()=>qh,AdagradOptimizer:()=>Xh,AdamOptimizer:()=>Kh,AdamaxOptimizer:()=>Yh,Add:()=>Hr,AddN:()=>Es,All:()=>Sd,Any:()=>Cd,ArgMax:()=>$s,ArgMin:()=>nc,Asin:()=>zo,Asinh:()=>Wo,Atan:()=>Bo,Atan2:()=>Uo,Atanh:()=>Vo,AvgPool:()=>Ds,AvgPool3D:()=>ac,AvgPool3DGrad:()=>Fd,AvgPoolGrad:()=>Ad,BackendWasm:()=>eC,BatchMatMul:()=>Ms,BatchToSpaceND:()=>rc,Bincount:()=>_d,BroadcastTo:()=>y0,Callback:()=>QI,CallbackList:()=>Yk,Cast:()=>Rs,Ceil:()=>Ps,ClipByValue:()=>jr,Complex:()=>Ed,ComplexAbs:()=>sc,Concat:()=>Go,Conv2D:()=>Os,Conv2DBackpropFilter:()=>$d,Conv2DBackpropInput:()=>Ls,Conv3D:()=>ic,Conv3DBackpropFilterV2:()=>Dd,Conv3DBackpropInputV2:()=>Md,Cos:()=>zs,Cosh:()=>Ho,CropAndResize:()=>jo,Cumsum:()=>Ws,CustomCallback:()=>Qk,DataStorage:()=>kd,DenseBincount:()=>Rd,DepthToSpace:()=>qo,DepthwiseConv2dNative:()=>Bs,DepthwiseConv2dNativeBackpropFilter:()=>Pd,DepthwiseConv2dNativeBackpropInput:()=>Od,Diag:()=>Ld,Dilation2D:()=>oc,Dilation2DBackpropFilter:()=>Wd,Dilation2DBackpropInput:()=>zd,ENV:()=>ry,EarlyStopping:()=>eN,Elu:()=>Xo,EluGrad:()=>Bd,Environment:()=>f0,Equal:()=>Yo,Erf:()=>Ko,Exp:()=>Us,ExpandDims:()=>Jo,Expm1:()=>Qo,FFT:()=>Vd,Fill:()=>lc,FlipLeftRight:()=>Zo,Floor:()=>Gs,FloorDiv:()=>Hs,FromPixels:()=>ah,FusedBatchNorm:()=>js,FusedConv2D:()=>Ni,FusedDepthwiseConv2D:()=>Ti,GatherNd:()=>tl,GatherV2:()=>el,GraphModel:()=>_N,Greater:()=>nl,GreaterEqual:()=>qs,History:()=>Jk,IFFT:()=>Ud,Identity:()=>Xs,Imag:()=>Gd,InputSpec:()=>Yt,IsFinite:()=>al,IsInf:()=>rl,IsNan:()=>sl,KernelBackend:()=>Zu,LRN:()=>pc,LRNGrad:()=>jd,LayerVariable:()=>Hk,LayersModel:()=>Nr,LeakyRelu:()=>Ks,Less:()=>il,LessEqual:()=>ol,LinSpace:()=>Hd,Log:()=>Ys,Log1p:()=>ll,LogSoftmax:()=>b0,LogicalAnd:()=>ul,LogicalNot:()=>uc,LogicalOr:()=>cc,Max:()=>Js,MaxPool:()=>Zs,MaxPool3D:()=>dc,MaxPool3DGrad:()=>Xd,MaxPoolGrad:()=>qd,MaxPoolWithArgmax:()=>Kd,Maximum:()=>Qs,Mean:()=>ei,Min:()=>ti,Minimum:()=>ni,MirrorPad:()=>hc,Mod:()=>cl,MomentumOptimizer:()=>Jh,Multinomial:()=>Yd,Multiply:()=>ai,Neg:()=>pl,NonMaxSuppressionV3:()=>hl,NonMaxSuppressionV4:()=>ml,NonMaxSuppressionV5:()=>fl,NotEqual:()=>dl,OP_SCOPE_SUFFIX:()=>F0,OneHot:()=>ri,OnesLike:()=>gl,Optimizer:()=>wr,Pack:()=>yl,PadV2:()=>si,Pool:()=>b_,Pow:()=>ii,Prelu:()=>oi,Prod:()=>bl,RMSPropOptimizer:()=>Qh,RNN:()=>nr,Range:()=>mc,Rank:()=>py,Real:()=>Jd,RealDiv:()=>Vs,Reciprocal:()=>xl,Reduction:()=>mn,Relu:()=>li,Relu6:()=>ci,Reshape:()=>vl,ResizeBilinear:()=>ui,ResizeBilinearGrad:()=>Zd,ResizeNearestNeighbor:()=>fc,ResizeNearestNeighborGrad:()=>Qd,Reverse:()=>pi,RotateWithOffset:()=>Ml,Round:()=>di,Rsqrt:()=>hi,SGDOptimizer:()=>Gc,ScatterNd:()=>wl,Select:()=>kl,Selu:()=>Il,Sequential:()=>su,Sigmoid:()=>fi,Sign:()=>Sl,Sin:()=>mi,Sinh:()=>Tl,Slice:()=>Nl,Softmax:()=>bi,Softplus:()=>Cl,SpaceToBatchND:()=>gc,SparseToDense:()=>eh,SplitV:()=>Al,Sqrt:()=>gi,Square:()=>yc,SquaredDifference:()=>xi,Step:()=>Xr,StridedSlice:()=>Fl,Sub:()=>vi,Sum:()=>yi,SymbolicTensor:()=>$a,Tan:()=>_l,Tanh:()=>wi,Tensor:()=>Fe,TensorBuffer:()=>Lt,Tile:()=>qr,TopK:()=>El,Transform:()=>th,Transpose:()=>ki,Unique:()=>nh,Unpack:()=>$l,UnsortedSegmentSum:()=>bc,Variable:()=>Kr,ZerosLike:()=>Dl,_FusedMatMul:()=>Ii,abs:()=>zt,acos:()=>Py,acosh:()=>Oy,add:()=>J,addN:()=>d1,all:()=>yh,any:()=>_c,argMax:()=>Ec,argMin:()=>Ly,asin:()=>zy,asinh:()=>Wy,atan:()=>By,atan2:()=>Vy,atanh:()=>Uy,avgPool:()=>Zn,avgPool3d:()=>jy,backend:()=>p1,backend_util:()=>E,basicLSTMCell:()=>J$,batchNorm:()=>br,batchNorm2d:()=>g1,batchNorm3d:()=>y1,batchNorm4d:()=>b1,batchToSpaceND:()=>Dc,bincount:()=>x1,booleanMaskAsync:()=>tP,broadcastTo:()=>Mc,browser:()=>Fi,buffer:()=>Le,callbacks:()=>G4,cast:()=>ue,ceil:()=>qy,clipByValue:()=>Xt,clone:()=>Zr,complex:()=>Yr,concat:()=>Je,concat1d:()=>v1,concat2d:()=>w1,concat3d:()=>k1,concat4d:()=>I1,constraints:()=>bk,conv1d:()=>xh,conv2d:()=>Et,conv2dTranspose:()=>vh,conv3d:()=>Ky,conv3dTranspose:()=>xD,copyRegisteredKernels:()=>w_,cos:()=>Rc,cosh:()=>wh,cosineWindow:()=>wb,cumsum:()=>kh,customGrad:()=>Xa,data:()=>$N,denseBincount:()=>T1,deprecationWarn:()=>Ry,depthToSpace:()=>Yy,depthwiseConv2d:()=>ns,deregisterOp:()=>j4,device_util:()=>Cc,diag:()=>CD,dilation2d:()=>Jy,disableDeprecationWarnings:()=>u$,dispose:()=>Ee,disposeVariables:()=>c$,div:()=>xe,divNoNan:()=>Qy,dot:()=>S1,dropout:()=>q1,elu:()=>Gl,enableDebugMode:()=>l$,enableProdMode:()=>o$,enclosingPowerOfTwo:()=>X1,engine:()=>Ha,env:()=>Z,equal:()=>as,erf:()=>Zy,exp:()=>hn,expandDims:()=>Rn,expm1:()=>eb,eye:()=>tb,fft:()=>Vc,fill:()=>Cn,findBackend:()=>y$,findBackendFactory:()=>b$,floor:()=>Hl,floorDiv:()=>gh,fused:()=>is,gather:()=>$i,gatherND:()=>j1,gather_util:()=>Ay,getBackend:()=>f$,getGradient:()=>ly,getKernel:()=>rh,getKernelsForBackend:()=>sh,grad:()=>nM,grads:()=>aM,greater:()=>ha,greaterEqual:()=>rs,ifft:()=>Jl,imag:()=>Ih,image:()=>Ja,inTopKAsync:()=>dP,initializers:()=>Tk,input:()=>Lk,io:()=>jt,irfft:()=>Lh,isFinite:()=>C1,isInf:()=>A1,isNaN:()=>F1,keep:()=>qt,kernel_impls:()=>Qa,layers:()=>Ok,leakyRelu:()=>Pc,less:()=>Nh,lessEqual:()=>Di,linalg:()=>ik,linspace:()=>_1,loadGraphModel:()=>HV,loadLayersModel:()=>c4,localResponseNormalization:()=>nb,log:()=>Pn,log1p:()=>Th,logSigmoid:()=>$1,logSoftmax:()=>Ch,logSumExp:()=>sb,logicalAnd:()=>ma,logicalNot:()=>Oc,logicalOr:()=>Ah,logicalXor:()=>P1,losses:()=>FO,matMul:()=>ze,math:()=>H0,max:()=>ea,maxPool:()=>$t,maxPool3d:()=>ib,maxPoolWithArgmax:()=>O1,maximum:()=>Ka,mean:()=>Ct,memory:()=>mh,metrics:()=>KI,min:()=>ql,minimum:()=>Xl,mirrorPad:()=>ob,mod:()=>lb,model:()=>l4,models:()=>YI,moments:()=>Fh,movingAverage:()=>rP,mul:()=>B,multiRNNCell:()=>$M,multinomial:()=>L1,neg:()=>St,nextFrame:()=>Zh,norm:()=>Vh,notEqual:()=>Ri,oneHot:()=>Wl,ones:()=>Ya,onesLike:()=>On,op:()=>O,outerProduct:()=>OM,pad:()=>ta,pad1d:()=>WM,pad2d:()=>VM,pad3d:()=>GM,pad4d:()=>jM,pool:()=>z1,pow:()=>xr,prelu:()=>zc,print:()=>z0,prod:()=>_h,profile:()=>p$,rand:()=>tR,randomGamma:()=>sR,randomNormal:()=>W1,randomUniform:()=>Kl,range:()=>Eh,ready:()=>m$,real:()=>Wc,reciprocal:()=>pb,registerBackend:()=>fh,registerCallbackConstructor:()=>p4,registerGradient:()=>x0,registerKernel:()=>vc,registerOp:()=>H4,regularizers:()=>JI,relu:()=>qe,relu6:()=>$h,removeBackend:()=>g$,reshape:()=>H,reverse:()=>Ln,reverse1d:()=>mR,reverse2d:()=>gR,reverse3d:()=>bR,reverse4d:()=>vR,rfft:()=>Uc,round:()=>db,rsqrt:()=>Dh,scalar:()=>ce,scatterND:()=>H1,scatter_util:()=>Fy,selu:()=>Mh,separableConv2d:()=>Pi,sequential:()=>u4,serialization:()=>re,setBackend:()=>h$,setPlatform:()=>x$,setWasmPath:()=>Gre,setWasmPaths:()=>Hre,setdiff1dAsync:()=>B1,sigmoid:()=>da,sign:()=>hb,signal:()=>AO,sin:()=>Rh,sinh:()=>Ph,slice:()=>Be,slice1d:()=>Oh,slice2d:()=>mb,slice3d:()=>Yl,slice4d:()=>Bc,slice_util:()=>dn,softmax:()=>Sa,softplus:()=>jl,spaceToBatchND:()=>Lc,sparseToDense:()=>vb,spectral:()=>CO,split:()=>zn,sqrt:()=>rn,square:()=>ut,squaredDifference:()=>zh,squeeze:()=>ss,stack:()=>Dt,step:()=>Ql,stridedSlice:()=>fb,sub:()=>me,sum:()=>Se,sumOutType:()=>uh,tan:()=>gb,tanh:()=>Ul,tensor:()=>Jn,tensor1d:()=>Ze,tensor2d:()=>Ca,tensor3d:()=>dh,tensor4d:()=>Aa,tensor5d:()=>jR,tensor6d:()=>qR,tensor_util:()=>Na,test_util:()=>o1,tidy:()=>M,tile:()=>qa,time:()=>d$,topk:()=>yb,train:()=>Li,transpose:()=>Ve,truncatedNormal:()=>Wh,unique:()=>Bh,unregisterGradient:()=>v_,unregisterKernel:()=>x_,unsortedSegmentSum:()=>bb,unstack:()=>ct,upcastType:()=>pa,util:()=>I,valueAndGrad:()=>rM,valueAndGrads:()=>sM,variable:()=>V1,variableGrads:()=>E1,version:()=>Qee,version_converter:()=>EN,version_core:()=>c1,version_layers:()=>Im,version_wasm:()=>jre,where:()=>Sn,whereAsync:()=>xb,zeros:()=>vt,zerosLike:()=>Ge});var mF=Object.create,wd=Object.defineProperty,fF=Object.getPrototypeOf,gF=Object.prototype.hasOwnProperty,yF=Object.getOwnPropertyNames,bF=Object.getOwnPropertyDescriptor,xF=e=>wd(e,"__esModule",{value:!0}),tt=(e,t)=>()=>(t||(t={exports:{}},e(t.exports,t)),t.exports),Oe=(e,t)=>{for(var n in t)wd(e,n,{get:t[n],enumerable:!0})},vF=(e,t,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of yF(t))!gF.call(e,a)&&a!=="default"&&wd(e,a,{get:()=>t[a],enumerable:!(n=bF(t,a))||n.enumerable});return e},Do=e=>vF(xF(wd(e!=null?mF(fF(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),wF=tt(()=>{}),kF=tt((e,t)=>{(function(n,a,r){function s(u){var c=this,p=l();c.next=function(){var d=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=d-(c.c=d|0)},c.c=1,c.s0=p(" "),c.s1=p(" "),c.s2=p(" "),c.s0-=p(u),c.s0<0&&(c.s0+=1),c.s1-=p(u),c.s1<0&&(c.s1+=1),c.s2-=p(u),c.s2<0&&(c.s2+=1),p=null}function i(u,c){return c.c=u.c,c.s0=u.s0,c.s1=u.s1,c.s2=u.s2,c}function o(u,c){var p=new s(u),d=c&&c.state,h=p.next;return h.int32=function(){return p.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&i(d,p),h.state=function(){return i(p,{})}),h}function l(){var u=4022871197,c=function(p){p=p.toString();for(var d=0;d<p.length;d++){u+=p.charCodeAt(d);var h=.02519603282416938*u;u=h>>>0,h-=u,h*=u,u=h>>>0,h-=u,u+=h*4294967296}return(u>>>0)*23283064365386963e-26};return c}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),IF=tt((e,t)=>{(function(n,a,r){function s(l){var u=this,c="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var d=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^d^d>>>8},l===(l|0)?u.x=l:c+=l;for(var p=0;p<c.length+64;p++)u.x^=c.charCodeAt(p)|0,u.next()}function i(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u}function o(l,u){var c=new s(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,m=(c.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&i(p,c),d.state=function(){return i(c,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),NF=tt((e,t)=>{(function(n,a,r){function s(l){var u=this,c="";u.next=function(){var d=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(d^d<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,l===(l|0)?u.x=l:c+=l;for(var p=0;p<c.length+64;p++)u.x^=c.charCodeAt(p)|0,p==c.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function i(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u.v=l.v,u.d=l.d,u}function o(l,u){var c=new s(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,m=(c.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&i(p,c),d.state=function(){return i(c,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),TF=tt((e,t)=>{(function(n,a,r){function s(l){var u=this;u.next=function(){var p=u.x,d=u.i,h,m,f;return h=p[d],h^=h>>>7,m=h^h<<24,h=p[d+1&7],m^=h^h>>>10,h=p[d+3&7],m^=h^h>>>3,h=p[d+4&7],m^=h^h<<7,h=p[d+7&7],h=h^h<<13,m^=h^h<<9,p[d]=m,u.i=d+1&7,m};function c(p,d){var h,m,f=[];if(d===(d|0))m=f[0]=d;else for(d=""+d,h=0;h<d.length;++h)f[h&7]=f[h&7]<<15^d.charCodeAt(h)+f[h+1&7]<<13;for(;f.length<8;)f.push(0);for(h=0;h<8&&f[h]===0;++h);for(h==8?m=f[7]=-1:m=f[h],p.x=f,p.i=0,h=256;h>0;--h)p.next()}c(u,l)}function i(l,u){return u.x=l.x.slice(),u.i=l.i,u}function o(l,u){l==null&&(l=+new Date);var c=new s(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,m=(c.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,p&&(p.x&&i(p,c),d.state=function(){return i(c,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),SF=tt((e,t)=>{(function(n,a,r){function s(l){var u=this;u.next=function(){var p=u.w,d=u.X,h=u.i,m,f;return u.w=p=p+1640531527|0,f=d[h+34&127],m=d[h=h+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=d[h]=f^m,u.i=h,f+(p^p>>>16)|0};function c(p,d){var h,m,f,g,y,b=[],x=128;for(d===(d|0)?(m=d,d=null):(d=d+"\0",m=0,x=Math.max(x,d.length)),f=0,g=-32;g<x;++g)d&&(m^=d.charCodeAt((g+32)%d.length)),g===0&&(y=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,g>=0&&(y=y+1640531527|0,h=b[g&127]^=m+y,f=h==0?f+1:0);for(f>=128&&(b[(d&&d.length||0)&127]=-1),f=127,g=4*128;g>0;--g)m=b[f+34&127],h=b[f=f+1&127],m^=m<<13,h^=h<<17,m^=m>>>15,h^=h>>>12,b[f]=m^h;p.w=y,p.X=b,p.i=f}c(u,l)}function i(l,u){return u.i=l.i,u.w=l.w,u.X=l.X.slice(),u}function o(l,u){l==null&&(l=+new Date);var c=new s(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,m=(c.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,p&&(p.X&&i(p,c),d.state=function(){return i(c,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),CF=tt((e,t)=>{(function(n,a,r){function s(l){var u=this,c="";u.next=function(){var d=u.b,h=u.c,m=u.d,f=u.a;return d=d<<25^d>>>7^h,h=h-m|0,m=m<<24^m>>>8^f,f=f-d|0,u.b=d=d<<20^d>>>12^h,u.c=h=h-m|0,u.d=m<<16^h>>>16^f,u.a=f-d|0},u.a=0,u.b=0,u.c=2654435769|0,u.d=1367130551,l===Math.floor(l)?(u.a=l/4294967296|0,u.b=l|0):c+=l;for(var p=0;p<c.length+20;p++)u.b^=c.charCodeAt(p)|0,u.next()}function i(l,u){return u.a=l.a,u.b=l.b,u.c=l.c,u.d=l.d,u}function o(l,u){var c=new s(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,m=(c.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&i(p,c),d.state=function(){return i(c,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),Zg=tt(()=>{}),AF=tt((e,t)=>{(function(n,a){var r=this,s=256,i=6,o=52,l="random",u=a.pow(s,i),c=a.pow(2,o),p=c*2,d=s-1,h;function m(k,w,S){var A=[];w=w==!0?{entropy:!0}:w||{};var F=b(y(w.entropy?[k,v(n)]:k==null?x():k,3),A),D=new f(A),R=function(){for(var L=D.g(i),W=u,U=0;L<c;)L=(L+U)*s,W*=s,U=D.g(1);for(;L>=p;)L/=2,W/=2,U>>>=1;return(L+U)/W};return R.int32=function(){return D.g(4)|0},R.quick=function(){return D.g(4)/4294967296},R.double=R,b(v(D.S),n),(w.pass||S||function(L,W,U,G){return G&&(G.S&&g(G,D),L.state=function(){return g(D,{})}),U?(a[l]=L,W):L})(R,F,"global"in w?w.global:this==a,w.state)}a["seed"+l]=m;function f(k){var w,S=k.length,A=this,F=0,D=A.i=A.j=0,R=A.S=[];for(S||(k=[S++]);F<s;)R[F]=F++;for(F=0;F<s;F++)R[F]=R[D=d&D+k[F%S]+(w=R[F])],R[D]=w;(A.g=function(L){for(var W,U=0,G=A.i,X=A.j,j=A.S;L--;)W=j[G=d&G+1],U=U*s+j[d&(j[G]=j[X=d&X+W])+(j[X]=W)];return A.i=G,A.j=X,U})(s)}function g(k,w){return w.i=k.i,w.j=k.j,w.S=k.S.slice(),w}function y(k,w){var S=[],A=typeof k,F;if(w&&A=="object")for(F in k)try{S.push(y(k[F],w-1))}catch(D){}return S.length?S:A=="string"?k:k+"\0"}function b(k,w){for(var S=k+"",A,F=0;F<S.length;)w[d&F]=d&(A^=w[d&F]*19)+S.charCodeAt(F++);return v(w)}function x(){try{var k;return h&&(k=h.randomBytes)?k=k(s):(k=new Uint8Array(s),(r.crypto||r.msCrypto).getRandomValues(k)),v(k)}catch(A){var w=r.navigator,S=w&&w.plugins;return[+new Date,r,S,r.screen,v(n)]}}function v(k){return String.fromCharCode.apply(0,k)}if(b(a.random(),n),typeof t=="object"&&t.exports){t.exports=m;try{h=Zg()}catch(k){}}else typeof define=="function"&&define.amd&&define(function(){return m})})([],Math)}),FF=tt((e,t)=>{var n=kF(),a=IF(),r=NF(),s=TF(),i=SF(),o=CF(),l=AF();l.alea=n,l.xor128=a,l.xorwow=r,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}),_F=tt((e,t)=>{(function(n,a,r){function s(u){var c=this,p=l();c.next=function(){var d=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=d-(c.c=d|0)},c.c=1,c.s0=p(" "),c.s1=p(" "),c.s2=p(" "),c.s0-=p(u),c.s0<0&&(c.s0+=1),c.s1-=p(u),c.s1<0&&(c.s1+=1),c.s2-=p(u),c.s2<0&&(c.s2+=1),p=null}function i(u,c){return c.c=u.c,c.s0=u.s0,c.s1=u.s1,c.s2=u.s2,c}function o(u,c){var p=new s(u),d=c&&c.state,h=p.next;return h.int32=function(){return p.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&i(d,p),h.state=function(){return i(p,{})}),h}function l(){var u=4022871197,c=function(p){p=p.toString();for(var d=0;d<p.length;d++){u+=p.charCodeAt(d);var h=.02519603282416938*u;u=h>>>0,h-=u,h*=u,u=h>>>0,h-=u,u+=h*4294967296}return(u>>>0)*23283064365386963e-26};return c}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),EF=tt((e,t)=>{(function(n,a,r){function s(l){var u=this,c="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var d=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^d^d>>>8},l===(l|0)?u.x=l:c+=l;for(var p=0;p<c.length+64;p++)u.x^=c.charCodeAt(p)|0,u.next()}function i(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u}function o(l,u){var c=new s(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,m=(c.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&i(p,c),d.state=function(){return i(c,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),$F=tt((e,t)=>{(function(n,a,r){function s(l){var u=this,c="";u.next=function(){var d=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(d^d<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,l===(l|0)?u.x=l:c+=l;for(var p=0;p<c.length+64;p++)u.x^=c.charCodeAt(p)|0,p==c.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function i(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u.v=l.v,u.d=l.d,u}function o(l,u){var c=new s(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,m=(c.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&i(p,c),d.state=function(){return i(c,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),DF=tt((e,t)=>{(function(n,a,r){function s(l){var u=this;u.next=function(){var p=u.x,d=u.i,h,m,f;return h=p[d],h^=h>>>7,m=h^h<<24,h=p[d+1&7],m^=h^h>>>10,h=p[d+3&7],m^=h^h>>>3,h=p[d+4&7],m^=h^h<<7,h=p[d+7&7],h=h^h<<13,m^=h^h<<9,p[d]=m,u.i=d+1&7,m};function c(p,d){var h,m,f=[];if(d===(d|0))m=f[0]=d;else for(d=""+d,h=0;h<d.length;++h)f[h&7]=f[h&7]<<15^d.charCodeAt(h)+f[h+1&7]<<13;for(;f.length<8;)f.push(0);for(h=0;h<8&&f[h]===0;++h);for(h==8?m=f[7]=-1:m=f[h],p.x=f,p.i=0,h=256;h>0;--h)p.next()}c(u,l)}function i(l,u){return u.x=l.x.slice(),u.i=l.i,u}function o(l,u){l==null&&(l=+new Date);var c=new s(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,m=(c.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,p&&(p.x&&i(p,c),d.state=function(){return i(c,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),MF=tt((e,t)=>{(function(n,a,r){function s(l){var u=this;u.next=function(){var p=u.w,d=u.X,h=u.i,m,f;return u.w=p=p+1640531527|0,f=d[h+34&127],m=d[h=h+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=d[h]=f^m,u.i=h,f+(p^p>>>16)|0};function c(p,d){var h,m,f,g,y,b=[],x=128;for(d===(d|0)?(m=d,d=null):(d=d+"\0",m=0,x=Math.max(x,d.length)),f=0,g=-32;g<x;++g)d&&(m^=d.charCodeAt((g+32)%d.length)),g===0&&(y=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,g>=0&&(y=y+1640531527|0,h=b[g&127]^=m+y,f=h==0?f+1:0);for(f>=128&&(b[(d&&d.length||0)&127]=-1),f=127,g=4*128;g>0;--g)m=b[f+34&127],h=b[f=f+1&127],m^=m<<13,h^=h<<17,m^=m>>>15,h^=h>>>12,b[f]=m^h;p.w=y,p.X=b,p.i=f}c(u,l)}function i(l,u){return u.i=l.i,u.w=l.w,u.X=l.X.slice(),u}function o(l,u){l==null&&(l=+new Date);var c=new s(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,m=(c.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,p&&(p.X&&i(p,c),d.state=function(){return i(c,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),RF=tt((e,t)=>{(function(n,a,r){function s(l){var u=this,c="";u.next=function(){var d=u.b,h=u.c,m=u.d,f=u.a;return d=d<<25^d>>>7^h,h=h-m|0,m=m<<24^m>>>8^f,f=f-d|0,u.b=d=d<<20^d>>>12^h,u.c=h=h-m|0,u.d=m<<16^h>>>16^f,u.a=f-d|0},u.a=0,u.b=0,u.c=2654435769|0,u.d=1367130551,l===Math.floor(l)?(u.a=l/4294967296|0,u.b=l|0):c+=l;for(var p=0;p<c.length+20;p++)u.b^=c.charCodeAt(p)|0,u.next()}function i(l,u){return u.a=l.a,u.b=l.b,u.c=l.c,u.d=l.d,u}function o(l,u){var c=new s(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,m=(c.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&i(p,c),d.state=function(){return i(c,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),PF=tt((e,t)=>{(function(n,a){var r=(0,eval)("this"),s=256,i=6,o=52,l="random",u=a.pow(s,i),c=a.pow(2,o),p=c*2,d=s-1,h;function m(k,w,S){var A=[];w=w==!0?{entropy:!0}:w||{};var F=b(y(w.entropy?[k,v(n)]:k==null?x():k,3),A),D=new f(A),R=function(){for(var L=D.g(i),W=u,U=0;L<c;)L=(L+U)*s,W*=s,U=D.g(1);for(;L>=p;)L/=2,W/=2,U>>>=1;return(L+U)/W};return R.int32=function(){return D.g(4)|0},R.quick=function(){return D.g(4)/4294967296},R.double=R,b(v(D.S),n),(w.pass||S||function(L,W,U,G){return G&&(G.S&&g(G,D),L.state=function(){return g(D,{})}),U?(a[l]=L,W):L})(R,F,"global"in w?w.global:this==a,w.state)}a["seed"+l]=m;function f(k){var w,S=k.length,A=this,F=0,D=A.i=A.j=0,R=A.S=[];for(S||(k=[S++]);F<s;)R[F]=F++;for(F=0;F<s;F++)R[F]=R[D=d&D+k[F%S]+(w=R[F])],R[D]=w;(A.g=function(L){for(var W,U=0,G=A.i,X=A.j,j=A.S;L--;)W=j[G=d&G+1],U=U*s+j[d&(j[G]=j[X=d&X+W])+(j[X]=W)];return A.i=G,A.j=X,U})(s)}function g(k,w){return w.i=k.i,w.j=k.j,w.S=k.S.slice(),w}function y(k,w){var S=[],A=typeof k,F;if(w&&A=="object")for(F in k)try{S.push(y(k[F],w-1))}catch(D){}return S.length?S:A=="string"?k:k+"\0"}function b(k,w){for(var S=k+"",A,F=0;F<S.length;)w[d&F]=d&(A^=w[d&F]*19)+S.charCodeAt(F++);return v(w)}function x(){try{var k;return h&&(k=h.randomBytes)?k=k(s):(k=new Uint8Array(s),(r.crypto||r.msCrypto).getRandomValues(k)),v(k)}catch(A){var w=r.navigator,S=w&&w.plugins;return[+new Date,r,S,r.screen,v(n)]}}function v(k){return String.fromCharCode.apply(0,k)}if(b(a.random(),n),typeof t=="object"&&t.exports){t.exports=m;try{h=Zg()}catch(k){}}else typeof define=="function"&&define.amd&&define(function(){return m})})([],Math)}),a0=tt((e,t)=>{var n=_F(),a=EF(),r=$F(),s=DF(),i=MF(),o=RF(),l=PF();l.alea=n,l.xor128=a,l.xorwow=r,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}),OF=tt(()=>{}),LF=tt((e,t)=>{(function(n,a,r){function s(u){var c=this,p=l();c.next=function(){var d=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=d-(c.c=d|0)},c.c=1,c.s0=p(" "),c.s1=p(" "),c.s2=p(" "),c.s0-=p(u),c.s0<0&&(c.s0+=1),c.s1-=p(u),c.s1<0&&(c.s1+=1),c.s2-=p(u),c.s2<0&&(c.s2+=1),p=null}function i(u,c){return c.c=u.c,c.s0=u.s0,c.s1=u.s1,c.s2=u.s2,c}function o(u,c){var p=new s(u),d=c&&c.state,h=p.next;return h.int32=function(){return p.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&i(d,p),h.state=function(){return i(p,{})}),h}function l(){var u=4022871197,c=function(p){p=p.toString();for(var d=0;d<p.length;d++){u+=p.charCodeAt(d);var h=.02519603282416938*u;u=h>>>0,h-=u,h*=u,u=h>>>0,h-=u,u+=h*4294967296}return(u>>>0)*23283064365386963e-26};return c}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),zF=tt((e,t)=>{(function(n,a,r){function s(l){var u=this,c="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var d=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^d^d>>>8},l===(l|0)?u.x=l:c+=l;for(var p=0;p<c.length+64;p++)u.x^=c.charCodeAt(p)|0,u.next()}function i(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u}function o(l,u){var c=new s(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,m=(c.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&i(p,c),d.state=function(){return i(c,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),WF=tt((e,t)=>{(function(n,a,r){function s(l){var u=this,c="";u.next=function(){var d=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(d^d<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,l===(l|0)?u.x=l:c+=l;for(var p=0;p<c.length+64;p++)u.x^=c.charCodeAt(p)|0,p==c.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function i(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u.v=l.v,u.d=l.d,u}function o(l,u){var c=new s(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,m=(c.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&i(p,c),d.state=function(){return i(c,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),BF=tt((e,t)=>{(function(n,a,r){function s(l){var u=this;u.next=function(){var p=u.x,d=u.i,h,m,f;return h=p[d],h^=h>>>7,m=h^h<<24,h=p[d+1&7],m^=h^h>>>10,h=p[d+3&7],m^=h^h>>>3,h=p[d+4&7],m^=h^h<<7,h=p[d+7&7],h=h^h<<13,m^=h^h<<9,p[d]=m,u.i=d+1&7,m};function c(p,d){var h,m,f=[];if(d===(d|0))m=f[0]=d;else for(d=""+d,h=0;h<d.length;++h)f[h&7]=f[h&7]<<15^d.charCodeAt(h)+f[h+1&7]<<13;for(;f.length<8;)f.push(0);for(h=0;h<8&&f[h]===0;++h);for(h==8?m=f[7]=-1:m=f[h],p.x=f,p.i=0,h=256;h>0;--h)p.next()}c(u,l)}function i(l,u){return u.x=l.x.slice(),u.i=l.i,u}function o(l,u){l==null&&(l=+new Date);var c=new s(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,m=(c.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,p&&(p.x&&i(p,c),d.state=function(){return i(c,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),VF=tt((e,t)=>{(function(n,a,r){function s(l){var u=this;u.next=function(){var p=u.w,d=u.X,h=u.i,m,f;return u.w=p=p+1640531527|0,f=d[h+34&127],m=d[h=h+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=d[h]=f^m,u.i=h,f+(p^p>>>16)|0};function c(p,d){var h,m,f,g,y,b=[],x=128;for(d===(d|0)?(m=d,d=null):(d=d+"\0",m=0,x=Math.max(x,d.length)),f=0,g=-32;g<x;++g)d&&(m^=d.charCodeAt((g+32)%d.length)),g===0&&(y=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,g>=0&&(y=y+1640531527|0,h=b[g&127]^=m+y,f=h==0?f+1:0);for(f>=128&&(b[(d&&d.length||0)&127]=-1),f=127,g=4*128;g>0;--g)m=b[f+34&127],h=b[f=f+1&127],m^=m<<13,h^=h<<17,m^=m>>>15,h^=h>>>12,b[f]=m^h;p.w=y,p.X=b,p.i=f}c(u,l)}function i(l,u){return u.i=l.i,u.w=l.w,u.X=l.X.slice(),u}function o(l,u){l==null&&(l=+new Date);var c=new s(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,m=(c.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,p&&(p.X&&i(p,c),d.state=function(){return i(c,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),UF=tt((e,t)=>{(function(n,a,r){function s(l){var u=this,c="";u.next=function(){var d=u.b,h=u.c,m=u.d,f=u.a;return d=d<<25^d>>>7^h,h=h-m|0,m=m<<24^m>>>8^f,f=f-d|0,u.b=d=d<<20^d>>>12^h,u.c=h=h-m|0,u.d=m<<16^h>>>16^f,u.a=f-d|0},u.a=0,u.b=0,u.c=2654435769|0,u.d=1367130551,l===Math.floor(l)?(u.a=l/4294967296|0,u.b=l|0):c+=l;for(var p=0;p<c.length+20;p++)u.b^=c.charCodeAt(p)|0,u.next()}function i(l,u){return u.a=l.a,u.b=l.b,u.c=l.c,u.d=l.d,u}function o(l,u){var c=new s(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,m=(c.next()>>>0)/4294967296,f=(h+m)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&i(p,c),d.state=function(){return i(c,{})}),d}a&&a.exports?a.exports=o:r&&r.amd?r(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),GF=tt((e,t)=>{(function(n,a){var r=this,s=256,i=6,o=52,l="random",u=a.pow(s,i),c=a.pow(2,o),p=c*2,d=s-1,h;function m(k,w,S){var A=[];w=w==!0?{entropy:!0}:w||{};var F=b(y(w.entropy?[k,v(n)]:k==null?x():k,3),A),D=new f(A),R=function(){for(var L=D.g(i),W=u,U=0;L<c;)L=(L+U)*s,W*=s,U=D.g(1);for(;L>=p;)L/=2,W/=2,U>>>=1;return(L+U)/W};return R.int32=function(){return D.g(4)|0},R.quick=function(){return D.g(4)/4294967296},R.double=R,b(v(D.S),n),(w.pass||S||function(L,W,U,G){return G&&(G.S&&g(G,D),L.state=function(){return g(D,{})}),U?(a[l]=L,W):L})(R,F,"global"in w?w.global:this==a,w.state)}a["seed"+l]=m;function f(k){var w,S=k.length,A=this,F=0,D=A.i=A.j=0,R=A.S=[];for(S||(k=[S++]);F<s;)R[F]=F++;for(F=0;F<s;F++)R[F]=R[D=d&D+k[F%S]+(w=R[F])],R[D]=w;(A.g=function(L){for(var W,U=0,G=A.i,X=A.j,j=A.S;L--;)W=j[G=d&G+1],U=U*s+j[d&(j[G]=j[X=d&X+W])+(j[X]=W)];return A.i=G,A.j=X,U})(s)}function g(k,w){return w.i=k.i,w.j=k.j,w.S=k.S.slice(),w}function y(k,w){var S=[],A=typeof k,F;if(w&&A=="object")for(F in k)try{S.push(y(k[F],w-1))}catch(D){}return S.length?S:A=="string"?k:k+"\0"}function b(k,w){for(var S=k+"",A,F=0;F<S.length;)w[d&F]=d&(A^=w[d&F]*19)+S.charCodeAt(F++);return v(w)}function x(){try{var k;return h&&(k=h.randomBytes)?k=k(s):(k=new Uint8Array(s),(r.crypto||r.msCrypto).getRandomValues(k)),v(k)}catch(A){var w=r.navigator,S=w&&w.plugins;return[+new Date,r,S,r.screen,v(n)]}}function v(k){return String.fromCharCode.apply(0,k)}if(b(a.random(),n),typeof t=="object"&&t.exports){t.exports=m;try{h=Zg()}catch(k){}}else typeof define=="function"&&define.amd&&define(function(){return m})})([],Math)}),HF=tt((e,t)=>{var n=LF(),a=zF(),r=WF(),s=BF(),i=VF(),o=UF(),l=GF();l.alea=n,l.xor128=a,l.xorwow=r,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}),Qu=tt(()=>{}),jF=tt(()=>{}),qF=tt(()=>{}),XF=tt((e,t)=>{var n=function(){var a=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(a=a||__filename),function(r){r=r||{};function s(){return ee.buffer!=We&&nn(ee.buffer),wn}function i(){return ee.buffer!=We&&nn(ee.buffer),Nt}function o(){return ee.buffer!=We&&nn(ee.buffer),kn}function l(){return ee.buffer!=We&&nn(ee.buffer),Kn}function u(){return ee.buffer!=We&&nn(ee.buffer),pn}var c=typeof r!="undefined"?r:{},p,d;c.ready=new Promise(function(T,C){p=T,d=C});var h={},m;for(m in c)c.hasOwnProperty(m)&&(h[m]=c[m]);var f=[],g="./this.program",y=function(T,C){throw C},b=!1,x=!1,v=!1,k=!1;b=typeof window=="object",x=typeof importScripts=="function",v=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",k=!b&&!v&&!x;var w=c.ENVIRONMENT_IS_PTHREAD||!1;w&&(We=c.buffer);var S="";function A(T){return c.locateFile?c.locateFile(T,S):S+T}var F,D,R,L,W,U;if(v){x?S=Qu().dirname(S)+"/":S=__dirname+"/",F=function(T,C){return W||(W=require("fs")),U||(U=Qu()),T=U.normalize(T),W.readFileSync(T,C?null:"utf8")},R=function(T){var C=F(T,!0);return C.buffer||(C=new Uint8Array(C)),fe(C.buffer),C},process.argv.length>1&&(g=process.argv[1].replace(/\\/g,"/")),f=process.argv.slice(2),process.on("uncaughtException",function(T){if(!(T instanceof Yu))throw T}),process.on("unhandledRejection",hr),y=function(T){process.exit(T)},c.inspect=function(){return"[Emscripten Module object]"};var G;try{G=jF()}catch(T){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),T}global.Worker=G.Worker}else k?(typeof read!="undefined"&&(F=function(T){return read(T)}),R=function(T){var C;return typeof readbuffer=="function"?new Uint8Array(readbuffer(T)):(C=read(T,"binary"),fe(typeof C=="object"),C)},typeof scriptArgs!="undefined"?f=scriptArgs:typeof arguments!="undefined"&&(f=arguments),typeof quit=="function"&&(y=function(T){quit(T)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(b||x)&&(x?S=self.location.href:typeof document!="undefined"&&document.currentScript&&(S=document.currentScript.src),typeof a!="undefined"&&a&&(S=a),S.indexOf("blob:")!==0?S=S.substr(0,S.lastIndexOf("/")+1):S="",v?(F=function(T,C){return W||(W=require("fs")),U||(U=Qu()),T=U.normalize(T),W.readFileSync(T,C?null:"utf8")},R=function(T){var C=F(T,!0);return C.buffer||(C=new Uint8Array(C)),fe(C.buffer),C}):(F=function(T){var C=new XMLHttpRequest;return C.open("GET",T,!1),C.send(null),C.responseText},x&&(R=function(T){var C=new XMLHttpRequest;return C.open("GET",T,!1),C.responseType="arraybuffer",C.send(null),new Uint8Array(C.response)}),D=function(T,C,z){var q=new XMLHttpRequest;q.open("GET",T,!0),q.responseType="arraybuffer",q.onload=function(){if(q.status==200||q.status==0&&q.response){C(q.response);return}z()},q.onerror=z,q.send(null)}),L=function(T){document.title=T});v&&typeof performance=="undefined"&&(global.performance=qF().performance);var X=c.print||console.log.bind(console),j=c.printErr||console.warn.bind(console);for(m in h)h.hasOwnProperty(m)&&(c[m]=h[m]);h=null,c.arguments&&(f=c.arguments),c.thisProgram&&(g=c.thisProgram),c.quit&&(y=c.quit);var te=Atomics.load,Q=Atomics.store,se=Atomics.compareExchange,ne;c.wasmBinary&&(ne=c.wasmBinary);var ie=c.noExitRuntime||!0;typeof WebAssembly!="object"&&hr("no native wasm support detected");var ee,de,oe=!1,ge;function fe(T,C){T||hr("Assertion failed: "+C)}function we(T){var C=c["_"+T];return fe(C,"Cannot call unknown function "+T+", make sure it is exported"),C}function Ne(T,C,z,q,he){var le={string:function(Tn){var $o=0;if(Tn!=null&&Tn!==0){var t0=(Tn.length<<2)+1;$o=Fo(t0),rt(Tn,$o,t0)}return $o},array:function(Tn){var $o=Fo(Tn.length);return Ke(Tn,$o),$o}};function pe(Tn){return C==="string"?_e(Tn):C==="boolean"?Boolean(Tn):Tn}var be=we(T),st=[],Gt=0;if(q)for(var Pt=0;Pt<q.length;Pt++){var Vr=le[z[Pt]];Vr?(Gt===0&&(Gt=Ku()),st[Pt]=Vr(q[Pt])):st[Pt]=q[Pt]}var Eo=be.apply(null,st);return Eo=pe(Eo),Gt!==0&&Ao(Gt),Eo}function Ae(T,C,z,q){z=z||[];var he=z.every(function(pe){return pe==="number"}),le=C!=="string";return le&&he&&!q?we(T):function(){return Ne(T,C,z,arguments,q)}}function Me(T,C,z){for(var q=C+z,he="";!(C>=q);){var le=T[C++];if(!le)return he;if(!(le&128)){he+=String.fromCharCode(le);continue}var pe=T[C++]&63;if((le&224)==192){he+=String.fromCharCode((le&31)<<6|pe);continue}var be=T[C++]&63;if((le&240)==224?le=(le&15)<<12|pe<<6|be:le=(le&7)<<18|pe<<12|be<<6|T[C++]&63,le<65536)he+=String.fromCharCode(le);else{var st=le-65536;he+=String.fromCharCode(55296|st>>10,56320|st&1023)}}return he}function _e(T,C){return T?Me(i(),T,C):""}function at(T,C,z,q){if(!(q>0))return 0;for(var he=z,le=z+q-1,pe=0;pe<T.length;++pe){var be=T.charCodeAt(pe);if(be>=55296&&be<=57343){var st=T.charCodeAt(++pe);be=65536+((be&1023)<<10)|st&1023}if(be<=127){if(z>=le)break;C[z++]=be}else if(be<=2047){if(z+1>=le)break;C[z++]=192|be>>6,C[z++]=128|be&63}else if(be<=65535){if(z+2>=le)break;C[z++]=224|be>>12,C[z++]=128|be>>6&63,C[z++]=128|be&63}else{if(z+3>=le)break;C[z++]=240|be>>18,C[z++]=128|be>>12&63,C[z++]=128|be>>6&63,C[z++]=128|be&63}}return C[z]=0,z-he}function rt(T,C,z){return at(T,i(),C,z)}function lt(T){for(var C=0,z=0;z<T.length;++z){var q=T.charCodeAt(z);q>=55296&&q<=57343&&(q=65536+((q&1023)<<10)|T.charCodeAt(++z)&1023),q<=127?++C:q<=2047?C+=2:q<=65535?C+=3:C+=4}return C}function Ke(T,C){s().set(T,C)}function gt(T,C){return T%C>0&&(T+=C-T%C),T}var We,wn,Nt,Xn,tn,kn,Kn,Mn,pn;function nn(T){We=T,c.HEAP8=wn=new Int8Array(T),c.HEAP16=Xn=new Int16Array(T),c.HEAP32=kn=new Int32Array(T),c.HEAPU8=Nt=new Uint8Array(T),c.HEAPU16=tn=new Uint16Array(T),c.HEAPU32=Kn=new Uint32Array(T),c.HEAPF32=Mn=new Float32Array(T),c.HEAPF64=pn=new Float64Array(T)}var Va=c.INITIAL_MEMORY||16777216;if(w)ee=c.wasmMemory,We=c.buffer;else if(c.wasmMemory)ee=c.wasmMemory;else if(ee=new WebAssembly.Memory({initial:Va/65536,maximum:2147483648/65536,shared:!0}),!(ee.buffer instanceof SharedArrayBuffer))throw j("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),v&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");ee&&(We=ee.buffer),Va=We.byteLength,nn(We);var oa,la=[],Pr=[],pr=[],Or=[],wo=[],Ia=!1,Jp=!1;w||Pr.push({func:function(){hd()}}),w&&(Ia=!0);function Of(){if(!w){if(c.preRun)for(typeof c.preRun=="function"&&(c.preRun=[c.preRun]);c.preRun.length;)ed(c.preRun.shift());Io(la)}}function Qp(){Ia=!0,Io(Pr)}function Lf(){w||Io(pr)}function Zp(){w||(Jp=!0)}function In(){if(!w){if(c.postRun)for(typeof c.postRun=="function"&&(c.postRun=[c.postRun]);c.postRun.length;)zf(c.postRun.shift());Io(wo)}}function ed(T){la.unshift(T)}function zf(T){wo.unshift(T)}var dr=0,Lr=null,Ss=null;function Wf(T){fe(!w,"addRunDependency cannot be used in a pthread worker"),dr++,c.monitorRunDependencies&&c.monitorRunDependencies(dr)}function Bf(T){if(dr--,c.monitorRunDependencies&&c.monitorRunDependencies(dr),dr==0&&(Lr!==null&&(clearInterval(Lr),Lr=null),Ss)){var C=Ss;Ss=null,C()}}c.preloadedImages={},c.preloadedAudios={};function hr(T){c.onAbort&&c.onAbort(T),w&&console.error("Pthread aborting at "+new Error().stack),T+="",j(T),oe=!0,ge=1,T="abort("+T+"). Build with -s ASSERTIONS=1 for more info.";var C=new WebAssembly.RuntimeError(T);throw d(C),C}function td(T,C){return String.prototype.startsWith?T.startsWith(C):T.indexOf(C)===0}var ko="data:application/octet-stream;base64,";function nd(T){return td(T,ko)}var Vf="file://";function ad(T){return td(T,Vf)}var Nn="tfjs-backend-wasm-threaded-simd.wasm";nd(Nn)||(Nn=A(Nn));function Uf(T){try{if(T==Nn&&ne)return new Uint8Array(ne);if(R)return R(T);throw"both async and sync fetching of the wasm failed"}catch(C){hr(C)}}function rd(){if(!ne&&(b||x)){if(typeof fetch=="function"&&!ad(Nn))return fetch(Nn,{credentials:"same-origin"}).then(function(T){if(!T.ok)throw"failed to load wasm binary file at '"+Nn+"'";return T.arrayBuffer()}).catch(function(){return Uf(Nn)});if(D)return new Promise(function(T,C){D(Nn,function(z){T(new Uint8Array(z))},C)})}return Promise.resolve().then(function(){return Uf(Nn)})}function Gf(){var T={a:Mg};function C(pe,be){var st=pe.exports;if(c.asm=st,oa=c.asm.F,de=be,!w){var Gt=ke.unusedWorkers.length;ke.unusedWorkers.forEach(function(Pt){ke.loadWasmModuleToWorker(Pt,function(){--Gt||Bf("wasm-instantiate")})})}}w||Wf("wasm-instantiate");function z(pe){C(pe.instance,pe.module)}function q(pe){return rd().then(function(be){return WebAssembly.instantiate(be,T)}).then(pe,function(be){j("failed to asynchronously prepare wasm: "+be),hr(be)})}function he(){return!ne&&typeof WebAssembly.instantiateStreaming=="function"&&!nd(Nn)&&!ad(Nn)&&typeof fetch=="function"?fetch(Nn,{credentials:"same-origin"}).then(function(pe){var be=WebAssembly.instantiateStreaming(pe,T);return be.then(z,function(st){return j("wasm streaming compile failed: "+st),j("falling back to ArrayBuffer instantiation"),q(z)})}):q(z)}if(c.instantiateWasm)try{var le=c.instantiateWasm(T,C);return le}catch(pe){return j("Module.instantiateWasm callback failed with error: "+pe),!1}return he().catch(d),{}}var sd={8991:function(T,C){setTimeout(function(){Kw(T,C)},0)}};function Hf(){ke.initRuntime()}function Io(T){for(;T.length>0;){var C=T.shift();if(typeof C=="function"){C(c);continue}var z=C.func;typeof z=="number"?C.arg===void 0?oa.get(z)():oa.get(z)(C.arg):z(C.arg===void 0?null:C.arg)}}function No(T,C){if(T<=0||T>s().length||T&!0||C<0)return-28;if(C==0)return 0;C>=2147483647&&(C=Infinity);var z=Atomics.load(o(),_o>>2),q=0;if(z==T){var he=Atomics.compareExchange(o(),_o>>2,z,0);if(he==z&&(--C,q=1,C<=0))return 1}var le=Atomics.notify(o(),T>>2,C);if(le>=0)return le+q;throw"Atomics.notify returned an unexpected value "+le}c._emscripten_futex_wake=No;function jf(T){if(w)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!T)throw"Internal Error! Null pthread_ptr in killThread!";o()[T+12>>2]=0;var C=ke.pthreads[T];C.worker.terminate(),ke.freeThreadData(C),ke.runningWorkers.splice(ke.runningWorkers.indexOf(C.worker),1),C.worker.pthread=void 0}function qf(T){if(w)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!T)throw"Internal Error! Null pthread_ptr in cancelThread!";var C=ke.pthreads[T];C.worker.postMessage({cmd:"cancel"})}function Xf(T){if(w)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!T)throw"Internal Error! Null pthread_ptr in cleanupThread!";o()[T+12>>2]=0;var C=ke.pthreads[T];if(C){var z=C.worker;ke.returnWorkerToPool(z)}}var ke={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var T=8,C=0;C<T;++C)ke.allocateUnusedWorker()},initRuntime:function(){for(var T=As(228),C=0;C<228/4;++C)l()[T/4+C]=0;o()[T+12>>2]=T;var z=T+152;o()[z>>2]=z;for(var q=As(512),C=0;C<128;++C)l()[q/4+C]=0;Atomics.store(l(),T+100>>2,q),Atomics.store(l(),T+40>>2,T),bd(T,!x,1),Xw(T)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;ke.threadExitHandlers.length>0;)ke.threadExitHandlers.pop()();w&&Co()&&qw()},threadExit:function(T){var C=Co();C&&(Atomics.store(l(),C+4>>2,T),Atomics.store(l(),C+0>>2,1),Atomics.store(l(),C+56>>2,1),Atomics.store(l(),C+60>>2,0),ke.runExitHandlers(),No(C+0,2147483647),bd(0,0,0),w&&postMessage({cmd:"exit"}))},threadCancel:function(){ke.runExitHandlers();var T=Co();Atomics.store(l(),T+4>>2,-1),Atomics.store(l(),T+0>>2,1),No(T+0,2147483647),bd(0,0,0),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var T in ke.pthreads){var C=ke.pthreads[T];C&&C.worker&&ke.returnWorkerToPool(C.worker)}ke.pthreads={};for(var z=0;z<ke.unusedWorkers.length;++z){var q=ke.unusedWorkers[z];q.terminate()}ke.unusedWorkers=[];for(var z=0;z<ke.runningWorkers.length;++z){var q=ke.runningWorkers[z],C=q.pthread;ke.freeThreadData(C),q.terminate()}ke.runningWorkers=[]},freeThreadData:function(T){if(T){if(T.threadInfoStruct){var C=o()[T.threadInfoStruct+100>>2];o()[T.threadInfoStruct+100>>2]=0,Xu(C),Xu(T.threadInfoStruct)}T.threadInfoStruct=0,T.allocatedOwnStack&&T.stackBase&&Xu(T.stackBase),T.stackBase=0,T.worker&&(T.worker.pthread=null)}},returnWorkerToPool:function(T){ke.runWithoutMainThreadQueuedCalls(function(){delete ke.pthreads[T.pthread.threadInfoStruct],ke.unusedWorkers.push(T),ke.runningWorkers.splice(ke.runningWorkers.indexOf(T),1),ke.freeThreadData(T.pthread),T.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(T){o()[e0>>2]=0;try{T()}finally{o()[e0>>2]=1}},receiveObjectTransfer:function(T){},loadWasmModuleToWorker:function(T,C){T.onmessage=function(z){var q=z.data,he=q.cmd;if(T.pthread&&(ke.currentProxiedOperationCallerThread=T.pthread.threadInfoStruct),q.targetThread&&q.targetThread!=Co()){var le=ke.pthreads[q.targetThread];le?le.worker.postMessage(z.data,q.transferList):console.error('Internal error! Worker sent a message "'+he+'" to target pthread '+q.targetThread+", but that thread no longer exists!"),ke.currentProxiedOperationCallerThread=void 0;return}if(he==="processQueuedMainThreadWork")Kg();else if(he==="spawnThread")pd(z.data);else if(he==="cleanupThread")Xf(q.thread);else if(he==="killThread")jf(q.thread);else if(he==="cancelThread")qf(q.thread);else if(he==="loaded")T.loaded=!0,C&&C(T),T.runPthread&&(T.runPthread(),delete T.runPthread);else if(he==="print")X("Thread "+q.threadId+": "+q.text);else if(he==="printErr")j("Thread "+q.threadId+": "+q.text);else if(he==="alert")alert("Thread "+q.threadId+": "+q.text);else if(he==="exit"){var pe=T.pthread&&Atomics.load(l(),T.pthread.threadInfoStruct+64>>2);pe&&ke.returnWorkerToPool(T)}else if(he==="exitProcess")try{sF(q.returnCode)}catch(be){if(be instanceof Yu)return;throw be}else he==="cancelDone"?ke.returnWorkerToPool(T):he==="objectTransfer"?ke.receiveObjectTransfer(z.data):z.data.target==="setimmediate"?T.postMessage(z.data):j("worker sent an unknown command "+he);ke.currentProxiedOperationCallerThread=void 0},T.onerror=function(z){j("pthread sent an error! "+z.filename+":"+z.lineno+": "+z.message)},v&&(T.on("message",function(z){T.onmessage({data:z})}),T.on("error",function(z){T.onerror(z)}),T.on("exit",function(z){})),T.postMessage({cmd:"load",urlOrBlob:c.mainScriptUrlOrBlob||a,wasmMemory:ee,wasmModule:de})},allocateUnusedWorker:function(){var T=A("tfjs-backend-wasm-threaded-simd.worker.js");ke.unusedWorkers.push(new Worker(T))},getNewWorker:function(){return ke.unusedWorkers.length==0&&(ke.allocateUnusedWorker(),ke.loadWasmModuleToWorker(ke.unusedWorkers[0])),ke.unusedWorkers.length>0?ke.unusedWorkers.pop():null},busySpinWait:function(T){for(var C=performance.now()+T;performance.now()<C;);}};function Kf(T,C){Qw(T,C),Ao(T)}c.establishStackSpace=Kf;function Yf(){return ie}c.getNoExitRuntime=Yf;function Jf(T,C){return oa.get(T)(C)}c.invokeEntryPoint=Jf;function Qf(T,C,z,q){hr("Assertion failed: "+_e(T)+", at: "+[C?_e(C):"unknown filename",z,q?_e(q):"unknown function"])}function Zf(T,C){var z=_main(T,C)}var Cs;v?Cs=function(){var T=process.hrtime();return T[0]*1e3+T[1]/1e6}:w?Cs=function(){return performance.now()-c.__performance_now_clock_drift}:typeof dateNow!="undefined"?Cs=dateNow:Cs=function(){return performance.now()};function eg(T){return o()[Hw()>>2]=T,T}function tg(T,C){if(w)return zr(1,1,T,C)}function ng(T,C){if(T==C)postMessage({cmd:"processQueuedMainThreadWork"});else if(w)postMessage({targetThread:T,cmd:"processThreadQueue"});else{var z=ke.pthreads[T],q=z&&z.worker;if(!q)return;q.postMessage({cmd:"processThreadQueue"})}return 1}function ag(){hr()}function rg(T,C,z){var q=ug(C,z);return sd[T].apply(null,q)}function sg(T,C){}function ig(T,C,z){if(T<=0||T>s().length||T&!0)return-28;if(b){if(Atomics.load(o(),T>>2)!=C)return-6;for(var q=performance.now(),he=q+z,le=Atomics.exchange(o(),_o>>2,T);;){if(q=performance.now(),q>he)return le=Atomics.exchange(o(),_o>>2,0),-73;if(le=Atomics.exchange(o(),_o>>2,0),le==0)break;if(Kg(),Atomics.load(o(),T>>2)!=C)return-6;le=Atomics.exchange(o(),_o>>2,T)}return 0}else{var pe=Atomics.wait(o(),T>>2,C,z);if(pe==="timed-out")return-73;if(pe==="not-equal")return-6;if(pe==="ok")return 0;throw"Atomics.wait returned an unexpected value "+pe}}function og(T,C,z){i().copyWithin(T,C,C+z)}function lg(){return v?require("os").cpus().length:navigator.hardwareConcurrency}function zr(T,C){for(var z=arguments.length-2,q=Ku(),he=z,le=Fo(he*8),pe=le>>3,be=0;be<z;be++){var st=arguments[2+be];u()[pe+be]=st}var Gt=Jw(T,he,le,C);return Ao(q),Gt}var Vu=[],Uu=[];function ug(T,C){Uu.length=0;var z;for(C>>=2;z=i()[T++];){var q=z<105;q&&C&1&&C++,Uu.push(q?u()[C++>>1]:o()[C]),++C}return Uu}function cg(T,C,z){Vu.length=C;for(var q=z>>3,he=0;he<C;he++)Vu[he]=u()[q+he];var le=T<0,pe=le?sd[-T-1]:Dg[T];return pe.apply(null,Vu)}function pg(){return i().length}function dg(T){try{return ee.grow(T-We.byteLength+65535>>>16),nn(ee.buffer),1}catch(C){}}function hg(T){var C=pg();if(T<=C)return!1;var z=2147483648;if(T>z)return!1;for(var q=1;q<=4;q*=2){var he=C*(1+.2/q);he=Math.min(he,T+100663296);var le=Math.min(z,gt(Math.max(T,he),65536)),pe=dg(le);if(pe)return!0}return!1}var Pe={inEventHandler:0,removeAllEventListeners:function(){for(var T=Pe.eventHandlers.length-1;T>=0;--T)Pe._removeHandler(T);Pe.eventHandlers=[],Pe.deferredCalls=[]},registerRemoveEventListeners:function(){Pe.removeEventListenersRegistered||(Or.push(Pe.removeAllEventListeners),Pe.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(T,C,z){function q(pe,be){if(pe.length!=be.length)return!1;for(var st in pe)if(pe[st]!=be[st])return!1;return!0}for(var he in Pe.deferredCalls){var le=Pe.deferredCalls[he];if(le.targetFunction==T&&q(le.argsList,z))return}Pe.deferredCalls.push({targetFunction:T,precedence:C,argsList:z}),Pe.deferredCalls.sort(function(pe,be){return pe.precedence<be.precedence})},removeDeferredCalls:function(T){for(var C=0;C<Pe.deferredCalls.length;++C)Pe.deferredCalls[C].targetFunction==T&&(Pe.deferredCalls.splice(C,1),--C)},canPerformEventHandlerRequests:function(){return Pe.inEventHandler&&Pe.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(Pe.canPerformEventHandlerRequests())for(var T=0;T<Pe.deferredCalls.length;++T){var C=Pe.deferredCalls[T];Pe.deferredCalls.splice(T,1),--T,C.targetFunction.apply(null,C.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(T,C){for(var z=0;z<Pe.eventHandlers.length;++z)Pe.eventHandlers[z].target==T&&(!C||C==Pe.eventHandlers[z].eventTypeString)&&Pe._removeHandler(z--)},_removeHandler:function(T){var C=Pe.eventHandlers[T];C.target.removeEventListener(C.eventTypeString,C.eventListenerFunc,C.useCapture),Pe.eventHandlers.splice(T,1)},registerOrRemoveHandler:function(T){var C=function(q){++Pe.inEventHandler,Pe.currentEventHandler=T,Pe.runDeferredCalls(),T.handlerFunc(q),Pe.runDeferredCalls(),--Pe.inEventHandler};if(T.callbackfunc)T.eventListenerFunc=C,T.target.addEventListener(T.eventTypeString,C,T.useCapture),Pe.eventHandlers.push(T),Pe.registerRemoveEventListeners();else for(var z=0;z<Pe.eventHandlers.length;++z)Pe.eventHandlers[z].target==T.target&&Pe.eventHandlers[z].eventTypeString==T.eventTypeString&&Pe._removeHandler(z--)},queueEventHandlerOnThread_iiii:function(T,C,z,q,he){var le=Ku(),pe=Fo(12);o()[pe>>2]=z,o()[pe+4>>2]=q,o()[pe+8>>2]=he,Yg(0,T,637534208,C,q,pe),Ao(le)},getTargetThreadForEventCallback:function(T){switch(T){case 1:return 0;case 2:return ke.currentProxiedOperationCallerThread;default:return T}},getNodeNameForTarget:function(T){return T?T==window?"#window":T==screen?"#screen":T&&T.nodeName?T.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function mg(T){var C=lt(T)+1,z=As(C);return rt(T,z,C),z}function fg(T,C,z,q){var he=Ku(),le=Fo(12),pe=0;C&&(pe=mg(C)),o()[le>>2]=pe,o()[le+4>>2]=z,o()[le+8>>2]=q,Yg(0,T,657457152,0,pe,le),Ao(he)}function gg(T,C,z,q){C=C?_e(C):"",fg(T,C,z,q)}function yg(T){return T>2?_e(T):T}var bg=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function xg(T){T=yg(T);var C=bg[T]||(typeof document!="undefined"?document.querySelector(T):void 0);return C}function Gu(T){return xg(T)}function id(T,C,z){var q=Gu(T);if(!q)return-4;if(q.canvasSharedPtr&&(o()[q.canvasSharedPtr>>2]=C,o()[q.canvasSharedPtr+4>>2]=z),q.offscreenCanvas||!q.controlTransferredOffscreen){q.offscreenCanvas&&(q=q.offscreenCanvas);var he=!1;if(q.GLctxObject&&q.GLctxObject.GLctx){var le=q.GLctxObject.GLctx.getParameter(2978);he=le[0]===0&&le[1]===0&&le[2]===q.width&&le[3]===q.height}q.width=C,q.height=z,he&&q.GLctxObject.GLctx.viewport(0,0,C,z)}else if(q.canvasSharedPtr){var pe=o()[q.canvasSharedPtr+8>>2];return gg(pe,T,C,z),1}else return-4;return 0}function od(T,C,z){return w?zr(2,1,T,C,z):id(T,C,z)}function vg(T,C,z){var q=Gu(T);return q?id(T,C,z):od(T,C,z)}function wg(T){}function kg(T,C){}function Ig(T){var C=T.getExtension("ANGLE_instanced_arrays");if(C)return T.vertexAttribDivisor=function(z,q){C.vertexAttribDivisorANGLE(z,q)},T.drawArraysInstanced=function(z,q,he,le){C.drawArraysInstancedANGLE(z,q,he,le)},T.drawElementsInstanced=function(z,q,he,le,pe){C.drawElementsInstancedANGLE(z,q,he,le,pe)},1}function Ng(T){var C=T.getExtension("OES_vertex_array_object");if(C)return T.createVertexArray=function(){return C.createVertexArrayOES()},T.deleteVertexArray=function(z){C.deleteVertexArrayOES(z)},T.bindVertexArray=function(z){C.bindVertexArrayOES(z)},T.isVertexArray=function(z){return C.isVertexArrayOES(z)},1}function Tg(T){var C=T.getExtension("WEBGL_draw_buffers");if(C)return T.drawBuffers=function(z,q){C.drawBuffersWEBGL(z,q)},1}function Sg(T){return!!(T.multiDrawWebgl=T.getExtension("WEBGL_multi_draw"))}var et={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(T){et.lastError||(et.lastError=T)},getNewId:function(T){for(var C=et.counter++,z=T.length;z<C;z++)T[z]=null;return C},getSource:function(T,C,z,q){for(var he="",le=0;le<C;++le){var pe=q?o()[q+le*4>>2]:-1;he+=_e(o()[z+le*4>>2],pe<0?void 0:pe)}return he},createContext:function(T,C){var z=T.getContext("webgl",C);if(!z)return 0;var q=et.registerContext(z,C);return q},registerContext:function(T,C){var z=As(8);o()[z+4>>2]=Co();var q={handle:z,attributes:C,version:C.majorVersion,GLctx:T};return T.canvas&&(T.canvas.GLctxObject=q),et.contexts[z]=q,(typeof C.enableExtensionsByDefault=="undefined"||C.enableExtensionsByDefault)&&et.initExtensions(q),z},makeContextCurrent:function(T){return et.currentContext=et.contexts[T],c.ctx=Wr=et.currentContext&&et.currentContext.GLctx,!(T&&!Wr)},getContext:function(T){return et.contexts[T]},deleteContext:function(T){et.currentContext===et.contexts[T]&&(et.currentContext=null),typeof Pe=="object"&&Pe.removeAllHandlersOnTarget(et.contexts[T].GLctx.canvas),et.contexts[T]&&et.contexts[T].GLctx.canvas&&(et.contexts[T].GLctx.canvas.GLctxObject=void 0),Xu(et.contexts[T].handle),et.contexts[T]=null},initExtensions:function(T){if(T||(T=et.currentContext),!T.initExtensionsDone){T.initExtensionsDone=!0;var C=T.GLctx;Ig(C),Ng(C),Tg(C),C.disjointTimerQueryExt=C.getExtension("EXT_disjoint_timer_query"),Sg(C);var z=C.getSupportedExtensions()||[];z.forEach(function(q){q.indexOf("lose_context")<0&&q.indexOf("debug")<0&&C.getExtension(q)})}},populateUniformTable:function(T){for(var C=et.programs[T],z=et.programInfos[T]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},q=z.uniforms,he=Wr.getProgramParameter(C,35718),le=0;le<he;++le){var pe=Wr.getActiveUniform(C,le),be=pe.name;z.maxUniformLength=Math.max(z.maxUniformLength,be.length+1),be.slice(-1)=="]"&&(be=be.slice(0,be.lastIndexOf("[")));var st=Wr.getUniformLocation(C,be);if(st){var Gt=et.getNewId(et.uniforms);q[be]=[pe.size,Gt],et.uniforms[Gt]=st;for(var Pt=1;Pt<pe.size;++Pt){var Vr=be+"["+Pt+"]";st=Wr.getUniformLocation(C,Vr),Gt=et.getNewId(et.uniforms),et.uniforms[Gt]=st}}}}},Cg=["default","low-power","high-performance"];function Ag(T,C){var z=C>>2,q=o()[z+(24>>2)],he={alpha:!!o()[z+(0>>2)],depth:!!o()[z+(4>>2)],stencil:!!o()[z+(8>>2)],antialias:!!o()[z+(12>>2)],premultipliedAlpha:!!o()[z+(16>>2)],preserveDrawingBuffer:!!o()[z+(20>>2)],powerPreference:Cg[q],failIfMajorPerformanceCaveat:!!o()[z+(28>>2)],majorVersion:o()[z+(32>>2)],minorVersion:o()[z+(36>>2)],enableExtensionsByDefault:o()[z+(40>>2)],explicitSwapControl:o()[z+(44>>2)],proxyContextToMainThread:o()[z+(48>>2)],renderViaOffscreenBackBuffer:o()[z+(52>>2)]},le=Gu(T);if(!le||he.explicitSwapControl)return 0;var pe=et.createContext(le,he);return pe}function Fg(T,C){return Ag(T,C)}var To={mappings:{},buffers:[null,[],[]],printChar:function(T,C){var z=To.buffers[T];C===0||C===10?((T===1?X:j)(Me(z,0)),z.length=0):z.push(C)},varargs:void 0,get:function(){To.varargs+=4;var T=o()[To.varargs-4>>2];return T},getStr:function(T){var C=_e(T);return C},get64:function(T,C){return T}};function ld(T){return w?zr(3,1,T):0}function ud(T,C,z,q,he){if(w)return zr(4,1,T,C,z,q,he)}function cd(T,C,z,q){if(w)return zr(5,1,T,C,z,q);for(var he=0,le=0;le<z;le++){for(var pe=o()[C+le*8>>2],be=o()[C+(le*8+4)>>2],st=0;st<be;st++)To.printChar(T,i()[pe+st]);he+=be}return o()[q>>2]=he,0}function _g(T){var C=ke.threadExitHandlers.pop();T&&C()}function Eg(T,C){ke.threadExitHandlers.push(function(){oa.get(T)(C)})}function pd(T){if(w)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var C=ke.getNewWorker();if(C.pthread!==void 0)throw"Internal error!";if(!T.pthread_ptr)throw"Internal error, no pthread ptr!";ke.runningWorkers.push(C);for(var z=As(128*4),q=0;q<128;++q)o()[z+q*4>>2]=0;var he=T.stackBase+T.stackSize,le=ke.pthreads[T.pthread_ptr]={worker:C,stackBase:T.stackBase,stackSize:T.stackSize,allocatedOwnStack:T.allocatedOwnStack,threadInfoStruct:T.pthread_ptr},pe=le.threadInfoStruct>>2;Atomics.store(l(),pe+(64>>2),T.detached),Atomics.store(l(),pe+(100>>2),z),Atomics.store(l(),pe+(40>>2),le.threadInfoStruct),Atomics.store(l(),pe+(80>>2),T.stackSize),Atomics.store(l(),pe+(76>>2),he),Atomics.store(l(),pe+(104>>2),T.stackSize),Atomics.store(l(),pe+(104+8>>2),he),Atomics.store(l(),pe+(104+12>>2),T.detached);var be=jw(),st=be+40;Atomics.store(l(),pe+(172>>2),st),C.pthread=le;var Gt={cmd:"run",start_routine:T.startRoutine,arg:T.arg,threadInfoStruct:T.pthread_ptr,stackBase:T.stackBase,stackSize:T.stackSize};C.runPthread=function(){Gt.time=performance.now(),C.postMessage(Gt,T.transferList)},C.loaded&&(C.runPthread(),delete C.runPthread)}function $g(T,C,z,q){if(typeof SharedArrayBuffer=="undefined")return j("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!T)return j("pthread_create called with a null thread pointer!"),28;var he=[],le=0;if(w&&(he.length===0||le))return Yw(687865856,T,C,z,q);if(le)return le;var pe=0,be=0,st=0;C&&C!=-1?(pe=o()[C>>2],pe+=81920,be=o()[C+8>>2],st=o()[C+12>>2]!==0):pe=2097152;var Gt=be==0;Gt?be=Zw(16,pe):(be-=pe,fe(be>0));for(var Pt=As(228),Vr=0;Vr<228>>2;++Vr)l()[(Pt>>2)+Vr]=0;o()[T>>2]=Pt,o()[Pt+12>>2]=Pt;var Eo=Pt+152;o()[Eo>>2]=Eo;var Tn={stackBase:be,stackSize:pe,allocatedOwnStack:Gt,detached:st,startRoutine:z,pthread_ptr:Pt,arg:q,transferList:he};return w?(Tn.cmd="spawnThread",postMessage(Tn,he)):pd(Tn),0}function dd(T){if(w)return zr(6,1,T);switch(T){case 30:return 16384;case 85:var C=2147483648;return C/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return eg(28),-1}w||ke.initMainThreadBlock();var Wr,Dg=[null,tg,od,ld,ud,cd,dd],Mg={e:Qf,r:Zf,x:ng,b:ag,y:rg,j:sg,c:ig,d:No,f:Cs,p:og,z:lg,u:cg,q:hg,v:vg,i:wg,t:kg,w:Fg,m:ld,n:ud,g:cd,o:Hf,a:ee||c.wasmMemory,k:_g,l:Eg,h:$g,s:dd},Gw=Gf(),hd=c.___wasm_call_ctors=function(){return(hd=c.___wasm_call_ctors=c.asm.A).apply(null,arguments)},Rg=c._init=function(){return(Rg=c._init=c.asm.B).apply(null,arguments)},Pg=c._register_tensor=function(){return(Pg=c._register_tensor=c.asm.C).apply(null,arguments)},Og=c._dispose_data=function(){return(Og=c._dispose_data=c.asm.D).apply(null,arguments)},Lg=c._dispose=function(){return(Lg=c._dispose=c.asm.E).apply(null,arguments)},zg=c._Abs=function(){return(zg=c._Abs=c.asm.G).apply(null,arguments)},Wg=c._Add=function(){return(Wg=c._Add=c.asm.H).apply(null,arguments)},Bg=c._AddN=function(){return(Bg=c._AddN=c.asm.I).apply(null,arguments)},Vg=c._ArgMax=function(){return(Vg=c._ArgMax=c.asm.J).apply(null,arguments)},Ug=c._AvgPool=function(){return(Ug=c._AvgPool=c.asm.K).apply(null,arguments)},Gg=c._BatchMatMul=function(){return(Gg=c._BatchMatMul=c.asm.L).apply(null,arguments)},Hg=c._Ceil=function(){return(Hg=c._Ceil=c.asm.M).apply(null,arguments)},jg=c._ClipByValue=function(){return(jg=c._ClipByValue=c.asm.N).apply(null,arguments)},qg=c._Conv2D=function(){return(qg=c._Conv2D=c.asm.O).apply(null,arguments)},md=c._Conv2DBackpropInput=function(){return(md=c._Conv2DBackpropInput=c.asm.P).apply(null,arguments)},fd=c._Cos=function(){return(fd=c._Cos=c.asm.Q).apply(null,arguments)},Hu=c._CropAndResize=function(){return(Hu=c._CropAndResize=c.asm.R).apply(null,arguments)},So=c._Cumsum=function(){return(So=c._Cumsum=c.asm.S).apply(null,arguments)},Xg=c._DepthToSpace=function(){return(Xg=c._DepthToSpace=c.asm.T).apply(null,arguments)},ju=c._DepthwiseConv2dNative=function(){return(ju=c._DepthwiseConv2dNative=c.asm.U).apply(null,arguments)},K=c._Equal=function(){return(K=c._Equal=c.asm.V).apply(null,arguments)},ae=c._Exp=function(){return(ae=c._Exp=c.asm.W).apply(null,arguments)},Te=c._FlipLeftRight=function(){return(Te=c._FlipLeftRight=c.asm.X).apply(null,arguments)},Ye=c._Floor=function(){return(Ye=c._Floor=c.asm.Y).apply(null,arguments)},Ft=c._FloorDiv=function(){return(Ft=c._FloorDiv=c.asm.Z).apply(null,arguments)},bt=c._FusedBatchNorm=function(){return(bt=c._FusedBatchNorm=c.asm._).apply(null,arguments)},Ue=c._FusedConv2D=function(){return(Ue=c._FusedConv2D=c.asm.$).apply(null,arguments)},He=c._FusedDepthwiseConv2D=function(){return(He=c._FusedDepthwiseConv2D=c.asm.aa).apply(null,arguments)},an=c._Gather=function(){return(an=c._Gather=c.asm.ba).apply(null,arguments)},mr=c._GatherNd=function(){return(mr=c._GatherNd=c.asm.ca).apply(null,arguments)},fr=c._Greater=function(){return(fr=c._Greater=c.asm.da).apply(null,arguments)},gd=c._GreaterEqual=function(){return(gd=c._GreaterEqual=c.asm.ea).apply(null,arguments)},qu=c._LeakyRelu=function(){return(qu=c._LeakyRelu=c.asm.fa).apply(null,arguments)},Yn=c._Less=function(){return(Yn=c._Less=c.asm.ga).apply(null,arguments)},Br=c._LessEqual=function(){return(Br=c._LessEqual=c.asm.ha).apply(null,arguments)},yd=c._Log=function(){return(yd=c._Log=c.asm.ia).apply(null,arguments)},mA=c._LogicalAnd=function(){return(mA=c._LogicalAnd=c.asm.ja).apply(null,arguments)},fA=c._Max=function(){return(fA=c._Max=c.asm.ka).apply(null,arguments)},gA=c._MaxPool=function(){return(gA=c._MaxPool=c.asm.la).apply(null,arguments)},yA=c._Maximum=function(){return(yA=c._Maximum=c.asm.ma).apply(null,arguments)},bA=c._Mean=function(){return(bA=c._Mean=c.asm.na).apply(null,arguments)},xA=c._Min=function(){return(xA=c._Min=c.asm.oa).apply(null,arguments)},vA=c._Minimum=function(){return(vA=c._Minimum=c.asm.pa).apply(null,arguments)},wA=c._Multiply=function(){return(wA=c._Multiply=c.asm.qa).apply(null,arguments)},kA=c._Neg=function(){return(kA=c._Neg=c.asm.ra).apply(null,arguments)},IA=c._NonMaxSuppressionV3=function(){return(IA=c._NonMaxSuppressionV3=c.asm.sa).apply(null,arguments)},NA=c._NonMaxSuppressionV4=function(){return(NA=c._NonMaxSuppressionV4=c.asm.ta).apply(null,arguments)},TA=c._NonMaxSuppressionV5=function(){return(TA=c._NonMaxSuppressionV5=c.asm.ua).apply(null,arguments)},SA=c._NotEqual=function(){return(SA=c._NotEqual=c.asm.va).apply(null,arguments)},CA=c._OneHot=function(){return(CA=c._OneHot=c.asm.wa).apply(null,arguments)},AA=c._PadV2=function(){return(AA=c._PadV2=c.asm.xa).apply(null,arguments)},FA=c._Pow=function(){return(FA=c._Pow=c.asm.ya).apply(null,arguments)},_A=c._Prelu=function(){return(_A=c._Prelu=c.asm.za).apply(null,arguments)},EA=c._Prod=function(){return(EA=c._Prod=c.asm.Aa).apply(null,arguments)},$A=c._RealDiv=function(){return($A=c._RealDiv=c.asm.Ba).apply(null,arguments)},DA=c._Relu=function(){return(DA=c._Relu=c.asm.Ca).apply(null,arguments)},MA=c._Relu6=function(){return(MA=c._Relu6=c.asm.Da).apply(null,arguments)},RA=c._ResizeBilinear=function(){return(RA=c._ResizeBilinear=c.asm.Ea).apply(null,arguments)},PA=c._Reverse=function(){return(PA=c._Reverse=c.asm.Fa).apply(null,arguments)},OA=c._RotateWithOffset=function(){return(OA=c._RotateWithOffset=c.asm.Ga).apply(null,arguments)},LA=c._Round=function(){return(LA=c._Round=c.asm.Ha).apply(null,arguments)},zA=c._Rsqrt=function(){return(zA=c._Rsqrt=c.asm.Ia).apply(null,arguments)},WA=c._ScatterNd=function(){return(WA=c._ScatterNd=c.asm.Ja).apply(null,arguments)},BA=c._SelectV2=function(){return(BA=c._SelectV2=c.asm.Ka).apply(null,arguments)},VA=c._Sigmoid=function(){return(VA=c._Sigmoid=c.asm.La).apply(null,arguments)},UA=c._Sin=function(){return(UA=c._Sin=c.asm.Ma).apply(null,arguments)},GA=c._Softmax=function(){return(GA=c._Softmax=c.asm.Na).apply(null,arguments)},HA=c._Sqrt=function(){return(HA=c._Sqrt=c.asm.Oa).apply(null,arguments)},jA=c._Square=function(){return(jA=c._Square=c.asm.Pa).apply(null,arguments)},qA=c._SquaredDifference=function(){return(qA=c._SquaredDifference=c.asm.Qa).apply(null,arguments)},XA=c._Step=function(){return(XA=c._Step=c.asm.Ra).apply(null,arguments)},KA=c._StridedSlice=function(){return(KA=c._StridedSlice=c.asm.Sa).apply(null,arguments)},YA=c._Sub=function(){return(YA=c._Sub=c.asm.Ta).apply(null,arguments)},JA=c._Sum=function(){return(JA=c._Sum=c.asm.Ua).apply(null,arguments)},QA=c._Tanh=function(){return(QA=c._Tanh=c.asm.Va).apply(null,arguments)},ZA=c._Tile=function(){return(ZA=c._Tile=c.asm.Wa).apply(null,arguments)},eF=c._TopK=function(){return(eF=c._TopK=c.asm.Xa).apply(null,arguments)},tF=c._Transpose=function(){return(tF=c._Transpose=c.asm.Ya).apply(null,arguments)},nF=c.__FusedMatMul=function(){return(nF=c.__FusedMatMul=c.asm.Za).apply(null,arguments)},As=c._malloc=function(){return(As=c._malloc=c.asm._a).apply(null,arguments)},Xu=c._free=function(){return(Xu=c._free=c.asm.$a).apply(null,arguments)},Hw=c.___errno_location=function(){return(Hw=c.___errno_location=c.asm.ab).apply(null,arguments)},jw=c._emscripten_get_global_libc=function(){return(jw=c._emscripten_get_global_libc=c.asm.bb).apply(null,arguments)},Co=c._pthread_self=function(){return(Co=c._pthread_self=c.asm.cb).apply(null,arguments)},qw=c.___pthread_tsd_run_dtors=function(){return(qw=c.___pthread_tsd_run_dtors=c.asm.db).apply(null,arguments)},Kg=c._emscripten_main_thread_process_queued_calls=function(){return(Kg=c._emscripten_main_thread_process_queued_calls=c.asm.eb).apply(null,arguments)},aF=c._emscripten_current_thread_process_queued_calls=function(){return(aF=c._emscripten_current_thread_process_queued_calls=c.asm.fb).apply(null,arguments)},Xw=c._emscripten_register_main_browser_thread_id=function(){return(Xw=c._emscripten_register_main_browser_thread_id=c.asm.gb).apply(null,arguments)},Kw=c.__emscripten_do_dispatch_to_thread=function(){return(Kw=c.__emscripten_do_dispatch_to_thread=c.asm.hb).apply(null,arguments)},Yw=c._emscripten_sync_run_in_main_thread_4=function(){return(Yw=c._emscripten_sync_run_in_main_thread_4=c.asm.ib).apply(null,arguments)},Jw=c._emscripten_run_in_main_runtime_thread_js=function(){return(Jw=c._emscripten_run_in_main_runtime_thread_js=c.asm.jb).apply(null,arguments)},Yg=c.__emscripten_call_on_thread=function(){return(Yg=c.__emscripten_call_on_thread=c.asm.kb).apply(null,arguments)},rF=c._emscripten_tls_init=function(){return(rF=c._emscripten_tls_init=c.asm.lb).apply(null,arguments)},bd=c.__emscripten_thread_init=function(){return(bd=c.__emscripten_thread_init=c.asm.mb).apply(null,arguments)},Ku=c.stackSave=function(){return(Ku=c.stackSave=c.asm.nb).apply(null,arguments)},Ao=c.stackRestore=function(){return(Ao=c.stackRestore=c.asm.ob).apply(null,arguments)},Fo=c.stackAlloc=function(){return(Fo=c.stackAlloc=c.asm.pb).apply(null,arguments)},Qw=c._emscripten_stack_set_limits=function(){return(Qw=c._emscripten_stack_set_limits=c.asm.qb).apply(null,arguments)},Zw=c._memalign=function(){return(Zw=c._memalign=c.asm.rb).apply(null,arguments)},e0=c.__emscripten_allow_main_runtime_queued_calls=9880,_o=c.__emscripten_main_thread_futex=11368;c.cwrap=Ae,c.PThread=ke,c.PThread=ke,c.wasmMemory=ee,c.ExitStatus=Yu;var xd;function Yu(T){this.name="ExitStatus",this.message="Program terminated with exit("+T+")",this.status=T}Ss=function T(){xd||Jg(),xd||(Ss=T)};function Jg(T){if(T=T||f,dr>0)return;if(w){p(c),postMessage({cmd:"loaded"});return}if(Of(),dr>0)return;function C(){xd||(xd=!0,c.calledRun=!0,!oe&&(Qp(),Lf(),p(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),In()))}c.setStatus?(c.setStatus("Running..."),setTimeout(function(){setTimeout(function(){c.setStatus("")},1),C()},1)):C()}c.run=Jg;function sF(T,C){if(!(C&&ie&&T===0)){if(!C&&w)throw postMessage({cmd:"exitProcess",returnCode:T}),new Yu(T);ie||(ke.terminateAllThreads(),ge=T,Zp(),c.onExit&&c.onExit(T),oe=!0),y(T,new Yu(T))}}if(c.preInit)for(typeof c.preInit=="function"&&(c.preInit=[c.preInit]);c.preInit.length>0;)c.preInit.pop()();return w&&(ie=!1,ke.initWorker()),Jg(),r.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}),KF=tt((e,t)=>{var n=function(){var a=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(a=a||__filename),function(r){r=r||{};var s=typeof r!="undefined"?r:{},i,o;s.ready=new Promise(function(K,ae){i=K,o=ae});var l={},u;for(u in s)s.hasOwnProperty(u)&&(l[u]=s[u]);var c=[],p="./this.program",d=function(K,ae){throw ae},h=!1,m=!1,f=!1,g=!1;h=typeof window=="object",m=typeof importScripts=="function",f=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g=!h&&!f&&!m;var y="";function b(K){return s.locateFile?s.locateFile(K,y):y+K}var x,v,k,w,S,A;f?(m?y=Qu().dirname(y)+"/":y=__dirname+"/",x=function(K,ae){return S||(S=require("fs")),A||(A=Qu()),K=A.normalize(K),S.readFileSync(K,ae?null:"utf8")},k=function(K){var ae=x(K,!0);return ae.buffer||(ae=new Uint8Array(ae)),X(ae.buffer),ae},process.argv.length>1&&(p=process.argv[1].replace(/\\/g,"/")),c=process.argv.slice(2),process.on("uncaughtException",function(K){if(!(K instanceof Xg))throw K}),process.on("unhandledRejection",Ia),d=function(K){process.exit(K)},s.inspect=function(){return"[Emscripten Module object]"}):g?(typeof read!="undefined"&&(x=function(K){return read(K)}),k=function(K){var ae;return typeof readbuffer=="function"?new Uint8Array(readbuffer(K)):(ae=read(K,"binary"),X(typeof ae=="object"),ae)},typeof scriptArgs!="undefined"?c=scriptArgs:typeof arguments!="undefined"&&(c=arguments),typeof quit=="function"&&(d=function(K){quit(K)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(h||m)&&(m?y=self.location.href:typeof document!="undefined"&&document.currentScript&&(y=document.currentScript.src),a&&(y=a),y.indexOf("blob:")!==0?y=y.substr(0,y.lastIndexOf("/")+1):y="",x=function(K){var ae=new XMLHttpRequest;return ae.open("GET",K,!1),ae.send(null),ae.responseText},m&&(k=function(K){var ae=new XMLHttpRequest;return ae.open("GET",K,!1),ae.responseType="arraybuffer",ae.send(null),new Uint8Array(ae.response)}),v=function(K,ae,Te){var Ye=new XMLHttpRequest;Ye.open("GET",K,!0),Ye.responseType="arraybuffer",Ye.onload=function(){if(Ye.status==200||Ye.status==0&&Ye.response){ae(Ye.response);return}Te()},Ye.onerror=Te,Ye.send(null)},w=function(K){document.title=K});var F=s.print||console.log.bind(console),D=s.printErr||console.warn.bind(console);for(u in l)l.hasOwnProperty(u)&&(s[u]=l[u]);l=null,s.arguments&&(c=s.arguments),s.thisProgram&&(p=s.thisProgram),s.quit&&(d=s.quit);var R;s.wasmBinary&&(R=s.wasmBinary);var L=s.noExitRuntime||!0;typeof WebAssembly!="object"&&Ia("no native wasm support detected");var W,U=!1,G;function X(K,ae){K||Ia("Assertion failed: "+ae)}function j(K){var ae=s["_"+K];return X(ae,"Cannot call unknown function "+K+", make sure it is exported"),ae}function te(K,ae,Te,Ye,Ft){var bt={string:function(Yn){var Br=0;if(Yn!=null&&Yn!==0){var yd=(Yn.length<<2)+1;Br=Hu(yd),de(Yn,Br,yd)}return Br},array:function(Yn){var Br=Hu(Yn.length);return oe(Yn,Br),Br}};function Ue(Yn){return ae==="string"?ie(Yn):ae==="boolean"?Boolean(Yn):Yn}var He=j(K),an=[],mr=0;if(Ye)for(var fr=0;fr<Ye.length;fr++){var gd=bt[Te[fr]];gd?(mr===0&&(mr=md()),an[fr]=gd(Ye[fr])):an[fr]=Ye[fr]}var qu=He.apply(null,an);return qu=Ue(qu),mr!==0&&fd(mr),qu}function Q(K,ae,Te,Ye){Te=Te||[];var Ft=Te.every(function(Ue){return Ue==="number"}),bt=ae!=="string";return bt&&Ft&&!Ye?j(K):function(){return te(K,ae,Te,arguments,Ye)}}var se=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function ne(K,ae,Te){for(var Ye=ae+Te,Ft=ae;K[Ft]&&!(Ft>=Ye);)++Ft;if(Ft-ae>16&&K.subarray&&se)return se.decode(K.subarray(ae,Ft));for(var bt="";ae<Ft;){var Ue=K[ae++];if(!(Ue&128)){bt+=String.fromCharCode(Ue);continue}var He=K[ae++]&63;if((Ue&224)==192){bt+=String.fromCharCode((Ue&31)<<6|He);continue}var an=K[ae++]&63;if((Ue&240)==224?Ue=(Ue&15)<<12|He<<6|an:Ue=(Ue&7)<<18|He<<12|an<<6|K[ae++]&63,Ue<65536)bt+=String.fromCharCode(Ue);else{var mr=Ue-65536;bt+=String.fromCharCode(55296|mr>>10,56320|mr&1023)}}return bt}function ie(K,ae){return K?ne(Ne,K,ae):""}function ee(K,ae,Te,Ye){if(!(Ye>0))return 0;for(var Ft=Te,bt=Te+Ye-1,Ue=0;Ue<K.length;++Ue){var He=K.charCodeAt(Ue);if(He>=55296&&He<=57343){var an=K.charCodeAt(++Ue);He=65536+((He&1023)<<10)|an&1023}if(He<=127){if(Te>=bt)break;ae[Te++]=He}else if(He<=2047){if(Te+1>=bt)break;ae[Te++]=192|He>>6,ae[Te++]=128|He&63}else if(He<=65535){if(Te+2>=bt)break;ae[Te++]=224|He>>12,ae[Te++]=128|He>>6&63,ae[Te++]=128|He&63}else{if(Te+3>=bt)break;ae[Te++]=240|He>>18,ae[Te++]=128|He>>12&63,ae[Te++]=128|He>>6&63,ae[Te++]=128|He&63}}return ae[Te]=0,Te-Ft}function de(K,ae,Te){return ee(K,Ne,ae,Te)}function oe(K,ae){we.set(K,ae)}function ge(K,ae){return K%ae>0&&(K+=ae-K%ae),K}var fe,we,Ne,Ae,Me,_e,at,rt,lt;function Ke(K){fe=K,s.HEAP8=we=new Int8Array(K),s.HEAP16=Ae=new Int16Array(K),s.HEAP32=_e=new Int32Array(K),s.HEAPU8=Ne=new Uint8Array(K),s.HEAPU16=Me=new Uint16Array(K),s.HEAPU32=at=new Uint32Array(K),s.HEAPF32=rt=new Float32Array(K),s.HEAPF64=lt=new Float64Array(K)}var gt=s.INITIAL_MEMORY||16777216,We,wn=[],Nt=[],Xn=[],tn=[],kn=!1;Nt.push({func:function(){rd()}});function Kn(){if(s.preRun)for(typeof s.preRun=="function"&&(s.preRun=[s.preRun]);s.preRun.length;)Va(s.preRun.shift());Lr(wn)}function Mn(){kn=!0,Lr(Nt)}function pn(){Lr(Xn)}function nn(){if(s.postRun)for(typeof s.postRun=="function"&&(s.postRun=[s.postRun]);s.postRun.length;)oa(s.postRun.shift());Lr(tn)}function Va(K){wn.unshift(K)}function oa(K){tn.unshift(K)}var la=0,Pr=null,pr=null;function Or(K){la++,s.monitorRunDependencies&&s.monitorRunDependencies(la)}function wo(K){if(la--,s.monitorRunDependencies&&s.monitorRunDependencies(la),la==0&&(Pr!==null&&(clearInterval(Pr),Pr=null),pr)){var ae=pr;pr=null,ae()}}s.preloadedImages={},s.preloadedAudios={};function Ia(K){s.onAbort&&s.onAbort(K),K+="",D(K),U=!0,G=1,K="abort("+K+"). Build with -s ASSERTIONS=1 for more info.";var ae=new WebAssembly.RuntimeError(K);throw o(ae),ae}function Jp(K,ae){return String.prototype.startsWith?K.startsWith(ae):K.indexOf(ae)===0}var Of="data:application/octet-stream;base64,";function Qp(K){return Jp(K,Of)}var Lf="file://";function Zp(K){return Jp(K,Lf)}var In="tfjs-backend-wasm.wasm";Qp(In)||(In=b(In));function ed(K){try{if(K==In&&R)return new Uint8Array(R);if(k)return k(K);throw"both async and sync fetching of the wasm failed"}catch(ae){Ia(ae)}}function zf(){if(!R&&(h||m)){if(typeof fetch=="function"&&!Zp(In))return fetch(In,{credentials:"same-origin"}).then(function(K){if(!K.ok)throw"failed to load wasm binary file at '"+In+"'";return K.arrayBuffer()}).catch(function(){return ed(In)});if(v)return new Promise(function(K,ae){v(In,function(Te){K(new Uint8Array(Te))},ae)})}return Promise.resolve().then(function(){return ed(In)})}function dr(){var K={a:Nn};function ae(Ue,He){var an=Ue.exports;s.asm=an,W=s.asm.g,Ke(W.buffer),We=s.asm.m,wo("wasm-instantiate")}Or("wasm-instantiate");function Te(Ue){ae(Ue.instance)}function Ye(Ue){return zf().then(function(He){return WebAssembly.instantiate(He,K)}).then(Ue,function(He){D("failed to asynchronously prepare wasm: "+He),Ia(He)})}function Ft(){return!R&&typeof WebAssembly.instantiateStreaming=="function"&&!Qp(In)&&!Zp(In)&&typeof fetch=="function"?fetch(In,{credentials:"same-origin"}).then(function(Ue){var He=WebAssembly.instantiateStreaming(Ue,K);return He.then(Te,function(an){return D("wasm streaming compile failed: "+an),D("falling back to ArrayBuffer instantiation"),Ye(Te)})}):Ye(Te)}if(s.instantiateWasm)try{var bt=s.instantiateWasm(K,ae);return bt}catch(Ue){return D("Module.instantiateWasm callback failed with error: "+Ue),!1}return Ft().catch(o),{}}function Lr(K){for(;K.length>0;){var ae=K.shift();if(typeof ae=="function"){ae(s);continue}var Te=ae.func;typeof Te=="number"?ae.arg===void 0?We.get(Te)():We.get(Te)(ae.arg):Te(ae.arg===void 0?null:ae.arg)}}function Ss(){Ia()}function Wf(K,ae,Te){Ne.copyWithin(K,ae,ae+Te)}function Bf(){return Ne.length}function hr(K){try{return W.grow(K-fe.byteLength+65535>>>16),Ke(W.buffer),1}catch(ae){}}function td(K){var ae=Bf(),Te=2147483648;if(K>Te)return!1;for(var Ye=1;Ye<=4;Ye*=2){var Ft=ae*(1+.2/Ye);Ft=Math.min(Ft,K+100663296);var bt=Math.min(Te,ge(Math.max(K,Ft),65536)),Ue=hr(bt);if(Ue)return!0}return!1}var ko={mappings:{},buffers:[null,[],[]],printChar:function(K,ae){var Te=ko.buffers[K];ae===0||ae===10?((K===1?F:D)(ne(Te,0)),Te.length=0):Te.push(ae)},varargs:void 0,get:function(){ko.varargs+=4;var K=_e[ko.varargs-4>>2];return K},getStr:function(K){var ae=ie(K);return ae},get64:function(K,ae){return K}};function nd(K){return 0}function Vf(K,ae,Te,Ye,Ft){}function ad(K,ae,Te,Ye){for(var Ft=0,bt=0;bt<Te;bt++){for(var Ue=_e[ae+bt*8>>2],He=_e[ae+(bt*8+4)>>2],an=0;an<He;an++)ko.printChar(K,Ne[Ue+an]);Ft+=He}return _e[Ye>>2]=Ft,0}var Nn={a:Ss,d:Wf,e:td,f:nd,c:Vf,b:ad},Uf=dr(),rd=s.___wasm_call_ctors=function(){return(rd=s.___wasm_call_ctors=s.asm.h).apply(null,arguments)},Gf=s._init=function(){return(Gf=s._init=s.asm.i).apply(null,arguments)},sd=s._register_tensor=function(){return(sd=s._register_tensor=s.asm.j).apply(null,arguments)},Hf=s._dispose_data=function(){return(Hf=s._dispose_data=s.asm.k).apply(null,arguments)},Io=s._dispose=function(){return(Io=s._dispose=s.asm.l).apply(null,arguments)},No=s._Abs=function(){return(No=s._Abs=s.asm.n).apply(null,arguments)},jf=s._Add=function(){return(jf=s._Add=s.asm.o).apply(null,arguments)},qf=s._AddN=function(){return(qf=s._AddN=s.asm.p).apply(null,arguments)},Xf=s._ArgMax=function(){return(Xf=s._ArgMax=s.asm.q).apply(null,arguments)},ke=s._AvgPool=function(){return(ke=s._AvgPool=s.asm.r).apply(null,arguments)},Kf=s._BatchMatMul=function(){return(Kf=s._BatchMatMul=s.asm.s).apply(null,arguments)},Yf=s._Ceil=function(){return(Yf=s._Ceil=s.asm.t).apply(null,arguments)},Jf=s._ClipByValue=function(){return(Jf=s._ClipByValue=s.asm.u).apply(null,arguments)},Qf=s._Conv2D=function(){return(Qf=s._Conv2D=s.asm.v).apply(null,arguments)},Zf=s._Conv2DBackpropInput=function(){return(Zf=s._Conv2DBackpropInput=s.asm.w).apply(null,arguments)},Cs=s._Cos=function(){return(Cs=s._Cos=s.asm.x).apply(null,arguments)},eg=s._CropAndResize=function(){return(eg=s._CropAndResize=s.asm.y).apply(null,arguments)},tg=s._Cumsum=function(){return(tg=s._Cumsum=s.asm.z).apply(null,arguments)},ng=s._DepthToSpace=function(){return(ng=s._DepthToSpace=s.asm.A).apply(null,arguments)},ag=s._DepthwiseConv2dNative=function(){return(ag=s._DepthwiseConv2dNative=s.asm.B).apply(null,arguments)},rg=s._Equal=function(){return(rg=s._Equal=s.asm.C).apply(null,arguments)},sg=s._Exp=function(){return(sg=s._Exp=s.asm.D).apply(null,arguments)},ig=s._FlipLeftRight=function(){return(ig=s._FlipLeftRight=s.asm.E).apply(null,arguments)},og=s._Floor=function(){return(og=s._Floor=s.asm.F).apply(null,arguments)},lg=s._FloorDiv=function(){return(lg=s._FloorDiv=s.asm.G).apply(null,arguments)},zr=s._FusedBatchNorm=function(){return(zr=s._FusedBatchNorm=s.asm.H).apply(null,arguments)},Vu=s._FusedConv2D=function(){return(Vu=s._FusedConv2D=s.asm.I).apply(null,arguments)},Uu=s._FusedDepthwiseConv2D=function(){return(Uu=s._FusedDepthwiseConv2D=s.asm.J).apply(null,arguments)},ug=s._Gather=function(){return(ug=s._Gather=s.asm.K).apply(null,arguments)},cg=s._GatherNd=function(){return(cg=s._GatherNd=s.asm.L).apply(null,arguments)},pg=s._Greater=function(){return(pg=s._Greater=s.asm.M).apply(null,arguments)},dg=s._GreaterEqual=function(){return(dg=s._GreaterEqual=s.asm.N).apply(null,arguments)},hg=s._LeakyRelu=function(){return(hg=s._LeakyRelu=s.asm.O).apply(null,arguments)},Pe=s._Less=function(){return(Pe=s._Less=s.asm.P).apply(null,arguments)},mg=s._LessEqual=function(){return(mg=s._LessEqual=s.asm.Q).apply(null,arguments)},fg=s._Log=function(){return(fg=s._Log=s.asm.R).apply(null,arguments)},gg=s._LogicalAnd=function(){return(gg=s._LogicalAnd=s.asm.S).apply(null,arguments)},yg=s._Max=function(){return(yg=s._Max=s.asm.T).apply(null,arguments)},bg=s._MaxPool=function(){return(bg=s._MaxPool=s.asm.U).apply(null,arguments)},xg=s._Maximum=function(){return(xg=s._Maximum=s.asm.V).apply(null,arguments)},Gu=s._Mean=function(){return(Gu=s._Mean=s.asm.W).apply(null,arguments)},id=s._Min=function(){return(id=s._Min=s.asm.X).apply(null,arguments)},od=s._Minimum=function(){return(od=s._Minimum=s.asm.Y).apply(null,arguments)},vg=s._Multiply=function(){return(vg=s._Multiply=s.asm.Z).apply(null,arguments)},wg=s._Neg=function(){return(wg=s._Neg=s.asm._).apply(null,arguments)},kg=s._NonMaxSuppressionV3=function(){return(kg=s._NonMaxSuppressionV3=s.asm.$).apply(null,arguments)},Ig=s._NonMaxSuppressionV4=function(){return(Ig=s._NonMaxSuppressionV4=s.asm.aa).apply(null,arguments)},Ng=s._NonMaxSuppressionV5=function(){return(Ng=s._NonMaxSuppressionV5=s.asm.ba).apply(null,arguments)},Tg=s._NotEqual=function(){return(Tg=s._NotEqual=s.asm.ca).apply(null,arguments)},Sg=s._OneHot=function(){return(Sg=s._OneHot=s.asm.da).apply(null,arguments)},et=s._PadV2=function(){return(et=s._PadV2=s.asm.ea).apply(null,arguments)},Cg=s._Pow=function(){return(Cg=s._Pow=s.asm.fa).apply(null,arguments)},Ag=s._Prelu=function(){return(Ag=s._Prelu=s.asm.ga).apply(null,arguments)},Fg=s._Prod=function(){return(Fg=s._Prod=s.asm.ha).apply(null,arguments)},To=s._RealDiv=function(){return(To=s._RealDiv=s.asm.ia).apply(null,arguments)},ld=s._Relu=function(){return(ld=s._Relu=s.asm.ja).apply(null,arguments)},ud=s._Relu6=function(){return(ud=s._Relu6=s.asm.ka).apply(null,arguments)},cd=s._ResizeBilinear=function(){return(cd=s._ResizeBilinear=s.asm.la).apply(null,arguments)},_g=s._Reverse=function(){return(_g=s._Reverse=s.asm.ma).apply(null,arguments)},Eg=s._RotateWithOffset=function(){return(Eg=s._RotateWithOffset=s.asm.na).apply(null,arguments)},pd=s._Round=function(){return(pd=s._Round=s.asm.oa).apply(null,arguments)},$g=s._Rsqrt=function(){return($g=s._Rsqrt=s.asm.pa).apply(null,arguments)},dd=s._ScatterNd=function(){return(dd=s._ScatterNd=s.asm.qa).apply(null,arguments)},Wr=s._SelectV2=function(){return(Wr=s._SelectV2=s.asm.ra).apply(null,arguments)},Dg=s._Sigmoid=function(){return(Dg=s._Sigmoid=s.asm.sa).apply(null,arguments)},Mg=s._Sin=function(){return(Mg=s._Sin=s.asm.ta).apply(null,arguments)},Gw=s._Softmax=function(){return(Gw=s._Softmax=s.asm.ua).apply(null,arguments)},hd=s._Sqrt=function(){return(hd=s._Sqrt=s.asm.va).apply(null,arguments)},Rg=s._Square=function(){return(Rg=s._Square=s.asm.wa).apply(null,arguments)},Pg=s._SquaredDifference=function(){return(Pg=s._SquaredDifference=s.asm.xa).apply(null,arguments)},Og=s._Step=function(){return(Og=s._Step=s.asm.ya).apply(null,arguments)},Lg=s._StridedSlice=function(){return(Lg=s._StridedSlice=s.asm.za).apply(null,arguments)},zg=s._Sub=function(){return(zg=s._Sub=s.asm.Aa).apply(null,arguments)},Wg=s._Sum=function(){return(Wg=s._Sum=s.asm.Ba).apply(null,arguments)},Bg=s._Tanh=function(){return(Bg=s._Tanh=s.asm.Ca).apply(null,arguments)},Vg=s._Tile=function(){return(Vg=s._Tile=s.asm.Da).apply(null,arguments)},Ug=s._TopK=function(){return(Ug=s._TopK=s.asm.Ea).apply(null,arguments)},Gg=s._Transpose=function(){return(Gg=s._Transpose=s.asm.Fa).apply(null,arguments)},Hg=s.__FusedMatMul=function(){return(Hg=s.__FusedMatMul=s.asm.Ga).apply(null,arguments)},jg=s._malloc=function(){return(jg=s._malloc=s.asm.Ha).apply(null,arguments)},qg=s._free=function(){return(qg=s._free=s.asm.Ia).apply(null,arguments)},md=s.stackSave=function(){return(md=s.stackSave=s.asm.Ja).apply(null,arguments)},fd=s.stackRestore=function(){return(fd=s.stackRestore=s.asm.Ka).apply(null,arguments)},Hu=s.stackAlloc=function(){return(Hu=s.stackAlloc=s.asm.La).apply(null,arguments)};s.cwrap=Q;var So;function Xg(K){this.name="ExitStatus",this.message="Program terminated with exit("+K+")",this.status=K}pr=function K(){So||ju(),So||(pr=K)};function ju(K){if(K=K||c,la>0||(Kn(),la>0))return;function ae(){So||(So=!0,s.calledRun=!0,!U&&(Mn(),pn(),i(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),nn()))}s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),ae()},1)):ae()}if(s.run=ju,s.preInit)for(typeof s.preInit=="function"&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();return ju(),r.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}),YF=1e-7,JF=1e-4,kd=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},Zu=class{refCount(e){return ua("refCount")}incRef(e){return ua("incRef")}timerAvailable(){return!0}time(e){return ua("time")}read(e){return ua("read")}readSync(e){return ua("readSync")}numDataIds(){return ua("numDataIds")}disposeData(e,t){return ua("disposeData")}write(e,t,n){return ua("write")}move(e,t,n,a,r){return ua("move")}memory(){return ua("memory")}floatPrecision(){return ua("floatPrecision")}epsilon(){return this.floatPrecision()===32?YF:JF}dispose(){return ua("dispose")}};function ua(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function r0(e){let t=e.length,n=0,a=0;for(;t>0;)a=Math.random()*t|0,t--,n=e[t],e[t]=e[a],e[a]=n}function QF(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,a,r,s=0;for(;n>0;)s=Math.random()*n|0,n--,a=e[n],r=t[n],e[n]=e[s],t[n]=t[s],e[s]=a,t[s]=r}function ec(e,t,n){return Math.max(e,Math.min(t,n))}function ZF(e){return e%2==0?e:e+1}function e_(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function t_(e,t){let n=Math.random();return t*n+(1-n)*e}function n_(e,t){let n=0;for(let a=0;a<e.length;a++){let r=Number(e[a])-Number(t[a]);n+=r*r}return n}function $(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function ln(e,t,n=""){$(gr(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function Fs(e){$(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function _s(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||un(e)&&!n)for(let a=0;a<e.length;++a)_s(e[a],t,n);else t.push(e);return t}function Ot(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function a_(e){return e.length===0}function gr(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Ht(e){return e%1==0}function r_(e){if(Math.tanh!=null)return Math.tanh(e);if(e===Infinity)return 1;if(e===-Infinity)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function s_(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function i_(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r0(t),t}function tc(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function o_(e,t=a=>0,n){return new Promise((a,r)=>{let s=0,i=()=>{if(e()){a();return}s++;let o=t(s);if(n!=null&&s>=n){r();return}setTimeout(i,o)};i()})}function l_(e,t){let n=1,a=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(e[s]===-1){if(a!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${a} and dim ${s}`);a=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(a===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[a]=t/n,r}function ca(e,t){let n=t.length;return e=e==null?t.map((a,r)=>r):[].concat(e),$(e.every(a=>a>=-n&&a<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),$(e.every(a=>Ht(a)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(a=>a<0?n+a:a)}function s0(e,t){let n=[],a=[],r=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||r?null:ca(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(s!=null){if(s[i]===o&&e[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(s[i]==null||s[i]>o)&&e[o]===1&&(n.push(e[o]),a.push(o)),s[i]<=o&&i++}e[o]!==1&&(n.push(e[o]),a.push(o))}return{newShape:n,keptDims:a}}function i0(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function o0(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function l0(e,t){for(let n=0;n<e.length;n++){let a=e[n];if(isNaN(a)||!isFinite(a))throw Error(`A tensor of type ${t} being uploaded contains ${a}.`)}}function u0(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function u_(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function un(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function ey(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function c0(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function Ur(e){return typeof e=="string"||e instanceof String}function p0(e){return typeof e=="boolean"}function d0(e){return typeof e=="number"}function Id(e){return Array.isArray(e)?Id(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":d0(e)?"float32":Ur(e)?"string":p0(e)?"bool":"float32"}function Gr(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Nd(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Mo(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function h0(e,t,n){let a=new Array;if(t.length===1){let r=t[0];for(let s=0;s<r;s++)a[s]=n[e+s]}else{let r=t[0],s=t.slice(1),i=s.reduce((o,l)=>o*l);for(let o=0;o<r;o++)a[o]=h0(e+o*i,s,n)}return a}function Ro(e,t){if(e.length===0)return t[0];let n=e.reduce((a,r)=>a*r);if(n===0)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return h0(0,e,t)}function ty(e,t){let n=Td(e,t);for(let a=0;a<n.length;a++)n[a]=1;return n}function Td(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function c_(e,t){let n=e.reduce((a,r)=>a*r,1);if(t==null||t==="float32")return Ro(e,new Float32Array(n));if(t==="int32")return Ro(e,new Int32Array(n));if(t==="bool")return Ro(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function ny(e){e.forEach(t=>{$(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function p_(e,t,n){if(t===0)return 0;if(t===1)return e[0];let a=e[e.length-1];for(let r=0;r<e.length-1;++r)a+=n[r]*e[r];return a}function d_(e,t,n){if(t===0)return[];if(t===1)return[e];let a=new Array(t);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(e/n[r]),e-=a[r]*n[r];return a[a.length-1]=e,a}function ay(e){return e&&e.then&&typeof e.then=="function"}var m0="tfjsflags",f0=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let a=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${a}.`),this.set(e,a)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(ay(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=h_(this.global.location.search);m0 in e&&e[m0].split(",").forEach(t=>{let[n,a]=t.split(":");this.urlFlags[n]=m_(n,a)})}};function h_(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...a)=>(f_(t,a[0],a[1]),a.join("="))),t}function f_(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function m_(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function Z(){return ry}var ry=null;function g_(e){ry=e}var sy;function g0(){if(sy==null){let e;if(typeof window!="undefined")e=window;else if(typeof global!="undefined")e=global;else if(typeof process!="undefined")e=process;else if(typeof self!="undefined")e=self;else throw new Error("Could not find a global object");sy=e}return sy}function y_(){let e=g0();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function iy(e,t){let n=y_();if(n.has(e))return n.get(e);{let a=t();return n.set(e,a),n.get(e)}}var Po="Abs",Oo="Acos",Lo="Acosh",Hr="Add",Es="AddN",Sd="All",Cd="Any",$s="ArgMax",nc="ArgMin",zo="Asin",Wo="Asinh",Bo="Atan",Vo="Atanh",Uo="Atan2",Ds="AvgPool",Ad="AvgPoolGrad",ac="AvgPool3D",Fd="AvgPool3DGrad",Ms="BatchMatMul",rc="BatchToSpaceND",_d="Bincount",y0="BroadcastTo",Rs="Cast",Ps="Ceil",jr="ClipByValue",Ed="Complex",sc="ComplexAbs",Go="Concat",Os="Conv2D",$d="Conv2DBackpropFilter",Ls="Conv2DBackpropInput",ic="Conv3D",Dd="Conv3DBackpropFilterV2",Md="Conv3DBackpropInputV2",zs="Cos",Ho="Cosh",Ws="Cumsum",jo="CropAndResize",Rd="DenseBincount",qo="DepthToSpace",Bs="DepthwiseConv2dNative",Pd="DepthwiseConv2dNativeBackpropFilter",Od="DepthwiseConv2dNativeBackpropInput",Ld="Diag",oc="Dilation2D",zd="Dilation2DBackpropInput",Wd="Dilation2DBackpropFilter",Vs="RealDiv",Xo="Elu",Bd="EluGrad",Ko="Erf",Yo="Equal",Us="Exp",Jo="ExpandDims",Qo="Expm1",Vd="FFT",lc="Fill",Zo="FlipLeftRight",Gs="Floor",Hs="FloorDiv",js="FusedBatchNorm",el="GatherV2",tl="GatherNd",nl="Greater",qs="GreaterEqual",Xs="Identity",Ud="IFFT",Gd="Imag",al="IsFinite",rl="IsInf",sl="IsNan",Ks="LeakyRelu",il="Less",ol="LessEqual",Hd="LinSpace",Ys="Log",ll="Log1p",ul="LogicalAnd",uc="LogicalNot",cc="LogicalOr",b0="LogSoftmax",pc="LRN",jd="LRNGrad",Js="Max",Qs="Maximum",Zs="MaxPool",qd="MaxPoolGrad",dc="MaxPool3D",Xd="MaxPool3DGrad",Kd="MaxPoolWithArgmax",ei="Mean",ti="Min",ni="Minimum",hc="MirrorPad",cl="Mod",Yd="Multinomial",ai="Multiply",pl="Neg",dl="NotEqual",hl="NonMaxSuppressionV3",ml="NonMaxSuppressionV4",fl="NonMaxSuppressionV5",gl="OnesLike",ri="OneHot",yl="Pack",si="PadV2",b_="Pool",ii="Pow",oi="Prelu",bl="Prod",mc="Range",Jd="Real",xl="Reciprocal",li="Relu",vl="Reshape",fc="ResizeNearestNeighbor",Qd="ResizeNearestNeighborGrad",ui="ResizeBilinear",Zd="ResizeBilinearGrad",ci="Relu6",pi="Reverse",di="Round",hi="Rsqrt",wl="ScatterNd",kl="Select",Il="Selu",Nl="Slice",mi="Sin",Tl="Sinh",Sl="Sign",fi="Sigmoid",Cl="Softplus",gi="Sqrt",yi="Sum",gc="SpaceToBatchND",Al="SplitV",bi="Softmax",xi="SquaredDifference",yc="Square",vi="Sub",eh="SparseToDense",Fl="StridedSlice",_l="Tan",wi="Tanh",qr="Tile",El="TopK",th="Transform",ki="Transpose",nh="Unique",$l="Unpack",bc="UnsortedSegmentSum",Dl="ZerosLike",Xr="Step",ah="FromPixels",Ml="RotateWithOffset",Ii="_FusedMatMul",Ni="FusedConv2D",Ti="FusedDepthwiseConv2D",Rl=iy("kernelRegistry",()=>new Map),xc=iy("gradRegistry",()=>new Map);function rh(e,t){let n=oy(e,t);return Rl.get(n)}function ly(e){return xc.get(e)}function sh(e){let t=Rl.entries(),n=[];for(;;){let{done:a,value:r}=t.next();if(a)break;let[s,i]=r,[o]=s.split("_");o===e&&n.push(i)}return n}function vc(e){let{kernelName:t,backendName:n}=e,a=oy(t,n);Rl.has(a)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),Rl.set(a,e)}function x0(e){let{kernelName:t}=e;xc.has(t)&&Z().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),xc.set(t,e)}function x_(e,t){let n=oy(e,t);if(!Rl.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Rl.delete(n)}function v_(e){if(!xc.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);xc.delete(e)}function w_(e,t){sh(e).forEach(n=>{let a=Object.assign({},n,{backendName:t});vc(a)})}function oy(e,t){return`${t}_${e}`}var I={};Oe(I,{arraysEqual:()=>gr,assert:()=>$,assertNonNegativeIntegerDimensions:()=>ny,assertNonNull:()=>Fs,assertShapesMatch:()=>ln,bytesFromStringArray:()=>c0,bytesPerElement:()=>ey,checkConversionForErrors:()=>l0,clamp:()=>ec,computeStrides:()=>Mo,createScalarValue:()=>k_,createShuffledIndices:()=>i_,decodeString:()=>oh,distSquared:()=>n_,encodeString:()=>kc,fetch:()=>I_,flatten:()=>_s,getArrayFromDType:()=>o0,getTypedArrayFromDType:()=>i0,hasEncodingLoss:()=>u_,indexToLoc:()=>d_,inferDtype:()=>Id,inferFromImplicitShape:()=>l_,isBoolean:()=>p0,isFunction:()=>Gr,isInt:()=>Ht,isNumber:()=>d0,isPromise:()=>ay,isScalarShape:()=>a_,isString:()=>Ur,isTypedArray:()=>un,isValidDtype:()=>u0,locToIndex:()=>p_,makeOnesTypedArray:()=>ty,makeZerosNestedTypedArray:()=>c_,makeZerosTypedArray:()=>Td,nearestDivisor:()=>Nd,nearestLargerEven:()=>ZF,now:()=>wc,parseAxisParam:()=>ca,randUniform:()=>t_,repeatedTry:()=>o_,rightPad:()=>tc,shuffle:()=>r0,shuffleCombo:()=>QF,sizeFromShape:()=>Ot,sizeToSquarishShape:()=>s_,squeezeShape:()=>s0,sum:()=>e_,tanh:()=>r_,toNestedArray:()=>Ro,toTypedArray:()=>ih});function k_(e,t){return t==="string"?kc(e):ih([e],t)}function N_(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function ih(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=_s(e)),Z().getBool("DEBUG")&&l0(e,t),N_(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let a=0;a<n.length;++a)Math.round(e[a])!==0&&(n[a]=1);return n}else throw new Error(`Unknown data type ${t}`)}function wc(){return Z().platform.now()}function I_(e,t){return Z().platform.fetch(e,t)}function kc(e,t="utf-8"){return t=t||"utf-8",Z().platform.encode(e,t)}function oh(e,t="utf-8"){return t=t||"utf-8",Z().platform.decode(e,t)}var C_=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new S_)}profileKernel(e,t,n){let a,r=()=>{a=n()},s,i=wc();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(r);else{r();for(let o of a)o.dataSync();s=Promise.resolve({kernelMs:wc()-i})}if(Z().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<a.length;o++){let l=a[o];l.data().then(u=>{T_(u,l.dtype,e)})}return{kernelName:e,outputs:a,inputs:t,timeMs:s.then(o=>o.kernelMs),extraInfo:s.then(o=>o.getExtraProfileInfo!=null?o.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:s}=e;n.forEach(i=>{Promise.all([i.data(),a,s]).then(o=>{this.logger.logKernelProfile(t,i,o[0],o[1],r,o[2])})})}};function T_(e,t,n){if(t!=="float32")return!1;for(let a=0;a<e.length;a++){let r=e[a];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var S_=class{logKernelProfile(e,t,n,a,r,s){let i=typeof a=="number"?tc(`${a}ms`,9):a.error,o=tc(e,25),l=t.rank,u=t.size,c=tc(t.shape.toString(),14),p="";for(let d in r){let h=r[d];if(h!=null){let m=h.shape||t.shape,f=m.length;p+=`${d}: ${f}D ${f>0?m:""} `}}console.log(`%c${o}	%c${i}	%c${l}D ${c}	%c${u}	%c${p}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function A_(e,t,n){let a={},r={};for(let l=0;l<t.length;l++)a[t[l].id]=!0;for(let l=0;l<e.length;l++){let u=e[l],c=u.inputs;for(let p in c){let d=c[p],h=!1;for(let m=0;m<t.length;m++)if(a[d.id]){u.outputs.forEach(f=>a[f.id]=!0),h=!0,r[u.id]=!0;break}if(h)break}}let s={};s[n.id]=!0;let i={};for(let l=e.length-1;l>=0;l--){let u=e[l],c=u.inputs;for(let p=0;p<u.outputs.length;p++)if(s[u.outputs[p].id]){for(let d in c)s[c[d].id]=!0,i[u.id]=!0;break}}let o=[];for(let l=0;l<e.length;l++){let u=e[l];if(r[u.id]&&i[u.id]){let c={};for(let d in u.inputs){let h=u.inputs[d];a[h.id]&&(c[d]=h)}let p=Object.assign({},u);p.inputs=c,p.outputs=u.outputs,o.push(p)}}return o}function F_(e,t,n,a){for(let r=t.length-1;r>=0;r--){let s=t[r],i=[];if(s.outputs.forEach(l=>{let u=e[l.id];u!=null?i.push(u):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let l in s.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);let u=n(()=>o[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let c=s.inputs[l];if(!gr(u.shape,c.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(e[c.id]==null)e[c.id]=u;else{let p=e[c.id];e[c.id]=a(p,u),p.dispose()}}}}var v0=20,Ic=3,uy=7;function E_(e,t,n,a){let r=Mo(t),s=__(e,t,n,r),i=t.length,o=lh(e,t,n,r,s),l=["Tensor"];return a&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(u=>"    "+u).join(`
`)),l.join(`
`)}function __(e,t,n,a){let r=Ot(t),s=a[a.length-1],i=new Array(s).fill(0),o=t.length,l=n==="complex64"?Tc(e):e;if(o>1)for(let u=0;u<r/s;u++){let c=u*s;for(let p=0;p<s;p++)i[p]=Math.max(i[p],Nc(l[c+p],0,n).length)}return i}function Nc(e,t,n){let a;return Array.isArray(e)?a=`${parseFloat(e[0].toFixed(uy))} + ${parseFloat(e[1].toFixed(uy))}j`:Ur(e)?a=`'${e}'`:n==="bool"?a=w0(e):a=parseFloat(e.toFixed(uy)).toString(),tc(a,t)}function w0(e){return e===0?"false":"true"}function lh(e,t,n,a,r,s=!0){let i=n==="complex64"?2:1,o=t[0],l=t.length;if(l===0){if(n==="complex64"){let f=Tc(e);return[Nc(f[0],0,n)]}return n==="bool"?[w0(e[0])]:[e[0].toString()]}if(l===1){if(o>v0){let g=Ic*i,y=Array.from(e.slice(0,g)),b=Array.from(e.slice((o-Ic)*i,o*i));return n==="complex64"&&(y=Tc(y),b=Tc(b)),["["+y.map((x,v)=>Nc(x,r[v],n)).join(", ")+", ..., "+b.map((x,v)=>Nc(x,r[o-Ic+v],n)).join(", ")+"]"]}let f=n==="complex64"?Tc(e):Array.from(e);return["["+f.map((g,y)=>Nc(g,r[y],n)).join(", ")+"]"]}let u=t.slice(1),c=a.slice(1),p=a[0]*i,d=[];if(o>v0){for(let f=0;f<Ic;f++){let g=f*p,y=g+p;d.push(...lh(e.slice(g,y),u,n,c,r,!1))}d.push("...");for(let f=o-Ic;f<o;f++){let g=f*p,y=g+p;d.push(...lh(e.slice(g,y),u,n,c,r,f===o-1))}}else for(let f=0;f<o;f++){let g=f*p,y=g+p;d.push(...lh(e.slice(g,y),u,n,c,r,f===o-1))}let h=l===2?",":"";d[0]="["+d[0]+h;for(let f=1;f<d.length-1;f++)d[f]=" "+d[f]+h;let m=`,
`;for(let f=2;f<l;f++)m+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":m),d}function Tc(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Lt=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Ot(e),n!=null){let a=n.length;$(a===this.size,()=>`Length of values '${a}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||o0(t,this.size),this.strides=Mo(e)}set(e,...t){t.length===0&&(t=[0]),$(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let a of e){if(a<0||a>=this.shape[t]){let r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let n=e[e.length-1];for(let a=0;a<e.length-1;++a)n+=this.strides[a]*e[a];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ua().makeTensor(this.values,this.shape,this.dtype)}},Ua=null,Pl=null,$_=null;function D_(e){Ua=e}function M_(e){Pl=e}function R_(e){$_=e}var Fe=class{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Ot(e),this.strides=Mo(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Pl.buffer(this.shape,this.dtype,e)}bufferSync(){return Pl.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Ro(this.shape,e)}arraySync(){return Ro(this.shape,this.dataSync())}async data(){this.throwIfDisposed();let e=Ua().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>oh(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();let e=Ua().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>oh(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Ua().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ua().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Pl.print(this,e)}clone(){return this.throwIfDisposed(),Pl.clone(this)}toString(e=!1){let t=this.dataSync();return E_(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Pl.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ua().makeVariable(this,e,t,n)}};Object.defineProperty(Fe,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function Y(){return iy("Tensor",()=>Fe)}Y();var Kr=class extends Fe{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a);this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!gr(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ua().disposeTensor(this),this.dataId=e.dataId,Ua().incRef(this,null)}dispose(){Ua().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Kr,Symbol.hasInstance,{value:e=>e instanceof Fe&&e.assign!=null&&e.assign instanceof Function});var Na={};Oe(Na,{assertTypesMatch:()=>k0,getTensorsInContainer:()=>cy,isTensorInList:()=>P_,makeTypesMatch:()=>Tt});var py;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(py||(py={}));var dy;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(dy||(dy={}));var hy;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(hy||(hy={}));var my;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(my||(my={}));var fy;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(fy||(fy={}));var O_={float32:my,int32:dy,bool:hy,complex64:fy};function pa(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return O_[e][t]}function uh(e){return pa(e,"int32")}function Tt(e,t){if(e.dtype===t.dtype)return[e,t];let n=pa(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function k0(e,t){$(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function P_(e,t){return t.some(n=>n.id===e.id)}function cy(e){let t=[],n=new Set;return I0(e,t,n),t}function I0(e,t,n){if(e==null)return;if(e instanceof Fe){t.push(e);return}if(!L_(e))return;let a=e;for(let r in a){let s=a[r];n.has(s)||(n.add(s),I0(s,t,n))}}function L_(e){return Array.isArray(e)||typeof e=="object"}function gy(e){return e.kernelName!=null}var N0=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Sc=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new N0}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new C_(this.backendInstance),!0}setupRegisteredKernels(){sh(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){sh(e).forEach(t=>{t.disposeFunc!=null&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof Zu)&&typeof n.then=="function"){let a=++this.pendingBackendInitId,r=n.then(s=>a<this.pendingBackendInitId?!1:(this.registry[e]=s,this.pendingBackendInit=null,!0)).catch(s=>(a<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(s.stack||s.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),s=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let a;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(a),()=>(a=t(),a instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),a))}scopedRun(e,t,n){e();try{let a=n();return t(),a}catch(a){throw t(),a}}nextTensorId(){return Sc.nextTensorId++}nextVariableId(){return Sc.nextVariableId++}clone(e){let t=P.runKernel(Xs,{x:e}),n={x:e},a=s=>({x:()=>{let i="float32",o={x:s},l={dtype:i};return P.runKernel(Rs,o,l)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],a,r,{}),t}runKernel(e,t,n){if(rh(e,this.backendName)==null)throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let a=this.backend.numDataIds(),r=0;n.forEach(o=>{r+=o.dtype==="complex64"?3:1});let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=a-t-r-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],a=this.isTapeOn(),r=this.state.numBytes,s=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let o,l=gy(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(gy(e)){let{kernelName:h,inputs:m,attrs:f}=e;this.backendName==null&&this.backend;let g=rh(h,this.backendName);$(g!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),i=()=>{let y=this.backend.numDataIds();o=g.kernelFunc({inputs:m,attrs:f,backend:this.backend});let b=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,y,b);let x=b.map(v=>{if(v.rank!=null)return v;let{dataId:k,shape:w,dtype:S}=v;return this.makeTensorFromDataId(k,w,S)});if(a){let v=this.getTensorsForGradient(h,m,x);n=this.saveTensorsForBackwardMode(v)}return x}}else{let{forwardFunc:h}=e,m=f=>{!a||(n=f.map(g=>this.keep(this.clone(g))))};i=()=>{let f=this.backend.numDataIds();o=this.tidy(()=>h(this.backend,m));let g=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,f,g),g}}let{inputs:u,attrs:c}=e,p=gy(e)?null:e.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(d=this.profiler.profileKernel(l,u,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs)}),a&&this.addTapeNode(l,u,t,p,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(h=>u[h]!=null?u[h].shape:null),outputShapes:t.map(h=>h.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(e,t,n){let a=ly(e);if(a!=null){let r=a.inputsToSave||[],s=a.outputsToSave||[],i;a.saveAllInputs?($(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(l=>t[l])):i=r.map(l=>t[l]);let o=n.filter((l,u)=>s[u]);return i.concat(o)}return[]}makeTensor(e,t,n,a){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;n==="string"&&Ur(e[0])&&(r=e.map(o=>kc(o)));let s=a.write(r,t,n),i=new Fe(t,n,s,this.nextTensorId());if(this.trackTensor(i,a),n==="string"){let o=this.state.tensorInfo.get(s),l=c0(r);this.state.numBytes+=l-o.bytes,o.bytes=l}return i}makeTensorFromDataId(e,t,n,a){n=n||"float32";let r=new Fe(t,n,e,this.nextTensorId());return this.trackTensor(r,a),r}makeVariable(e,t=!0,n,a){n=n||this.nextVariableId().toString(),a!=null&&a!==e.dtype&&(e=e.cast(a));let r=new Kr(e,t,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*ey(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Kr||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*ey(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(a=>a.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,a,r,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=ly(e);o!=null&&(a=o.gradFunc),a!=null&&(i.gradient=l=>(l=l.map((u,c)=>{if(u==null){let p=n[c],d=Td(p.size,p.dtype);return this.makeTensor(d,p.shape,p.dtype)}return u}),a(l.length>1?l:l[0],r,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=cy(e),n=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){let s=this.state.activeScope.track[r];!s.kept&&!n.has(s.id)&&s.dispose()}let a=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===a.id&&this.track(r)})}gradients(e,t,n,a=!1){if($(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));$(r instanceof Fe,()=>"The result y returned by f() must be a tensor.");let s=A_(this.state.activeTape,t,r);if(!a&&s.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[r.id]=n==null?z_(r.shape):n,F_(i,s,l=>this.tidy(l),W_);let o=t.map(l=>i[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let u of l.saved)u.dispose()}),this.state.activeTape=null),{value:r,grads:o}})}customGrad(e){return $(Gr(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{$(t.every(i=>i instanceof Fe),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,a={};t.forEach((i,o)=>{a[o]=i});let r=(i,o)=>(n=e(...t,o),$(n.value instanceof Fe,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),$(Gr(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),s=(i,o)=>{let l=n.gradFunc(i,o),u=Array.isArray(l)?l:[l];$(u.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),$(u.every(p=>p instanceof Fe),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let c={};return u.forEach((p,d)=>{c[d]=()=>p}),c};return this.runKernelFunc({forwardFunc:r,backwardsFunc:s,inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){let t=wc(),n=await this.backend.time(e);return n.wallMs=wc()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new N0;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};Sc.nextTensorId=0;Sc.nextVariableId=0;function z_(e){let t=ty(Ot(e),"float32");return P.makeTensor(t,e,"float32")}function T0(){let e=g0();if(e._tfengine==null){let t=new f0(e);e._tfengine=new Sc(t)}return g_(e._tfengine.ENV),D_(()=>e._tfengine),e._tfengine}var P=T0();function W_(e,t){let n={a:e,b:t};return P.runKernel(Hr,n)}var Cc={};Oe(Cc,{isBrowser:()=>S0,isMobile:()=>B_});function V_(){return typeof navigator!="undefined"&&navigator!=null}function B_(){if(V_()){let e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function S0(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var Ta=Z();Ta.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Ta.registerFlag("IS_BROWSER",()=>S0());Ta.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");Ta.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Ta.registerFlag("PROD",()=>!1);Ta.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Ta.getBool("DEBUG"));Ta.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Ta.registerFlag("IS_TEST",()=>!1);Ta.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Ta.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);function Ga(e,t){let n=e;if(un(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let a=[];for(;Array.isArray(n)||un(n)&&t!=="string";)a.push(n.length),n=n[0];return Array.isArray(e)&&Z().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&C0(e,a,[]),a}function C0(e,t,n){if(n=n||[],!Array.isArray(e)&&!un(e)){$(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}$(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),$(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let a=t.slice(1);for(let r=0;r<e.length;++r)C0(e[r],a,n.concat(r))}function A0(e,t,n,a){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${a}' must be ${e} tensor, but got ${t} tensor`)}}function _(e,t,n,a="numeric"){if(e instanceof Fe)return A0(a,e.dtype,t,n),e;let r=Id(e);if(r!=="string"&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),A0(a,r,t,n),e==null||!un(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let o=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${o}'`)}let s=Ga(e,r);!un(e)&&!Array.isArray(e)&&(e=[e]);let i=r!=="string"?ih(e,r):_s(e,[],!0);return P.makeTensor(i,s,r)}function Ac(e,t,n,a="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((r,s)=>_(r,`${t}[${s}]`,n,a))}var F0="__op";function O(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+F0;let r=(...s)=>{P.startScope(n);try{let i=a(...s);return ay(i)&&console.error("Cannot return a Promise inside of tidy."),P.endScope(i),i}catch(i){throw P.endScope(null),i}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}function U_(e,t){let n=_(e,"real","complex"),a=_(t,"imag","complex");ln(n.shape,a.shape,`real and imag shapes, ${n.shape} and ${a.shape}, must match in call to tf.complex().`);let r={real:n,imag:a};return P.runKernel(Ed,r)}var Yr=O({complex_:U_});function Jr(e,t,n,a){if(a==null&&(a=Id(e)),a==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!un(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){ny(t);let r=Ot(t),s=Ot(n);$(r===s,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${s}`);for(let i=0;i<n.length;++i){let o=n[i],l=i===n.length-1?o!==Ot(t.slice(i)):!0;$(n[i]===t[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!un(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=a!=="string"?ih(e,a):_s(e,[],!0),P.makeTensor(e,t,a)}function Jn(e,t,n){let a=Ga(e,n);return Jr(e,t,a,n)}var yy={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},ch=4;async function H_(e,t){let n=[],a=[],r=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);for(let i=0;i<r.length;++i){let o=r[i],l=Array.isArray(e)?e[i].tensor:e[o];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);let u={name:o,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let c=new Promise(async p=>{let d=await l.bytes(),h=d.reduce((g,y)=>g+y.length,0)+ch*d.length,m=new Uint8Array(h),f=0;for(let g=0;g<d.length;g++){let y=d[g],b=new Uint8Array(new Uint32Array([y.length]).buffer);m.set(b,f),f+=ch,m.set(y,f),f+=y.length}p(m)});a.push(c)}else a.push(l.data());t!=null&&(u.group=t),n.push(u)}let s=await Promise.all(a);return{data:G_(s),specs:n}}function _0(e,t){let n={},a,r=0;for(let s of t){let i=s.name,o=s.dtype,l=s.shape,u=Ot(l),c;if("quantization"in s){let p=s.quantization;if(p.dtype==="uint8"||p.dtype==="uint16"){if(!("min"in p&&"scale"in p))throw new Error(`Weight ${s.name} with quantization ${p.dtype} doesn't have corresponding metadata min and scale.`)}else if(p.dtype==="float16"){if(o!=="float32")throw new Error(`Weight ${s.name} is quantized with ${p.dtype} which only supports weights of type float32 not ${o}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${p.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let d=yy[p.dtype],h=e.slice(r,r+u*d),m=p.dtype==="uint8"?new Uint8Array(h):new Uint16Array(h);if(o==="float32")if(p.dtype==="uint8"||p.dtype==="uint16"){c=new Float32Array(m.length);for(let f=0;f<m.length;f++){let g=m[f];c[f]=g*p.scale+p.min}}else if(p.dtype==="float16")a===void 0&&(a=j_()),c=a(m);else throw new Error(`Unsupported quantization type ${p.dtype} for weight type float32.`);else if(o==="int32"){if(p.dtype!=="uint8"&&p.dtype!=="uint16")throw new Error(`Unsupported quantization type ${p.dtype} for weight type int32.`);c=new Int32Array(m.length);for(let f=0;f<m.length;f++){let g=m[f];c[f]=Math.round(g*p.scale+p.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);r+=u*d}else if(o==="string"){let p=Ot(s.shape);c=[];for(let d=0;d<p;d++){let h=new Uint32Array(e.slice(r,r+ch))[0];r+=ch;let m=new Uint8Array(e.slice(r,r+h));c.push(m),r+=h}}else{let p=yy[o],d=e.slice(r,r+u*p);if(o==="float32")c=new Float32Array(d);else if(o==="int32")c=new Int32Array(d);else if(o==="bool")c=new Uint8Array(d);else if(o==="complex64"){c=new Float32Array(d);let h=new Float32Array(c.length/2),m=new Float32Array(c.length/2);for(let y=0;y<h.length;y++)h[y]=c[y*2],m[y]=c[y*2+1];let f=Jn(h,l,"float32"),g=Jn(m,l,"float32");n[i]=Yr(f,g),f.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);r+=u*p}o!=="complex64"&&(n[i]=Jn(c,l,o))}return n}function G_(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(s=>{if(t+=s.byteLength,n.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let a=new Uint8Array(t),r=0;return n.forEach(s=>{a.set(new Uint8Array(s.buffer),r),r+=s.byteLength}),a.buffer}var by=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function E0(e){return by?Buffer.byteLength(e):new Blob([e]).size}function q_(e){if(by)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let a=0,r=t.length;a<r;a++)n+=String.fromCharCode(t[a]);return btoa(n)}function X_(e){if(by){let a=Buffer.from(e,"base64");return a.buffer.slice(a.byteOffset,a.byteOffset+a.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let a=0;a<t.length;++a)n.set([t.charCodeAt(a)],a);return n.buffer}function xy(e){if(e.length===1)return e[0];let t=0;e.forEach(r=>{t+=r.byteLength});let n=new Uint8Array(t),a=0;return e.forEach(r=>{n.set(new Uint8Array(r),a),a+=r.byteLength}),n.buffer}function $0(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function Fc(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:E0(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:E0(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function K_(){let e=n=>{let a=n<<13,r=0;for(;(a&8388608)==0;)r-=8388608,a<<=1;return a&=~8388608,r+=947912704,a|r},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function Y_(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function J_(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function j_(){let e=K_(),t=Y_(),n=J_();return a=>{let r=new ArrayBuffer(4*a.length),s=new Uint32Array(r);for(let i=0;i<a.length;i++){let o=a[i],l=e[n[o>>10]+(o&1023)]+t[o>>10];s[i]=l}return new Float32Array(r)}}var _t=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return _t.instance==null&&(_t.instance=new _t),_t.instance}static registerSaveRouter(e){_t.getInstance().saveRouters.push(e)}static registerLoadRouter(e){_t.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return _t.getHandlers(e,"save")}static getLoadHandlers(e,t){return _t.getHandlers(e,"load",t)}static getHandlers(e,t,n){let a=[];return(t==="load"?_t.getInstance().loadRouters:_t.getInstance().saveRouters).forEach(r=>{let s=r(e,n);s!==null&&a.push(s)}),a}},Q_=e=>_t.registerSaveRouter(e),Z_=e=>_t.registerLoadRouter(e),eE=e=>_t.getSaveHandlers(e),tE=(e,t)=>_t.getLoadHandlers(e,t),vy="tensorflowjs",wy=1,Si="models_store",Qr="model_info_store";function D0(){if(!Z().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window=="undefined"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ky(e){let t=e.result;t.createObjectStore(Si,{keyPath:"modelPath"}),t.createObjectStore(Qr,{keyPath:"modelPath"})}var Ci=class{constructor(e){if(this.indexedDB=D0(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,a)=>{let r=this.indexedDB.open(vy,wy);r.onupgradeneeded=()=>ky(r),r.onsuccess=()=>{let s=r.result;if(t==null){let i=s.transaction(Si,"readonly"),o=i.objectStore(Si).get(this.modelPath);o.onsuccess=()=>{if(o.result==null)return s.close(),a(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(o.result.modelArtifacts)},o.onerror=l=>(s.close(),a(o.error)),i.oncomplete=()=>s.close()}else{let i=Fc(t),o=s.transaction(Qr,"readwrite"),l=o.objectStore(Qr),u=l.put({modelPath:this.modelPath,modelArtifactsInfo:i}),c;u.onsuccess=()=>{c=s.transaction(Si,"readwrite");let p=c.objectStore(Si).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});p.onsuccess=()=>n({modelArtifactsInfo:i}),p.onerror=d=>{l=o.objectStore(Qr);let h=l.delete(this.modelPath);h.onsuccess=()=>(s.close(),a(p.error)),h.onerror=m=>(s.close(),a(p.error))}},u.onerror=p=>(s.close(),a(u.error)),o.oncomplete=()=>{c==null?s.close():c.oncomplete=()=>s.close()}}},r.onerror=s=>a(r.error)})}};Ci.URL_SCHEME="indexeddb://";var M0=e=>Z().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ci.URL_SCHEME)?nE(e.slice(Ci.URL_SCHEME.length)):null;_t.registerSaveRouter(M0);_t.registerLoadRouter(M0);function nE(e){return new Ci(e)}function aE(e){return e.startsWith(Ci.URL_SCHEME)?e.slice(Ci.URL_SCHEME.length):e}var rE=class{constructor(){this.indexedDB=D0()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(vy,wy);n.onupgradeneeded=()=>ky(n),n.onsuccess=()=>{let a=n.result,r=a.transaction(Qr,"readonly"),s=r.objectStore(Qr).getAll();s.onsuccess=()=>{let i={};for(let o of s.result)i[o.modelPath]=o.modelArtifactsInfo;e(i)},s.onerror=i=>(a.close(),t(s.error)),r.oncomplete=()=>a.close()},n.onerror=a=>t(n.error)})}async removeModel(e){return e=aE(e),new Promise((t,n)=>{let a=this.indexedDB.open(vy,wy);a.onupgradeneeded=()=>ky(a),a.onsuccess=()=>{let r=a.result,s=r.transaction(Qr,"readwrite"),i=s.objectStore(Qr),o=i.get(e),l;o.onsuccess=()=>{if(o.result==null)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let u=i.delete(e),c=()=>{l=r.transaction(Si,"readwrite");let p=l.objectStore(Si).delete(e);p.onsuccess=()=>t(o.result.modelArtifactsInfo),p.onerror=d=>n(o.error)};u.onsuccess=c,u.onerror=p=>(c(),r.close(),n(o.error))}},o.onerror=u=>(r.close(),n(o.error)),s.oncomplete=()=>{l==null?r.close():l.oncomplete=()=>r.close()}},a.onerror=r=>n(a.error)})}},yr="/",Ol="tensorflowjs_models",R0="info",sE="model_topology",iE="weight_specs",oE="weight_data",lE="model_metadata";function P0(e){return{info:[Ol,e,R0].join(yr),topology:[Ol,e,sE].join(yr),weightSpecs:[Ol,e,iE].join(yr),weightData:[Ol,e,oE].join(yr),modelMetadata:[Ol,e,lE].join(yr)}}function uE(e){let t=e.split(yr);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(yr)}function cE(e){return e.startsWith(Ai.URL_SCHEME)?e.slice(Ai.URL_SCHEME.length):e}var Ai=class{constructor(e){if(!Z().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=P0(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),a=Fc(e);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,q_(e.weightData));let r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return e.signature!=null&&(r.signature=e.signature),e.userDefinedMetadata!=null&&(r.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(r.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:a}}catch(r){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(a==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=a;let r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){let i=JSON.parse(r);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer)}let s=this.LS.getItem(this.keys.weightData);if(s==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=X_(s),t}};Ai.URL_SCHEME="localstorage://";var O0=e=>Z().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ai.URL_SCHEME)?pE(e.slice(Ai.URL_SCHEME.length)):null;_t.registerSaveRouter(O0);_t.registerLoadRouter(O0);function pE(e){return new Ai(e)}var dE=class{constructor(){$(Z().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),$(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Ol+yr,n=yr+R0;for(let a=0;a<this.LS.length;++a){let r=this.LS.key(a);if(r.startsWith(t)&&r.endsWith(n)){let s=uE(r);e[s]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=cE(e);let t=P0(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),n}},Ll="://",Qn=class{constructor(){this.managers={}}static getInstance(){return Qn.instance==null&&(Qn.instance=new Qn),Qn.instance}static registerManager(e,t){$(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Ll)&&(e=e.slice(0,e.indexOf(Ll))),$(e.length>0,()=>"scheme must not be an empty string.");let n=Qn.getInstance();$(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function ph(e){if(e.indexOf(Ll)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Qn.getSchemes().join(",")}`);return{scheme:e.split(Ll)[0],path:e.split(Ll)[1]}}async function L0(e,t,n=!1){$(e!==t,()=>`Old path and new path are the same: '${e}'`);let a=_t.getLoadHandlers(e);$(a.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),$(a.length<2,()=>`Copying failed because more than one (${a.length}) load handlers for source URL ${e}.`);let r=a[0],s=_t.getSaveHandlers(t);$(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),$(s.length<2,()=>`Copying failed because more than one (${a.length}) save handlers for destination URL ${t}.`);let i=s[0],o=ph(e).scheme,l=ph(e).path,u=o===ph(e).scheme,c=await r.load();n&&u&&await Qn.getManager(o).removeModel(l);let p=await i.save(c);return n&&!u&&await Qn.getManager(o).removeModel(l),p.modelArtifactsInfo}async function hE(){let e=Qn.getSchemes(),t={};for(let n of e){let a=await Qn.getManager(n).listModels();for(let r in a){let s=n+Ll+r;t[s]=a[r]}}return t}async function mE(e){let t=ph(e);return Qn.getManager(t.scheme).removeModel(t.path)}async function fE(e,t){return L0(e,t,!1)}async function gE(e,t){return L0(e,t,!0)}var yE=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(Z().get("IS_BROWSER")){Z().setPlatform("browser",new yE);try{Qn.registerManager(Ai.URL_SCHEME,new dE)}catch(e){}try{Qn.registerManager(Ci.URL_SCHEME,new rE)}catch(e){}}var bE={importFetch:()=>wF()},Iy,xE=class{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return Z().global.fetch!=null?Z().global.fetch(e,t):(Iy==null&&(Iy=bE.importFetch()),Iy(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};Z().get("IS_NODE")&&Z().setPlatform("node",new xE);function Le(e,t="float32",n){return t=t||"float32",ny(e),new Lt(e,t,n)}function vE(e,t){let n=_(e,"x","cast");if(!u0(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let a={x:n},r={dtype:t};return P.runKernel(Rs,a,r)}var ue=O({cast_:vE});function wE(e){let t={x:_(e,"x","clone","string_or_numeric")};return P.runKernel(Xs,t)}var Zr=O({clone_:wE});function z0(e,t=!1){console.log(e.toString(t))}T0();var kE={buffer:Le,cast:ue,clone:Zr,print:z0};M_(kE);var jt={};Oe(jt,{browserFiles:()=>IE,browserHTTPRequest:()=>TE,concatenateArrayBuffers:()=>xy,copyModel:()=>fE,decodeWeights:()=>_0,encodeWeights:()=>H_,fromMemory:()=>SE,getLoadHandlers:()=>tE,getModelArtifactsInfoForJSON:()=>Fc,getSaveHandlers:()=>eE,http:()=>Ty,isHTTPScheme:()=>Ny,listModels:()=>hE,loadWeights:()=>NE,moveModel:()=>gE,registerLoadRouter:()=>Z_,registerSaveRouter:()=>Q_,removeModel:()=>mE,weightsLoaderFactory:()=>W0,withSaveHandler:()=>CE});var AE="model",FE=".json",_E=".weights.bin";function B0(e){return new Promise(t=>setTimeout(t)).then(e)}var zl=class{constructor(e){if(!Z().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(zl.URL_SCHEME)&&(e=e.slice(zl.URL_SCHEME.length)),(e==null||e.length===0)&&(e=AE),this.modelTopologyFileName=e+FE,this.weightDataFileName=e+_E}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};e.signature!=null&&(a.signature=e.signature),e.userDefinedMetadata!=null&&(a.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(a.modelInitializer=e.modelInitializer);let r=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),s=this.jsonAnchor==null?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=r,await B0(()=>s.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await B0(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Fc(e)}}}};zl.URL_SCHEME="downloads://";var EE=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){let e=this.files[0],t=this.files.slice(1);return new Promise((n,a)=>{let r=new FileReader;r.onload=s=>{let i=JSON.parse(s.target.result),o=i.modelTopology;if(o==null){a(new Error(`modelTopology field is missing from file ${e.name}`));return}t.length===0&&n({modelTopology:o});let l=i.weightsManifest;if(l==null){a(new Error(`weightManifest field is missing from file ${e.name}`));return}let u;try{u=this.checkManifestAndWeightFiles(l,t)}catch(h){a(h);return}let c=[],p=[],d=[];l.forEach(h=>{h.paths.forEach(m=>{p.push(m),d.push(null)}),c.push(...h.weights)}),l.forEach(h=>{h.paths.forEach(m=>{let f=new FileReader;f.onload=g=>{let y=g.target.result,b=p.indexOf(m);if(d[b]=y,d.indexOf(null)===-1){let x={modelTopology:o,weightSpecs:c,weightData:xy(d),format:i.format,generatedBy:i.generatedBy,convertedBy:i.convertedBy};i.signature!=null&&(x.signature=i.signature),i.userDefinedMetadata!=null&&(x.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(x.modelInitializer=i.modelInitializer),n(x)}},f.onerror=g=>a(`Failed to weights data from file of path '${m}'.`),f.readAsArrayBuffer(u[m])})})},r.onerror=s=>a(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(e)})}checkManifestAndWeightFiles(e,t){let n=[],a=t.map(s=>$0(s.name)),r={};for(let s of e)s.paths.forEach(i=>{let o=$0(i);if(n.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(n.push(o),a.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);r[i]=t[a.indexOf(o)]});if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return r}},DE=e=>Z().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(zl.URL_SCHEME)?$E(e.slice(zl.URL_SCHEME.length)):null;_t.registerSaveRouter(DE);function $E(e="model"){return new zl(e)}function IE(e){return new EE(e)}function V0(e,t,n,a){i(e),n=n==null?0:n,a=a==null?1:a,o(n,a);let r=0,s=l=>(l.then(u=>{let c=n+ ++r/e.length*(a-n);return t(c),u}),l);function i(l){$(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function o(l,u){$(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),$(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),$(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(e.map(s))}async function U0(e,t){t==null&&(t={});let n=t.fetchFunc==null?Z().platform.fetch:t.fetchFunc,a=e.map(u=>n(u,t.requestInit,{isBinary:!0})),r=0,s=.5,i=(t.onProgress==null?await Promise.all(a):await V0(a,t.onProgress,r,s)).map(u=>u.arrayBuffer()),o=.5,l=1;return t.onProgress==null?await Promise.all(i):await V0(i,t.onProgress,o,l)}async function NE(e,t="",n,a){return W0(r=>U0(r,{requestInit:a}))(e,t,n)}function W0(e){return async(t,n="",a)=>{let r=t.map(()=>!1),s={},i=a!=null?a.map(()=>!1):[],o=[];if(t.forEach((h,m)=>{let f=0;h.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,b=yy[y]*Ot(g.shape),x=()=>{r[m]=!0,s[m]==null&&(s[m]=[]),s[m].push({manifestEntry:g,groupOffset:f,sizeBytes:b})};a!=null?a.forEach((v,k)=>{v===g.name&&(x(),i[k]=!0)}):x(),o.push(g.name),f+=b})}),!i.every(h=>h)){let h=a.filter((m,f)=>!i[f]);throw new Error(`Could not find weights in manifest with names: ${h.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let l=r.reduce((h,m,f)=>(m&&h.push(f),h),[]),u=[];l.forEach(h=>{t[h].paths.forEach(m=>{let f=n+(n.endsWith("/")?"":"/")+m;u.push(f)})});let c=await e(u),p={},d=0;return l.forEach(h=>{let m=t[h].paths.length,f=0;for(let x=0;x<m;x++)f+=c[d+x].byteLength;let g=new ArrayBuffer(f),y=new Uint8Array(g),b=0;for(let x=0;x<m;x++){let v=new Uint8Array(c[d+x]);y.set(v,b),b+=v.byteLength}s[h].forEach(x=>{let v=g.slice(x.groupOffset,x.groupOffset+x.sizeBytes),k=_0(v,[x.manifestEntry]);for(let w in k)p[w]=k[w]}),d+=m}),p}}var ME="application/octet-stream",RE="application/json",Sy=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?($(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Z().platform.fetch,$(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&$(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};e.signature!=null&&(a.signature=e.signature),e.userDefinedMetadata!=null&&(a.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(a.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(a)],{type:RE}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:ME}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Fc(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(h){let m=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?m+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":m+=" Please make sure the server is serving valid JSON for this request.",new Error(m)}let n=t.modelTopology,a=t.weightsManifest,r=t.generatedBy,s=t.convertedBy,i=t.format,o=t.signature,l=t.userDefinedMetadata;if(n==null&&a==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;a!=null&&([u,c]=await this.loadWeights(a));let p={modelTopology:n,weightSpecs:u,weightData:c,generatedBy:r,convertedBy:s,format:i};o!=null&&(p.signature=o),l!=null&&(p.userDefinedMetadata=l);let d=t.modelInitializer;return d&&(p.modelInitializer=d),p}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=PE(t),r=this.weightPathPrefix||n,s=[];for(let u of e)s.push(...u.weights);let i=[],o=[];for(let u of e)for(let c of u.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(c)):i.push(r+c+a);this.weightUrlConverter&&i.push(...await Promise.all(o));let l=await U0(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,xy(l)]}};Sy.URL_SCHEME_REGEX=/^https?:\/\//;function PE(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),a=e.substring(0,t),r=n>t?e.substring(n):"";return[a+"/",r]}function Ny(e){return e.match(Sy.URL_SCHEME_REGEX)!=null}var G0=(e,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(a=>Ny(a)):n=Ny(e),n)return Ty(e,t)}return null};_t.registerSaveRouter(G0);_t.registerLoadRouter(G0);function Ty(e,t){return new Sy(e,t)}function TE(e,t){return Ty(e,t)}var Cy=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},OE=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function SE(e,t,n,a){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new Cy(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Cy({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Cy({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a}))}function CE(e){return new OE(e)}var H0={};Oe(H0,{confusionMatrix:()=>LE});function zE(e,t,n=!1,a=!1){let r=_(e,"a","matMul"),s=_(t,"b","matMul");[r,s]=Tt(r,s);let i={a:r,b:s},o={transposeA:n,transposeB:a};return P.runKernel(Ms,i,o)}var ze=O({matMul_:zE});function WE(e,t,n=1,a=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let r={indices:_(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:a};return P.runKernel(ri,r,s)}var Wl=O({oneHot_:WE});function BE(e,t){let n=_(e,"x","transpose");if(t==null&&(t=n.shape.map((s,i)=>i).reverse()),$(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(s=>{$(s>=0&&s<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let a={x:n},r={perm:t};return P.runKernel(ki,a,r)}var Ve=O({transpose_:BE});function VE(e,t,n){let a=_(e,"labels","confusionMatrix"),r=_(t,"predictions","confusionMatrix");$(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),$(a.rank===1,()=>`Expected the rank of labels to be 1, but got ${a.rank}`),$(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),$(a.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${a.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),$(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let s=Wl(ue(a,"int32"),n),i=Wl(ue(r,"int32"),n),o=Ve(s),l=ze(o,i);return ue(l,"int32")}var LE=O({confusionMatrix_:VE}),Fi={};Oe(Fi,{fromPixels:()=>HE,fromPixelsAsync:()=>UE,toPixels:()=>GE});function dh(e,t,n){if(Fs(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let a=Ga(e,n);if(a.length!==3&&a.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(a.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Jr(e,t,a,n)}var Bl;function j0(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&e instanceof ImageData)a=!0;else if(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)s=!0;else if(e.getContext!=null)i=!0;else if(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(r){let d=2;if(r&&e.readyState<d)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(rh(ah,P.backendName)!=null){let d={pixels:e},h={numChannels:t};return P.runKernel(ah,d,h)}let[l,u]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height],c;i?c=e.getContext("2d").getImageData(0,0,l,u).data:a||n?c=e.data:(s||r||o)&&(Bl==null&&(Bl=document.createElement("canvas").getContext("2d")),Bl.canvas.width=l,Bl.canvas.height=u,Bl.drawImage(e,0,0,l,u),c=Bl.getImageData(0,0,l,u).data);let p;if(t===4)p=new Int32Array(c);else{let d=l*u;p=new Int32Array(d*t);for(let h=0;h<d;h++)for(let m=0;m<t;++m)p[h*t+m]=c[h*4+m]}return dh(p,[u,l,t],"int32")}function jE(e){return e!=null&&e.data instanceof Uint8Array}function qE(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function XE(e){return e!=null&&e.width!==0&&e.height!==0}function KE(e){return qE()&&!(e instanceof ImageBitmap)&&XE(e)&&!jE(e)}async function UE(e,t=3){let n=null;if(Z().getBool("WRAP_TO_IMAGEBITMAP")&&KE(e)){let a;try{a=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){a=null}a!=null&&a.width===e.width&&a.height===e.height?n=a:n=e}else n=e;return j0(n,t)}async function GE(e,t){let n=_(e,"img","toPixels");if(!(e instanceof Fe)){let u=n;n=ue(u,"int32"),u.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[a,r]=n.shape.slice(0,2),s=n.rank===2?1:n.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let i=await n.data(),o=n.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*a*4);for(let u=0;u<a*r;++u){let c=[0,0,0,255];for(let d=0;d<s;d++){let h=i[u*s+d];if(n.dtype==="float32"){if(h<0||h>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${h}.`)}else if(n.dtype==="int32"&&(h<0||h>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${h}.`);s===1?(c[0]=h*o,c[1]=h*o,c[2]=h*o):c[d]=h*o}let p=u*4;l[p+0]=Math.round(c[0]),l[p+1]=Math.round(c[1]),l[p+2]=Math.round(c[2]),l[p+3]=Math.round(c[3])}if(t!=null){t.width=r,t.height=a;let u=t.getContext("2d"),c=new ImageData(l,r,a);u.putImageData(c,0,0)}return n!==e&&n.dispose(),l}var HE=O({fromPixels_:j0}),Ay={};Oe(Ay,{prepareAndValidate:()=>q0});function q0(e,t){let n=e.shape.length,a=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(a<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${a}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[a-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[a-1]} vs. ${n}`);if(Ot(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,s=r[r.length-1],i=1;for(let p=0;p<r.length-1;++p)i*=r[p];let o=e.shape,l=r.slice();l.pop();let u=1;for(let p=s;p<n;++p)u*=o[p],l.push(o[p]);let c=[...Mo(e.shape).map(p=>p/u),1].slice(0,s);return[l,i,u,c]}var Fy={};Oe(Fy,{calculateShapes:()=>X0,validateInput:()=>Ey,validateUpdateShape:()=>_y});function _y(e,t,n){let a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${a}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(s+` update.rank < ${r}. `);if(e.length<a+(n.rank-r))throw new Error(s+` Output shape length < ${a+(n.rank-r)}`);if(n.rank!==r+e.length-a)throw new Error(s+` update.rank != ${r+e.length-a}`);for(let i=0;i<r;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-r;++i)if(n.shape[i+r]!==e[i+a])throw new Error(s+` updates.shape[${i+r}] (${n.shape[i+r]}) != shape[${i+r}] (${e[i+r]})`)}function Ey(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}_y(n,t,e)}function X0(e,t,n){let a=t.shape.length,r=a>1?t.shape[a-1]:1,s=n.length,i=1;for(let p=r;p<s;++p)i*=n[p];let o=r<1?1:r,l=Ot(t.shape)/o,u=[...Mo(n.slice(0,r)),1],c=Ot(n);return{sliceRank:r,numUpdates:l,sliceSize:i,strides:u,outputSize:c}}var dn={};Oe(dn,{assertParamsValid:()=>YE,computeFlatOffset:()=>QE,computeOutShape:()=>K0,getNormalizedAxes:()=>J0,isSliceContinous:()=>JE,maskToAxes:()=>hh,parseSliceParams:()=>a1,sliceInfo:()=>ZE,startForAxis:()=>t1,startIndicesWithElidedDims:()=>Q0,stopForAxis:()=>n1,stopIndicesWithElidedDims:()=>Z0,stridesForAxis:()=>e1,stridesWithElidedDims:()=>Y0});function YE(e,t,n){let a=e.shape.length;$(a===t.length,()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`),$(a===n.length,()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`);for(let r=0;r<a;++r)$(t[r]+n[r]<=e.shape[r],()=>`Error in slice${a}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function hh(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function K0(e,t,n){let a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function Y0(e,t,n,a){let r=[...e];for(let s=r.length;s<a.length;s++)r.push(1);for(let s=0;s<n;s++)s===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function r1(e,t,n){return n<=e?n:n-(t-1)}function s1(e,t){let n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function J0(e,t,n,a,r,s,i,o,l){let u=e.length,c=new Array(u),p=new Array(u),d=new Array(u);if(t.length&&n>0){let h=t[0],m=n+1;c=Q0(i,h,m,a,e),p=Z0(o,h,m,r,e),d=Y0(s,h,m,e)}else for(let h=0;h<u;h++)c[h]=t1(i,a,s,e,h,l),p[h]=n1(o,r,s,e,h,l),d[h]=e1(s,h,l);return{begin:c,end:p,strides:d}}function Q0(e,t,n,a,r){let s=[...r],i=s1(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{let l=r1(t,n,o),u=a[l];e&1<<l&&(u=0),s[o]=u}return s}function Z0(e,t,n,a,r){let s=[...r],i=s1(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{let l=r1(t,n,o),u=a[l];e&1<<l&&(u=Number.MAX_SAFE_INTEGER),s[o]=u}for(let o=0;o<s.length;o++){let l=r[o];s[o]<0&&(s[o]+=l),s[o]=ec(0,s[o],r[o])}return s}function e1(e,t,n){let a=e[t];return(n&1<<t||a==null)&&(a=1),a}function t1(e,t,n,a,r,s){let i=t[r],o=n[r]||1;(e&1<<r||s&1<<r||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let l=a[r];return i<0&&(i+=l),i=ec(0,i,l-1),i}function n1(e,t,n,a,r,s){let i=t[r],o=n[r]||1;(e&1<<r||s&1<<r||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let l=a[r];return i<0&&(i+=l),o>0?i=ec(0,i,l):i=ec(-1,i,l-1),i}function JE(e,t,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function QE(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function a1(e,t,n){let a,r=e.shape.length;typeof t=="number"?a=[t,...new Array(r-1).fill(0)]:t.length<r?a=t.concat(new Array(r-t.length).fill(0)):a=t.slice(),a.forEach(i=>{$(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return n==null?s=new Array(r).fill(-1):typeof n=="number"?s=[n,...new Array(r-1).fill(-1)]:n.length<r?s=n.concat(new Array(r-n.length).fill(-1)):s=n,s=s.map((i,o)=>i>=0?i:($(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),e.shape[o]-a[o])),[a,s]}function ZE(e,t,n,a,r,s,i,o,l){let u=t.slice(),c=n.slice(),p=a;a==null&&(p=new Array(u.length));let d=hh(i);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(i!==0&&o!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(i!==0&&l!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let h=e.length-u.length,m=hh(o),f=e.slice();m.forEach(w=>{u[w]=0,c[w]=1,f.splice(w,0,1)});let{begin:g,end:y,strides:b}=J0(f,d,h,u,c,p,r,s,i);u=g,c=y,p=b;let x=hh(l);x.forEach(w=>{c[w]=u[w]+1,p[w]=1});let v=K0(u,c,p),k=v.filter((w,S)=>x.indexOf(S)===-1);return{nonStrided:p.every(w=>w===1),$begin:u,$end:c,$strides:p,size:v,newShape:f,outShape:k}}var re={};Oe(re,{Serializable:()=>i1,SerializationMap:()=>_i,registerClass:()=>es});var i1=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},_i=class{constructor(){this.classNameMap={}}static getMap(){return _i.instance==null&&(_i.instance=new _i),_i.instance}static register(e){_i.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function es(e){$(e.className!=null,()=>"Class being registered does not have the static className property defined."),$(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),$(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),_i.register(e)}var o1={};Oe(o1,{TEST_EPSILON_FLOAT16:()=>l1,encodeStrings:()=>u1,expectArrayBuffersEqual:()=>s$,expectArraysClose:()=>e$,expectArraysEqual:()=>n$,expectNumbersClose:()=>a$,expectPromiseToFail:()=>t$,expectValuesInRange:()=>r$,testEpsilon:()=>$y});var i$=.001,l1=.1;function e$(e,t,n){return n==null&&(n=$y()),Dy(e,t,(a,r)=>My(a,r,n))}function $y(){return P.backend.floatPrecision()===32?i$:l1}function Dy(e,t,n){let a=!0;if((un(e)||un(t))&&(a=!1),un(e)&&un(t)&&(a=!0),a){let i=e.constructor.name,o=t.constructor.name;if(i!==o)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${o}`)}if(Array.isArray(e)&&Array.isArray(t)){let i=Ga(e),o=Ga(t);if(!gr(i,o))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${o}]`)}let r=un(e)?e:_s(e),s=un(t)?t:_s(t);if(r.length!==s.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${s.length}.
Actual:   ${r}.
Expected: ${s}.`);for(let i=0;i<s.length;++i){let o=r[i],l=s[i];if(!n(o,l))throw new Error(`Arrays differ: actual[${i}] = ${o}, expected[${i}] = ${l}.
Actual:   ${r}.
Expected: ${s}.`)}}function t$(e,t){e().then(()=>t.fail(),()=>t())}function n$(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Ur(e)||Ur(e[0])||Ur(t)||Ur(t[0])?Dy(e,n,(a,r)=>a==r):Dy(e,t,(a,r)=>My(a,r,0))}function a$(e,t,n){if(n==null&&(n=$y()),!My(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function My(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function r$(e,t,n){for(let a=0;a<e.length;a++)if(e[a]<t||e[a]>n)throw new Error(`Value out of range:${e[a]} low: ${t}, high: ${n}`)}function s$(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function u1(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?u1(n):e[t]=kc(n)}return e}var c1="3.3.0";function o$(){Z().set("PROD",!0)}function l$(){Z().set("DEBUG",!0)}function u$(){Z().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Ry(e){Z().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}R_(Ry);function c$(){P.disposeVariables()}function Ha(){return P}function mh(){return P.memory()}function p$(e){return P.profile(e)}function M(e,t){return P.tidy(e,t)}function Ee(e){cy(e).forEach(t=>t.dispose())}function qt(e){return P.keep(e)}function d$(e){return P.time(e)}function h$(e){return P.setBackend(e)}function m$(){return P.ready()}function f$(){return P.backendName}function g$(e){P.removeBackend(e)}function y$(e){return P.findBackend(e)}function b$(e){return P.findBackendFactory(e)}function fh(e,t,n=1){return P.registerBackend(e,t,n)}function p1(){return P.backend}function x$(e,t){Z().setPlatform(e,t)}function v$(e,t){let n=_(e,"a","add"),a=_(t,"b","add");[n,a]=Tt(n,a);let r={a:n,b:a};return P.runKernel(Hr,r)}var J=O({add_:v$});function w$(e,t){let n=_(e,"a","floorDiv"),a=_(t,"b","floorDiv");[n,a]=Tt(n,a);let r={a:n,b:a};return P.runKernel(Hs,r)}var gh=O({floorDiv_:w$});function k$(e,t){let n=_(e,"a","div"),a=_(t,"b","div");if([n,a]=Tt(n,a),n.dtype==="int32"&&a.dtype==="int32")return gh(n,a);let r={a:n,b:a},s={};return P.runKernel(Vs,r,s)}var xe=O({div_:k$});function I$(e,t){let n=_(e,"a","mul"),a=_(t,"b","mul");[n,a]=Tt(n,a);let r={a:n,b:a};return P.runKernel(ai,r)}var B=O({mul_:I$});function N$(e){let t=_(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return P.runKernel(sc,n)}else{let n={x:t};return P.runKernel(Po,n)}}var zt=O({abs_:N$});function T$(e){let t={x:_(e,"x","acos")};return P.runKernel(Oo,t)}var Py=O({acos_:T$});function S$(e){let t={x:_(e,"x","acosh")};return P.runKernel(Lo,t)}var Oy=O({acosh_:S$});function C$(e){$(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),$(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((r,s)=>_(r,`tensors${s}`,"addN")),n=t[0];t.forEach(r=>{if(r.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!gr(r.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let a=t;return P.runKernel(Es,a)}var d1=O({addN_:C$});function A$(e,t=null,n=!1){let a={x:_(e,"x","all","bool")},r={axis:t,keepDims:n};return P.runKernel(Sd,a,r)}var yh=O({all_:A$});function F$(e,t=null,n=!1){let a={x:_(e,"x","any","bool")},r={axis:t,keepDims:n};return P.runKernel(Cd,a,r)}var _c=O({any_:F$});function _$(e,t=0){let n={x:_(e,"x","argMax")},a={axis:t};return P.runKernel($s,n,a)}var Ec=O({argMax_:_$});function E$(e,t=0){let n={x:_(e,"x","argMin")},a={axis:t};return P.runKernel(nc,n,a)}var Ly=O({argMin_:E$});function $$(e){let t={x:_(e,"x","asin")};return P.runKernel(zo,t)}var zy=O({asin_:$$});function D$(e){let t={x:_(e,"x","asinh")};return P.runKernel(Wo,t)}var Wy=O({asinh_:D$});function M$(e){let t={x:_(e,"x","atan")};return P.runKernel(Bo,t)}var By=O({atan_:M$});function R$(e,t){let n=_(e,"a","atan2"),a=_(t,"b","atan2");[n,a]=Tt(n,a);let r={a:n,b:a};return P.runKernel(Uo,r)}var Vy=O({atan2_:R$});function P$(e){let t={x:_(e,"x","atanh")};return P.runKernel(Vo,t)}var Uy=O({atanh_:P$});function O$(e,t,n,a,r="NHWC",s){let i=e[3],o=[...t,i],l=h1(r);return $c(e,o,n,s,a,null,null,l)}function m1(e,t,n,a,r,s,i="channelsLast"){let[o,l]=bh(t),u;if(i==="channelsLast")u=[o,l,e[3],e[3]];else if(i==="channelsFirst")u=[o,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return $c(e,u,n,a,r,s,!1,i)}function L$(e,t,n,a,r,s,i="NDHWC"){let[o,l,u]=Gy(t),c,p;if(i==="NDHWC")p="channelsLast",c=[o,l,u,e[4],e[4]];else if(i==="NCDHW")p="channelsFirst",c=[o,l,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return f1(e,c,n,a,r,!1,p,s)}function $c(e,t,n,a,r,s,i=!1,o="channelsLast"){let[l,u,c,p]=[-1,-1,-1,-1];if(o==="channelsLast")[l,u,c,p]=e;else if(o==="channelsFirst")[l,p,u,c]=e;else throw new Error(`Unknown dataFormat ${o}`);let[d,h,,m]=t,[f,g]=bh(n),[y,b]=bh(a),x=Vl(d,y),v=Vl(h,b),{padInfo:k,outHeight:w,outWidth:S}=z$(r,u,c,f,g,x,v,s,o),A=i?m*p:m,F;return o==="channelsFirst"?F=[l,A,w,S]:o==="channelsLast"&&(F=[l,w,S,A]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:p,outHeight:w,outWidth:S,outChannels:A,padInfo:k,strideHeight:f,strideWidth:g,filterHeight:d,filterWidth:h,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:F,filterShape:t}}function f1(e,t,n,a,r,s=!1,i="channelsLast",o){let[l,u,c,p,d]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,u,c,p,d]=e;else if(i==="channelsFirst")[l,d,u,c,p]=e;else throw new Error(`Unknown dataFormat ${i}`);let[h,m,f,,g]=t,[y,b,x]=Gy(n),[v,k,w]=Gy(a),S=Vl(h,v),A=Vl(m,k),F=Vl(f,w),{padInfo:D,outDepth:R,outHeight:L,outWidth:W}=W$(r,u,c,p,y,b,x,S,A,F,o),U=s?g*d:g,G;return i==="channelsFirst"?G=[l,U,R,L,W]:i==="channelsLast"&&(G=[l,R,L,W,U]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:p,inChannels:d,outDepth:R,outHeight:L,outWidth:W,outChannels:U,padInfo:D,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:h,filterHeight:m,filterWidth:f,effectiveFilterDepth:S,effectiveFilterHeight:A,effectiveFilterWidth:F,dilationDepth:v,dilationHeight:k,dilationWidth:w,inShape:e,outShape:G,filterShape:t}}function B$(e,t,n,a,r){a==null&&(a=Hy(e,t,n));let s=e[0],i=e[1],o=Ei((s-t+2*a)/n+1,r),l=Ei((i-t+2*a)/n+1,r);return[o,l]}function V$(e,t,n,a,r,s){r==null&&(r=Hy(e,t,a));let i=e[0],o=e[1],l=e[2],u=Ei((i-t+2*r)/a+1,s),c=Ei((o-t+2*r)/a+1,s),p=Ei((l-t+2*r)/a+1,s);return[u,c,p,n]}function Hy(e,t,n,a=1){let r=Vl(t,a);return Math.floor((e[0]*(n-1)-n+r)/2)}function bh(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function Gy(e){return typeof e=="number"?[e,e,e]:e}function Vl(e,t){return t<=1?e:e+(e-1)*(t-1)}function z$(e,t,n,a,r,s,i,o,l){let u,c,p;if(typeof e=="number"){u={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let d=B$([t,n],s,a,e,o);c=d[0],p=d[1]}else if(e==="same"){c=Math.ceil(t/a),p=Math.ceil(n/r);let d=Math.max(0,(c-1)*a+s-t),h=Math.max(0,(p-1)*r+i-n),m=Math.floor(d/2),f=d-m,g=Math.floor(h/2),y=h-g;u={top:m,bottom:f,left:g,right:y,type:"SAME"}}else if(e==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/a),p=Math.ceil((n-i+1)/r);else if(typeof e=="object"){let d=l==="channelsLast"?e[1][0]:e[2][0],h=l==="channelsLast"?e[1][1]:e[2][1],m=l==="channelsLast"?e[2][0]:e[3][0],f=l==="channelsLast"?e[2][1]:e[3][1];u={top:d,bottom:h,left:m,right:f,type:d===0&&h===0&&m===0&&f===0?"VALID":"EXPLICIT"},c=Ei((t-s+d+h)/a+1,o),p=Ei((n-i+m+f)/r+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:u,outHeight:c,outWidth:p}}function W$(e,t,n,a,r,s,i,o,l,u,c){let p,d,h,m;if(typeof e=="number"){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let f=V$([t,n,a,1],o,1,r,e,c);d=f[0],h=f[1],m=f[2]}else if(e==="same"){d=Math.ceil(t/r),h=Math.ceil(n/s),m=Math.ceil(a/i);let f=(d-1)*r+o-t,g=(h-1)*s+l-n,y=(m-1)*i+u-a,b=Math.floor(f/2),x=f-b,v=Math.floor(g/2),k=g-v,w=Math.floor(y/2),S=y-w;p={top:v,bottom:k,left:w,right:S,front:b,back:x,type:"SAME"}}else if(e==="valid")p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/r),h=Math.ceil((n-l+1)/s),m=Math.ceil((a-u+1)/i);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outDepth:d,outHeight:h,outWidth:m}}function Ei(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function ts(e){let[t,n,a]=bh(e);return t===1&&n===1&&a===1}function ja(e,t){return ts(e)||ts(t)}function h1(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function U$(e,t){let n={x:_(e,"x","reshape","string_or_numeric")},a={shape:t};return P.runKernel(vl,n,a)}var H=O({reshape_:U$});function G$(e,t,n,a,r){let s=_(e,"x","avgPool","float32"),i=1;$(ja(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let o=s,l=!1;s.rank===3&&(l=!0,o=H(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),r!=null&&$(Ht(a),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${a}.`);let u={x:o},c={filterSize:t,strides:n,pad:a,dimRoundingMode:r},p=P.runKernel(Ds,u,c);return p=ue(p,s.dtype),l?H(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Zn=O({avgPool_:G$});function H$(e,t,n,a,r,s="NDHWC"){let i=_(e,"x","avgPool3d","float32"),o=i,l=!1;i.rank===4&&(l=!0,o=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),$(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),r!=null&&$(Ht(a),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${a}.`);let u={x:o},c={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},p=P.runKernel(ac,u,c);return p=ue(p,o.dtype),l?H(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var jy=O({avgPool3d_:H$});function j$(e,t=0){$(e.length>=1,()=>"Pass at least one tensor to concat");let n=Ac(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),n.length===1)return Zr(n[0]);let a=n,r={axis:t};return P.runKernel(Go,a,r)}var Je=O({concat_:j$});function q$(e){let t={x:_(e,"x","sigmoid")};return P.runKernel(fi,t)}var da=O({sigmoid_:q$});function X$(e,t,n){let a=_(e,"x","slice","string_or_numeric");if(a.rank===0)throw new Error("Slicing scalar is not possible");let r={x:a},s={begin:t,size:n};return P.runKernel(Nl,r,s)}var Be=O({slice_:X$});function K$(e){let t={x:_(e,"x","tanh")};return P.runKernel(wi,t)}var Ul=O({tanh_:K$});function Y$(e,t,n,a,r,s){let i=_(e,"forgetBias","basicLSTMCell"),o=_(t,"lstmKernel","basicLSTMCell"),l=_(n,"lstmBias","basicLSTMCell"),u=_(a,"data","basicLSTMCell"),c=_(r,"c","basicLSTMCell"),p=_(s,"h","basicLSTMCell"),d=Je([u,p],1),h=ze(d,o),m=J(h,l),f=m.shape[0],g=m.shape[1]/4,y=[f,g],b=Be(m,[0,0],y),x=Be(m,[0,g],y),v=Be(m,[0,g*2],y),k=Be(m,[0,g*3],y),w=J(B(da(b),Ul(x)),B(c,da(J(i,v)))),S=B(Ul(w),da(k));return[w,S]}var J$=O({basicLSTMCell_:Y$});function Q$(e,t,n){let a=_(e,"x","batchToSpaceND"),r=t.reduce((o,l)=>o*l);$(a.rank>=1+t.length,()=>`input rank is ${a.rank} but should be > than blockShape.length ${t.length}`),$(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),$(a.shape[0]%r==0,()=>`input tensor batch is ${a.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);let s={x:a},i={blockShape:t,crops:n};return P.runKernel(rc,s,i)}var Dc=O({batchToSpaceND_:Q$});function Z$(e){let t;return e.rank===0||e.rank===1?t=H(e,[1,1,1,e.size]):e.rank===2?t=H(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function eD(e,t,n,a,r,s){s==null&&(s=.001);let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(n,"variance","batchNorm"),u;r!=null&&(u=_(r,"scale","batchNorm"));let c;a!=null&&(c=_(a,"offset","batchNorm")),$(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),$(c==null||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),$(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let p={x:Z$(i),scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:s},h=P.runKernel(js,p,d);return H(h,i.shape)}var br=O({batchNorm_:eD});function tD(e,t,n,a,r,s){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(n,"variance","batchNorm"),u;r!=null&&(u=_(r,"scale","batchNorm"));let c;return a!=null&&(c=_(a,"offset","batchNorm")),$(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),$(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),$(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&$(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&$(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),br(i,o,l,c,u,s)}var g1=O({batchNorm2d_:tD});function nD(e,t,n,a,r,s){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(n,"variance","batchNorm"),u;r!=null&&(u=_(r,"scale","batchNorm"));let c;return a!=null&&(c=_(a,"offset","batchNorm")),$(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),$(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),$(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&$(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&$(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),br(i,o,l,c,u,s)}var y1=O({batchNorm3d_:nD});function aD(e,t,n,a,r,s){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(n,"variance","batchNorm"),u;r!=null&&(u=_(r,"scale","batchNorm"));let c;return a!=null&&(c=_(a,"offset","batchNorm")),$(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),$(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),$(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&$(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&$(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),br(i,o,l,c,u,s)}var b1=O({batchNorm4d_:aD});function rD(e,t,n){let a=_(e,"x","bincount"),r=_(t,"weights","bincount");$(a.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${a.dtype}`),$(n>=0,()=>`size must be non-negative, but got ${n}.`),$(r.size===a.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${a.shape}, weights shape: ${r.shape}.`);let s={x:a,weights:r},i={size:n};return P.runKernel(_d,s,i)}var x1=O({bincount_:rD});function sD(e,t){let n=_(e,"broadcastTo","x"),a=n.shape;if(t.some(l=>!(l>0)||l%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let l=n.shape.slice();for(;l.length<t.length;)l.unshift(1);n=H(n,l)}let r=n.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(r[l]===t[l])s[l]=1;else if(n.shape[l]!==1)throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${t}].`);if(s.map((l,u)=>l>1?u:-1).filter(l=>l>=0).length===0)return Zr(n);let i={x:n},o={reps:s};return P.runKernel(qr,i,o)}var Mc=O({broadcastTo_:sD});function iD(e){let t={x:_(e,"x","ceil")};return P.runKernel(Ps,t)}var qy=O({ceil_:iD});function oD(e,t,n){let a=_(e,"x","clipByValue");$(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);let r={x:a},s={clipValueMin:t,clipValueMax:n};return P.runKernel(jr,r,s)}var Xt=O({clipByValue_:oD});function lD(e){return Je(e,0)}var v1=O({concat1d_:lD});function uD(e,t){return Je(e,t)}var w1=O({concat2d_:uD});function cD(e,t){return Je(e,t)}var k1=O({concat3d_:cD});function pD(e,t){return Je(e,t)}var I1=O({concat4d_:pD});function dD(e,t,n,a,r="NHWC",s=[1,1],i){let o=_(e,"x","conv2d"),l=_(t,"filter","conv2d"),u=o,c=!1;o.rank===3&&(c=!0,u=H(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),$(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),i!=null&&$(Ht(a),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);let p=r==="NHWC"?u.shape[3]:u.shape[1];$(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),$(ja(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);let d={x:u,filter:l},h={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i},m=P.runKernel(Os,d,h);return c?H(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Et=O({conv2d_:dD});function hD(e,t,n,a,r="NWC",s=1,i){let o=_(e,"x","conv1d"),l=_(t,"filter","conv1d"),u=o,c=!1;o.rank===2&&(c=!0,u=H(o,[1,o.shape[0],o.shape[1]])),$(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),$(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),i!=null&&$(Ht(a),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`),$(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),$(ja(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),$(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let p=H(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=H(u,[u.shape[0],1,u.shape[1],u.shape[2]]),h=Et(d,p,[1,n],a,"NHWC",[1,s],i);return c?H(h,[h.shape[2],h.shape[3]]):H(h,[h.shape[0],h.shape[2],h.shape[3]])}var xh=O({conv1d_:hD});function mD(e,t,n,a,r,s="NHWC",i){$(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,u=!1;t.rank===3&&(u=!0,l=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),$(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),$(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),$(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let c=s==="NHWC"?o[3]:o[1],p=s==="NHWC"?l.shape[3]:l.shape[1];$(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),$(p===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`),i!=null&&$(Ht(r),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);let d={dy:l,filter:n},h={strides:a,pad:r,dataFormat:s,dimRoundingMode:i,inputShape:o},m=P.runKernel(Ls,d,h);return u?H(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Xy=O({conv2DBackpropInput_:mD});function fD(e,t,n,a,r,s){let i=_(e,"x","conv2dTranspose"),o=_(t,"filter","conv2dTranspose");return Xy(n,i,o,a,r,"NHWC",s)}var vh=O({conv2dTranspose_:fD});function gD(e,t,n,a,r="NDHWC",s=[1,1,1]){let i=_(e,"x","conv3d"),o=_(t,"filter","conv3d"),l=i,u=!1;i.rank===4&&(u=!0,l=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),$(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),$(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),$(ja(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),$(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);let c={x:l,filter:o},p={strides:n,pad:a,dataFormat:r,dilations:s},d=P.runKernel(ic,c,p);return u?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var Ky=O({conv3d_:gD});function yD(e,t,n,a,r){$(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;t.rank===4&&(o=!0,i=H(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];$(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),$(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),$(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),$(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),$(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);let c={dy:i,filter:n},p={pad:r,strides:a,inputShape:s},d=P.runKernel(Md,c,p);return o?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var N1=O({conv3DBackpropInput_:yD});function bD(e,t,n,a,r){let s=_(e,"x","conv3dTranspose"),i=_(t,"filter","conv3dTranspose");return N1(n,s,i,a,r)}var xD=O({conv3dTranspose_:bD});function vD(e){let t={x:_(e,"x","cos")};return P.runKernel(zs,t)}var Rc=O({cos_:vD});function wD(e){let t={x:_(e,"x","cosh")};return P.runKernel(Ho,t)}var wh=O({cosh_:wD});function kD(e,t=0,n=!1,a=!1){let r={x:_(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:a};return P.runKernel(Ws,r,s)}var kh=O({cumsum_:kD});function ID(e,t,n,a=!1){let r=_(e,"x","denseBincount"),s=_(t,"weights","denseBincount");$(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),$(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),$(n>=0,()=>`size must be non-negative, but got ${n}.`),$(s.size===r.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${s.shape}.`);let i={x:r,weights:s},o={size:n,binaryOutput:a};return P.runKernel(Rd,i,o)}var T1=O({denseBincount_:ID});function ND(e,t,n="NHWC"){let a=_(e,"x","depthToSpace"),r=n==="NHWC"?a.shape[1]:a.shape[2],s=n==="NHWC"?a.shape[2]:a.shape[3],i=n==="NHWC"?a.shape[3]:a.shape[1];$(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${a.shape}`),$(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${a.shape}`),$(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${a.shape}`);let o={x:a},l={blockSize:t,dataFormat:n};return P.runKernel(qo,o,l)}var Yy=O({depthToSpace_:ND});function TD(e,t,n,a,r="NHWC",s=[1,1],i){let o=_(e,"x","depthwiseConv2d"),l=_(t,"filter","depthwiseConv2d"),u=o,c=!1;o.rank===3&&(c=!0,u=H(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),$(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),$(u.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),i!=null&&$(Ht(a),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);let p={x:u,filter:l},d={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i},h=P.runKernel(Bs,p,d);return c?H(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var ns=O({depthwiseConv2d_:TD});function SD(e){let t={x:_(e,"x","diag")};return P.runKernel(Ld,t)}var CD=O({diag_:SD});function AD(e,t,n,a,r=[1,1],s="NHWC"){let i=_(e,"x","dilation2d"),o=_(t,"filter","dilation2d");$(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),$(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),$(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,u=!1;i.rank===3&&(l=H(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);let c={x:l,filter:o},p={strides:n,pad:a,dilations:r},d=P.runKernel(oc,c,p);return u?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Jy=O({dilation2d_:AD});function FD(e,t){let n=e.length,a=[];for(let r=0;r<n;r++){let s=n-1-r,i=e[s]||1;(t[t.length-1-r]||1)>1&&i===1&&a.unshift(s)}return a}function Wt(e,t){let n=[];for(let a=0;a<t.length;a++){let r=e[e.length-a-1],s=t.length-a-1,i=t[s];(r==null||r===1&&i>1)&&n.unshift(s)}return n}function xt(e,t){let n=[],a=Math.max(e.length,t.length);for(let r=0;r<a;r++){let s=e[e.length-r-1];s==null&&(s=1);let i=t[t.length-r-1];if(i==null&&(i=1),s===1)n.unshift(i);else if(i===1)n.unshift(s);else if(s!==i){let o=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(o)}else n.unshift(s)}return n}function _D(e,t){let n=_(e,"a","equal"),a=_(t,"b","equal");[n,a]=Tt(n,a),xt(n.shape,a.shape);let r={a:n,b:a};return P.runKernel(Yo,r)}var as=O({equal_:_D});function ED(e,t,n){let a=_(t,"a","where"),r=_(n,"b","where"),s=_(e,"condition","where","bool"),i=xt(a.shape,r.shape),o=Mc(a,i),l=Mc(r,i);s.rank===1&&$(s.shape[0]===a.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),s.rank!==1&&ln(s.shape,l.shape,"Error in where: ");let u={condition:s,t:o,e:l};return P.runKernel(kl,u)}var Sn=O({where_:ED});function $D(e){let t={x:_(e,"x","zerosLike")};return P.runKernel(Dl,t)}var Ge=O({zerosLike_:$D});function DD(e,t){let n=_(e,"a","div"),a=_(t,"b","div");[n,a]=Tt(n,a);let r=xe(n,a),s=Ge(r),i=as(a,s);return Sn(i,s,r)}var Qy=O({divNoNan_:DD});function MD(e,t){let n=_(e,"t1","dot"),a=_(t,"t2","dot");$((n.rank===1||n.rank===2)&&(a.rank===1||a.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${a.rank}.`);let r=n.rank===1?n.size:n.shape[1],s=a.rank===1?a.size:a.shape[0];if($(r===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${s}.`),n.rank===1&&a.rank===1){let i=H(n,[1,-1]),o=H(a,[-1,1]),l=ze(i,o);return H(l,[])}else if(n.rank===1&&a.rank===2){let i=H(n,[1,-1]),o=H(a,[a.shape[0],a.shape[1]]),l=ze(i,o);return H(l,[l.size])}else if(n.rank===2&&a.rank===1){let i=H(a,[-1,1]),o=ze(n,i);return H(o,[o.size])}else{let i=H(a,[a.shape[0],a.shape[1]]);return ze(n,i)}}var S1=O({dot_:MD});function RD(e){let t={x:_(e,"x","elu")};return P.runKernel(Xo,t)}var Gl=O({elu_:RD});function PD(e){let t=_(e,"x","erf");$(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=ue(t,"float32"));let n={x:t};return P.runKernel(Ko,n)}var Zy=O({erf_:PD});function OD(e){let t={x:_(e,"x","exp")};return P.runKernel(Us,t)}var hn=O({exp_:OD});function LD(e,t=0){let n=_(e,"x","expandDims","string_or_numeric");$(t<=n.rank,()=>"Axis must be <= rank of the tensor");let a={input:n},r={dim:t};return P.runKernel(Jo,a,r)}var Rn=O({expandDims_:LD});function zD(e){let t={x:_(e,"x","expm1")};return P.runKernel(Qo,t)}var eb=O({expm1_:zD});function WD(e,t){let n=_(e,"x","tile","string_or_numeric");$(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let a={x:n},r={reps:t};return P.runKernel(qr,a,r)}var qa=O({tile_:WD});function BD(e,t,n,a="float32"){t==null&&(t=e);let r=Le([e,t],a),s=e<=t?e:t;for(let o=0;o<s;++o)r.set(1,o,o);let i=H(r.toTensor(),[e,t]);if(n==null)return i;if(n.length===1)return qa(Rn(i,0),[n[0],1,1]);if(n.length===2)return qa(Rn(Rn(i,0),0),[n[0],n[1],1,1]);if(n.length===3)return qa(Rn(Rn(Rn(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var tb=O({eye_:BD});function Cn(e,t,n){let a={shape:e,value:t,dtype:n};return P.runKernel(lc,{},a)}function VD(e){let t={x:_(e,"x","floor")};return P.runKernel(Gs,t)}var Hl=O({floor_:VD});function UD(e,t,n=0,a=0){let r=_(e,"x","gather"),s=_(t,"indices","gather","int32"),i={x:r,indices:s},o={axis:n,batchDims:a};return P.runKernel(el,i,o)}var $i=O({gather_:UD});function GD(e,t){let n=_(e,"a","greater"),a=_(t,"b","greater");[n,a]=Tt(n,a),xt(n.shape,a.shape);let r={a:n,b:a};return P.runKernel(nl,r)}var ha=O({greater_:GD});function HD(e,t){let n=_(e,"a","greaterEqual"),a=_(t,"b","greaterEqual");[n,a]=Tt(n,a),xt(n.shape,a.shape);let r={a:n,b:a};return P.runKernel(qs,r)}var rs=O({greaterEqual_:HD});function jD(e){let t={input:_(e,"input","imag")};return P.runKernel(Gd,t)}var Ih=O({imag_:jD});function qD(e){let t={x:_(e,"x","isFinite")};return P.runKernel(al,t)}var C1=O({isFinite_:qD});function XD(e){let t={x:_(e,"x","isInf")};return P.runKernel(rl,t)}var A1=O({isInf_:XD});function KD(e){let t={x:_(e,"x","isNaN")};return P.runKernel(sl,t)}var F1=O({isNaN_:KD});function YD(e,t=.2){let n={x:_(e,"x","leakyRelu")},a={alpha:t};return P.runKernel(Ks,n,a)}var Pc=O({leakyRelu_:YD});function JD(e,t){let n=_(e,"a","less"),a=_(t,"b","less");[n,a]=Tt(n,a),xt(n.shape,a.shape);let r={a:n,b:a};return P.runKernel(il,r)}var Nh=O({less_:JD});function QD(e,t){let n=_(e,"a","lessEqual"),a=_(t,"b","lessEqual");[n,a]=Tt(n,a),xt(n.shape,a.shape);let r={a:n,b:a};return P.runKernel(ol,r)}var Di=O({lessEqual_:QD});function _1(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let a={start:e,stop:t,num:n};return P.runKernel(Hd,{},a)}function ZD(e,t=5,n=1,a=1,r=.5){let s=_(e,"x","localResponseNormalization");$(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),$(Ht(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;s.rank===3&&(o=!0,i=H(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:n,alpha:a,beta:r},c=P.runKernel(pc,l,u);return o?H(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var nb=O({localResponseNormalization_:ZD});function eM(e){let t={x:_(e,"x","log")};return P.runKernel(Ys,t)}var Pn=O({log_:eM});function tM(e){let t={x:_(e,"x","log1p")};return P.runKernel(ll,t)}var Th=O({log1p_:tM});function nM(e){return $(Gr(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let a=_(t,"x","tf.grad","string_or_numeric"),r=n!=null?_(n,"dy","tf.grad"):null;return P.tidy(()=>{let{value:s,grads:i}=P.gradients(()=>e(a),[a],r);return r!=null&&ln(s.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Sh(i),i[0]})}}function aM(e){return $(Gr(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{$(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let a=Ac(t,"args","tf.grads","string_or_numeric"),r=n!=null?_(n,"dy","tf.grads"):null;return P.tidy(()=>{let{value:s,grads:i}=P.gradients(()=>e(...a),a,r);return r!=null&&ln(s.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Sh(i),i})}}function rM(e){return $(Gr(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{$(t instanceof Fe,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),$(n==null||n instanceof Fe,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:a,value:r}=P.gradients(()=>e(t),[t],n);return Sh(a),{grad:a[0],value:r}}}function sM(e){return $(Gr(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{$(Array.isArray(t)&&t.every(r=>r instanceof Fe),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),$(n==null||n instanceof Fe,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let a=P.gradients(()=>e(...t),t,n);return n!=null&&ln(a.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Sh(a.grads),a}}function E1(e,t){$(Gr(e),()=>"The f passed in variableGrads(f) must be a function"),$(t==null||Array.isArray(t)&&t.every(u=>u instanceof Kr),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let u in P.registeredVariables)t.push(P.registeredVariables[u])}let a=n?t.filter(u=>!u.trainable):null,r=t.length;t=t.filter(u=>u.trainable),$(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let s=!0,{value:i,grads:o}=P.gradients(e,t,null,s);$(o.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),$(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return t.forEach((u,c)=>{o[c]!=null&&(l[u.name]=o[c])}),a!=null&&a.forEach(u=>l[u.name]=null),{value:i,grads:l}}function Xa(e){return P.customGrad(e)}function Sh(e){if(e.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function iM(e){let t={x:_(e,"x","neg")};return P.runKernel(pl,t)}var St=O({neg_:iM});function oM(e){let t={x:_(e,"x","softplus")};return P.runKernel(Cl,t)}var jl=O({softplus_:oM});function lM(e){let t=_(e,"x","logSigmoid");return Xa(n=>({value:St(jl(St(n))),gradFunc:a=>B(a,da(St(n)))}))(t)}var $1=O({logSigmoid_:lM});function uM(e,t=null,n=!1){let a={x:_(e,"x","max")},r={reductionIndices:t,keepDims:n};return P.runKernel(Js,a,r)}var ea=O({max_:uM});function cM(e,t){let n=_(e,"a","sub"),a=_(t,"b","sub");[n,a]=Tt(n,a);let r={a:n,b:a};return P.runKernel(vi,r)}var me=O({sub_:cM});function pM(e,t=null,n=!1){let a=_(e,"x","sum");a.dtype==="bool"&&(a=ue(a,"int32"));let r={x:a},s={axis:t,keepDims:n};return P.runKernel(yi,r,s)}var Se=O({sum_:pM});function dM(e,t=-1){let n=_(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Xa((a,r)=>{let s=!0,i=ea(a,t,!0),o=me(a,i),l=me(ue(o,"float32"),Pn(Se(hn(o),t,s)));return r([l]),{value:l,gradFunc:(u,c)=>{let[p]=c,d=!0,h=hn(p);return me(u,B(Se(u,t,d),h))}}})(n)}var Ch=O({logSoftmax_:dM});function ab(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function D1(e,t,n){let a=e.length+t.length,r=[],s=0,i=0;for(let o=0;o<a;o++)n.indexOf(o)===-1?r.push(e[s++]):r.push(t[i++]);return r}function M1(e,t){let n=[],a=e.length;for(let s=0;s<a;s++)t.indexOf(s)===-1&&n.push(e[s]);let r=t.map(s=>e[s]);return[n,r]}function Mi(e,t){let n=t.map(a=>1);return D1(e,n,t)}function hM(e,t,n){$(ab(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function R1(e,t){if(ab(e,t))return null;let n=[];for(let a=0;a<t;++a)e.indexOf(a)===-1&&n.push(a);return e.forEach(a=>n.push(a)),n}function rb(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function mM(e,t){let n=[];for(let a=t-e;a<t;++a)n.push(a);return n}function fM(e,t=null,n=!1){let a=_(e,"x","logSumExp"),r=ca(t,a.shape),s=ea(a,r,!0),i=me(a,s),o=hn(i),l=Se(o,r),u=Pn(l),c=J(H(s,u.shape),u);if(n){let p=Mi(c.shape,r);return H(c,p)}return c}var sb=O({logSumExp_:fM});function gM(e,t){let n=_(e,"a","logicalAnd","bool"),a=_(t,"b","logicalAnd","bool");xt(n.shape,a.shape);let r={a:n,b:a};return P.runKernel(ul,r)}var ma=O({logicalAnd_:gM});function yM(e){let t={x:_(e,"x","logicalNot","bool")};return P.runKernel(uc,t)}var Oc=O({logicalNot_:yM});function bM(e,t){let n=_(e,"a","logicalOr","bool"),a=_(t,"b","logicalOr","bool");xt(n.shape,a.shape);let r={a:n,b:a};return P.runKernel(cc,r)}var Ah=O({logicalOr_:bM});function xM(e,t){let n=_(e,"a","logicalXor","bool"),a=_(t,"b","logicalXor","bool");return xt(n.shape,a.shape),ma(Ah(e,t),Oc(ma(e,t)))}var P1=O({logicalXor_:xM});function vM(e,t,n,a,r){let s=_(e,"x","maxPool"),i=1,o=s,l=!1;s.rank===3&&(l=!0,o=H(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),$(ja(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),r!=null&&$(Ht(a),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${a}.`);let u={x:o},c={filterSize:t,strides:n,pad:a,dimRoundingMode:r},p=P.runKernel(Zs,u,c);return l?H(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var $t=O({maxPool_:vM});function wM(e,t=[1,1,1],n,a,r,s="NDHWC"){let i=_(e,"x","maxPool3d"),o=i,l=!1;i.rank===4&&(l=!0,o=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),$(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),r!=null&&$(Ht(a),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${a}.`);let u={x:o},c={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},p=P.runKernel(dc,u,c);return l?H(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var ib=O({maxPool3d_:wM});function kM(e,t,n,a,r=!1){let s={x:_(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},o=P.runKernel(Kd,s,i);return{result:o[0],indexes:o[1]}}var O1=O({maxPoolWithArgmax_:kM});function IM(e,t){let n=_(e,"a","maximum"),a=_(t,"b","maximum");[n,a]=Tt(n,a),n.dtype==="bool"&&(n=ue(n,"int32"),a=ue(a,"int32")),xt(n.shape,a.shape);let r={a:n,b:a};return P.runKernel(Qs,r)}var Ka=O({maximum_:IM});function NM(e,t=null,n=!1){let a={x:_(e,"x","mean")},r={axis:t,keepDims:n};return P.runKernel(ei,a,r)}var Ct=O({mean_:NM});function TM(e,t=null,n=!1){let a={x:_(e,"x","min")},r={axis:t,keepDims:n};return P.runKernel(ti,a,r)}var ql=O({min_:TM});function SM(e,t){let n=_(e,"a","minimum"),a=_(t,"b","minimum");[n,a]=Tt(n,a),n.dtype==="bool"&&(n=ue(n,"int32"),a=ue(a,"int32")),xt(n.shape,a.shape);let r={a:n,b:a};return P.runKernel(ni,r)}var Xl=O({minimum_:SM});function CM(e,t,n){$(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let a=_(e,"x","mirrorPad");if(a.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");$(t.length===a.rank,()=>`Padding doesn't match input. Must be ${a.rank}. Got ${t.length}.`);let r=n==="reflect"?1:0;for(let o=0;o<a.rank;o++)$(t[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$(t[o][0]>=0&&t[o][0]<=a.shape[o]-r&&t[o][1]>=0&&t[o][1]<=a.shape[o]-r,()=>`Padding in dimension ${o} cannot be greater than or equal to ${a.shape[o]-r} or less than 0 for input of shape ${a.shape}`);let s={paddings:t,mode:n},i={x:a};return P.runKernel(hc,i,s)}var ob=O({mirrorPad_:CM});function AM(e,t){let n=_(e,"a","mod"),a=_(t,"b","mod");[n,a]=Tt(n,a);let r={a:n,b:a};return P.runKernel(cl,r)}var lb=O({mod_:AM});function FM(e){let t=_(e,"x","square"),n={};return P.runKernel("Square",{x:t},n)}var ut=O({square_:FM});function _M(e,t=null,n=!1){e=_(e,"x","moments");let a=ca(t,e.shape),r=Ct(e,a,n),s=r.shape;n||(s=Mi(r.shape,a));let i=ut(me(ue(e,"float32"),H(r,s))),o=Ct(i,a,n);return{mean:r,variance:o}}var Fh=O({moments_:_M});function EM(e,t,n,a){let r=_(t,"data","multiRNNCell"),s=Ac(n,"c","multiRNNCell"),i=Ac(a,"h","multiRNNCell"),o=r,l=[];for(let p=0;p<e.length;p++){let d=e[p](o,s[p],i[p]);l.push(d[0]),l.push(d[1]),o=d[1]}let u=[],c=[];for(let p=0;p<l.length;p+=2)u.push(l[p]),c.push(l[p+1]);return[u,c]}var $M=O({multiRNNCell_:EM});function DM(e,t,n,a=!1){let r=_(e,"logits","multinomial"),s=r.size,i=r.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:i===1?H(r,[1,-1]):r},l={numSamples:t,seed:n,normalized:a},u=P.runKernel(Yd,o,l);return i===1?H(u,[u.size]):u}var L1=O({multinomial_:DM});function MM(e,t){let n=_(e,"a","notEqual"),a=_(t,"b","notEqual");[n,a]=Tt(n,a),xt(n.shape,a.shape);let r={a:n,b:a};return P.runKernel(dl,r)}var Ri=O({notEqual_:MM});function vt(e,t="float32"){if(t==="complex64"){let a=vt(e,"float32"),r=vt(e,"float32");return Yr(a,r)}let n=Td(Ot(e),t);return P.makeTensor(n,e,t)}function Ya(e,t="float32"){if(t==="complex64"){let a=Ya(e,"float32"),r=vt(e,"float32");return Yr(a,r)}let n=ty(Ot(e),t);return P.makeTensor(n,e,t)}function RM(e){let t={x:_(e,"x","onesLike")};return P.runKernel(gl,t)}var On=O({onesLike_:RM});function PM(e,t){let n=_(e,"v1","outerProduct"),a=_(t,"v2","outerProduct");$(n.rank===1&&a.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${a.rank}.`);let r=H(n,[-1,1]),s=H(a,[1,-1]);return ze(r,s)}var OM=O({outerProduct_:PM});function LM(e,t,n=0){let a=_(e,"x","pad");if(a.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},s={x:a};return P.runKernel(si,s,r)}var ta=O({pad_:LM});function zM(e,t,n=0){return $(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),ta(e,[t],n)}var WM=O({pad1d_:zM});function BM(e,t,n=0){return $(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),ta(e,t,n)}var VM=O({pad2d_:BM});function UM(e,t,n=0){return $(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),ta(e,t,n)}var GM=O({pad3d_:UM});function HM(e,t,n=0){return $(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),ta(e,t,n)}var jM=O({pad4d_:HM});function qM(e,t,n){let a=_(e,"x","spaceToBatchND");$(a.rank>=1+t.length,()=>`input rank ${a.rank} should be > than [blockShape] ${t.length}`),$(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),$(a.shape.reduce((i,o,l)=>l>0&&l<=t.length?i&&(o+n[l-1][0]+n[l-1][1])%t[l-1]==0:i,!0),()=>`input spatial dimensions ${a.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let r={x:a},s={blockShape:t,paddings:n};return P.runKernel(gc,r,s)}var Lc=O({spaceToBatchND_:qM});function YM(e,t,n,a,r,s){r==null&&(r=[1,1]),s==null&&(s=1),a===0&&(a="valid");let i=_(e,"x","maxPool"),o=i,l=!1;i.rank===3&&(l=!0,o=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),$(ja(s,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${r}'`);let u=m1(o.shape,t,s,r,a),c=[u.dilationHeight,u.dilationWidth],p;a==="same"?p=KM([u.filterHeight,u.filterWidth],c):p=[[0,0],[0,0]];let d=c[0]===1&&c[1]===1,[h,m]=XM([u.inHeight,u.inWidth],c,p),f=d?a:"valid",g=d?o:Lc(o,c,h),y=(n==="avg"?()=>Zn(g,t,s,f):()=>$t(g,t,s,f))(),b=d?y:Dc(y,c,m);return l?H(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function XM(e,t,n){let a=n.map(c=>c[0]),r=n.map(c=>c[1]),s=e.concat(a,r),i=t.map((c,p)=>(c-s[p]%c)%c),o=r.map((c,p)=>c+i[p]),l=t.map((c,p)=>[a[p],o[p]]),u=t.map((c,p)=>[0,i[p]]);return[l,u]}function KM(e,t){let n=e.map((s,i)=>s+(s-1)*(t[i]-1)).map(s=>s-1),a=n.map(s=>Math.floor(s/2)),r=n.map((s,i)=>s-a[i]);return n.map((s,i)=>[a[i],r[i]])}var z1=O({pool_:YM});function JM(e,t){let n=_(e,"base","pow"),a=_(t,"exp","pow");[n,a]=Tt(n,a);let r={a:n,b:a};return P.runKernel(ii,r)}var xr=O({pow_:JM});function QM(e,t){let n=_(e,"x","prelu"),a=_(t,"alpha","prelu"),r={x:n,alpha:a};return P.runKernel(oi,r)}var zc=O({prelu_:QM});function ZM(e,t=null,n=!1){let a=_(e,"x","prod");a.dtype==="bool"&&(a=ue(a,"int32"));let r={x:a},s={axis:t,keepDims:n};return P.runKernel(bl,r,s)}var _h=O({prod_:ZM});function eR(e,t,n){let a=Ot(e),r=null;if(n==null||n==="float32")r=new Float32Array(a);else if(n==="int32")r=new Int32Array(a);else if(n==="bool")r=new Uint8Array(a);else throw new Error(`Unknown data type ${n}`);for(let s=0;s<a;s++)r[s]=t();return P.makeTensor(r,e,n)}var tR=O({rand_:eR}),ub=Do(FF()),cb=class{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let s=r||Math.random();this.random=ub.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let a=this.nextVal;return this.nextVal=NaN,a}let e,t,n=!1;for(;!n;){let a,r,s;do a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r;while(s>=1||s===0);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*a*i,t=this.mean+this.stdDev*r*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},nR=class{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;let r=a||Math.random();this.randu=ub.alea(r.toString()),this.randn=new cb(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,s;for(;;){do a=this.randn.nextValue(),s=1+this.c*a;while(s<=0);if(s*=s*s,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),r=this.randu(),r<t||Math.log(r)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},aR=class{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,a==null&&(a=Math.random()),typeof a=="number"&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=ub.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function rR(e,t,n=1,a="float32",r){if(n==null&&(n=1),a==null&&(a="float32"),a!=="float32"&&a!=="int32")throw new Error(`Unsupported data type ${a}`);let s=new nR(t,n,a,r),i=Le(e,a);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var sR=O({randomGamma_:rR});function iR(e,t=0,n=1,a,r){if(a!=null&&a==="bool")throw new Error(`Unsupported data type ${a}`);let s=new cb(t,n,a,!1,r),i=Le(e,a);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var W1=O({randomNormal_:iR});function oR(e,t=0,n=1,a="float32",r){let s=Le(e,a),i=new aR(t,n,null,r);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}var Kl=O({randomUniform_:oR});function Eh(e,t,n=1,a="float32"){if(n===0)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:a};return P.runKernel(mc,{},r)}function lR(e){let t={input:_(e,"input","real")};return P.runKernel(Jd,t)}var Wc=O({real_:lR});function uR(e){let t={x:_(e,"x","reciprocal")};return P.runKernel(xl,t)}var pb=O({reciprocal_:uR});function cR(e){let t={x:_(e,"x","relu")};return P.runKernel(li,t)}var qe=O({relu_:cR});function pR(e){let t={x:_(e,"x","relu6")};return P.runKernel(ci,t)}var $h=O({relu6_:pR});function dR(e,t){let n={x:_(e,"x","reverse")},a={dims:t};return P.runKernel(pi,n,a)}var Ln=O({reverse_:dR});function hR(e){let t=_(e,"x","reverse");return $(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Ln(t,0)}var mR=O({reverse1d_:hR});function fR(e,t){let n=_(e,"x","reverse");return $(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Ln(n,t)}var gR=O({reverse2d_:fR});function yR(e,t){let n=_(e,"x","reverse");return $(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Ln(n,t)}var bR=O({reverse3d_:yR});function xR(e,t){let n=_(e,"x","reverse");return $(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Ln(n,t)}var vR=O({reverse4d_:xR});function wR(e){let t={x:_(e,"x","round")};return P.runKernel(di,t)}var db=O({round_:wR});function kR(e){let t={x:_(e,"x","rsqrt")};return P.runKernel(hi,t)}var Dh=O({rsqrt_:kR});function ce(e,t){if((un(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&un(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Jr(e,[],[],t)}function IR(e){let t={x:_(e,"x","selu")};return P.runKernel(Il,t)}var Mh=O({selu_:IR});function NR(e,t,n,a,r,s=[1,1],i="NHWC"){let o=_(e,"x","separableConv2d"),l=_(t,"depthwiseFilter","separableConv2d"),u=_(n,"pointwiseFilter","separableConv2d"),c=o,p=!1;if(o.rank===3&&(p=!0,c=H(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");$(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),$(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),$(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),$(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),$(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let d=l.shape[2],h=l.shape[3];$(u.shape[2]===d*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*h}, but got ${u.shape[2]}.`);let m=ns(c,l,a,r,i,s),f=Et(m,u,1,"valid",i);return p?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Pi=O({separableConv2d_:NR});async function TR(e,t){let n=_(e,"x","setdiff1d"),a=_(t,"y","setdiff1d");$(n.dtype===a.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${a.dtype}).`),$(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),$(a.rank===1,()=>`y should be 1D tensor, but got y (${a.shape}).`);let r=await n.data(),s=await a.data(),i=new Set(s),o=0;for(let c=0;c<r.length;c++)i.has(r[c])||o++;let l=new Lt([o],n.dtype),u=new Lt([o],"int32");for(let c=0,p=0;c<r.length;c++)i.has(r[c])||(l.values[p]=r[c],u.values[p]=c,p++);return[l.toTensor(),u.toTensor()]}var B1=TR;function SR(e){let t={x:_(e,"x","sign")};return P.runKernel(Sl,t)}var hb=O({sign_:SR});function CR(e){let t={x:_(e,"x","sin")};return P.runKernel(mi,t)}var Rh=O({sin_:CR});function AR(e){let t={x:_(e,"x","sinh")};return P.runKernel(Tl,t)}var Ph=O({sinh_:AR});function FR(e,t,n){let a=_(e,"x","slice1d");return $(a.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${a.rank} tensor`),Be(a,[t],[n])}var Oh=O({slice1d_:FR});function _R(e,t,n){let a=_(e,"x","slice2d");return $(a.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${a.rank} tensor`),Be(a,t,n)}var mb=O({slice2d_:_R});function ER(e,t,n){let a=_(e,"x","slice3d");return $(a.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${a.rank} tensor`),Be(a,t,n)}var Yl=O({slice3d_:ER});function $R(e,t,n){let a=_(e,"x","slice4d");return $(a.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${a.rank} tensor`),Be(a,t,n)}var Bc=O({slice4d_:$R});function DR(e,t=-1){let n=_(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let a={logits:n},r={dim:t};return P.runKernel(bi,a,r)}var Sa=O({softmax_:DR});function MR(e){$(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return P.runKernel(Vd,t)}var Vc=O({fft_:MR});function RR(e){$(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return P.runKernel(Ud,t)}var Jl=O({ifft_:RR});function PR(e){let t=e.shape[e.shape.length-1],n=e.size/t,a;if(t<=2){let r=H(e,[n,t]);a=Jl(r)}else{let r=[n,2*(t-1)],s=H(Wc(e),[n,t]),i=H(Ih(e),[n,t]),o=Ln(Be(s,[0,1],[n,t-2]),1),l=B(Ln(Be(i,[0,1],[n,t-2]),1),ce(-1)),u=Je([s,o],1),c=Je([i,l],1),p=H(Yr(u,c),[r[0],r[1]]);a=Jl(p)}if(a=Wc(a),e.rank===3&&e.shape[0]!==0){let r=a,s=e.shape[0];a=H(a,[s,a.shape[0]/s,a.shape[1]]),r.dispose()}return a}var Lh=O({irfft_:PR});function OR(e,t,n=0){let a={x:_(e,"x","split")},r={numOrSizeSplits:t,axis:n};return P.runKernel(Al,a,r)}var zn=O({split_:OR});function LR(e,t){$(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],a=e.size/n,r;if(t!=null&&t<n){let m=e.shape.map(g=>0),f=e.shape.map(g=>g);f[e.shape.length-1]=t,r=Be(e,m,f),n=t}else if(t!=null&&t>n){let m=e.shape.map(f=>f);m[e.shape.length-1]=t-n,r=Je([e,vt(m)],e.shape.length-1),n=t}else r=e;let s=Ge(r),i=H(Yr(r,s),[a,n]),o=Vc(i),l=Math.floor(n/2)+1,u=Wc(o),c=Ih(o),p=zn(u,[l,n-l],u.shape.length-1),d=zn(c,[l,n-l],c.shape.length-1),h=r.shape.slice();return h[r.shape.length-1]=l,H(Yr(p[0],d[0]),h)}var Uc=O({rfft_:LR});function zR(e){let t={x:_(e,"x","sqrt")};return P.runKernel(gi,t)}var rn=O({sqrt_:zR});function WR(e,t){let n=_(e,"a","squaredDifference"),a=_(t,"b","squaredDifference");[n,a]=Tt(n,a),xt(n.shape,a.shape);let r={a:n,b:a},s={};return P.runKernel(xi,r,s)}var zh=O({squaredDifference_:WR});function BR(e,t){let n=_(e,"x","squeeze");return H(n,s0(n.shape,t).newShape)}var ss=O({squeeze_:BR});function VR(e,t=0){let n=Ac(e,"tensors","stack","string_or_numeric");$(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&$(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let a=n,r={axis:t};return P.runKernel(yl,a,r)}var Dt=O({stack_:VR});function UR(e,t=0){let n={x:_(e,"x","step")},a={alpha:t};return P.runKernel(Xr,n,a)}var Ql=O({step_:UR});function GR(e,t,n,a,r=0,s=0,i=0,o=0,l=0){let u={x:_(e,"x","stridedSlice")},c={begin:t,end:n,strides:a,beginMask:r,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return P.runKernel(Fl,u,c)}var fb=O({stridedSlice_:GR});function HR(e){let t={x:_(e,"x","tan")};return P.runKernel(_l,t)}var gb=O({tan_:HR});function Ze(e,t){Fs(e);let n=Ga(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Jr(e,null,n,t)}function Ca(e,t,n){if(Fs(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let a=Ga(e,n);if(a.length!==2&&a.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(a.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Jr(e,t,a,n)}function Aa(e,t,n){if(Fs(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let a=Ga(e,n);if(a.length!==4&&a.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(a.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Jr(e,t,a,n)}function jR(e,t,n){if(Fs(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let a=Ga(e,n);if(a.length!==5&&a.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(a.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Jr(e,t,a,n)}function qR(e,t,n){if(Fs(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let a=Ga(e,n);if(a.length!==6&&a.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(a.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||a,Jr(e,t,a,n)}function XR(e,t=1,n=!0){let a=_(e,"x","topk");if(a.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let r=a.shape[a.shape.length-1];if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let s={x:a},i={k:t,sorted:n},[o,l]=P.runKernel(El,s,i);return{values:o,indices:l}}var yb=O({topk_:XR});function KR(e,t=0,n=1,a,r){if(a!=null&&a==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new cb(t,n,a,!0,r),i=Le(e,a);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var Wh=O({truncatedNormal_:KR});function YR(e,t=0){let n=_(e,"x","unique","string_or_numeric");$(n.rank>0,()=>"The input tensor must be at least 1D");let a={x:n},r={axis:t},[s,i]=P.runKernel(nh,a,r);return{values:s,indices:i}}var Bh=O({unique_:YR});function JR(e,t,n){let a=_(e,"x","unsortedSegmentSum"),r=_(t,"segmentIds","unsortedSegmentSum","int32");$(Ht(n),()=>"numSegments must be of dtype int");let s={x:a,segmentIds:r},i={numSegments:n};return P.runKernel(bc,s,i)}var bb=O({unsortedSegmentSum_:JR});function QR(e,t=0){let n=_(e,"x","unstack","string_or_numeric");$(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let a={value:n},r={axis:t};return P.runKernel($l,a,r)}var ct=O({unstack_:QR});function V1(e,t=!0,n,a){return P.makeVariable(e,t,n,a)}function U1(e,t){let n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);let a=Le(e,"int32"),r=Le([n.length,e.length],"int32");for(let s=0;s<n.length;s++){let i=a.indexToLoc(n[s]),o=s*e.length;r.values.set(i,o)}return r.toTensor()}async function ZR(e){let t=_(e,"condition","whereAsync","bool"),n=await t.data(),a=U1(t.shape,n);return e!==t&&t.dispose(),a}var xb=ZR;async function eP(e,t,n){let a=_(e,"tensor","boolMask"),r=_(t,"mask","boolMask","bool"),s=n==null?0:n,i=r.rank,o=a.shape;$(i>0,()=>"mask cannot be scalar"),ln(o.slice(s,s+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let f=s;f<s+i;f++)l*=o[f];let u=o.slice(0,s).concat([l],o.slice(s+i)),c=H(a,u),p=H(r,[-1]),d=await xb(p),h=ss(d,[1]),m=$i(c,h,s);return e!==a&&a.dispose(),t!==r&&r.dispose(),h.dispose(),c.dispose(),p.dispose(),d.dispose(),m}var tP=eP;function nP(e,t="euclidean",n=null,a=!1){e=_(e,"x","norm");let r=G1(e,t,n),s=r.shape;if(a){let i=ca(n,e.shape);s=Mi(r.shape,i)}return H(r,s)}function G1(e,t,n=null){if(e.rank===0)return zt(e);if(e.rank!==1&&n===null)return G1(H(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return Se(zt(e),n);if(t===Infinity)return ea(zt(e),n);if(t===-Infinity)return ql(zt(e),n);if(t==="euclidean"||t===2)return rn(Se(xr(zt(e),ce(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return ea(Se(zt(e),n[0]),n[1]-1);if(t===Infinity)return ea(Se(zt(e),n[1]),n[0]);if(t===-Infinity)return ql(Se(zt(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return rn(Se(ut(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var Vh=O({norm_:nP});function aP(e,t,n,a,r=!0){let s=_(e,"v","movingAverage"),i=_(t,"x","movingAverage"),o=_(n,"decay","movingAverage");k0(s,i),$(gr(s.shape,i.shape),()=>"Shape mismatch in v and x");let l=ce(1),u=me(l,o),c=B(me(i,s),u);if(r){$(a!=null,()=>"When using zeroDebias: true, step is required.");let p=_(a,"step","movingAverage");c=xe(c,me(l,xr(o,p)))}return J(s,c)}var rP=O({movingAverage_:aP});function sP(e,t,n){let a=_(e,"indices","scatterND","int32"),r=_(t,"updates","scatterND");Ey(r,a,n);let s={indices:a,updates:r},i={shape:n};return P.runKernel(wl,s,i)}var H1=O({scatterND_:sP});function iP(e,t,n,a){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function oP(e,t,n,a=0){let r=_(e,"sparseIndices","sparseToDense","int32"),s=_(t,"sparseValues","sparseToDense"),i=_(a,"defaultValue","sparseToDense",s.dtype);iP(r,s,n,i);let o={sparseIndices:r,sparseValues:s,defaultValue:i},l={outputShape:n};return P.runKernel(eh,o,l)}var vb=O({sparseToDense_:oP});function lP(e,t){let n=_(t,"indices","gatherND","int32"),a={params:_(e,"x","gatherND"),indices:n};return P.runKernel(tl,a)}var j1=O({gatherND_:lP});function uP(e,t){if(t==null)return e.shape.slice();if(gr(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let a=0;a<e.shape.length;a++)t[a]==null&&e.shape[a]!=null?n.push(e.shape[a]):n.push(t[a]);return n}return t}function cP(e,t,n,a){let r=_(e,"x","dropout");if($(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),$(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof Fe?r.clone():r;let s=uP(r,n),i=1-t,o=xe(Hl(J(Kl(s,0,1,"float32",a),i)),i);return B(r,o)}var q1=O({dropout_:cP});function X1(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function wb(e,t,n){let a=1-e%2,r=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+a-1);r[s]=t-n*Math.cos(i)}return Ze(r,"float32")}async function pP(e,t,n=1){let a=_(e,"predictions","inTopK"),r=_(t,"targets","inTopK");$(a.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${a.rank}`),$(a.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${a.rank} and targets rank ${r.rank}`),ln(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=a.shape[a.shape.length-1];$(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);let i=await a.data(),o=await r.data(),[l,u]=[i.length/s,s],c=i0("bool",l);for(let p=0;p<l;p++){let d=p*u,h=i.subarray(d,d+u),m=[];for(let f=0;f<h.length;f++)m.push({value:h[f],index:f});m.sort((f,g)=>g.value-f.value),c[p]=0;for(let f=0;f<n;f++)if(m[f].index===o[p]){c[p]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),Jn(c,r.shape,"bool")}var dP=pP,is={};Oe(is,{conv2d:()=>hP,depthwiseConv2d:()=>mP,matMul:()=>fP});function gP(e,t,n,a,r,s="NHWC",i){let o=e;e.rank===3&&(o=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=H(t,[1,t.shape[0],t.shape[1],t.shape[2]])),$(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),$(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),$(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let u=s==="NHWC"?o.shape[3]:o.shape[1],c=s==="NHWC"?l.shape[3]:l.shape[1];$(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),$(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),i!=null&&$(Ht(r),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);let p={x:o,dy:l},d={strides:a,pad:r,dataFormat:s,dimRoundingMode:i,filterShape:n};return P.runKernel($d,p,d)}var kb=O({conv2DBackpropFilter_:gP});function Uh(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return B(e,Ql(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Gh(e,t){let n=t,a=Wt(e.shape,t.shape);return a.length>0&&(n=Se(n,a)),H(n,e.shape)}function Hh(e,t,n,a){if(t==="linear")return e;if(t==="relu")return qe(e);if(t==="elu")return Gl(e);if(t==="relu6")return $h(e);if(t==="prelu")return zc(e,n);if(t==="leakyrelu")return Pc(e,a);throw new Error(`Unknown fused activation ${t}.`)}var jh=(e,t)=>!(e>0)||t==="linear";function yP({x:e,filter:t,strides:n,pad:a,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",jh(P.state.gradientDepth,l)===!1){let k=Et(e,t,n,a,r,s,i);return o!=null&&(k=J(k,o)),Hh(k,l,u,c)}let p=_(e,"x","conv2d"),d=_(t,"filter","conv2d"),h=p,m=!1;p.rank===3&&(m=!0,h=H(p,[1,p.shape[0],p.shape[1],p.shape[2]])),$(h.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),$(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),i!=null&&$(Ht(a),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`),$(h.shape[3]===d.shape[2],()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${d.shape[2]}.`),$(ja(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),$(r==="NHWC",()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`);let f=$c(h.shape,d.shape,n,s,a,i),g;o!=null&&(g=_(o,"bias","fused conv2d"),[g]=Tt(g,p),xt(f.outShape,g.shape));let y;u!=null&&(y=_(u,"prelu weights","fused conv2d"));let b=(k,w)=>{let[S,A,F,D]=w,R=Uh(k,F,l);$(ts(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let L=Xy(A.shape,R,S,n,a),W=kb(A,R,S.shape,n,a),U=[L,W];if(D!=null){let G=Gh(D,R);U.push(G)}return U},x={x:h,filter:d,bias:g,preluActivationWeights:y},v={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return o==null?Xa((k,w,S)=>{let A=P.runKernel(Ni,x,v);return S([w,k,A]),m&&(A=H(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:b}})(h,d):Xa((k,w,S,A)=>{let F=P.runKernel(Ni,x,v);return A([w,k,F,S]),m&&(F=H(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:b}})(h,d,g)}var hP=O({fusedConv2d_:yP});function bP(e,t,n,a,r,s=[1,1],i){let o=e;e.rank===3&&(o=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},c={strides:a,pad:r,dimRoundingMode:i,dilations:s,filterShape:n};return P.runKernel(Pd,u,c)}var K1=O({depthwiseConv2dNativeBackpropFilter_:bP});function xP(e,t,n,a,r,s=[1,1],i){let o=t,l=!1;t.rank===3&&(l=!0,o=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},c={strides:a,pad:r,dimRoundingMode:i,dilations:s,inputShape:e},p=P.runKernel(Od,u,c);return l?H(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Y1=O({depthwiseConv2dNativeBackpropInput_:xP});function vP({x:e,filter:t,strides:n,pad:a,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(jh(P.state.gradientDepth,l)===!1){let k=ns(e,t,n,a,r,s,i);return o!=null&&(k=J(k,o)),Hh(k,l,u,c)}let p=_(e,"x","depthwiseConv2d"),d=_(t,"filter","depthwiseConv2d"),h=p,m=!1;p.rank===3&&(m=!0,h=H(p,[1,p.shape[0],p.shape[1],p.shape[2]])),$(h.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),$(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),$(h.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),s==null&&(s=[1,1]),$(ja(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),i!=null&&$(Ht(a),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${a}.`);let f=$c(h.shape,d.shape,n,s,a,i,!0),g;o!=null&&(g=_(o,"bias","fused conv2d"),[g]=Tt(g,p),xt(f.outShape,g.shape));let y;u!=null&&(y=_(u,"prelu weights","fused depthwiseConv2d"));let b=(k,w)=>{$(ts(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[S,A,F,D]=w,R=Uh(k,F,l),L=Y1(A.shape,R,S,n,a,s,i),W=K1(A,R,S.shape,n,a,s,i);if(D!=null){let U=Gh(g,R);return[L,W,U]}return[L,W]},x={x:h,filter:d,bias:g,preluActivationWeights:y},v={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return o==null?Xa((k,w,S)=>{let A=P.runKernel(Ti,x,v);return S([w,k,A]),m&&(A=H(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:b}})(h,d):Xa((k,w,S,A)=>{let F=P.runKernel(Ti,x,v);return A([w,k,F,S]),m&&(F=H(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:b}})(h,d,g)}var mP=O({fusedDepthwiseConv2d_:vP});function wP({a:e,b:t,transposeA:n=!1,transposeB:a=!1,bias:r,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(jh(P.state.gradientDepth,s)===!1){let D=ze(e,t,n,a);return r!=null&&(D=J(D,r)),Hh(D,s,i,o)}let l=_(e,"a","fused matMul"),u=_(t,"b","fused matMul");[l,u]=Tt(l,u);let c=n?l.shape[l.rank-2]:l.shape[l.rank-1],p=a?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],h=a?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),f=u.shape.slice(0,-2),g=Ot(m),y=Ot(f);$(l.rank>=2&&u.rank>=2&&l.rank===u.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`),$(gr(m,f),()=>`Error in fused matMul: outer dimensions (${m}) and (${f}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`),$(c===p,()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${a} must match.`);let b=l.shape.slice(0,-2).concat([d,h]),x=n?H(l,[g,c,d]):H(l,[g,d,c]),v=a?H(u,[y,h,p]):H(u,[y,p,h]),k;r!=null&&(k=_(r,"bias","fused matMul"),[k]=Tt(k,l),xt(b,k.shape));let w;i!=null&&(w=_(i,"prelu weights","fused matMul"));let S=(D,R)=>{let[L,W,U,G]=R,X=Uh(H(D,U.shape),U,s),j,te;if(!n&&!a?(j=ze(X,W,!1,!0),te=ze(L,X,!0,!1)):!n&&a?(j=ze(X,W,!1,!1),te=ze(X,L,!0,!1)):n&&!a?(j=ze(W,X,!1,!0),te=ze(L,X,!1,!1)):(j=ze(W,X,!0,!0),te=ze(X,L,!0,!0)),r!=null){let Q=Gh(G,X);return[j,te,Q]}else return[j,te]},A={a:x,b:v,bias:k,preluActivationWeights:w},F={transposeA:n,transposeB:a,activation:s,leakyreluAlpha:o};return r==null?Xa((D,R,L)=>{let W=P.runKernel(Ii,A,F);return L([D,R,W]),{value:H(W,b),gradFunc:S}})(x,v):Xa((D,R,L,W)=>{let U=P.runKernel(Ii,A,F);return W([D,R,U,L]),{value:H(U,b),gradFunc:S}})(x,v,k)}var fP=O({fusedMatMul_:wP});function kP(e){return wb(e,.54,.46)}var IP=O({hammingWindow_:kP});function NP(e){return wb(e,.5,.5)}var J1=O({hannWindow_:NP});function TP(e,t,n,a=!1,r=0){let s=0,i=[];for(;s+t<=e.size;)i.push(Be(e,s,t)),s+=n;if(a)for(;s<e.size;){let o=s+t-e.size,l=Je([Be(e,s,t-o),Cn([o],r)]);i.push(l),s+=n}return i.length===0?Ca([],[0,t]):H(Je(i),[i.length,t])}var Q1=O({frame_:TP});function SP(e,t,n,a,r=J1){a==null&&(a=X1(t));let s=Q1(e,t,n),i=B(s,r(t)),o=[];for(let l=0;l<s.shape[0];l++)o.push(Uc(Be(i,[l,0],[1,t]),a));return Je(o)}var CP=O({stft_:SP});function AP(e,t,n,a,r="bilinear",s=0){let i=_(e,"image","cropAndResize"),o=_(t,"boxes","cropAndResize","float32"),l=_(n,"boxInd","cropAndResize","int32"),u=o.shape[0];$(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),$(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),$(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),$(a.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${a.length}.`),$(a[0]>=1&&a[1]>=1,()=>`cropSize must be atleast [1,1], but was ${a}`),$(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);let c={image:i,boxes:o,boxInd:l},p={method:r,extrapolationValue:s,cropSize:a};return P.runKernel(jo,c,p)}var FP=O({cropAndResize_:AP});function _P(e){let t=_(e,"image","flipLeftRight","float32");$(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return P.runKernel(Zo,n,{})}var EP=O({flipLeftRight_:_P});function $P(e,t,n=0,a=.5){let r=_(e,"image","rotateWithOffset","float32");$(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);let s={image:r},i={radians:t,fillValue:n,center:a};return P.runKernel(Ml,s,i)}var DP=O({rotateWithOffset_:$P});function Zl(e,t,n,a,r,s){a==null&&(a=.5),r==null&&(r=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=e.shape[0];return n=Math.min(n,i),$(0<=a&&a<=1,()=>`iouThreshold must be in [0, 1], but was '${a}'`),$(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),$(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),$(t.rank===1,()=>"scores must be a 1D tensor"),$(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),$(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}function MP(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY){let s=_(e,"boxes","nonMaxSuppression"),i=_(t,"scores","nonMaxSuppression"),o=Zl(s,i,n,a,r);n=o.maxOutputSize,a=o.iouThreshold,r=o.scoreThreshold;let l={maxOutputSize:n,iouThreshold:a,scoreThreshold:r};return P.runKernel(hl,{boxes:s,scores:i},l)}var RP=O({nonMaxSuppression_:MP});function OP(e,t,n){let a=PP(e,t,n),r=a<0?-(a+1):a;e.splice(r,0,t)}function PP(e,t,n){return zP(e,t,n||LP)}function LP(e,t){return e>t?1:e<t?-1:0}function zP(e,t,n){let a=0,r=e.length,s=0,i=!1;for(;a<r;){s=a+(r-a>>>1);let o=n(t,e[s]);o>0?a=s+1:(r=s,i=!o)}return i?a:-a-1}function Z1(e,t,n,a,r){return Ib(e,t,n,a,r,0)}function ek(e,t,n,a,r,s){return Ib(e,t,n,a,r,0,!1,s,!0)}function tk(e,t,n,a,r,s){return Ib(e,t,n,a,r,s,!0)}function Ib(e,t,n,a,r,s,i=!1,o=!1,l=!1){let u=[];for(let g=0;g<t.length;g++)t[g]>r&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(nk);let c=s>0?-.5/s:0,p=[],d=[];for(;p.length<n&&u.length>0;){let g=u.pop(),{score:y,boxIndex:b,suppressBeginIndex:x}=g;if(y<r)break;let v=!1;for(let k=p.length-1;k>=x;--k){let w=WP(e,b,p[k]);if(w>=a){v=!0;break}if(g.score=g.score*BP(a,c,w),g.score<=r)break}g.suppressBeginIndex=p.length,v||(g.score===y?(p.push(b),d.push(g.score)):g.score>r&&OP(u,g,nk))}let h=p.length,m=n-h;o&&m>0&&(p.push(...new Array(m).fill(0)),d.push(...new Array(m).fill(0)));let f={selectedIndices:p};return i&&(f.selectedScores=d),l&&(f.validOutputs=h),f}function WP(e,t,n){let a=e.subarray(t*4,t*4+4),r=e.subarray(n*4,n*4+4),s=Math.min(a[0],a[2]),i=Math.min(a[1],a[3]),o=Math.max(a[0],a[2]),l=Math.max(a[1],a[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),p=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),h=(o-s)*(l-i),m=(p-u)*(d-c);if(h<=0||m<=0)return 0;let f=Math.max(s,u),g=Math.max(i,c),y=Math.min(o,p),b=Math.min(l,d),x=Math.max(y-f,0)*Math.max(b-g,0);return x/(h+m-x)}function BP(e,t,n){let a=Math.exp(t*n*n);return n<=e?a:0}function nk(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function VP(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY){let s=_(e,"boxes","nonMaxSuppressionAsync"),i=_(t,"scores","nonMaxSuppressionAsync"),o=Zl(s,i,n,a,r);n=o.maxOutputSize,a=o.iouThreshold,r=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:p}=Z1(u,c,n,a,r);return s!==e&&s.dispose(),i!==t&&i.dispose(),Ze(p,"int32")}var UP=VP;function GP(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=0){let i=_(e,"boxes","nonMaxSuppression"),o=_(t,"scores","nonMaxSuppression"),l=Zl(i,o,n,a,r,s);n=l.maxOutputSize,a=l.iouThreshold,r=l.scoreThreshold,s=l.softNmsSigma;let u={boxes:i,scores:o},c={maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s},p=P.runKernel(fl,u,c);return{selectedIndices:p[0],selectedScores:p[1]}}var HP=O({nonMaxSuppressionWithScore_:GP});async function jP(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=0){let i=_(e,"boxes","nonMaxSuppressionAsync"),o=_(t,"scores","nonMaxSuppressionAsync"),l=Zl(i,o,n,a,r,s);n=l.maxOutputSize,a=l.iouThreshold,r=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),c=u[0],p=u[1],{selectedIndices:d,selectedScores:h}=tk(c,p,n,a,r,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Ze(d,"int32"),selectedScores:Ze(h)}}var qP=jP;function XP(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=!1){let i=_(e,"boxes","nonMaxSuppression"),o=_(t,"scores","nonMaxSuppression"),l=Zl(i,o,n,a,r,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,d={boxes:i,scores:o},h={maxOutputSize:u,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:s},m=P.runKernel(ml,d,h);return{selectedIndices:m[0],validOutputs:m[1]}}var KP=O({nonMaxSuppressionPadded_:XP});async function YP(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=!1){let i=_(e,"boxes","nonMaxSuppressionAsync"),o=_(t,"scores","nonMaxSuppressionAsync"),l=Zl(i,o,n,a,r,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,[d,h]=await Promise.all([i.data(),o.data()]),{selectedIndices:m,validOutputs:f}=ek(d,h,u,c,p,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Ze(m,"int32"),validOutputs:ce(f,"int32")}}var JP=YP;function QP(e,t,n=!1,a=!1){let r=_(e,"images","resizeBilinear");$(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),$(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),$(a===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=r,i=!1;r.rank===3&&(i=!0,s=H(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:a,size:t},u=P.runKernel(ui,o,l);return i?H(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var ak=O({resizeBilinear_:QP});function ZP(e,t,n=!1,a=!1){let r=_(e,"images","resizeNearestNeighbor");$(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),$(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),$(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),$(a===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=r,i=!1;r.rank===3&&(i=!0,s=H(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:a,size:t},u=P.runKernel(fc,o,l);return i?H(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var rk=O({resizeNearestNeighbor_:ZP});function eO(e,t,n="nearest",a="constant",r=0,s){let i=_(e,"image","transform","float32"),o=_(t,"transforms","transform","float32");$(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),$(o.rank===2&&(o.shape[0]===i.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),$(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let l={image:i,transforms:o},u={interpolation:n,fillMode:a,fillValue:r,outputShape:s};return P.runKernel(th,l,u)}var tO=O({transform_:eO});function nO(e,t,n){$(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),$(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let a=_(e,"a","bandPart");$(a.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${a.rank}.`);let r=a.shape,[s,i]=a.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);let o=H(Eh(0,s,1,"int32"),[-1,1]),l=Eh(0,i,1,"int32"),u=me(o,l),c=ma(Di(u,ce(+t,"int32")),rs(u,ce(-n,"int32"))),p=vt([s,i],a.dtype);return H(Dt(ct(H(a,[-1,s,i])).map(d=>Sn(c,d,p))),r)}var aO=O({bandPart_:nO});function rO(e){let t;if(Array.isArray(e)){t=!1,$(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let s=1;s<e.length;++s)$(e[s].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[s].shape[0]} vs. ${r})`)}else t=!0,e=zn(e,e.shape[0],0).map(r=>ss(r,[0]));$(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],a=e;for(let r=0;r<e.length;++r)n.push(P.tidy(()=>{let s=a[r];if(r>0)for(let i=0;i<r;++i){let o=B(Se(B(n[i],s)),n[i]);s=me(s,o)}return xe(s,Vh(s,"euclidean"))}));return t?Dt(n,0):n}var sO=O({gramSchmidt_:rO});function iO(e,t=!1){if($(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return sk(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((l,u)=>l*u),a=ct(H(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],s=[];a.forEach(l=>{let[u,c]=sk(l,t);r.push(u),s.push(c)});let i=H(Dt(r,0),e.shape),o=H(Dt(s,0),e.shape);return[i,o]}}function sk(e,t=!1){return P.tidy(()=>{$(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],a=e.shape[1],r=tb(n),s=Zr(e),i=Ca([[1]],[1,1]),o=Zr(i),l=n>=a?a:n;for(let u=0;u<l;++u){let c=s,p=o,d=r;[o,s,r]=P.tidy(()=>{let h=Be(s,[u,u],[n-u,1]),m=Vh(h),f=Be(s,[u,u],[1,1]),g=Sn(ha(f,0),Ca([[-1]]),Ca([[1]])),y=me(f,B(g,m)),b=xe(h,y);b.shape[0]===1?o=Zr(i):o=Je([i,Be(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let x=St(xe(ze(g,y),m)),v=Be(s,[u,0],[n-u,a]),k=B(x,o),w=Ve(o);if(u===0)s=me(v,ze(k,ze(w,v)));else{let F=me(v,ze(k,ze(w,v)));s=Je([Be(s,[0,0],[u,a]),F],0)}let S=Ve(k),A=Be(r,[0,u],[n,r.shape[1]-u]);if(u===0)r=me(A,ze(ze(A,o),S));else{let F=me(A,ze(ze(A,o),S));r=Je([Be(r,[0,0],[n,u]),F],1)}return[o,s,r]}),Ee([c,p,d])}return!t&&n>a&&(r=Be(r,[0,0],[n,a]),s=Be(s,[0,0],[a,a])),[r,s]})}var oO=O({qr_:iO}),mn;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(mn||(mn={}));function lO(e,t,n=mn.SUM_BY_NONZERO_WEIGHTS){let a=_(e,"losses","computeWeightedLoss"),r=null;t!=null&&(r=_(t,"weights","computeWeightedLoss"));let s=r==null?a:B(a,r);if(n===mn.NONE)return s;if(n===mn.SUM)return Se(s);if(n===mn.MEAN){if(r==null)return Ct(s);{let i=a.size/r.size,o=xe(Se(s),Se(r));return i>1?xe(o,ce(i)):o}}if(n===mn.SUM_BY_NONZERO_WEIGHTS){if(r==null)return xe(Se(s),ce(a.size));{let i=B(r,Ya(a.shape)),o=ue(Se(Ri(i,ce(0))),"float32");return xe(Se(s),o)}}throw Error(`Unknown reduction: ${n}`)}var vr=O({computeWeightedLoss_:lO});function uO(e,t,n,a=mn.SUM_BY_NONZERO_WEIGHTS){let r=_(e,"labels","absoluteDifference"),s=_(t,"predictions","absoluteDifference"),i=null;n!=null&&(i=_(n,"weights","absoluteDifference")),ln(r.shape,s.shape,"Error in absoluteDifference: ");let o=zt(me(r,s));return vr(o,i,a)}var cO=O({absoluteDifference_:uO});function pO(e,t,n,a,r=mn.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"labels","cosineDistance"),i=_(t,"predictions","cosineDistance"),o=null;a!=null&&(o=_(a,"weights","cosineDistance")),ln(s.shape,i.shape,"Error in cosineDistance: ");let l=ce(1),u=me(l,Se(B(s,i),n,!0));return vr(u,o,r)}var dO=O({cosineDistance_:pO});function hO(e,t,n,a=mn.SUM_BY_NONZERO_WEIGHTS){let r=_(e,"labels","hingeLoss"),s=_(t,"predictions","hingeLoss"),i=null;n!=null&&(i=_(n,"weights","hingeLoss")),ln(r.shape,s.shape,"Error in hingeLoss: ");let o=ce(1);r=me(B(ce(2),r),o);let l=qe(me(o,B(r,s)));return vr(l,i,a)}var mO=O({hingeLoss_:hO});function fO(e,t,n,a=1,r=mn.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"labels","huberLoss"),i=_(t,"predictions","huberLoss"),o=null;n!=null&&(o=_(n,"weights","huberLoss")),ln(s.shape,i.shape,"Error in huberLoss: ");let l=ce(a),u=zt(me(i,s)),c=Xl(u,l),p=me(u,c),d=J(B(ce(.5),ut(c)),B(l,p));return vr(d,o,r)}var gO=O({huberLoss_:fO});function yO(e,t,n,a=1e-7,r=mn.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"labels","logLoss"),i=_(t,"predictions","logLoss"),o=null;n!=null&&(o=_(n,"weights","logLoss")),ln(s.shape,i.shape,"Error in logLoss: ");let l=ce(1),u=ce(a),c=St(B(s,Pn(J(i,u)))),p=B(me(l,s),Pn(J(me(l,i),u))),d=me(c,p);return vr(d,o,r)}var bO=O({logLoss_:yO});function xO(e,t,n,a=mn.SUM_BY_NONZERO_WEIGHTS){let r=_(e,"labels","meanSquaredError"),s=_(t,"predictions","meanSquaredError"),i=null;n!=null&&(i=_(n,"weights","meanSquaredError")),ln(r.shape,s.shape,"Error in meanSquaredError: ");let o=zh(r,s);return vr(o,i,a)}var vO=O({meanSquaredError_:xO});function wO(e,t){let n=_(e,"labels","sigmoidCrossEntropyWithLogits"),a=_(t,"logits","sigmoidCrossEntropyWithLogits");ln(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=qe(a),s=B(a,n),i=Th(hn(St(zt(a))));return J(me(r,s),i)}function kO(e,t,n,a=0,r=mn.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"multiClassLabels","sigmoidCrossEntropy"),i=_(t,"logits","sigmoidCrossEntropy"),o=null;if(n!=null&&(o=_(n,"weights","sigmoidCrossEntropy")),ln(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),a>0){let u=ce(a),c=ce(1),p=ce(.5);s=J(B(s,me(c,u)),B(p,u))}let l=wO(s,i);return vr(l,o,r)}var IO=O({sigmoidCrossEntropy_:kO});function NO(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Xa((a,r,s)=>{let i=sb(r,[n],!0),o=me(ue(r,"float32"),i);s([a,o]);let l=St(B(o,a));return{value:Se(l,[n]),gradFunc:(u,c)=>{let[p,d]=c,h=Mi(u.shape,[n]);return[B(H(u,h),me(ue(p,"float32"),hn(d))),B(H(u,h),me(hn(d),ue(p,"float32")))]}}})(e,t)}function TO(e,t,n,a=0,r=mn.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"onehotLabels","softmaxCrossEntropy"),i=_(t,"logits","softmaxCrossEntropy"),o=null;if(n!=null&&(o=_(n,"weights","softmaxCrossEntropy")),ln(s.shape,i.shape,"Error in softmaxCrossEntropy: "),a>0){let u=ce(a),c=ce(1),p=ce(s.shape[1]);s=J(B(s,me(c,u)),xe(u,p))}let l=NO(s,i);return vr(l,o,r)}var SO=O({softmaxCrossEntropy_:TO}),CO={fft:Vc,ifft:Jl,rfft:Uc,irfft:Lh},AO={hammingWindow:IP,hannWindow:J1,frame:Q1,stft:CP},Ja={flipLeftRight:EP,resizeNearestNeighbor:rk,resizeBilinear:ak,rotateWithOffset:DP,cropAndResize:FP,nonMaxSuppression:RP,nonMaxSuppressionAsync:UP,nonMaxSuppressionWithScore:HP,nonMaxSuppressionWithScoreAsync:qP,nonMaxSuppressionPadded:KP,nonMaxSuppressionPaddedAsync:JP,transform:tO},ik={bandPart:aO,gramSchmidt:sO,qr:oO},FO={absoluteDifference:cO,computeWeightedLoss:vr,cosineDistance:dO,hingeLoss:mO,huberLoss:gO,logLoss:bO,meanSquaredError:vO,sigmoidCrossEntropy:IO,softmaxCrossEntropy:SO},wr=class extends i1{minimize(e,t=!1,n){let{value:a,grads:r}=this.computeGradients(e,n);if(n!=null){let s=n.map(i=>({name:i.name,tensor:r[i.name]}));this.applyGradients(s)}else this.applyGradients(r);return Ee(r),t?a:(a.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return E1(e,t)}dispose(){this.iterations_!=null&&Ee(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ce(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(wr,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var qh=class extends wr{constructor(e,t,n=null){super();this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=P.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let a=P.registeredVariables[t],r=!1;this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:M(()=>Ge(a).variable(r))}),this.accumulatedUpdates[n]==null&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:M(()=>Ge(a).variable(r))});let s=Array.isArray(e)?e[n].tensor:e[t];if(s==null)return;let i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;M(()=>{let l=J(B(i,this.rho),B(ut(s),1-this.rho)),u=B(xe(rn(J(o,this.epsilon)),rn(J(i,this.epsilon))),s),c=J(B(o,this.rho),B(ut(u),1-this.rho));i.assign(l),o.assign(c);let p=J(B(u,-this.learningRate),a);a.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ee(this.accumulatedGrads.map(e=>e.variable)),Ee(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(a=>({originalName:a.name,variable:a.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(a=>({originalName:a.name,variable:a.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};qh.className="Adadelta";es(qh);var Xh=class extends wr{constructor(e,t=.1){super();this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let a=P.registeredVariables[t];if(this.accumulatedGrads[n]==null){let i=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:M(()=>Cn(a.shape,this.initialAccumulatorValue).variable(i))}}let r=Array.isArray(e)?e[n].tensor:e[t];if(r==null)return;let s=this.accumulatedGrads[n].variable;M(()=>{let i=J(s,ut(r));s.assign(i);let o=J(B(xe(r,rn(J(i,P.backend.epsilon()))),-this.learningRate),a);a.assign(o)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ee(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};Xh.className="Adagrad";es(Xh);var Kh=class extends wr{constructor(e,t,n,a=null){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],M(()=>{this.accBeta1=ce(t).variable(),this.accBeta2=ce(n).variable()}),a==null&&(this.epsilon=P.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);M(()=>{let n=me(1,this.accBeta1),a=me(1,this.accBeta2);t.forEach((r,s)=>{let i=P.registeredVariables[r],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${r}/m`,variable:M(()=>Ge(i).variable(o))}),this.accumulatedSecondMoment[s]==null&&(this.accumulatedSecondMoment[s]={originalName:`${r}/v`,variable:M(()=>Ge(i).variable(o))});let l=Array.isArray(e)?e[s].tensor:e[r];if(l==null)return;let u=this.accumulatedFirstMoment[s].variable,c=this.accumulatedSecondMoment[s].variable,p=J(B(u,this.beta1),B(l,1-this.beta1)),d=J(B(c,this.beta2),B(ut(l),1-this.beta2)),h=xe(p,n),m=xe(d,a);u.assign(p),c.assign(d);let f=J(B(xe(h,J(rn(m),this.epsilon)),-this.learningRate),i);i.assign(f)}),this.accBeta1.assign(B(this.accBeta1,this.beta1)),this.accBeta2.assign(B(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ee(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Ee(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),M(()=>{this.accBeta1.assign(xr(this.beta1,this.iterations_+1)),this.accBeta2.assign(xr(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(a=>({originalName:a.name,variable:a.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(a=>({originalName:a.name,variable:a.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};Kh.className="Adam";es(Kh);var Yh=class extends wr{constructor(e,t,n,a=null,r=0){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],M(()=>{this.iteration=ce(0).variable(),this.accBeta1=ce(t).variable()}),a==null&&(this.epsilon=P.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);M(()=>{let n=me(1,this.accBeta1),a=xe(-this.learningRate,J(B(this.iteration,this.decay),1));t.forEach((r,s)=>{let i=P.registeredVariables[r],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${r}/m`,variable:Ge(i).variable(o)}),this.accumulatedWeightedInfNorm[s]==null&&(this.accumulatedWeightedInfNorm[s]={originalName:`${r}/v`,variable:Ge(i).variable(o)});let l=Array.isArray(e)?e[s].tensor:e[r];if(l==null)return;let u=this.accumulatedFirstMoment[s].variable,c=this.accumulatedWeightedInfNorm[s].variable,p=J(B(u,this.beta1),B(l,1-this.beta1)),d=B(c,this.beta2),h=zt(l),m=Ka(d,h);u.assign(p),c.assign(m);let f=J(B(xe(a,n),xe(p,J(m,this.epsilon))),i);i.assign(f)}),this.iteration.assign(J(this.iteration,1)),this.accBeta1.assign(B(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ee(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Ee(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};Yh.className="Adamax";es(Yh);var Gc=class extends wr{constructor(e){super();this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let a=Array.isArray(e)?e[n].tensor:e[t];if(a==null)return;let r=P.registeredVariables[t];M(()=>{let s=J(B(this.c,a),r);r.assign(s)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=qt(ce(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Gc.className="SGD";es(Gc);var Jh=class extends Gc{constructor(e,t,n=!1){super(e);this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=ce(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let a=P.registeredVariables[t];if(this.accumulations[n]==null){let i=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:M(()=>Ge(a).variable(i))}}let r=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];s!=null&&M(()=>{let i,o=J(B(this.m,r),s);this.useNesterov?i=J(B(this.c,J(s,B(o,this.m))),a):i=J(B(this.c,o),a),r.assign(o),a.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ee(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Jh.className="Momentum";es(Jh);var Qh=class extends wr{constructor(e,t=.9,n=0,a=null,r=!1){super();if(this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,a==null&&(this.epsilon=P.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let a=P.registeredVariables[t],r=!1;this.accumulatedMeanSquares[n]==null&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:M(()=>Ge(a).variable(r))}),this.accumulatedMoments[n]==null&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:M(()=>Ge(a).variable(r))}),this.accumulatedMeanGrads[n]==null&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:M(()=>Ge(a).variable(r))});let s=Array.isArray(e)?e[n].tensor:e[t];if(s==null)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;M(()=>{let l=J(B(i,this.decay),B(ut(s),1-this.decay));if(this.centered){let u=this.accumulatedMeanGrads[n].variable,c=J(B(u,this.decay),B(s,1-this.decay)),p=xe(B(s,this.learningRate),rn(me(l,J(ut(c),this.epsilon)))),d=J(B(o,this.momentum),p);i.assign(l),u.assign(c),o.assign(d);let h=me(a,d);a.assign(h)}else{let u=J(B(i,this.decay),B(ut(s),1-this.decay)),c=J(B(o,this.momentum),xe(B(s,this.learningRate),rn(J(u,this.epsilon))));i.assign(u),o.assign(c);let p=me(a,c);a.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ee(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ee(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Ee(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(a=>({originalName:a.name,variable:a.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(a=>({originalName:a.name,variable:a.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(a=>({originalName:a.name,variable:a.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Qh.className="RMSProp";es(Qh);var Oi=class{static sgd(e){return new Gc(e)}static momentum(e,t,n=!1){return new Jh(e,t,n)}static rmsprop(e,t=.9,n=0,a=null,r=!1){return new Qh(e,t,n,a,r)}static adam(e=.001,t=.9,n=.999,a=null){return new Kh(e,t,n,a)}static adadelta(e=.001,t=.95,n=null){return new qh(e,t,n)}static adamax(e=.002,t=.9,n=.999,a=null,r=0){return new Yh(e,t,n,a,r)}static adagrad(e,t=.1){return new Xh(e,t)}},Li={sgd:Oi.sgd,momentum:Oi.momentum,adadelta:Oi.adadelta,adagrad:Oi.adagrad,rmsprop:Oi.rmsprop,adamax:Oi.adamax,adam:Oi.adam},_O=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:e=>e())();function Zh(){return new Promise(e=>_O(()=>e()))}var E={};Oe(E,{ERF_A1:()=>BO,ERF_A2:()=>VO,ERF_A3:()=>UO,ERF_A4:()=>GO,ERF_A5:()=>HO,ERF_P:()=>WO,PARALLELIZE_THRESHOLD:()=>Nb,SELU_SCALE:()=>lk,SELU_SCALEALPHA:()=>ok,applyActivation:()=>Hh,assertAndGetBroadcastShape:()=>xt,assertAxesAreInnerMostDims:()=>hM,assertParamsConsistent:()=>EO,assignToTypedArray:()=>ZO,axesAreInnerMostDims:()=>ab,calculateShapes:()=>X0,combineLocations:()=>D1,complexWithEvenIndex:()=>YO,complexWithOddIndex:()=>JO,computeConv2DInfo:()=>$c,computeConv3DInfo:()=>f1,computeDefaultPad:()=>Hy,computeDilation2DInfo:()=>O$,computeOptimalWindowSize:()=>DO,computeOutAndReduceShapes:()=>M1,computeOutShape:()=>$O,computePool2DInfo:()=>m1,computePool3DInfo:()=>L$,convertConv2DDataFormat:()=>h1,eitherStridesOrDilationsAreOne:()=>ja,expandShapeToKeepDim:()=>Mi,exponent:()=>tL,exponents:()=>eL,fromStringArrayToUint8:()=>rL,fromUint8ToStringArray:()=>aL,getAxesPermutation:()=>R1,getBroadcastDims:()=>FD,getComplexWithIndex:()=>QO,getFusedBiasGradient:()=>Gh,getFusedDyActivation:()=>Uh,getImageCenter:()=>MO,getInnerMostAxes:()=>mM,getPermuted:()=>PO,getReductionAxes:()=>Wt,getReshaped:()=>RO,getReshapedPermuted:()=>OO,getSliceBeginCoords:()=>LO,getSliceSize:()=>zO,getUndoAxesPermutation:()=>rb,log:()=>qO,mergeRealAndImagArrays:()=>XO,prepareAndValidate:()=>q0,prepareSplitSize:()=>nL,segment_util:()=>uk,shouldFuse:()=>jh,slice_util:()=>dn,splitRealAndImagArrays:()=>KO,tupleValuesAreOne:()=>ts,upcastType:()=>pa,validateInput:()=>Ey,validateUpdateShape:()=>_y,warn:()=>jO});function EO(e,t){let n=e[0].length;e.forEach((r,s)=>{$(r.length===n,()=>`Error in concat${n}D: rank of tensors[${s}] must be the same as the rank of the rest (${n})`)}),$(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let a=e[0];e.forEach((r,s)=>{for(let i=0;i<n;i++)$(i===t||r[i]===a[i],()=>`Error in concat${n}D: Shape of tensors[${s}] (${r}) does not match the shape of the rest (${a}) along the non-concatenated axis ${s}.`)})}function $O(e,t){let n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var Nb=30;function DO(e){return e<=Nb?e:Nd(e,Math.floor(Math.sqrt(e)))}function MO(e,t,n){let a=n*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[a,r]}function RO(e,t,n,a=!0){let r=[];if(a)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let s=t.length;for(let i=0;i<s;++i)r=r.concat([e[i+1]/t[i],t[i]]);r=r.concat(e.slice(s+1))}return r}function PO(e,t,n=!0){let a=[];if(n){a.push(t);for(let r=t+1;r<e;++r)r<=2*t?(a.push(r),a.push(r-(t+1))):a.push(r)}else{let r=[],s=[];for(let i=1;i<e;++i)i>=t*2+1||i%2==1?s.push(i):r.push(i);a.push(...r),a.push(0),a.push(...s)}return a}function OO(e,t,n,a=!0){let r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?a?r.push(t[s-1]*e[s]):r.push(e[s]/t[s-1]):r.push(e[s]);return r}function LO(e,t){let n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function zO(e,t,n){let a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}var ok=1.7580993408473768,lk=1.0507009873554805,WO=.3275911,BO=.254829592,VO=-.284496736,UO=1.421413741,GO=-1.453152027,HO=1.061405429;function jO(...e){Z().getBool("IS_TEST")||console.warn(...e)}function qO(...e){Z().getBool("IS_TEST")||console.log(...e)}function XO(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function KO(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function YO(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function JO(e){let t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function QO(e,t){let n=e[t*2],a=e[t*2+1];return{real:n,imag:a}}function ZO(e,t,n,a){e[a*2]=t,e[a*2+1]=n}function eL(e,t){let n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let s=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function tL(e,t,n){let a=(n?2:-2)*Math.PI*(e/t),r=Math.cos(a),s=Math.sin(a);return{real:r,imag:s}}function nL(e,t,n=0){let a=[];if(typeof t=="number")$(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),a=new Array(t).fill(e.shape[n]/t);else{let r=t.reduce((i,o)=>(o===-1&&(i+=1),i),0);$(r<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let i=t.reduce((o,l)=>l>0?o+l:o);t[s]=e.shape[n]-i}$(e.shape[n]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),a=t}return a}var uk={};Oe(uk,{collectGatherOpShapeInfo:()=>oL,computeOutShape:()=>iL,segOpComputeOptimalWindowSize:()=>sL});function sL(e,t){let n=!1,a;for(e<=Nb?(a=e,n=!0):a=Nd(e,Math.floor(Math.sqrt(e)));!n;)a>t||a===e?n=!0:a=Nd(e,a+1);return a}function iL(e,t,n){let a=[],r=e.length;for(let s=0;s<r;s++)s!==t?a.push(e[s]):a.push(n);return a}function oL(e,t,n,a){let r=t.shape.length,s=e.shape.length;if(a!==0&&(a<-r||a>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${a}`);if(a<0&&(a+=r),a>s)throw new Error(`batchDims (${a}) must be less than rank(x) (
    ${s}).`);if(n<a)throw new Error(`batchDims (${a}) must be less than or equal to axis (${n}).`);for(let p=0;p<a;++p)if(e.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${e.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let i=e.shape[n],o=[],l=1,u=1,c=1;for(let p=0;p<a;++p)o.push(e.shape[p]),l*=e.shape[p];for(let p=a;p<n;p++)o.push(e.shape[p]),u*=e.shape[p];for(let p=a;p<r;p++)o.push(t.shape[p]);for(let p=n+1;p<s;p++)o.push(e.shape[p]),c*=e.shape[p];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function aL(e){try{return e.map(t=>oh(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function rL(e){return e.map(t=>kc(t))}var Qa={};Oe(Qa,{nonMaxSuppressionV3Impl:()=>Z1,nonMaxSuppressionV4Impl:()=>ek,nonMaxSuppressionV5Impl:()=>tk,whereImpl:()=>U1});var ck={kernelName:Po,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,Ql(ue(n,"float32"),-1))}}},lL={kernelName:Oo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let a=ut(ue(n,"float32")),r=rn(me(ce(1),a));return St(xe(e,r))}}}},uL={kernelName:Lo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let a=rn(me(ut(ue(n,"float32")),1));return xe(e,a)}}}},cL={kernelName:Hr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=xt(n.shape,a.shape);return{a:()=>{let s=e,i=Wt(n.shape,r);return i.length>0&&(s=Se(s,i)),H(s,n.shape)},b:()=>{let s=e,i=Wt(a.shape,r);return i.length>0&&(s=Se(s,i)),H(s,a.shape)}}}},pL={kernelName:Es,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((a,r)=>{n[r]=()=>e.clone()}),n}},dL={kernelName:$s,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ge(n)}}},hL={kernelName:nc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ge(n)}}},mL={kernelName:zo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,rn(me(ce(1),ut(ue(n,"float32")))))}}},fL={kernelName:Wo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let a=rn(J(ce(1),ut(ue(n,"float32"))));return xe(e,a)}}}},gL={kernelName:Uo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=xt(n.shape,a.shape);return{a:()=>{let s=J(ut(n),ut(a)),i=B(e,xe(a,s)),o=Wt(n.shape,r);return o.length>0&&(i=Se(i,o)),H(i,n.shape)},b:()=>{let s=J(ut(n),ut(a)),i=St(B(e,xe(n,s))),o=Wt(a.shape,r);return o.length>0&&(i=Se(i,o)),H(i,a.shape)}}}},yL={kernelName:Bo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,J(ut(ue(n,"float32")),1))}}},bL={kernelName:Vo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,me(ce(1),ut(ue(n,"float32"))))}}};function xL(e,t,n,a,r,s){let i=_(e,"dy","avgPool3dGrad"),o=_(t,"input","avgPool3dGrad"),l=i,u=o,c=!1;o.rank===4&&(c=!0,l=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),$(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),$(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),s!=null&&$(Ht(r),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);let p={dy:l,input:u},d={filterSize:n,strides:a,pad:r,dimRoundingMode:s},h=P.runKernel(Fd,p,d);return c?H(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var vL=O({avgPool3dGrad_:xL}),wL={kernelName:ac,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{filterSize:r,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>vL(e,a,r,s,i,o)}}};function kL(e,t,n,a,r){let s=_(e,"dy","avgPoolGrad"),i=_(t,"input","avgPoolGrad");$(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,l=s,u=!1;i.rank===3&&(u=!0,o=H(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=H(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),$(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let c={dy:l,input:o},p={filterSize:n,strides:a,pad:r},d=P.runKernel(Ad,c,p);return u?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var IL=O({avgPoolGrad_:kL}),NL={kernelName:Ds,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{filterSize:r,strides:s,pad:i}=n;return{x:()=>IL(e,a,r,s,i)}}},TL={kernelName:Ms,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[a,r]=t,{transposeA:s,transposeB:i}=n;return!s&&!i?{a:()=>ze(e,r,!1,!0),b:()=>ze(a,e,!0,!1)}:!s&&i?{a:()=>ze(e,r,!1,!1),b:()=>ze(e,a,!0,!1)}:s&&!i?{a:()=>ze(r,e,!1,!0),b:()=>ze(a,e,!1,!1)}:{a:()=>ze(r,e,!0,!0),b:()=>ze(e,a,!0,!0)}}},SL={kernelName:rc,gradFunc:(e,t,n)=>{let{blockShape:a,crops:r}=n;return{x:()=>Lc(e,a,r)}}},CL={kernelName:y0,gradFunc:(e,t,n)=>{let a=n,r=a.inputShape,s=a.shape,i=Array.from(s);for(let l=r.length-1;l>=0;l--)if(r[l]===s[l])i[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${s}].`);let o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>Se(e,o,!0)}}},AL={kernelName:Rs,gradFunc:e=>({x:()=>e.clone()})},FL={kernelName:Ps,gradFunc:e=>({x:()=>Ge(e)})},_L={kernelName:jr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>Sn(ma(rs(a,r),Di(a,s)),e,Ge(e))}}},EL={kernelName:sc,inputsToSave:["x"],gradFunc:ck.gradFunc},$L={kernelName:Go,saveAllInputs:!0,gradFunc:(e,t,n)=>{let a=t.map(o=>o.shape),{axis:r}=n,s=ca(r,t[0].shape)[0],i=a.map(o=>o[s]);return zn(e,i,s).map(o=>()=>o)}},DL={kernelName:Os,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[a,r]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return $(ts(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Xy(a.shape,e,r,i,o,l),filter:()=>kb(a,e,r.shape,i,o,l)}}},ML={kernelName:Ls,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[a,r]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Et(e,r,s,i,o,1,l),filter:()=>kb(e,a,r.shape,s,i,o,l)}}};function RL(e,t,n,a,r){let s=e;e.rank===4&&(s=H(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;i.rank===4&&(i=H(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),$(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),$(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),$(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),$(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),$(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);let o={x:s,dy:i},l={strides:a,pad:r,filterShape:n};return P.runKernel(Dd,o,l)}var PL=O({conv3DBackpropFilter_:RL}),OL={kernelName:ic,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:a,strides:r,pad:s}=n;$(ts(a),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let[i,o]=t;return{x:()=>N1(i.shape,e,o,r,s),filter:()=>PL(i,e,o.shape,r,s)}}},LL={kernelName:zs,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(St(Rh(ue(n,"float32"))),e)}}},zL={kernelName:Ho,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(Ph(ue(n,"float32")),e)}}},WL={kernelName:Ws,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{axis:r,exclusive:s,reverse:i}=n;return{x:()=>{let o=R1([r],a.rank),l=kh(e,r,s,!i);return o!=null&&(l=Ve(l,o)),l}}}},BL={kernelName:Bs,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:a,strides:r,pad:s,dimRoundingMode:i}=n,o=a==null?[1,1]:a;$(ts(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[l,u]=t;return $(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),$(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),$(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),$(ja(r,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`),i!=null&&$(Ht(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`),{x:()=>Y1(l.shape,e,u,r,s,a,i),filter:()=>K1(l,e,u.shape,r,s,a,i)}}},VL={kernelName:oc,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[a,r]=t,s={x:a,filter:r,dy:e},i={x:a,filter:r,dy:e};return{x:()=>P.runKernel(zd,s,n),filter:()=>P.runKernel(Wd,i,n)}}},UL={kernelName:Xo,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,a={dy:e,y:n};return{x:()=>P.runKernel(Bd,a)}}},GL={kernelName:Ko,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,a=B(hn(St(ut(n))),2/Math.sqrt(Math.PI));return{x:()=>B(e,a)}}},HL={kernelName:Us,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,n)}}},jL={kernelName:Jo,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>H(e,n.shape)}}},qL={kernelName:Qo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,hn(n))}}},XL={kernelName:Gs,gradFunc:e=>({x:()=>Ge(e)})},KL={kernelName:Hs,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=xt(n.shape,a.shape);return{a:()=>{let s=xe(e,ue(a,"float32")),i=Wt(n.shape,r);return i.length>0?H(Se(s,i),n.shape):s},b:()=>{let s=B(e,ue(n,"float32")),i=Wt(a.shape,r);i.length>0&&(s=H(Se(s,i),a.shape));let o=ut(a);return St(xe(s,ue(o,"float32")))}}}},YL={kernelName:js,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:a}=n,[r,s,i,o]=t,l=o==null?ce(1):o,u=Wt(s.shape,r.shape),c=[];if(s.rank===1){for(let f=0;f<r.shape.length-1;++f)c.push(r.shape[f]);c.push(1)}let p=me(r,s),d=B(e,l),h=Dh(J(i,ce(a))),m=B(B(B(h,h),h),ce(-.5));return{x:()=>s.rank===1?H(B(B(e,qa(H(h,[1,1,1,s.shape[0]]),c)),l),r.shape):H(B(B(e,h),l),r.shape),mean:()=>{let f=B(B(h,ce(-1)),d);return s.rank===1&&(f=Se(f,u)),H(f,s.shape)},variance:()=>{let f=B(B(m,p),d);return s.rank===1&&(f=Se(f,u)),H(f,s.shape)},scale:()=>{let f=B(p,h),g=B(e,f);return s.rank===1&&(g=Se(g,u)),H(g,s.shape)},offset:()=>{let f=e;return s.rank===1&&(f=Se(f,u)),H(f,s.shape)}}}},JL={kernelName:el,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[a,r]=t,{axis:s}=n,i=ca(s,a.shape)[0];return{x:()=>{let o=a.shape,l=r.size,u=o.slice(0,i),c=u.length,p=o.slice(s,o.length).slice(1),d=p.length,h=pk(0,c),m=pk(c+1,c+1+d),f=dk([u,[l],p]),g=H(e,f),y=H(r,[l]),b=dk([[c],h,m]),x=Ve(g,b),v=bb(x,y,a.shape[i]),k=rb(b);return v=Ve(v,k),v},indices:()=>r}}};function pk(e,t){let n=[];for(let a=e;a<t;++a)n.push(a);return n}function dk(e){let t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}var QL={kernelName:qs,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t;return{a:()=>Ge(n),b:()=>Ge(a)}}},ZL={kernelName:Xs,gradFunc:e=>({x:()=>ue(e,"float32")})},e3={kernelName:al,gradFunc:e=>({x:()=>Ge(e)})},t3={kernelName:rl,gradFunc:e=>({x:()=>Ge(e)})},n3={kernelName:sl,gradFunc:e=>({x:()=>Ge(e)})},a3={kernelName:Ks,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{alpha:r}=n,s=ha(a,0);return{x:()=>Sn(s,e,B(e,r))}}},r3={kernelName:ll,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,J(n,1))}}},s3={kernelName:Ys,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,ue(n,"float32"))}}},i3={kernelName:b0,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a]=t,{axis:r}=n;return{logits:()=>{let s=!0,i=hn(a);return me(e,B(Se(e,r,s),i))}}}};function o3(e,t,n,a=5,r=1,s=1,i=.5){let o={x:e,y:t,dy:n},l={depthRadius:a,bias:r,alpha:s,beta:i};return P.runKernel(jd,o,l)}var l3=O({localResponseNormalizationBackprop_:o3}),u3={kernelName:pc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a,r]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>l3(a,r,e,s,i,o,l)}}};function hk(e,t,n,a){return t.rank<n.rank&&(t=H(t,Mi(t.shape,a))),e.rank<n.rank&&(e=H(e,Mi(e.shape,a))),{x:()=>B(e,ue(as(n,t),e.dtype))}}var mk={kernelName:Js,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let a=n,{reductionIndices:r}=a,s=t[0],i=t[1],o=ca(r,s.shape),l=hk(e,i,s,o);return{x:()=>l.x()}}},c3={kernelName:Qs,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t;return{a:()=>B(e,ue(rs(n,a),"float32")),b:()=>B(e,ue(Nh(n,a),"float32"))}}};function p3(e,t,n,a,r,s,i){let o=_(e,"dy","maxPool3dGrad"),l=_(t,"input","maxPool3dGrad"),u=_(n,"output","maxPool3dGrad"),c=o,p=l,d=u,h=!1;l.rank===4&&(h=!0,c=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),p=H(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=H(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),$(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),$(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),$(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),i!=null&&$(Ht(s),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);let m={dy:c,input:p,output:d},f={filterSize:a,strides:r,pad:s,dimRoundingMode:i},g=P.runKernel(Xd,m,f);return h?H(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var d3=O({maxPool3dGrad_:p3}),h3={kernelName:dc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a,r]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>d3(e,a,r,s,i,o,l)}}};function m3(e,t,n,a,r,s,i){let o=_(e,"dy","maxPoolGrad"),l=_(t,"input","maxPoolGrad"),u=_(n,"output","maxPoolGrad");$(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),$(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),$(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),i!=null&&$(Ht(s),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);let c={dy:o,input:l,output:u},p={filterSize:a,strides:r,pad:s,dimRoundingMode:i};return P.runKernel(qd,c,p)}var f3=O({maxPoolGrad_:m3}),g3={kernelName:Zs,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a,r]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>f3(e,a,r,s,i,o)}}},y3={kernelName:ei,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{axis:r}=n,s=ca(r,a.shape),i=M1(a.shape,s)[1],o=Ot(i);return{x:()=>{let l=a.shape.slice();s.forEach(c=>{l[c]=1});let u=H(e,l);return xe(B(u,Ya(a.shape,"float32")),o)}}}},b3={kernelName:ti,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let a=n,{axis:r}=a,[s,i]=t,o=ca(r,s.shape),l=hk(e,i,s,o);return{x:()=>l.x()}}},x3={kernelName:ni,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t;return{a:()=>B(e,ue(Di(n,a),"float32")),b:()=>B(e,ue(ha(n,a),"float32"))}}},v3={kernelName:hc,inputsToSave:["x"],gradFunc:(e,t,n)=>{let a=t[0],{paddings:r}=n,s=r.map(i=>i[0]);return{x:()=>Be(e,s,a.shape)}}},w3={kernelName:cl,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=xt(n.shape,a.shape);return{a:()=>{let s=Wt(n.shape,r);return s.length>0?H(Se(e,s),n.shape):e},b:()=>{let s=B(e,St(Hl(xe(n,a)))),i=Wt(a.shape,r);return i.length>0?H(Se(s,i),a.shape):s}}}},k3={kernelName:ai,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=xt(n.shape,a.shape);return{a:()=>{let s=B(e,ue(a,"float32")),i=Wt(n.shape,r);return i.length>0?H(Se(s,i),n.shape):s},b:()=>{let s=B(e,ue(n,"float32")),i=Wt(a.shape,r);return i.length>0?H(Se(s,i),a.shape):s}}}},I3={kernelName:pl,gradFunc:e=>({x:()=>St(e)})},N3={kernelName:ri,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>vt(n.shape,"float32")}}},T3={kernelName:gl,gradFunc:e=>({x:()=>Ge(e)})},S3={kernelName:yl,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:a}=n;return ct(e,a).map(r=>()=>r)}},fk={kernelName:si,inputsToSave:["x"],gradFunc:(e,t,n)=>{let a=t[0],{paddings:r}=n,s=r.map(i=>i[0]);return{x:()=>Be(e,s,a.shape)}}},C3={kernelName:ii,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,a,r]=t,s=n,i=a,o=xt(s.shape,i.shape);return{a:()=>{let l=ue(i,"float32"),u=B(e,B(l,xr(s,me(l,ce(1))))),c=Wt(s.shape,o);return c.length>0&&(u=Se(u,c)),H(u,s.shape)},b:()=>{let l=ha(s,0),u=Sn(l,Pn(s),Ge(s)),c=B(e,B(r,u)),p=Wt(i.shape,o);return p.length>0&&(c=Se(c,p)),H(c,i.shape)}}}},A3={kernelName:oi,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,a]=t,r=ha(n,0);return{x:()=>Sn(r,e,B(e,a)),alpha:()=>{let s=Sn(r,Ge(e),B(e,n)),i=Wt(a.shape,e.shape);return i.length>0&&(s=Se(s,i)),H(s,a.shape)}}}},F3={kernelName:Vs,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=xt(n.shape,a.shape);return{a:()=>{let s=xe(e,ue(a,"float32")),i=Wt(n.shape,r);return i.length>0?H(Se(s,i),n.shape):s},b:()=>{let s=B(e,ue(n,"float32")),i=Wt(a.shape,r);i.length>0&&(s=H(Se(s,i),a.shape));let o=ut(a);return St(xe(s,ue(o,"float32")))}}}},_3={kernelName:xl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,St(ut(n)))}}},E3={kernelName:ci,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,a=B(Di(n,6),Ql(n));return{x:()=>B(e,ue(a,"float32"))}}},$3={kernelName:li,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,ue(Ql(n),"float32"))}}},D3={kernelName:vl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>H(e,n.shape)}}},M3={kernelName:ui,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[a]=t,r={dy:e,images:a};return{images:()=>P.runKernel(Zd,r,n)}}},R3={kernelName:fc,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[a]=t,r={dy:e,images:a};return{images:()=>P.runKernel(Qd,r,n)}}},P3={kernelName:pi,gradFunc:(e,t,n)=>{let{dims:a}=n,r=ca(a,e.shape);return{x:()=>Ln(e,r)}}},O3={kernelName:di,gradFunc:e=>({x:()=>Ge(e)})},L3={kernelName:hi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>St(xe(e,B(xr(n,1.5),2)))}}},z3={kernelName:kl,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>ue(Ge(n),"float32"),t:()=>B(e,ue(n,e.dtype)),e:()=>B(e,ue(Oc(n),e.dtype))}}},W3={kernelName:Il,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let a=ha(n,ce(0)),r=ce(ok),s=ce(lk),i=B(e,s),o=B(B(e,r),hn(ue(n,"float32")));return Sn(a,i,o)}}}},B3={kernelName:fi,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,B(n,me(ce(1),n)))}}},V3={kernelName:Sl,gradFunc:e=>({x:()=>Ge(e)})},U3={kernelName:mi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(Rc(ue(n,"float32")),e)}}},G3={kernelName:Tl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(wh(ue(n,"float32")),e)}}},H3={kernelName:Nl,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{begin:r,size:s}=n,i=a.shape,[o,l]=a1(a,r,s),u=[];for(let c=0;c<e.rank;c++)u.push([o[c],i[c]-o[c]-l[c]]);return{x:()=>ta(e,u)}}},j3={kernelName:bi,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a]=t,{dim:r}=n,s=!0,i=B(e,a);return{logits:()=>me(i,B(Se(i,[r],s),a))}}},q3={kernelName:Cl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,da(n))}}},gk={kernelName:gc,gradFunc:(e,t,n)=>{let{blockShape:a,paddings:r}=n;return{x:()=>Dc(e,a,r)}}},yk={kernelName:Al,gradFunc:(e,t,n)=>{let{axis:a}=n;return{x:()=>Je(e,a)}}},X3={kernelName:gi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,B(rn(ue(n,"float32")),2))}}},K3={kernelName:yc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,B(ue(n,"float32"),2))}}},Y3={kernelName:xi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=ce(2);return{a:()=>B(e,B(r,me(n,a))),b:()=>B(e,B(r,me(a,n)))}}},J3={kernelName:Xr,gradFunc:e=>({x:()=>Ge(e)})},Q3={kernelName:vi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=xt(n.shape,a.shape);return{a:()=>{let s=e,i=Wt(n.shape,r);return i.length>0&&(s=Se(s,i)),H(s,n.shape)},b:()=>{let s=e,i=Wt(a.shape,r);return i.length>0&&(s=Se(s,i)),H(St(s),a.shape)}}}},Z3={kernelName:yi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,r=a.shape.slice(),{axis:s}=n;ca(s,a.shape).forEach(l=>{r[l]=1});let i=H(e,r),o=B(i,Ya(a.shape,"float32"));return{x:()=>o}}},ez={kernelName:_l,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,ut(Rc(n)))}}},tz={kernelName:wi,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(me(ce(1),ut(n)),e)}}},nz={kernelName:qr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{reps:r}=n;return{x:()=>{let s=Ge(a);if(a.rank===1)for(let i=0;i<r[0];++i)s=J(s,Be(e,[i*a.shape[0]],[a.shape[0]]));else if(a.rank===2)for(let i=0;i<r[0];++i)for(let o=0;o<r[1];++o)s=J(s,Be(e,[i*a.shape[0],o*a.shape[1]],[a.shape[0],a.shape[1]]));else if(a.rank===3)for(let i=0;i<r[0];++i)for(let o=0;o<r[1];++o)for(let l=0;l<r[2];++l)s=J(s,Be(e,[i*a.shape[0],o*a.shape[1],l*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else if(a.rank===4)for(let i=0;i<r[0];++i)for(let o=0;o<r[1];++o)for(let l=0;l<r[2];++l)for(let u=0;u<r[3];++u)s=J(s,Be(e,[i*a.shape[0],o*a.shape[1],l*a.shape[2],u*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${a.rank} tensors yet.`);return s}}}},az={kernelName:ki,gradFunc:(e,t,n)=>{let a=n,{perm:r}=a,s=rb(r);return{x:()=>Ve(e,s)}}},rz={kernelName:$l,gradFunc:(e,t,n)=>{let a=n,{axis:r}=a;return{value:()=>Dt(e,r)}}},iz={kernelName:bc,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>sz(e,n)}}};function sz(e,t){let n=Ka(t,Ge(t)),a=$i(e,n),r=rs(t,ce(0,"int32")),s=a.rank-r.rank;for(let o=0;o<s;++o)r=Rn(r,o+1);r=ma(r,Ya(a.shape,"bool"));let i=Ge(a);return Sn(r,a,i)}var oz={kernelName:Dl,gradFunc:e=>({x:()=>Ge(e)})},lz=[ck,lL,uL,cL,pL,dL,hL,mL,fL,gL,yL,bL,wL,NL,TL,SL,CL,AL,FL,_L,EL,$L,ML,DL,OL,LL,zL,WL,BL,VL,F3,UL,GL,HL,jL,qL,KL,XL,YL,JL,QL,ZL,e3,t3,n3,a3,r3,s3,i3,u3,mk,mk,c3,h3,g3,y3,b3,x3,v3,w3,k3,I3,N3,T3,S3,fk,fk,C3,A3,_3,E3,$3,D3,M3,R3,P3,O3,L3,z3,W3,B3,V3,U3,G3,H3,j3,q3,gk,gk,yk,yk,X3,Y3,K3,J3,Q3,Z3,ez,tz,nz,az,rz,iz,oz];for(let e of lz)x0(e);Y().prototype.abs=function(){return this.throwIfDisposed(),zt(this)};Y().prototype.acos=function(){return this.throwIfDisposed(),Py(this)};Y().prototype.acosh=function(){return this.throwIfDisposed(),Oy(this)};Y().prototype.add=function(e){return this.throwIfDisposed(),J(this,e)};Y().prototype.all=function(e,t){return this.throwIfDisposed(),yh(this,e,t)};Y().prototype.any=function(e,t){return this.throwIfDisposed(),_c(this,e,t)};Y().prototype.argMax=function(e){return this.throwIfDisposed(),Ec(this,e)};Y().prototype.argMin=function(e){return this.throwIfDisposed(),Ly(this,e)};Y().prototype.asScalar=function(){return this.throwIfDisposed(),$(this.size===1,()=>"The array must have only 1 element."),H(this,[])};Y().prototype.asType=function(e){return this.throwIfDisposed(),ue(this,e)};Y().prototype.as1D=function(){return this.throwIfDisposed(),H(this,[this.size])};Y().prototype.as2D=function(e,t){return this.throwIfDisposed(),H(this,[e,t])};Y().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),H(this,[e,t,n])};Y().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),H(this,[e,t,n,a])};Y().prototype.as5D=function(e,t,n,a,r){return this.throwIfDisposed(),H(this,[e,t,n,a,r])};Y().prototype.asin=function(){return this.throwIfDisposed(),zy(this)};Y().prototype.asinh=function(){return this.throwIfDisposed(),Wy(this)};Y().prototype.atan=function(){return this.throwIfDisposed(),By(this)};Y().prototype.atan2=function(e){return this.throwIfDisposed(),Vy(this,e)};Y().prototype.atanh=function(){return this.throwIfDisposed(),Uy(this)};Y().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),Zn(this,e,t,n,a)};Y().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Dc(this,e,t)};Y().prototype.batchNorm=function(e,t,n,a,r){return this.throwIfDisposed(),br(this,e,t,n,a,r)};Y().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Mc(this,e)};Y().prototype.cast=function(e){return this.throwIfDisposed(),ue(this,e)};Y().prototype.ceil=function(){return this.throwIfDisposed(),qy(this)};Y().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Xt(this,e,t)};Y().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Fe&&(e=[e]),Je([this,...e],t)};Y().prototype.conv1d=function(e,t,n,a,r,s){return this.throwIfDisposed(),xh(this,e,t,n,a,r,s)};Y().prototype.conv2dTranspose=function(e,t,n,a,r){return this.throwIfDisposed(),vh(this,e,t,n,a,r)};Y().prototype.conv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),Et(this,e,t,n,a,r,s)};Y().prototype.cos=function(){return this.throwIfDisposed(),Rc(this)};Y().prototype.cosh=function(){return this.throwIfDisposed(),wh(this)};Y().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),kh(this,e,t,n)};Y().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Yy(this,e,t)};Y().prototype.depthwiseConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),ns(this,e,t,n,a,r,s)};Y().prototype.dilation2d=function(e,t,n,a,r){return this.throwIfDisposed(),Jy(this,e,t,n,a,r)};Y().prototype.divNoNan=function(e){return this.throwIfDisposed(),Qy(this,e)};Y().prototype.div=function(e){return this.throwIfDisposed(),xe(this,e)};Y().prototype.dot=function(e){return this.throwIfDisposed(),S1(this,e)};Y().prototype.elu=function(){return this.throwIfDisposed(),Gl(this)};Y().prototype.equal=function(e){return this.throwIfDisposed(),as(this,e)};Y().prototype.erf=function(){return this.throwIfDisposed(),Zy(this)};Y().prototype.exp=function(){return this.throwIfDisposed(),hn(this)};Y().prototype.expandDims=function(e){return this.throwIfDisposed(),Rn(this,e)};Y().prototype.expm1=function(){return this.throwIfDisposed(),eb(this)};Y().prototype.fft=function(){return this.throwIfDisposed(),Vc(this)};Y().prototype.flatten=function(){return this.throwIfDisposed(),H(this,[this.size])};Y().prototype.floor=function(){return this.throwIfDisposed(),Hl(this)};Y().prototype.floorDiv=function(e){return this.throwIfDisposed(),gh(this,e)};Y().prototype.gather=function(e,t){return this.throwIfDisposed(),$i(this,e,t)};Y().prototype.greaterEqual=function(e){return this.throwIfDisposed(),rs(this,e)};Y().prototype.greater=function(e){return this.throwIfDisposed(),ha(this,e)};Y().prototype.ifft=function(){return this.throwIfDisposed(),Jl(this)};Y().prototype.irfft=function(){return this.throwIfDisposed(),Lh(this)};Y().prototype.isFinite=function(){return this.throwIfDisposed(),C1(this)};Y().prototype.isInf=function(){return this.throwIfDisposed(),A1(this)};Y().prototype.isNaN=function(){return this.throwIfDisposed(),F1(this)};Y().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Pc(this,e)};Y().prototype.lessEqual=function(e){return this.throwIfDisposed(),Di(this,e)};Y().prototype.less=function(e){return this.throwIfDisposed(),Nh(this,e)};Y().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),nb(this,e,t,n,a)};Y().prototype.logSigmoid=function(){return this.throwIfDisposed(),$1(this)};Y().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Ch(this,e)};Y().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),sb(this,e,t)};Y().prototype.log=function(){return this.throwIfDisposed(),Pn(this)};Y().prototype.log1p=function(){return this.throwIfDisposed(),Th(this)};Y().prototype.logicalAnd=function(e){return this.throwIfDisposed(),ma(this,e)};Y().prototype.logicalNot=function(){return this.throwIfDisposed(),Oc(this)};Y().prototype.logicalOr=function(e){return this.throwIfDisposed(),Ah(this,e)};Y().prototype.logicalXor=function(e){return this.throwIfDisposed(),P1(this,e)};Y().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),ze(this,e,t,n)};Y().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),$t(this,e,t,n,a)};Y().prototype.max=function(e,t){return this.throwIfDisposed(),ea(this,e,t)};Y().prototype.maximum=function(e){return this.throwIfDisposed(),Ka(this,e)};Y().prototype.mean=function(e,t){return this.throwIfDisposed(),Ct(this,e,t)};Y().prototype.min=function(e,t){return this.throwIfDisposed(),ql(this,e,t)};Y().prototype.minimum=function(e){return this.throwIfDisposed(),Xl(this,e)};Y().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),ob(this,e,t)};Y().prototype.mod=function(e){return this.throwIfDisposed(),lb(this,e)};Y().prototype.mul=function(e){return this.throwIfDisposed(),B(this,e)};Y().prototype.neg=function(){return this.throwIfDisposed(),St(this)};Y().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Vh(this,e,t,n)};Y().prototype.notEqual=function(e){return this.throwIfDisposed(),Ri(this,e)};Y().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Wl(this,e,t,n)};Y().prototype.onesLike=function(){return this.throwIfDisposed(),On(this)};Y().prototype.pad=function(e,t){return this.throwIfDisposed(),ta(this,e,t)};Y().prototype.pool=function(e,t,n,a,r){return this.throwIfDisposed(),z1(this,e,t,n,a,r)};Y().prototype.pow=function(e){return this.throwIfDisposed(),xr(this,e)};Y().prototype.prelu=function(e){return this.throwIfDisposed(),zc(this,e)};Y().prototype.prod=function(e,t){return this.throwIfDisposed(),_h(this,e,t)};Y().prototype.reciprocal=function(){return this.throwIfDisposed(),pb(this)};Y().prototype.relu=function(){return this.throwIfDisposed(),qe(this)};Y().prototype.relu6=function(){return this.throwIfDisposed(),$h(this)};Y().prototype.reshapeAs=function(e){return this.throwIfDisposed(),H(this,e.shape)};Y().prototype.reshape=function(e){return this.throwIfDisposed(),H(this,e)};Y().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),ak(this,e,t,n)};Y().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),rk(this,e,t,n)};Y().prototype.reverse=function(e){return this.throwIfDisposed(),Ln(this,e)};Y().prototype.rfft=function(){return this.throwIfDisposed(),Uc(this)};Y().prototype.round=function(){return this.throwIfDisposed(),db(this)};Y().prototype.rsqrt=function(){return this.throwIfDisposed(),Dh(this)};Y().prototype.selu=function(){return this.throwIfDisposed(),Mh(this)};Y().prototype.separableConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),Pi(this,e,t,n,a,r,s)};Y().prototype.sigmoid=function(){return this.throwIfDisposed(),da(this)};Y().prototype.sign=function(){return this.throwIfDisposed(),hb(this)};Y().prototype.sin=function(){return this.throwIfDisposed(),Rh(this)};Y().prototype.sinh=function(){return this.throwIfDisposed(),Ph(this)};Y().prototype.slice=function(e,t){return this.throwIfDisposed(),Be(this,e,t)};Y().prototype.softmax=function(e){return this.throwIfDisposed(),Sa(this,e)};Y().prototype.softplus=function(){return this.throwIfDisposed(),jl(this)};Y().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Lc(this,e,t)};Y().prototype.split=function(e,t){return this.throwIfDisposed(),zn(this,e,t)};Y().prototype.sqrt=function(){return this.throwIfDisposed(),rn(this)};Y().prototype.square=function(){return this.throwIfDisposed(),ut(this)};Y().prototype.squaredDifference=function(e){return this.throwIfDisposed(),zh(this,e)};Y().prototype.squeeze=function(e){return this.throwIfDisposed(),ss(this,e)};Y().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof Fe?[this,e]:[this,...e];return Dt(n,t)};Y().prototype.step=function(e){return this.throwIfDisposed(),Ql(this,e)};Y().prototype.stridedSlice=function(e,t,n,a,r,s,i,o){return this.throwIfDisposed(),fb(this,e,t,n,a,r,s,i,o)};Y().prototype.sub=function(e){return this.throwIfDisposed(),me(this,e)};Y().prototype.sum=function(e,t){return this.throwIfDisposed(),Se(this,e,t)};Y().prototype.tan=function(){return this.throwIfDisposed(),gb(this)};Y().prototype.tanh=function(){return this.throwIfDisposed(),Ul(this)};Y().prototype.tile=function(e){return this.throwIfDisposed(),qa(this,e)};Y().prototype.toBool=function(){return this.throwIfDisposed(),ue(this,"bool")};Y().prototype.toFloat=function(){return this.throwIfDisposed(),ue(this,"float32")};Y().prototype.toInt=function(){return this.throwIfDisposed(),ue(this,"int32")};Y().prototype.topk=function(e,t){return this.throwIfDisposed(),yb(this,e,t)};Y().prototype.transpose=function(e){return this.throwIfDisposed(),Ve(this,e)};Y().prototype.unique=function(e){return this.throwIfDisposed(),Bh(this,e)};Y().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),bb(this,e,t)};Y().prototype.unstack=function(e){return this.throwIfDisposed(),ct(this,e)};Y().prototype.where=function(e,t){return this.throwIfDisposed(),Sn(e,this,t)};Y().prototype.zerosLike=function(){return this.throwIfDisposed(),Ge(this)};var bk={};Oe(bk,{maxNorm:()=>uz,minMaxNorm:()=>dz,nonNeg:()=>pz,unitNorm:()=>cz});var Tb;function Bt(){return Tb==null&&(Tb=p1().epsilon()),Tb}function Fa(){return"channelsLast"}var kr=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,kr.prototype)}},_a=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,_a.prototype)}},V=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,V.prototype)}},$e=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,$e.prototype)}},xk=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,xk.prototype)}};function zi(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function Za(e,t){if(!e)throw new xk(t)}function vk(e,t){let n=0;for(let a of e)a===t&&n++;return n}function An(e){return e.length===1?e[0]:e}function yt(e){return Array.isArray(e)?e:[e]}function Ir(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Wi(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var fa={};function Sb(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Cb(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>Cb(t));else{let t=Object.keys(e);for(let n of t){let a=e[n];a!=null&&typeof a=="object"&&(!Array.isArray(a)&&a.type==="ndarray"&&typeof a.value=="number"?e[n]=a.value:Cb(a))}}}function Hc(e,t={},n={},a="object",r=!1){if(typeof e=="string"){let s=e,i;if(s in n)i=n[s];else if(s in fa)i=fa[s];else if(i=t[s],i==null)throw new V(`Unknown ${a}: ${e}. This may be due to one of the following reasons:
1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=e;if(s.className==null||s.config==null)throw new V(`${a}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,o,l;if(i in n?[o,l]=n[i]:i in fa?[o,l]=fa.className:i in t&&([o,l]=t[i]),o==null)throw new V(`Unknown ${a}: ${i}. This may be due to one of the following reasons:
1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let u={};for(let h of Object.keys(fa))u[h]=fa[h];for(let h of Object.keys(n))u[h]=n[h];let c=s.config;c.customObjects=u;let p=Object.assign({},fa);for(let h of Object.keys(n))fa[h]=n[h];Cb(s.config);let d=l(o,s.config,n,r);return fa=Object.assign({},p),d}else{let u=Object.assign({},fa);for(let p of Object.keys(n))fa[p]=n[p];let c=new o(s.config);return fa=Object.assign({},u),c}}}function hz(e,t){return e<t?-1:e>t?1:0}function em(e,t){return-1*hz(e,t)}function os(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function mz(e){if(e==null)throw new V(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function Bi(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new V(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Ab(e,t,n=0,a=Infinity){return Za(n>=0),Za(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every(r=>typeof r===t)}function Kt(e,t){Array.isArray(e)?(I.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,a)=>Kt(n,`element ${a+1} of ${t}`))):I.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${wk(e)}.`)}function wk(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>wk(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function fz(e,t){let n=I.now(),a;return(...r)=>{let s=I.now();return s-n<t||(n=s,a=e(...r)),a}}function kk(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}function Fb(e,t){return M(()=>rn(Se(B(e,e),t,!0)))}var jc=class extends re.Serializable{getConfig(){return{}}},_b=class extends jc{constructor(e){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return M(()=>{let t=Fb(e,this.axis),n=Xt(t,0,this.maxValue);return B(e,xe(n,J(Bt(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};_b.className="MaxNorm";re.registerClass(_b);var Eb=class extends jc{constructor(e){super();this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return M(()=>xe(e,J(Bt(),Fb(e,this.axis))))}getConfig(){return{axis:this.axis}}};Eb.className="UnitNorm";re.registerClass(Eb);var $b=class extends jc{apply(e){return qe(e)}};$b.className="NonNeg";re.registerClass($b);var Db=class extends jc{constructor(e){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return M(()=>{let t=Fb(e,this.axis),n=J(B(this.rate,Xt(t,this.minValue,this.maxValue)),B(1-this.rate,t));return B(e,xe(n,J(Bt(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Db.className="MinMaxNorm";re.registerClass(Db);var Ik={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Vt(e){return Sb(e)}function Nk(e,t={}){return Hc(e,re.SerializationMap.getMap().classNameMap,t,"constraint")}function Ut(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in Ik?Ik[e]:e,config:{}};return Nk(t)}else return e instanceof jc?e:Nk(e)}function uz(e){return new _b(e)}function cz(e){return new Eb(e)}function pz(){return new $b}function dz(e){return new Db(e)}var Tk={};Oe(Tk,{constant:()=>bz,glorotNormal:()=>Tz,glorotUniform:()=>Nz,heNormal:()=>Sz,heUniform:()=>Cz,identity:()=>kz,leCunNormal:()=>Az,leCunUniform:()=>Fz,ones:()=>yz,orthogonal:()=>_z,randomNormal:()=>vz,randomUniform:()=>xz,truncatedNormal:()=>wz,varianceScaling:()=>Iz,zeros:()=>gz});var Ez=["channelsFirst","channelsLast"],$z=["nearest","bilinear"],Dz=["valid","same","causal"],Mz=["max","avg"],Rz=["sum","mul","concat","ave"],eu=new Map;function Mt(e){Bi(Ez,"DataFormat",e)}function Pz(e){Bi($z,"InterpolationFormat",e)}function na(e){Bi(Dz,"PaddingMode",e)}function Sk(e){Bi(Mz,"PoolMode",e)}var qc=[],Ck="/";function Vi(e,t){qc.push(e);try{let n=t();return qc.pop(),n}catch(n){throw qc.pop(),n}}function Oz(){return qc.length===0?"":qc.join(Ck)+Ck}function Fk(e){if(!Ak(e))throw new Error("Not a valid tensor name: '"+e+"'");return Oz()+e}function _k(e){if(!Ak(e))throw new Error("Not a valid tensor name: '"+e+"'");eu.has(e)||eu.set(e,0);let t=eu.get(e);if(eu.set(e,eu.get(e)+1),t>0){let n=`${e}_${t}`;return eu.set(n,1),n}else return e}var Lz=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Ak(e){return!!e.match(Lz)}function zz(e){return e===parseInt(e.toString(),10)}function ls(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let a=1;for(let r=t;r<n;++r)a*=e[r];return a}function Ek(e){return e=Array.isArray(e)?new Float32Array(e):e,Ze(e)}function tu(e){return ql(Ek(e)).dataSync()[0]}function us(e){return ea(Ek(e)).dataSync()[0]}function Ea(e,t){if(t<e)throw new V(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let a=e;a<t;++a)n.push(a);return n}function Xc(e,t){return e.asType(t)}function Kc(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function Wz(e,t){return M(()=>{if(e.shape.length!==2)throw new V(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=Kc(e,1);return Mb(n,[1,t,1])})}function Bz(e){let t=[ls(e.shape)];return e.reshape(t)}function Vz(e){if(e.rank<=1)throw new V(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],ls(e.shape,1)];return e.reshape(t)}function Ui(e,t,n){return M(()=>{switch(e.rank){case 1:return Oh(e,t,n);case 2:return mb(e,[t,0],[n,e.shape[1]]);case 3:return Yl(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Bc(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Be(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Be(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new V(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Rb(e,t,n){return M(()=>{switch(e.rank){case 1:return Oh(e,t,n);case 2:return mb(e,[0,t],[e.shape[0],n]);case 3:return Yl(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Bc(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new V(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function tm(e,t,n,a){return M(()=>{switch(e.rank){case 1:return Oh(e,t,n);case 2:switch(a){case 1:return Ui(e,t,n);case 2:return Rb(e,t,n);default:throw new V(`The axis is not within the rank of the tensor ${a}`)}case 3:switch(a){case 1:return Ui(e,t,n);case 2:return Yl(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Rb(e,t,n);default:throw new V(`The axis is not within the rank of the tensor ${a}`)}case 4:switch(a){case 1:return Ui(e,t,n);case 2:return Bc(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Bc(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Rb(e,t,n);default:throw new V(`The axis is not within the rank of the tensor ${a}`)}default:throw new V(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Pb(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),Je(e,t)}function $k(e,t){switch(e.rank){case 1:return v1([e,t]);case 2:return w1([e,t],0);case 3:return k1([e,t],0);case 4:return I1([e,t],0);default:throw new V(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Mb(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new V(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return qa(e,t)}function nm(e,t=0,n=1,a,r){return W1(e,t,n,a,r)}function er(e,t,n,a){if(e.rank<2||t.rank<2)throw new $e(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let r=e.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(r!==s)throw new $e(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2){let r=!1,s=!1;return is.matMul({a:e,b:t,transposeA:r,transposeB:s,bias:a?Ob(e.rank,a,Fa()):null,activation:n})}else{let r=e.shape.slice(),s=r.pop();e=e.reshape([-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},(m,f)=>f===0?t.rank-2:f<=t.rank-2?f-1:f);t=t.transpose(c).reshape([l,-1]);let p=[...r,...u],d=!1,h=!1;return is.matMul({a:e,b:t,transposeA:d,transposeB:h,bias:a?Ob(e.rank,a,Fa()):null,activation:n}).reshape(p)}}function Dk(e,t,n){return M(()=>(Array.isArray(t)?t=Ze(t,"int32"):t=t.toInt(),$i(e,t,n)))}function Yc(e){return B(e,e)}function Ob(e,t,n){let a=t.shape;if(t.rank!==1&&t.rank!==e)throw new V(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return a.length===1?t.reshape([1,a[0],1,1,1]):t.reshape([1,a[3],a[0],a[1],a[2]]);if(n==="channelsLast")return a.length===1?t.reshape([1,1,1,1,a[0]]):t.reshape([1].concat(a))}else if(e===4){if(n==="channelsFirst")return a.length===1?t.reshape([1,a[0],1,1]):t.reshape([1,a[2],a[0],a[1]]);if(n==="channelsLast")return a.length===1?t.reshape([1,1,1,a[0]]):t.reshape([1].concat(a))}else if(e===3){if(n==="channelsFirst")return a.length===1?t.reshape([1,a[0],1]):t.reshape([1,a[1],a[0]]);if(n==="channelsLast")return a.length===1?t.reshape([1,1,a[0]]):t.reshape([1].concat(a))}else if(e<3)return t;throw new V(`Unsupported input rank by biasAdd: ${t.rank}`)}function tr(e,t,n){return M(()=>(n==null&&(n=Fa()),Mt(n),e.add(Ob(e.rank,t,n))))}function Uz(e,t=1){if(t!==1)throw new $e(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Gl(e)}function Gz(e){return M(()=>xe(e,zt(e).add(1)))}function Mk(e,t,n,a){return M(()=>q1(e,t,n,a))}function Hz(e){return M(()=>{let t=J(.5,B(.2,e));return Xt(t,0,1)})}function Jc(e,t,n=!1){return n?e():t()}var jz=["fanIn","fanOut","fanAvg"],qz=["normal","uniform","truncatedNormal"];function Xz(e){Bi(jz,"FanMode",e)}function Kz(e){Bi(qz,"Distribution",e)}var ga=class extends re.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Lb=class extends ga{apply(e,t){return vt(e,t)}};Lb.className="Zeros";re.registerClass(Lb);var am=class extends ga{apply(e,t){return Ya(e,t)}};am.className="Ones";re.registerClass(am);var zb=class extends ga{constructor(e){super();if(typeof e!="object")throw new V(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new V(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return M(()=>B(ce(this.value),Ya(e,t)))}getConfig(){return{value:this.value}}};zb.className="Constant";re.registerClass(zb);var Wb=class extends ga{constructor(e){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Kl(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Wb.className="RandomUniform";re.registerClass(Wb);var Bb=class extends ga{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new $e(`randomNormal does not support dType ${t}.`);return nm(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Bb.className="RandomNormal";re.registerClass(Bb);var Vb=class extends ga{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new $e(`truncatedNormal does not support dType ${t}.`);return Wh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Vb.className="TruncatedNormal";re.registerClass(Vb);var Ub=class extends ga{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return M(()=>{if(e.length!==2||e[0]!==e[1])throw new V("Identity matrix initializer can only be used for 2D square matrices.");return B(this.gain,tb(e[0]))})}getConfig(){return{gain:this.gain}}};Ub.className="Identity";re.registerClass(Ub);function Yz(e,t="channelsLast"){let n,a;if(Mt(t),e.length===2)n=e[0],a=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let r=ls(e,2);n=e[1]*r,a=e[0]*r}else if(t==="channelsLast"){let r=ls(e,0,e.length-2);n=e[e.length-2]*r,a=e[e.length-1]*r}}else{let r=ls(e);n=Math.sqrt(r),a=Math.sqrt(r)}return[n,a]}var Fn=class extends ga{constructor(e){super();if(e.scale<0)throw new V(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,Xz(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,Kz(this.distribution),this.seed=e.seed}apply(e,t){let n=Yz(e),a=n[0],r=n[1],s=this.scale;if(this.mode==="fanIn"?s/=Math.max(1,a):this.mode==="fanOut"?s/=Math.max(1,r):s/=Math.max(1,(a+r)/2),this.distribution==="normal"){let i=Math.sqrt(s);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new $e(`${this.getClassName()} does not support dType ${t}.`);return Wh(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*s);return Kl(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Fn.className="VarianceScaling";re.registerClass(Fn);var rm=class extends Fn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Fn.className}};rm.className="GlorotUniform";re.registerClass(rm);var sm=class extends Fn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Fn.className}};sm.className="GlorotNormal";re.registerClass(sm);var im=class extends Fn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Fn.className}};im.className="HeNormal";re.registerClass(im);var om=class extends Fn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Fn.className}};om.className="HeUniform";re.registerClass(om);var lm=class extends Fn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Fn.className}};lm.className="LeCunNormal";re.registerClass(lm);var um=class extends Fn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Fn.className}};um.className="LeCunNormal";re.registerClass(um);var Gb=class extends ga{constructor(e){super();if(this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new $e("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return M(()=>{if(e.length<2)throw new $e("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,a=nm(n,0,1,"float32"),r=ik.gramSchmidt(a);return e[0]>e[1]&&(r=r.transpose()),B(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}};Gb.className="Orthogonal";re.registerClass(Gb);var Rk={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Pk(e,t={}){return Hc(e,re.SerializationMap.getMap().classNameMap,t,"initializer")}function At(e){return Sb(e)}function wt(e){if(typeof e=="string"){let t=e in Rk?Rk[e]:e;if(t==="GlorotNormal")return new sm;if(t==="GlorotUniform")return new rm;if(t==="HeNormal")return new im;if(t==="HeUniform")return new om;if(t==="LeCunNormal")return new lm;if(t==="LeCunUniform")return new um;{let n={};return n.className=t,n.config={},Pk(n)}}else return e instanceof ga?e:Pk(e)}function gz(){return new Lb}function yz(){return new am}function bz(e){return new zb(e)}function xz(e){return new Wb(e)}function vz(e){return new Bb(e)}function wz(e){return new Vb(e)}function kz(e){return new Ub(e)}function Iz(e){return new Fn(e)}function Nz(e){return new rm(e)}function Tz(e){return new sm(e)}function Sz(e){return new im(e)}function Cz(e){return new om(e)}function Az(e){return new lm(e)}function Fz(e){return new um(e)}function _z(e){return new Gb(e)}var Ok={};Oe(Ok,{Layer:()=>je,RNN:()=>nr,RNNCell:()=>Qc,activation:()=>dW,add:()=>wW,alphaDropout:()=>rB,average:()=>kW,averagePooling1d:()=>Hb,averagePooling2d:()=>jb,averagePooling3d:()=>qb,avgPool1d:()=>EW,avgPool2d:()=>DW,avgPool3d:()=>RW,avgPooling1d:()=>$W,avgPooling2d:()=>MW,avgPooling3d:()=>PW,batchNormalization:()=>AW,bidirectional:()=>YW,concatenate:()=>IW,conv1d:()=>rW,conv2d:()=>sW,conv2dTranspose:()=>iW,conv3d:()=>oW,convLstm2d:()=>jW,convLstm2dCell:()=>qW,cropping2D:()=>uW,dense:()=>hW,depthwiseConv2d:()=>pW,dot:()=>CW,dropout:()=>mW,elu:()=>Qz,embedding:()=>vW,flatten:()=>gW,gaussianDropout:()=>aB,gaussianNoise:()=>nB,globalAveragePooling1d:()=>OW,globalAveragePooling2d:()=>LW,globalMaxPool1d:()=>QW,globalMaxPool2d:()=>ZW,globalMaxPooling1d:()=>zk,globalMaxPooling2d:()=>Wk,gru:()=>WW,gruCell:()=>BW,input:()=>Lk,inputLayer:()=>Jz,layerNormalization:()=>FW,leakyReLU:()=>eW,lstm:()=>VW,lstmCell:()=>UW,masking:()=>sB,maxPool1d:()=>eB,maxPool2d:()=>tB,maxPooling1d:()=>Bk,maxPooling2d:()=>Vk,maxPooling3d:()=>zW,maximum:()=>NW,minimum:()=>TW,multiply:()=>SW,permute:()=>xW,prelu:()=>tW,reLU:()=>Zz,repeatVector:()=>yW,reshape:()=>bW,rnn:()=>XW,separableConv2d:()=>lW,simpleRNN:()=>GW,simpleRNNCell:()=>HW,softmax:()=>nW,spatialDropout1d:()=>fW,stackedRNNCells:()=>KW,thresholdedReLU:()=>aW,timeDistributed:()=>JW,upSampling2d:()=>cW,zeroPadding2d:()=>_W});var iB=0;function Uk(){return iB++}var cm={};function pm(e=""){return e in cm||(cm[e]=0),cm[e]+=1,e+cm[e].toString()}function Xb(e){return Array.isArray(e)&&Array.isArray(e[0])}function dm(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Re(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new V(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function pt(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new V(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function hm(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((a,r)=>a*r);return t}var Gk="Variable",Hk=class{constructor(e,t="float32",n=Gk,a=!0,r=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=Uk(),n=n==null?Gk:n,this.originalName=Fk(n),this.name=_k(this.originalName),this.trainable_=a,this.constraint=r,this.val=V1(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),oB(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function oB(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function Kb(e){return e.map(t=>t.read())}function Yb(e){e.forEach(t=>{t[0].write(t[1])})}var Yt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},$a=class{constructor(e,t,n,a,r,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=i,this.id=Uk(),s!=null&&(this.originalName=Fk(s),this.name=_k(this.originalName)),this.rank=t.length}},lB=0,mm=class{constructor(e,t){this.callArgs=t,this.id=lB++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},uB=0,je=class extends re.Serializable{constructor(e={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=uB++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=Ir(n)+"_"+pm(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),n=[r].concat(e.inputShape)}this.batchInputShape=n;let a=e.dtype;a==null&&(a=e.inputDType),a==null&&(a="float32"),this.dtype=a}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new _a(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new V(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return An(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return An(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new kr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new kr(`Layer ${this.name} is not connected, no input to return.`);return An(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new kr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new kr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return An(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=yt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=yt(this.inputSpec);if(e.length!==t.length)throw new V(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let a=e[n],r=t[n];if(r==null)continue;let s=a.rank;if(r.ndim!=null&&s!==r.ndim)throw new V(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${s}`);if(r.maxNDim!=null&&s>r.maxNDim)throw new V(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${s}`);if(r.minNDim!=null&&s<r.minNDim)throw new V(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${s}.`);if(r.dtype!=null&&a.dtype!==r.dtype)throw new V(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${a.dtype}.`);if(r.axes){let i=a.shape;for(let o in r.axes){let l=Number(o),u=r.axes[o],c=l>=0?i[l]:i[i.length+l];if(u!=null&&[u,null].indexOf(c)===-1)throw new V(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${u} but got shape ${i}.`)}}if(r.shape!=null)for(let i=0;i<r.shape.length;++i){let o=r.shape[i],l=a.shape[i];if(o!=null&&l!=null&&o!==l)throw new V(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${a.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=yt(e),a=!0;for(let s of n)if(!(s instanceof $a)){a=!1;break}let r=!0;for(let s of n)if(s instanceof $a){r=!1;break}if(a===r)throw new V("Arguments to apply() must be all SymbolicTensors or all Tensors");return Vi(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let s=[];for(let i of yt(e))s.push(i.shape);this.build(An(s)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let s=this.call(e,t),i=yt(s),o=[];for(let l of i)n.indexOf(l)!==-1&&(l=l.clone()),o.push(l);if(s=An(o),this.activityRegularizer!=null)throw new $e("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}else{let s=cB(e),i=this.computeOutputShape(s),o,l=pB(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?s[0]:s),i!=null&&i.length>0&&Array.isArray(i[0])?o=i.map((u,c)=>new $a(l,u,this,yt(e),t,this.name,c)):o=new $a(l,i,this,yt(e),t,this.name),this.addInboundNode(e,o,null,null,s,i,t),this._refCount++,this.activityRegularizer!=null)throw new $e("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,a)=>{n!=null&&e[a]!=null&&e[a]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new kr(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new kr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new _a(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return hm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Kb(e?this.trainableWeights:this.weights)}setWeights(e){M(()=>{let t=this.weights;if(t.length!==e.length)throw new V(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],a=Kb(t);for(let r=0;r<a.length;++r){let s=a[r],i=t[r],o=e[r];if(!I.arraysEqual(s.shape,o.shape))throw new V(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Yb(n)})}addWeight(e,t,n,a,r,s,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new V(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(a=wt("zeros"));let o=a.apply(t,n),l=new Hk(o,n,e,s,i);return o.dispose(),r!=null&&this.addLoss(()=>r.apply(l.read())),s==null&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=yt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,a,r,s,i=null){let o=yt(e);t=yt(t),n=yt(n),a=yt(a),r=dm(r),s=dm(s);let l=[],u=[],c=[];for(let p of o)l.push(p.sourceLayer),u.push(p.nodeIndex),c.push(p.tensorIndex);new mm({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:s},i);for(let p=0;p<t.length;p++)t[p].sourceLayer=this,t[p].nodeIndex=this.inboundNodes.length-1,t[p].tensorIndex=p}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount==0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function cB(e){e=yt(e);let t=[];for(let n of e)t.push(n.shape);return An(t)}function pB(e){return"float32"}function jk(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let a=t.inboundNodes[n];if(a.inboundLayers.length===0)return a.inputTensors;{let r=[];for(let s=0;s<a.inboundLayers.length;s++){let i=a.inputTensors[s],o=a.inboundLayers[s],l=a.nodeIndices[s],u=jk(i,o,l);for(let c of u)r.indexOf(c)===-1&&r.push(c)}return r}}}var nu=class extends je{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:pm("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new V("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new V("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new V("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let a=new $a(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new mm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new V(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};nu.className="InputLayer";re.registerClass(nu);function qk(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new V("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new nu({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function cs(e){if(e==null)return;let t=[],n=[],a=[];for(let r in e){let s=e[r];if(typeof s!="number"){let i=s;t.push(i.data()),n.push(r),a.push(i)}}if(t.length>0){let r=await Promise.all(t);for(let s=0;s<r.length;++s)e[n[s]]=r[s][0];Ee(a)}}function Xk(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var Kk;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(Kk||(Kk={}));var dB=125,au=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},Yk=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},hB=class extends au{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let a in t){let r=t[a];if(typeof r=="number")this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+r*n;else{let s;a in this.totals?s=this.totals[a]:this.totals[a]=0;let i=M(()=>J(this.totals[a],B(r,n)));this.totals[a]=i,s!=null&&s.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:M(()=>{let a=B(xe(1,this.seen),this.totals[n]);t[n]=a,this.totals[n].dispose(),qt(t[n])}))}},Jk=class extends au{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let s=this.history[r];for(let i=0;i<s.length;++i)if(typeof s[i]!="number"){let o=s[i];e.push(o.data()),t.push(r),n.push(i)}}let a=await Promise.all(e);for(let r=0;r<a.length;++r)this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=a[r][0]}},Qk=class extends au{constructor(e,t){super();if(this.currentEpoch=0,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=dB),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");I.isNumber(this.yieldEvery)&&(this.maybeWait=fz(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let a=[];this.yield!=null&&(await cs(n),a.push(this.yield(e,t,n))),a.push(Zh()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await cs(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await cs(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(Zh()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await cs(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await cs(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(Zh()):I.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await cs(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await cs(e),await this.trainEnd(e))}};function Zk(e,t){return e==null&&(e={}),e instanceof au?[e]:Array.isArray(e)&&e[0]instanceof au?e:yt(e).map(n=>new Qk(n,t))}var ya=class{constructor(){}static registerCallbackConstructor(e,t){I.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),ya.checkForDuplicate(t),ya.constructors[e]==null&&(ya.constructors[e]=[]),ya.constructors[e].push(t)}static checkForDuplicate(e){for(let t in ya.constructors)ya.constructors[+t].forEach(n=>{if(n===e)throw new V("Duplicate callback constructor.")})}static clear(){ya.constructors={}}static createCallbacks(e){let t=[];for(let n in ya.constructors){let a=+n;e>=a&&t.push(...ya.constructors[a])}return t.map(n=>new n)}};ya.constructors={};function eI(e,t,n,a,r,s,i,o,l){let u=new Jk,c=[new hB,...ya.createCallbacks(t)];e!=null&&c.push(...e),c.push(u);let p=new Yk(c);return p.setParams({epochs:n,initialEpoch:a,samples:r,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:p,history:u}}function Da(e,t={},n=!1){return Hc(e,re.SerializationMap.getMap().classNameMap,t,"layer",n)}function fm(e,t){return M(()=>{e.dtype!=="float32"&&(e=e.asType("float32"));let n=Se(Yc(e),t,!0),a=Cn(n.shape,Bt()),r=rn(Ka(n,a));return xe(e,r)})}function Gi(e,t){return M(()=>Ct(Yc(me(t,e)),-1))}function gm(e,t){return M(()=>Ct(zt(me(t,e)),-1))}function ru(e,t){return M(()=>{let n=me(e,t),a=Xt(zt(e),Bt(),Number.MAX_VALUE),r=zt(xe(n,a));return B(100,Ct(r,-1))})}function mB(e,t){return M(()=>{let n=Xt(t,Bt(),Number.MAX_VALUE),a=Pn(J(1,n)),r=Xt(e,Bt(),Number.MAX_VALUE),s=Pn(J(1,r));return Ct(Yc(me(a,s)),-1)})}function fB(e,t){return M(()=>{let n=Ka(0,me(1,B(e,t)));return Ct(Yc(n),-1)})}function gB(e,t){return M(()=>{let n=Ka(0,me(1,B(e,t)));return Ct(n,-1)})}function yB(e,t){return M(()=>{let n=Se(B(e,t),-1),a=ea(B(me(1,e),t),-1);return Ka(0,J(1,me(a,n)))})}function bB(e,t){return M(()=>{let n=Math.log(2),a=me(t,e),r=me(J(a,jl(B(-2,a))),n);return Ct(r,-1)})}function Zc(e,t,n=!1){return M(()=>{if(n)t=Sa(t);else{let a=Se(t,t.shape.length-1,!0);t=xe(t,a)}return t=Xt(t,Bt(),1-Bt()),St(Se(B(e.toFloat(),Pn(t)),t.shape.length-1))})}function ym(e,t,n=!1){return M(()=>{let a=Hl(Bz(e)).toInt();t=Xt(t,Bt(),1-Bt());let r=t.shape,s=Wl(a,r[r.length-1]).reshape(r);return Zc(s,t,n)})}function xB(e,t){if(!I.arraysEqual(e.shape,t.shape))throw new V(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return M(()=>{let n=t.relu(),a=t.abs().neg();return n.sub(t.mul(e)).add(a.exp().log1p())})}function bm(e,t){return M(()=>{let n;return n=Xt(t,Bt(),1-Bt()),n=Pn(xe(n,me(1,n))),Ct(xB(e,n),-1)})}function vB(e,t){return M(()=>{let n=Xt(e,Bt(),1),a=Xt(t,Bt(),1);return Se(B(e,Pn(xe(n,a))),-1)})}function wB(e,t){return M(()=>{let n=Pn(J(Bt(),t));return Ct(me(t,B(e,n)),-1)})}function Jb(e,t){return M(()=>{let n=fm(e,-1),a=fm(t,-1),r=B(n,a);return St(Se(r,-1))})}var xm={meanSquaredError:Gi,meanAbsoluteError:gm,meanAbsolutePercentageError:ru,meanSquaredLogarithmicError:mB,squaredHinge:fB,hinge:gB,categoricalHinge:yB,logcosh:bB,categoricalCrossentropy:Zc,sparseCategoricalCrossentropy:ym,binaryCrossentropy:bm,kullbackLeiblerDivergence:vB,poisson:wB,cosineProximity:Jb};function Qb(e){if(typeof e=="string"){if(e in xm)return xm[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new V(t)}else return e}function Zb(e,t){return M(()=>{let n=B(.5,On(t)),a=Xc(ha(t,n),e.dtype);return Ct(as(e,a),-1)})}function ex(e,t){return M(()=>Xc(as(Ec(e,-1),Ec(t,-1)),"float32"))}function tI(e,t){return M(()=>ma(e.equal(1),t.equal(1)).sum().cast("float32"))}function kB(e,t){return M(()=>ma(e.equal(1),t.equal(0)).sum().cast("float32"))}function IB(e,t){return M(()=>ma(e.equal(0),t.equal(1)).sum().cast("float32"))}function nI(e,t){return M(()=>{let n=tI(e,t),a=IB(e,t),r=n.add(a);return Sn(ha(r,0),n.div(r),0).cast("float32")})}function NB(e,t){return M(()=>{let n=tI(e,t),a=kB(e,t),r=n.add(a);return Sn(ha(r,0),n.div(r),0).cast("float32")})}function aI(e,t){return bm(e,t)}function rI(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),t=t.argMax(-1),t.dtype!==e.dtype&&(t=t.asType(e.dtype)),as(e,t).asType("float32")}var TB=Gi,SB=Gi,CB=gm,AB=gm,FB=ru,_B=ru,tx=Zc,EB=Jb,sI=ym,vm={binaryAccuracy:Zb,categoricalAccuracy:ex,precision:nI,categoricalCrossentropy:tx,sparseCategoricalCrossentropy:sI,mse:TB,MSE:SB,mae:CB,MAE:AB,mape:FB,MAPE:_B,cosine:EB};function $B(e){if(typeof e=="string"&&e in vm)return vm[e];if(typeof e!="string"&&e!=null)return e;throw new V(`Unknown metric ${e}`)}function wm(e){if(Za(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(xm))if(xm[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(vm))if(vm[n]===e){t=n;break}return t!==void 0?t:e.name}}function DB(e){let t={Adagrad:()=>Li.adagrad(.01),Adadelta:()=>Li.adadelta(1,.95,Bt()),Adam:()=>Li.adam(.001,.9,.999,Bt()),Adamax:()=>Li.adamax(.002,.9,.999,Bt(),0),RMSProp:()=>Li.rmsprop(.001,.9,0,Bt()),SGD:()=>Li.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new V(`Unknown Optimizer ${e}`)}var iI=1*1024*1024;function oI(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!nx(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let a=JSON.stringify(e);a.length>iI&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${a.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${iI}.`)}}function nx(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!nx(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!nx(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function LB(e,t,n,a=console.log){let r=RB(e),s=["Layer (type)","Output shape","Param #"];r?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(c=>Math.floor(t*c)));let i;if(!r){s.push("Receives inputs"),i=[];for(let c in e.nodesByDepth)i.push(...e.nodesByDepth[c])}a("_".repeat(t)),km(s,n,a),a("=".repeat(t));let o=e.layers;for(let c=0;c<o.length;++c)r?PB(o[c],n,a):OB(o[c],n,i,a),a((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=MB(e),u=hm(e.nonTrainableWeights);a(`Total params: ${l+u}`),a(`Trainable params: ${l}`),a(`Non-trainable params: ${u}`),a("_".repeat(t))}function MB(e){let t;return e.collectedTrainableWeights!=null?t=hm(e.collectedTrainableWeights):t=hm(e.trainableWeights),t}function RB(e){let t=!0,n=[],a=[];for(let r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(let r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}a.push(...r)}if(t)for(let r of e.layers){let s=!1;for(let i of r.inboundNodes)if(a.indexOf(i)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function km(e,t,n=console.log){let a="";for(let r=0;r<e.length;++r)r>0&&(a=a.slice(0,a.length-1)+" "),a+=e[r],a=a.slice(0,t[r]),a+=" ".repeat(t[r]-a.length);n(a)}function PB(e,t,n){let a;try{a=JSON.stringify(e.outputShape)}catch(o){a="multiple"}let r=e.name,s=e.getClassName(),i=[`${r} (${s})`,a,e.countParams().toString()];km(i,t,n)}function OB(e,t,n,a){let r;try{r=JSON.stringify(e.outputShape)}catch(c){r="multiple"}let s=[];for(let c of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(c)===-1))for(let p=0;p<c.inboundLayers.length;++p){let d=c.inboundLayers[p].name,h=c.nodeIndices[p],m=c.tensorIndices[p];s.push(`${d}[${h}][${m}]`)}let i=e.name,o=e.getClassName(),l=s.length===0?"":s[0],u=[`${i} (${o})`,r,e.countParams().toString(),l];km(u,t,a);for(let c=1;c<s.length;++c)km(["","","",s[c]],t,a)}function lI(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function ep(e,t){if(e===null)return null;if(typeof e=="string")return Wi(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],a=e.length;for(let r=0;r<a;++r){let s=e[r];lI(t,r,s)?n.push(s):n.push(ep(s,t))}return n}else{let n={};for(let a of Object.keys(e)){let r=e[a];if(a==="name"&&typeof r=="string")n[a]=r;else{let s=Wi(a);n[s]=ep(r,s)}}return n}}function ax(e,t){if(e==null)return null;if(typeof e=="string")return Ir(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],a=e.length;for(let r=0;r<a;++r){let s=e[r];lI(t,r,s)?n.push(s):n.push(ax(s,t))}return n}else{let n={};for(let a of Object.keys(e)){let r=e[a],s=Ir(a);(a==="name"||a==="className")&&typeof r=="string"?n[s]=r:n[s]=ax(r,a)}return n}}var Im="3.3.0";function zB(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return ue(t,e.dtype)}catch(n){throw new V(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var Hi=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Hi)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=zB(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new V(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof $a){if(this.id2Value[e.id]==null)throw new V(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new V(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof $a){if(this.id2Value[e.id]==null)throw new V(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new V(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Ee(this.id2Mask)}},rx={},uI={};function tp(e,t,n,a){let r=n==null?!1:n.training,s=Array.isArray(e),i=s?e:[e],o=i.map(m=>m.name),l=[],u=t.names();for(let m of o)u.indexOf(m)!==-1?l.push(t.getValue(m)):l.push(null);a!=null&&(a.maxNumTensors=-Infinity,a.minNumTensors=Infinity);let c=o.join(",")+"|"+t.names().join(","),p,d;if(rx[c]==null){let m=WB(i,t);p=m.sorted,d=m.recipientCounts,rx[c]=p,uI[c]=d}p=rx[c],d={},r||Object.assign(d,uI[c]);let h=new Hi(t);for(let m=0;m<p.length;++m){if(a!=null){let F=mh().numTensors;F>a.maxNumTensors&&(a.maxNumTensors=F),F<a.minNumTensors&&(a.minNumTensors=F)}let f=p[m],g=f.sourceLayer;if(g instanceof nu)continue;let y=[],b=[],x=[],v=!1;for(let F of f.inputs){let D=h.getValue(F),R=h.getMask(F);y.push(D),b.push(R),R!=null&&(v=!0),r||(d[F.name]--,d[F.name]===0&&!t.hasKey(F)&&o.indexOf(F.name)===-1&&!D.isDisposed&&F.sourceLayer.stateful!==!0&&x.push(D))}v&&(n=n||{},n.mask=b[0]);let k=yt(g.apply(y,n)),w=null;g.supportsMasking&&(w=g.computeMask(y,b));let S=BB(f),A=Array.isArray(S)?S:[S];for(let F=0;F<A.length;++F){h.hasKey(A[F])||h.add(A[F],k[F],Array.isArray(w)?w[0]:w);let D=o.indexOf(A[F].name);D!==-1&&(l[D]=k[F])}r||Ee(x)}return h.disposeMasks(),s?l:l[0]}function WB(e,t){I.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],a={};if(e.length===1){let r=cI(e[0],t);n=r.sorted,a=r.recipientMap}else{let r=new Set;for(let s of e){let{sorted:i,recipientMap:o}=cI(s,t);for(let l of i)r.has(l.name)||(n.push(l),r.add(l.name));for(let l in o)a[l]==null&&(a[l]=new Set),o[l].forEach(u=>a[l].add(u))}}return{sorted:n,recipientCounts:VB(a)}}function VB(e){let t={};for(let n in e)t[n]=e[n].size;return t}function cI(e,t){let n=new Set,a=[],r={};for(let o of t.names())n.add(o);let s=[],i=[];for(s.push(e);s.length>0;){let o=s[s.length-1];if(n.has(o.name)){s.pop();continue}let l=i[i.length-1]===s.length-1;if(o.inputs.length===0||l)s.pop(),a.push(o),n.add(o.name),l&&i.pop();else{i.push(s.length-1);for(let u of o.inputs)r[u.name]==null&&(r[u.name]=new Set),r[u.name].add(o.name),!n.has(u.name)&&s.push(u)}}return{sorted:a,recipientMap:r}}function BB(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let a=0;a<e.sourceLayer.inboundNodes.length;++a)for(let r of e.sourceLayer.inboundNodes[a].outputTensors)if(r.id===e.id){n=a;break}t=e.sourceLayer.getOutputAt(n)}return t}var ar=class extends je{constructor(e){super({});if(this.containerNodes=new Set,this.name=e.name,this.name==null){let y=this.getClassName().toLowerCase();this.name=pm(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],os(this.inputs).length!==this.inputs.length)throw new V(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);os(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let b=y.sourceLayer,x=y.nodeIndex,v=y.tensorIndex;this.outputLayers.push(b),this.outputLayersNodeIndices.push(x),this.outputLayersTensorIndices.push(v)}for(let y of this.inputs){let b=y.sourceLayer,x=y.nodeIndex,v=y.tensorIndex;Za(x===0,"input layer has >1 nodes"),Za(v===0,"input layer has >1 tensors"),this.inputLayers.push(b),this.inputLayersNodeIndices.push(x),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let b=this.inputLayers[y];if(!(b instanceof nu))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${b.getClassName()}.`);this.inputNames.push(b.name),this.feedInputShapes.push(b.batchInputShape),this.feedInputNames.push(b.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let t={},n={},a={},r={},s={},i=[],o=(y,b,x,v,k,w)=>{(v==null||k==null||w==null)&&(v=y.sourceLayer,k=y.nodeIndex,w=y.tensorIndex);let S=v.inboundNodes[k];if(x.indexOf(S)!==-1)throw new _a(`The tensor ${y.name} at layer "${v.name}" is part of a cycle.`);if(b.indexOf(S)!==-1)return;this.containerNodes.add(ar.nodeKey(v,k)),v.id in s||(s[v.id]=Object.keys(s).length),x.indexOf(S)===-1&&x.push(S);let A=S.inboundLayers.length;for(let F=0;F<A;F++){let D=S.inputTensors[F],R=S.inboundLayers[F],L=S.nodeIndices[F],W=S.tensorIndices[F];o(D,b,x,R,L,W)}for(b.push(S);x.indexOf(S)>=0;)x.splice(x.indexOf(S),1);i.push(S)},l=[],u=[];for(let y of this.outputs)o(y,l,u);let c=i.slice().reverse();for(let y of c){n[y.id]=y,y.id in t||(t[y.id]=0);let b=t[y.id],x=a[y.outboundLayer.id]==null?0:a[y.outboundLayer.id];b=Math.max(b,x),a[y.outboundLayer.id]=b,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=b;for(let v=0;v<y.inboundLayers.length;v++){let k=y.inboundLayers[v],w=y.nodeIndices[v],S=k.inboundNodes[w],A=t[S.id]==null?0:t[S.id];t[S.id]=Math.max(b+1,A),n[S.id]=S}}let p={};for(let y in t){let b=t[y];b in p||(p[b]=[]),p[b].push(n[y])}let d={};for(let y in a){let b=a[y];b in d||(d[b]=[]),d[b].push(r[y])}let h=Object.keys(d).map(y=>parseInt(y,10)).sort(em);this.layers=[];for(let y of h){let b=d[y];b.sort((x,v)=>{let k=s[x.id],w=s[v.id];return k<w?-1:k>w?1:0});for(let x of b)x instanceof ar&&this.internalContainerRefs.push(x),this.layers.push(x)}this.layersByDepth=d,h=Object.keys(p).map(y=>parseInt(y,10)).sort(em);let m=this.inputs.slice(),f=[];for(let y of h)for(let b of p[y]){let x=b.outboundLayer;if(x!=null){for(let v of b.inputTensors)if(m.indexOf(v)===-1)throw new _a(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${x.name}". The following previous layers were accessed without issue: ${f}`);for(let v of b.outputTensors)m.push(v);f.push(x.name)}}this.nodesByDepth=p;let g=this.layers.map(y=>y.name);for(let y of g){let b=g.filter(x=>x===y).length;if(b!==1)throw new _a(`The name "${y}" is used ${b} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new mm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new V("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},a=0;for(let s of this.layers)for(let i of s.weights){if(n[i.originalName]!=null)throw new V(`Duplicate weight name: ${i.originalName}`);n[i.originalName]=i,a++}let r=[];for(let s in e){let i=s;if(n[s]==null){let o=s.split("/");i=o.slice(0,-2).concat([o[o.length-1]]).join("/")}if(n[i]!=null)r.push([n[i],e[s]]);else if(t)throw new V(`Provided weight data has no target variable: ${s}`);delete n[i]}if(t){let s=[];for(let i in n)s.push(i);if(s.length>0)throw new V(`${s.length} of ${a} weights are not set: ${s}`)}Yb(r)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Im}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=ax(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return M(()=>{e=yt(e);let n=new Hi;for(let a=0;a<this.inputs.length;++a)n.add(this.inputs[a],e[a]);return tp(this.outputs,n,t)})}computeMask(e,t){return M(()=>{e=yt(e);let n;return t==null?n=zi(null,e.length):n=yt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=dm(e);if(t.length!==this.inputLayers.length)throw new V(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let o=this.inputLayers[i],l=t[i],u=o.name+"_0_0";n[u]=l}let a=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(em);if(a.length>1)for(let i of a){let o=this.nodesByDepth[i];for(let l of o){let u=l.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(u.id)!==-1)continue;let c=[];for(let m=0;m<l.inboundLayers.length;m++){let f=l.inboundLayers[m],g=l.nodeIndices[m],y=l.tensorIndices[m],b=`${f.name}_${g}_${y}`,x=n[b];c.push(x)}let p=u.computeOutputShape(An(c)),d=dm(p),h=u.inboundNodes.indexOf(l);for(let m=0;m<d.length;m++){let f=`${u.name}_${h}_${m}`;n[f]=d[m]}}}let r=[],s=[];for(let i=0;i<this.outputLayers.length;i++){let o=this.outputLayers[i],l=this.outputLayersNodeIndices[i],u=this.outputLayersTensorIndices[i],c=`${o.name}_${l}_${u}`;s.push(c)}for(let i=0;i<s.length;i++){let o=s[i];Za(o in n),r.push(n[o])}return An(r)}runInternalGraph(e,t){t==null&&(t=zi(null,e.length));let n={};for(let o=0;o<this.inputs.length;++o){let l=this.inputs[o],u=e[o],c=t[o];n[l.id]=[u,c]}let a=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(em);for(let o of a){let l=this.nodesByDepth[o];for(let u of l){let c=u.outboundLayer,p=u.inputTensors,d=u.outputTensors,h=new Array;for(let m of p)m.id in n&&h.push(n[m.id]);if(h.length===p.length){let m={},f,g,y,b;if(u.callArgs!=null&&(m=u.callArgs),h.length===1){let[x,v]=h[0];m.mask==null&&(m.mask=v),y=yt(c.call(x,m)),b=yt(c.computeMask(x,v)),f=[x],g=[v]}else f=h.map(x=>x[0]),g=h.map(x=>x[1]),m.mask==null&&(m.mask=g),y=yt(c.call(f,m)),b=yt(c.computeMask(f,g));if(c.activityRegularizer)throw new $e("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let x=0;x<d.length;++x){let v=d[x],k=y[x],w=b[x];n[v.id]=[k,w]}}}}let r=[],s=[],i=[];for(let o of this.outputs){Za(o.id in n,`Could not compute output ${o.name} : ${o.id}`);let[l,u]=n[o.id];i.push(l.shape),r.push(l),s.push(u)}return[r,s,i]}buildNodeConversionMap(e){let t={},n;for(let a of this.layers){n=a instanceof ar?1:0;for(let r=0;r<a.inboundNodes.length;r++){let s=ar.nodeKey(a,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new V(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new V("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new V(`No such layer: ${e}`)}calculateLosses(){return M(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let a=ar.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let s of this.layers){let i=s.getClassName(),o=s.getConfig(),l=[];for(let c=0;c<s.inboundNodes.length;c++){let p=s.inboundNodes[c],d=ar.nodeKey(s,c),h={};if(this.containerNodes.has(d)){if(p.callArgs)try{JSON.stringify(p.callArgs),h=p.callArgs}catch(m){console.warn(`Layer ${s.name} was passed non-serializable keyword arguments: ${p.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(p.inboundLayers.length>0){let m=[];for(let f=0;f<p.inboundLayers.length;f++){let g=p.inboundLayers[f],y=p.nodeIndices[f],b=p.tensorIndices[f],x=ar.nodeKey(g,y),v=t[x];v==null&&(v=0),m.push([g.name,v,b,h])}l.push(m)}}}let u={};u.name=s.name,u.className=i,u.config=o,u.inboundNodes=l,n.push(u)}e.layers=n;let a=[];for(let s=0;s<this.inputLayers.length;s++){let i=this.inputLayers[s],o=this.inputLayersNodeIndices[s],l=ar.nodeKey(i,o);if(!this.containerNodes.has(l))continue;let u=t[l];u==null&&(u=0);let c=this.inputLayersTensorIndices[s];a.push([i.name,u,c])}e.inputLayers=a;let r=[];for(let s=0;s<this.outputLayers.length;s++){let i=this.outputLayers[s],o=this.outputLayersNodeIndices[s],l=ar.nodeKey(i,o);if(!this.containerNodes.has(l))continue;let u=t[l];u==null&&(u=0);let c=this.outputLayersTensorIndices[s];r.push([i.name,u,c])}return e.outputLayers=r,e}static fromConfig(e,t,n={},a=!1){let r={},s={};function i(f,g){f.name in s?s[f.name].push(g):s[f.name]=[g]}function o(f,g){let y=[],b;for(let x of g){let v=x[0],k=x[1],w=x[2];if(b=x[3]==null?{}:x[3],!(v in r)){i(f,g);return}let S=r[v];if(S.inboundNodes.length<=k){i(f,g);return}let A=S.inboundNodes[k];y.push(A.outputTensors[w])}y.length>0&&f.apply(An(y),b)}function l(f){let g=f.name,y=Da(f,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(a),r[g]=y,f.inboundNodes.forEach(b=>{if(!(b instanceof Array))throw new V(`Corrupted configuration, expected array for nodeData: ${b}`);i(y,b)})}let u=t.name,c=t.layers;for(let f of c)l(f);for(;!mz(s);)for(let f of c){let g=r[f.name];if(g.name in s){let y=s[g.name];delete s[g.name];for(let b of y)o(g,b)}}let p=[],d=[],h=t.inputLayers;for(let f of h){let g=f[0],y=f[1],b=f[2];Za(g in r);let x=r[g].inboundNodes[y].outputTensors;p.push(x[b])}let m=t.outputLayers;for(let f of m){let g=f[0],y=f[1],b=f[2];Za(g in r);let x=r[g].inboundNodes[y].outputTensors;d.push(x[b])}return new e({inputs:p,outputs:d,name:u})}get stateful(){if(this._stateful)throw new V("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){M(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function UB(e,t,n){let a=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>null);if(a===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${a} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let r=[];return t.forEach(s=>{s in e?r.push(e[s]):r.push(null)}),r}else throw new Error(`The model has multiple (${a}) outputs, so ${n} must be either an array with ${a} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function pI(e,t){return UB(e,t,"classWeight")}async function dI(e,t,n,a){if(t!=null||a!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let r=M(()=>{if(e.shape.length===1)return e.clone();if(e.shape.length===2)if(e.shape[1]>1){let o=1;return e.argMax(o)}else{if(e.shape[1]===1)return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await r.data());Ee(r);let i=[];return s.forEach(o=>{if(n[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(n[o])}),Ze(i,"float32")}else return null}function GB(e,t){return B(e,t)}var HB=32;function mI(e,t){let n,a,r=t;n=r.xs,a=r.ys,I.assert(n!=null&&a!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=hI("input",e.inputNames,n),i=hI("output",e.outputNames,a),o=s[0].shape[0];I.assert(s.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),I.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<s.length;l++)I.assert(s[l].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${s[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let l=0;l<i.length;l++)I.assert(i[l].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:s,ys:i}}function hI(e,t,n){if(n instanceof Fe)return[n];if(Array.isArray(n))return I.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let a=[];for(let r of t){if(n[r]==null)throw new V(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);a.push(n[r])}return a}}function jB(e){if(e.length===3)throw new $e("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function XB(e,t,n){let a=n.batchesPerEpoch!=null;if(I.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),I.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),I.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),I.assert(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),I.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let r=n.validationData!=null,s,i;if(r)if(fI(n.validationData))I.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=jB(n.validationData);s=g.xs,i=g.ys}let o=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),u;r?u=l.slice().concat(l.map(g=>"val_"+g)):u=l.slice();let c=Zk(n.callbacks,n.yieldEvery),p=n.verbose==null?1:n.verbose,{callbackList:d,history:h}=eI(c,p,n.epochs,null,null,qB(t,n),null,r,u);d.setModel(e),e.history=h,await d.onTrainBegin(),e.stopTraining_=!1;let m=n.initialEpoch==null?0:n.initialEpoch,f=await t.iterator();for(;m<n.epochs;){let g={};await d.onEpochBegin(m);let y=0,b=0;for(a||(f=await t.iterator());a?y<n.batchesPerEpoch:!0;){let x=await f.next();if(a&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:v,ys:k}=mI(e,x.value),w={};w.batch=b,w.size=v[0].shape[0],await d.onBatchBegin(b,w);let S=[];if(n.classWeight!=null){let D=pI(n.classWeight,e.outputNames);for(let R=0;R<D.length;++R)S.push(await dI(k[R],null,D[R]))}let A=v.concat(k).concat(S),F=o(A);Ee(A);for(let D=0;D<l.length;++D){let R=l[D],L=F[D];w[R]=L,qt(L)}await d.onBatchEnd(b,w),Xk(w),b++,y++}if(a?y>=n.batchesPerEpoch:x.done){if(r){let v;fI(n.validationData)?v=yt(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):v=yt(e.evaluate(s,i,{batchSize:n.validationBatchSize==null?HB:n.validationBatchSize,verbose:0}));for(let k=0;k<e.metricsNames.length;++k)g[`val_${e.metricsNames[k]}`]=v[k]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(m,g),m++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function qB(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function fI(e){return typeof e.iterator=="function"}function KB(e){return typeof e.next=="function"}async function YB(e,t,n){n=n||{};let a=n.batches!=null,r=e.testFunction,s=[];if(n.verbose>0)throw new $e("Verbose mode is not implemented yet.");I.assert(!a||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let i=KB(t)?t:await t.iterator(),o=0,l=0;for(;a?l<n.batches:!0;){let u=await i.next();if(s=M(()=>{if(u.value){let{xs:c,ys:p}=mI(e,u.value),d=c.concat(p),h=M(()=>r(d));if(Ee(d),l===0)for(let f=0;f<h.length;++f)s.push(ce(0));let m=d[0].shape[0];for(let f=0;f<h.length;++f){let g=h[f],y=s[f];s[f]=M(()=>J(s[f],B(m,g))),l>0&&Ee(y)}Ee(h),o+=m,++l}return s}),u.done){a&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let c=s[u];s[u]=xe(s[u],o),Ee(c)}return An(s)}function sx(e){I.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function np(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(a=>Ui(a,t,n-t)):Ui(e,t,n-t)}function ix(e,t){return M(()=>e==null?null:Array.isArray(e)?e.map(n=>ix(n,t)):Dk(e,t.dtype==="int32"?t:t.toInt()))}function ox(e,t){let n=[],a=0,r=null;for(;a<e;)r=a+t,r>=e&&(r=e),n.push([a,r]),a=r;return n}async function JB(e,t,n,a,r,s,i,o,l,u,c,p,d,h,m){r==null&&(r=32),s==null&&(s=1),c==null&&(c=!0),d==null&&(d=0);let f=!1;if(l!=null&&u!=null&&(f=!0),m!=null&&(f=!0,h==null))throw new V("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,r,h,"steps_per_epoch"),y;g!=null&&(y=Ea(0,g)),i==null&&(i=1);let{callbackList:b,history:x}=eI(o,i,s,d,g,h,r,f,p);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let v=d;v<s;++v){await b.onEpochBegin(v);let k={};if(h!=null)throw new $e("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new $e("batch shuffling is not implemneted yet");c&&I.shuffle(y);let w=Ze(y),S=ox(g,r);for(let A=0;A<S.length;++A){let F={};if(await b.onBatchBegin(A,F),M(()=>{let D=S[A][0],R=S[A][1],L=Ui(w,D,R-D);F.batch=A,F.size=R-D;let W=ix(n,L),U=t(W);for(let G=0;G<a.length;++G){let X=a[G],j=U[G];F[X]=j,qt(j)}if(A===S.length-1&&f){let G=e.testLoop(l,u,r);for(let X=0;X<a.length;++X){let j=a[X],te=G[X];qt(te),k["val_"+j]=te}}}),await b.onBatchEnd(A,F),Xk(F),e.stopTraining_)break}w.dispose()}if(await b.onEpochEnd(v,k),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}async function QB(e,t,n,a={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let r,s,i,o,l,u,c;try{let p=a.batchSize==null?32:a.batchSize;sx(p);let d=!1,h=await e.standardizeUserData(t,n,a.sampleWeight,a.classWeight,d,p);r=h[0],s=h[1],c=h[2];let m=!1,f;if(a.validationData!=null&&a.validationData.length>0){if(m=!0,a.validationData.length===2)i=a.validationData[0],o=a.validationData[1];else throw a.validationData.length===3?new $e("validationData including sample weights is not supported yet."):new V(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${a.validationData} is invalid.`);let w=!0,S=await e.standardizeUserData(i,o,null,null,w,p);l=S[0],u=S[1],f=l.concat(u)}else if(a.validationSplit!=null&&a.validationSplit>0&&a.validationSplit<1){m=!0;let w=Math.floor(r[0].shape[0]*(1-a.validationSplit)),S=r[0].shape[0];l=np(r,w,S),r=np(r,0,w),u=np(s,w,S),s=np(s,0,w),f=l.concat(u)}else a.validationSteps!=null&&(m=!0);let g=r.concat(s).concat(c);e.checkTrainableWeightsConsistency();let y=e.makeTrainFunction(),b=e.getDedupedMetricsNames(),x,v;m?(e.makeTestFunction(),x=e.testFunction,v=b.slice().concat(b.map(w=>"val_"+w))):(x=null,f=[],v=b.slice());let k=Zk(a.callbacks,a.yieldEvery);return await JB(e,y,g,b,p,a.epochs,a.verbose,k,x,f,a.shuffle,v,a.initialEpoch,null,null)}finally{e.isTraining=!1,ji(r,t),ji(s,n),ji(l,i),ji(u,o),c!=null&&Ee(c)}}function gI(e){let t=[];e instanceof Fe&&(e=[e]);for(let n=0;n<e.length;++n){let a=e[n];if(a.rank===1)t.push(Kc(a,1));else{if(a.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function ji(e,t){if(e==null)return;let n=[];if(t instanceof Fe)n.push(t.id);else if(Array.isArray(t))t.forEach(r=>n.push(r.id));else if(t!=null)for(let r in t){let s=t[r];n.push(s.id)}let a=[];if(e instanceof Fe)n.indexOf(e.id)===-1&&a.push(e);else if(Array.isArray(e))e.forEach(r=>{n.indexOf(r.id)===-1&&a.push(r)});else if(e!=null)for(let r in e){let s=e[r];n.indexOf(s.id)===-1&&a.push(s)}a.forEach(r=>{r.isDisposed||r.dispose()})}function ZB(e){return e instanceof Fe}function lx(e){return Array.isArray(e)}function yI(e){return!ZB(e)&&!lx(e)}function bI(e,t,n,a=!0,r=""){if(t==null||t.length===0){if(e!=null){let i=!1;if(lx(e)&&e.length>0)i=!0;else if(yI(e)){for(let o in e)if(e.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new V(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(i=>null);let s;if(yI(e)){e=e,s=[];for(let i of t){if(e[i]==null)throw new V(`No data provided for "${i}". Need data for each key in: ${t}`);s.push(e[i])}}else if(lx(e)){if(e=e,e.length!==t.length)throw new V(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new V(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=gI(s),n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=s[i];if(o.shape.length!==n[i].length)throw new V(`Error when checking ${r}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<n[i].length;++l){if(l===0&&!a)continue;let u=o.shape[l],c=n[i][l];if(c!=null&&c>=0&&u!==c)throw new V(`Error when checking ${r}: expected ${t[i]} to have shape [${n[i]}], but got array with shape [${o.shape}].`)}}return s}function e4(e,t,n){let a=os(e.map(s=>s.shape[0]));a.sort();let r=os(t.map(s=>s.shape[0]));if(r.sort(),a.length>1)throw new V(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(r.length>1)throw new V(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(a.length>0&&r.length>0&&!I.arraysEqual(a,r))throw new V(`Input Tensors should have the same number of samples as target Tensors. Found ${a[0]} input sample(s) and ${r[0]} target sample(s).`)}function t4(e,t,n){let a=[Gi,bm,Zc];for(let r=0;r<e.length;++r){let s=e[r],i=t[r],o=n[r];if(i!=null){if(i===Zc&&s.shape[s.shape.length-1]===1)throw new V(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(a.indexOf(i)!==-1){let l=s.shape.slice(1),u=o.slice(1);for(let c=0;c<l.length;++c){let p=l[c],d=u[c];if(d!=null&&p!==d)throw new V(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function xI(e,t,n,a=!0,r=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new V(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new V(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=s[i];if(o.shape.length!==n[i].length)throw new V(`Error when checking ${r}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<n[i].length;++l){if(l===0&&!a)continue;let u=o.shape[l],c=n[i][l];if(c!=null&&c!==u)throw new V(`Error when checking ${r}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function n4(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(a=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(a=>n);{let a=[];for(let r of t){let s=n.hasOwnProperty(r)?n[r]:[];Array.isArray(s)||(s=[s]),a.push(s)}return a}}var a4="layers-model",Nr=class extends ar{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new V("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");LB(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=DB(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof wr))throw new V("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let s in e.loss)if(this.outputNames.indexOf(s)===-1)throw new V(`Unknown entry in loss dictionary: "${s}". Only expected the following keys: ${this.outputNames}`);for(let s of this.outputNames)e.loss[s]==null&&console.warn(`Output "${s}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${s} during training`),t.push(Qb(e.loss[s]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new V(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(s=>Qb(s))}else{let s=Qb(e.loss);this.outputs.forEach(i=>{t.push(s)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){let i=this.internalOutputShapes[s],o=this.outputNames[s];this.feedOutputNames.push(o),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[s])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Vi("loss",()=>{for(let s=0;s<this.outputs.length;++s){if(n.indexOf(s)!==-1)continue;let i=this.lossFunctions[s];this.outputs.length>1&&(this.metricsTensors.push([i,s]),this.metricsNames.push(this.outputNames[s]+"_loss"))}});let a=n4(e.metrics,this.outputNames),r=(s,i,o)=>{this.outputNames.length>1&&(i=this.outputNames[s]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([o,s])};Vi("metric",()=>{for(let s=0;s<this.outputs.length;++s){if(n.indexOf(s)!==-1)continue;let i=a[s];(o=>{let l="",u,c,p;for(let d of o){if(typeof d=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(d)!==-1){let m=this.internalOutputShapes[s];m[m.length-1]===1||this.lossFunctions[s]===bm?["accuracy","acc"].indexOf(d)!==-1?c=Zb:["crossentropy","ce"].indexOf(d)!==-1&&(c=aI):this.lossFunctions[s]===ym?["accuracy","acc"].indexOf(d)!==-1?c=rI:["crossentropy","ce"].indexOf(d)!==-1&&(c=sI):["accuracy","acc"].indexOf(d)!==-1?c=ex:["crossentropy","ce"].indexOf(d)!==-1&&(c=tx);let f;["accuracy","acc"].indexOf(d)!==-1?f="acc":["crossentropy","ce"].indexOf(d)!==-1&&(f="ce"),p=c,u=l+f}else p=$B(d),u=l+wm(d);let h;Vi(u,()=>{h=p}),r(s,u,h)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let a=n.batchSize==null?32:n.batchSize;sx(a);let r=!0,s=this.standardizeUserDataXY(e,t,r,a);try{let i=s[0].concat(s[1]);this.makeTestFunction();let o=this.testFunction,l=this.testLoop(o,i,a,n.verbose,n.steps);return An(l)}finally{ji(s[0],e),ji(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),YB(this,e,t)}checkNumSamples(e,t,n,a="steps"){let r;if(n!=null){if(r=null,t!=null)throw new V(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new V(`Either the input data should have a defined shape, or ${a} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new V("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),a=n?t:[t],r=this.retrieveSymbolicTensors(a),s=new Hi;if(e instanceof Fe&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new V(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let o=0;o<this.inputs.length;++o)s.add(this.inputs[o],e[o])}else for(let o of this.inputs){let l=e[o.name];if(l==null)throw new V(`No value is provided for the model's input ${o.name}`);s.add(o,l)}let i=tp(r,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=zi(null,e.length),n=e.length;for(let a of this.layers){let r=Array.isArray(a.output)?a.output:[a.output],s=r.map(i=>i.name);for(let i=0;i<e.length;++i){let o=s.indexOf(e[i]);if(o!==-1&&(t[i]=r[o],n--),n===0)break}if(n===0)break}if(n>0){let a=[];throw t.forEach((r,s)=>{r==null&&a.push(e[s])}),new V(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(a)}`)}return t}predictLoop(e,t=32,n=!1){return M(()=>{let a=this.checkNumSamples(e);if(n)throw new $e("Verbose predictLoop() is not implemented yet.");let r=ox(a,t),s=this.outputs.map(i=>[]);for(let i=0;i<r.length;++i)M(()=>{let o=r[i][0],l=r[i][1],u=np(e,o,l),c=[];if(Array.isArray(u))for(let d=0;d<u.length;++d)c.push({key:this.inputs[d],value:u[d]});else c.push({key:this.inputs[0],value:u});let p=new Hi(c);return tp(this.outputs,p)}).forEach((o,l)=>s[l].push(o));return An(s.map(i=>Je(i,0)))})}predict(e,t={}){let n=gI(e);xI(n,this.inputNames,this.feedInputShapes,!1);try{let a=t.batchSize==null?32:t.batchSize;return sx(a),this.predictLoop(n,a)}finally{ji(n,e)}}predictOnBatch(e){xI(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,a){if(this.optimizer_==null)throw new _a("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let s=0;s<this.feedOutputShapes.length;++s){let i=this.feedOutputShapes[s];this.feedLossFns[s]===ym?r.push(i.slice(0,i.length-1).concat([1])):r.push(i)}if(e=bI(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=bI(t,this.feedOutputNames,r,!1,"target"),e4(e,t,null),t4(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&a!=null&&a>0&&e[0].shape[0]%a!=0)throw new V(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,a,r=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,r,s);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(a!=null){let u=pI(a,this.outputNames);l=[];for(let c=0;c<u.length;++c)l.push(await dI(o[c],null,u[c]))}return[i,o,l]}testLoop(e,t,n,a=0,r){return M(()=>{let s=this.checkNumSamples(t,n,r,"steps"),i=[];if(a>0)throw new $e("Verbose mode is not implemented yet.");if(r!=null)throw new $e("steps mode in testLoop() is not implemented yet");{let o=ox(s,n),l=Ze(Ea(0,s));for(let u=0;u<o.length;++u){let c=o[u][0],p=o[u][1],d=Ui(l,c,p-c),h=ix(t,d),m=e(h);if(u===0)for(let f=0;f<m.length;++f)i.push(ce(0));for(let f=0;f<m.length;++f){let g=m[f];i[f]=J(i[f],B(p-c,g))}}for(let u=0;u<i.length;++u)i[u]=xe(i[u],s)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let a=e[n],r=a;vk(e,a)>1&&(r+=`_${vk(e.slice(0,n),a)}`),t.push(r)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),s=[],i=()=>{let u=[];for(let h=0;h<this.inputs.length;++h)u.push({key:this.inputs[h],value:n[h]});let c=new Hi(u),p=tp(this.outputs,c,{training:!0}),d;for(let h=0;h<this.lossFunctions.length;++h){let m=this.lossFunctions[h](a[h],p[h]);r[h]!=null&&(m=GB(m,r[h]));let f=Ct(m);t.push(f),h===0?d=m:d=J(d,m)}for(let h=0;h<this.metricsTensors.length;++h){let m;if(this.outputs.length>1&&h<this.outputs.length)m=t[h];else{let f=this.metricsTensors[h][0],g=this.metricsTensors[h][1];m=Ct(f(a[g],p[g]))}qt(m),s.push(m)}return d=Ct(d),this.calculateLosses().forEach(h=>{d=J(d,h)}),d},o=this.collectedTrainableWeights.map(u=>u.read()),l=!0;return[this.optimizer_.minimize(i,l,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>M(()=>{let t=[],n,a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let l=0;l<this.inputs.length;++l)s.push({key:this.inputs[l],value:a[l]});let i=new Hi(s),o=tp(this.outputs,i);for(let l=0;l<this.lossFunctions.length;++l){let u=this.lossFunctions[l],c=Ct(u(r[l],o[l]));l===0?n=c:n=J(n,c),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let u=this.metricsTensors[l][0],c=this.metricsTensors[l][1],p=Ct(u(r[c],o[c]));t.push(p)}return t})}async fit(e,t,n={}){return QB(this,e,t,n)}async fitDataset(e,t){return XB(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),a=n[0],r=n[1],s=this.makeTrainFunction()(a.concat(r)),i=[];for(let o of s){let l=await o.data();i.push(l[0])}return Ee(s),An(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let s=0;s<a.length;++s)n&&!a[s].trainable||t.push({name:a[s].originalName,tensor:r[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=mh().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-mh().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Ir(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Ir(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let a of t)if(typeof n[a]=="string")e[a]=Ir(n[a]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Ir(wm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Ir(wm(e)));{let e={};for(let t in this.metrics)e[t]=Ir(wm(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=ep(e.optimizer_config),n=Da(t),a;if(typeof e.loss=="string")a=Wi(e.loss);else if(Array.isArray(e.loss))a=e.loss.map(s=>Wi(s));else if(e.loss!=null){a={};for(let s in e.loss)a[s]=Wi(e.loss[s])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(s=>Wi(s));else if(e.metrics!=null){r={};for(let s in e.metrics)r[s]=Wi(e.metrics[s])}this.compile({loss:a,metrics:r,optimizer:n})}async save(e,t){if(typeof e=="string"){let i=jt.getSaveHandlers(e);if(i.length===0)throw new V(`Cannot find any save handlers for URL '${e}'`);if(i.length>1)throw new V(`Found more than one (${i.length}) save handlers for URL '${e}'`);e=i[0]}if(e.save==null)throw new V("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await jt.encodeWeights(this.getNamedWeights(t)),a=!1,r=null,s={modelTopology:this.toJSON(r,a),format:a4,generatedBy:`TensorFlow.js tfjs-layers v${Im}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){s.trainingConfig=this.getTrainingConfig();let i="optimizer",{data:o,specs:l}=await jt.encodeWeights(await this.optimizer.getWeights(),i);n.specs.push(...l),n.data=jt.concatenateArrayBuffers([n.data,o])}if(this.userDefinedMetadata!=null){let i=!0;oI(this.userDefinedMetadata,this.name,i),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=n.data,s.weightSpecs=n.specs,e.save(s)}setUserDefinedMetadata(e){oI(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};Nr.className="Model";re.registerClass(Nr);var vI=class extends Nr{};vI.className="Functional";re.registerClass(vI);async function r4(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let a=ep(n),r=Da(a,t);if(e.weightsManifest!=null){let s=await jt.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(o=>o.originalName)),i={};for(let o of r.weights)i[o.originalName]=s[o.originalName];r.loadWeights(i),Ee(s)}return r}async function i4(e,t){if(t==null&&(t={}),typeof e=="string"){let n=jt.getLoadHandlers(e,t);if(n.length===0)n.push(jt.browserHTTPRequest(e,t));else if(n.length>1)throw new V(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return s4(e,void 0,t)}async function s4(e,t,n){if(n==null&&(n={}),e.load==null)throw new V("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let a=await e.load(),r=a.modelTopology;r.model_config!=null&&(r=r.model_config);let s=n.strict==null?!0:n.strict,i=a.weightData!=null&&a.weightSpecs!=null&&s,o=Da(ep(r),t,i),l=a.trainingConfig;if(l!=null&&o.loadTrainingConfig(l),a.userDefinedMetadata!=null&&o.setUserDefinedMetadata(a.userDefinedMetadata),a.weightData!=null){if(a.weightSpecs==null)throw new V("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:u,optimizerWeights:c}=o4(a.weightData,a.weightSpecs);o.loadWeights(u,s),o.optimizer!=null&&c.length>0&&await o.optimizer.setWeights(c),Ee(u),Ee(c.map(p=>p.tensor))}return o}function o4(e,t){let n=jt.decodeWeights(e,t),a={},r=[];return t.forEach(s=>{s.group==="optimizer"?r.push({name:s.name,tensor:n[s.name]}):a[s.name]=n[s.name]}),{modelWeights:a,optimizerWeights:r}}var su=class extends Nr{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:pm("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new V(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof su||e instanceof Nr,n;if(t){if(n=e,n.outputs.length!==1)throw new V("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new V("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new V("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let a=qk({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(a)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new V(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new V("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=jk(this.outputs[0])}this.inboundNodes=[],new mm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:zi(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(a=>a.shape),outputShapes:this.outputs[0].shape})}else{let a=e.apply(this.outputs[0]);if(Array.isArray(a))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[a],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(pt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Nr({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new _a("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new _a("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new _a("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new _a("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},a=!1){let r,s={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new V("Legacy serialization format not supported yet.");r=t}else I.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof su))throw new $e(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let o of r){let l=Da(o,void 0,a);a&&l.setFastWeightInitDuringBuild(!0),i.add(l)}return i}set stopTraining(e){if(this.model==null)throw new V("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new V("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};su.className="Sequential";re.registerClass(su);function l4(e){return new Nr(e)}function u4(e){return new su(e)}function c4(e,t){return t==null&&(t={}),i4(e,t)}function Lk(e){return qk(e)}function p4(e,t){ya.registerCallbackConstructor(e,t)}var Wn=class extends re.Serializable{getConfig(){return{}}},wI=class extends Wn{apply(e,t=1){return Uz(e,t)}};wI.className="elu";re.registerClass(wI);var kI=class extends Wn{apply(e){return Mh(e)}};kI.className="selu";re.registerClass(kI);var II=class extends Wn{apply(e){return qe(e)}};II.className="relu";re.registerClass(II);var NI=class extends Wn{apply(e){return M(()=>Xl(6,qe(e)))}};NI.className="relu6";re.registerClass(NI);var TI=class extends Wn{apply(e){return e}};TI.className="linear";re.registerClass(TI);var SI=class extends Wn{apply(e){return da(e)}};SI.className="sigmoid";re.registerClass(SI);var CI=class extends Wn{apply(e){return Hz(e)}};CI.className="hardSigmoid";re.registerClass(CI);var AI=class extends Wn{apply(e){return jl(e)}};AI.className="softplus";re.registerClass(AI);var FI=class extends Wn{apply(e){return Gz(e)}};FI.className="softsign";re.registerClass(FI);var _I=class extends Wn{apply(e){return Ul(e)}};_I.className="tanh";re.registerClass(_I);var ux=class extends Wn{apply(e,t=-1){return Sa(e,t)}};ux.className="softmax";re.registerClass(ux);var EI=class extends Wn{apply(e,t=-1){return Ch(e,t)}};EI.className="logSoftmax";re.registerClass(EI);var $I=class extends Wn{apply(e,t=1){return M(()=>da(e.mul(t)).mul(e))}};$I.className="swish";re.registerClass($I);function ps(e){return e.getClassName()}function cx(e,t={}){return Hc(e,re.SerializationMap.getMap().classNameMap,t,"activation")}function ds(e){if(e==null){let t={};return t.className="linear",t.config={},cx(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},cx(t)}else return e instanceof Wn?e:cx(e)}function px(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var DI=class extends re.Serializable{},ap=class extends DI{constructor(e){super();px(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return M(()=>{let t=vt([1]);return this.hasL1&&(t=J(t,Se(B(this.l1,zt(e))))),this.hasL2&&(t=J(t,Se(B(this.l2,Yc(e))))),t.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};ap.className="L1L2";re.registerClass(ap);function d4(e){return px(e),new ap({l1:e!=null?e.l1:null,l2:0})}function h4(e){return px(e),new ap({l2:e!=null?e.l2:null,l1:0})}var MI={l1l2:"L1L2"};function dt(e){return Sb(e)}function RI(e,t={}){return Hc(e,re.SerializationMap.getMap().classNameMap,t,"regularizer")}function kt(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in MI?MI[e]:e,config:{}};return RI(t)}else return e instanceof DI?e:RI(e)}var dx=class extends je{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Re(e);let n=qe(e);return this.maxValue!=null&&(n=Xt(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};dx.className="ReLU";re.registerClass(dx);var hx=class extends je{constructor(e){super(e==null?{}:e);this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Re(e);return Pc(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};hx.className="LeakyReLU";re.registerClass(hx);var mx=class extends je{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=wt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=kt(e.alphaRegularizer),this.alphaConstraint=Ut(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new V(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=pt(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let a of this.sharedAxes)t[a-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let a=1;a<e.length;++a)n[a]=e[a];this.inputSpec=[new Yt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Re(e),zc(e,this.alpha.read())}getConfig(){let e={alphaInitializer:At(this.alphaInitializer),alphaRegularizer:dt(this.alphaRegularizer),alphaConstraint:Vt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};mx.className="PReLU";re.registerClass(mx);var fx=class extends je{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new $e(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Re(e);return Gl(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};fx.className="ELU";re.registerClass(fx);var gx=class extends je{constructor(e){super(e==null?{}:e);this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Re(e);return n.mul(Xc(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};gx.className="ThresholdedReLU";re.registerClass(gx);var yx=class extends je{constructor(e){super(e==null?{}:e);this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new ux().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Re(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};yx.className="Softmax";re.registerClass(yx);function iu(e,t,n){if(typeof e=="number")return zi(e,t);if(e.length!==t)throw new V(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){let r=e[a];if(!zz(r))throw new V(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function Ma(e,t,n,a,r=1){if(e==null)return e;let s=t+(t-1)*(r-1),i;return n==="same"?i=e:i=e-s+1,Math.floor((i+a-1)/a)}function Nm(e,t,n,a){if(e==null)return null;if(a==="valid")e=e*t+us([n-t,0]);else if(a==="same")e=e*t;else throw new V(`Unsupport padding mode: ${a}.`);return e}function bx(e,t){return M(()=>(Mt(t),t==="channelsFirst"?Ve(e,[0,2,3,1]):e))}function PI(e,t){return M(()=>(Mt(t),t==="channelsFirst"?Ve(e,[0,2,3,4,1]):e))}function m4(e,t,n,a=1,r="valid",s,i=1){return M(()=>{if(s==null&&(s=Fa()),Mt(s),e.shape.length!==3)throw new V(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new V(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new V(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(s==="channelsFirst"&&(e=Ve(e,[0,2,1])),r==="causal")throw new $e("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=xh(e,t,a,r==="same"?"same":"valid","NWC",i);return n!=null&&(o=tr(o,n)),o})}function OI(e,t,n,a=[1,1],r="valid",s,i,o=null){return M(()=>{if(s==null&&(s=Fa()),Mt(s),e.rank!==3&&e.rank!==4)throw new V(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new V(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=bx(e,s);if(r==="causal")throw new $e("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=is.conv2d({x:l,filter:t,strides:a,pad:r==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),s==="channelsFirst"&&(l=Ve(l,[0,3,1,2])),l})}function f4(e,t,n,a=[1,1,1],r="valid",s,i){return M(()=>{if(s==null&&(s=Fa()),Mt(s),e.rank!==4&&e.rank!==5)throw new V(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new V(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=PI(e,s);if(r==="causal")throw new $e("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Ky(o,t,a,r==="same"?"same":"valid","NDHWC",i),n!=null&&(o=tr(o,n)),s==="channelsFirst"&&(o=Ve(o,[0,4,1,2,3])),o})}var xx=class extends je{constructor(e,t){super(t);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",xx.verifyArgs(t),this.rank=e,Kt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new $e(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=iu(t.kernelSize,e,"kernelSize"),this.strides=iu(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,na(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Mt(this.dataFormat),this.activation=ds(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=wt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ut(t.biasConstraint),this.biasRegularizer=kt(t.biasRegularizer),this.activityRegularizer=kt(t.activityRegularizer),this.dilationRate=iu(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new V(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new V(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new V(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Za("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Ab(e.kernelSize,"number",1,3))throw new V(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ps(this.activation),useBias:this.useBias,biasInitializer:At(this.biasInitializer),biasRegularizer:dt(this.biasRegularizer),activityRegularizer:dt(this.activityRegularizer),biasConstraint:Vt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},rp=class extends xx{constructor(e,t){super(e,t);this.kernel=null,rp.verifyArgs(t),this.filters=t.filters,Kt(this.filters,"filters"),this.kernelInitializer=wt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ut(t.kernelConstraint),this.kernelRegularizer=kt(t.kernelRegularizer)}build(e){e=pt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new V(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return M(()=>{e=Re(e);let n,a=this.bias==null?null:this.bias.read(),r=kk(this.activation.getClassName());if(r!=null&&this.rank===2)n=OI(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=m4(e,this.kernel.read(),a,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=OI(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=f4(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new $e("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=pt(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){let s=Ma(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(s)}let a=[e[0]];return this.dataFormat==="channelsLast"?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){let e={filters:this.filters,kernelInitializer:At(this.kernelInitializer),kernelRegularizer:dt(this.kernelRegularizer),kernelConstraint:Vt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new V(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},sp=class extends rp{constructor(e){super(2,e);sp.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Ab(e.kernelSize,"number",1,2))throw new V(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};sp.className="Conv2D";re.registerClass(sp);var Tm=class extends rp{constructor(e){super(3,e);Tm.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new V(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};Tm.className="Conv3D";re.registerClass(Tm);var vx=class extends sp{constructor(e){super(e);if(this.inputSpec=[new Yt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new V(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=pt(e),e.length!==4)throw new V("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new V("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Yt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return M(()=>{let n=Re(e);if(n.shape.length!==4)throw new V(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let a=n.shape,r=a[0],s,i;this.dataFormat==="channelsFirst"?(s=2,i=3):(s=1,i=2);let o=a[s],l=a[i],u=this.kernelSize[0],c=this.kernelSize[1],p=this.strides[0],d=this.strides[1],h=Nm(o,p,u,this.padding),m=Nm(l,d,c,this.padding),f=[r,h,m,this.filters];this.dataFormat!=="channelsLast"&&(n=Ve(n,[0,2,3,1]));let g=vh(n,this.kernel.read(),f,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=Ve(g,[0,3,1,2])),this.bias!=null&&(g=tr(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=pt(e);let t=e.slice(),n,a,r;this.dataFormat==="channelsFirst"?(n=1,a=2,r=3):(n=3,a=1,r=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[a]=Nm(t[a],o,s,this.padding),t[r]=Nm(t[r],l,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};vx.className="Conv2DTranspose";re.registerClass(vx);var LI=class extends rp{constructor(e,t){super(e,t);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new V("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new V("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new V(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=wt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=kt(t.depthwiseRegularizer),this.depthwiseConstraint=Ut(t.depthwiseConstraint),this.pointwiseInitializer=wt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=kt(t.pointwiseRegularizer),this.pointwiseConstraint=Ut(t.pointwiseConstraint)}build(e){if(e=pt(e),e.length<this.rank+2)throw new V(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new V(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let i=0;i<this.rank;++i)r.push(1);r.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Yt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return M(()=>{e=Re(e);let n;if(this.rank===1)throw new $e("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Ve(e,[0,2,3,1])),n=Pi(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=tr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Ve(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=At(this.depthwiseInitializer),e.pointwiseInitializer=At(this.pointwiseInitializer),e.depthwiseRegularizer=dt(this.depthwiseRegularizer),e.pointwiseRegularizer=dt(this.pointwiseRegularizer),e.depthwiseConstraint=Vt(this.depthwiseConstraint),e.pointwiseConstraint=Vt(this.pointwiseConstraint),e}};LI.className="SeparableConv";var wx=class extends LI{constructor(e){super(2,e)}};wx.className="SeparableConv2D";re.registerClass(wx);var Sm=class extends rp{constructor(e){super(1,e);Sm.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Ab(e.kernelSize,"number",1,1))throw new V(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};Sm.className="Conv1D";re.registerClass(Sm);var kx=class extends je{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return M(()=>{if(e=Re(e),this.dataFormat==="channelsLast"){let n=tm(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return tm(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=tm(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return tm(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};kx.className="Cropping2D";re.registerClass(kx);var Ix=class extends je{constructor(e){super(e);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Mt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,Pz(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return M(()=>{let n=Re(e),a=n.shape;if(this.dataFormat==="channelsFirst"){n=Ve(n,[0,2,3,1]);let r=this.size[0]*a[2],s=this.size[1]*a[3],i=this.interpolation==="nearest"?n.resizeNearestNeighbor([r,s]):n.resizeBilinear([r,s]);return Ve(i,[0,3,1,2])}else{let r=this.size[0]*a[1],s=this.size[1]*a[2];return this.interpolation==="nearest"?n.resizeNearestNeighbor([r,s]):n.resizeBilinear([r,s])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Ix.className="UpSampling2D";re.registerClass(Ix);function g4(e,t,n=[1,1],a="valid",r,s){return M(()=>{r==null&&(r=Fa()),Mt(r);let i=bx(e,r);if(e.rank!==4)throw new V(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new V(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=ns(i,t,n,a==="same"?"same":"valid","NHWC",s),r==="channelsFirst"&&(i=Ve(i,[0,3,1,2])),i})}var Nx=class extends xx{constructor(e){super(2,e);this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=wt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ut(e.depthwiseConstraint),this.depthwiseRegularizer=kt(e.depthwiseRegularizer)}build(e){if(e=pt(e),e.length<4)throw new V(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new V(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return M(()=>{e=Re(e);let n=g4(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=tr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=pt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],a=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Ma(t,this.kernelSize[0],this.padding,this.strides[0]),s=Ma(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],a,r,s]:[e[0],r,s,a]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=At(this.depthwiseInitializer),e.depthwiseRegularizer=dt(this.depthwiseRegularizer),e.depthwiseConstraint=Vt(this.depthwiseRegularizer),e}};Nx.className="DepthwiseConv2D";re.registerClass(Nx);function zI(e,t,n,a){if(Array.isArray(e)){if(t!=null||n!=null)throw new V("When inputs is an array, neither initialState or constants should be provided");a!=null&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(s){return s==null||Array.isArray(s)?s:[s]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function WI(e,t,n,a=!1,r,s,i=!1,o=!1){return M(()=>{let l=t.shape.length;if(l<3)throw new V(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(Ea(2,l));if(t=Ve(t,u),s!=null)throw new $e("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=r.asType("bool").asType("float32"),r.rank===l-1&&(r=Rn(r,-1)),r=Ve(r,u)),a&&(t=Ln(t,0),r!=null&&(r=Ln(r,0)));let c=[],p,d=n,h=t.shape[0],m=ct(t),f;r!=null&&(f=ct(r));for(let y=0;y<h;++y){let b=m[y],x=M(()=>e(b,d));if(r==null)p=x[0],d=x[1];else{let v=M(()=>{let k=f[y],w=On(k).sub(k),S=x[0].mul(k).add(d[0].mul(w)),A=d.map((F,D)=>x[1][D].mul(k).add(F.mul(w)));return{output:S,newStates:A}});p=v.output,d=v.newStates}o&&c.push(p)}let g;return o&&(g=Dt(c,1)),[p,g,d]})}var nr=class extends je{constructor(e){super(e);let t;if(e.cell==null)throw new V("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Cm({cells:e.cell}):t=e.cell,t.stateSize==null)throw new V("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Yt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Ea(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Xb(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],a;if(this.returnSequences?a=[e[0],e[1],n]:a=[e[0],n],this.returnState){let r=[];for(let s of t)r.push([e[0],s]);return[a].concat(r)}else return a}computeMask(e,t){return M(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let a=this.states.map(r=>null);return[n].concat(a)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){let t=null;if(this.numConstants!=null)throw new $e("Constants support is not implemented in RNN yet.");Xb(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,a=e.slice(2);this.inputSpec[0]=new Yt({shape:[n,null,...a]});let r=[e[0]].concat(e.slice(2));if(t!=null)throw new $e("Constants support is not implemented in RNN yet.");this.cell.build(r);let s;if(Array.isArray(this.cell.stateSize)?s=this.cell.stateSize:s=[this.cell.stateSize],this.stateSpec!=null){if(!I.arraysEqual(this.stateSpec.map(i=>i.shape[i.shape.length-1]),s))throw new V(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map(i=>new Yt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){M(()=>{if(!this.stateful)throw new kr("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new V("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>vt([n,a])):this.states_=[vt([n,this.cell.stateSize])];else if(e==null)Ee(this.states_),this.keptStates!=null&&(Ee(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>vt([n,a])):this.states_[0]=vt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new V(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Ee(this.states_);for(let a=0;a<this.states_.length;++a){let r=e[a],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[a]:this.cell.stateSize,i=[n,s];if(!I.arraysEqual(r.shape,i))throw new V(`State ${a} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[a]=r}}this.states_=this.states_.map(a=>qt(a.clone()))})}apply(e,t){let n=t==null?null:t.initialState,a=t==null?null:t.constants;t==null&&(t={});let r=zI(e,n,a,this.numConstants);e=r.inputs,n=r.initialState,a=r.constants;let s=[],i=[];if(n!=null){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(let o of n)this.stateSpec.push(new Yt({shape:o.shape}));i=i.concat(this.stateSpec)}if(a!=null&&(t.constants=a,s=s.concat(a),this.numConstants=a.length),s[0]instanceof $a){let o=[e].concat(s),l=this.inputSpec.concat(i),u=this.inputSpec;this.inputSpec=l;let c=super.apply(o,t);return this.inputSpec=u,c}else return super.apply(e,t)}call(e,t){return M(()=>{let n=t==null?null:t.mask,a=t==null?null:t.training,r=t==null?null:t.initialState;e=Re(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==s)throw new V(`RNN Layer has ${s} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:a},o=WI((d,h)=>{let m=this.cell.call([d].concat(h),i);return[m[0],m.slice(1)]},e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,a);let p=this.returnSequences?u:l;return this.returnState?[p].concat(c):p})}getInitialState(e){return M(()=>{let t=vt(e.shape);return t=Se(t,[1,2]),t=Kc(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?Mb(t,[1,n]):t):this.cell.stateSize>1?[Mb(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===nr.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){let a=t.cell,r=Da(a,n);return new e(Object.assign(t,{cell:r}))}};nr.className="RNN";re.registerClass(nr);var Qc=class extends je{},Am=class extends Qc{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Kt(this.units,"units"),this.activation=ds(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=wt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=kt(e.kernelRegularizer),this.recurrentRegularizer=kt(e.recurrentRegularizer),this.biasRegularizer=kt(e.biasRegularizer),this.kernelConstraint=Ut(e.kernelConstraint),this.recurrentConstraint=Ut(e.recurrentConstraint),this.biasConstraint=Ut(e.biasConstraint),this.dropout=tu([1,us([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=tu([1,us([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=pt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return M(()=>{if(e=e,e.length!==2)throw new V(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let a=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=hs({ones:()=>On(e),rate:this.dropout,training:a})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=hs({ones:()=>On(n),rate:this.recurrentDropout,training:a}));let r,s=this.dropoutMask,i=this.recurrentDropoutMask;s!=null?r=er(B(e,s),this.kernel.read()):r=er(e,this.kernel.read()),this.bias!=null&&(r=tr(r,this.bias.read())),i!=null&&(n=B(n,i));let o=J(r,er(n,this.recurrentKernel.read()));return this.activation!=null&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:ps(this.activation),useBias:this.useBias,kernelInitializer:At(this.kernelInitializer),recurrentInitializer:At(this.recurrentInitializer),biasInitializer:At(this.biasInitializer),kernelRegularizer:dt(this.kernelRegularizer),recurrentRegularizer:dt(this.recurrentRegularizer),biasRegularizer:dt(this.biasRegularizer),activityRegularizer:dt(this.activityRegularizer),kernelConstraint:Vt(this.kernelConstraint),recurrentConstraint:Vt(this.recurrentConstraint),biasConstraint:Vt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};Am.className="SimpleRNNCell";re.registerClass(Am);var Tx=class extends nr{constructor(e){e.cell=new Am(e),super(e)}call(e,t){return M(()=>{this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,a=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})})}static fromConfig(e,t){return new e(t)}};Tx.className="SimpleRNN";re.registerClass(Tx);var Fm=class extends Qc{constructor(e){super(e);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new V("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Kt(this.units,"units"),this.activation=ds(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ds(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=wt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=kt(e.kernelRegularizer),this.recurrentRegularizer=kt(e.recurrentRegularizer),this.biasRegularizer=kt(e.biasRegularizer),this.kernelConstraint=Ut(e.kernelConstraint),this.recurrentConstraint=Ut(e.recurrentConstraint),this.biasConstraint=Ut(e.biasConstraint),this.dropout=tu([1,us([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=tu([1,us([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=pt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return M(()=>{if(e=e,e.length!==2)throw new V(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=hs({ones:()=>On(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=hs({ones:()=>On(a),rate:this.recurrentDropout,training:n,count:3}));let r=this.dropoutMask,s=this.recurrentDropoutMask,i,o,l;0<this.dropout&&this.dropout<1&&(e=B(e,r[0]));let u=er(e,this.kernel.read());this.useBias&&(u=tr(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=B(a,s[0]));let c=this.recurrentKernel.read(),[p,d]=zn(c,[2*this.units,this.units],c.rank-1),h=er(a,p),[m,f,g]=zn(u,3,u.rank-1),[y,b]=zn(h,2,h.rank-1);i=this.recurrentActivation.apply(J(m,y)),o=this.recurrentActivation.apply(J(f,b));let x=er(B(o,a),d);l=this.activation.apply(J(g,x));let v=J(B(i,a),B(J(1,St(i)),l));return[v,v]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:ps(this.activation),recurrentActivation:ps(this.recurrentActivation),useBias:this.useBias,kernelInitializer:At(this.kernelInitializer),recurrentInitializer:At(this.recurrentInitializer),biasInitializer:At(this.biasInitializer),kernelRegularizer:dt(this.kernelRegularizer),recurrentRegularizer:dt(this.recurrentRegularizer),biasRegularizer:dt(this.biasRegularizer),activityRegularizer:dt(this.activityRegularizer),kernelConstraint:Vt(this.kernelConstraint),recurrentConstraint:Vt(this.recurrentConstraint),biasConstraint:Vt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};Fm.className="GRUCell";re.registerClass(Fm);var Sx=class extends nr{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Fm(e),super(e)}call(e,t){return M(()=>{this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,a=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Sx.className="GRU";re.registerClass(Sx);var ip=class extends Qc{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Kt(this.units,"units"),this.activation=ds(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ds(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=wt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=kt(e.kernelRegularizer),this.recurrentRegularizer=kt(e.recurrentRegularizer),this.biasRegularizer=kt(e.biasRegularizer),this.kernelConstraint=Ut(e.kernelConstraint),this.recurrentConstraint=Ut(e.recurrentConstraint),this.biasConstraint=Ut(e.biasConstraint),this.dropout=tu([1,us([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=tu([1,us([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=pt(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let a;if(this.useBias){if(this.unitForgetBias){let r=this.biasInitializer,s=this.units;a=new(t=class extends ga{apply(i,o){let l=r.apply([s]),u=new am().apply([s]),c=r.apply([s*2]);return $k($k(l,u),c)}},t.className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return M(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new V(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let a=e[1],r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=hs({ones:()=>On(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=hs({ones:()=>On(a),rate:this.recurrentDropout,training:n,count:4}));let s=this.dropoutMask,i=this.recurrentDropoutMask,o,l,u,c;0<this.dropout&&this.dropout<1&&(e=B(e,s[0]));let p=er(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=B(a,i[0])),p=J(p,er(a,this.recurrentKernel.read())),this.useBias&&(p=tr(p,this.bias.read()));let[d,h,m,f]=zn(p,4,p.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(h),u=J(B(l,r),B(o,this.activation.apply(m))),c=this.recurrentActivation.apply(f);let g=B(c,this.activation.apply(u));return[g,g,u]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:ps(this.activation),recurrentActivation:ps(this.recurrentActivation),useBias:this.useBias,kernelInitializer:At(this.kernelInitializer),recurrentInitializer:At(this.recurrentInitializer),biasInitializer:At(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:dt(this.kernelRegularizer),recurrentRegularizer:dt(this.recurrentRegularizer),biasRegularizer:dt(this.biasRegularizer),activityRegularizer:dt(this.activityRegularizer),kernelConstraint:Vt(this.kernelConstraint),recurrentConstraint:Vt(this.recurrentConstraint),biasConstraint:Vt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};ip.className="LSTMCell";re.registerClass(ip);var Cx=class extends nr{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ip(e),super(e)}call(e,t){return M(()=>{this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,a=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Cx.className="LSTM";re.registerClass(Cx);var Cm=class extends Qc{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return M(()=>{e=e;let n=e.slice(1),a=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?a.push(n.splice(0,i.stateSize.length)):a.push(n.splice(0,1));a.reverse();let r=[],s;for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=a[i],i===0?s=[e[0]].concat(n):s=[s[0]].concat(n),s=o.call(s,t),r.push(s.slice(1))}n=[];for(let i of r.slice().reverse())n.push(...i);return[s[0]].concat(n)})}build(e){Xb(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,a)=>{Vi(`RNNCell_${a}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=a=>({className:a.getClassName(),config:a.getConfig()}),n={cells:this.cells.map(t)};return Object.assign({},e,n)}static fromConfig(e,t,n={}){let a=[];for(let r of t.cells)a.push(Da(r,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return Kb(e)}setWeights(e){let t=[];for(let n of this.cells){let a=n.weights.length,r=e.splice(a);for(let s=0;s<n.weights.length;++s)t.push([n.weights[s],r[s]])}Yb(t)}};Cm.className="StackedRNNCells";re.registerClass(Cm);function hs(e){let{ones:t,rate:n,training:a=!1,count:r=1}=e,s=()=>Mk(t(),n),i=()=>Jc(s,t,a);return!r||r<=1?qt(i().clone()):Array(r).fill(void 0).map(i).map(o=>qt(o.clone()))}var y4=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]]);return n},BI=class extends nr{constructor(e){if(e.unroll)throw new $e("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new $e("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Yt({ndim:5})]}call(e,t){return M(()=>{if(this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new V("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,a=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return M(()=>{let{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)],s=vt(r);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){M(()=>{if(!this.stateful)throw new kr("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(n[0]==null)throw new V("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>vt(r)):this.states_=[vt(r)];else if(e==null)Ee(this.states_),this.keptStates!=null&&(Ee(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>vt(r)):this.states_[0]=vt(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new V(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ee(this.states_);for(let s=0;s<this.states_.length;++s){let i=e[s],o=r;if(!I.arraysEqual(i.shape,o))throw new V(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${i.shape}`);this.states_[s]=i}}this.states_=this.states_.map(s=>qt(s.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:a,padding:r,strides:s,dilationRate:i}=this.cell,o=t==="channelsFirst",l=e[o?3:2],u=e[o?4:3],c=Ma(l,a[0],r,s[0],i[0]),p=Ma(u,a[1],r,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,p]:[c,p,n]]}};BI.className="ConvRNN2D";var _m=class extends ip{constructor(e){let{filters:t,kernelSize:n,strides:a,padding:r,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t}));this.filters=t,Kt(this.filters,"filters"),this.kernelSize=iu(n,2,"kernelSize"),this.kernelSize.forEach(o=>Kt(o,"kernelSize")),this.strides=iu(a||1,2,"strides"),this.strides.forEach(o=>Kt(o,"strides")),this.padding=r||"valid",na(this.padding),this.dataFormat=s||"channelsLast",Mt(this.dataFormat),this.dilationRate=iu(i||1,2,"dilationRate"),this.dilationRate.forEach(o=>Kt(o,"dilationRate"))}build(e){var t;e=pt(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new V(`The channel dimension of the input should be defined. Found ${e[n]}`);let a=e[n],r=4,s=this.kernelSize.concat([a,this.filters*r]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let o;if(this.unitForgetBias){let l=this.biasInitializer,u=this.filters;o=new(t=class extends ga{apply(c,p){let d=l.apply([u]),h=Ya([u]),m=l.apply([u*2]);return Pb([d,h,m])}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,o,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return M(()=>{if(e.length!==3)throw new V(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,a=e[0],r=e[1],s=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=hs({ones:()=>On(a),rate:this.dropout,training:n,count:i}));let o=this.dropoutMask,l=(Q,se,ne)=>!se||!se[ne]?Q:B(se[ne],Q),u=l(a,o,0),c=l(a,o,1),p=l(a,o,2),d=l(a,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=hs({ones:()=>On(r),rate:this.recurrentDropout,training:n,count:i}));let h=this.recurrentDropoutMask,m=l(r,h,0),f=l(r,h,1),g=l(r,h,2),y=l(r,h,3),b=3,[x,v,k,w]=zn(this.kernel.read(),i,b),[S,A,F,D]=this.useBias?zn(this.bias.read(),i):[null,null,null,null];u=this.inputConv(u,x,S,this.padding),c=this.inputConv(c,v,A,this.padding),p=this.inputConv(p,k,F,this.padding),d=this.inputConv(d,w,D,this.padding);let[R,L,W,U]=zn(this.recurrentKernel.read(),i,b);m=this.recurrentConv(m,R),f=this.recurrentConv(f,L),g=this.recurrentConv(g,W),y=this.recurrentConv(y,U);let G=this.recurrentActivation.apply(J(u,m)),X=this.recurrentActivation.apply(J(c,f)),j=J(B(X,s),B(G,this.activation.apply(J(p,g)))),te=B(this.recurrentActivation.apply(J(d,y)),this.activation.apply(j));return[te,te,j]})}getConfig(){let e=super.getConfig(),{units:t}=e,n=y4(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,a)}inputConv(e,t,n,a){let r=Et(e,t,this.strides,a||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?tr(r,n,this.dataFormat):r}recurrentConv(e,t){return Et(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};_m.className="ConvLSTM2DCell";re.registerClass(_m);var Ax=class extends BI{constructor(e){let t=new _m(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};Ax.className="ConvLSTM2D";re.registerClass(Ax);var Em=class extends je{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(this.noiseShape[a]==null?t[a]:this.noiseShape[a]);return n}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Re(e);if(0<this.rate&&this.rate<1){let a=t.training==null?!1:t.training,r=this.getNoiseShape(n);return Jc(()=>Mk(n,this.rate,r,this.seed),()=>n,a)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Em.className="Dropout";re.registerClass(Em);var Fx=class extends Em{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Fx.className="SpatialDropout1D";re.registerClass(Fx);var _x=class extends je{constructor(e){super(e);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Kt(this.units,"units"),this.activation=ds(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=wt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=wt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ut(e.kernelConstraint),this.biasConstraint=Ut(e.biasConstraint),this.kernelRegularizer=kt(e.kernelRegularizer),this.biasRegularizer=kt(e.biasRegularizer),this.activityRegularizer=kt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=pt(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=pt(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Re(e),a=kk(this.activation.getClassName()),r;return a!=null?r=er(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=er(n,this.kernel.read()),this.bias!=null&&(r=tr(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){let e={units:this.units,activation:ps(this.activation),useBias:this.useBias,kernelInitializer:At(this.kernelInitializer),biasInitializer:At(this.biasInitializer),kernelRegularizer:dt(this.kernelRegularizer),biasRegularizer:dt(this.biasRegularizer),activityRegularizer:dt(this.activityRegularizer),kernelConstraint:Vt(this.kernelConstraint),biasConstraint:Vt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};_x.className="Dense";re.registerClass(_x);var Ex=class extends je{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=pt(e);for(let t of e.slice(1))if(t==null)throw new V(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],ls(e,1)]}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Re(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let a=[0];for(let r=2;r<n.rank;++r)a.push(r);a.push(1),n=n.transpose(a)}return Vz(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Ex.className="Flatten";re.registerClass(Ex);var $x=class extends je{constructor(e){super(e);this.supportsMasking=!0,this.activation=ds(e.activation)}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Re(e);return this.activation.apply(n)})}getConfig(){let e={activation:ps(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};$x.className="Activation";re.registerClass($x);var Dx=class extends je{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return M(()=>(e=Re(e),Wz(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Dx.className="RepeatVector";re.registerClass(Dx);var Mx=class extends je{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",a=t.slice(),r=1,s=null;for(let o=0;o<a.length;++o){let l=a[o];if(this.isUnknown(l))if(s===null)s=o;else throw new V("Can only specifiy one unknown dimension.");else r*=l}let i=ls(e);if(s!==null){if(r===0||i%r!=0)throw new V(n);a[s]=i/r}else if(i!==r)throw new V(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Re(e),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return n.reshape(r)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Mx.className="Reshape";re.registerClass(Mx);var Rx=class extends je{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Ea(1,e.dims.length+1);if(!I.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Yt({ndim:this.dims.length+1})]}computeOutputShape(e){e=pt(e);let t=e.slice();return this.dims.forEach((n,a)=>{t[a+1]=e[n]}),t}call(e,t){return Ve(Re(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Rx.className="Permute";re.registerClass(Rx);var Px=class extends je{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Re(e),a=-1;return _c(Ri(n,this.maskValue),a)}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Re(e),a=-1,r=!0,s=_c(Ri(n,this.maskValue),a,r);return n.mul(s.asType(n.dtype))})}};Px.className="Masking";re.registerClass(Px);var Ox=class extends je{constructor(e){super(e);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(yt(e.inputLength))}this.inputDim=e.inputDim,Kt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Kt(this.outputDim,"outputDim"),this.embeddingsInitializer=wt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=kt(e.embeddingsRegularizer),this.activityRegularizer=kt(e.activityRegularizer),this.embeddingsConstraint=Ut(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return M(()=>this.maskZero?(e=Re(e),Ri(e,Ge(e))):null)}computeOutputShape(e){if(e=pt(e),this.inputLength==null)return[...e,this.outputDim];let t=yt(this.inputLength);if(t.length!==e.length-1)throw new V(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let a=0;a<t.length;++a){let r=t[a],s=e[a+1];if(r!=null&&s!=null&&r!==s)throw new V(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Re(e);return n.dtype!=="int32"&&(n=Xc(n,"int32")),Dk(this.embeddings.read(),n.as1D()).reshape(pt(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:At(this.embeddingsInitializer),embeddingsRegularizer:dt(this.embeddingsRegularizer),activityRegularizer:dt(this.activityRegularizer),embeddingsConstraint:Vt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Ox.className="Embedding";re.registerClass(Ox);var qi=class extends je{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new $e}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){let r=e[e.length-t.length+a],s=t[a];if(r==null||s==null||r<0||s<0)n.push(null);else if(r===1)n.push(s);else if(s===1)n.push(r);else{if(r!==s)throw new V("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[pt(e)]),e=e,e.length<2)throw new V(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=os(t),t.length>1)throw new V(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){let s=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}let a=e.map(r=>r.length);e.indexOf(null)===-1&&os(a).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return M(()=>{if(e=e,this.reshapeRequired){let n=[],a=e.map(r=>r.rank);if(a.indexOf(null)===-1){let r=us(a);for(let s of e){let i=s.rank;for(let o=0;o<r-i;++o)s=Kc(s,1);n.push(s)}return this.mergeFunction(n)}else{let r=!1;for(let o of e){let l=o.rank;if(l==null){let u=o.shape,c=u[0],p=u.slice(1).concat([c]),d=o.reshape([c].concat(ls(u.slice(1))));d=Ve(d,[1,0]),d=d.reshape(p),n.push(d),r=!0}else if(l>1){let u=Ea(1,l).concat([0]);n.push(Ve(o,u)),r=!0}else n.push(o)}let s=this.mergeFunction(n),i=s.rank;if(r){if(i==null){let o=s.shape,l=o.length,u=o[l-1],c=[u].concat(o.slice(0,o.length-1));s=Ve(s.reshape([-1,u]),[1,0]).reshape(c)}else if(i>1){let o=[i-1].concat(Ea(0,i-1));s=Ve(s,o)}}return s}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let a=1;a<e.length;++a){let r=e[a]==null?null:e[a].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let a of e)a!=null&&a[0]!==null&&n.push(a[0]);return n=os(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return M(()=>{if(t==null)return null;if(!Array.isArray(t))throw new V("`mask` should be an Array");if(!Array.isArray(e))throw new V("`inputs` should be an Array");if(t.length!==e.length)throw new V(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(a=>a==null))return null;t=t.map(a=>a==null?a:Rn(a,0));let n=t[0];for(let a=1;a<t.length-1;++a)n=ma(n,t[a]);return n})}},Lx=class extends qi{constructor(e){super(e)}mergeFunction(e){return M(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=J(t,e[n]);return t})}};Lx.className="Add";re.registerClass(Lx);var zx=class extends qi{constructor(e){super(e)}mergeFunction(e){return M(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=B(t,e[n]);return t})}};zx.className="Multiply";re.registerClass(zx);var Wx=class extends qi{constructor(e){super(e)}mergeFunction(e){return M(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=J(t,e[n]);return B(1/e.length,t)})}};Wx.className="Average";re.registerClass(Wx);var Bx=class extends qi{constructor(e){super(e)}mergeFunction(e){return M(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ka(t,e[n]);return t})}};Bx.className="Maximum";re.registerClass(Bx);var Vx=class extends qi{constructor(e){super(e)}mergeFunction(e){return M(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Xl(t,e[n]);return t})}};Vx.className="Minimum";re.registerClass(Vx);var Ux=class extends qi{constructor(e){super(e);this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new V("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let a of e)if(a!=null){t=!1;break}if(t)return;let n=[];for(let a=0;a<e.length;++a){let r=e[a].slice();r.splice(this.axis,1);let s=!1;for(let i of n)if(I.arraysEqual(i,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new V("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return M(()=>Pb(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new V("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(let r of t.slice(1)){if(n[a]==null||r[a]==null){n[a]=null;break}n[a]+=r[a]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new V("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new V("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new V(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return M(()=>{let n=!0;if(t.forEach(s=>{if(s!=null){n=!1;return}}),n)return null;let a=[];for(let s=0;s<e.length;++s)t[s]==null?a.push(On(e[s]).asType("bool")):t[s].rank<e[s].rank?a.push(Rn(t[s],-1)):a.push(t[s]);let r=Je(a,this.axis);return yh(r,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Ux.className="Concatenate";re.registerClass(Ux);function op(e,t){for(;e<0;)e+=t;return e}function b4(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new $e("batchDot is not implemented for tensors of 4D or higher rank yet");if(I.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),I.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new $e("batchDot is not implemented for complex64-type Tensors yet.");let a=e.shape.length,r=t.shape.length;n==null&&(n=[a-1,r-2]);let s=n;return M(()=>{let i;if(a>r){i=a-r;let l=[];for(let u=0;u<i;++u)l.push(1);t=t.reshape(t.shape.concat(l))}else if(r>a){i=r-a;let l=[];for(let u=0;u<i;++u)l.push(1);e=e.reshape(e.shape.concat(l))}else i=0;let o;if(e.shape.length===2&&t.shape.length===2)s[0]===s[1]?o=e.mul(t).sum(s[0]):o=e.transpose([1,0]).mul(t).sum(s[1]);else{let l=s[0]!==e.shape.length-1,u=s[1]===t.shape.length-1;o=e.matMul(t,l,u)}if(i>0){let l;a>r?l=a+r-3:l=a-1;let u=[];for(let c=l;c<l+i;++c)u.push(c);o=o.squeeze(u)}return o.shape.length===1&&(o=o.expandDims(1)),o})}var Gx=class extends qi{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){I.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new $e("Dot layer does not support tensors of 4D or higher rank yet.");let a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new V(`Dimension incompatibility: ${t[a[0]]} !== ${n[a[1]]}`)}mergeFunction(e){if(e.length!==2)throw new V(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],a;return Array.isArray(this.axes)?a=this.axes.map((r,s)=>op(r,e[s].shape.length)):a=[op(this.axes,t.shape.length),op(this.axes,n.shape.length)],this.normalize&&(t=fm(t,a[0]),n=fm(n,a[1])),b4(t,n,a)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[op(this.axes,e.length),op(this.axes,t.length)],n}computeOutputShape(e){I.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new $e("Dot layer does not support tensors of 4D or higher rank yet.");let a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);let r=t.concat(n);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Gx.className="Dot";re.registerClass(Gx);var Hx=class extends je{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Re(e);return Jc(()=>nm(n.shape,0,this.stddev).add(n),()=>n,t.training||!1)})}};Hx.className="GaussianNoise";re.registerClass(Hx);var jx=class extends je{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Re(e);return this.rate>0&&this.rate<1?Jc(()=>{let a=Math.sqrt(this.rate/(1-this.rate));return n.mul(nm(n.shape,1,a))},()=>n,t.training||!1):n})}};jx.className="GaussianDropout";re.registerClass(jx);var qx=class extends je{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Re(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return M(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return Jc(()=>{let a=Re(e),r=1.6732632423543772,s=1.0507009873554805,i=-r*s,o=rs(Kl(n),this.rate);o=Xc(o,"float32");let l=((1-this.rate)*(1+this.rate*i**2))**-.5,u=-l*i*this.rate;return a.mul(o).add(o.add(-1).mul(i)).mul(l).add(u)},()=>Re(e),t.training||!1)}return e})}};qx.className="AlphaDropout";re.registerClass(qx);function lp(e,t,n,a,r,s=.001){let i;if(e.rank===2)i=g1(e,t,n,a,r,s);else if(e.rank===3)i=y1(e,t,n,a,r,s);else if(e.rank===4)i=b1(e,t,n,a,r,s);else throw new $e(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return i}function x4(e,t,n,a,r=.001){return M(()=>{let s=Fh(e,a),i=s.mean,o=s.variance;return[lp(e,i,o,n,t,r),i,o]})}function v4(e,t,n,a,r=.001){return M(()=>{let s=Fh(e,a),i=s.mean,o=s.variance,l=[];for(let h of Ea(0,e.rank))a.indexOf(h)!==-1?l.push(1):l.push(e.shape[h]);let u=i.reshape(l),c=o.reshape(l),p=t==null?null:t.reshape(l),d=n==null?null:n.reshape(l);return[lp(e,u,c,d,p,r),i,o]})}function w4(e,t,n,a,r=.001){return I.arraysEqual(a.slice().sort(),Ea(0,e.rank-1))?x4(e,t,n,a,r):v4(e,t,n,a,r)}var Xx=class extends je{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=wt(e.betaInitializer||"zeros"),this.gammaInitializer=wt(e.gammaInitializer||"ones"),this.movingMeanInitializer=wt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=wt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ut(e.betaConstraint),this.gammaConstraint=Ut(e.gammaConstraint),this.betaRegularizer=kt(e.betaRegularizer),this.gammaRegularizer=kt(e.gammaRegularizer)}build(e){e=pt(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new V(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Yt({ndim:e.length,axes:{[t]:n}})];let a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return M(()=>{let n=t.training==null?!1:t.training,a=Re(e),r=a.shape,s=r.length,i=Ea(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=zi(1,s);l[o]=r[o];let u=i.slice();u.sort();let c=!I.arraysEqual(u,Ea(0,s).slice(0,s-1)),p=()=>{if(c){let g=this.movingMean.read().reshape(l),y=this.movingVariance.read().reshape(l),b=this.center?this.beta.read().reshape(l):null,x=this.scale?this.gamma.read().reshape(l):null;return lp(a,g,y,b,x,this.epsilon)}else return lp(a,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return p();let[d,h,m]=w4(a,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(g,y,b)=>{M(()=>{let x=1-b,v=g.read(),k=v.sub(y).mul(x);g.write(v.sub(k))})};return(()=>{f(this.movingMean,h,this.momentum),f(this.movingVariance,m,this.momentum)})(),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:At(this.betaInitializer),gammaInitializer:At(this.gammaInitializer),movingMeanInitializer:At(this.movingMeanInitializer),movingVarianceInitializer:At(this.movingVarianceInitializer),betaRegularizer:dt(this.betaRegularizer),gammaRegularizer:dt(this.gammaRegularizer),betaConstraint:Vt(this.betaConstraint),gammaConstraint:Vt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Xx.className="BatchNormalization";re.registerClass(Xx);var Kx=class extends je{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=wt(e.betaInitializer||"zeros"),this.gammaInitializer=wt(e.gammaInitializer||"ones"),this.betaRegularizer=kt(e.betaRegularizer),this.gammaRegularizer=kt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=pt(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(let r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==os(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(r=>e[r]),a=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(e,t){let n=Re(e),a=n.shape,r=a.length;return M(()=>{let s=!0,{mean:i,variance:o}=Fh(n,this.axis,s),l=zi(1,r);for(let m of this.axis)l[m]=a[m];let u=m=>m!=null&&m.shape.length!==r&&this.axis!==[r-1]?m.reshape(l):m,c=u(this.gamma.read()),p=u(this.beta.read()),d=[],h=[];for(let m=0;m<r;++m)this.axis.indexOf(m)!==-1?(d.push(a[m]),h.push(1)):(d.push(1),h.push(a[m]));return i=i.tile(d),o=o.tile(d),c=c.tile(h),p=p.tile(h),lp(n,i,o,p,c,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:At(this.betaInitializer),gammaInitializer:At(this.gammaInitializer),betaRegularizer:dt(this.betaRegularizer),gammaRegularizer:dt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Kx.className="LayerNormalization";re.registerClass(Kx);function k4(e,t,n){return M(()=>{if(e.rank!==4)throw new V(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new V("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=Fa()),n!=="channelsLast"&&n!=="channelsFirst")throw new V(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let a;return n==="channelsFirst"?a=[[0,0],[0,0],t[0],t[1]]:a=[[0,0],t[0],t[1],[0,0]],ta(e,a)})}var Yx=class extends je{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Fa():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new V(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new V(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new V(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Yt({ndim:4})]}computeOutputShape(e){e=pt(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return M(()=>k4(Re(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Yx.className="ZeroPadding2D";re.registerClass(Yx);function $m(e,t,n,a,r,s){return M(()=>{Mt(r),Sk(s),na(a),n==null&&(n=[1,1]),a==null&&(a="valid"),r==null&&(r=Fa()),s==null&&(s="max"),e=bx(e,r);let i,o=a==="same"?"same":"valid";return s==="max"?i=$t(e,t,n,o):i=Zn(e,t,n,o),r==="channelsFirst"&&(i=Ve(i,[0,3,1,2])),i})}function VI(e,t,n,a,r,s){return M(()=>{Mt(r),Sk(s),na(a),n==null&&(n=[1,1,1]),a==null&&(a="valid"),r==null&&(r=Fa()),s==null&&(s="max"),e=PI(e,r);let i,o=a==="same"?"same":"valid";return s==="max"?i=ib(e,t,n,o):i=jy(e,t,n,o),r==="channelsFirst"&&(i=Ve(i,[0,4,1,2,3])),i})}var UI=class extends je{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new V(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Kt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new V(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Kt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,na(this.padding),this.inputSpec=[new Yt({ndim:3})]}computeOutputShape(e){e=pt(e);let t=Ma(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return M(()=>{this.invokeCallHook(e,t),e=Kc(Re(e),2);let n=this.poolingFunction(Re(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ss(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},Jx=class extends UI{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Mt(r),na(a),$m(e,t,n,a,r,"max")}};Jx.className="MaxPooling1D";re.registerClass(Jx);var Qx=class extends UI{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Mt(r),na(a),$m(e,t,n,a,r,"avg")}};Qx.className="AveragePooling1D";re.registerClass(Qx);var GI=class extends je{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new V(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Kt(this.poolSize,"poolSize"),Kt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Mt(this.dataFormat),na(this.padding),this.inputSpec=[new Yt({ndim:4})]}computeOutputShape(e){e=pt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Ma(t,this.poolSize[0],this.padding,this.strides[0]),n=Ma(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return M(()=>(this.invokeCallHook(e,t),this.poolingFunction(Re(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Zx=class extends GI{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Mt(r),na(a),$m(e,t,n,a,r,"max")}};Zx.className="MaxPooling2D";re.registerClass(Zx);var ev=class extends GI{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Mt(r),na(a),$m(e,t,n,a,r,"avg")}};ev.className="AveragePooling2D";re.registerClass(ev);var HI=class extends je{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new V(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Kt(this.poolSize,"poolSize"),Kt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Mt(this.dataFormat),na(this.padding),this.inputSpec=[new Yt({ndim:5})]}computeOutputShape(e){e=pt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],a=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Ma(t,this.poolSize[0],this.padding,this.strides[0]),n=Ma(n,this.poolSize[1],this.padding,this.strides[1]),a=Ma(a,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return M(()=>(this.invokeCallHook(e,t),this.poolingFunction(Re(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},tv=class extends HI{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Mt(r),na(a),VI(e,t,n,a,r,"max")}};tv.className="MaxPooling3D";re.registerClass(tv);var nv=class extends HI{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Mt(r),na(a),VI(e,t,n,a,r,"avg")}};nv.className="AveragePooling3D";re.registerClass(nv);var jI=class extends je{constructor(e){super(e);this.inputSpec=[new Yt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new $e}},av=class extends jI{constructor(e){super(e||{})}call(e,t){return M(()=>{let n=Re(e);return Ct(n,1)})}};av.className="GlobalAveragePooling1D";re.registerClass(av);var rv=class extends jI{constructor(e){super(e||{})}call(e,t){return M(()=>{let n=Re(e);return ea(n,1)})}};rv.className="GlobalMaxPooling1D";re.registerClass(rv);var qI=class extends je{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Mt(this.dataFormat),this.inputSpec=[new Yt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new $e}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},sv=class extends qI{call(e,t){return M(()=>{let n=Re(e);return this.dataFormat==="channelsLast"?Ct(n,[1,2]):Ct(n,[2,3])})}};sv.className="GlobalAveragePooling2D";re.registerClass(sv);var iv=class extends qI{call(e,t){return M(()=>{let n=Re(e);return this.dataFormat==="channelsLast"?ea(n,[1,2]):ea(n,[2,3])})}};iv.className="GlobalMaxPooling2D";re.registerClass(iv);var XI=class extends je{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let a=t.layer,r=Da(a,n);delete t.layer;let s={layer:r};return Object.assign(s,t),new e(s)}},ov=class extends XI{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=pt(e),e.length<3)throw new V(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=pt(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return M(()=>(e=Re(e),WI((n,a)=>[Re(this.layer.call(n,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};ov.className="TimeDistributed";re.registerClass(ov);function I4(e){Bi(Rz,"BidirectionalMergeMode",e)}var N4="concat",lv=class extends XI{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Da(n),t.goBackwards=t.goBackwards!==!0;let a={};if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=Da(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?N4:e.mergeMode,I4(this.mergeMode),e.weights)throw new $e("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,a,r;return this.returnState&&(r=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,a=[n]):this.mergeMode==null?a=[n,n.slice()]:a=[n],this.returnState?this.mergeMode==null?a.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):An(a)}apply(e,t){let n=t==null?null:t.initialState,a=t==null?null:t.constants;t==null&&(t={});let r=zI(e,n,a,this.numConstants);if(e=r.inputs,n=r.initialState,a=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&a==null)return super.apply(e,t);let s=[],i=[];if(n!=null){let l=n.length;if(l%2>0)throw new V("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let u=n.map(c=>new Yt({shape:c.shape}));this.forwardLayer.stateSpec=u.slice(0,l/2),this.backwardLayer.stateSpec=u.slice(l/2),i.push(...u)}if(a!=null)throw new $e("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof $a;for(let l of s)if(l instanceof $a!==o)throw new V("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let l=[e].concat(s),u=this.inputSpec.concat(i),c=this.inputSpec;this.inputSpec=u;let p=super.apply(l,t);return this.inputSpec=c,p}else return super.apply(e,t)}call(e,t){return M(()=>{let n=t.initialState,a,r;if(n==null)a=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let o=n.slice(0,n.length/2),l=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let s;this.returnState&&(Array.isArray(a)&&(s=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=Ln(r,1));let i;return this.mergeMode==="concat"?i=Pb([a,r]):this.mergeMode==="sum"?i=J(a,r):this.mergeMode==="ave"?i=B(.5,J(a,r)):this.mergeMode==="mul"?i=B(a,r):this.mergeMode==null&&(i=[a,r]),this.returnState?this.mergeMode==null?i.concat(s):[i].concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Vi(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Vi(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let a=this.forwardLayer.states.map(r=>null);return Array.isArray(n)?n.concat(a).concat(a):[n].concat(a).concat(a)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Da(t.layer);if(delete t.layer,t.numConstants!=null)throw new $e("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let a=t;return a.layer=n,new e(a)}};lv.className="Bidirectional";re.registerClass(lv);function Jz(e){return new nu(e)}function Qz(e){return new fx(e)}function Zz(e){return new dx(e)}function eW(e){return new hx(e)}function tW(e){return new mx(e)}function nW(e){return new yx(e)}function aW(e){return new gx(e)}function rW(e){return new Sm(e)}function sW(e){return new sp(e)}function iW(e){return new vx(e)}function oW(e){return new Tm(e)}function lW(e){return new wx(e)}function uW(e){return new kx(e)}function cW(e){return new Ix(e)}function pW(e){return new Nx(e)}function dW(e){return new $x(e)}function hW(e){return new _x(e)}function mW(e){return new Em(e)}function fW(e){return new Fx(e)}function gW(e){return new Ex(e)}function yW(e){return new Dx(e)}function bW(e){return new Mx(e)}function xW(e){return new Rx(e)}function vW(e){return new Ox(e)}function wW(e){return new Lx(e)}function kW(e){return new Wx(e)}function IW(e){return new Ux(e)}function NW(e){return new Bx(e)}function TW(e){return new Vx(e)}function SW(e){return new zx(e)}function CW(e){return new Gx(e)}function AW(e){return new Xx(e)}function FW(e){return new Kx(e)}function _W(e){return new Yx(e)}function Hb(e){return new Qx(e)}function EW(e){return Hb(e)}function $W(e){return Hb(e)}function jb(e){return new ev(e)}function DW(e){return jb(e)}function MW(e){return jb(e)}function qb(e){return new nv(e)}function RW(e){return qb(e)}function PW(e){return qb(e)}function OW(e){return new av(e)}function LW(e){return new sv(e)}function zk(e){return new rv(e)}function Wk(e){return new iv(e)}function Bk(e){return new Jx(e)}function Vk(e){return new Zx(e)}function zW(e){return new tv(e)}function WW(e){return new Sx(e)}function BW(e){return new Fm(e)}function VW(e){return new Cx(e)}function UW(e){return new ip(e)}function GW(e){return new Tx(e)}function HW(e){return new Am(e)}function jW(e){return new Ax(e)}function qW(e){return new _m(e)}function XW(e){return new nr(e)}function KW(e){return new Cm(e)}function YW(e){return new lv(e)}function JW(e){return new ov(e)}var QW=zk,ZW=Wk,eB=Bk,tB=Vk;function nB(e){return new Hx(e)}function aB(e){return new jx(e)}function rB(e){return new qx(e)}function sB(e){return new Px(e)}var KI={};Oe(KI,{MAPE:()=>R4,MSE:()=>L4,binaryAccuracy:()=>T4,binaryCrossentropy:()=>S4,categoricalAccuracy:()=>A4,categoricalCrossentropy:()=>F4,cosineProximity:()=>$4,mape:()=>P4,meanAbsoluteError:()=>D4,meanAbsolutePercentageError:()=>M4,meanSquaredError:()=>O4,mse:()=>z4,precision:()=>_4,recall:()=>E4,sparseCategoricalAccuracy:()=>C4});function T4(e,t){return Zb(e,t)}function S4(e,t){return aI(e,t)}function C4(e,t){return rI(e,t)}function A4(e,t){return ex(e,t)}function F4(e,t){return tx(e,t)}function _4(e,t){return nI(e,t)}function E4(e,t){return NB(e,t)}function $4(e,t){return Jb(e,t)}function D4(e,t){return gm(e,t)}function M4(e,t){return ru(e,t)}function R4(e,t){return ru(e,t)}function P4(e,t){return ru(e,t)}function O4(e,t){return Gi(e,t)}function L4(e,t){return Gi(e,t)}function z4(e,t){return Gi(e,t)}var YI={};Oe(YI,{modelFromJSON:()=>r4});var JI={};Oe(JI,{l1:()=>B4,l1l2:()=>W4,l2:()=>V4});function W4(e){return new ap(e)}function B4(e){return d4(e)}function V4(e){return h4(e)}var QI=class extends au{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof Nr))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Dm(e,t){return e<t}function ZI(e,t){return e>t}var eN=class extends QI{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new $e("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Dm:this.mode==="max"?this.monitorFunc=ZI:this.monitor.indexOf("acc")!==-1?this.monitorFunc=ZI:this.monitorFunc=Dm,this.monitorFunc===Dm&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Dm?Infinity:-Infinity}async onEpochEnd(e,t){await cs(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function U4(e){return new eN(e)}var G4={earlyStopping:U4},Ra;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(Ra||(Ra={}));var tN;(function(e){let t;(function(n){n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(tN||(tN={}));var uv={};function H4(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};uv[e]=n}function nN(e){return uv[e]}function j4(e){delete uv[e]}function N(e,t,n,a,r){let s=t.inputParams[e];if(s&&s.inputIndexStart!==void 0){let o=s.inputIndexStart,l=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?o+1:s.inputIndexEnd;if(s.type==="tensor")return _n(t.inputNames[s.inputIndexStart],n,a,r);if(s.type==="tensors")return t.inputNames.slice(o,l).map(p=>_n(p,n,a,r));let u=_n(t.inputNames.slice(o)[0],n,a,r),c=u.dataSync();return s.type==="number"?c[0]:I.toNestedArray(u.shape,c)}let i=t.attrParams[e];return i&&i.value}function _n(e,t,n,a){let[r,s]=Bn(e);if(a!=null){let o=a.getHashTableHandleByName(r);if(o!=null)return o}let i=n.currentContextIds.find(o=>!!t[Mm(r,o)]);return i!==void 0?t[Mm(r,i)][s]:void 0}function q4(e,t,n){return t[Mm(e,n.currentContextId)]}function Tr(e,t){let[n,a]=Bn(e);return[Mm(n,t&&t.currentContextId),a]}function Mm(e,t){return t?`${e}-${t}`:e}function Bn(e){let t=e.split(":");return t.length===1?[e,0]:[t[0],Number(t[t.length-1])]}function Rm(e,t,n){let a=N("pad",e,t,n);if(a==="explicit"){a=N("explicitPaddings",e,t,n);let r=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)r[s][0]=a[s*2],r[s][1]=a[s*2+1];return r}return a}function Sr(e){return e.kept?e:Zr(e)}var aN={};Oe(aN,{json:()=>X4});var X4=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],rN={};Oe(rN,{json:()=>K4});var K4=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],sN={};Oe(sN,{json:()=>Y4});var Y4=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],iN={};Oe(iN,{json:()=>J4});var J4=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],oN={};Oe(oN,{json:()=>Q4});var Q4=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],lN={};Oe(lN,{json:()=>Z4});var Z4=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],uN={};Oe(uN,{json:()=>eV});var eV=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],cN={};Oe(cN,{json:()=>tV});var tV=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],pN={};Oe(pN,{json:()=>nV});var nV=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],dN={};Oe(dN,{json:()=>aV});var aV=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],hN={};Oe(hN,{json:()=>rV});var rV=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],mN={};Oe(mN,{json:()=>sV});var sV=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],fN={};Oe(fN,{json:()=>iV});var iV=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],gN={};Oe(gN,{json:()=>oV});var oV=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],yN={};Oe(yN,{json:()=>lV});var lV=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],bN={};Oe(bN,{json:()=>uV});var uV=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],xN={};Oe(xN,{json:()=>cV});var cV=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}],wN=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[aN,rN,sN,iN,oN,lN,uN,hN,dN,cN,mN,fN,gN,yN,bN,xN,pN],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,a)=>(n[a.tfOpName]=a,n),{})}transformGraph(e,t={}){let n=e.node,a=[],r=[],s=[],i=n.reduce((m,f)=>(m[f.name]=this.mapNode(f),f.op.startsWith("Placeholder")?a.push(m[f.name]):f.op==="Const"?r.push(m[f.name]):(f.input==null||f.input.length===0)&&s.push(m[f.name]),m),{}),o=[],l=[],u={},c={};t!=null&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));let p=Object.keys(i);p.forEach(m=>{let f=i[m];f.inputNames.forEach(g=>{let[y]=Tr(g);f.inputs.push(i[y]),i[y].children.push(f)})}),Object.keys(c).length===0?p.forEach(m=>{let f=i[m];f.children.length===0&&l.push(f)}):Object.keys(c).forEach(m=>{let[f]=Tr(m),g=i[f];g!=null&&(g.signatureKey=c[m],l.push(g))}),Object.keys(u).length>0?Object.keys(u).forEach(m=>{let[f]=Tr(m),g=i[f];g&&(g.signatureKey=u[m],o.push(g))}):o=a;let d={};e.library!=null&&e.library.function!=null&&(d=e.library.function.reduce((m,f)=>(m[f.signature.name]=this.mapFunction(f),m),{}));let h={nodes:i,inputs:o,outputs:l,weights:r,placeholders:a,signature:t,functions:d};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=nN(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(a=>a.startsWith("^")?a.substr(1):a),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((a,r)=>(a[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},a),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((a,r)=>{let s=r.type,i;switch(r.type){case"string":i=cv(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=cv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":i=bv(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=bv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":i=dv(e.attr,r.tfName,r.defaultValue||0),i===void 0&&!!r.tfDeprecatedName&&(i=dv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":i=yv(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=yv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":i=pv(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=pv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":i=vv(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=vv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":i=gv(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=gv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":i=xv(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=xv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":i=mv(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=mv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":i=fv(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=fv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":i=vN(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=vN(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return a[r.name]={value:i,type:s},a},{})),n}mapFunction(e){let t=e.nodeDef,n=[],a=[],r={};t!=null&&(r=t.reduce((u,c)=>(u[c.name]=this.mapNode(c),c.op==="Const"&&a.push(u[c.name]),u),{}));let s=[],i=[];e.signature.inputArg.forEach(u=>{let[c]=Tr(u.name),p={name:c,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:hv(u.type),type:"dtype"}},children:[]};p.signatureKey=u.name,s.push(p),r[c]=p}),Object.keys(r).forEach(u=>{let c=r[u];c.inputNames.forEach(p=>{let[d]=Tr(p);c.inputs.push(r[d]),r[d].children.push(c)})});let o=e.ret;e.signature.outputArg.forEach(u=>{let[c,p]=Tr(o[u.name]),d=r[c];d!=null&&(d.defaultOutput=p,i.push(d))});let l=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:i,weights:a,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function pV(e){let t=Z().global;if(typeof t.atob!="undefined")return t.atob(e);if(typeof Buffer!="undefined")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function kN(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):pV(e);return t?n:n.toLowerCase()}function cv(e,t,n,a=!1){let r=e[t];return r!=null?kN(r.s,a):n}function pv(e,t,n){let a=e[t];return a?a.b:n}function dv(e,t,n){let a=e[t]||{},r=a.i!=null?a.i:a.f!=null?a.f:n;return typeof r=="number"?r:parseInt(r,10)}function hv(e){switch(typeof e=="string"&&(e=Ra[e]),e){case Ra.DT_FLOAT:return"float32";case Ra.DT_INT32:case Ra.DT_INT64:case Ra.DT_INT8:case Ra.DT_UINT8:return"int32";case Ra.DT_BOOL:return"bool";case Ra.DT_DOUBLE:return"float32";case Ra.DT_STRING:return"string";default:return null}}function vN(e,t,n){let a=e[t];return a&&a.func?a.func.name:n}function mv(e,t,n){let a=e[t];return a&&a.type?hv(a.type):n}function fv(e,t,n){let a=e[t];return a&&a.list&&a.list.type?a.list.type.map(r=>hv(r)):n}function IN(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function gv(e,t,n){let a=e[t];return a&&a.shape?IN(a.shape):n}function yv(e,t,n){let a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):n}function bv(e,t,n,a=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map(s=>kN(s,a)):n}function xv(e,t,n){let a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map(r=>IN(r)):n}function vv(e,t,n){let a=e[t];return a&&a.list&&a.list.b?a.list.b:n}var dV=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(a=>this.getInput(a)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((a,r)=>(a[r]=this.getAttr(r),a),{}))}getInput(e){return _n(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return _n(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return dv(this.node.rawAttrs,e,t);if(n.s!=null)return cv(this.node.rawAttrs,e,t);if(n.b!=null)return pv(this.node.rawAttrs,e,t);if(n.shape!=null)return gv(this.node.rawAttrs,e,t);if(n.type!=null)return mv(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return yv(this.node.rawAttrs,e,t);if(n.list.s!=null)return bv(this.node.rawAttrs,e,t);if(n.list.shape!=null)return xv(this.node.rawAttrs,e,t);if(n.list.b!=null)return vv(this.node.rawAttrs,e,t);if(n.list.type!=null)return fv(this.node.rawAttrs,e,t)}return t}},hV=(e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[J(N("a",e,t,n),N("b",e,t,n))];case"AddN":return[d1(N("tensors",e,t,n))];case"FloorMod":case"Mod":return[lb(N("a",e,t,n),N("b",e,t,n))];case"Mul":return[B(N("a",e,t,n),N("b",e,t,n))];case"RealDiv":case"Div":return[xe(N("a",e,t,n),N("b",e,t,n))];case"DivNoNan":return[Qy(N("a",e,t,n),N("b",e,t,n))];case"FloorDiv":return[gh(N("a",e,t,n),N("b",e,t,n))];case"Sub":return[me(N("a",e,t,n),N("b",e,t,n))];case"Minimum":return[Xl(N("a",e,t,n),N("b",e,t,n))];case"Maximum":return[Ka(N("a",e,t,n),N("b",e,t,n))];case"Pow":return[xr(N("a",e,t,n),N("b",e,t,n))];case"SquaredDifference":return[zh(N("a",e,t,n),N("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},mV=(e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[zt(N("x",e,t,n))];case"Acos":return[Py(N("x",e,t,n))];case"Acosh":return[Oy(N("x",e,t,n))];case"Asin":return[zy(N("x",e,t,n))];case"Asinh":return[Wy(N("x",e,t,n))];case"Atan":return[By(N("x",e,t,n))];case"Atan2":return[Vy(N("x",e,t,n),N("y",e,t,n))];case"Atanh":return[Uy(N("x",e,t,n))];case"Ceil":return[qy(N("x",e,t,n))];case"Complex":return[Yr(N("real",e,t,n),N("imag",e,t,n))];case"Cos":return[Rc(N("x",e,t,n))];case"Cosh":return[wh(N("x",e,t,n))];case"Elu":return[Gl(N("x",e,t,n))];case"Erf":return[Zy(N("x",e,t,n))];case"Exp":return[hn(N("x",e,t,n))];case"Expm1":return[eb(N("x",e,t,n))];case"Floor":return[Hl(N("x",e,t,n))];case"Log":return[Pn(N("x",e,t,n))];case"Log1p":return[Th(N("x",e,t,n))];case"Imag":return[Ih(N("x",e,t,n))];case"Neg":return[St(N("x",e,t,n))];case"Reciprocal":return[pb(N("x",e,t,n))];case"Real":return[Wc(N("x",e,t,n))];case"Relu":return[qe(N("x",e,t,n))];case"Round":return[db(N("x",e,t,n))];case"Selu":return[Mh(N("x",e,t,n))];case"Sigmoid":return[da(N("x",e,t,n))];case"Sin":return[Rh(N("x",e,t,n))];case"Sign":return[hb(N("x",e,t,n))];case"Sinh":return[Ph(N("x",e,t,n))];case"Softplus":return[jl(N("x",e,t,n))];case"Sqrt":return[rn(N("x",e,t,n))];case"Square":return[ut(N("x",e,t,n))];case"Tanh":return[Ul(N("x",e,t,n))];case"Tan":return[gb(N("x",e,t,n))];case"ClipByValue":return[Xt(N("x",e,t,n),N("clipValueMin",e,t,n),N("clipValueMax",e,t,n))];case"Relu6":return[$h(N("x",e,t,n))];case"Rsqrt":return[Dh(_n(e.inputNames[0],t,n))];case"Prod":return[_h(N("x",e,t,n),N("axes",e,t,n))];case"LeakyRelu":return[Pc(N("x",e,t,n),N("alpha",e,t,n))];case"Prelu":return[zc(N("x",e,t,n),N("alpha",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function ba(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){I.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let a=0;a<e.length;a++){let r=e[a],s=t[a];I.assert(r<0||s<0||r===s,()=>n+` Shapes ${e} and ${t} must match`)}}}function NN(e){return!(typeof e=="number"||e.some(t=>t<0))}function up(e,t,n){let a=wv(e,n),r=!NN(a);if(r&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${a}`);if(r&&t.forEach(s=>{a=wv(s.shape,a)}),!NN(a))throw new Error(`Non-fully-defined elementShape: ${a}`);return a}function wv(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let a=0;a<e.length;++a){let r=e[a],s=t[a];if(r>=0&&s>=0&&r!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[a]=r>=0?r:s}return n}var fV=class{constructor(e,t,n,a,r,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=ce(0),qt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),ba(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,qt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,a)=>this.write(n,t[a]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let a=0;a<this.size();a++)e.push(a)}if(e.length===0)return Jn([],[0].concat(this.elementShape));let n=this.readMany(e);return ba(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Dt(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Jn([],[0].concat(this.elementShape));let t=[];for(let a=0;a<this.size();a++)t.push(a);let n=this.readMany(t);return ba(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Je(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,ct(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,a=e.map(o=>(n+=o,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=n===0?0:t.size/n,s=[];M(()=>{t=H(t,[1,n,r]);for(let o=0;o<e.length;++o){let l=o===0?0:a[o-1],u=[0,l,0],c=[1,e[o],r];s[o]=H(Be(t,u,c),this.elementShape)}return s});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}},cp=class{constructor(e,t,n,a=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(r=>{if(n!==r.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${r.dtype}`);ba(t,r.shape,"TensorList shape mismatch: "),qt(r)}),this.idTensor=ce(0),this.maxNumElements=a,qt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new cp([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);ba(e,this.elementShape,"TensorList shape mismatch: ");let a=up(this.elementShape,this.tensors,e);return M(()=>{let r=this.tensors.map(s=>H(s,a));return Dt(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=up(this.elementShape,this.tensors,e),a=this.tensors.pop();return ba(a.shape,e,"TensorList shape mismatch: "),H(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(ba(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");qt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);ba(this.tensors[e].shape,t,"TensorList shape mismatch: ");let a=up(this.elementShape,this.tensors,t);return H(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);ba(this.elementShape,t.shape,"TensorList shape mismatch: "),qt(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);ba(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let a=up(this.elementShape,this.tensors,n);return e.length===0?Jn([],[0].concat(a)):M(()=>{let r=e.map(s=>H(this.tensors[s],a));return Dt(r,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);ba(this.elementShape,t,"TensorList shape mismatch: ");let n=up(this.elementShape,this.tensors,t);return this.size()===0?Jn([],[0].concat(n)):M(()=>{let a=this.tensors.map(r=>H(r,n));return Je(a,0)})}};function gV(e,t,n){let a=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let r=e.shape.slice(1);ba(r,t,"TensorList shape mismatch: ");let s=ct(e);return new cp(s,t,a)}function yV(e,t,n){return new cp([],e,t,n)}function bV(e,t,n,a){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(a!=null&&a!==-1&&r>=a)throw new Error(`Max index must be < array size (${r}  vs. ${a})`);let s=new cp([],n,e.dtype,a),i=ct(e,0);return t.forEach((o,l)=>{s.setItem(o,i[l])}),s}function xV(e,t,n){let a=0,r=t.map(c=>(a+=c,a));if(a!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${a}, and tensor's shape is: ${e.shape}`);let s=e.shape.slice(1),i=wv(s,n),o=a===0?0:e.size/a,l=M(()=>{let c=[];e=H(e,[1,a,o]);for(let p=0;p<t.length;++p){let d=p===0?0:r[p-1],h=[0,d,0],m=[1,t[p],o];c[p]=H(Be(e,h,m),i)}return e.dispose(),c}),u=new cp([],n,e.dtype,t.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}var vV=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let a=N("thenBranch",e,t,n),r=N("elseBranch",e,t,n),s=N("cond",e,t,n),i=N("args",e,t,n);return(await s.data())[0]?n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let a=N("body",e,t,n),r=N("cond",e,t,n),s=N("args",e,t,n),i=await n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map(c=>c.id),l=await i[0].data();i.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&c.dispose()});let u=s;for(;l[0];){let c=u;u=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let p=u.map(h=>h.id);c.forEach(h=>{!h.kept&&o.indexOf(h.id)===-1&&p.indexOf(h.id)===-1&&h.dispose()});let d=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await d[0].data(),d.forEach(h=>{!h.kept&&o.indexOf(h.id)===-1&&p.indexOf(h.id)===-1&&h.dispose()})}return u}case"LoopCond":{let a=N("pred",e,t,n);return[Sr(a)]}case"Switch":{let a=N("pred",e,t,n),r=N("data",e,t,n);return r.kept||(r=Sr(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let a=e.inputNames.find(r=>_n(r,t,n)!==void 0);if(a){let r=_n(a,t,n);return[Sr(r)]}return}case"Enter":{let a=N("frameName",e,t,n),r=N("tensor",e,t,n);return n.enterFrame(a),[Sr(r)]}case"Exit":{let a=N("tensor",e,t,n);return n.exitFrame(),[Sr(a)]}case"NextIteration":{let a=N("tensor",e,t,n);return n.nextIteration(),[Sr(a)]}case"TensorArrayV3":{let a=N("size",e,t,n),r=N("dtype",e,t,n),s=N("elementShape",e,t,n),i=N("dynamicSize",e,t,n),o=N("clearAfterRead",e,t,n),l=N("identicalElementShapes",e,t,n),u=N("name",e,t,n),c=new fV(u,r,a,s,l,i,o);return n.addTensorArray(c),[c.idTensor,ce(1)]}case"TensorArrayWriteV3":{let a=N("tensorArrayId",e,t,n),r=N("index",e,t,n),s=N("tensor",e,t,n),i=n.getTensorArray(a.id);return i.write(r,s),[i.idTensor]}case"TensorArrayReadV3":{let a=N("tensorArrayId",e,t,n),r=N("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{let a=N("tensorArrayId",e,t,n),r=N("indices",e,t,n),s=N("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,s)]}case"TensorArrayScatterV3":{let a=N("tensorArrayId",e,t,n),r=N("indices",e,t,n),s=N("tensor",e,t,n),i=n.getTensorArray(a.id);return i.scatter(r,s),[i.idTensor]}case"TensorArrayConcatV3":{let a=N("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),s=N("dtype",e,t,n);return[r.concat(s)]}case"TensorArraySplitV3":{let a=N("tensorArrayId",e,t,n),r=N("tensor",e,t,n),s=N("lengths",e,t,n),i=n.getTensorArray(a.id);return i.split(s,r),[i.idTensor]}case"TensorArraySizeV3":{let a=N("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return[ce(r.size(),"int32")]}case"TensorArrayCloseV3":{let a=N("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let a=N("tensorListId",e,t,n),r=N("index",e,t,n),s=N("tensor",e,t,n),i=n.getTensorList(a.id);return i.setItem(r,s),[i.idTensor]}case"TensorListGetItem":{let a=N("tensorListId",e,t,n),r=N("index",e,t,n),s=N("elementShape",e,t,n),i=N("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let a=N("indices",e,t,n),r=N("tensor",e,t,n),s=N("elementShape",e,t,n),i=N("numElements",e,t,n),o=bV(r,a,s,i);return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let a=N("elementShape",e,t,n),r=N("elementDType",e,t,n),s;e.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=N(s,e,t,n),o=yV(a,r,i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{let a=N("tensorListId",e,t,n),r=N("indices",e,t,n),s=N("elementShape",e,t,n),i=N("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,i,s)]}case"TensorListStack":{let a=N("tensorListId",e,t,n),r=N("elementShape",e,t,n),s=N("elementDType",e,t,n),i=N("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,s,i)]}case"TensorListFromTensor":{let a=N("tensor",e,t,n),r=N("elementShape",e,t,n),s=N("elementDType",e,t,n),i=gV(a,r,s);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":{let a=N("tensorListId",e,t,n),r=n.getTensorList(a.id),s=N("dtype",e,t,n),i=N("elementShape",e,t,n);return[r.concat(s,i)]}case"TensorListPushBack":{let a=N("tensorListId",e,t,n),r=N("tensor",e,t,n),s=n.getTensorList(a.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{let a=N("tensorListId",e,t,n),r=N("elementShape",e,t,n),s=N("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,s)]}case"TensorListSplit":{let a=N("tensor",e,t,n),r=N("elementShape",e,t,n),s=N("lengths",e,t,n),i=xV(a,s,r);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function TN(e,t,n){let[a,r]=N("fusedOps",e,t,n),s=a==="biasadd",i=r==="prelu",o=a==="fusedbatchnorm",l=N("numArgs",e,t,n);if(s){if(i&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");let u=N("strides",e,t,n),c=Rm(e,t,n),p=N("dataFormat",e,t,n).toUpperCase(),d=N("dilations",e,t,n),[h,m]=N("args",e,t,n),f=N("leakyreluAlpha",e,t,n);return{stride:u,pad:c,dataFormat:p,dilations:d,biasArg:h,preluArg:m,activationFunc:r,leakyreluAlpha:f}}var wV=(e,t,n)=>{switch(e.op){case"Conv1D":{let a=N("stride",e,t,n),r=N("pad",e,t,n),s=N("dataFormat",e,t,n).toUpperCase(),i=N("dilation",e,t,n);return[xh(N("x",e,t,n),N("filter",e,t,n),a,r,s,i)]}case"Conv2D":{let a=N("strides",e,t,n),r=Rm(e,t,n),s=N("dataFormat",e,t,n).toUpperCase(),i=N("dilations",e,t,n);return[Et(N("x",e,t,n),N("filter",e,t,n),[a[1],a[2]],r,s,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:a,pad:r,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=TN(e,t,n);return[is.conv2d({x:N("x",e,t,n),filter:N("filter",e,t,n),strides:[a[1],a[2]],pad:r,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:r,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=TN(e,t,n);return[is.depthwiseConv2d({x:N("x",e,t,n),filter:N("filter",e,t,n),strides:[a[1],a[2]],pad:r,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=N("outputShape",e,t,n),r=N("strides",e,t,n),s=Rm(e,t,n);return[vh(N("x",e,t,n),N("filter",e,t,n),a,[r[1],r[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=N("strides",e,t,n),r=Rm(e,t,n),s=N("dilations",e,t,n),i=N("dataFormat",e,t,n).toUpperCase();return[ns(N("input",e,t,n),N("filter",e,t,n),[a[1],a[2]],r,i,[s[1],s[2]])]}case"Conv3D":{let a=N("strides",e,t,n),r=N("pad",e,t,n),s=N("dataFormat",e,t,n).toUpperCase(),i=N("dilations",e,t,n);return[Ky(N("x",e,t,n),N("filter",e,t,n),[a[1],a[2],a[3]],r,s,[i[1],i[2],i[3]])]}case"AvgPool":{let a=N("strides",e,t,n),r=N("pad",e,t,n),s=N("kernelSize",e,t,n);return[Zn(N("x",e,t,n),[s[1],s[2]],[a[1],a[2]],r)]}case"MaxPool":{let a=N("strides",e,t,n),r=N("pad",e,t,n),s=N("kernelSize",e,t,n);return[$t(N("x",e,t,n),[s[1],s[2]],[a[1],a[2]],r)]}case"MaxPoolWithArgmax":{let a=N("strides",e,t,n),r=N("pad",e,t,n),s=N("kernelSize",e,t,n),i=N("includeBatchInIndex",e,t,n),{result:o,indexes:l}=O1(N("x",e,t,n),[s[1],s[2]],[a[1],a[2]],r,i);return[o,l]}case"AvgPool3D":{let a=N("strides",e,t,n),r=N("pad",e,t,n),s=N("kernelSize",e,t,n);return[jy(N("x",e,t,n),[s[1],s[2],s[3]],[a[1],a[2],a[3]],r)]}case"MaxPool3D":{let a=N("strides",e,t,n),r=N("pad",e,t,n),s=N("kernelSize",e,t,n);return[ib(N("x",e,t,n),[s[1],s[2],s[3]],[a[1],a[2],a[3]],r)]}case"Dilation2D":{let a=N("strides",e,t,n),r=N("pad",e,t,n),s=N("dilations",e,t,n),i=a[1],o=a[2],l=s[1],u=s[2];return[Jy(N("x",e,t,n),N("filter",e,t,n),[i,o],r,[l,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},kV=(e,t,n)=>{switch(e.op){case"Fill":{let a=N("shape",e,t,n),r=N("dtype",e,t,n),s=N("value",e,t,n);return[Cn(a,s,r)]}case"LinSpace":{let a=N("start",e,t,n),r=N("stop",e,t,n),s=N("num",e,t,n);return[_1(a,r,s)]}case"Multinomial":{let a=N("logits",e,t,n),r=N("numSamples",e,t,n),s=N("seed",e,t,n);return[L1(a,r,s)]}case"OneHot":{let a=N("indices",e,t,n),r=N("depth",e,t,n),s=N("onValue",e,t,n),i=N("offValue",e,t,n);return[Wl(a,r,s,i)]}case"Ones":return[Ya(N("shape",e,t,n),N("dtype",e,t,n))];case"OnesLike":return[On(N("x",e,t,n))];case"RandomUniform":return[Kl(N("shape",e,t,n),N("minval",e,t,n),N("maxval",e,t,n),N("dtype",e,t,n))];case"Range":{let a=N("start",e,t,n),r=N("stop",e,t,n),s=N("step",e,t,n);return[Eh(a,r,s,N("dtype",e,t,n))]}case"TruncatedNormal":{let a=N("shape",e,t,n),r=N("mean",e,t,n),s=N("stdDev",e,t,n),i=N("seed",e,t,n);return[Wh(a,r,s,N("dtype",e,t,n),i)]}case"Zeros":return[vt(N("shape",e,t,n),N("dtype",e,t,n))];case"ZerosLike":return[Ge(N("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function kv(e,t,n){let a=N("boxes",e,t,n),r=N("scores",e,t,n),s=N("maxOutputSize",e,t,n),i=N("iouThreshold",e,t,n),o=N("scoreThreshold",e,t,n),l=N("softNmsSigma",e,t,n);return{boxes:a,scores:r,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}}var IV=async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:a,scores:r,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=kv(e,t,n),u=await Ja.nonMaxSuppressionWithScoreAsync(a,r,s,i,o,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:a,scores:r,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=kv(e,t,n),l=N("padToMaxOutputSize",e,t,n),u=await Ja.nonMaxSuppressionPaddedAsync(a,r,s,i,o,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:a,scores:r,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=kv(e,t,n);return[await Ja.nonMaxSuppressionAsync(a,r,s,i,o)]}case"Where":{let a=ue(N("condition",e,t,n),"bool"),r=[await xb(a)];return a.dispose(),r}case"ListDiff":return B1(N("x",e,t,n),N("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},NV=(e,t,n)=>{switch(e.op){case"TopKV2":{let a=N("x",e,t,n),r=N("k",e,t,n),s=N("sorted",e,t,n),i=yb(a,r,s);return[i.values,i.indices]}case"Unique":{let a=N("x",e,t,n),r=Bh(a);return[r.values,r.indices]}case"UniqueV2":{let a=N("x",e,t,n),r=N("axis",e,t,n),s=Bh(a,r);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},TV=(e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=N("default",e,t,n);return[_n(e.name,t,n)||a];case"Placeholder":return[_n(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let u=N("x",e,t,n);return[Sr(u)]}case"IdentityN":return N("x",e,t,n).map(u=>Sr(u));case"Snapshot":let r=N("x",e,t,n);return[Sr(r)];case"Shape":return[Ze(N("x",e,t,n).shape,"int32")];case"ShapeN":return N("x",e,t,n).map(u=>Ze(u.shape));case"Size":return[ce(N("x",e,t,n).size,"int32")];case"Rank":return[ce(N("x",e,t,n).rank,"int32")];case"NoOp":return[ce(1)];case"Print":let s=N("x",e,t,n),i=N("data",e,t,n),o=N("message",e,t,n),l=N("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let u=0;u<i.length;u++)console.log(Array.prototype.slice.call(i[u].dataSync()).slice(0,l));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}},SV=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ce(0),this.tensorMap=new Map,qt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ce(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(a=>a.dispose()),this.tensorMap.clear(),M(()=>{let a=ct(t),r=n.length,s=a.length;I.assert(r===s,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`);for(let i=0;i<r;i++){let o=n[i],l=a[i];qt(l),this.tensorMap.set(o,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return M(()=>{let a=[];for(let r=0;r<n.length;r++){let s=n[r],i=this.findWithDefault(s,t);a.push(i)}return Dt(a)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},CV=async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=N("keyDType",e,t,n),s=N("valueDType",e,t,n),i=new SV(r,s);return a.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let r=N("tableHandle",e,t,n,a),s=N("keys",e,t,n),i=N("values",e,t,n);return[await a.getHashTableById(r.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let r=N("tableHandle",e,t,n,a),s=N("keys",e,t,n),i=N("defaultValue",e,t,n);return[await a.getHashTableById(r.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=N("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},AV=(e,t,n)=>{switch(e.op){case"ResizeBilinear":{let a=N("images",e,t,n),r=N("size",e,t,n),s=N("alignCorners",e,t,n),i=N("halfPixelCenters",e,t,n);return[Ja.resizeBilinear(a,[r[0],r[1]],s,i)]}case"ResizeNearestNeighbor":{let a=N("images",e,t,n),r=N("size",e,t,n),s=N("alignCorners",e,t,n),i=N("halfPixelCenters",e,t,n);return[Ja.resizeNearestNeighbor(a,[r[0],r[1]],s,i)]}case"CropAndResize":{let a=N("image",e,t,n),r=N("boxes",e,t,n),s=N("boxInd",e,t,n),i=N("cropSize",e,t,n),o=N("method",e,t,n),l=N("extrapolationValue",e,t,n);return[Ja.cropAndResize(a,r,s,i,o,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},FV=(e,t,n)=>{switch(e.op){case"Equal":return[as(N("a",e,t,n),N("b",e,t,n))];case"NotEqual":return[Ri(N("a",e,t,n),N("b",e,t,n))];case"Greater":return[ha(N("a",e,t,n),N("b",e,t,n))];case"GreaterEqual":return[rs(N("a",e,t,n),N("b",e,t,n))];case"Less":return[Nh(N("a",e,t,n),N("b",e,t,n))];case"LessEqual":return[Di(N("a",e,t,n),N("b",e,t,n))];case"LogicalAnd":return[ma(N("a",e,t,n),N("b",e,t,n))];case"LogicalNot":return[Oc(N("a",e,t,n))];case"LogicalOr":return[Ah(N("a",e,t,n),N("b",e,t,n))];case"Select":case"SelectV2":return[Sn(N("condition",e,t,n),N("a",e,t,n),N("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},_V=(e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[ze(N("a",e,t,n),N("b",e,t,n),N("transposeA",e,t,n),N("transposeB",e,t,n))];case"Transpose":return[Ve(N("x",e,t,n),N("perm",e,t,n))];case"_FusedMatMul":let[a,r]=N("fusedOps",e,t,n),s=a==="biasadd",i=r==="prelu",o=N("numArgs",e,t,n),l=N("leakyreluAlpha",e,t,n);if(s){if(i&&o!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&o!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,c]=N("args",e,t,n);return[is.matMul({a:N("a",e,t,n),b:N("b",e,t,n),transposeA:N("transposeA",e,t,n),transposeB:N("transposeB",e,t,n),bias:u,activation:r,preluActivationWeights:c,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},EV=(e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[br(N("x",e,t,n),N("mean",e,t,n),N("variance",e,t,n),N("offset",e,t,n),N("scale",e,t,n),N("epsilon",e,t,n))];case"FusedBatchNormV3":return[br(N("x",e,t,n),N("mean",e,t,n),N("variance",e,t,n),N("offset",e,t,n),N("scale",e,t,n),N("epsilon",e,t,n))];case"LRN":return[nb(N("x",e,t,n),N("radius",e,t,n),N("bias",e,t,n),N("alpha",e,t,n),N("beta",e,t,n))];case"Softmax":return[Sa(N("x",e,t,n))];case"LogSoftmax":return[Ch(N("x",e,t,n))];case"SparseToDense":return[vb(N("sparseIndices",e,t,n),N("outputShape",e,t,n),N("sparseValues",e,t,n),N("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},$V=(e,t,n)=>{switch(e.op){case"Max":{let i=N("axis",e,t,n),o=N("keepDims",e,t,n);return[ea(N("x",e,t,n),i,o)]}case"Mean":{let i=N("axis",e,t,n),o=N("keepDims",e,t,n);return[Ct(N("x",e,t,n),i,o)]}case"Min":{let i=N("axis",e,t,n),o=N("keepDims",e,t,n);return[ql(N("x",e,t,n),i,o)]}case"Sum":{let i=N("axis",e,t,n),o=N("keepDims",e,t,n);return[Se(N("x",e,t,n),i,o)]}case"All":{let i=N("axis",e,t,n),o=N("keepDims",e,t,n);return[yh(N("x",e,t,n),i,o)]}case"Any":{let i=N("axis",e,t,n),o=N("keepDims",e,t,n);return[_c(N("x",e,t,n),i,o)]}case"ArgMax":{let i=N("axis",e,t,n);return[Ec(N("x",e,t,n),i)]}case"ArgMin":{let i=N("axis",e,t,n);return[Ly(N("x",e,t,n),i)]}case"Prod":{let i=N("axis",e,t,n),o=N("keepDims",e,t,n);return[_h(N("x",e,t,n),i,o)]}case"Cumsum":{let i=N("axis",e,t,n),o=N("exclusive",e,t,n),l=N("reverse",e,t,n);return[kh(N("x",e,t,n),i,o,l)]}case"Bincount":let a=N("x",e,t,n),r=N("weights",e,t,n),s=N("size",e,t,n);return[x1(a,r,s)];case"DenseBincount":{let i=N("x",e,t,n),o=N("weights",e,t,n),l=N("size",e,t,n),u=N("binaryOutput",e,t,n);return[T1(i,o,l,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},DV=(e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=N("n",e,t,n),r=N("axis",e,t,n),s=N("tensors",e,t,n);return s=s.slice(0,a),[Je(s,r)]}case"Gather":{let a=N("x",e,t,n),r=N("indices",e,t,n);return[$i(a,ue(r,"int32"),0)]}case"GatherV2":{let a=N("axis",e,t,n),r=N("batchDims",e,t,n),s=N("x",e,t,n),i=N("indices",e,t,n);return[$i(s,ue(i,"int32"),a,r)]}case"Reverse":{let a=N("dims",e,t,n),r=[];for(let i=0;i<a.length;i++)a[i]&&r.push(i);let s=N("x",e,t,n);return[Ln(s,r)]}case"ReverseV2":{let a=N("axis",e,t,n),r=N("x",e,t,n);return[Ln(r,a)]}case"Slice":{let a=N("begin",e,t,n),r=N("size",e,t,n);return[Be(N("x",e,t,n),a,r)]}case"StridedSlice":{let a=N("begin",e,t,n),r=N("end",e,t,n),s=N("strides",e,t,n),i=N("beginMask",e,t,n),o=N("endMask",e,t,n),l=N("ellipsisMask",e,t,n),u=N("newAxisMask",e,t,n),c=N("shrinkAxisMask",e,t,n),p=N("x",e,t,n);return[fb(p,a,r,s,i,o,l,u,c)]}case"Pack":return M(()=>{let a=N("axis",e,t,n),r=N("tensors",e,t,n),s=r[0].shape,i=ss(r[0]).shape,o=r.map(l=>{let u=I.arraysEqual(l.shape,s);if(!u&&!I.arraysEqual(ss(l).shape,i))throw new Error("the input tensors shape does not match");return u?l:H(l,s)});return[Dt(o,a)]});case"Unpack":{let a=N("axis",e,t,n),r=N("tensor",e,t,n);return ct(r,a)}case"Tile":{let a=N("reps",e,t,n);return[qa(N("x",e,t,n),a)]}case"Split":case"SplitV":{let a=N("axis",e,t,n),r=N("numOrSizeSplits",e,t,n),s=N("x",e,t,n);return zn(s,r,a)}case"ScatterNd":{let a=N("indices",e,t,n),r=N("values",e,t,n),s=N("shape",e,t,n);return[H1(a,r,s)]}case"GatherNd":{let a=N("x",e,t,n),r=N("indices",e,t,n);return[j1(a,r)]}case"SparseToDense":{let a=N("sparseIndices",e,t,n),r=N("outputShape",e,t,n),s=N("sparseValues",e,t,n),i=N("defaultValue",e,t,n);return[vb(a,s,r,s.dtype===i.dtype?i:ue(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},MV=(e,t,n)=>{switch(e.op){case"FFT":return[Vc(N("x",e,t,n))];case"IFFT":return[Jl(N("x",e,t,n))];case"RFFT":return[Uc(N("x",e,t,n))];case"IRFFT":return[Lh(N("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},RV=(e,t,n)=>{switch(e.op){case"Cast":return[ue(N("x",e,t,n),N("dtype",e,t,n))];case"ExpandDims":{let a=N("axis",e,t,n);return[Rn(N("x",e,t,n),a)]}case"Squeeze":{let a=N("axis",e,t,n);return[ss(N("x",e,t,n),a)]}case"Reshape":return[H(N("x",e,t,n),N("shape",e,t,n))];case"MirrorPad":return[ob(N("x",e,t,n),N("padding",e,t,n),N("mode",e,t,n))];case"PadV2":case"Pad":return[ta(N("x",e,t,n),N("padding",e,t,n),N("constantValue",e,t,n))];case"SpaceToBatchND":{let a=N("blockShape",e,t,n),r=N("paddings",e,t,n);return[Lc(N("x",e,t,n),a,r)]}case"BatchToSpaceND":{let a=N("blockShape",e,t,n),r=N("crops",e,t,n);return[Dc(N("x",e,t,n),a,r)]}case"DepthToSpace":{let a=N("blockSize",e,t,n),r=N("dataFormat",e,t,n).toUpperCase();return[Yy(N("x",e,t,n),a,r)]}case"BroadcastTo":return[Mc(N("x",e,t,n),N("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function SN(e,t,n,a){let r=((s,i,o)=>{switch(s.category){case"arithmetic":return M(()=>hV(s,i,o));case"basic_math":return M(()=>mV(s,i,o));case"control":return vV(s,i,o);case"convolution":return M(()=>wV(s,i,o));case"creation":return M(()=>kV(s,i,o));case"dynamic":return IV(s,i,o);case"evaluation":return M(()=>NV(s,i,o));case"image":return M(()=>AV(s,i,o));case"graph":return M(()=>TV(s,i,o));case"logical":return M(()=>FV(s,i,o));case"matrices":return M(()=>_V(s,i,o));case"normalization":return M(()=>EV(s,i,o));case"reduction":return M(()=>$V(s,i,o));case"slice_join":return M(()=>DV(s,i,o));case"spectral":return M(()=>MV(s,i,o));case"transformation":return M(()=>RV(s,i,o));case"hash_table":return CV(s,i,o,a);case"custom":let l=nN(s.op);if(l&&l.customExecutor)return l.customExecutor(new dV(s,i,o));throw TypeError(`Custom op ${s.op} is not registered.`);default:throw TypeError(`Unknown op '${s.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return I.isPromise(r)?r.then(s=>[].concat(s)):[].concat(r)}var CN=class{constructor(e={},t={},n={},a={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function FN(e,t,n,a){let r=new Set,s=[],i=null,o=null,l=new Set,u=Object.keys(e).map(d=>Bn(d)[0]),c=[];a!=null&&(c=a.map(d=>Bn(d.name)[0]));let p=[...t];for(;p.length>0;){let d=p.pop();if((AN(d)||PV(d)||OV(d))&&i==null&&(i=d,o=i.children.map(h=>h.name).filter(h=>r.has(h))),r.add(d.name),n[d.name]==null&&u.indexOf(d.name)===-1&&c.indexOf(d.name)===-1){if(d.inputs.length===0){s.push(d.name);continue}d.inputs.forEach(h=>{l.has(h.name)||(l.add(h.name),p.push(h))})}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:s,dynamicNode:i,syncInputs:o}}function LV(e,t,n){let{usedNodes:a,inputs:r}=n,s=[],i=Object.keys(r).map(c=>Bn(c)[0]).map(c=>e.nodes[c]),o=e.initNodes;i.forEach(c=>{a.has(c.name)&&s.push(c)}),e.weights.forEach(c=>{a.has(c.name)&&s.push(c)}),o!=null&&o.forEach(c=>{a.has(c.name)&&s.push(c)});let l=new Set,u=[];for(;s.length>0;){let c=s.pop();l.add(c.name),t[c.name]||u.push(c),c.children.forEach(p=>{!l.has(p.name)&&a.has(p.name)&&p.inputs.every(d=>l.has(d.name))&&s.push(p)})}return u}var zV=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],WV=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],BV=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function AN(e){return zV.indexOf(e.op)>=0}function PV(e){return WV.indexOf(e.op)>=0}function OV(e){return BV.indexOf(e.op)>=0}var Iv=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new Iv(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(a=>a.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(r=>r.name).sort(),a=t.map(r=>r.name).sort();return n.join(this.SEPERATOR)+"--"+a.join(this.SEPERATOR)}compile(e,t){let n=FN(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:s}=n;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(a.length>0){let i=t.map(l=>l.name),o=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${o}]. Missing the following inputs: [${a}]`)}return LV(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let a=n.map(c=>this.graph.nodes[Bn(c)[0]]),r=t.map(c=>Bn(c)[0]),s=r.map(c=>this.graph.nodes[c]);s.length===0&&(s=this._outputs);let i=this.getCompilationKey(a,s),o=this.compiledMap.get(i);o==null&&(o=this.compile(e,s),this.compiledMap.set(i,o));let l={},u={};return M(()=>{let c=new CN(this.weightMap,l,u,this.functionExecutorMap),p=Object.assign({},this.weightMap);Object.keys(e).forEach(m=>{let[f,g]=Bn(m),y=[];y[g]=e[m],p[f]=y});let d=this.getFrozenTensorIds(p),h={};for(let m=0;m<o.length;m++){let f=o[m];if(!p[f.name]){let g=SN(f,p,c,this._resourceManager);if(I.isPromise(g))throw new Error(`The execution of the op '${f.op}' returned a promise. Please use model.executeAsync() instead.`);p[f.name]=g,this.checkTensorForDisposal(f.name,f,p,c,d,r,h)}}return this.parent==null&&c.dispose(d),t.map(m=>_n(m,p,c))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(a=>a.id)));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,s,i){t.category==="control"||s.indexOf(e)!==-1||(n[e].forEach(o=>{o!=null&&(i[o.id]=(i[o.id]||0)+t.children.length)}),t.inputs.forEach(o=>{if(o.category!=="control"){let l=q4(o.name,n,a);l!=null&&l.forEach(u=>{if(u&&!r.has(u.id)){let c=i[u.id];c===1?(u.dispose(),delete i[u.id]):c!=null&&i[u.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,a={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));let s=new CN(this.weightMap,a,r,this.functionExecutorMap),i=await this.executeWithControlFlow(e,s,t,n),o=t.map(p=>_n(p,i,s)),l=o.map(p=>p.id),u=Object.keys(e).map(p=>e[p].id),c=new Set([...l,...u,...this.weightIds]);return Object.keys(i).forEach(p=>{i[p].forEach(d=>{d&&!d.isDisposed&&!c.has(d.id)&&d.dispose()})}),this.parent==null&&s.dispose(c),o}async executeFunctionAsync(e,t,n){let a=e.reduce((r,s,i)=>(r[this.inputs[i].name]=s,r),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){let r=Object.keys(e),s=r.map(b=>this.graph.nodes[Bn(b)[0]]),i=n.map(b=>Bn(b)[0]),o=i.map(b=>this.graph.nodes[b]);o.length===0&&(o=this._outputs);let{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:p}=FN(e,o,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map(b=>({node:b,contexts:t.currentContext})),h=Object.assign({},this.weightMap);Object.keys(e).forEach(b=>{let[x,v]=Bn(b),k=[];k[v]=e[b],h[x]=k});let m={},f=this.getFrozenTensorIds(h),g={};for(;d.length>0;){let b=this.processStack(s,d,t,h,g,f,i,m,l);await Promise.all(b)}c==null&&!a&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=o.filter(b=>!AN(b)&&!_n(b.name,h,t)).map(b=>b.name);if(y.length>0){let b="";throw c!=null&&(b=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${u}]. ${b}`)}return h}processStack(e,t,n,a,r,s,i,o,l){let u=[];for(;t.length>0;){let c=t.pop();n.currentContext=c.contexts;let p="";if(c.node.op==="Enter"&&N("isConstant",c.node,a,n)&&([p]=Tr(c.node.name,n)),a[c.node.name]==null){let d=SN(c.node,a,n,this._resourceManager);p||([p]=Tr(c.node.name,n));let h=n.currentContext;I.isPromise(d)?u.push(d.then(m=>(a[p]=m,n.currentContext=h,this.checkTensorForDisposal(p,c.node,a,n,s,i,o),this.processChildNodes(c.node,t,n,a,r,l),m))):(a[p]=d,this.checkTensorForDisposal(p,c.node,a,n,s,i,o),this.processChildNodes(c.node,t,n,a,r,l))}else this.processChildNodes(c.node,t,n,a,r,l)}return u}processChildNodes(e,t,n,a,r,s){e.children.forEach(i=>{let[o]=Tr(i.name,n);r[o]||!s.has(i.name)||(i.op==="Merge"?i.inputNames.some(l=>!!_n(l,a,n))&&(r[o]=!0,t.push({contexts:n.currentContext,node:i})):i.inputNames.every(l=>!!_n(l,a,n))&&(r[o]=!0,t.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[a]=Bn(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){let s=r.attrParams.shape.value,i=s.length===n.shape.length&&n.shape.every((o,l)=>s[l]===-1||s[l]===o);I.assert(i,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${s}], but was [${n.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&I.assert(n.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let a=this._signature.inputs[n];t[a.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[a]=Bn(n);return this.graph.nodes[a]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=Bn(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},VV=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},UV="?tfjs-format=file",GV="model.json",_N=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new VV}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=jt.browserHTTPRequest(e,this.loadOptions);else{let t=jt.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(jt.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let a=jt.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Iv(wN.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(a),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let r=wN.Instance.transformGraph(e.modelInitializer);this.initializer=new Iv(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=jt.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Fe)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,a)=>(t[n]=e[a],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function HV(e,t={}){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&e.load==null&&(e.endsWith("/")||(e=e+"/"),e=`${e}${GV}${UV}`);let n=new _N(e,t);return await n.load(),n}var EN="3.3.0",$N={};Oe($N,{CSVDataset:()=>MN,Dataset:()=>ou,FileDataSource:()=>RN,TextLineDataset:()=>DN,URLDataSource:()=>PN,array:()=>jV,csv:()=>XV,func:()=>KV,generator:()=>YV,microphone:()=>QV,version_data:()=>ON,webcam:()=>JV,zip:()=>qV});var ZV=Do(a0()),eU=Do(a0());function tU(e,t){return Pm(e,t)}function Pm(e,t,n=new Map,a=new Set){if(e==null)return null;if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse)if(lu(e)){let s=Array.isArray(e)?[]:{};a.add(e);for(let i in e){let o=e[i],l=Pm(o,t,n,a);s[i]=l}return a.delete(e),s}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,r.value),r.value}function nU(e,t=zN){return LN(e,t)}function LN(e,t,n=new Set){let a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse)if(lu(a)){let s=Array.isArray(a)?[]:{};n.add(a);for(let i in a){let o=e.map(u=>u[i]),l=LN(o,t,n);s[i]=l}return n.delete(a),s}else throw new Error(`Can't recurse into non-iterable type: ${a}`);else return r.value}function zN(e){return e===null?null:lu(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function WN(e,t){let n=new Map;Pm(e,t,n);for(let a of Array.from(n.keys())){let r=n.get(a);if(I.isPromise(r)){let s=await r;n.set(a,s)}}return Pm(e,t,n)}function lu(e){return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof Fe))}function rU(e){return e==null||aU(e)||Array.isArray(e)||typeof e=="object"&&e instanceof Fe||I.isTypedArray(e)}function aU(e){return e===null||typeof e!="object"&&typeof e!="function"}function iU(e){return tU(e,sU)}function sU(e){return e instanceof Fe?{value:e.clone(),recurse:!1}:lu(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var BN=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},Nv=class extends BN{constructor(){super(Nv.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let a=0;a<n;a++)t[a]=this.get(this.wrap(this.begin+a));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};Nv.INITIAL_CAPACITY=32;function VN(e){return new oU(e)}function Tv(e){return new lU(e)}function uU(e,t){return new UN(e,t)}function pU(e,t=ms.FAIL){return new cU(e,t)}var Jt=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new bU(this,e)}filter(e){return new gU(this,e)}map(e){return new yU(this,e)}mapAsync(e){return new GN(this,e)}serialMapAsync(e){return new GN(this,e).serial()}flatmap(e){return new xU(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new fU(this,e,t)}columnMajorBatch(e,t=!0,n=zN){return this.rowMajorBatch(e,t).map(a=>nU(a,n))}concatenate(e,t){return new UN(VN([this,e]),t)}take(e){return e<0||e==null?this:new mU(this,e)}skip(e){return e<0||e==null?this:new hU(this,e)}prefetch(e){return new HN(this,e)}shuffle(e,t){return new vU(this,e,t)}serial(){return new dU(this)}},oU=class extends Jt{constructor(e){super();this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:iU(e),done:!1}}},lU=class extends Jt{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},dU=class extends Jt{constructor(e){super();this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},hU=class extends Jt{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Ee(e.value)}return this.upstream.next()}},mU=class extends Jt{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},fU=class extends Jt{constructor(e,t,n=!0){super();this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},gU=class extends Jt{constructor(e,t){super();this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Ee(e.value)}}},yU=class extends Jt{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Na.getTensorsInContainer(e.value),n=this.transform(e.value),a=Na.getTensorsInContainer(n);for(let r of t)Na.isTensorInList(r,a)||r.dispose();return{value:n,done:!1}}},bU=class extends Jt{constructor(e,t){super();this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},GN=class extends Jt{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Na.getTensorsInContainer(e.value),n=await this.transform(e.value),a=Na.getTensorsInContainer(n);for(let r of t)Na.isTensorInList(r,a)||r.dispose();return{value:n,done:!1}}},Sv=class extends Jt{constructor(){super();this.outputQueue=new Nv,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},xU=class extends Sv{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Na.getTensorsInContainer(e.value),n=this.transform(e.value),a=Na.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let r of t)Na.isTensorInList(r,a)||r.dispose();return!0}},UN=class extends Jt{constructor(e,t){super();this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},ms;(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(ms||(ms={}));var cU=class extends Jt{constructor(e,t=ms.FAIL){super();this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function a(s){return s instanceof Jt?{value:s.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let r=await WN(this.iterators,a);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case ms.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case ms.SHORTEST:return{value:null,done:!0};case ms.LONGEST:default:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},HN=class extends Jt{constructor(e,t){super();this.upstream=e,this.bufferSize=t,this.buffer=new BN(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},vU=class extends HN{constructor(e,t,n){super(e,t);this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=eU.alea(n||I.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},ou=class{constructor(){this.size=null}batch(e,t=!0){let n=this;I.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let a;return this.size===Infinity||this.size==null?a=this.size:t?a=Math.ceil(this.size/e):a=Math.floor(this.size/e),Vn(async()=>(await n.iterator()).columnMajorBatch(e,t,wU),a)}concatenate(e){let t=this,n;return this.size===Infinity||e.size===Infinity?n=Infinity:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,Vn(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===Infinity?n=Infinity:n=null,Vn(async()=>(await t.iterator()).filter(a=>M(()=>e(a))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Vn(async()=>(await t.iterator()).map(n=>M(()=>e(n))),this.size)}mapAsync(e){let t=this;return Vn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Vn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=Infinity:n=null,Vn(async()=>{let a=Tv(async()=>({value:await t.iterator(),done:!1}));return uU(a.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,Vn(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let a=this,r=ZV.alea(t||I.now().toString());return Vn(async()=>{let s=r.int32();return n&&(s+=r.int32()),(await a.iterator()).shuffle(e,s.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,Vn(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===Infinity)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===Infinity)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};ou.MAX_BUFFER_SIZE=1e4;function Vn(e,t=null){return new class extends ou{constructor(){super(...arguments);this.size=t}async iterator(){return e()}}}function jV(e){return Vn(async()=>VN(e),e.length)}function qV(e){if(!lu(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return Vn(async()=>{let n=await WN(e,a=>{if(a instanceof ou)return{value:a.iterator(),recurse:!1};if(lu(a))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return pU(n,ms.SHORTEST)},t)}function wU(e){if(e===null)return null;let t=e[0];return rU(t)?{value:kU(e),recurse:!1}:{value:null,recurse:!0}}function kU(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Fe?Dt(e):Jn(e)}var DN=class extends ou{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}},Om='"',pp=Symbol("out"),jN=Symbol("field"),Lm=Symbol("quote"),Cv=Symbol("quoteafterquote"),qN=Symbol("quoteinquote"),MN=class extends ou{constructor(e,t){super();this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new DN(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(I.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&I.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((a,r)=>(a[r]=a[r]+1||1,a),{}),n=Object.keys(t).filter(a=>t[a]>1);if(I.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let a of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(a)===-1)throw new Error('The key "'+a+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},a={};for(let r=0;r<this.fullColumnNames.length;r++){let s=this.fullColumnNames[r],i=this.columnConfigs?this.columnConfigs[s]:null;if(!(this.configuredColumnsOnly&&!i)){let o=t[r],l=null;if(o==="")if(i&&i.default!==void 0)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let u=Number(o);if(isNaN(u))i&&i.dtype==="bool"?l=this.getBoolean(o):l=o;else if(!i||!i.dtype)l=u;else switch(i.dtype){case"float32":l=u;break;case"int32":l=Math.floor(u);break;case"bool":l=this.getBoolean(o);break;default:l=u}}i&&i.isLabel?a[s]=l:n[s]=l}}return Object.keys(a).length===0?n:{xs:n,ys:a}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],a=0,r=e.length,s=pp;for(let i=0;i<r;i++)switch(s){case pp:switch(e.charAt(i)){case Om:a=i+1,s=Lm;break;case this.delimiter:if(a=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),s=pp;break;default:s=jN,a=i;break}break;case jN:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(a,i)),s=pp,a=i+1;break;default:}break;case Lm:switch(e.charAt(i)){case Om:s=Cv;break;default:}break;case Cv:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(a,i-1)),s=pp,a=i+1;break;case Om:s=Lm;break;default:s=qN;break}break;case qN:switch(e.charAt(i)){case Om:s=Lm;break;default:}break;default:}if(s===Cv?n.push(e.substring(a,r-1)):n.push(e.substring(a)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},XN=class extends Jt{constructor(e){super();this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Z().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new XN(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let a=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(a,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let a=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(a,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(a=>{let r=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-Infinity&&a({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),a({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((a,r)=>n.set(a,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(I.sizeFromShape(t));return n.set(e,n.length-e.length),Jn(n,t)}},KN=class extends Jt{constructor(e,t){super();if(this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Ze([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,a=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,r=(1-n)/2,s=(1-a)/2,i=r+n,o=a+s;this.cropBox=Ca([s,r,o,i],[1,4])}else this.cropBox=Ca([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Z().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new KN(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&I.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Fi.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return M(()=>{let t=Rn(ue(e,"float32"),0),n;n=Ja.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let a=n.shape;return H(n,a.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},YN=class{},JN=class extends Jt{split(e){return new IU(this,e)}},IU=class extends JN{constructor(e,t){super();this.upstream=e,this.impl=new NU(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},NU=class extends Sv{constructor(e,t){super();this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},SU=class extends Jt{decodeUTF8(){return new TU(this)}},TU=class extends JN{constructor(e){super();this.upstream=e,this.impl=new CU(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},CU=class extends Sv{constructor(e){super();if(this.upstream=e,Z().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=OF();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return Z().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},QN=class extends SU{constructor(e,t={}){super();this.file=e,this.options=t,I.assert(e instanceof Uint8Array||(Z().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let a=new FileReader;a.onload=s=>{let i=a.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(i)},a.onabort=s=>t(new Error("Aborted")),a.onerror=s=>t(new Error(s.type));let r=this.file.slice(this.offset,n);a.readAsArrayBuffer(r)}this.offset=n}),done:!1}}};async function FU(e,t={}){let n,a;typeof e=="string"?n=e:(n=e.url,a=AU(e));let r=await I.fetch(n,a);if(r.ok){let s=new Uint8Array(await r.arrayBuffer());return new QN(s,t)}else throw new Error(r.statusText)}var AU=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function ZN(e){return typeof e=="string"&&e.substr(0,7)==="file://"}var RN=class extends YN{constructor(e,t={}){super();this.input=e,this.options=t}async iterator(){if(ZN(this.input)&&Z().get("IS_NODE")){let e=require("fs");this.input=e.readFileSync(this.input.substr(7))}return new QN(this.input,this.options)}},PN=class extends YN{constructor(e,t={}){super();this.url=e,this.fileOptions=t}async iterator(){return ZN(this.url)?new RN(this.url,this.fileOptions).iterator():FU(this.url,this.fileOptions)}};function XV(e,t={}){return new MN(new PN(e),t)}function KV(e){let t=Tv(e);return Vn(async()=>t)}function YV(e){return Vn(async()=>{let t=await e();return Tv(()=>t.next())})}async function JV(e,t){return KN.create(e,t)}async function QV(e){return XN.create(e)}var ON="3.3.0";function ve(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&I.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var _U=Qa.whereImpl,Av=class extends Zu{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new kd(this,Ha())}nextDataId(){return Av.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Z().get("IS_NODE")&&E.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if(t==="string"&&n!=null&&n.length>0&&I.isString(n[0])){let r=n.map(s=>I.encodeString(s));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let a=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return E.mergeRealAndImagArrays(a,r)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(a=>I.decodeString(a))}catch(a){throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,n)}makeOutput(e,t,n){let a=this.write(e,t,n);return Ha().makeTensorFromDataId(a,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=I.now();return e(),{kernelMs:I.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ve([e],"where");let t=this.readSync(e.dataId);return _U(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};Av.nextDataId=0;var e2={};Oe(e2,{addImpl:()=>n2,bincountImpl:()=>Fv,bincountReduceImpl:()=>a2,ceilImpl:()=>r2,concatImpl:()=>_v,expImpl:()=>s2,expm1Impl:()=>i2,floorImpl:()=>o2,gatherV2Impl:()=>l2,greaterImpl:()=>u2,lessImpl:()=>c2,linSpaceImpl:()=>p2,logImpl:()=>d2,maxImpl:()=>h2,maximumImpl:()=>m2,minimumImpl:()=>f2,multiplyImpl:()=>Ev,negImpl:()=>g2,notEqualImpl:()=>y2,prodImpl:()=>b2,rangeImpl:()=>Dv,rsqrtImpl:()=>x2,simpleAbsImpl:()=>t2,sliceImpl:()=>zm,squaredDifferenceImpl:()=>v2,stridedSliceImpl:()=>w2,subImpl:()=>k2,tileImpl:()=>I2,topKImpl:()=>N2,transposeImpl:()=>$v,uniqueImpl:()=>T2});function t2(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var EU=e=>{let{x:t}=e.inputs,n=e.backend;ve(t,"abs");let a=new Float32Array(I.sizeFromShape(t.shape)),r=n.data.get(t.dataId).values;return a=t2(r),n.makeOutput(a,t.shape,"float32")},$U={kernelName:Po,backendName:"cpu",kernelFunc:EU};function Rt(e){return(t,n,a,r,s)=>{let i=E.assertAndGetBroadcastShape(t,n),o=i.length,l=I.computeStrides(i),u=I.sizeFromShape(i),c=I.getTypedArrayFromDType(s,u),p=t.length,d=n.length,h=I.computeStrides(t),m=I.computeStrides(n),f=E.getBroadcastDims(t,i),g=E.getBroadcastDims(n,i);if(f.length+g.length===0)for(let y=0;y<c.length;++y)c[y]=e(a[y%a.length],r[y%r.length]);else for(let y=0;y<c.length;++y){let b=I.indexToLoc(y,o,l),x=b.slice(-p);f.forEach(S=>x[S]=0);let v=I.locToIndex(x,p,h),k=b.slice(-d);g.forEach(S=>k[S]=0);let w=I.locToIndex(k,d,m);c[y]=e(a[v],r[w])}return[c,i]}}function Un(e){let{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(a.shape,"complex64"),l=n.data.get(o.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",i)},o}var DU={kernelName:Ed,backendName:"cpu",kernelFunc:Un};function Wm(e,t,n="float32"){if(n==="complex64"){let r=Wm(e,t,"float32"),s=Wm(e,t,"float32");return Un({inputs:{real:r,imag:s},backend:e})}let a=I.makeZerosTypedArray(I.sizeFromShape(t),n);return e.makeTensorInfo(t,n,a)}function rr(e){let{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}var MU={kernelName:Xs,backendName:"cpu",kernelFunc:rr};function Xi(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}var RU={kernelName:Jd,backendName:"cpu",kernelFunc:Xi};function fs(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:s}=a;if(s==="complex64"){if(r.dtype==="complex64")return rr({inputs:{x:r},backend:n});let i=Wm(n,r.shape,r.dtype),o=fs({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=Un({inputs:{real:o,imag:i},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}if(r.dtype==="complex64"){let i=Xi({inputs:{input:r},backend:n}),o=fs({inputs:{x:i},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(i),o}if(!I.hasEncodingLoss(r.dtype,s)){let i=rr({inputs:{x:r},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32"){let i=n.data.get(r.dataId).values,o=Int32Array.from(i);return n.makeTensorInfo(r.shape,"int32",o)}if(s==="bool"){let i=n.data.get(r.dataId).values,o=I.toTypedArray([0],r.dtype),[l,u]=Rt((c,p)=>c!==p?1:0)(r.shape,[],i,o,"bool");return n.makeTensorInfo(u,"bool",l)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${s}`)}var PU={kernelName:Rs,backendName:"cpu",kernelFunc:fs};function Qt(e,t,n,a){return n==null?({inputs:r,backend:s})=>{let{a:i,b:o}=r,l=s;ve([i,o],e);let u=l.data.get(i.dataId).values,c=l.data.get(o.dataId).values,p=a||i.dtype,[d,h]=t(i.shape,o.shape,u,c,p);return l.makeTensorInfo(h,p,d)}:({inputs:r,backend:s})=>{let{a:i,b:o}=r,l=s;if(i.dtype==="complex64"||o.dtype==="complex64"){let u=fs({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),p=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,h=l.data.get(p.dataId).values,m=l.data.get(d.dataId).values,f=fs({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(f.dataId),y=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,x=l.data.get(y.dataId).values,v=l.data.get(b.dataId).values,[k,w,S]=n(i.shape,o.shape,h,m,x,v),A=l.makeTensorInfo(S,"float32",k),F=l.makeTensorInfo(S,"float32",w),D=Un({inputs:{real:A,imag:F},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(f),l.disposeIntermediateTensorInfo(A),l.disposeIntermediateTensorInfo(F),D}else{let u=l.data.get(i.dataId).values,c=l.data.get(o.dataId).values,p=a||i.dtype,[d,h]=t(i.shape,o.shape,u,c,p);return l.makeTensorInfo(h,p,d)}}}function Mv(e){return(t,n,a,r,s,i)=>{let o=E.assertAndGetBroadcastShape(t,n),l=I.sizeFromShape(o),u=o.length,c=I.computeStrides(o),p=I.getTypedArrayFromDType("float32",l),d=I.getTypedArrayFromDType("float32",l),h=E.getBroadcastDims(t,o),m=E.getBroadcastDims(n,o),f=E.mergeRealAndImagArrays(a,r),g=E.mergeRealAndImagArrays(s,i),y=t.length,b=I.computeStrides(t),x=n.length,v=I.computeStrides(n);if(h.length+m.length===0)for(let k=0;k<p.length;k++){let w=k%f.length,S=k%g.length,A=e(f[w*2],f[w*2+1],g[S*2],g[S*2+1]);p[k]=A.real,d[k]=A.imag}else for(let k=0;k<p.length;k++){let w=I.indexToLoc(k,u,c),S=w.slice(-y);h.forEach(L=>S[L]=0);let A=I.locToIndex(S,y,b),F=w.slice(-x);m.forEach(L=>F[L]=0);let D=I.locToIndex(F,x,v),R=e(f[A*2],f[A*2+1],g[D*2],g[D*2+1]);p[k]=R.real,d[k]=R.imag}return[p,d,o]}}var n2=Rt((e,t)=>e+t),OU=Mv((e,t,n,a)=>({real:e+n,imag:t+a})),dp=Qt(Hr,n2,OU),LU={kernelName:Hr,backendName:"cpu",kernelFunc:dp};function Fv(e,t,n,a,r){let s=I.sizeFromShape(a),i=I.makeZerosTypedArray(r,n);for(let o=0;o<e.length;o++){let l=e[o];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(s>0?i[l]+=t[o]:i[l]+=1)}return i}function a2(e,t,n,a=!1){let r=e.shape[0],s=e.shape[1],i=Le([r,n],t.dtype);for(let o=0;o<r;o++)for(let l=0;l<s;l++){let u=e.get(o,l);if(u<0)throw new Error("Input x must be non-negative!");u>=n||(a?i.set(1,o,u):t.size>0?i.set(i.get(o,u)+t.get(o,l),o,u):i.set(i.get(o,u)+1,o,u))}return i}function uu(e){return(t,n,a)=>{let r=I.getTypedArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)r[s]=e(t[s],a);return r}}function it(e,t,n){return({inputs:a,attrs:r,backend:s})=>{let{x:i}=a;if(ve(i,e),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=I.sizeFromShape(i.shape),c=n||i.dtype,p=I.getArrayFromDType(c,u);for(let d=0;d<u;++d)p[d]=t(l[d],r);return o.makeTensorInfo(i.shape,c,p)}}function cu(e,t,n){return({inputs:a,attrs:r,backend:s})=>{let{x:i}=a;if(ve(i,e),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,r);return o.makeTensorInfo(i.shape,u,c)}}var r2=uu(e=>Math.ceil(e)),zU=cu(Ps,r2),WU={kernelName:Ps,backendName:"cpu",kernelFunc:zU};function _v(e,t,n,a){let r=I.getArrayFromDType(n,I.sizeFromShape(t));if(a&&n!=="string"){let s=0;e.forEach(i=>{let o=I.sizeFromShape(i.shape);r.set(i.vals,s),s+=o})}else{let s=0;e.forEach(i=>{let o=n==="string"?E.fromUint8ToStringArray(i.vals):i.vals,l=0;for(let u=0;u<i.shape[0];++u){let c=u*t[1]+s;for(let p=0;p<i.shape[1];++p)r[c+p]=o[l++]}s+=i.shape[1]})}return r}var s2=uu(e=>Math.exp(e)),S2=cu(Us,s2),BU={kernelName:Us,backendName:"cpu",kernelFunc:S2},i2=uu(e=>Math.expm1(e)),VU=cu(Qo,i2),UU={kernelName:Qo,backendName:"cpu",kernelFunc:VU},o2=uu(e=>Math.floor(e)),GU=cu(Gs,o2),HU={kernelName:Gs,backendName:"cpu",kernelFunc:GU};function l2(e,t,n){let a=Le(n,e.dtype);for(let r=0;r<a.size;++r){let s=a.indexToLoc(r).slice(),i=s[0],o=s[2],l=t.locToIndex([i,o]);s[2]=t.values[l];let u=e.locToIndex(s);a.values[r]=e.values[u]}return a}var u2=Rt((e,t)=>e>t?1:0),jU=Qt(nl,u2,null,"bool"),qU={kernelName:nl,backendName:"cpu",kernelFunc:jU},c2=Rt((e,t)=>e<t?1:0),XU=Qt(il,c2,null,"bool"),KU={kernelName:il,backendName:"cpu",kernelFunc:XU};function p2(e,t,n){let a=(t-e)/(n-1),r=I.makeZerosTypedArray(n,"float32");r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+a;return r}var d2=uu(e=>Math.log(e)),YU=cu(Ys,d2),JU={kernelName:Ys,backendName:"cpu",kernelFunc:YU};function h2(e,t,n,a){let r=I.getTypedArrayFromDType(a,I.sizeFromShape(n));for(let s=0;s<r.length;++s){let i=s*t,o=e[i];for(let l=0;l<t;++l){let u=e[i+l];u>o&&(o=u)}r[s]=o}return r}var m2=Rt((e,t)=>Math.max(e,t)),QU=Qt(Qs,m2),ZU={kernelName:Qs,backendName:"cpu",kernelFunc:QU},f2=Rt((e,t)=>Math.min(e,t)),eG=Qt(ni,f2),tG={kernelName:ni,backendName:"cpu",kernelFunc:eG},Ev=Rt((e,t)=>e*t),nG=Mv((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n})),Rv=Qt(ai,Ev,nG),aG={kernelName:ai,backendName:"cpu",kernelFunc:Rv};function g2(e,t,n){let a=I.createScalarValue(-1,n);return Ev([],t,a,e,n)}function rG(e){let{inputs:t,backend:n}=e,{x:a}=t;ve(a,"neg");let r=n.data.get(a.dataId).values,[s,i]=g2(r,a.shape,a.dtype);return n.makeTensorInfo(i,a.dtype,s)}var sG={kernelName:pl,backendName:"cpu",kernelFunc:rG},y2=Rt((e,t)=>e!==t?1:0),iG=Qt(dl,y2,null,"bool"),oG={kernelName:dl,backendName:"cpu",kernelFunc:iG};function $v(e,t,n,a,r){let s=t.length,i=I.sizeFromShape(t),o=I.computeStrides(t),l=I.computeStrides(r),u=I.getTypedArrayFromDType(n,I.sizeFromShape(r));for(let c=0;c<i;++c){let p=I.indexToLoc(c,s,o),d=new Array(p.length);for(let m=0;m<d.length;m++)d[m]=p[a[m]];let h=I.locToIndex(d,s,l);u[h]=e[c]}return u}function xa(e){let{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:s}=n;ve(r,"transpose");let i=r.shape.length,o=new Array(i);for(let c=0;c<o.length;c++)o[c]=r.shape[s[c]];let l=a.data.get(r.dataId).values,u=$v(l,r.shape,r.dtype,s,o);return{dataId:a.write(u,o,r.dtype),shape:o,dtype:r.dtype}}var lG={kernelName:ki,backendName:"cpu",kernelFunc:xa};function b2(e,t,n,a){let[r,s]=E.computeOutAndReduceShapes(e,a),i=pa(t,"int32"),o=I.makeZerosTypedArray(I.sizeFromShape(r),i),l=I.sizeFromShape(s);for(let u=0;u<o.length;++u){let c=u*l,p=1;for(let d=0;d<l;++d)p*=n[c+d];o[u]=p}return{outVals:o,outShape:r,outDtype:i}}function uG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;ve(r,"prod");let o=r.shape.length,l=I.parseAxisParam(s,r.shape),u=E.getAxesPermutation(l,o),c=l,p=r,d=[];u!=null&&(p=xa({inputs:{x:r},backend:n,attrs:{perm:u}}),d.push(p),c=E.getInnerMostAxes(c.length,o));let h=n.data.get(p.dataId).values,{outVals:m,outShape:f,outDtype:g}=b2(p.shape,p.dtype,h,c),y=f;return i&&(y=E.expandShapeToKeepDim(f,l)),d.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.makeTensorInfo(y,g,m)}var cG={kernelName:bl,backendName:"cpu",kernelFunc:uG};function Dv(e,t,n,a){let r=e===t,s=e<t&&n<0,i=t<e&&n>1;if(r||s||i)return I.makeZerosTypedArray(0,a);let o=Math.abs(Math.ceil((t-e)/n)),l=I.makeZerosTypedArray(o,a);t<e&&n===1&&(n=-1),l[0]=e;for(let u=1;u<l.length;u++)l[u]=l[u-1]+n;return l}var x2=uu(e=>1/Math.sqrt(e)),pG=cu(hi,x2),dG={kernelName:hi,backendName:"cpu",kernelFunc:pG};function zm(e,t,n,a,r){let s=dn.isSliceContinous(a,t,n),i=I.sizeFromShape(n),o=I.computeStrides(a);if(s){let p=dn.computeFlatOffset(t,o);return r==="string"?e.slice(p,p+i):e.subarray(p,p+i)}let l=r==="string"?E.fromUint8ToStringArray(e):e,u=Le(a,r,l),c=Le(n,r);for(let p=0;p<c.size;++p){let d=c.indexToLoc(p),h=d.map((m,f)=>m+t[f]);c.set(u.get(...h),...d)}return r==="string"?E.fromStringArrayToUint8(c.values):c.values}function Ki(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a;ve(r,"slice");let[o,l]=dn.parseSliceParams(r,s,i);dn.assertParamsValid(r,o,l);let u=n.data.get(r.dataId).values,c=zm(u,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,c)}var hG={kernelName:Nl,backendName:"cpu",kernelFunc:Ki},v2=Rt((e,t)=>{let n=e-t;return n*n}),mG=Qt(xi,v2),fG={kernelName:xi,backendName:"cpu",kernelFunc:mG};function w2(e,t,n,a){let r=Le(e,t.dtype);for(let s=0;s<r.size;s++){let i=r.indexToLoc(s),o=new Array(i.length);for(let l=0;l<o.length;l++)o[l]=i[l]*n[l]+a[l];r.set(t.get(...o),...i)}return r}var k2=Rt((e,t)=>e-t),gG=Mv((e,t,n,a)=>({real:e-n,imag:t-a})),Pv=Qt(vi,k2,gG),yG={kernelName:vi,backendName:"cpu",kernelFunc:Pv};function I2(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let a=Le(n,e.dtype);for(let r=0;r<a.values.length;++r){let s=a.indexToLoc(r),i=new Array(e.rank);for(let l=0;l<i.length;l++)i[l]=s[l]%e.shape[l];let o=e.locToIndex(i);a.values[r]=e.values[o]}return a}function N2(e,t,n,a,r){let s=t[t.length-1],[i,o]=[e.length/s,s],l=I.getTypedArrayFromDType(n,i*a),u=I.getTypedArrayFromDType("int32",i*a);for(let p=0;p<i;p++){let d=p*o,h=e.subarray(d,d+o),m=[];for(let b=0;b<h.length;b++)m.push({value:h[b],index:b});m.sort((b,x)=>x.value-b.value);let f=p*a,g=l.subarray(f,f+a),y=u.subarray(f,f+a);for(let b=0;b<a;b++)g[b]=m[b].value,y[b]=m[b].index}let c=t.slice();return c[c.length-1]=a,[Le(c,n,l),Le(c,"int32",u)]}function T2(e,t,n,a){let r=I.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let m=0;m<r;m++)s[0]*=n[m];s[1]=n[r];for(let m=r+1;m<n.length;m++)s[2]*=n[m];let i={},o=new Int32Array(n[r]),l=new Lt(s,a,e),u=[],c=s[0]===1&&s[2]===1;for(let m=0;m<n[r];m++){let f;if(c)f=e[m].toString();else{let g=[];for(let y=0;y<s[0];y++)for(let b=0;b<s[2];b++)g.push(l.get(y,m,b));f=g.join(",")}if(i[f]!==void 0)o[m]=i[f];else{let g=Object.keys(i).length;i[f]=g,o[m]=g,u.push(m)}}let p=s.slice();p[1]=Object.keys(i).length;let d=new Lt(p,a);u.forEach((m,f)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)d.set(l.get(g,m,y),g,f,y)});let h=n.slice();return h[r]=p[1],{outputValues:d.values,outputShape:h,indices:o}}var bG="3.3.0";fh("cpu",()=>new Av,1);var C2=it(Xo,e=>e>=0?e:Math.exp(e)-1),xG={kernelName:Xo,backendName:"cpu",kernelFunc:C2};function A2(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a;ve([r],"leakyRelu");let i=I.sizeFromShape(r.shape),o=n.data.get(r.dataId).values,l=I.getTypedArrayFromDType("float32",i);for(let u=0;u<o.length;u++)l[u]=o[u]<0?s*o[u]:o[u];return n.makeTensorInfo(r.shape,"float32",l)}var vG={kernelName:Ks,backendName:"cpu",kernelFunc:A2},wG=Rt((e,t)=>e<0?t*e:e);function F2(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t;ve([a,r],"prelu");let s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,[o,l]=wG(a.shape,r.shape,s,i,a.dtype);return n.makeTensorInfo(l,a.dtype,o)}var kG={kernelName:oi,backendName:"cpu",kernelFunc:F2},_2=it(li,e=>Math.max(0,e)),IG={kernelName:li,backendName:"cpu",kernelFunc:_2},E2=it(ci,e=>Math.min(Math.max(0,e),6)),NG={kernelName:ci,backendName:"cpu",kernelFunc:E2};function Ov(e,t,n,a,r){if(n==="linear")return rr({inputs:{x:t},backend:e});if(n==="relu")return _2({inputs:{x:t},backend:e});if(n==="elu")return C2({inputs:{x:t},backend:e});if(n==="relu6")return E2({inputs:{x:t},backend:e});if(n==="prelu")return F2({inputs:{x:t,alpha:a},backend:e});if(n==="leakyrelu")return A2({inputs:{x:t},backend:e,attrs:{alpha:r}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function It(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,i=I.sizeFromShape(r.shape),o=I.inferFromImplicitShape(s,i),l=I.sizeFromShape(o);I.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);let u=n.data.get(r.dataId);if(u.complexTensorInfos!=null){let c=u.complexTensorInfos.real,p=u.complexTensorInfos.imag;c.shape=o,p.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}var TG={kernelName:vl,backendName:"cpu",kernelFunc:It};function $2(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;ve([r,s],"matMul");let l=r.shape.length,u=s.shape.length,c=i?r.shape[l-2]:r.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],d=i?r.shape[l-1]:r.shape[l-2],h=o?s.shape[u-2]:s.shape[u-1],m=r.shape.slice(0,-2),f=s.shape.slice(0,-2),g=I.sizeFromShape(m),y=I.sizeFromShape(f),b=g===y||g===1||y===1;I.assert(l>=2&&u>=2&&b,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${f}).`);let x=(g>y?r.shape.slice(0,-2):s.shape.slice(0,-2)).concat([d,h]);I.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${r.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let v=i?[g,c,d]:[g,d,c],k=o?[y,h,p]:[y,p,h],w=It({inputs:{x:r},backend:n,attrs:{shape:v}}),S=It({inputs:{x:s},backend:n,attrs:{shape:k}}),A=i?w.shape[1]:w.shape[2],F=i?w.shape[2]:w.shape[1],D=o?S.shape[1]:S.shape[2],R=Math.max(g,y),L=n.data.get(w.dataId).values,W=n.data.get(S.dataId).values,U=I.computeStrides(w.shape),G=I.computeStrides(S.shape),[X,j,te]=i?[U[0],1,U[1]]:[U[0],U[1],1],[Q,se,ne]=o?[1,G[1],G[0]]:[G[1],1,G[0]],ie=F*D,ee=Le([R,F,D],w.dtype),de=ee.values,oe=n.blockSize;for(let ge=0;ge<R;ge++)for(let fe=0;fe<F;fe+=oe)for(let we=0;we<D;we+=oe)for(let Ne=0;Ne<A;Ne+=oe){let Ae=Math.min(fe+oe,F),Me=Math.min(we+oe,D),_e=Math.min(Ne+oe,A);for(let at=fe;at<Ae;at++)for(let rt=we;rt<Me;rt++){let lt=0;for(let Ke=Ne;Ke<_e;Ke++){let gt=Math.min(ge,g-1)*X,We=Math.min(ge,y-1)*ne,wn=L[gt+at*j+Ke*te],Nt=W[Ke*Q+rt*se+We];lt+=wn*Nt}de[ge*ie+(at*D+rt)]+=lt}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(S),n.makeTensorInfo(x,ee.dtype,ee.values)}var SG={kernelName:Ms,backendName:"cpu",kernelFunc:$2};function CG(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=a,d,h,m,f=[];d=$2({inputs:{a:r,b:s},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(h=dp({inputs:{a:d,b:i},backend:n}),f.push(d),d=h),c&&(m=Ov(n,d,c,o,p),f.push(d),d=m);for(let g of f)n.disposeIntermediateTensorInfo(g);return d}var AG={kernelName:Ii,backendName:"cpu",kernelFunc:CG},FG=it(Oo,e=>Math.acos(e)),_G={kernelName:Oo,backendName:"cpu",kernelFunc:FG},EG=it(Lo,e=>Math.acosh(e)),$G={kernelName:Lo,backendName:"cpu",kernelFunc:EG};function DG(e){let{inputs:t,backend:n}=e,a=t;ve(t,"addN");let r=a.map(o=>n.data.get(o.dataId).values),s=Le(a[0].shape,a[0].dtype),i=s.values;for(let o=0;o<a.length;o++){let l=r[o];for(let u=0;u<i.length;u++)i[u]+=l[u]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}var MG={kernelName:Es,backendName:"cpu",kernelFunc:DG};function RG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;ve(r,"all");let o=I.parseAxisParam(s,r.shape),l=o,u=E.getAxesPermutation(l,r.shape.length),c=r;u!=null&&(c=xa({inputs:{x:r},backend:n,attrs:{perm:u}}),l=E.getInnerMostAxes(l.length,r.shape.length)),E.assertAxesAreInnerMostDims("all",l,c.shape.length);let[p,d]=E.computeOutAndReduceShapes(c.shape,l),h=I.sizeFromShape(d),m=I.makeZerosTypedArray(I.sizeFromShape(p),c.dtype),f=n.data.get(c.dataId).values;for(let y=0;y<m.length;++y){let b=y*h,x=f[b];for(let v=0;v<h;++v){let k=f[b+v];x=x&&k}m[y]=x}u!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(p,c.dtype,m);if(i){let y=E.expandShapeToKeepDim(p,o),b=It({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var PG={kernelName:Sd,backendName:"cpu",kernelFunc:RG};function OG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;ve(r,"any");let o=I.parseAxisParam(s,r.shape),l=o,u=E.getAxesPermutation(l,r.shape.length),c=r;u!=null&&(c=xa({inputs:{x:r},backend:n,attrs:{perm:u}}),l=E.getInnerMostAxes(l.length,r.shape.length)),E.assertAxesAreInnerMostDims("any",l,c.shape.length);let[p,d]=E.computeOutAndReduceShapes(c.shape,l),h=I.sizeFromShape(d),m=I.makeZerosTypedArray(I.sizeFromShape(p),c.dtype),f=n.data.get(c.dataId).values;for(let y=0;y<m.length;++y){let b=y*h,x=f[b];for(let v=0;v<h;++v){let k=f[b+v];x=x||k}m[y]=x}u!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(p,c.dtype,m);if(i){let y=E.expandShapeToKeepDim(p,o),b=It({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var LG={kernelName:Cd,backendName:"cpu",kernelFunc:OG};function zG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;ve(r,"argMax");let i=I.parseAxisParam(s,r.shape),o=E.getAxesPermutation(i,r.shape.length),l=r,u=[];o!=null&&(l=xa({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=E.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],E.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[c,p]=E.computeOutAndReduceShapes(l.shape,i),d=I.sizeFromShape(c),h=I.makeZerosTypedArray(d,"int32"),m=I.sizeFromShape(p),f=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let y=g*m,b=f[y],x=0;for(let v=0;v<m;++v){let k=f[y+v];k>b&&(b=k,x=v)}h[g]=x}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",h)}var WG={kernelName:$s,backendName:"cpu",kernelFunc:zG};function BG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;ve(r,"argMin");let i=I.parseAxisParam(s,r.shape),o=E.getAxesPermutation(i,r.shape.length),l=r,u=[];o!=null&&(l=xa({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=E.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],E.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[c,p]=E.computeOutAndReduceShapes(l.shape,i),d=I.sizeFromShape(c),h=I.makeZerosTypedArray(d,"int32"),m=I.sizeFromShape(p),f=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let y=g*m,b=f[y],x=0;for(let v=0;v<m;++v){let k=f[y+v];k<b&&(b=k,x=v)}h[g]=x}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",h)}var VG={kernelName:nc,backendName:"cpu",kernelFunc:BG},UG=it(zo,e=>Math.asin(e)),GG={kernelName:zo,backendName:"cpu",kernelFunc:UG},HG=it(Wo,e=>Math.asinh(e)),jG={kernelName:Wo,backendName:"cpu",kernelFunc:HG},qG=it(Bo,e=>Math.atan(e)),XG={kernelName:Bo,backendName:"cpu",kernelFunc:qG},KG=Rt((e,t)=>Math.atan2(e,t)),YG=Qt(Uo,KG),JG={kernelName:Uo,backendName:"cpu",kernelFunc:YG},QG=it(Vo,e=>Math.atanh(e)),ZG={kernelName:Vo,backendName:"cpu",kernelFunc:QG};function Lv(e,t,n,a,r,s){let i=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,h=r.padInfo.left,m=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,f=Le(r.outShape,n),g=f.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let v=0;v<r.batchSize;++v){let k=v*y,w=v*a[0];for(let S=0;S<r.inChannels;++S)for(let A=0;A<r.outHeight;++A){let F=A*i-d,D=Math.max(0,F),R=Math.min(r.inHeight,c+F),L=k+A*b;for(let W=0;W<r.outWidth;++W){let U=W*o-h,G=Math.max(0,U),X=Math.min(r.inWidth,p+U),j=m,te=0,Q=0;for(let ne=D;ne<R;ne+=l){let ie=w+ne*a[1];for(let ee=G;ee<X;ee+=u){let de=ie+ee*a[2],oe=e[de+S];s==="max"&&oe>j?j=oe:s==="avg"&&(te+=oe,Q++)}if(isNaN(j))break}let se=L+W*x+S;g[se]=s==="avg"?te/Q:j}}}return f}function D2(e,t,n,a,r=!1,s=!1){let i=Le(a.outShape,"int32"),o=a.strideHeight,l=a.strideWidth,u=a.dilationHeight,c=a.dilationWidth,p=a.effectiveFilterHeight,d=a.effectiveFilterWidth,h=a.padInfo.top,m=a.padInfo.left,f=Le(t,n,e);for(let g=0;g<a.batchSize;++g)for(let y=0;y<a.inChannels;++y)for(let b=0;b<a.outHeight;++b){let x=b*o-h,v=x;for(;v<0;)v+=u;let k=Math.min(a.inHeight,p+x);for(let w=0;w<a.outWidth;++w){let S=w*l-m,A=S;for(;A<0;)A+=c;let F=Math.min(a.inWidth,d+S),D=Number.NEGATIVE_INFINITY,R=-1;for(let L=v;L<k;L+=u){let W=L-x;for(let U=A;U<F;U+=c){let G=U-S,X=f.get(g,L,U,y);X>D&&(D=X,r?R=s?((g*a.inHeight+L)*a.inWidth+U)*a.inChannels+y:(L*a.inWidth+U)*a.inChannels+y:R=W*d+G)}}i.set(R,g,b,w,y)}}return i}function M2(e,t,n,a,r,s){let i=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,p=r.dilationWidth,d=r.effectiveFilterDepth,h=r.effectiveFilterHeight,m=r.effectiveFilterWidth,f=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Le(r.outShape,n),v=x.values,k=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],w=r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[3]*r.outShape[4],A=r.outShape[4];for(let F=0;F<r.batchSize;++F){let D=F*k,R=F*a[0];for(let L=0;L<r.inChannels;++L)for(let W=0;W<r.outDepth;++W){let U=W*i-f,G=U;for(;G<0;)G+=u;let X=Math.min(r.inDepth,d+U),j=D+W*w;for(let te=0;te<r.outHeight;++te){let Q=te*o-g,se=Q;for(;se<0;)se+=c;let ne=Math.min(r.inHeight,h+Q),ie=j+te*S;for(let ee=0;ee<r.outWidth;++ee){let de=ee*l-y,oe=de;for(;oe<0;)oe+=p;let ge=Math.min(r.inWidth,m+de),fe=ie+ee*A,we=b,Ne=0,Ae=0;for(let _e=G;_e<X;_e+=u){let at=R+_e*a[1];for(let rt=se;rt<ne;rt+=c){let lt=at+rt*a[2];for(let Ke=oe;Ke<ge;Ke+=p){let gt=lt+Ke*a[3],We=e[gt+L];if(s==="max"&&We>we?we=We:s==="avg"&&(Ne+=We,Ae++),isNaN(we))break}if(isNaN(we))break}if(isNaN(we))break}let Me=fe+L;v[Me]=s==="avg"?Ne/Ae:we}}}}return x}function eH(e,t){let n=Le(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,h=t.padInfo.top,m=t.padInfo.left;for(let f=0;f<t.batchSize;++f)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*a-d,x=b;for(;x<0;)x+=i;let v=Math.min(t.inDepth,u+b);for(let k=0;k<t.outHeight;++k){let w=k*r-h,S=w;for(;S<0;)S+=o;let A=Math.min(t.inHeight,c+w);for(let F=0;F<t.outWidth;++F){let D=F*s-m,R=D;for(;R<0;)R+=l;let L=Math.min(t.inWidth,p+D),W=Number.NEGATIVE_INFINITY,U=-1;for(let G=x;G<v;G+=i){let X=G-b;for(let j=S;j<A;j+=o){let te=j-w;for(let Q=R;Q<L;Q+=l){let se=Q-D,ne=e.get(f,G,j,Q,g);ne>=W&&(W=ne,U=X*c*p+te*c+se)}}}n.set(U,f,y,k,F,g)}}}return n}function tH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;ve(r,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a,u=1;I.assert(E.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=E.computePool2DInfo(r.shape,s,i,u,o,l),p;if(c.filterWidth===1&&c.filterHeight===1&&I.arraysEqual(c.inShape,c.outShape))p=rr({inputs:{x:r},backend:n});else{let d=n.data.get(r.dataId).values,h=I.computeStrides(r.shape),m=Lv(d,r.shape,r.dtype,h,c,"avg");p=n.makeTensorInfo(c.outShape,r.dtype,m.values)}return p}var nH={kernelName:Ds,backendName:"cpu",kernelFunc:tH};function aH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=a;ve(r,"avgPool3d");let c=E.computePool3DInfo(r.shape,s,i,1,o,l,u),p=n.data.get(r.dataId).values,d=M2(p,r.shape,r.dtype,I.computeStrides(r.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}var rH={kernelName:ac,backendName:"cpu",kernelFunc:aH};function sH(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a;ve([r,s],"avgPool3DGrad");let c=E.computePool3DInfo(s.shape,i,o,1,l,u),p=c.strideDepth,d=c.strideHeight,h=c.strideWidth,m=c.filterDepth,f=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,k=c.effectiveFilterHeight,w=c.effectiveFilterWidth,S=v-1-c.padInfo.front,A=w-1-c.padInfo.left,F=k-1-c.padInfo.top,D=Le(s.shape,"float32"),R=1/(m*f*g),L=n.bufferSync(r);for(let W=0;W<c.batchSize;++W)for(let U=0;U<c.inChannels;++U)for(let G=0;G<c.inDepth;++G)for(let X=0;X<c.inHeight;++X)for(let j=0;j<c.inWidth;++j){let te=G-S,Q=X-F,se=j-A,ne=0;for(let ie=0;ie<v;ie+=y){let ee=(te+ie)/p;if(!(ee<0||ee>=c.outDepth||Math.floor(ee)!==ee))for(let de=0;de<k;de+=b){let oe=(Q+de)/d;if(!(oe<0||oe>=c.outHeight||Math.floor(oe)!==oe))for(let ge=0;ge<w;ge+=x){let fe=(se+ge)/h;fe<0||fe>=c.outWidth||Math.floor(fe)!==fe||(ne+=L.get(W,ee,oe,fe,U))}}}D.set(ne*R,W,G,X,j,U)}return n.makeTensorInfo(D.shape,D.dtype,D.values)}var iH={kernelName:Fd,backendName:"cpu",kernelFunc:sH};function oH(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;ve([r,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=a,c=E.computePool2DInfo(i.shape,o,l,1,u),p=c.strideHeight,d=c.strideWidth,h=c.filterHeight,m=c.filterWidth,f=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,k=Le(i.shape,"float32"),w=1/(h*m),S=n.data.get(r.dataId).values,A=Le(r.shape,"float32",S);for(let F=0;F<c.batchSize;++F)for(let D=0;D<c.inChannels;++D)for(let R=0;R<c.inHeight;++R)for(let L=0;L<c.inWidth;++L){let W=R-v,U=L-x,G=0;for(let X=0;X<y;X+=f){let j=(W+X)/p;if(!(j<0||j>=c.outHeight||Math.floor(j)!==j))for(let te=0;te<b;te+=g){let Q=(U+te)/d;Q<0||Q>=c.outWidth||Math.floor(Q)!==Q||(G+=A.get(F,j,Q,D))}}k.set(G*w,F,R,L,D)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var lH={kernelName:Ad,backendName:"cpu",kernelFunc:oH};function uH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,scale:s,offset:i,mean:o,variance:l}=t;I.assert(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),I.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),I.assert(s==null||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ve([r,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=a;u==null&&(u=.001);let c=n.data.get(r.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,h=s?n.data.get(s.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),f=new Float32Array(c.length),g=m.length,y=h.length,b=d.length,x=p.length,v=0,k=0,w=0,S=0;for(let A=0;A<c.length;++A)f[A]=m[v++]+(c[A]-p[k++])*h[w++]/Math.sqrt(d[S++]+u),v>=g&&(v=0),k>=x&&(k=0),w>=y&&(w=0),S>=b&&(S=0);return n.makeTensorInfo(r.shape,r.dtype,f)}var cH={kernelName:js,backendName:"cpu",kernelFunc:uH};function pH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;ve([r],"batchToSpaceND");let o=s.reduce((y,b)=>y*b),l=E.getReshaped(r.shape,s,o),u=E.getPermuted(l.length,s.length),c=E.getReshapedPermuted(r.shape,s,o),p=E.getSliceBeginCoords(i,s.length),d=E.getSliceSize(c,i,s.length),h=It({inputs:{x:r},backend:n,attrs:{shape:l}}),m=xa({inputs:{x:h},backend:n,attrs:{perm:u}}),f=It({inputs:{x:m},backend:n,attrs:{shape:c}}),g=Ki({inputs:{x:f},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}var dH={kernelName:rc,backendName:"cpu",kernelFunc:pH};function hH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i}=a,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=Fv(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}var mH={kernelName:_d,backendName:"cpu",kernelFunc:hH},fH=it(jr,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),gH={kernelName:jr,backendName:"cpu",kernelFunc:fH},yH=e=>{let{x:t}=e.inputs,n=e.backend,a=new Float32Array(I.sizeFromShape(t.shape)),r=n.data.get(t.dataId),s=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let u=0;u<o.length;u++){let c=o[u],p=l[u];a[u]=Math.hypot(c,p)}return n.makeOutput(a,t.shape,"float32")},bH={kernelName:sc,backendName:"cpu",kernelFunc:yH};function pu(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}var xH={kernelName:Gd,backendName:"cpu",kernelFunc:pu};function du(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=I.parseAxisParam(r,t[0].shape)[0],i=E.computeOutShape(t.map(f=>f.shape),s);if(I.sizeFromShape(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(f=>I.sizeFromShape(f.shape)>0);if(o.length===1)return rr({inputs:{x:o[0]},backend:n});let l=o.map(f=>f.shape);if(E.assertParamsConsistent(l,s),o[0].dtype==="complex64"){let f=o.map(v=>Xi({inputs:{input:v},backend:n})),g=o.map(v=>pu({inputs:{input:v},backend:n})),y=du({inputs:f,backend:n,attrs:{axis:s}}),b=du({inputs:g,backend:n,attrs:{axis:s}}),x=Un({inputs:{real:y,imag:b},backend:n});return f.forEach(v=>n.disposeIntermediateTensorInfo(v)),g.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),x}let u=o.map(f=>{let g=I.sizeFromShape(f.shape.slice(s));return It({inputs:{x:f},backend:n,attrs:{shape:[-1,g]}})}),c=u.map(f=>({vals:n.data.get(f.dataId).values,shape:f.shape}));i=E.computeOutShape(u.map(f=>f.shape),1);let p=u[0].shape[0]===1,d=_v(c,i,t[0].dtype,p),h=E.computeOutShape(o.map(f=>f.shape),s),m=n.makeTensorInfo(h,t[0].dtype,d);return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var vH={kernelName:Go,backendName:"cpu",kernelFunc:du};function R2(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=a;ve([r,s],"conv2d");let p=E.convertConv2DDataFormat(l),d=E.computeConv2DInfo(r.shape,s.shape,i,u,o,c,!1,p),h=d.filterHeight,m=d.filterWidth,f=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x=d.dataFormat==="channelsLast",v=new Lt(d.outShape,r.dtype),k=I.computeStrides(r.shape),w=I.computeStrides(s.shape),S=k[0],A=x?k[1]:k[2],F=x?k[2]:1,D=x?1:k[1],R=v.strides[0],L=x?v.strides[1]:v.strides[2],W=x?v.strides[2]:1,U=x?1:v.strides[1],G=n.data.get(r.dataId).values,X=n.data.get(s.dataId).values,j=v.values;for(let te=0;te<d.batchSize;++te){let Q=te*S,se=te*R;for(let ne=0;ne<d.outHeight;++ne){let ie=se+ne*L,ee=ne*d.strideHeight-b;for(let de=0;de<h;++de){let oe=ee+de*f;if(oe<0||oe>=d.inHeight)continue;let ge=de*w[0],fe=Q+oe*A;for(let we=0;we<d.outWidth;++we){let Ne=ie+we*W,Ae=we*d.strideWidth-y;for(let Me=0;Me<m;++Me){let _e=Ae+Me*g;if(_e<0||_e>=d.inWidth)continue;let at=ge+Me*w[1],rt=fe+_e*F,lt=at;for(let Ke=0;Ke<d.inChannels;++Ke){let gt=G[rt+Ke*D];for(let We=0;We<d.outChannels;++We)j[Ne+We*U]+=gt*X[lt+We];lt+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,j)}var wH={kernelName:Os,backendName:"cpu",kernelFunc:R2};function kH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=a;ve([r,s],"conv2dBackpropFilter");let p=E.convertConv2DDataFormat(l),d=E.computeConv2DInfo(r.shape,c,i,1,o,u,!1,p),{strideHeight:h,strideWidth:m,filterHeight:f,filterWidth:g}=d,y=d.dataFormat==="channelsLast",b=new Lt(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,k=n.data.get(r.dataId).values,w=n.data.get(s.dataId).values,S=new Lt(r.shape,r.dtype,k),A=new Lt(s.shape,s.dtype,w);for(let F=0;F<f;++F){let D=Math.max(0,Math.ceil((v-F)/h)),R=Math.min(d.outHeight,(d.inHeight+v-F)/h);for(let L=0;L<g;++L){let W=Math.max(0,Math.ceil((x-L)/m)),U=Math.min(d.outWidth,(d.inWidth+x-L)/m);for(let G=0;G<d.inChannels;++G)for(let X=0;X<d.outChannels;++X){let j=0;for(let te=0;te<d.batchSize;++te)for(let Q=D;Q<R;++Q){let se=F+Q*h-v;for(let ne=W;ne<U;++ne){let ie=L+ne*m-x;y?j+=S.get(te,se,ie,G)*A.get(te,Q,ne,X):j+=S.get(te,G,se,ie)*A.get(te,X,Q,ne)}}b.set(j,F,L,G,X)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var IH={kernelName:$d,backendName:"cpu",kernelFunc:kH};function NH(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=a;ve([r,s],"conv2dBackpropInput");let p=I.computeStrides(s.shape),d=I.computeStrides(r.shape),h=E.convertConv2DDataFormat(u),m=E.computeConv2DInfo(i,s.shape,o,1,l,c,!1,h),f=new Lt(m.inShape,"float32"),g=f.values,y=n.data.get(r.dataId).values,b=n.data.get(s.dataId).values,[x,v,k]=p,{batchSize:w,filterHeight:S,filterWidth:A,inChannels:F,inHeight:D,inWidth:R,outChannels:L,outHeight:W,outWidth:U,strideHeight:G,strideWidth:X}=m;h=m.dataFormat;let j=S-1-m.padInfo.top,te=A-1-m.padInfo.left,Q=h==="channelsLast",se=f.strides[0],ne=Q?f.strides[1]:f.strides[2],ie=Q?f.strides[2]:1,ee=Q?1:f.strides[1],de=d[0],oe=Q?d[1]:d[2],ge=Q?d[2]:1,fe=Q?1:d[1];for(let we=0;we<w;++we)for(let Ne=0;Ne<F;++Ne)for(let Ae=0;Ae<D;++Ae){let Me=Ae-j,_e=Math.max(0,Math.ceil(Me/G)),at=Math.min(W,(S+Me)/G);for(let rt=0;rt<R;++rt){let lt=rt-te,Ke=Math.max(0,Math.ceil(lt/X)),gt=Math.min(U,(A+lt)/X),We=0;for(let Nt=_e;Nt<at;++Nt){let Xn=Nt*G-Me;for(let tn=Ke;tn<gt;++tn){let kn=tn*X-lt,Kn=de*we+oe*Nt+ge*tn,Mn=x*(S-1-Xn)+v*(A-1-kn)+k*Ne;for(let pn=0;pn<L;++pn){let nn=y[Kn+fe*pn],Va=b[Mn+pn];We+=nn*Va}}}let wn=se*we+ne*Ae+ie*rt+ee*Ne;g[wn]=We}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var TH={kernelName:Ls,backendName:"cpu",kernelFunc:NH};function SH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a;ve([r,s],"conv3d");let u=E.computeConv3DInfo(r.shape,s.shape,i,l,o),{filterDepth:c,filterHeight:p,filterWidth:d,dilationDepth:h,dilationHeight:m,dilationWidth:f,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new Lt(u.outShape,r.dtype),k=n.data.get(r.dataId).values,w=n.data.get(s.dataId).values,S=v.values,A=I.computeStrides(r.shape),F=I.computeStrides(s.shape);for(let D=0;D<u.batchSize;++D){let R=D*A[0],L=D*v.strides[0];for(let W=0;W<u.outDepth;++W){let U=L+W*v.strides[1],G=W*u.strideDepth-y;for(let X=0;X<c;++X){let j=G+X*h;if(j<0||j>=u.inDepth)continue;let te=X*F[0],Q=R+j*A[1];for(let se=0;se<u.outHeight;++se){let ne=U+se*v.strides[2],ie=se*u.strideHeight-x;for(let ee=0;ee<p;++ee){let de=ie+ee*m;if(de<0||de>=u.inHeight)continue;let oe=te+ee*F[1],ge=Q+de*A[2];for(let fe=0;fe<u.outWidth;++fe){let we=ne+fe*u.outChannels,Ne=fe*u.strideWidth-b;for(let Ae=0;Ae<d;++Ae){let Me=Ne+Ae*f;if(Me<0||Me>=u.inWidth)continue;let _e=oe+Ae*F[2],at=ge+Me*u.inChannels,rt=_e;for(let lt=0;lt<u.inChannels;++lt){let Ke=k[at+lt];for(let gt=0;gt<u.outChannels;++gt)S[we+gt]+=Ke*w[rt+gt];rt+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}var CH={kernelName:ic,backendName:"cpu",kernelFunc:SH};function AH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:l}=a;ve([r,s],"conv3dBackpropFilterV2");let u=I.computeStrides(r.shape),c=I.computeStrides(s.shape),p=E.computeConv3DInfo(r.shape,l,i,1,o),d=p.strideDepth,h=p.strideHeight,m=p.strideWidth,f=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=new Lt(p.filterShape,"float32"),x=b.values,[v,k,w,S]=b.strides,A=n.data.get(s.dataId).values,[F,D,R,L]=c,W=n.data.get(r.dataId).values,[U,G,X,j]=u,te=p.padInfo.front,Q=p.padInfo.left,se=p.padInfo.top;for(let ne=0;ne<f;++ne){let ie=Math.max(0,Math.ceil((te-ne)/d)),ee=Math.min(p.outDepth,(p.inDepth+te-ne)/d),de=ne*v;for(let oe=0;oe<g;++oe){let ge=Math.max(0,Math.ceil((se-oe)/h)),fe=Math.min(p.outHeight,(p.inHeight+se-oe)/h),we=oe*k+de;for(let Ne=0;Ne<y;++Ne){let Ae=Math.max(0,Math.ceil((Q-Ne)/m)),Me=Math.min(p.outWidth,(p.inWidth+Q-Ne)/m),_e=Ne*w+we;for(let at=0;at<p.inChannels;++at){let rt=at*S+_e;for(let lt=0;lt<p.outChannels;++lt){let Ke=0;for(let gt=0;gt<p.batchSize;++gt){let We=gt*U,wn=gt*F;for(let Nt=ie;Nt<ee;++Nt){let Xn=(ne+Nt*d-te)*G+We,tn=Nt*D+wn;for(let kn=ge;kn<fe;++kn){let Kn=(oe+kn*h-se)*X+Xn,Mn=kn*R+tn;for(let pn=Ae;pn<Me;++pn){let nn=(Ne+pn*m-Q)*j+Kn,Va=pn*L+Mn;Ke+=W[nn+at]*A[Va+lt]}}}}x[rt+lt]=Ke}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var FH={kernelName:Dd,backendName:"cpu",kernelFunc:AH};function _H(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:l}=a;ve([r],"conv3dBackpropInputV2");let u=I.computeStrides(r.shape),c=I.computeStrides(s.shape),p=E.computeConv3DInfo(l,s.shape,o,1,i),d=new Lt(p.inShape,"float32"),h=d.values,[m,f,g,y]=d.strides,b=n.data.get(r.dataId).values,[x,v,k,w]=u,S=n.data.get(s.dataId).values,[A,F,D,R]=c,{batchSize:L,filterDepth:W,filterHeight:U,filterWidth:G,inChannels:X,inDepth:j,inHeight:te,inWidth:Q,outChannels:se,outDepth:ne,outHeight:ie,outWidth:ee,strideDepth:de,strideHeight:oe,strideWidth:ge}=p,fe=W-1-p.padInfo.front,we=U-1-p.padInfo.top,Ne=G-1-p.padInfo.left;for(let Ae=0;Ae<L;++Ae)for(let Me=0;Me<X;++Me)for(let _e=0;_e<j;++_e){let at=_e-fe,rt=Math.max(0,Math.ceil(at/de)),lt=Math.min(ne,(W+at)/de);for(let Ke=0;Ke<te;++Ke){let gt=Ke-we,We=Math.max(0,Math.ceil(gt/oe)),wn=Math.min(ie,(U+gt)/oe);for(let Nt=0;Nt<Q;++Nt){let Xn=Nt-Ne,tn=Math.max(0,Math.ceil(Xn/ge)),kn=Math.min(ee,(G+Xn)/ge),Kn=0;for(let Mn=rt;Mn<lt;++Mn){let pn=Mn*de-at;for(let nn=We;nn<wn;++nn){let Va=nn*oe-gt;for(let oa=tn;oa<kn;++oa){let la=oa*ge-Xn,Pr=x*Ae+v*Mn+k*nn+w*oa,pr=A*(W-1-pn)+F*(U-1-Va)+D*(G-1-la)+R*Me;for(let Or=0;Or<se;++Or){let wo=b[Pr+Or],Ia=S[pr+Or];Kn+=wo*Ia}}}}h[m*Ae+f*_e+g*Ke+y*Nt+Me]=Kn}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}var EH={kernelName:Md,backendName:"cpu",kernelFunc:_H},$H=it(zs,e=>Math.cos(e)),DH={kernelName:zs,backendName:"cpu",kernelFunc:$H},MH=it(Ho,e=>Math.cosh(e)),RH={kernelName:Ho,backendName:"cpu",kernelFunc:MH};function PH(e){let{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=a,[c,p,d,h]=r.shape,m=s.shape[0],[f,g]=o,y=Le([m,f,g,h],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(r.dataId).values,k=I.computeStrides(r.shape),w=I.computeStrides(y.shape);for(let S=0;S<m;S++){let A=S*4,F=b[A],D=b[A+1],R=b[A+2],L=b[A+3],W=x[S];if(W>=c)continue;let U=f>1?(R-F)*(p-1)/(f-1):0,G=g>1?(L-D)*(d-1)/(g-1):0;for(let X=0;X<f;X++){let j=f>1?F*(p-1)+X*U:.5*(F+R)*(p-1);if(j<0||j>p-1){for(let te=0;te<g;te++)for(let Q=0;Q<h;Q++){let se=Q+te*w[2]+X*w[1]+S*w[0];y.values[se]=u}continue}if(l==="bilinear"){let te=Math.floor(j),Q=Math.ceil(j),se=j-te;for(let ne=0;ne<g;ne++){let ie=g>1?D*(d-1)+ne*G:.5*(D+L)*(d-1);if(ie<0||ie>d-1){for(let ge=0;ge<h;ge++){let fe=ge+ne*w[2]+X*w[1]+S*w[0];y.values[fe]=u}continue}let ee=Math.floor(ie),de=Math.ceil(ie),oe=ie-ee;for(let ge=0;ge<h;ge++){let fe=ge+ee*k[2]+te*k[1]+W*k[0],we=v[fe];fe=ge+de*k[2]+te*k[1]+W*k[0];let Ne=v[fe];fe=ge+ee*k[2]+Q*k[1]+W*k[0];let Ae=v[fe];fe=ge+de*k[2]+Q*k[1]+W*k[0];let Me=v[fe],_e=we+(Ne-we)*oe,at=Ae+(Me-Ae)*oe;fe=ge+ne*w[2]+X*w[1]+S*w[0],y.values[fe]=_e+(at-_e)*se}}}else for(let te=0;te<g;++te){let Q=g>1?D*(d-1)+te*G:.5*(D+L)*(d-1);if(Q<0||Q>d-1){for(let ie=0;ie<h;ie++){let ee=ie+te*w[2]+X*w[1]+S*w[0];y.values[ee]=u}continue}let se=Math.round(Q),ne=Math.round(j);for(let ie=0;ie<h;ie++){let ee=ie+se*k[2]+ne*k[1]+W*k[0],de=ie+te*w[2]+X*w[1]+S*w[0];y.values[de]=v[ee]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var OH={kernelName:jo,backendName:"cpu",kernelFunc:PH};function LH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;ve(r,"cumsum");let l=E.getAxesPermutation([s],r.shape.length),u=r;l!=null&&(u=xa({inputs:{x:r},backend:n,attrs:{perm:l}}));let c=E.getInnerMostAxes(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);let p=pa(u.dtype,"int32"),d=I.makeZerosTypedArray(I.sizeFromShape(u.shape),p),h=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],f=o?(y,b)=>y+m-b-1:(y,b)=>y+b;for(let y=0;y<h.length;y+=m)for(let b=0;b<m;b++){let x=f(y,b);if(b===0)d[x]=i?0:h[x];else{let v=f(y,b-1);d[x]=i?h[v]+d[v]:h[x]+d[v]}}let g=n.makeTensorInfo(u.shape,p,d);if(l!=null){let y=E.getUndoAxesPermutation(l),b=xa({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),b}return g}var zH={kernelName:Ws,backendName:"cpu",kernelFunc:LH};function WH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=a;if(r.shape.length===1){let l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,c=Fv(l,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,c)}else if(r.shape.length===2){let l=n.bufferSync(r),u=n.bufferSync(s),c=a2(l,u,i,o);return n.makeTensorInfo(c.shape,s.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var BH={kernelName:Rd,backendName:"cpu",kernelFunc:WH};function VH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:i}=a;I.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`),I.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);let o=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],p=l*s,d=u*s,h=c/(s*s),m=n.data.get(r.dataId).values,f=new Float32Array(o*p*d*h),g=0;for(let y=0;y<o;++y)for(let b=0;b<p;++b){let x=Math.floor(b/s),v=b%s;for(let k=0;k<d;++k){let w=Math.floor(k/s),S=k%s,A=(v*s+S)*h;for(let F=0;F<h;++F){let D=F+A+c*(w+u*(x+l*y));f[g++]=m[D]}}}return n.makeTensorInfo([o,p,d,h],r.dtype,f)}var UH={kernelName:qo,backendName:"cpu",kernelFunc:VH};function P2(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=a;ve([r,s],"depthwiseConv2DNative");let c=I.computeStrides(r.shape),p=I.computeStrides(s.shape),d=l;d==null&&(d=[1,1]),I.assert(E.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let h=E.computeConv2DInfo(r.shape,s.shape,i,d,o,u,!0),{filterHeight:m,filterWidth:f,dilationHeight:g,dilationWidth:y,padInfo:b}=h,x=b.left,v=b.top,k=h.outChannels/h.inChannels,w=new Lt(h.outShape,r.dtype),S=n.data.get(r.dataId).values,A=n.data.get(s.dataId).values,F=w.values;for(let D=0;D<h.batchSize;++D){let R=D*c[0],L=D*w.strides[0];for(let W=0;W<h.outHeight;++W){let U=L+W*w.strides[1],G=W*h.strideHeight-x;for(let X=0;X<m;++X){let j=G+X*g;if(j<0||j>=h.inHeight)continue;let te=X*p[0],Q=R+j*c[1];for(let se=0;se<h.outWidth;++se){let ne=U+se*w.strides[2],ie=se*h.strideWidth-v;for(let ee=0;ee<f;++ee){let de=ie+ee*y;if(de<0||de>=h.inWidth)continue;let oe=te+ee*p[1],ge=Q+de*h.inChannels,fe=ne,we=oe;for(let Ne=0;Ne<h.inChannels;++Ne){let Ae=S[ge+Ne];for(let Me=0;Me<k;++Me)F[fe+Me]+=Ae*A[we+Me];fe+=k,we+=k}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var GH={kernelName:Bs,backendName:"cpu",kernelFunc:P2};function HH(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=a;ve([r,s],"depthwiseConv2dNativeBackpropFilter");let p=E.computeConv2DInfo(r.shape,c,i,o,l,u,!0),{strideHeight:d,strideWidth:h,filterHeight:m,filterWidth:f}=p,g=new Lt(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,x=p.outChannels/p.inChannels,v=n.data.get(r.dataId).values,k=new Lt(r.shape,r.dtype,v),w=n.data.get(s.dataId).values,S=new Lt(s.shape,s.dtype,w);for(let A=0;A<m;++A){let F=Math.max(0,Math.ceil((b-A)/d)),D=Math.min(p.outHeight,(p.inHeight+b-A)/d);for(let R=0;R<f;++R){let L=Math.max(0,Math.ceil((y-R)/h)),W=Math.min(p.outWidth,(p.inWidth+y-R)/h);for(let U=0;U<p.outChannels;++U){let G=Math.trunc(U/x),X=U%x,j=0;for(let te=0;te<p.batchSize;++te)for(let Q=F;Q<D;++Q){let se=A+Q*d-b;for(let ne=L;ne<W;++ne){let ie=R+ne*h-y;j+=k.get(te,se,ie,G)*S.get(te,Q,ne,U)}}g.set(j,A,R,G,X)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var jH={kernelName:Pd,backendName:"cpu",kernelFunc:HH};function qH(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=a;ve([r,s],"depthwiseConv2DNativeBackpropInput");let p=I.computeStrides(r.shape),d=I.computeStrides(s.shape),h=E.computeConv2DInfo(c,s.shape,i,o,l,u,!0),m=new Lt(h.inShape,"float32"),f=m.values,[g,y,b]=m.strides,x=n.data.get(r.dataId).values,[v,k,w]=p,S=n.data.get(s.dataId).values,[A,F,D]=d,{batchSize:R,filterHeight:L,filterWidth:W,inChannels:U,inHeight:G,inWidth:X,outChannels:j,outHeight:te,outWidth:Q,strideHeight:se,strideWidth:ne}=h,ie=L-1-h.padInfo.top,ee=W-1-h.padInfo.left,de=j/U;for(let oe=0;oe<R;++oe)for(let ge=0;ge<U;++ge)for(let fe=0;fe<G;++fe){let we=fe-ie,Ne=Math.max(0,Math.ceil(we/se)),Ae=Math.min(te,(L+we)/se);for(let Me=0;Me<X;++Me){let _e=Me-ee,at=Math.max(0,Math.ceil(_e/ne)),rt=Math.min(Q,(W+_e)/ne),lt=0;for(let Ke=Ne;Ke<Ae;++Ke){let gt=Ke*se-we;for(let We=at;We<rt;++We){let wn=We*ne-_e,Nt=v*oe+k*Ke+w*We,Xn=A*(L-1-gt)+F*(W-1-wn)+D*ge;for(let tn=0;tn<de;++tn){let kn=ge*de+tn,Kn=x[Nt+kn],Mn=S[Xn+tn];lt+=Kn*Mn}}}f[g*oe+y*fe+b*Me+ge]=lt}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var XH={kernelName:Od,backendName:"cpu",kernelFunc:qH};function KH(e){let{inputs:t,backend:n}=e,{x:a}=t,r=I.sizeFromShape(a.shape),s=n.data.get(a.dataId).values,i=Le([r,r],a.dtype),o=i.values;for(let u=0;u<s.length;u++)o[u*r+u]=s[u];let l=[...a.shape,...a.shape];return n.makeTensorInfo(l,i.dtype,i.values)}var YH={kernelName:Ld,backendName:"cpu",kernelFunc:KH},JH={kernelName:oc,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,filter:r}=e,{strides:s,pad:i,dilations:o}=n,l=t,u=l.data.get(a.dataId).values,c=a.shape.length,p=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:h,inHeight:m,inWidth:f,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:k,filterHeight:w,filterWidth:S,dilationHeight:A,dilationWidth:F,outShape:D}=E.computeDilation2DInfo(a.shape,r.shape,s,i,"NHWC",o),R=I.sizeFromShape(D),L=D.length,W=I.getArrayFromDType(a.dtype,R);for(let U=0;U<h;++U)for(let G=0;G<y;++G){let X=G*v-x.top;for(let j=0;j<b;++j){let te=j*k-x.left;for(let Q=0;Q<g;++Q){let se=Number.MIN_SAFE_INTEGER;for(let ie=0;ie<w;++ie){let ee=X+ie*A;if(ee>=0&&ee<m)for(let de=0;de<S;++de){let oe=te+de*F;if(oe>=0&&oe<f){let ge=I.locToIndex([U,ee,oe,Q],c,I.computeStrides(a.shape)),fe=I.locToIndex([ie,de,Q],d,I.computeStrides(r.shape)),we=u[ge]+p[fe];we>se&&(se=we)}}}let ne=I.locToIndex([U,G,j,Q],L,I.computeStrides(D));W[ne]=se}}}return{dataId:l.write(I.toTypedArray(W,a.dtype),D,a.dtype),shape:D,dtype:a.dtype}}},QH={kernelName:Wd,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,filter:r,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=I.toNestedArray(a.shape,u.data.get(a.dataId).values),p=I.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:h,inWidth:m,inChannels:f,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:k,filterWidth:w,dilationHeight:S,dilationWidth:A,outShape:F}=E.computeDilation2DInfo(a.shape,r.shape,i,o,"NHWC",l);I.assert(s.rank===F.length,()=>`Error in ${Wd}, dy must have the same rank as output ${F.length}, but got ${s.rank}`);let D=I.toNestedArray(F,u.data.get(s.dataId).values),R=I.makeZerosNestedTypedArray(r.shape,r.dtype);for(let L=0;L<d;++L)for(let W=0;W<g;++W){let U=W*x-b.top;for(let G=0;G<y;++G){let X=G*v-b.left;for(let j=0;j<f;++j){let te=Number.MIN_SAFE_INTEGER,Q=0,se=0;for(let ne=0;ne<k;++ne){let ie=U+ne*S;if(ie>=0&&ie<h)for(let ee=0;ee<w;++ee){let de=X+ee*A;if(de>=0&&de<m){let oe=c[L][ie][de][j]+p[ne][ee][j];oe>te&&(te=oe,Q=ne,se=ee)}}}R[Q][se][j]+=D[L][W][G][j]}}}return{dataId:u.write(I.toTypedArray(R,a.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},ZH={kernelName:zd,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,filter:r,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=I.toNestedArray(a.shape,u.data.get(a.dataId).values),p=I.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:h,inWidth:m,inChannels:f,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:k,filterWidth:w,dilationHeight:S,dilationWidth:A,outShape:F}=E.computeDilation2DInfo(a.shape,r.shape,i,o,"NHWC",l);I.assert(s.rank===F.length,()=>`Error in ${zd}, dy must have the same rank as output ${F.length}, but got ${s.rank}`);let D=I.toNestedArray(F,u.data.get(s.dataId).values),R=I.makeZerosNestedTypedArray(a.shape,a.dtype);for(let L=0;L<d;++L)for(let W=0;W<g;++W){let U=W*x-b.top;for(let G=0;G<y;++G){let X=G*v-b.left;for(let j=0;j<f;++j){let te=Number.MIN_SAFE_INTEGER,Q=U<0?0:U,se=X<0?0:X;for(let ne=0;ne<k;++ne){let ie=U+ne*S;if(ie>=0&&ie<h)for(let ee=0;ee<w;++ee){let de=X+ee*A;if(de>=0&&de<m){let oe=c[L][ie][de][j]+p[ne][ee][j];oe>te&&(te=oe,Q=ie,se=de)}}}R[L][Q][se][j]+=D[L][W][G][j]}}}return{dataId:u.write(I.toTypedArray(R,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};function e6(e){let{inputs:t,backend:n}=e,{dy:a,y:r}=t;ve([a,r],"eluGrad");let s=new Float32Array(I.sizeFromShape(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values;for(let l=0;l<i.length;++l){let u=i[l];u>=1?s[l]=o[l]:s[l]=o[l]*(u+1)}return n.makeTensorInfo(r.shape,"float32",s)}var t6={kernelName:Bd,backendName:"cpu",kernelFunc:e6},n6=Rt((e,t)=>e===t?1:0),O2=Qt(Yo,n6,null,"bool"),a6={kernelName:Yo,backendName:"cpu",kernelFunc:O2},r6=E.ERF_P,s6=E.ERF_A1,i6=E.ERF_A2,o6=E.ERF_A3,l6=E.ERF_A4,u6=E.ERF_A5,c6=it(Ko,e=>{let t=Math.sign(e),n=Math.abs(e),a=1/(1+r6*n);return t*(1-((((u6*a+l6)*a+o6)*a+i6)*a+s6)*a*Math.exp(-n*n))}),p6={kernelName:Ko,backendName:"cpu",kernelFunc:c6};function Bm(e){let{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:s}=a,i=r.shape.length,o=r.shape.slice(),l=s;return s<0&&(I.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),It({inputs:{x:r},backend:n,attrs:{shape:o}})}var d6={kernelName:Jo,backendName:"cpu",kernelFunc:Bm},h6=Rt((e,t)=>e/t),zv=Qt(Vs,h6),Wv={kernelName:Vs,backendName:"cpu",kernelFunc:zv};function L2(e,t,n){let a=e.shape,r=a[0],s=a[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,s],c=I.sizeFromShape(u),p=I.getTypedArrayFromDType("float32",c),d=I.getTypedArrayFromDType("float32",c);for(let g=0;g<r;g++){let y=Ki({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),b=Ki({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,s]}}),x=Un({inputs:{real:y,imag:b},backend:n}),{real:v,imag:k}=m6(x,t,n),w=E.mergeRealAndImagArrays(v,k);for(let S=0;S<s;S++){let A=E.getComplexWithIndex(w,S);p[g*s+S]=A.real,d[g*s+S]=A.imag}n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x)}let h=n.makeTensorInfo(u,"float32",p),m=n.makeTensorInfo(u,"float32",d),f=Un({inputs:{real:h,imag:m},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),f}function m6(e,t,n){let a=I.sizeFromShape(e.shape),r=n.data.get(e.dataId),s=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(f6(a)){let o=Bv(s,i,a,t,n),l=[e.shape[0],e.shape[1]];if(t){let u=n.makeTensorInfo(l,"float32",o.real),c=n.makeTensorInfo(l,"float32",o.imag),p=n.makeTensorInfo([],"float32",I.createScalarValue(a,"float32")),d=rr({inputs:{x:p},backend:n}),h=Wv.kernelFunc({inputs:{a:u,b:p},backend:n}),m=Wv.kernelFunc({inputs:{a:c,b:d},backend:n}),f=n.data.get(h.dataId).values,g=n.data.get(m.dataId).values;return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),{real:f,imag:g}}return o}else{let o=E.mergeRealAndImagArrays(s,i),l=g6(o,a,t);return E.splitRealAndImagArrays(l)}}function f6(e){return(e&e-1)==0}function Bv(e,t,n,a,r){if(n===1)return{real:e,imag:t};let s=E.mergeRealAndImagArrays(e,t),i=n/2,o=E.complexWithEvenIndex(s),l=o.real,u=o.imag,c=[l.length],p=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),h=Un({inputs:{real:p,imag:d},backend:r}),m=E.complexWithOddIndex(s),f=m.real,g=m.imag,y=[f.length],b=r.makeTensorInfo(y,"float32",f),x=r.makeTensorInfo(y,"float32",g),v=Un({inputs:{real:b,imag:x},backend:r}),k=Bv(l,u,i,a,r),w=k.real,S=k.imag,A=[w.length],F=r.makeTensorInfo(A,"float32",w),D=r.makeTensorInfo(A,"float32",S),R=Un({inputs:{real:F,imag:D},backend:r}),L=Bv(f,g,i,a,r),W=L.real,U=L.imag,G=[W.length],X=r.makeTensorInfo(G,"float32",W),j=r.makeTensorInfo(G,"float32",U),te=Un({inputs:{real:X,imag:j},backend:r}),Q=E.exponents(n,a),se=[Q.real.length],ne=r.makeTensorInfo(se,"float32",Q.real),ie=r.makeTensorInfo(se,"float32",Q.imag),ee=Un({inputs:{real:ne,imag:ie},backend:r}),de=Rv({inputs:{a:ee,b:te},backend:r}),oe=dp({inputs:{a:R,b:de},backend:r}),ge=Pv({inputs:{a:R,b:de},backend:r}),fe=Xi({inputs:{input:oe},backend:r}),we=Xi({inputs:{input:ge},backend:r}),Ne=pu({inputs:{input:oe},backend:r}),Ae=pu({inputs:{input:ge},backend:r}),Me=du({inputs:[fe,we],backend:r,attrs:{axis:0}}),_e=du({inputs:[Ne,Ae],backend:r,attrs:{axis:0}}),at=r.data.get(Me.dataId).values,rt=r.data.get(_e.dataId).values;return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(te),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(ie),r.disposeIntermediateTensorInfo(ee),r.disposeIntermediateTensorInfo(de),r.disposeIntermediateTensorInfo(oe),r.disposeIntermediateTensorInfo(ge),r.disposeIntermediateTensorInfo(fe),r.disposeIntermediateTensorInfo(Ne),r.disposeIntermediateTensorInfo(we),r.disposeIntermediateTensorInfo(Ae),r.disposeIntermediateTensorInfo(Me),r.disposeIntermediateTensorInfo(_e),{real:at,imag:rt}}function g6(e,t,n){let a=new Float32Array(t*2);for(let r=0;r<t;r++){let s=0,i=0;for(let o=0;o<t;o++){let l=E.exponent(r*o,t,n),u=E.getComplexWithIndex(e,o);s+=u.real*l.real-u.imag*l.imag,i+=u.real*l.imag+u.imag*l.real}n&&(s/=t,i/=t),E.assignToTypedArray(a,s,i,r)}return a}function y6(e){let{inputs:t,backend:n}=e,{input:a}=t,r=I.sizeFromShape(a.shape),s=a.shape[a.shape.length-1],i=r/s,o=It({inputs:{x:a},backend:n,attrs:{shape:[i,s]}}),l=L2(o,!1,n),u=It({inputs:{x:l},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}var b6={kernelName:Vd,backendName:"cpu",kernelFunc:y6};function Vv(e){let{backend:t,attrs:n}=e,{shape:a,value:r,dtype:s}=n,i=s||I.inferDtype(r),o=I.getArrayFromDType(i,I.sizeFromShape(a));return x6(o,r,i),t.makeTensorInfo(a,i,o)}var v6={kernelName:lc,backendName:"cpu",kernelFunc:Vv};function x6(e,t,n){e.fill(t)}var w6={kernelName:Zo,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,r=n,s=I.getTypedArrayFromDType(a.dtype,I.sizeFromShape(a.shape)),[i,o,l,u]=a.shape,c=r.data.get(a.dataId).values;for(let p=0;p<i;p++){let d=p*l*o*u;for(let h=0;h<o;h++){let m=h*(l*u);for(let f=0;f<l;f++){let g=f*u;for(let y=0;y<u;y++){let b=[i,h,f,y][2],x=Math.round(l-b),v=d+m+g+y,k=c[v];if(x>=0&&x<l){let w=x*u,S=d+m+w+y;k=c[S]}s[v]=k}}}}return{dataId:r.write(s,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},k6=Rt((e,t)=>Math.floor(e/t)),I6=Qt(Hs,k6,null,"int32"),N6={kernelName:Hs,backendName:"cpu",kernelFunc:I6};function T6(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:m}=a,f=R2({inputs:{x:r,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d}});if(i){let g=f;f=dp({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=f;f=Ov(n,f,h,o,m),n.disposeIntermediateTensorInfo(g)}return f}var S6={kernelName:Ni,backendName:"cpu",kernelFunc:T6};function C6(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:m}=a,f=P2({inputs:{x:r,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d}});if(i){let g=f;f=dp({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=f;f=Ov(n,f,h,o,m),n.disposeIntermediateTensorInfo(g)}return f}var A6={kernelName:Ti,backendName:"cpu",kernelFunc:C6};function F6(e){let{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=I.sizeFromShape(a.shape),i=r.shape,o=i[i.length-1],[l,u,c,p]=E.prepareAndValidate(a,r);if(u===0)return n.makeTensorInfo(l,a.dtype,[]);let d=Le([u,c],a.dtype),h=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values;for(let f=0;f<u;f++){let g=[],y=0;for(let b=0;b<o;b++){let x=h[f*o+b];y+=x*p[b],g.push(x)}if(y<0||y>=s/c)throw new Error(`Invalid indices: ${g} does not index into ${a.shape}`);for(let b=0;b<c;b++)d.values[f*c+b]=m[y*c+b]}return n.makeTensorInfo(l,d.dtype,d.values)}var _6={kernelName:tl,backendName:"cpu",kernelFunc:F6};function E6(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=a;ve([r,s],"gatherV2");let l=o;o==null&&(l=0);let u=I.sizeFromShape(s.shape),c=I.parseAxisParam(i,r.shape)[0],p=E.segment_util.collectGatherOpShapeInfo(r,s,c,l),d=It({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),h=It({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,u/p.batchSize]}}),m=[p.batchSize,p.outerSize,u/p.batchSize,p.sliceSize],f=n.bufferSync(h),g=n.bufferSync(d),y=l2(g,f,m);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.makeTensorInfo(p.outputShape,y.dtype,y.values)}var $6={kernelName:el,backendName:"cpu",kernelFunc:E6},D6=Rt((e,t)=>e>=t?1:0),M6=Qt(qs,D6,null,"bool"),R6={kernelName:qs,backendName:"cpu",kernelFunc:M6};function P6(e){let{inputs:t,backend:n}=e,{input:a}=t,r=I.sizeFromShape(a.shape),s=a.shape[a.shape.length-1],i=r/s,o=It({inputs:{x:a},backend:n,attrs:{shape:[i,s]}}),l=L2(o,!0,n),u=It({inputs:{x:l},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}var O6={kernelName:Ud,backendName:"cpu",kernelFunc:P6},L6=it(al,e=>Number.isFinite(e)?1:0,"bool"),z6={kernelName:al,backendName:"cpu",kernelFunc:L6},W6=it(rl,e=>Math.abs(e)===Infinity?1:0,"bool"),B6={kernelName:rl,backendName:"cpu",kernelFunc:W6},V6=it(sl,e=>Number.isNaN(e)?1:0,"bool"),U6={kernelName:sl,backendName:"cpu",kernelFunc:V6},G6=Rt((e,t)=>e<=t?1:0),H6=Qt(ol,G6,null,"bool"),j6={kernelName:ol,backendName:"cpu",kernelFunc:H6};function q6(e){let{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,i=p2(a,r,s);return t.makeTensorInfo([i.length],"float32",i)}var X6={kernelName:Hd,backendName:"cpu",kernelFunc:q6},K6=it(ll,e=>Math.log1p(e)),Y6={kernelName:ll,backendName:"cpu",kernelFunc:K6},J6=Rt((e,t)=>e&&t),Q6=Qt(ul,J6,null,"bool"),Z6={kernelName:ul,backendName:"cpu",kernelFunc:Q6},ej=it(uc,e=>e?0:1,"bool"),tj={kernelName:uc,backendName:"cpu",kernelFunc:ej},nj=Rt((e,t)=>e||t),aj=Qt(cc,nj,null,"bool"),rj={kernelName:cc,backendName:"cpu",kernelFunc:aj};function sj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=a;ve(r,"LRN");let u=r.shape[3],c=u-1,p=n.data.get(r.dataId).values,d=I.sizeFromShape(r.shape),h=new Float32Array(d);function m(f){let g=f%u,y=f-g+Math.max(0,g-s),b=f-g+Math.min(g+s,c),x=0;for(;y<=b;y++){let v=p[y];x+=v*v}return x}for(let f=0;f<d;f++){let g=m(f),y=p[f]*Math.pow(i+o*g,-l);h[f]=y}return n.makeTensorInfo(r.shape,r.dtype,h)}var ij={kernelName:pc,backendName:"cpu",kernelFunc:sj};function oj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=a;ve(i,"LRNGrad");let p=I.sizeFromShape(i.shape),d=i.shape[3],h=n.data.get(i.dataId).values,m=n.data.get(r.dataId).values,f=n.data.get(s.dataId).values,g=new Float32Array(p),y=p;for(let b=0;b<y;b++){let x=b%d,v=b-x+Math.max(0,x-o),k=b-x+Math.min(d,x+o+1),w=0;for(let S=v;S<k;S++)w+=Math.pow(m[S],2);w=u*w+l;for(let S=v;S<k;S++){let A=-2*u*c*m[S]*f[b]/w;b===S&&(A+=Math.pow(w,-c)),A*=h[b],g[S]+=A}}return n.makeTensorInfo(i.shape,r.dtype,g)}var lj={kernelName:jd,backendName:"cpu",kernelFunc:oj};function z2(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a,o=n,l=r.shape,u=l.length,c=I.parseAxisParam(s,l),p=c,d=E.getAxesPermutation(p,u),h=o.data.get(r.dataId).values;if(d!=null){let v=new Array(u);for(let k=0;k<v.length;k++)v[k]=l[d[k]];h=$v(h,l,r.dtype,d,v),p=E.getInnerMostAxes(p.length,u),l=v}ve(r,"max"),E.assertAxesAreInnerMostDims("max",p,u);let[m,f]=E.computeOutAndReduceShapes(l,p),g=I.sizeFromShape(f),y=h2(h,g,m,r.dtype),b=o.write(y,m,r.dtype),x=m;return i&&(x=E.expandShapeToKeepDim(m,c)),{dataId:b,shape:x,dtype:r.dtype}}var uj={kernelName:Js,backendName:"cpu",kernelFunc:z2};function cj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;ve(r,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a,u=1;I.assert(E.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=E.computePool2DInfo(r.shape,s,i,u,o,l),p;if(c.filterWidth===1&&c.filterHeight===1&&I.arraysEqual(c.inShape,c.outShape))p=rr({inputs:{x:r},backend:n});else{let d=n.data.get(r.dataId).values,h=I.computeStrides(r.shape),m=Lv(d,r.shape,r.dtype,h,c,"max");p=n.makeTensorInfo(c.outShape,r.dtype,m.values)}return p}var pj={kernelName:Zs,backendName:"cpu",kernelFunc:cj};function dj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=a;ve(r,"maxPool3d");let c=E.computePool3DInfo(r.shape,s,i,1,o,l,u),p=n.data.get(r.dataId).values,d=M2(p,r.shape,r.dtype,I.computeStrides(r.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}var hj={kernelName:dc,backendName:"cpu",kernelFunc:dj};function mj(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a;ve([r,s],"maxPool3DGrad");let c=E.computePool3DInfo(s.shape,i,o,1,l,u),p=n.bufferSync(s),d=eH(p,c),h=c.strideDepth,m=c.strideHeight,f=c.strideWidth,g=c.dilationDepth,y=c.dilationHeight,b=c.dilationWidth,x=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,w=x-1-c.padInfo.front,S=k-1-c.padInfo.left,A=v-1-c.padInfo.top,F=Le(s.shape,"float32"),D=n.bufferSync(r);for(let R=0;R<c.batchSize;++R)for(let L=0;L<c.inChannels;++L)for(let W=0;W<c.inDepth;++W)for(let U=0;U<c.inHeight;++U)for(let G=0;G<c.inWidth;++G){let X=W-w,j=U-A,te=G-S,Q=0;for(let se=0;se<x;se+=g){let ne=(X+se)/h;if(!(ne<0||ne>=c.outDepth||Math.floor(ne)!==ne))for(let ie=0;ie<v;ie+=y){let ee=(j+ie)/m;if(!(ee<0||ee>=c.outHeight||Math.floor(ee)!==ee))for(let de=0;de<k;de+=b){let oe=(te+de)/f;if(oe<0||oe>=c.outWidth||Math.floor(oe)!==oe)continue;let ge=x*v*k-1-d.get(R,ne,ee,oe,L),fe=se*v*k+ie*k+de,we=ge===fe?1:0;we!==0&&(Q+=D.get(R,ne,ee,oe,L)*we)}}}F.set(Q,R,W,U,G,L)}return n.makeTensorInfo(F.shape,F.dtype,F.values)}var fj={kernelName:Xd,backendName:"cpu",kernelFunc:mj};function gj(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,o=s;ve([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=a,d=E.computePool2DInfo(o.shape,l,u,1,c,p),h=n.data.get(o.dataId).values,m=Le(d.outShape,o.dtype,D2(h,o.shape,o.dtype,d).values),f=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,k=v-1-d.padInfo.left,w=x-1-d.padInfo.top,S=Le(o.shape,"float32"),A=n.data.get(r.dataId).values,F=Le(r.shape,"float32",A);for(let D=0;D<d.batchSize;++D)for(let R=0;R<d.inChannels;++R)for(let L=0;L<d.inHeight;++L)for(let W=0;W<d.inWidth;++W){let U=L-w,G=W-k,X=0;for(let j=0;j<x;j+=y){let te=(U+j)/f;if(!(te<0||te>=d.outHeight||Math.floor(te)!==te))for(let Q=0;Q<v;Q+=b){let se=(G+Q)/g;if(se<0||se>=d.outWidth||Math.floor(se)!==se)continue;let ne=x*v-1-m.get(D,te,se,R),ie=j*v+Q,ee=ne===ie?1:0;ee!==0&&(X+=F.get(D,te,se,R)*ee)}}S.set(X,D,L,W,R)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}var yj={kernelName:qd,backendName:"cpu",kernelFunc:gj};function bj(e,t,n,a,r){let s=I.computeStrides(t),i=Lv(e,t,n,s,r,"max"),o=D2(e,t,n,r,!0,a);return[i.values,o.values]}var xj={kernelName:Kd,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;ve(a,"MaxPoolWithArgmax");let u=l.data.get(a.dataId).values,c=E.computePool2DInfo(a.shape,r,s,[1,1],i),[p,d]=bj(u,a.shape,a.dtype,o,c),h=l.write(p,c.outShape,a.dtype),m=l.write(d,c.outShape,a.dtype);return[{dataId:h,shape:c.outShape,dtype:a.dtype},{dataId:m,shape:c.outShape,dtype:"int32"}]}};function Vm(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;ve(r,"sum");let o;r.dtype==="bool"?o=fs({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):o=rr({inputs:{x:r},backend:n});let l=o.shape.length,u=I.parseAxisParam(s,o.shape),c=E.getAxesPermutation(u,l),p=u,d=o;c!=null&&(d=xa({inputs:{x:o},backend:n,attrs:{perm:c}}),p=E.getInnerMostAxes(p.length,l)),E.assertAxesAreInnerMostDims("sum",p,d.shape.length);let[h,m]=E.computeOutAndReduceShapes(d.shape,p),f=E.upcastType(d.dtype,"int32"),g=Wm(n,h,f),y=I.sizeFromShape(m),b=n.data.get(g.dataId).values,x=n.data.get(d.dataId).values;for(let v=0;v<b.length;++v){let k=v*y,w=0;for(let S=0;S<y;++S)w+=x[k+S];b[v]=w}if(i){let v=E.expandShapeToKeepDim(g.shape,u),k=g;g=It({inputs:{x:g},backend:n,attrs:{shape:v}}),n.disposeIntermediateTensorInfo(k)}return n.disposeIntermediateTensorInfo(o),c!=null&&n.disposeIntermediateTensorInfo(d),g}var vj={kernelName:yi,backendName:"cpu",kernelFunc:Vm};function wj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=I.parseAxisParam(s,r.shape),l=E.computeOutAndReduceShapes(r.shape,o)[1],u=I.sizeFromShape(l),c=[],p=n.makeTensorInfo([],"float32",new Float32Array([u]));c.push(p);let d=fs({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});c.push(d);let h=zv({inputs:{a:d,b:p},backend:n});c.push(h);let m=Vm({inputs:{x:h},backend:n,attrs:{axis:s,keepDims:i}});return c.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var kj={kernelName:ei,backendName:"cpu",kernelFunc:wj};function Ij(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;ve(r,"min");let o=I.parseAxisParam(s,r.shape),l=o,u=E.getAxesPermutation(l,r.shape.length),c=r;u!=null&&(c=xa({inputs:{x:r},backend:n,attrs:{perm:u}}),l=E.getInnerMostAxes(l.length,r.shape.length)),E.assertAxesAreInnerMostDims("min",l,c.shape.length);let[p,d]=E.computeOutAndReduceShapes(c.shape,l),h=I.sizeFromShape(d),m=I.makeZerosTypedArray(I.sizeFromShape(p),c.dtype),f=n.data.get(c.dataId).values;for(let y=0;y<m.length;++y){let b=y*h,x=f[b];for(let v=0;v<h;++v){let k=f[b+v];k<x&&(x=k)}m[y]=x}u!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(p,c.dtype,m);if(i){let y=E.expandShapeToKeepDim(p,o),b=It({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var Nj={kernelName:ti,backendName:"cpu",kernelFunc:Ij};function Tj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,mode:i}=a;ve(r,"mirrorPad");let o=s.map((b,x)=>b[0]+r.shape[x]+b[1]),l=s.map(b=>b[0]),u=s.map((b,x)=>b[0]+r.shape[x]),c=i==="reflect"?0:1,p=n.data.get(r.dataId).values,d=r.shape.length,h=I.computeStrides(r.shape),m=I.sizeFromShape(o),f=o.length,g=I.computeStrides(o),y=I.getTypedArrayFromDType(r.dtype,m);for(let b=0;b<m;b++){let x=I.indexToLoc(b,f,g);for(let k=0;k<f;k++)x[k]<l[k]?x[k]=l[k]*2-x[k]-c:x[k]>=u[k]&&(x[k]=(u[k]-1)*2-x[k]+c);x=x.map((k,w)=>k-l[w]);let v=I.locToIndex(x,d,h);y[b]=p[v]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}var Sj={kernelName:hc,backendName:"cpu",kernelFunc:Tj},Cj=Rt((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),Aj=Qt(cl,Cj),Fj={kernelName:cl,backendName:"cpu",kernelFunc:Aj},_j=Do(HF());function W2(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=r.shape.length,o=s;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=I.parseAxisParam([o],r.shape),u=z2({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=E.expandShapeToKeepDim(u.shape,l),p=It({inputs:{x:u},backend:n,attrs:{shape:c}}),d=Pv({inputs:{a:r,b:p},backend:n}),h=S2({inputs:{x:d},backend:n}),m=Vm({inputs:{x:h},backend:n,attrs:{axis:l,keepDims:!1}}),f=It({inputs:{x:m},backend:n,attrs:{shape:c}}),g=zv({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}var Ej={kernelName:bi,backendName:"cpu",kernelFunc:W2};function $j(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=a;ve(r,"multinomial");let l=o?r:W2({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],p=n.data.get(l.dataId).values,d=[u,s],h=I.makeZerosTypedArray(I.sizeFromShape(d),"int32");for(let m=0;m<u;++m){let f=m*c,g=new Float32Array(c-1);g[0]=p[f];for(let x=1;x<g.length;++x)g[x]=g[x-1]+p[f+x];let y=_j.alea(i.toString()),b=m*s;for(let x=0;x<s;++x){let v=y();h[b+x]=g.length;for(let k=0;k<g.length;k++)if(v<g[k]){h[b+x]=k;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",h)}var Dj={kernelName:Yd,backendName:"cpu",kernelFunc:$j},Mj=Qa.nonMaxSuppressionV3Impl;function Rj(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=a;ve(r,"NonMaxSuppression");let u=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:p}=Mj(u,c,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var Pj={kernelName:hl,backendName:"cpu",kernelFunc:Rj},Oj=Qa.nonMaxSuppressionV4Impl;function Lj(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=a;ve(r,"NonMaxSuppressionPadded");let c=n.data.get(r.dataId).values,p=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:h}=Oj(c,p,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var zj={kernelName:ml,backendName:"cpu",kernelFunc:Lj},Wj=Qa.nonMaxSuppressionV5Impl;function Bj(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=a;ve(r,"NonMaxSuppressionWithScore");let c=n.data.get(r.dataId).values,p=n.data.get(s.dataId).values,d=i,h=o,m=l,f=u,{selectedIndices:g,selectedScores:y}=Wj(c,p,d,h,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var Vj={kernelName:fl,backendName:"cpu",kernelFunc:Bj};function Uj(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{depth:s,onValue:i,offValue:o}=a;ve(r,"oneHot");let l=I.sizeFromShape(r.shape),u=new Float32Array(l*s);u.fill(o);let c=n.data.get(r.dataId).values;for(let p=0;p<l;++p)c[p]>=0&&c[p]<s&&(u[p*s+c[p]]=i);return n.makeTensorInfo([...r.shape,s],"int32",u)}var Gj={kernelName:ri,backendName:"cpu",kernelFunc:Uj};function Um(e){let{inputs:t,backend:n}=e,{x:a}=t;if(a.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(a.dtype==="complex64"){let r=Xi({inputs:{input:a},backend:n}),s=Um({inputs:{x:r},backend:n}),i=pu({inputs:{input:a},backend:n}),o=Um({inputs:{x:i},backend:n}),l=Un({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Vv({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}var Hj={kernelName:Dl,backendName:"cpu",kernelFunc:Um};function B2(e){let{inputs:t,backend:n}=e,{x:a}=t;if(a.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(a.dtype==="complex64"){let r=Xi({inputs:{input:a},backend:n}),s=B2({inputs:{x:r},backend:n}),i=pu({inputs:{input:a},backend:n}),o=Um({inputs:{x:i},backend:n}),l=Un({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Vv({backend:n,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}var jj={kernelName:gl,backendName:"cpu",kernelFunc:B2};function V2(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(t.length===1)return Bm({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach(c=>{I.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),I.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(c=>{let p=Bm({inputs:{input:c},backend:n,attrs:{dim:r}});return o.push(p),p}),u=du({inputs:l,backend:n,attrs:{axis:r}});return o.forEach(c=>n.disposeIntermediateTensorInfo(c)),u}var qj={kernelName:yl,backendName:"cpu",kernelFunc:V2};function Xj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a;ve(r,"pad");let o=s.map((y,b)=>y[0]+r.shape[b]+y[1]),l=s.map(y=>y[0]),u=n.data.get(r.dataId).values,c=I.sizeFromShape(r.shape),p=r.shape.length,d=I.computeStrides(r.shape),h=I.sizeFromShape(o),m=o.length,f=I.computeStrides(o),g=I.getTypedArrayFromDType(r.dtype,h);i!==0&&g.fill(i);for(let y=0;y<c;y++){let b=I.indexToLoc(y,p,d).map((v,k)=>v+l[k]),x=I.locToIndex(b,m,f);g[x]=u[y]}return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}var U2={kernelName:si,backendName:"cpu",kernelFunc:Xj},Kj=Rt((e,t)=>Math.pow(e,t)),Yj=Qt(ii,Kj),Jj={kernelName:ii,backendName:"cpu",kernelFunc:Yj};function Qj(e){let{backend:t,attrs:n}=e,{start:a,stop:r,dtype:s,step:i}=n,o=Dv(a,r,i,s);return t.makeTensorInfo([o.length],s,o)}var Zj={kernelName:mc,backendName:"cpu",kernelFunc:Qj},eq=it(xl,e=>1/e),tq={kernelName:xl,backendName:"cpu",kernelFunc:eq};function nq(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a;ve(r,"resizeBilinear");let l=I.computeStrides(r.shape),[u,c]=o,[p,d,h,m]=r.shape,f=n.data.get(r.dataId).values,g=new Float32Array(I.sizeFromShape([p,u,c,m])),y=[s&&u>1?d-1:d,s&&c>1?h-1:h],b=[s&&u>1?u-1:u,s&&c>1?c-1:c],x=0,v=y[0]/b[0],k=y[1]/b[1];for(let w=0;w<p;w++)for(let S=0;S<u;S++){let A;i?A=v*(S+.5)-.5:A=v*S;let F=Math.max(0,Math.floor(A)),D=A-F,R=Math.min(d-1,Math.ceil(A)),L=w*l[0]+F*l[1],W=w*l[0]+R*l[1];for(let U=0;U<c;U++){let G;i?G=k*(U+.5)-.5:G=k*U;let X=Math.max(0,Math.floor(G)),j=G-X,te=Math.min(h-1,Math.ceil(G)),Q=L+X*l[2],se=W+X*l[2],ne=L+te*l[2],ie=W+te*l[2];for(let ee=0;ee<m;ee++){let de=f[Q+ee],oe=f[se+ee],ge=f[ne+ee],fe=f[ie+ee],we=de+(ge-de)*j,Ne=oe+(fe-oe)*j,Ae=we+(Ne-we)*D;g[x++]=Ae}}}return n.makeTensorInfo([p,u,c,m],"float32",g)}var aq={kernelName:ui,backendName:"cpu",kernelFunc:nq};function rq(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a;ve([s,r],"resizeBilinearGrad");let o=I.computeStrides(r.shape),[l,u,c,p]=r.shape,[,d,h]=s.shape,m=new Float32Array(l*u*c*p),f=[i&&d>1?u-1:u,i&&h>1?c-1:c],g=[i&&d>1?d-1:d,i&&h>1?h-1:h],y=f[0]/g[0],b=f[1]/g[1],x=n.data.get(s.dataId).values,v=0;for(let k=0;k<l;k++){let w=k*o[0];for(let S=0;S<d;S++){let A=S*y,F=Math.floor(A),D=Math.min(Math.ceil(A),u-1),R=w+F*o[1],L=w+D*o[1],W=A-F,U=1-W;for(let G=0;G<h;G++){let X=G*b,j=Math.floor(X),te=Math.min(Math.ceil(X),c-1),Q=X-j,se=1-Q,ne=R+j*o[2],ie=R+te*o[2],ee=L+j*o[2],de=L+te*o[2],oe=U*se,ge=U*Q,fe=W*se,we=W*Q;for(let Ne=0;Ne<p;Ne++){let Ae=x[v++];m[ne+Ne]+=Ae*oe,m[ie+Ne]+=Ae*ge,m[ee+Ne]+=Ae*fe,m[de+Ne]+=Ae*we}}}}return n.makeTensorInfo([l,c,u,p],"float32",m)}var sq={kernelName:Zd,backendName:"cpu",kernelFunc:rq};function iq(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a;ve(r,"resizeNearestNeighbor");let l=I.computeStrides(r.shape),[u,c]=o,[p,d,h,m]=r.shape,f=n.data.get(r.dataId).values,g=new Float32Array(p*u*c*m),y=[s&&u>1?d-1:d,s&&c>1?h-1:h],b=[s&&u>1?u-1:u,s&&c>1?c-1:c],x=y[0]/b[0],v=y[1]/b[1],k=0;for(let w=0;w<p;w++){let S=w*l[0];for(let A=0;A<u;A++){let F=i?x*(A+.5):x*A,D=Math.min(d-1,s?Math.round(F):Math.floor(F));i&&(D=Math.max(0,D));let R=S+D*l[1];for(let L=0;L<c;L++){let W=i?v*(L+.5):v*L,U=Math.min(h-1,s?Math.round(W):Math.floor(W));i&&(U=Math.max(0,U));let G=R+U*l[2];for(let X=0;X<m;X++){let j=f[G+X];g[k++]=j}}}}return n.makeTensorInfo([p,u,c,m],r.dtype,g)}var oq={kernelName:fc,backendName:"cpu",kernelFunc:iq};function lq(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a;ve([s,r],"resizeNearestNeighborGrad");let o=I.computeStrides(r.shape),l=I.computeStrides(s.shape),[u,c,p,d]=r.shape,[,h,m]=s.shape,f=new Float32Array(u*c*p*d),g=n.data.get(s.dataId).values,y=[i&&h>1?c-1:c,i&&m>1?p-1:p],b=[i&&h>1?h-1:h,i&&m>1?m-1:m],x=y[0]/b[0],v=y[1]/b[1],k=1/x,w=1/v,S=Math.ceil(k)*2+2,A=Math.ceil(w)*2+2;for(let F=0;F<u;F++){let D=F*o[0];for(let R=0;R<c;R++){let L=D+R*o[1],W=Math.floor(R*k),U=Math.floor(W-S/2);for(let G=0;G<p;G++){let X=L+G*o[2],j=Math.floor(G*w),te=Math.floor(j-A/2);for(let Q=0;Q<d;Q++){let se=0;for(let ne=0;ne<S;ne++){let ie=ne+U;if(ie<0||ie>=h)continue;let ee=D+ie*l[1],de=ie*x,oe=Math.min(c-1,i?Math.round(de):Math.floor(de));if(R===oe)for(let ge=0;ge<A;ge++){let fe=ge+te;if(fe<0||fe>=m)continue;let we=ee+fe*l[2],Ne=fe*v,Ae=Math.min(p-1,i?Math.round(Ne):Math.floor(Ne));G===Ae&&(se+=g[we+Q])}}f[X+Q]=se}}}}return n.makeTensorInfo(r.shape,r.dtype,f)}var uq={kernelName:Qd,backendName:"cpu",kernelFunc:lq};function cq(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a;ve(r,"reverse");let i=r.shape.length,o=I.parseAxisParam(s,r.shape);if(i===0)return rr({inputs:{x:r},backend:n});let l=new Lt(r.shape,r.dtype),u=n.bufferSync(r);for(let c=0;c<l.size;c++){let p=l.indexToLoc(c),d=p.slice();o.forEach(h=>d[h]=r.shape[h]-1-d[h]),l.set(u.get(...d),...p)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var pq={kernelName:pi,backendName:"cpu",kernelFunc:cq},dq={kernelName:Ml,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,{radians:r,fillValue:s,center:i}=t,o=n,l=I.getTypedArrayFromDType(a.dtype,I.sizeFromShape(a.shape)),[u,c,p,d]=a.shape,[h,m]=E.getImageCenter(i,c,p),f=255,g=Math.sin(r),y=Math.cos(r),b=o.data.get(a.dataId).values;for(let x=0;x<u;x++){let v=x*p*c*d;for(let k=0;k<c;k++){let w=k*(p*d);for(let S=0;S<p;S++){let A=S*d;for(let F=0;F<d;F++){let D=[u,k,S,F],R=D[2],L=D[1],W=(R-h)*y-(L-m)*g,U=(R-h)*g+(L-m)*y;W=Math.round(W+h),U=Math.round(U+m);let G=s;if(typeof s!="number"&&(F===3?G=f:G=s[F]),W>=0&&W<p&&U>=0&&U<c){let j=U*(p*d),te=W*d,Q=v+j+te+F;G=b[Q]}let X=v+w+A+F;l[X]=G}}}}return{dataId:o.write(l,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},hq=it(di,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),mq={kernelName:di,backendName:"cpu",kernelFunc:hq};function G2(e,t,n,a,r,s,i,o,l,u){let c=[a/r,r],p=e.values,d=t.values;if(a===0)return Le(n,t.dtype);let h=Le(c,t.dtype);h.values.fill(l);for(let m=0;m<s;m++){let f=[],g=0;for(let y=0;y<i;y++){let b=p[m*i+y];f.push(b),g+=b*o[y]}if(g<0||g>=a/r)throw new Error(`Invalid indices: ${f} does not index into ${n}`);for(let y=0;y<r;y++)u?h.values[g*r+y]+=d[m*r+y]:h.values[g*r+y]=t.rank===0?d[0]:d[m*r+y]}return h}function fq(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=E.calculateShapes(s,r,i),d=!0,h=n.bufferSync(r),m=n.bufferSync(s),f=G2(h,m,i,p,u,l,o,c,0,d);return n.makeTensorInfo(i,f.dtype,f.values)}var gq={kernelName:wl,backendName:"cpu",kernelFunc:fq};function yq(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t;ve([a,r,s],"select");let i=a.shape.length,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,c=pa(r.dtype,s.dtype),p=I.makeZerosTypedArray(I.sizeFromShape(r.shape),c),d=0,h=i===0||i>1||r.shape.length===1?1:I.sizeFromShape(r.shape.slice(1));for(let m=0;m<o.length;m++)for(let f=0;f<h;f++)o[m]===1?p[d++]=l[m]:p[d++]=u[m];return n.makeTensorInfo(r.shape,c,p)}var bq={kernelName:kl,backendName:"cpu",kernelFunc:yq},xq=E.SELU_SCALEALPHA,vq=E.SELU_SCALE,wq=it(Il,e=>e>=0?vq*e:xq*(Math.exp(e)-1)),kq={kernelName:Il,backendName:"cpu",kernelFunc:wq},Iq=it(fi,e=>1/(1+Math.exp(-e))),Nq={kernelName:fi,backendName:"cpu",kernelFunc:Iq},Tq=it(Sl,e=>e<0?-1:e>0?1:0),Sq={kernelName:Sl,backendName:"cpu",kernelFunc:Tq},Cq=it(mi,e=>Math.sin(e)),Aq={kernelName:mi,backendName:"cpu",kernelFunc:Cq},Fq=it(Tl,e=>Math.sinh(e)),_q={kernelName:Tl,backendName:"cpu",kernelFunc:Fq},Eq=11920928955078125e-23,H2=Math.log(Eq)+2,$q=it(Cl,e=>{let t=e>-H2,n=e<H2,a=Math.exp(e),r;return n?r=a:t?r=e:r=Math.log(1+a),r}),Dq={kernelName:Cl,backendName:"cpu",kernelFunc:$q};function Mq(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;ve([r],"spaceToBatchND");let o=I.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<r.shape.length;++g)l.push([0,0]);let u=U2.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=E.getReshaped(u.shape,s,o,!1),p=E.getPermuted(c.length,s.length,!1),d=E.getReshapedPermuted(u.shape,s,o,!1),h=It({inputs:{x:u},backend:n,attrs:{shape:c}}),m=xa({inputs:{x:h},backend:n,attrs:{perm:p}}),f=It({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),f}var Rq={kernelName:gc,backendName:"cpu",kernelFunc:Mq};function Pq(e){let{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=E.calculateShapes(s,r,o),h=!1,m=n.bufferSync(r),f=n.bufferSync(s),g=n.data.get(i.dataId).values[0],y=G2(m,f,o,d,c,u,l,p,g,h);return n.makeTensorInfo(o,y.dtype,y.values)}var Oq={kernelName:eh,backendName:"cpu",kernelFunc:Pq};function Lq(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=I.parseAxisParam(i,r.shape)[0],l=E.prepareSplitSize(r,s,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map(p=>{let d=[...c];d[o]=p;let h=Ki({inputs:{x:r},backend:n,attrs:{begin:u,size:d}});return u[o]+=p,h})}var zq={kernelName:Al,backendName:"cpu",kernelFunc:Lq},Wq=it(gi,e=>Math.sqrt(e)),Bq={kernelName:gi,backendName:"cpu",kernelFunc:Wq},Vq={kernelName:yc,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,a=t;ve(n,"square");let r=a.data.get(n.dataId).values,s=new Float32Array(r.length);for(let i=0;i<r.length;++i){let o=r[i];s[i]=o*o}return{dataId:a.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},Uq=it(Xr,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),Gq={kernelName:Xr,backendName:"cpu",kernelFunc:Uq};function Hq(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=a;ve(r,"stridedSlice");let{nonStrided:h,$begin:m,$strides:f,size:g,newShape:y,outShape:b}=dn.sliceInfo(r.shape,s,i,o,l,u,c,p,d),x=It({inputs:{x:r},backend:n,attrs:{shape:y}}),v;if(h){let w=Ki({inputs:{x},backend:n,attrs:{begin:m,size:g}});v=It({inputs:{x:w},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(w)}else if(b.some(w=>w===0))v=n.makeTensorInfo(b,r.dtype,[]);else{let w=n.bufferSync(x),S=w2(b,w,f,m);v=n.makeTensorInfo(S.shape,S.dtype,S.values)}let k=It({inputs:{x:v},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),k}var jq={kernelName:Fl,backendName:"cpu",kernelFunc:Hq},qq=it(_l,e=>Math.tan(e)),Xq={kernelName:_l,backendName:"cpu",kernelFunc:qq},Kq=it(wi,e=>Math.tanh(e)),Yq={kernelName:wi,backendName:"cpu",kernelFunc:Kq};function Jq(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;ve(r,"tile");let i=I2(n.bufferSync(r),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}var Qq={kernelName:qr,backendName:"cpu",kernelFunc:Jq};function Zq(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a;ve(r,"topk");let o=n.data.get(r.dataId).values,[l,u]=N2(o,r.shape,r.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}var e5={kernelName:El,backendName:"cpu",kernelFunc:Zq};function a5(e){let{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,p,d,h]=r.shape,[m,f]=u!=null?u:[p,d],g=[c,m,f,h],y=I.computeStrides(r.shape),b=y[0],x=y[1],v=y[2],k=I.getTypedArrayFromDType(r.dtype,I.sizeFromShape(g));k.fill(l);let w=a.data.get(r.dataId).values,S=a.data.get(s.dataId).values;for(let A=0;A<c;++A){let F=s.shape[0]===1?S:S.subarray(A*8,A*8+8);for(let D=0;D<m;++D)for(let R=0;R<f;++R)for(let L=0;L<h;++L){let W,U=F[6]*R+F[7]*D+1;if(U===0)continue;let G=(F[0]*R+F[1]*D+F[2])/U,X=(F[3]*R+F[4]*D+F[5])/U,j=j2(G,d,o),te=j2(X,p,o);switch(i){case"nearest":W=t5(w,p,d,b,x,v,A,te,j,L,l);break;case"bilinear":W=n5(w,p,d,b,x,v,A,te,j,L,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let Q=A*b+D*x+R*v+L;k[Q]=W}return a.makeTensorInfo(g,r.dtype,k)}return{dataId:a.write(k,g,r.dtype),shape:r.shape,dtype:r.dtype}}var r5={kernelName:th,backendName:"cpu",kernelFunc:a5};function j2(e,t,n){switch(n){case"reflect":return s5(e,t);case"wrap":return i5(e,t);case"nearest":return l5(e,t);case"constant":default:return o5(e,t)}}function s5(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let a=2*t;n<a&&(n=a*Math.trunc(-n/a)+n),n=n<-t?n+a:-n-1}else if(n>t-1)if(t<=1)n=0;else{let a=2*t;n-=a*Math.trunc(n/a),n>=t&&(n=a-n-1)}return I.clamp(0,n,t-1)}function i5(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let a=t-1;n+=t*(Math.trunc(-n/a)+1)}else if(n>t-1)if(t<=1)n=0;else{let a=t-1;n-=t*Math.trunc(n/a)}return I.clamp(0,n,t-1)}function o5(e,t){return e}function l5(e,t){return I.clamp(0,e,t-1)}function hp(e,t,n,a,r,s,i,o,l,u,c){let p=i*a+o*r+l*s+u;return 0<=o&&o<t&&0<=l&&l<n?e[p]:c}function t5(e,t,n,a,r,s,i,o,l,u,c){let p=Math.round(o),d=Math.round(l);return hp(e,t,n,a,r,s,i,p,d,u,c)}function n5(e,t,n,a,r,s,i,o,l,u,c){let p=Math.floor(o),d=Math.floor(l),h=p+1,m=d+1,f=(m-l)*hp(e,t,n,a,r,s,i,p,d,u,c)+(l-d)*hp(e,t,n,a,r,s,i,p,m,u,c),g=(m-l)*hp(e,t,n,a,r,s,i,h,d,u,c)+(l-d)*hp(e,t,n,a,r,s,i,h,m,u,c);return(h-o)*f+(o-p)*g}function u5(e){let{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;ve(s,"unique");let i=a.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=T2(i,r,s.shape,s.dtype);return[a.makeTensorInfo(l,s.dtype,o),a.makeTensorInfo([u.length],"int32",u)]}var c5={kernelName:nh,backendName:"cpu",kernelFunc:u5};function p5(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:s}=a;s<0&&(s+=r.shape.length);let i=r.shape.length,o=r.shape[s],l=new Array(i-1),u=0;for(let h=0;h<i;h++)h!==s&&(l[u++]=r.shape[h]);let c=new Array(i).fill(0),p=r.shape.slice();p[s]=1;let d=new Array(o);for(let h=0;h<d.length;h++){c[s]=h;let m=Ki({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});d[h]=It({inputs:{x:m},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(m)}return d}var d5={kernelName:$l,backendName:"cpu",kernelFunc:p5};function h5(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a;ve(r,"unsortedSegmentSum");let o=r.shape.length,l=s.shape.length,u=[],c=[],p=o-l,d=s;for(let m=0;m<p;++m){let f=Bm({inputs:{input:d},backend:n,attrs:{dim:m+1}});d=f,c.push(f)}for(let m=0;m<i;++m){let f=I.createScalarValue(m,"int32"),g=n.makeTensorInfo([],"int32",f),y=O2({inputs:{a:g,b:d},backend:n}),b=fs({inputs:{x:y},backend:n,attrs:{dtype:"float32"}}),x=Rv({inputs:{a:b,b:r},backend:n}),v=Vm({inputs:{x},backend:n,attrs:{axis:0,keepDims:!1}});u.push(v),c.push(g),c.push(y),c.push(b),c.push(x),c.push(v)}let h=V2({inputs:u,backend:n,attrs:{axis:0}});return c.forEach(m=>n.disposeIntermediateTensorInfo(m)),h}var m5={kernelName:bc,backendName:"cpu",kernelFunc:h5},f5=[AG,$U,_G,$G,LU,MG,PG,LG,WG,VG,GG,jG,XG,JG,ZG,nH,rH,iH,lH,SG,cH,dH,mH,PU,WU,gH,DU,bH,vH,IH,TH,wH,FH,EH,CH,DH,RH,OH,zH,BH,UH,GH,jH,XH,YH,JH,ZH,QH,Wv,xG,t6,a6,p6,BU,d6,UU,b6,v6,w6,HU,N6,S6,A6,_6,$6,qU,R6,MU,O6,xH,z6,B6,U6,vG,KU,j6,X6,JU,Y6,Z6,tj,rj,ij,lj,ZU,pj,hj,fj,yj,xj,uj,kj,Nj,tG,Sj,Fj,Dj,aG,sG,Pj,zj,Vj,oG,Gj,jj,qj,U2,Jj,kG,cG,Zj,RU,tq,IG,NG,TG,aq,sq,oq,uq,pq,dq,mq,dG,gq,bq,kq,Nq,Sq,Aq,_q,hG,Ej,Dq,Rq,Oq,zq,Bq,Vq,fG,Gq,jq,yG,vj,Xq,Yq,Qq,e5,lG,r5,c5,d5,m5,Hj];for(let e of f5)vc(e);var Yi={},Uv={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function g5(e,t){Yi[e]=t}function sr(e){if(!(e in Yi)){let n=y5(e);if(n!==null)Yi[e]=n;else return console.log("Could not get context for WebGL version",e),null}let t=Yi[e];return t.isContextLost()?(delete Yi[e],sr(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Yi[e])}function b5(e){if(typeof OffscreenCanvas!="undefined"&&e===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function y5(e){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=b5(e);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete Yi[e]},!1),e===1?t.getContext("webgl",Uv)||t.getContext("experimental-webgl",Uv):t.getContext("webgl2",Uv)}var mp;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(mp||(mp={}));var aa;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(aa||(aa={}));var sn;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(sn||(sn={}));function fp(e,t){return[t,e]}function x5(e,t){return e*t}function gp(e){let t=I.sizeFromShape(e),n=Math.ceil(t/4);return I.sizeToSquarishShape(n)}function hu(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function v5(e,t){let[n,a]=hu(e,t);return n*a*4}function Gv(e,t){let n=e,a,r,s,i,o,l,u,c,p,d;return Z().getNumber("WEBGL_VERSION")===2?(a=n.R32F,r=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,p=n.HALF_FLOAT,d=n.FLOAT):(a=e.RGBA,r=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,p=t!=null?t.HALF_FLOAT_OES:null,d=e.FLOAT),l=e.RGBA,{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:d}}function Ie(e,t){let n=t();return Z().getBool("DEBUG")&&w5(e),n}function w5(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+k5(e,t))}var I5=596e-10,N5=65504;function T5(e){return!!(Z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||I5<Math.abs(e)&&Math.abs(e)<N5)}function k5(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Gm(e,t){return Cr(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function S5(e,t){let n=Cr(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ie(e,()=>e.shaderSource(n,t)),Ie(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function A5(e,t){let n=Cr(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ie(e,()=>e.shaderSource(n,t)),Ie(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw C5(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var F5=/ERROR: [0-9]+:([0-9]+):/g;function C5(e,t){let n=F5.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let a=+n[1],r=e.split(`
`),s=r.length.toString().length+2,i=r.map((p,d)=>I.rightPad((d+1).toString(),s)+p),o=0;for(let p=0;p<i.length;p++)o=Math.max(i[p].length,o);let l=i.slice(0,a-1),u=i.slice(a-1,a),c=i.slice(a);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${I.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function _5(e){return Cr(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function E5(e,t){if(Ie(e,()=>e.linkProgram(t)),e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Hv(e,t){if(Ie(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function $5(e,t){let n=Cr(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Ie(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Ie(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function D5(e,t){let n=Cr(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Ie(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),Ie(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function M5(e){return Cr(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function R5(e,t){let n=Z().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let a=`[${e}x${t}]`;throw new Error("Requested texture size "+a+" is invalid.")}if(e>n||t>n){let a=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+r+".")}}function P5(e){return Cr(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function q2(e,t,n,a,r,s,i){let o=e.getAttribLocation(t,n);return o===-1?!1:(Ie(e,()=>e.bindBuffer(e.ARRAY_BUFFER,a)),Ie(e,()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,s,i)),Ie(e,()=>e.enableVertexAttribArray(o)),!0)}function L5(e,t,n){O5(e,n),Ie(e,()=>e.activeTexture(e.TEXTURE0+n)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function z5(e,t,n){return Cr(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function W5(e,t,n){return e.getUniformLocation(t,n)}function B5(e,t,n,a){Ie(e,()=>L5(e,t,a)),Ie(e,()=>e.uniform1i(n,a))}function jv(e,t,n){Ie(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),Ie(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function X2(e,t){Ie(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),Ie(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Hm(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+V5(e,t))}function V5(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Cr(e,t,n){let a=Ie(e,()=>t());if(a==null)throw new Error(n);return a}function O5(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n){let r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function mu(e,t=2){return I.sizeFromShape(e.slice(0,e.length-t))}function fu(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function qv(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[mu(e),...fu(e)]),t}function U5(e,t=!1){let n=Z().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,e=e.map((r,s)=>s>=e.length-2?I.nearestLargerEven(e[s]):e[s]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=I.squeezeShape(e).newShape);let a=I.sizeFromShape(e);if(e.length<=1&&a<=n)return[1,a];if(e.length===2&&e[0]<=n&&e[1]<=n)return e;if(e.length===3&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let r=mu(e),s=2,i=2;return e.length&&([s,i]=fu(e)),a=r*(s/2)*(i/2),I.sizeToSquarishShape(a).map(o=>o*2)}return I.sizeToSquarishShape(a)}function jm(e){return e%2==0}function qm(e,t){if(e=e.slice(-2),t=t.slice(-2),I.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],a=t.slice(-1)[0];if(n===a||jm(n)&&jm(a)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&jm(e[0])&&jm(t[0])}var Xv,Kv;function G5(e){if(Xv==null){let t=sr(e);Xv=t.getParameter(t.MAX_TEXTURE_SIZE)}return Xv}function H5(e){if(Kv==null){let t=sr(e);Kv=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Kv)}function j5(e){if(e===0)return 0;let t,n=sr(e);return va(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:va(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function va(e,t){return e.getExtension(t)!=null}function K2(e){try{if(sr(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function q5(e){if(e===0)return!1;let t=sr(e);if(e===1){if(!va(t,"OES_texture_float"))return!1}else if(!va(t,"EXT_color_buffer_float"))return!1;return Yv(t)}function K5(e){if(e===0)return!1;let t=sr(e);if(e===1){if(!va(t,"OES_texture_float")||!va(t,"WEBGL_color_buffer_float"))return!1}else{if(va(t,"EXT_color_buffer_float"))return Yv(t);let n="EXT_color_buffer_half_float";if(va(t,n)){let a=t.getExtension(n);return X5(t,a)}return!1}return Yv(t)}function Yv(e){let t=Gv(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let a=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,a,r,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),i}function X5(e,t){let n=Gv(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);let r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(i),o}function Y5(e){return e!==2?!1:sr(e).fenceSync!=null}function yp(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&I.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Ce=Z();Ce.registerFlag("HAS_WEBGL",()=>Ce.getNumber("WEBGL_VERSION")>0);Ce.registerFlag("WEBGL_VERSION",()=>K2(2)?2:K2(1)?1:0);Ce.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ce.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ce.get("WEBGL_VERSION")===2);Ce.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ce.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ce.registerFlag("WEBGL_PACK",()=>Ce.getBool("HAS_WEBGL"));Ce.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_PACK_CLIP",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1);Ce.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_PACK_REDUCE",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_CONV_IM2COL",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>G5(Ce.getNumber("WEBGL_VERSION")));Ce.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>H5(Ce.getNumber("WEBGL_VERSION")));Ce.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=Ce.getNumber("WEBGL_VERSION");return e===0?0:j5(e)});Ce.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ce.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Cc.isMobile());Ce.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>q5(Ce.getNumber("WEBGL_VERSION")));Ce.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ce.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ce.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ce.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>K5(Ce.getNumber("WEBGL_VERSION")));Ce.registerFlag("WEBGL_FENCE_API_ENABLED",()=>Y5(Ce.getNumber("WEBGL_VERSION")));Ce.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ce.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ce.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});Ce.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Cc.isMobile()&&Ce.getBool("IS_CHROME")?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});function fn(){let e,t,n,a,r,s,i,o,l,u;return Z().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",a="in",r="texture",s="outputColor",i="out vec4 outputColor;",o=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",a="varying",r="texture2D",s="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function Ji(e,t,n="index"){let a=I.computeStrides(t);return a.map((r,s)=>{let i=`int ${e[s]} = ${n} / ${r}`,o=s===a.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r}`:`index -= ${e[s]} * ${r}`;return`${i}; ${o};`}).join("")}function Jv(e){let t=I.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}var Y2=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,J5=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=mp.DENSE;let t=gp(e),n=fn();this.outputShape=e,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${Ji(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${t[0]}, ${t[1]}));
        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${n.output} = result;
      }
    `}},Q5=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=mp.DENSE;let t=gp(e),n=fn();this.outputShape=e,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${Ji(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${t[0]}, ${t[1]}));
        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${n.output} = result;
      }
    `}},Z5=class{constructor(e){this.variableNames=["A"],this.outTexUsage=aa.DOWNLOAD;let t=fn();this.outputShape=e,this.userCode=`
      ${Y2}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},e8=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=aa.DOWNLOAD;let t=fn();this.outputShape=e,this.userCode=`
      ${Y2}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},t8=class{constructor(e,t,n=!1){this.variableNames=["A"];let a=fn(),[r,s]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`
      ${Jv(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / ${s};
        int c = imod(flatIndex, ${s});
        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${r}.0);
        vec4 values = ${a.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${a.output} = vec4(${i}, 0., 0., 0.);
      }
    `}},n8=class{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let a=fn(),[r,s]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let l=0;l<=1;l++)for(let u=0;u<=1;u++){let c=l*2+u;i+=`
          localCoords = coords;
          if(localCoords[2] + ${u} < ${e[2]}) {
            localCoords[2] += ${u};
            if(localCoords[1] + ${l} < ${e[1]}) {
              localCoords[1] += ${l};

              flatIndex = getFlatIndex(localCoords);
              offset = imod(flatIndex, 4);

              flatIndex = idiv(flatIndex, 4, 1.);

              r = flatIndex / ${s};
              c = imod(flatIndex, ${s});
              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${r}.0);
              values = ${a.texture2D}(A, uv);

              if(offset == 0) {
                result[${c}] = values[0];
              } else if(offset == 1) {
                result[${c}] = values[1];
              } else if(offset == 2) {
                result[${c}] = values[2];
              } else {
                result[${c}] = values[3];
              }
            }
          }
        `}this.userCode=`
      ${Jv(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        vec4 result = vec4(0.);
        int flatIndex, r, c, offset;
        ivec3 localCoords;
        vec2 uv;
        vec4 values;

        ${i}

        ${a.output} = ${o};
      }
    `}};function a8(e){let t=fn(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return S5(e,n)}function r8(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return $5(e,t)}function s8(e){let t=new Uint16Array([0,1,2,2,1,3]);return D5(e,t)}function bp(e,t,n,a,r,s){R5(t,n);let i=M5(e),o=e.TEXTURE_2D;return Ie(e,()=>e.bindTexture(o,i)),Ie(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),Ie(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),Ie(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),Ie(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),Ie(e,()=>e.texImage2D(o,0,a,t,n,0,r,s,null)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,null)),i}function J2(e){return e.internalFormatFloat}function i8(e,t,n,a){let[r,s]=fp(t,n);return bp(e,r,s,J2(a),a.textureFormatFloat,e.FLOAT)}function Q2(e){return e.internalFormatHalfFloat}function o8(e,t,n,a){let[r,s]=fp(t,n);return bp(e,r,s,Q2(a),a.textureFormatFloat,a.textureTypeHalfFloat)}function Z2(e){return e.downloadTextureFormat}function l8(e,t,n,a){let[r,s]=fp(t,n);return bp(e,r,s,Z2(a),e.RGBA,e.UNSIGNED_BYTE)}function eT(e){return e.internalFormatPackedFloat}function u8(e,t,n,a){let[r,s]=hu(t,n);return bp(e,r,s,eT(a),e.RGBA,e.FLOAT)}function tT(e){return e.internalFormatPackedHalfFloat}function c8(e,t,n,a){let[r,s]=hu(t,n);return bp(e,r,s,tT(a),e.RGBA,a.textureTypeHalfFloat)}function p8(e,t,n){let a=0,r=3*4,s=3*4+2*4;return Ie(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),q2(e,t,"clipSpacePos",n,3,s,a)&&q2(e,t,"uv",n,2,s,r)}function d8(e,t,n,a,r,s){Ie(e,()=>e.bindTexture(e.TEXTURE_2D,t));let i,o,l;r instanceof Uint8Array?(i=new Uint8Array(n*a*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*a*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(r),Ie(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,a,0,e.RGBA,o,i)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function h8(e,t,n){Ie(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?Ie(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):Ie(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function m8(e,t,n,a){let r=e.createBuffer();Ie(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let s=4*4*t*n;return Ie(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),Ie(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),Ie(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function f8(e,t,n){let a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}function g8(e,t,n,a){let[r,s]=fp(t,n),i=4,o=new Uint8Array(x5(t*n,i));return Ie(e,()=>e.readPixels(0,0,r,s,a.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function y8(e,t,n,a,r,s,i,o){let l=e,u=new Float32Array(v5(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function b8(e,t,n){let a=new Float32Array(t*n*4);return Ie(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a)),a}var v8=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=Z().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,g5(t,e)):this.gl=sr(t);let n="WEBGL_color_buffer_float",a="EXT_color_buffer_half_float";if(Z().getNumber("WEBGL_VERSION")===1){let r="OES_texture_float",s="OES_texture_half_float";if(this.textureFloatExtension=Gm(this.gl,r),va(this.gl,s))this.textureHalfFloatExtension=Gm(this.gl,s);else if(Z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),va(this.gl,a))this.colorBufferHalfFloatExtension=Gm(this.gl,a);else if(Z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",va(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(va(this.gl,a))this.colorBufferHalfFloatExtension=this.gl.getExtension(a);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=r8(this.gl),this.indexBuffer=s8(this.gl),this.framebuffer=P5(this.gl),this.textureConfig=Gv(this.gl,this.textureHalfFloatExtension)}get debug(){return Z().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;Ie(e,()=>e.finish()),Ie(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Ie(e,()=>e.deleteFramebuffer(this.framebuffer)),Ie(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Ie(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Ie(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),i8(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),o8(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),l8(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),h8(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),d8(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),c8(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),u8(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(X2(this.gl,this.framebuffer),this.outputTexture=null),Ie(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>g8(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,a,r,s){return y8(this.gl,e,t,n,a,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return f8(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let a=m8(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Z().getBool("WEBGL_FENCE_API_ENABLED")){let a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let s=a.clientWaitSync(r,0,0);return s===a.ALREADY_SIGNALED||s===a.CONDITION_SATISFIED},t=r}else Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>b8(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl,n=A5(t,e),a=a8(t),r=_5(t);return Ie(t,()=>t.attachShader(r,a)),Ie(t,()=>t.attachShader(r,n)),E5(t,r),this.debug&&Hv(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=p8(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&Ie(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Hv(this.gl,this.program),Ie(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?z5(this.gl,e,t):W5(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Ie(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),B5(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[a,r]=hu(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Hv(this.gl,this.program),Hm(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),Ie(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ie(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Gm(this.gl,Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,a=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(a.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await I.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,a=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),a=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=x8(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&I.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),jv(this.gl,e,this.framebuffer),this.debug&&Hm(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(jv(this.gl,this.outputTexture,this.framebuffer),this.debug&&Hm(this.gl)):X2(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let a=this.gl;jv(a,e,this.framebuffer),this.debug&&Hm(a),this.outputTexture=e,Ie(a,()=>a.viewport(0,0,t,n)),Ie(a,()=>a.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),Ie(this.gl,()=>this.gl.scissor(e,t,n,a))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function x8(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{getBroadcastDims:nT}=E;function F8(e,t,n,a){let r=[];e.forEach(h=>{let m=I.sizeFromShape(h.shapeInfo.logicalShape);h.shapeInfo.isUniform?r.push(`uniform float ${h.name}${m>1?`[${m}]`:""};`):(r.push(`uniform sampler2D ${h.name};`),r.push(`uniform int offset${h.name};`))});let s=r.join(`
`),i=e.map(h=>w8(h,t,a)).join(`
`),o=t.texShape,l=fn(),u=N8(l),c,p,d=C8(l);return t.isPacked?(c=k8(t.logicalShape,o),p=S8(l)):(c=I8(t.logicalShape,o),p=T8(l)),a&&(d+=A8),[d,u,p,s,c,i,n].join(`
`)}function gu(e){let t=e.shapeInfo.logicalShape;switch(t.length){case 0:return _8(e);case 1:return E8(e);case 2:return $8(e);case 3:return D8(e);case 4:return M8(e);case 5:return R8(e);case 6:return P8(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function aT(e){switch(e.shapeInfo.logicalShape.length){case 0:return O8(e);case 1:return L8(e);case 2:return z8(e);case 3:return W8(e);default:return B8(e)}}function w8(e,t,n=!1){let a="";n?a+=aT(e):a+=gu(e);let r=e.shapeInfo.logicalShape,s=t.logicalShape;return r.length<=s.length&&(n?a+=V8(e,t):a+=U8(e,t)),a}function k8(e,t){switch(e.length){case 0:return rT();case 1:return G8(e,t);case 2:return q8(e,t);case 3:return H8(e,t);default:return j8(e,t)}}function I8(e,t){switch(e.length){case 0:return rT();case 1:return X8(e,t);case 2:return Z8(e,t);case 3:return K8(e,t);case 4:return Y8(e,t);case 5:return J8(e,t);case 6:return Q8(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function N8(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function T8(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function S8(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function C8(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${eX}
    ${tX}
    ${nX}
  `}var eX=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,tX=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,nX=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,A8=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function rT(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function G8(e,t){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return n[0]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function X8(e,t){return t[0]===1?`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function H8(e,t){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),r=a*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}function K8(e,t){let n=Ji(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function j8(e,t){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),r=a*Math.ceil(e[e.length-2]/2),s=r,i="",o="b, r, c";for(let l=2;l<e.length-1;l++)s*=e[e.length-l-1],i=`
      int b${l} = index / ${s};
      index -= b${l} * ${s};
    `+i,o=`b${l}, `+o;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${i}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${e.length}(${o});
    }
  `}function Y8(e,t){let n=Ji(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function J8(e,t){let n=Ji(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Q8(e,t){let n=Ji(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function q8(e,t){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(I.arraysEqual(e,t))return`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let a=Math.ceil(e[1]/2);return`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}function Z8(e,t){return I.arraysEqual(e,t)?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function Qi(e){return`offset${e}`}function O8(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=fn();return`
    vec4 ${n}() {
      return ${a.texture2D}(${t}, halfCR);
    }
  `}function _8(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;let[a,r]=e.shapeInfo.texShape;if(a===1&&r===1)return`
      float ${n}() {
        return sampleTexture(${t}, halfCR);
      }
    `;let[s,i]=e.shapeInfo.texShape,o=Qi(t);return`
    float ${n}() {
      vec2 uv = uvFromFlat(${s}, ${i}, ${o});
      return sampleTexture(${t}, uv);
    }
  `}function L8(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=e.shapeInfo.texShape,r=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],s=fn();return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${r[0]}, ${r[1]}, index);
      return ${s.texture2D}(${t}, uv);
    }
  `}function E8(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${yu(e)}
      }
    `;let a=e.shapeInfo.texShape,r=a[0],s=a[1];if(s===1&&r===1)return`
      float ${n}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;let i=Qi(t);return s===1?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${r}.0);
        return sampleTexture(${t}, uv);
      }
    `:r===1?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${s}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${r}, ${s}, index + ${i});
      return sampleTexture(${t}, uv);
    }
  `}function z8(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=r[0],i=r[1],o=fn();if(r!=null&&I.arraysEqual(t,r))return`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${s}.0);

        return ${o.texture2D}(${n}, uv);
      }
    `;let l=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],u=Math.ceil(t[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${l[0]}, ${l[1]}, row, col);
      return ${o.texture2D}(${n}, uv);
    }
  `}function $8(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape;if(r!=null&&I.arraysEqual(t,r)){let p=r[0],d=r[1];return`
    float ${a}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${d}.0, ${p}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:s,keptDims:i}=I.squeezeShape(t),o=s;if(o.length<t.length){let p=bu(e,o),d=["row","col"];return`
      ${gu(p)}
      float ${a}(int row, int col) {
        return ${a}(${xu(d,i)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${yu(e)}
      }
    `;let l=r[0],u=r[1],c=Qi(n);return u===1?`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${n}, uv);
    }
  `:l===1?`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:`
  float ${a}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${c};
    vec2 uv = uvFromFlat(${l}, ${u}, index);
    return sampleTexture(${n}, uv);
  }
`}function W8(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(t[0]===1){let p=t.slice(1),d=[1,2],h=bu(e,p),m=["b","row","col"];return`
        ${aT(h)}
        vec4 ${a}(int b, int row, int col) {
          return ${a}(${xu(m,d)});
        }
      `}let i=s[0],o=s[1],l=Math.ceil(t[2]/2),u=l*Math.ceil(t[1]/2),c=fn();return`
    vec4 ${a}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${i}, ${o}, ${u}, ${l}, b, row, col);
      return ${c.texture2D}(${n}, uv);
    }
  `}function D8(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[1]*t[2],s=t[2],{newShape:i,keptDims:o}=I.squeezeShape(t),l=i;if(l.length<t.length){let m=bu(e,l),f=["row","col","depth"];return`
        ${gu(m)}
        float ${a}(int row, int col, int depth) {
          return ${a}(${xu(f,o)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${s}, 1)));
        ${yu(e)}
      }
    `;let u=e.shapeInfo.texShape,c=u[0],p=u[1],d=e.shapeInfo.flatOffset;if(p===r&&d==null)return`
        float ${a}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${s}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${c}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(p===s&&d==null)return`
    float ${a}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `;let h=Qi(n);return`
      float ${a}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${s} + depth + ${h};
        vec2 uv = uvFromFlat(${c}, ${p}, index);
        return sampleTexture(${n}, uv);
      }
  `}function B8(e){let t=e.shapeInfo.logicalShape,n=t.length,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=i[0],l=i[1],u=Math.ceil(t[n-1]/2),c=u*Math.ceil(t[n-2]/2),p="int b, int row, int col",d=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let m=2;m<n-1;m++)p=`int b${m}, `+p,c*=t[n-m-1],d=`b${m} * ${c} + `+d;let h=fn();return`
    vec4 ${r}(${p}) {
      int index = ${d};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});
      return ${h.texture2D}(${a}, uv);
    }
  `}function M8(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[3],s=t[2]*r,i=t[1]*s,{newShape:o,keptDims:l}=I.squeezeShape(t);if(o.length<t.length){let m=bu(e,o),f=["row","col","depth","depth2"];return`
      ${gu(m)}
      float ${a}(int row, int col, int depth, int depth2) {
        return ${a}(${xu(f,l)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${s}, ${r}, 1)));
        ${yu(e)}
      }
    `;let u=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,p=c[0],d=c[1];if(d===i&&u==null)return`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${s}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(d===r&&u==null)return`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;let h=Qi(n);return`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${s} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${p}, ${d}, index + ${h});
      return sampleTexture(${n}, uv);
    }
  `}function R8(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],s=t[3]*r,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=I.squeezeShape(t);if(l.length<t.length){let f=bu(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${gu(f)}
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        return ${a}(${xu(g,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${s}, ${r})) +
          depth3;
        ${yu(e)}
      }
    `;let c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1];if(h===o&&c==null)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(h===r&&c==null)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=Qi(n);return`
    float ${a}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${s} +
          depth2 * ${r} + depth3 + ${m};
      vec2 uv = uvFromFlat(${d}, ${h}, index);
      return sampleTexture(${n}, uv);
    }
  `}function P8(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:s}=I.squeezeShape(t);if(r.length<t.length){let g=bu(e,r),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${gu(g)}
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${a}(${xu(y,s)});
      }
    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${yu(e)}
      }
    `;let p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],m=d[1];if(m===c&&p==null)return`
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(m===i&&p==null)return`
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=Qi(n);return`
    float ${a}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${f};
      vec2 uv = uvFromFlat(${h}, ${m}, index);
      return sampleTexture(${n}, uv);
    }
  `}function yu(e){let t=e.name,n=I.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function V8(e,t){let n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=nT(e.shapeInfo.logicalShape,t.logicalShape),l=ht(i),u=i-s,c,p=["x","y","z","w","u","v"];s===0?c="":i<2&&o.length>=1?c="coords = 0;":c=o.map(g=>`coords.${p[g+u]} = 0;`).join(`
`);let d="";i<2&&s>0?d="coords":d=e.shapeInfo.logicalShape.map((g,y)=>`coords.${p[y+u]}`).join(", ");let h="return outputValue;",m=I.sizeFromShape(e.shapeInfo.logicalShape)===1,f=I.sizeFromShape(t.logicalShape)===1;if(s===1&&!m&&!f)h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!f)i===1?h=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:h=`
        return vec4(outputValue.x);
      `;else if(o.length){let g=s-2,y=s-1;o.indexOf(g)>-1&&o.indexOf(y)>-1?h="return vec4(outputValue.x);":o.indexOf(g)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(y)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${a}(${d});
      ${h}
    }
  `}function U8(e,t){let n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&e.shapeInfo.flatOffset==null&&I.arraysEqual(i,s))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let u=ht(l),c=nT(e.shapeInfo.logicalShape,t.logicalShape),p=l-o,d,h=["x","y","z","w","u","v"];o===0?d="":l<2&&c.length>=1?d="coords = 0;":d=c.map(f=>`coords.${h[f+p]} = 0;`).join(`
`);let m="";return l<2&&o>0?m="coords":m=e.shapeInfo.logicalShape.map((f,g)=>`coords.${h[g+p]}`).join(", "),`
    float ${r}() {
      ${u} coords = getOutputCoords();
      ${d}
      return get${a}(${m});
    }
  `}function ht(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function bu(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function xu(e,t){return t.map(n=>e[n]).join(", ")}function aX(e,t,n,a){let r=t.userCode,s=n.map((h,m)=>{let f={logicalShape:h.shape,texShape:h.isUniform?null:h.texData.texShape,isUniform:h.isUniform,isPacked:h.isUniform?!1:h.texData.isPacked,flatOffset:null};return h.texData!=null&&h.texData.slice!=null&&h.texData.slice.flatOffset>0&&(f.flatOffset=h.texData.slice.flatOffset),{name:t.variableNames[m],shapeInfo:f}}),i=s.map(h=>h.shapeInfo),o={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},l=F8(s,o,r,t.packedInputs),u=e.createProgram(l),c=null,p=e.getUniformLocation(u,"NAN",!1);Z().getNumber("WEBGL_VERSION")===1&&(c=e.getUniformLocation(u,"INFINITY",!1));let d={};for(let h=0;h<t.variableNames.length;h++){let m=t.variableNames[h],f=!1;d[m]=e.getUniformLocation(u,m,f),d[`offset${m}`]=e.getUniformLocation(u,`offset${m}`,f)}return{program:t,source:l,webGLProgram:u,uniformLocations:d,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:p}}function sT(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,a)=>{let r=n.logicalShape,s=t[a],i=s.shape;if(!I.arraysEqual(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(n.isUniform&&s.isUniform)return;let o=n.texShape,l=s.isUniform?null:s.texData.texShape;if(!I.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function rX(e,t,n,a,r){sT(t.inShapeInfos,n),sT([t.outShapeInfo],[a]);let s=a.texData.texture,i=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(s,i[0],i[1]):e.setOutputMatrixTexture(s,i[0],i[1]),e.setProgram(t.webGLProgram),Z().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,Infinity),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((o,l)=>{let u=t.program.variableNames[l],c=t.uniformLocations[u],p=t.uniformLocations[`offset${u}`];if(c!=null){if(o.isUniform){if(I.sizeFromShape(o.shape)<2)e.gl.uniform1f(c,o.uniformValues[0]);else{let d=o.uniformValues;d instanceof Float32Array||(d=new Float32Array(d)),e.gl.uniform1fv(c,d)}return}o.texData.slice!=null&&p!=null&&e.gl.uniform1i(p,o.texData.slice.flatOffset),e.setInputMatrixTexture(o.texData.texture,c,l)}}),r!=null&&r(e,t.webGLProgram),e.executeProgram()}function sX(e,t,n){let a="";t.concat(n).forEach(i=>{let o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0,l=i.isUniform?"uniform":i.texData.texShape;a+=`${i.shape}_${l}_${o}`});let r=e.userCode,s=e.constructor.name;return s+="_"+a+"_"+r,s}var{addImpl:iX,bincountImpl:iT,bincountReduceImpl:oX,ceilImpl:lX,concatImpl:uX,expImpl:cX,expm1Impl:pX,floorImpl:dX,gatherV2Impl:hX,greaterImpl:mX,lessImpl:fX,linSpaceImpl:gX,logImpl:yX,maxImpl:bX,maximumImpl:xX,minimumImpl:vX,multiplyImpl:wX,negImpl:kX,prodImpl:IX,rangeImpl:NX,rsqrtImpl:TX,simpleAbsImpl:oT,sliceImpl:SX,stridedSliceImpl:CX,subImpl:AX,tileImpl:FX,topKImpl:_X,transposeImpl:Qv,uniqueImpl:EX}=e2;function lT(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function gn(e,t){return t===1?[e]:lT(e,t)}function $X(e,t){if(e===1)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}var PX=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;let t=e.length;if(t===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let n=gn("rc",t),a=ht(t),r=DX(t,e,n),s=MX(t,e[e.length-1],e[e.length-2],n),i=RX(e,n);this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${i}));
          }
        }
      `}}};function OX(e,t){let n=[];for(let a=0;a<=1;a++)for(let r=0;r<=1;r++){let s=`${a===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let i=2;i<e;i++)s=`${t[t.length-1-i]},`+s;n.push(s)}return n}function DX(e,t,n){if(e===1)return`rc > ${t[0]}`;let a="";for(let r=e-2;r<e;r++)a+=`${n[r]} >= ${t[r]}`,r<e-1&&(a+="||");return a}function MX(e,t,n,a){if(e===1)return"";let r=a.slice(-2);return`
    int r = ${r[0]};
    int c = ${r[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${t};
    bool rEdge = rp1 >= ${n};
  `}function RX(e,t){let n=e.length,a=OX(n,t);return n===1?`getA(rc),
            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${a[0]}),
          cEdge ? 0. : getA(${a[1]}),
          rEdge ? 0. : getA(${a[2]}),
          rEdge || cEdge ? 0. : getA(${a[3]})`}var uT=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let a=0;a<4;a++){let r="thisRC = rc;";a%2==1&&(r+="thisRC.z += 1;"),a>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${a}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${a>0?"}":""}
      `}this.userCode=`
      ${LX(t)}
      ${Jv(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${e[1]};
        int cols = ${e[2]};

        ${n}

        setOutput(result);
      }
    `}};function LX(e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${Ji(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var zX=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let a=pT(t,n),r=dT(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let s=cT(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let o=this.freeTextures[r].shift();return this.usedTextures[r].push(o),o}let i;return a===sn.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===sn.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===sn.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===sn.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===sn.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,a){if(this.freeTextures==null)return;let r=pT(n,a),s=dT(t,r,a);s in this.freeTextures||(this.freeTextures[s]=[]);let i=cT(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),o=Z().get("WEBGL_DELETE_TEXTURE_THRESHOLD");o!==-1&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function WX(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F||t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}function cT(e,t,n,a,r){let s=BX(t,a),i;if(r){let[l,u]=hu(e[0],e[1]);i=l*u}else{let[l,u]=fp(e[0],e[1]);i=l*u}let o=WX(n,s);return i*o}function BX(e,t){switch(e){case sn.PACKED_2X2_FLOAT32:return eT(t);case sn.PACKED_2X2_FLOAT16:return tT(t);case sn.UNPACKED_FLOAT32:return J2(t);case sn.UNPACKED_FLOAT16:return Q2(t);case sn.PACKED_4X1_UNSIGNED_BYTE:return Z2(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function VX(e){return Z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?sn.PACKED_2X2_FLOAT32:sn.UNPACKED_FLOAT32:e?sn.PACKED_2X2_FLOAT16:sn.UNPACKED_FLOAT16}function pT(e,t){if(e===aa.UPLOAD)return sn.PACKED_2X2_FLOAT32;if(e===aa.RENDER||e==null)return VX(t);if(e===aa.DOWNLOAD||e===aa.PIXELS)return sn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function dT(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var gs=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Pa="if (isnan(x)) return x;",UX="return x;",hT="return abs(x);",GX="return (x >= 0.0) ? x : (exp(x) - 1.0);",HX=Pa+`
  return (x < 0.0) ? 0.0 : x;
`,jX=Pa+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Xm="return x;",qX="return x;",XX=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,KX=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,YX=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,vu=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},JX=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;let t=e.length,n=gn("rc",t),a=ht(t),r=$X(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${a} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}},QX=Qa.whereImpl,ZX=1e-7,eK=1e-4,Zv={};function tK(e){return e in Zv||(Zv[e]={}),Zv[e]}var nK=128,aK=600;function rK(){return Z().global.screen==null?1024:Z().global.screen.height*Z().global.screen.width*window.devicePixelRatio*aK/1024/1024}var ew=class extends Zu{constructor(e){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Z().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(e==null){let t=sr(Z().getNumber("WEBGL_VERSION"));this.binaryCache=tK(Z().getNumber("WEBGL_VERSION")),this.gpgpu=new v8(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new zX(this.gpgpu),this.numMBBeforeWarning=rK(),this.texData=new kd(this,Ha())}nextDataId(){return ew.nextDataId++}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((Z().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Z().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:aa.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,a,r){if(Z().getBool("DEBUG")&&this.checkNumericalProblems(t),a==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:aa.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:s,shape:i,isPacked:o}=t;if(s!=null){let p;o?p=new vu(i,Xm):p=new gs(i,Xm);let d=this.runWebGLProgram(p,[{dataId:e,shape:i,dtype:a}],a),h=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),h}if(n!=null)return this.convertAndCacheOnCPU(e);if(a==="string")return n;let l=this.activeTimers!=null,u;l&&(u=I.now());let c;if(a==="complex64"){let p=this.readSync(r.real.dataId),d=this.readSync(r.imag.dataId);c=E.mergeRealAndImagArrays(p,d)}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=I.now()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(m=>h.push(m))}let t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(r!=null){let h;o?h=new vu(a,Xm):h=new gs(a,Xm);let m=this.runWebGLProgram(h,[{dataId:e,shape:a,dtype:s}],s),f=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),f}if(n!=null)return this.convertAndCacheOnCPU(e);if(!Z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&Z().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,u;if(s!=="complex64"&&Z().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);let h=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(h.texture,...gp(a))}this.pendingRead.set(e,[]),s!=="complex64"&&await this.gpgpu.createAndWaitForFence();let c;if(s==="complex64"){let h=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),m=h[0],f=h[1];c=E.mergeRealAndImagArrays(m,f)}else if(l==null)c=this.getValuesFromTexture(e);else{let h=I.sizeFromShape(a);c=this.gpgpu.downloadFloat32MatrixFromBuffer(l,h)}u!=null&&this.disposeIntermediateTensorInfo(u);let p=this.convertAndCacheOnCPU(e,c),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(h=>h(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ha().removeDataId(e,this),this.pendingDeletes--),p}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(a=>I.decodeString(a))}catch(a){throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!T5(n))throw Z().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=I.sizeFromShape(t);if(Z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let p=this.decode(e),d=this.texData.get(p.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(d.texture,...gp(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(p),h}let s=Z().getBool("WEBGL_PACK")&&a===!0,i=s?qv(t):t,o=s?new e8(i):new Z5(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){let t=this.activeTimers,n=[],a=!1;this.programTimersStack==null?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=I.flatten(this.activeTimers.map(o=>o.query)).filter(o=>o!=null),s=I.flatten(this.activeTimers.map(o=>o.name)).filter(o=>o!=null);this.activeTimers=t,a&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let o=await Promise.all(r);i.kernelMs=I.sum(o),i.getExtraProfileInfo=()=>o.map((l,u)=>({name:s[u],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:I.now(),endMs:null}}endTimer(e){return Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=I.now(),e)}async getQueryTime(e){if(Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:a,usage:r,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),t!=null&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return Z().getBool("WEBGL_CPU_FORWARD")?(this.cpuBackend==null&&(this.cpuBackend=Ha().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=nK){let n=this.getCPUBackend();return!Z().getBool("IS_TEST")&&!this.warnedAboutCPUBackend&&n==null&&(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),n!=null&&e.every(a=>this.texData.get(a.dataId).texture==null&&I.sizeFromShape(a.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){E.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return QX(e.shape,t)}packedUnaryOp(e,t,n){let a=new vu(e.shape,t),r=this.compileAndRun(a,[e],n);return Ha().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let a=oT(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,a)}if(Z().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,hT,e.dtype);let t=new gs(e.shape,hT),n=this.compileAndRun(t,[e]);return Ha().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let a;if(t==="string"&&n!=null&&n.length>0&&I.isString(n[0])){let r=n.map(s=>I.encodeString(s));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:a}=this.makeTensorInfo(e,t,n);return Ha().makeTensorFromDataId(a,e,t,this)}unpackTensor(e){let t=new JX(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new PX(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[mu(e.shape),...fu(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[mu(t),...fu(t)],s=new uT(r,n),i=!0,o=this.runWebGLProgram(s,[a],e.dtype,null,i);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e){let t=this.texData.get(e),{isPacked:n,shape:a,dtype:r}=t,s=qv(a),i;n?i=new Q5(s):i=new J5(s);let o=!0,l=this.runWebGLProgram(i,[{shape:s,dtype:r,dataId:e}],r,null,o);return{dtype:r,shape:a,dataId:l.dataId}}runWebGLProgram(e,t,n,a,r=!1){let s=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(s.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===mp.DENSE){let f=gp(e.outputShape);i.texShape=f.map(g=>g*2)}if(e.outTexUsage!=null&&(i.usage=e.outTexUsage),I.sizeFromShape(s.shape)===0)return i.values=I.getTypedArrayFromDType(s.dtype,0),s;let o=[],l=t.map(f=>{if(f.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let g=this.texData.get(f.dataId);if(g.texture==null){if(!e.packedInputs&&I.sizeFromShape(f.shape)<=Z().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:f.shape,texData:null,isUniform:!0,uniformValues:g.values};e.packedInputs&&(g.isPacked=!0,g.shape=f.shape)}else if(!!g.isPacked!=!!e.packedInputs)f=g.isPacked?this.unpackTensor(f):this.packTensor(f),o.push(f),g=this.texData.get(f.dataId);else if(g.isPacked&&!qm(g.shape,f.shape)){let y=f,b=f.shape;f.shape=g.shape,f=this.packedReshape(f,b),o.push(f),g=this.texData.get(f.dataId),y.shape=b}return this.uploadToGPU(f.dataId),{shape:f.shape,texData:g,isUniform:!1}});this.uploadToGPU(s.dataId);let u={shape:s.shape,texData:i,isUniform:!1},c=sX(e,l,u),p=this.getAndSaveBinary(c,()=>aX(this.gpgpu,e,l,u)),d=this.activeTimers!=null,h;d&&(h=this.startTimer()),rX(this.gpgpu,p,l,u,a),o.forEach(f=>this.disposeIntermediateTensorInfo(f)),d&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));let m=Z().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let f=I.now();f-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=f)}if(!Z().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&r===!1){let f=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),f}return s}compileAndRun(e,t,n,a,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Z().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=M(()=>{if(!Z().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Z().getBool("DEBUG");Z().set("DEBUG",!1);let t=this.abs(ce(1e-8)).dataSync()[0];if(Z().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?ZX:eK}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:s,usage:i,isPacked:o}=t;if(s!=null)return;let l=this.activeTimers!=null,u;l&&(u=I.now());let c=t.texShape;if(c==null&&(c=U5(n,o),t.texShape=c),r!=null){let p=qv(n),d,h=c[1],m=c[0],f=r instanceof Uint8Array;o?([h,m]=hu(c[0],c[1]),d=new n8(p,[m,h],f)):d=new t8(p,[m,h],f);let g=this.makeTensorInfo([m,h],a);f?this.texData.get(g.dataId).usage=aa.PIXELS:this.texData.get(g.dataId).usage=aa.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(g.dataId),h,m,r);let y=!0,b=this.runWebGLProgram(d,[g],a,null,y),x=this.texData.get(b.dataId);t.texture=x.texture,t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,this.disposeIntermediateTensorInfo(g),this.texData.delete(b.dataId),t.values=null,l&&(this.uploadWaitMs+=I.now()-u)}else{let p=this.acquireTexture(c,i,a,o);t.texture=p}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:a}=n;return this.releaseGPUData(e),t!=null&&(n.values=sK(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*I.bytesPerElement(t)}};ew.nextDataId=0;function sK(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let a=0;a<n.length;++a)n[a]=Math.round(e[a]);return n}else throw new Error(`Unknown dtype ${t}`)}var iK="3.3.0";Cc.isBrowser()&&fh("webgl",()=>new ew,2);var mT=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,wu=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=E.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},Km=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,xp=class{constructor(e,t,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=E.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length,s="";if(a)if(r===0||I.sizeFromShape(this.outputShape)===1)s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(s=`
          ${ht(r)} coords = getOutputCoords();
        `,r===1)s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=gn("coords",r);s+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}};function Gn(e){let{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}var oK={kernelName:Xs,backendName:"webgl",kernelFunc:Gn};function ys(e){let{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.makeTensorInfo(a.shape,"complex64"),i=n.texData.get(s.dataId),o=Gn({inputs:{x:a},backend:n}),l=Gn({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var lK={kernelName:Ed,backendName:"webgl",kernelFunc:ys},fT="return (a < 0.) ? b * a : a;",gT=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function uK(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a,i=n.makeTensorInfo([],"float32",I.createScalarValue(s,"float32")),o=Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new xp(gT,r.shape,i.shape):new wu(fT,r.shape,i.shape),l=n.runWebGLProgram(o,[r,i],r.dtype);return n.disposeIntermediateTensorInfo(i),l}var cK={kernelName:Ks,backendName:"webgl",kernelFunc:uK},yT="return (a < 0.) ? b * a : a;",bT=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function pK(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new xp(bT,a.shape,r.shape):new wu(yT,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)}var dK={kernelName:oi,backendName:"webgl",kernelFunc:pK},xT="if (isnan(x)) return x;",hK=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,mK=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Xe({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:a}){return({inputs:r,backend:s})=>{let{x:i}=r,o=s,l=a||i.dtype;if(o.shouldExecuteOnCPU([i])&&n!=null){let p=o.texData.get(i.dataId),d=n(p.values,l);return o.makeTensorInfo(i.shape,l,d)}let u=Z().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,c;return u?c=new vu(i.shape,t):c=new gs(i.shape,e),o.runWebGLProgram(c,[i],l)}}function on({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:r,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:u}=i,c=o;if(a&&l.dtype==="complex64"){let m=c.texData.get(l.dataId),f=c.texData.get(u.dataId),[g,y]=[[m.complexTensorInfos.real,f.complexTensorInfos.real],[m.complexTensorInfos.imag,f.complexTensorInfos.imag]].map(x=>{let[v,k]=x,w={dataId:v.dataId,dtype:v.dtype,shape:l.shape},S={dataId:k.dataId,dtype:k.dtype,shape:u.shape},A=new wu(e,l.shape,u.shape);return c.runWebGLProgram(A,[w,S],pa(v.dtype,k.dtype))}),b=ys({inputs:{real:g,imag:y},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(y),b}let p=s||pa(l.dtype,u.dtype);if(c.shouldExecuteOnCPU([l,u])&&r!=null){let m=c.texData.get(l.dataId),f=c.texData.get(u.dataId),[g,y]=r(l.shape,u.shape,m.values,f.values,p),b=c.makeTensorInfo(y,p),x=c.texData.get(b.dataId);return x.values=g,b}let d=Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,h;return d?h=new xp(t,l.shape,u.shape,n):h=new wu(e,l.shape,u.shape),c.runWebGLProgram(h,[l,u],p)}}function Ym(e,t=!1){if(e==="linear")return t?qX:UX;if(e==="relu")return t?KX:HX;if(e==="elu")return t?XX:GX;if(e==="relu6")return t?YX:jX;if(e==="prelu")return t?bT:yT;if(e==="leakyrelu")return t?gT:fT;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var vT=class{constructor(e,t,n,a=!1,r=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;let u=a?e[1]:e[2],c=Math.ceil(u/2),p=a?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",h=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],f="",g="";i&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:f=`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${f}

      const float sharedDimension = ${c}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${c}; i++) {
          int batchA = ${b};
          int batchB = ${x};
          vec4 a = getMatrixA(batchA, ${p});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${m[0]});
          result += (${h[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},wT={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},kT=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=E.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},IT="return a * b;";function NT(e){let{inputs:t,backend:n}=e,{a,b:r}=t,s=E.upcastType(a.dtype,r.dtype);if(a.dtype==="complex64"){let o=n.texData.get(a.dataId),l=n.texData.get(r.dataId),u=new kT(wT.REAL,a.shape,r.shape),c=new kT(wT.IMAG,a.shape,r.shape),p=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:a.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],d=n.runWebGLProgram(u,p,"float32"),h=n.runWebGLProgram(c,p,"float32"),m=ys({inputs:{real:d,imag:h},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),m}if(n.shouldExecuteOnCPU([a,r])){let o=n.texData.get(a.dataId),l=n.texData.get(r.dataId),[u,c]=wX(a.shape,r.shape,o.values,l.values,s),p=n.makeTensorInfo(c,s),d=n.texData.get(p.dataId);return d.values=u,p}let i;return Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new xp(IT,a.shape,r.shape):i=new wu(IT,a.shape,r.shape),n.runWebGLProgram(i,[a,r],s)}var fK={kernelName:ai,backendName:"webgl",kernelFunc:NT};function gK(e,t,n){let a=[mu(e.shape),...fu(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},s=[mu(t),...fu(t)],i=new uT(s,a),o=!0,l=n.runWebGLProgram(i,[r],e.dtype,null,o);return{dataId:l.dataId,shape:t,dtype:l.dtype}}function ye(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,i=n,o=I.sizeFromShape(r.shape),l=I.inferFromImplicitShape(s,o),u=I.sizeFromShape(l);I.assert(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let c=i.texData.get(r.dataId);return c.isPacked&&!qm(r.shape,l)&&!(c.texture!==null&&qm(c.shape,l))?gK(r,l,i):(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}var yK={kernelName:vl,backendName:"webgl",kernelFunc:ye},TT=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let i=Math.floor(n/4)*4,o=n%4,l="sumValue += dot(values, ones);";if(t!=null){let c=1/t;l=`sumValue += dot(values * ${I.isInt(c)?c.toPrecision(2):c}, ones);`}let u="";r%n>0&&(u=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${o===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${o===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${o===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},bK=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let i="0.0",o="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",o="min"):t==="max"&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let u=Math.floor(n/4)*4,c=n%4,p=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
      }
    `,d="vec4";t==="all"?(i="1.0",p=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):t==="any"&&(i="0.0",p=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${u};
        if (${c===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${c===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${c===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${p}
        }
        setOutput(${l});
      }
    `}};function xK(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],a=E.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}function Zi(e,t,n,a){let r=xK(e.shape),s=e;for(let i=0;i<r.length;i++){let{inSize:o,windowSize:l,outSize:u}=r[i],c,p;n==="mean"?c=i===0?new TT({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new TT({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):c=new bK({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),p=s,s=a.runWebGLProgram(c,[s],t),p.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(p)}return s}var wK=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;let a=ht(this.rank),r=vK(t);this.userCode=`
    void main() {
      ${a} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function vK(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let r=0;r<e.length;r++)a[e[r]]=n[r];return a.join()}var kK=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let a=ht(this.rank),r=lT("rc",this.rank),s=new Array(this.rank);for(let u=0;u<t.length;u++)s[t[u]]=r[u];let i=`vec2(${s.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`
    void main() {
      ${a} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${o}) {
        result[1] = ${l};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${o}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function Jm(e,t,n){let a=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kK(e.shape,t):new wK(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function IK(e,t,n,a){let r=t,s=e.shape.length,i=I.parseAxisParam(r,e.shape),o=i,l=E.getAxesPermutation(o,s),u=l!=null,c=e;u&&(c=Jm(e,l,a),o=E.getInnerMostAxes(o.length,s)),E.assertAxesAreInnerMostDims("sum",o,s);let[p,d]=E.computeOutAndReduceShapes(c.shape,o),h=p;n&&(h=E.expandShapeToKeepDim(p,i));let m=I.sizeFromShape(d),f=I.sizeFromShape(e.shape)/m,g=ye({inputs:{x:c},attrs:{shape:[f,m]},backend:a}),y=uh(e.dtype),b=Zi(g,y,"sum",a),x=ye({inputs:{x:b},attrs:{shape:h},backend:a});return a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(b),u&&a.disposeIntermediateTensorInfo(c),x}function tw(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;return IK(r,s,i,n)}var NK={kernelName:yi,backendName:"webgl",kernelFunc:tw};function En(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:s}=a,i=n,o=r.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=r.shape[s[c]];let u;if(i.shouldExecuteOnCPU([r])){let c=i.texData.get(r.dataId).values,p=Qv(c,r.shape,r.dtype,s,l);u=i.makeTensorInfo(l,r.dtype);let d=i.texData.get(u.dataId);d.values=p}else u=Jm(r,s,i);return u}var TK={kernelName:ki,backendName:"webgl",kernelFunc:En},ST=1e3;function Qm({a:e,b:t,transposeA:n,transposeB:a,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,c=t.shape.length,p=n?e.shape[u-2]:e.shape[u-1],d=a?t.shape[c-1]:t.shape[c-2],h=n?e.shape[u-1]:e.shape[u-2],m=a?t.shape[c-2]:t.shape[c-1],f=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=I.sizeFromShape(f),b=I.sizeFromShape(g),x=y===b||y===1||b===1;I.assert(u>=2&&c>=2&&x,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${g}).`);let v=(y>b?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([h,m]);I.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`);let k=n?[y,p,h]:[y,h,p],w=a?[b,m,d]:[b,d,m],S=ye({inputs:{x:e},backend:r,attrs:{shape:k}}),A=ye({inputs:{x:t},backend:r,attrs:{shape:w}}),F=[S,A],D=Math.max(y,b),R=n?S.shape[1]:S.shape[2],L=s!=null,W=i!=null,U=l==="leakyrelu",G=l!=null?Ym(l,!0):null,X=L||W||U||G!=null,j;if((h===1||m===1)&&R>ST&&X===!1){let Q=S,se=A;n&&(Q=En({inputs:{x:S},backend:r,attrs:{perm:[0,2,1]}}),F.push(Q)),a&&(se=En({inputs:{x:A},backend:r,attrs:{perm:[0,2,1]}}),F.push(se));let ne=m!==1,ie=m===1,ee=Q;ne&&(ee=ye({inputs:{x:Q},backend:r,attrs:{shape:[D,R,1]}}),F.push(ee));let de=m===1?2:1,oe=se;ie&&(oe=ye({inputs:{x:se},backend:r,attrs:{shape:[D,1,R]}}),F.push(oe));let ge=NT({inputs:{a:ee,b:oe},backend:r});j=tw({inputs:{x:ge},backend:r,attrs:{axis:de,keepDims:!0}}),F.push(ge)}else{let Q=pa(e.dtype,t.dtype),se=new vT(k,w,[D,h,m],n,a,L,G,W,U),ne=[S,A];if(s!=null&&ne.push(s),W&&ne.push(i),U){let ie=r.makeTensorInfo([],"float32",I.createScalarValue(o,"float32"));ne.push(ie),F.push(ie)}j=r.runWebGLProgram(se,ne,Q)}let te=ye({inputs:{x:j},backend:r,attrs:{shape:v}});F.push(j);for(let Q of F)r.disposeIntermediateTensorInfo(Q);return te}function SK(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=a;return Qm({a:r,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:c})}var CK={kernelName:Ii,backendName:"webgl",kernelFunc:SK},CT="return abs(x);";function AK(e){let{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&a.dtype!=="complex64"){let s=n.texData.get(a.dataId),i=oT(s.values);return n.makeTensorInfo(a.shape,a.dtype,i)}let r;return Z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new vu(a.shape,CT):r=new gs(a.shape,CT),n.runWebGLProgram(r,[a],a.dtype)}var FK={kernelName:Po,backendName:"webgl",kernelFunc:AK},_K=Pa+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,EK=Xe({opSnippet:_K}),$K={kernelName:Oo,backendName:"webgl",kernelFunc:EK},DK=Pa+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,MK=Xe({opSnippet:DK}),RK={kernelName:Lo,backendName:"webgl",kernelFunc:MK},AT="return a + b;",PK=on({opSnippet:AT,packedOpSnippet:AT,supportsComplex:!0,cpuKernelImpl:iX}),OK={kernelName:Hr,backendName:"webgl",kernelFunc:PK},LK=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,s)=>`T${s}`);let n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});let a=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${a};
        setOutput(result);
      }
    `}},zK=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,s)=>`T${s}`);let n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});let a=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${a};
        setOutput(result);
      }
    `}};function Zm(e){let{inputs:t,backend:n}=e,a=t;if(a.length===1)return Gn({inputs:{x:a[0]},backend:n});if(a.length>Z().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let o=Math.floor(a.length/2),l=Zm({inputs:a.slice(0,o),backend:n}),u=Zm({inputs:a.slice(o),backend:n});return Zm({inputs:[l,u],backend:n})}let r=a.map(o=>o.dtype).reduce((o,l)=>pa(o,l)),s=a.map(o=>o.shape),i=Z().getBool("WEBGL_PACK")?new zK(a[0].shape,s):new LK(a[0].shape,s);return n.runWebGLProgram(i,a,r)}var WK={kernelName:Es,backendName:"webgl",kernelFunc:Zm};function BK(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=I.parseAxisParam(s,r.shape),u=l,c=E.getAxesPermutation(u,o),p=r;c!=null&&(p=En({inputs:{x:r},backend:n,attrs:{perm:c}}),u=E.getInnerMostAxes(u.length,o)),E.assertAxesAreInnerMostDims("all",u,o);let[d,h]=E.computeOutAndReduceShapes(p.shape,u),m=I.sizeFromShape(h),f=ye({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}}),g=Zi(f,f.dtype,"all",n),y;if(i){let b=E.expandShapeToKeepDim(d,l);y=ye({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=ye({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(p),y}var VK={kernelName:Sd,backendName:"webgl",kernelFunc:BK};function UK(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=I.parseAxisParam(s,r.shape),u=l,c=E.getAxesPermutation(u,o),p=r;c!=null&&(p=En({inputs:{x:r},backend:n,attrs:{perm:c}}),u=E.getInnerMostAxes(u.length,o)),E.assertAxesAreInnerMostDims("any",u,o);let[d,h]=E.computeOutAndReduceShapes(p.shape,u),m=I.sizeFromShape(h),f=ye({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}}),g=Zi(f,f.dtype,"any",n),y;if(i){let b=E.expandShapeToKeepDim(d,l);y=ye({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=ye({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(p),y}var GK={kernelName:Cd,backendName:"webgl",kernelFunc:UK},HK=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:a,batchSize:r,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];let i=t==="max"?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${a}; i++) {
          int inIdx = ${o};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},jK=class{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,I.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let r=e[e.length-1],s=Math.ceil(r/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");let i=this.outputShape,o=i.length,l=ht(o),u=gn("coords",o),c,p;if(s===1){p=o+1;let S=ht(p);c=`
        ${S} sourceLocR = ${S}(${u.join()}, 0);
        ++${u[o-1]};
        ${S} sourceLocG = ${S}(${u.join()}, 0);
        ++${u[o-2]};
        ${S} sourceLocA = ${S}(${u.join()}, 0);
        --${u[o-1]};
        ${S} sourceLocB = ${S}(${u.join()}, 0);
        --${u[o-2]};`}else p=o,c=`
        ${l} sourceLocR = coords;
        ++${u[o-1]};
        ${l} sourceLocG = coords;
        ++${u[o-2]};
        ${l} sourceLocA = coords;
        --${u[o-1]};
        ${l} sourceLocB = coords;
        --${u[o-2]};`;let d=["x","y","z","w","u","v"].slice(0,p),h="."+d[p-1],m=d.map(S=>"int "+S),f=gn("sourceLocR",p-1).concat("inIdx.r"),g=gn("sourceLocG",p-1).concat("inIdx.g"),y=gn("sourceLocB",p-1).concat("inIdx.b"),b=gn("sourceLocA",p-1).concat("inIdx.a"),x=n==="max"?"greaterThan":"lessThan",v=a?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${f.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()})));`,k=`vec4(
            getAChannel(${f.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,w=a?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${w}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};
        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};
        ${c}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${k};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${k};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function FT(e,t,n,a=null){let r=t.shape[0],s=t.shape[1];a!=null&&(r=a.shape[0],s=a.shape[1]);let i=E.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:r,outSize:Math.ceil(s/i)},l=new HK(o,n,a==null),u=[t];a!=null&&u.push(a);let c=e.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;let p=FT(e,t,n,c);return e.disposeIntermediateTensorInfo(c),p}function _T(e,t,n,a=null){let r=a!=null?a.shape:t.shape,s=r[r.length-1],i=E.computeOptimalWindowSize(s),o=new jK(r,i,n,a==null),l=a==null?[t]:[t,a],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let c=_T(e,t,n,u);return e.disposeIntermediateTensorInfo(u),c}return u}function ET(e,t,n,a){let r=[n];if(E.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!Z().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],[i,o]=E.computeOutAndReduceShapes(t.shape,r),l=I.sizeFromShape(o),u=ye({inputs:{x:t},backend:e,attrs:{shape:[-1,l]}});s.push(u);let c=FT(e,u,a);s.push(c);let p=ye({inputs:{x:c},backend:e,attrs:{shape:i}});return s.forEach(d=>e.disposeIntermediateTensorInfo(d)),p}return _T(e,t,a)}function qK(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a,i=I.parseAxisParam(s,r.shape),o=E.getAxesPermutation(i,r.shape.length),l=r,u=[];o!=null&&(l=En({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=E.getInnerMostAxes(i.length,l.shape.length)),E.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let c=ET(n,l,i[0],"max");return u.forEach(p=>n.disposeIntermediateTensorInfo(p)),c}var XK={kernelName:$s,backendName:"webgl",kernelFunc:qK};function KK(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a,i=I.parseAxisParam(s,r.shape),o=E.getAxesPermutation(i,r.shape.length),l=r,u=[];o!=null&&(l=En({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=E.getInnerMostAxes(i.length,l.shape.length)),E.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let c=ET(n,l,i[0],"min");return u.forEach(p=>n.disposeIntermediateTensorInfo(p)),c}var YK={kernelName:nc,backendName:"webgl",kernelFunc:KK},JK=Pa+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,QK=Xe({opSnippet:JK}),ZK={kernelName:zo,backendName:"webgl",kernelFunc:QK},e7=Pa+"return log(x + sqrt(x * x + 1.0));",t7=Xe({opSnippet:e7}),n7={kernelName:Wo,backendName:"webgl",kernelFunc:t7},a7=Pa+`
  return atan(x);
`,r7=Xe({opSnippet:a7}),s7={kernelName:Bo,backendName:"webgl",kernelFunc:r7},i7=hK+`
  return atan(a, b);
`,o7=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+mK+`
  return result;
`,l7=on({opSnippet:i7,packedOpSnippet:o7}),u7={kernelName:Uo,backendName:"webgl",kernelFunc:l7},c7=Pa+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,p7=Xe({opSnippet:c7}),d7={kernelName:Vo,backendName:"webgl",kernelFunc:p7},vp=class{constructor(e,t,n,a=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let m=t==="avg",f=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(m||(y="-1.0 / 1e-20"),n){let S=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${d}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${c};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${S} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${a?r?f:g:`wR * ${p} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(x="avgValue / count");let v=Math.floor(s/4)*4,k=s%4,w=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${d}, ${h});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${c};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${w}
          }

          int xC = xCCorner + ${v};
          if (${k===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${w}
          } else if (${k===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${w}
          } else if (${k===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${w}
          }
        }
        setOutput(${x});
      }
    `}},nw=class{constructor(e,t,n,a=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b=t==="avg",x="0.0";if(b||(x="-1.0 / 1e-20"),n){let F=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${l});
        const ivec3 pads = ivec3(${f}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${c}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${p}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${F} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${a?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let v="max",k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(k="avgValue / count");let w=Math.floor(s/4)*4,S=s%4,A=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${l});
      const ivec3 pads = ivec3(${f}, ${g}, ${y});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${w}; wC += 4) {
              int xC = xCCorner + wC * ${p};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                getValue(batch, xD, xR, xC + 3 * ${p}, ch)
              );

              ${A}
            }

            int xC = xCCorner + ${w};
            if (${S===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${A}
            } else if (${S===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                initializationValue,
                initializationValue
              );

              ${A}
            } else if (${S===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                initializationValue
              );

              ${A}
            }
          }
          setOutput(${k});
        }
      }
    `}};function h7(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;yp(r,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a,u=1;I.assert(E.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=E.computePool2DInfo(r.shape,s,i,u,o,l);if(c.filterWidth===1&&c.filterHeight===1&&I.arraysEqual(c.inShape,c.outShape))return Gn({inputs:{x:r},backend:n});let p=new vp(c,"avg",!1);return n.runWebGLProgram(p,[r],"float32")}var m7={kernelName:Ds,backendName:"webgl",kernelFunc:h7};function f7(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=a,c=[1,1,1],p=E.computePool3DInfo(r.shape,s,i,c,o,l,u),d=new nw(p,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}var g7={kernelName:ac,backendName:"webgl",kernelFunc:f7},y7=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,p=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${c});
      const float avgMultiplier = float(${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},b7=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=c-1-e.padInfo.front,m=p-1-e.padInfo.top,f=d-1-e.padInfo.left,g=1/(t*n*a);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${m}, ${f});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function x7(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=a,p=[1,1,1],d=E.computePool3DInfo(i.shape,o,l,p,u,c),h=new b7(d);return n.runWebGLProgram(h,[r],i.dtype)}var v7={kernelName:Fd,backendName:"webgl",kernelFunc:x7};function w7(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;yp([r,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=a,c=E.computePool2DInfo(i.shape,o,l,1,u),p=new y7(c);return n.runWebGLProgram(p,[r],i.dtype)}var k7={kernelName:Ad,backendName:"webgl",kernelFunc:w7};function I7(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;return Qm({a:r,b:s,transposeA:i,transposeB:o,backend:n})}var N7={kernelName:Ms,backendName:"webgl",kernelFunc:I7},T7=class{constructor(e,t,n,a,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],E.assertAndGetBroadcastShape(e,t),E.assertAndGetBroadcastShape(e,n);let i="0.0";a!=null&&(E.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";r!=null&&(E.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},S7=class{constructor(e,t,n,a,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],E.assertAndGetBroadcastShape(e,t),E.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";a!=null&&(E.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";r!=null&&(E.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}},C7=({inputs:e,backend:t,attrs:n})=>{let{x:a,mean:r,variance:s,offset:i,scale:o}=e;I.assert(r.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),I.assert(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),I.assert(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);let u=[a,r,s],c=null;i!=null&&(c=i.shape,u.push(i));let p=null;o!=null&&(p=o.shape,u.push(o));let d=Z().getBool("WEBGL_PACK_NORMALIZATION")?new S7(a.shape,r.shape,s.shape,c,p,l):new T7(a.shape,r.shape,s.shape,c,p,l);return t.runWebGLProgram(d,u,u[0].dtype)},A7={kernelName:js,backendName:"webgl",kernelFunc:C7},_7=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=ht(this.rank),n=`uniform int start[${this.rank}];`,a=F7(this.rank),r,s=e.map((i,o)=>`sourceLoc.${aw[o]} = start[${o}] + coords.${aw[o]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      ${n}
      void main() {
        ${r}
        setOutput(getSource(${a}));
      }
    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{this.startLoc==null&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),this.startLoc==null)||t.gl.uniform1iv(this.startLoc,e)}}},aw=["x","y","z","w","u","v"];function F7(e){if(e===1)return"sourceLoc";if(e<=6)return aw.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var E7=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;let t=ht(this.rank),n=gn("coords",this.rank),a=gn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${a.slice(-2).join()})`,s=`getChannel(getSource(${a.join()}), ${r})`,i=`
      result.x = ${s};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${a[this.rank-1]};
        result.y = ${s};
        --${a[this.rank-1]};
      }
    `,o=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${a[this.rank-2]};
        result.z = ${s};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${a[this.rank-1]};
          result.w = ${s};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((u,c)=>`start[${c}]`).join()});`:e.map((u,c)=>`${a[c]} = ${n[c]} + start[${c}];`).join(`
`);this.userCode=`
      uniform int start[${this.rank}];
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{this.startLoc==null&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),this.startLoc==null)||t.gl.uniform1iv(this.startLoc,e)}}};function $7(e,t,n,a){let r=a.texData.get(e.dataId),s=a.makeTensorInfo(n,e.dtype),i=a.texData.get(s.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=dn.computeFlatOffset(t,I.computeStrides(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};let l=a.dataRefCount.get(i.slice.origDataId)||1;return a.dataRefCount.set(i.slice.origDataId,l+1),s}function wp(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a,[o,l]=dn.parseSliceParams(r,s,i);if(dn.assertParamsValid(r,o,l),I.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){let p=n.texData.get(r.dataId),d=SX(p.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,d)}let{isPacked:u}=n.texData.get(r.dataId),c=dn.isSliceContinous(r.shape,o,l);if(u||!c){let p=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new E7(l):new _7(l),d=p.getCustomSetupFunc(o);return n.runWebGLProgram(p,[r],r.dtype,d)}return n.uploadToGPU(r.dataId),$7(r,o,l,n)}var D7={kernelName:Nl,backendName:"webgl",kernelFunc:wp},M7=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;I.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((b,x)=>b*x),l=E.getReshaped(r.shape,s,o),u=E.getPermuted(l.length,s.length),c=E.getReshapedPermuted(r.shape,s,o),p=E.getSliceBeginCoords(i,s.length),d=E.getSliceSize(c,i,s.length),h=[],m=ye({inputs:{x:r},backend:n,attrs:{shape:l}}),f=En({inputs:{x:m},backend:n,attrs:{perm:u}}),g=ye({inputs:{x:f},backend:n,attrs:{shape:c}}),y=wp({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return h.push(m),h.push(f),h.push(g),h.forEach(b=>n.disposeIntermediateTensorInfo(b)),y},R7={kernelName:rc,backendName:"webgl",kernelFunc:M7};function P7(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i}=a,o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=iT(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}var O7={kernelName:_d,backendName:"webgl",kernelFunc:P7},L7="return float(a != b);",$T=on({opSnippet:L7,dtype:"bool"}),z7={kernelName:dl,backendName:"webgl",kernelFunc:$T};function kp(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.texData.get(a.dataId);return Gn({inputs:{x:r.complexTensorInfos.real},backend:n})}var W7={kernelName:Jd,backendName:"webgl",kernelFunc:kp},B7="return float(int(x));";function V7(e,t){let n=new gs(e.shape,B7),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}function rw(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:s}=a;if(s==="complex64"){if(r.dtype==="complex64")return Gn({inputs:{x:r},backend:n});let i=vt(r.shape),o=rw({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=ys({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeIntermediateTensorInfo(o),l}if(r.dtype==="complex64"){let i=kp({inputs:{input:r},backend:n}),o=rw({inputs:{x:i},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(i),o}if(!I.hasEncodingLoss(r.dtype,s)){let i=Gn({inputs:{x:r},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32")return V7(r,n);if(s==="bool"){let i=n.makeTensorInfo([],"bool",I.getTypedArrayFromDType("bool",1)),o=$T({inputs:{a:r,b:i},backend:n});return n.disposeIntermediateTensorInfo(i),o}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${s}`)}var U7={kernelName:Rs,backendName:"webgl",kernelFunc:rw},DT="return ceil(x);",G7=Xe({opSnippet:DT,packedOpSnippet:DT,cpuKernelImpl:lX}),H7={kernelName:Ps,backendName:"webgl",kernelFunc:G7},j7=class{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}getCustomSetupFunc(e,t){return(n,a)=>{this.minLoc==null&&(this.minLoc=n.getUniformLocationNoThrow(a,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(a,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}},q7=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}getCustomSetupFunc(e,t){return(n,a)=>{this.minLoc==null&&(this.minLoc=n.getUniformLocationNoThrow(a,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(a,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}};function X7(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=a,o;Z().getBool("WEBGL_PACK_CLIP")?o=new q7(r.shape):o=new j7(r.shape);let l=o.getCustomSetupFunc(s,i);return n.runWebGLProgram(o,[r],r.dtype,l)}var K7={kernelName:jr,backendName:"webgl",kernelFunc:X7},Y7=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function MT(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function J7(e){let{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),s=new Y7(a.shape),i=[MT(a,r.complexTensorInfos.real),MT(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}var Q7={kernelName:sc,backendName:"webgl",kernelFunc:J7},Z7=class{constructor(e){this.outputShape=[],this.outputShape=E.computeOutShape(e,1),this.variableNames=e.map((s,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){let i=t[s-1];n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${i}));`)}let a=t.length,r=t[t.length-1];n.push(`else setOutput(getT${a}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},eY=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=E.computeOutShape(e,t);let n=this.outputShape,a=n.length,r=ht(a),s=gn("coords",a),i=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map((m,f)=>`T${f}`);let o=new Array(e.length-1);o[0]=e[0][t];for(let m=1;m<o.length;m++)o[m]=o[m-1]+e[m][t];let l=i[t],u=i.slice(-2),c=i.join(),p=`if (${l} < ${o[0]}) {
        return getChannel(
            getT0(${c}), vec2(${u.join()}));
        }`;for(let m=1;m<o.length;m++){let f=o[m-1];p+=`
        if (${l} < ${o[m]}  && ${l} >= ${o[m-1]}) {
          return getChannel(
            getT${m}(${ef(i,l,f)}),
            vec2(${ef(u,l,f)}));
        }`}let d=o.length,h=o[o.length-1];p+=`
        return getChannel(
          getT${d}(${ef(i,l,h)}),
          vec2(${ef(u,l,h)}));`,this.userCode=`
      float getValue(${i.map(m=>"int "+m)}) {
        ${p}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[a-1]} = ${s[a-1]} + 1;
        if (${s[a-1]} < ${n[a-1]}) {
          result.g = getValue(${s});
        }

        ${s[a-2]} = ${s[a-2]} + 1;
        if (${s[a-2]} < ${n[a-2]}) {
          result.a = getValue(${s});
        }

        ${s[a-1]} = ${s[a-1]} - 1;
        if (${s[a-2]} < ${n[a-2]} &&
            ${s[a-1]} < ${n[a-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}};function ef(e,t,n){let a=e.indexOf(t);return e.map((r,s)=>s===a?`${r} - ${n}`:r).join()}function tf(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.texData.get(a.dataId);return Gn({inputs:{x:r.complexTensorInfos.imag},backend:n})}var tY={kernelName:Gd,backendName:"webgl",kernelFunc:tf};function ku(e,t,n){let a=e[0].dtype;if(a==="complex64"){let u=e.map(m=>kp({inputs:{input:m},backend:n})),c=e.map(m=>tf({inputs:{input:m},backend:n})),p=ku(u,t,n),d=ku(c,t,n),h=ys({inputs:{real:p,imag:d},backend:n});return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),c.forEach(m=>n.disposeIntermediateTensorInfo(m)),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),h}if(a==="string"){let{tensors2D:u,outShape:c}=RT(e,t,n),p=u.map(g=>({vals:n.readSync(g.dataId),shape:g.shape})),d=u[0].shape[0]===1,h=uX(p,c,a,d),m=E.computeOutShape(e.map(g=>g.shape),t),f=n.makeTensorInfo(m,a,h);return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),f}if(e.length>Z().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(e.length/2),c=ku(e.slice(0,u),t,n),p=ku(e.slice(u),t,n),d=ku([c,p],t,n);return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),d}if(Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let u=new eY(e.map(c=>c.shape),t);return n.runWebGLProgram(u,e,a)}let{tensors2D:r,outShape:s}=RT(e,t,n),i=new Z7(r.map(u=>u.shape)),o=n.runWebGLProgram(i,r,a);r.forEach(u=>n.disposeIntermediateTensorInfo(u));let l=ye({inputs:{x:o},attrs:{shape:s},backend:n});return n.disposeIntermediateTensorInfo(o),l}function RT(e,t,n){let a=E.computeOutShape(e.map(r=>r.shape),t);return{tensors2D:e.map(r=>ye({inputs:{x:r},attrs:{shape:[-1,I.sizeFromShape(r.shape.slice(t))]},backend:n})),outShape:a}}function PT(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=I.parseAxisParam(r,t[0].shape)[0],i=E.computeOutShape(t.map(u=>u.shape),s);if(I.sizeFromShape(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(u=>I.sizeFromShape(u.shape)>0);if(o.length===1)return Gn({inputs:{x:o[0]},backend:n});let l=o.map(u=>u.shape);return E.assertParamsConsistent(l,s),ku(o,s,n)}var nY={kernelName:Go,backendName:"webgl",kernelFunc:PT},OT=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,h=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,f=e.dataFormat==="channelsLast",g=f?1:2,y=f?2:3,b=f?3:1,x="",v="";n&&(a?x=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?x=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:x=`
          float activation(float x) {
            ${n}
          }
        `,v="result = activation(result);");let k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${b}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${c};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${f}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${f}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${f}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${f}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${k}
        ${v}
        setOutput(result);
      }
    `}},aY=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,p=e.filterHeight,d=e.filterWidth,h=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${s}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${a});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${c}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},rY=class{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let{filterWidth:a,inChannels:r,strideWidth:s,strideHeight:i,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:p}=n,{left:d,top:h}=o,m=r*a,f=fn(),g=p==="channelsLast",y=g?0:1,b=g?1:2,x="";for(let v=0;v<=1;v++)for(let k=0;k<=1;k++)x+=`
          blockIndex = rc.y + ${k};
          pos = rc.x + ${v};

          if(blockIndex < ${e[1]} && pos < ${e[0]}) {
            offsetY = int(blockIndex / (${l})) * ${i} - ${h};
            d0 = offsetY + ${c} * (pos / ${m});

            if(d0 < ${t[y]} && d0 >= 0) {

              offsetX = int(mod(float(blockIndex), ${l}.) * ${s}. - ${d}.);
              d1 = offsetX + ${u} * (int(mod(float(pos), ${m}.) / ${r}.));

              if(d1 < ${t[b]} && d1 >= 0) {

                ch = int(mod(float(pos), ${r}.));

                if (${g}) {
                  innerDims = vec2(d1, ch);
                  result[${v*2+k}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${v*2+k}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${x}

        ${f.output} = result;
      }
    `}};function LT({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=e.shape,u=a.texData.get(e.dataId),c=n.inChannels,p=l[0]*l[1]*l[2],d=n.outChannels,h=n.dataFormat==="channelsLast",m=!1,f=!1,g,y=[],b=(p===1||d===1)&&c>ST,x=l[2]%2!=0&&!!u.isPacked;if(b||!Z().getBool("WEBGL_LAZILY_UNPACK")||!Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!x){let v=h?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],k=ye({inputs:{x:e},backend:a,attrs:{shape:[1,v,n.inChannels]}}),w=ye({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),S=Qm({a:k,b:w,transposeA:m,transposeB:f,backend:a,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i});g=ye({inputs:{x:S},backend:a,attrs:{shape:n.outShape}}),y.push(k),y.push(w),y.push(S)}else{let v=h?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),k={dataId:e.dataId,shape:[1,v,n.inChannels],dtype:e.dtype},w=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,I.assert(qm(u.shape,k.shape),()=>`packed reshape ${u.shape} to ${k.shape} isn't free`);let S=ye({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(S);let A=Qm({a:k,b:S,backend:a,transposeA:m,transposeB:f,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),F=a.texData.get(A.dataId);I.assert(F.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=w,F.shape=n.outShape,g=Gn({inputs:{x:A},backend:a}),g.shape=n.outShape,y.push(A)}for(let v of y)a.disposeIntermediateTensorInfo(v);return g}function zT({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:c,outWidth:p,outHeight:d,dataFormat:h}=n,m=h==="channelsLast",f=l*u*c,g=d*p,y=[f,g],b=!0,x=!1,v=[],k=ye({inputs:{x:e},backend:a,attrs:{shape:e.shape.slice(1)}}),w=ye({inputs:{x:t},backend:a,attrs:{shape:[1,f,I.sizeFromShape(t.shape)/f]}});v.push(k),v.push(w);let S=new rY(y,k.shape,n),A=a.runWebGLProgram(S,[k],"float32"),F=ye({inputs:{x:A},backend:a,attrs:{shape:[1,y[0],y[1]]}});v.push(A),v.push(F);let D=r!=null,R=s!=null,L=o==="leakyrelu",W=o?Ym(o,!0):null,U=new vT(F.shape,w.shape,[1,g,n.outChannels],b,x,D,W,R,L),G=[F,w];if(r&&G.push(r),R&&G.push(s),L){let Q=a.makeTensorInfo([],"float32",I.createScalarValue(i,"float32"));G.push(Q),v.push(Q)}let X=a.runWebGLProgram(U,G,"float32"),j=m?[1,d,p,n.outChannels]:[1,n.outChannels,d,p],te=ye({inputs:{x:X},backend:a,attrs:{shape:j}});v.push(X);for(let Q of v)a.disposeIntermediateTensorInfo(Q);return te}function sY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=a,p=E.convertConv2DDataFormat(l),d=E.computeConv2DInfo(r.shape,s.shape,i,u,o,c,!1,p),h;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))h=LT({x:r,filter:s,convInfo:d,backend:n});else if(Z().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)h=zT({x:r,filter:s,convInfo:d,backend:n});else{let f=new OT(d);h=n.runWebGLProgram(f,[r,s],"float32")}let m=ye({inputs:{x:h},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(h),m}var iY={kernelName:Os,backendName:"webgl",kernelFunc:sY},oY=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${a};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${s}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},lY=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,c=s?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${c}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},uY=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${a} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},cY=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=a-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${a}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${a} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function pY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=a,p=E.convertConv2DDataFormat(l),d=E.computeConv2DInfo(r.shape,c,i,1,o,u,!1,p),h=new oY(d);return n.runWebGLProgram(h,[r,s],"float32")}var dY={kernelName:$d,backendName:"webgl",kernelFunc:pY};function hY(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=a,p=E.convertConv2DDataFormat(u),d=E.computeConv2DInfo(i,s.shape,o,1,l,c,!1,p),h=new lY(d);return n.runWebGLProgram(h,[r,s],"float32")}var mY={kernelName:Ls,backendName:"webgl",kernelFunc:hY};function fY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a,u=E.computeConv3DInfo(r.shape,s.shape,i,l,o),c=new aY(u);return n.runWebGLProgram(c,[r,s],"float32")}var gY={kernelName:ic,backendName:"webgl",kernelFunc:fY};function yY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:l}=a,u=E.computeConv3DInfo(r.shape,l,i,1,o),c=new uY(u);return n.runWebGLProgram(c,[r,s],"float32")}var bY={kernelName:Dd,backendName:"webgl",kernelFunc:yY};function xY(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:l}=a,u=E.computeConv3DInfo(l,s.shape,o,1,i),c=new cY(u);return n.runWebGLProgram(c,[r,s],"float32")}var vY={kernelName:Md,backendName:"webgl",kernelFunc:xY},wY=xT+`
  return cos(x);
`,kY=Xe({opSnippet:wY}),IY={kernelName:zs,backendName:"webgl",kernelFunc:kY},NY=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,TY=Xe({opSnippet:NY}),SY={kernelName:Ho,backendName:"webgl",kernelFunc:TY},CY=class{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[c,p]=n;this.outputShape=[u,c,p,l];let d=a==="bilinear"?1:0,[h,m]=[`${i-1}.0`,`${o-1}.0`],[f,g,y]=c>1?[`${(i-1)/(c-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[b,x,v]=p>1?[`${(o-1)/(p-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${f});
      const float width_ratio = float(${b});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${x};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},AY=e=>{let{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=a,c=new CY(r.shape,s.shape,o,l,u);return n.runWebGLProgram(c,[r,s,i],"float32")},FY={kernelName:jo,backendName:"webgl",kernelFunc:AY},VT=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;let a=e.length,r=t?"0.0":`getX(${WT(a,"coords")})`,s=e[e.length-1],i="",o="";t?(i=n?`end != ${s-1}`:"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`
      uniform float index;
      void main() {
        ${ht(a)} coords = getOutputCoords();
        int end = ${BT(a,"coords")};
        float val = ${r};
        int pow2 = int(pow(2.0, index));
        if (${i}) {
          int idx = ${o};
          ${BT(a,"coords")} = idx;
          val += getX(${WT(a,"coords")});
        }
        setOutput(val);
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.index==null&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}};function WT(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function BT(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function _Y(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a,l=r.shape.length,u=E.getAxesPermutation([s],l),c=r;u!=null&&(c=En({inputs:{x:r},backend:n,attrs:{perm:u}}));let p=E.getInnerMostAxes(1,l)[0];if(p!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${s}`);let d=c.shape[p],h=Gn({inputs:{x:c},backend:n});for(let m=0;m<=Math.ceil(Math.log2(d))-1;m++){let f=new VT(c.shape,!1,o),g=f.getCustomSetupFunc(m),y=h;h=n.runWebGLProgram(f,[h],h.dtype,g),n.disposeIntermediateTensorInfo(y)}if(i){let m=new VT(c.shape,i,o),f=h;h=n.runWebGLProgram(m,[h],h.dtype),n.disposeIntermediateTensorInfo(f)}if(u!=null){let m=E.getUndoAxesPermutation(u),f=En({inputs:{x:h},backend:n,attrs:{perm:m}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),f}return h}var EY={kernelName:Ws,backendName:"webgl",kernelFunc:_Y};function $Y(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=a;if(r.shape.length===1){let l=n.readSync(r.dataId),u=n.readSync(s.dataId),c=iT(l,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,c)}else if(r.shape.length===2){let l=n.bufferSync(r),u=n.bufferSync(s),c=oX(l,u,i,o);return n.makeTensorInfo(c.shape,s.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var DY={kernelName:Rd,backendName:"webgl",kernelFunc:$Y},MY=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function RY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:i}=a;I.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);let o=r.shape[0],l=i==="NHWC"?r.shape[1]:r.shape[2],u=i==="NHWC"?r.shape[2]:r.shape[3],c=i==="NHWC"?r.shape[3]:r.shape[1],p=l*s,d=u*s,h=c/(s*s),m=i==="NHWC"?[o,p,d,h]:[o,h,p,d],f=new MY(m,s,i);return n.runWebGLProgram(f,[r],r.dtype)}var PY={kernelName:qo,backendName:"webgl",kernelFunc:RY},UT=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,p=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,m=e.filterWidth,f=e.outChannels/e.inChannels,g="",y="";n&&(a?g=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?g=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:g=`
          float activation(float x) {
            ${n}
          }
        `,y="result = activation(result);");let b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${g}

      const ivec2 strides = ivec2(${u}, ${c});
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${f};
        int q = d2 - d1 * ${f};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${p};

          if (xR < 0 || xR >= ${s}) {
            continue;
          }

          for (int wC = 0; wC < ${m}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${i}) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${b}
        ${y}
        setOutput(result);
      }
    `}},GT=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;let s=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,p=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,m=e.filterWidth,f=m,g="int xR; int xC; int xCOffset;";for(let v=0;v<h;v++)for(let k=0;k<m;k++)g+=`
          vec4 xTexelR${v}C${k*2} = vec4(0.);
          vec4 wR${v}C${k} = vec4(0.);
          vec4 xR${v}C${k} = vec4(0.);`;for(let v=0;v<h;v++)for(let k=0;k<f;k++){let w=k*2;if(g+=`
          xR = xRCorner + ${v*p};
          xC = xCCorner + ${w*d};
        `,c===1){if(w<m&&(l%2==1?g+=`
                xCOffset = xC + 1;
                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${v}C${w} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${i}) {
                    xTexelR${v}C${w}.zw = vec2(0.);
                  }
                } else {
                  xTexelR${v}C${w} = vec4(0.);
                }

                xCOffset = xC + 1 - 2;
                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {
                  vec4 previous = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${i}) {
                    previous.zw = vec2(0.);
                  }

                  xR${v}C${w} = vec4(previous.zw, xTexelR${v}C${w}.xy);
                } else {
                  xR${v}C${w} = vec4(0, 0, xTexelR${v}C${w}.xy);
                }
              `:g+=`
                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${i}) {
                  xTexelR${v}C${w} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${v}C${w} = vec4(0.);
                }

                xR${v}C${w} = xTexelR${v}C${w};
              `,w+1<m)){let S=l%2==0?I.nearestLargerEven(d):d;d%2==0&&l%2==1||d%2!=0&&l%2!=1?(g+=`
                  xCOffset = xC + ${l%2} + ${S};

                  if(xR >= 0 && xR < ${s} &&
                    xCOffset >= 0 && xCOffset < ${i}) {
                    xTexelR${v}C${w+2} = getX(batch, xR, xCOffset, d1);
                  }
                `,d>1&&(g+=`
                    xCOffset -= 2;
                    if(xR >= 0 && xR < ${s} &&
                      xCOffset >= 0 && xCOffset < ${i}) {
                      xTexelR${v}C${w} = getX(batch, xR, xCOffset, d1);
                    } else {
                      xTexelR${v}C${w} = vec4(0.);
                    }
                  `),g+=`
                  xR${v}C${w+1} = vec4(
                    xTexelR${v}C${w}.zw, xTexelR${v}C${w+2}.xy);
                `):g+=`
                  xCOffset = xC + ${S};

                  if(xR >= 0 && xR < ${s} &&
                    xCOffset >= 0 && xCOffset < ${i}) {
                    xTexelR${v}C${w+2} = getX(batch, xR, xCOffset, d1);
                  }

                  xR${v}C${w+1} = xTexelR${v}C${w+2};
                `}}else w<m&&(g+=`
              if(xR >= 0 && xR < ${s}) {
            `,l%2==1?(g+=`
                xCOffset = xC + 1 - ${c};
                if(xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${v}C${w} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${v}C${w} = vec4(0.);
                }

                if(xC + 1 >= 0 && xC + 1 < ${i}) {
                  xTexelR${v}C${w+2} = getX(batch, xR, xC + 1, d1);
                } else {
                  xTexelR${v}C${w+2} = vec4(0.);
                }

                xR${v}C${w} = vec4(
                  xTexelR${v}C${w}.zw, xTexelR${v}C${w+2}.zw);
              `,w+1<m&&(g+=`
                  vec4 final = vec4(0.);
                  xCOffset = xC + 1 + ${c};
                  if(xCOffset >= 0 && xCOffset < ${i}) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xR${v}C${w+1} = vec4(xTexelR${v}C${w+2}.xy, final.xy);
                `)):(g+=`
                if(xC >= 0 && xC < ${i}) {
                  xTexelR${v}C${w} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${v}C${w} = vec4(0.);
                }

                xCOffset = xC + ${c};
                if(xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${v}C${w+2} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${v}C${w+2} = vec4(0.);
                }

                xR${v}C${w} = vec4(
                  xTexelR${v}C${w}.xy, xTexelR${v}C${w+2}.xy);
              `,w+1<m&&(g+=`
                  xR${v}C${w+1} = vec4(
                    xTexelR${v}C${w}.zw, xTexelR${v}C${w+2}.zw);
                `)),g+="}");w<m&&(g+=`
            vec4 wTexelR${v}C${w} = getW(${v}, ${w}, d1, q);
            wR${v}C${w} = vec4(wTexelR${v}C${w}.xz, wTexelR${v}C${w}.xz);
          `,w+1<m&&(g+=`
              vec4 wTexelR${v}C${w+1} = getW(${v}, ${w+1}, d1, q);
              wR${v}C${w+1} =
                vec4(wTexelR${v}C${w+1}.xz, wTexelR${v}C${w+1}.xz);`))}for(let v=0;v<h;v++)for(let k=0;k<m;k++)g+=`dotProd += xR${v}C${k} * wR${v}C${k};`;let y="",b="";n&&(a?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:y=`vec4 activation(vec4 x) {
          ${n}
        }`,b="result = activation(result);");let x=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      const ivec2 strides = ivec2(${u}, ${c});
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {

        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2;
        int q = 0;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        vec4 dotProd = vec4(0.);

        ${g}

        vec4 result = dotProd;
        ${x}
        ${b}
        setOutput(result);
      }
    `}};function OY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=a,c=l;c==null&&(c=[1,1]),I.assert(E.eitherStridesOrDilationsAreOne(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let p=E.computeConv2DInfo(r.shape,s.shape,i,c,o,u,!0),d;return Z().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?d=new GT(p):d=new UT(p),n.runWebGLProgram(d,[r,s],"float32")}var LY={kernelName:Bs,backendName:"webgl",kernelFunc:OY},zY=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${a};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},WY=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function BY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=a,p=E.computeConv2DInfo(r.shape,c,i,o,l,u,!0),d=new zY(p);return n.runWebGLProgram(d,[r,s],"float32")}var VY={kernelName:Pd,backendName:"webgl",kernelFunc:BY};function UY(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=a,p=E.computeConv2DInfo(c,s.shape,i,o,l,u,!0),d=new WY(p);return n.runWebGLProgram(d,[r,s],"float32")}var GY={kernelName:Od,backendName:"webgl",kernelFunc:UY},HY=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function jY(e){let{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],s=I.sizeFromShape(a.shape),i=ye({inputs:{x:a},backend:n,attrs:{shape:[s]}}),o=new HY(s),l=n.runWebGLProgram(o,[i],i.dtype),u=ye({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}var qY={kernelName:Ld,backendName:"webgl",kernelFunc:jY},XY=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:p}=a;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${s});
      const ivec2 pads = ivec2(${c}, ${p});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function KY(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a,u=E.computeDilation2DInfo(r.shape,s.shape,i,o,"NHWC",l),c,p=new XY(u);c=n.runWebGLProgram(p,[r,s],"float32");let d=ye({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}var YY={kernelName:oc,backendName:"webgl",kernelFunc:KY},JY="return (x >= 0.0) ? x : (exp(x) - 1.0);",QY=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,ZY=Xe({opSnippet:JY,packedOpSnippet:QY}),e9={kernelName:Xo,backendName:"webgl",kernelFunc:ZY},t9="return (b >= 1.0) ? a : a * (b + 1.0);",n9=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,a9=e=>{let{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new xp(n9,a.shape,r.shape):new wu(t9,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)},r9={kernelName:Bd,backendName:"webgl",kernelFunc:a9},s9=`
  return vec4(equal(a, b));
`,i9="return float(a == b);",o9=on({opSnippet:i9,packedOpSnippet:s9,dtype:"bool"}),l9={kernelName:Yo,backendName:"webgl",kernelFunc:o9},u9=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${E.ERF_P};
  float a1 = ${E.ERF_A1};
  float a2 = ${E.ERF_A2};
  float a3 = ${E.ERF_A3};
  float a4 = ${E.ERF_A4};
  float a5 = ${E.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,c9=Xe({opSnippet:u9}),p9={kernelName:Ko,backendName:"webgl",kernelFunc:c9},HT="return exp(x);",jT=Xe({opSnippet:HT,packedOpSnippet:HT,cpuKernelImpl:cX}),d9={kernelName:Us,backendName:"webgl",kernelFunc:jT};function sw(e){let{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=r;return r<0&&(I.assert(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+r+1),o.splice(l,0,1),ye({inputs:{x:s},backend:a,attrs:{shape:o}})}var h9={kernelName:Jo,backendName:"webgl",kernelFunc:sw},qT="return exp(x) - 1.0;",m9=Xe({opSnippet:qT,packedOpSnippet:qT,cpuKernelImpl:pX}),f9={kernelName:Qo,backendName:"webgl",kernelFunc:m9},XT=class{constructor(e,t,n){this.variableNames=["real","imag"];let a=t[1];this.outputShape=t;let r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${a}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${a});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${a}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function KT(e,t,n){let a=n.texData.get(e.dataId),r=I.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=r/s,o=ye({inputs:{x:e},backend:n,attrs:{shape:[i,s]}}),l=o.shape,u=new XT("real",l,t),c=new XT("imag",l,t),p=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:l},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(u,p,"float32"),h=n.runWebGLProgram(c,p,"float32"),m=ys({inputs:{real:d,imag:h},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h);let f=ye({inputs:{x:m},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(m),f}function g9(e){let{inputs:t,backend:n}=e,{input:a}=t;return KT(a,!1,n)}var y9={kernelName:Vd,backendName:"webgl",kernelFunc:g9},b9=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      uniform float value;
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.valueLoc==null&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}};function iw(e){let{backend:t,attrs:n}=e,{shape:a,value:r}=n,{dtype:s}=n;if(s=s||I.inferDtype(r),s==="string"){let i=I.getArrayFromDType(s,I.sizeFromShape(a));return i.fill(r),t.makeTensorInfo(a,s,i)}else{let i=new b9(a,r),o=i.getCustomSetupFunc(r);return t.runWebGLProgram(i,[],s,o)}}var x9={kernelName:lc,backendName:"webgl",kernelFunc:iw},v9=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},w9={kernelName:Zo,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,a=t,r=new v9(n.shape);return a.runWebGLProgram(r,[n],n.dtype)}},YT="return floor(x);",k9=Xe({opSnippet:YT,packedOpSnippet:YT,cpuKernelImpl:dX}),I9={kernelName:Gs,backendName:"webgl",kernelFunc:k9},N9=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,T9=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,S9=on({opSnippet:N9,packedOpSnippet:T9,dtype:"int32"}),C9={kernelName:Hs,backendName:"webgl",kernelFunc:S9},A9=class{constructor(e){this.variableNames=["A"];let t=fn(),[n,a]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},F9=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=fn(),[n,a]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${a}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},E9={kernelName:ah,backendName:"webgl",kernelFunc:_9},Iu;function _9(e){let{inputs:t,backend:n,attrs:a}=e,{pixels:r}=t,{numChannels:s}=a,i=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,o=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],p=[u,l,s];(o||i)&&(Iu==null&&(Iu=document.createElement("canvas").getContext("2d")),Iu.canvas.width=l,Iu.canvas.height=u,Iu.drawImage(r,0,0,l,u),r=Iu.canvas);let d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=aa.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);let h=Z().getBool("WEBGL_PACK")?new F9(p):new A9(p),m=n.runWebGLProgram(h,[d],"int32");return n.disposeData(d.dataId),m}function $9(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:m}=a,f=E.convertConv2DDataFormat(c),g=E.computeConv2DInfo(r.shape,s.shape,l,p,u,d,!1,f),y,b=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=LT({x:r,filter:s,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:m});else if(Z().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)y=zT({x:r,filter:s,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:m});else{let v=i!=null,k=o!=null,w=h==="leakyrelu",S=h?Ym(h,!1):null,A=new OT(g,v,S,k,w),F=[r,s];if(i&&F.push(i),o&&F.push(o),w){let D=n.makeTensorInfo([],"float32",I.createScalarValue(m,"float32"));F.push(D),b.push(D)}y=n.runWebGLProgram(A,F,"float32")}let x=ye({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach(v=>n.disposeIntermediateTensorInfo(v)),x}var D9={kernelName:Ni,backendName:"webgl",kernelFunc:$9};function M9(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:h}=a,m=[],f=c;f==null&&(f=[1,1]),I.assert(E.eitherStridesOrDilationsAreOne(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);let g=E.computeConv2DInfo(r.shape,s.shape,l,f,u,p,!0),y=Z().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=d?Ym(d,y):null,x=[r,s],v=i!=null,k=o!=null,w=d==="leakyrelu";if(v&&x.push(i),k&&x.push(o),w){let F=n.makeTensorInfo([],"float32",I.createScalarValue(h,"float32"));x.push(F),m.push(F)}let S;y?S=new GT(g,v,b,k,w):S=new UT(g,v,b,k,w);let A=n.runWebGLProgram(S,x,"float32");return m.forEach(F=>n.disposeIntermediateTensorInfo(F)),A}var R9={kernelName:Ti,backendName:"webgl",kernelFunc:M9},P9=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let a=ht(t.length),r=ht(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${a} strides = ${a}(${this.strides});
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${s};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function O9(e){let{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,i=s[s.length-1],[o,l,u,c]=E.prepareAndValidate(a,r),p=ye({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),d=ye({inputs:{x:a},backend:n,attrs:{shape:[I.sizeFromShape(a.shape)/u,u]}}),h=new P9(i,c,[l,u]),m=n.runWebGLProgram(h,[d,p],d.dtype),f=ye({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),f}var L9={kernelName:tl,backendName:"webgl",kernelFunc:O9},W9=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=ht(this.rank),a=z9(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}};function z9(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<e.length;r++)r===2?a.push("int(getIndices(resRC.x, resRC.z))"):a.push(`${n[r]}`);return a.join()}function B9(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=a,l=I.parseAxisParam(i,r.shape)[0],u=E.segment_util.collectGatherOpShapeInfo(r,s,l,o),c=I.sizeFromShape(s.shape),p=[],d=ye({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),h=ye({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(d),p.push(h);let m=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,s])||r.dtype==="string"){let b=n.bufferSync(h),x=n.bufferSync(d),v=hX(x,b,m);return p.forEach(k=>n.disposeIntermediateTensorInfo(k)),n.makeTensorInfo(u.outputShape,v.dtype,v.values)}let f=new W9(d.shape,m),g=n.runWebGLProgram(f,[d,h],d.dtype);p.push(g);let y=ye({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return p.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}var V9={kernelName:el,backendName:"webgl",kernelFunc:B9},U9="return float(a > b);",G9=`
  return vec4(greaterThan(a, b));
`,H9=on({opSnippet:U9,packedOpSnippet:G9,cpuKernelImpl:mX,dtype:"bool"}),j9={kernelName:nl,backendName:"webgl",kernelFunc:H9},q9="return float(a >= b);",X9=`
  return vec4(greaterThanEqual(a, b));
`,K9=on({opSnippet:q9,packedOpSnippet:X9,dtype:"bool"}),Y9={kernelName:qs,backendName:"webgl",kernelFunc:K9};function J9(e){let{inputs:t,backend:n}=e,{input:a}=t;return KT(a,!0,n)}var Q9={kernelName:Ud,backendName:"webgl",kernelFunc:J9},Z9="return float(!isnan(x) && !isinf(x));",eJ=Xe({opSnippet:Z9,dtype:"bool"}),tJ={kernelName:al,backendName:"webgl",kernelFunc:eJ},nJ="return float(isinf(x));",aJ=Xe({opSnippet:nJ,dtype:"bool"}),rJ={kernelName:rl,backendName:"webgl",kernelFunc:aJ},sJ="return float(isnan(x));",iJ=Xe({opSnippet:sJ,dtype:"bool"}),oJ={kernelName:sl,backendName:"webgl",kernelFunc:iJ},lJ="return float(a < b);",uJ=`
  return vec4(lessThan(a, b));
`,cJ=on({opSnippet:lJ,packedOpSnippet:uJ,cpuKernelImpl:fX,dtype:"bool"}),pJ={kernelName:il,backendName:"webgl",kernelFunc:cJ},dJ="return float(a <= b);",hJ=`
  return vec4(lessThanEqual(a, b));
`,mJ=on({opSnippet:dJ,packedOpSnippet:hJ,dtype:"bool"}),fJ={kernelName:ol,backendName:"webgl",kernelFunc:mJ};function gJ(e){let{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,i=gX(a,r,s);return t.makeTensorInfo([i.length],"float32",i)}var yJ={kernelName:Hd,backendName:"webgl",kernelFunc:gJ},bJ=`if (x < 0.0) return NAN;
  return log(x);`,xJ=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,vJ=Xe({opSnippet:bJ,packedOpSnippet:xJ,cpuKernelImpl:yX}),wJ={kernelName:Ys,backendName:"webgl",kernelFunc:vJ},kJ="return log(1.0 + x);",IJ=Xe({opSnippet:kJ}),NJ={kernelName:ll,backendName:"webgl",kernelFunc:IJ},TJ="return float(a >= 1.0 && b >= 1.0);",SJ=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,CJ=on({opSnippet:TJ,packedOpSnippet:SJ,dtype:"bool"}),AJ={kernelName:ul,backendName:"webgl",kernelFunc:CJ},FJ="return float(!(x >= 1.0));",_J=Xe({opSnippet:FJ}),EJ={kernelName:uc,backendName:"webgl",kernelFunc:_J},$J="return float(a >= 1.0 || b >= 1.0);",DJ=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,MJ=on({opSnippet:$J,packedOpSnippet:DJ,dtype:"bool"}),RJ={kernelName:cc,backendName:"webgl",kernelFunc:MJ},PJ=class{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${a}) * sum`;r===.5?o=`inversesqrt(${l})`:r===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${s}; j <= ${s}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${o};
        setOutput(val);
      }
    `}},OJ=class{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${a}) * sum`;r===.5?o=`inversesqrt(${l})`:r===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${s};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${s}; j <= ${s}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${o};
        setOutput(result);
      }
    `}},LJ=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=a,u=Z().getBool("WEBGL_PACK_NORMALIZATION")?new OJ(r.shape,s,i,o,l):new PJ(r.shape,s,i,o,l);return n.runWebGLProgram(u,[r],r.dtype)},zJ={kernelName:pc,backendName:"webgl",kernelFunc:LJ},WJ=class{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${a}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${a})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},BJ=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=a,p=new WJ(r.shape,o,l,u,c);return n.runWebGLProgram(p,[r,s,i],r.dtype)},VJ={kernelName:jd,backendName:"webgl",kernelFunc:BJ};function UJ(e,t,n,a){let r=I.sizeFromShape(t),s=I.sizeFromShape(e.shape)/r,i=ye({inputs:{x:e},attrs:{shape:[s,r]},backend:a}),o=Zi(i,e.dtype,"max",a),l=ye({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),l}function JT(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a,o=r.shape.length,l=I.parseAxisParam(s,r.shape),u=l,c=E.getAxesPermutation(u,o),p=c!=null,d=n.shouldExecuteOnCPU([r]),h=r;if(p){if(d){let b=n.texData.get(h.dataId).values,x=new Array(o);for(let w=0;w<x.length;w++)x[w]=r.shape[c[w]];let v=Qv(b,r.shape,r.dtype,c,x);h=n.makeTensorInfo(x,r.dtype);let k=n.texData.get(h.dataId);k.values=v}else h=Jm(r,c,n);u=E.getInnerMostAxes(u.length,o)}E.assertAxesAreInnerMostDims("max",u,o);let[m,f]=E.computeOutAndReduceShapes(h.shape,u),g=m;i&&(g=E.expandShapeToKeepDim(m,l));let y;if(d){let b=n.texData.get(h.dataId).values,x=bX(b,I.sizeFromShape(f),g,r.dtype);y=n.makeTensorInfo(g,r.dtype);let v=n.texData.get(y.dataId);v.values=x}else y=UJ(h,f,g,n);return p&&n.disposeIntermediateTensorInfo(h),y}var GJ={kernelName:Js,backendName:"webgl",kernelFunc:JT},HJ=mT+`
  return max(a, b);
`,jJ=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Km+`
  return result;
`,qJ=on({opSnippet:HJ,packedOpSnippet:jJ,cpuKernelImpl:xX}),XJ={kernelName:Qs,backendName:"webgl",kernelFunc:qJ};function KJ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;yp(r,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a,u=1;I.assert(E.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=E.computePool2DInfo(r.shape,s,i,u,o,l);if(c.filterWidth===1&&c.filterHeight===1&&I.arraysEqual(c.inShape,c.outShape))return Gn({inputs:{x:r},backend:n});let p=new vp(c,"max",!1);return n.runWebGLProgram(p,[r],r.dtype)}var YJ={kernelName:Zs,backendName:"webgl",kernelFunc:KJ};function JJ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=a,c=[1,1,1],p=E.computePool3DInfo(r.shape,s,i,c,o,u,l),d=new nw(p,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}var QJ={kernelName:dc,backendName:"webgl",kernelFunc:JJ},ZJ=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=s-1-e.padInfo.left,l=r*s-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},eQ=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,p=l-1-e.padInfo.top,d=u-1-e.padInfo.left,h=o*l*u-1;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${p}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function tQ(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=a,p=[1,1,1],d=E.computePool3DInfo(i.shape,o,l,p,u,c),h=new nw(d,"max",!0),m=n.runWebGLProgram(h,[i],i.dtype),f=new eQ(d),g=n.runWebGLProgram(f,[r,m],i.dtype);return n.disposeIntermediateTensorInfo(m),g}var nQ={kernelName:Xd,backendName:"webgl",kernelFunc:tQ};function aQ(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,o=s;yp([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=a,d=E.computePool2DInfo(o.shape,l,u,1,c,p),h=!0,m=new vp(d,"max",h),f=n.runWebGLProgram(m,[o],o.dtype),g=new ZJ(d),y=n.runWebGLProgram(g,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),y}var rQ={kernelName:qd,backendName:"webgl",kernelFunc:aQ};function sQ(e,t,n,a){let r=new vp(n,"max",!1),s=a.runWebGLProgram(r,[e],"float32");r=new vp(n,"max",!0,!0,t);let i=a.runWebGLProgram(r,[e],"float32");return[s,i]}var iQ={kernelName:Kd,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;I.assert(a.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`);let u=[1,1];I.assert(E.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let c=E.computePool2DInfo(a.shape,r,s,u,i),[p,d]=sQ(a,o,c,l);return[p,d]}};function oQ(e,t,n,a){let r=I.sizeFromShape(t),s=I.sizeFromShape(e.shape)/r,i=ye({inputs:{x:e},attrs:{shape:[s,r]},backend:a}),o=Zi(i,"float32","mean",a),l=ye({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),l}var lQ={kernelName:ei,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{keepDims:r,axis:s}=t,i=n,o=a.shape.length,l=I.parseAxisParam(s,a.shape),u=l,c=E.getAxesPermutation(u,o),p=c!=null,d=i.shouldExecuteOnCPU([a]),h=[],m=a;if(p){if(d){let x=i.texData.get(m.dataId).values,v=new Array(o);for(let S=0;S<v.length;S++)v[S]=a.shape[c[S]];let k=Qv(x,a.shape,a.dtype,c,v);m=i.makeTensorInfo(v,a.dtype);let w=i.texData.get(m.dataId);w.values=k}else m=Jm(a,c,i);h.push(m),u=E.getInnerMostAxes(u.length,o)}E.assertAxesAreInnerMostDims("sum",u,o);let[f,g]=E.computeOutAndReduceShapes(m.shape,u),y=f;r&&(y=E.expandShapeToKeepDim(f,l));let b=oQ(m,g,y,i);for(let x of h)i.disposeIntermediateTensorInfo(x);return b}};function uQ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=I.parseAxisParam(s,r.shape),u=l,c=E.getAxesPermutation(u,o),p=r;c!=null&&(p=En({inputs:{x:r},backend:n,attrs:{perm:c}}),u=E.getInnerMostAxes(u.length,r.shape.length)),E.assertAxesAreInnerMostDims("min",u,o);let[d,h]=E.computeOutAndReduceShapes(p.shape,u),m=I.sizeFromShape(h),f=ye({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}}),g=Zi(f,f.dtype,"min",n),y;if(i){let b=E.expandShapeToKeepDim(d,l);y=ye({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=ye({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(p),y}var cQ={kernelName:ti,backendName:"webgl",kernelFunc:uQ},pQ=mT+`
  return min(a, b);
`,dQ=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Km+`
  return result;
`,hQ=on({opSnippet:pQ,packedOpSnippet:dQ,cpuKernelImpl:vX}),mQ={kernelName:ni,backendName:"webgl",kernelFunc:hQ},fQ=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((u,c)=>u[0]+e[c]+u[1]);let a=e.length,r=ht(a),s=t.map(u=>u[0]).join(","),i=t.map((u,c)=>u[0]+e[c]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),l=n==="reflect"?0:1;if(a===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${s});
      ${r} end = ${r}(${i});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${a}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}},gQ=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,m)=>h[0]+e[m]+h[1]);let a=e.length,r=ht(a),s=t.map(h=>h[0]).join(","),i=t.map((h,m)=>h[0]+e[m]).join(","),o=gn("rc",a),l=gn("source",a),u=`${o[a-1]} < ${this.outputShape[a-1]}`,c=a===1?"source":`vec2(${l.slice(-2).join()})`,p=n==="reflect"?0:1,d="";if(a===1){let h=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${p};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${p};
        }
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${c});
        ${o[a-1]} += 1;
        if(${u}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${c});
        }
      `}else{let h=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${p}) +
                gte * ((end - 1) * 2 - source + ${p});
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${c});
        ${o[a-1]} += 1;
        if(${u}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${c});
        }
        rc = outputLoc;
        ${o[a-2]} += 1;
        if(${o[a-2]} < ${this.outputShape[a-2]}) {
          ${h}
          result[2] = getChannel(getX(${l.join()}), ${c});
          ${o[a-1]} += 1;
          if(${u}) {
            ${h}
            result[3] = getChannel(getX(${l.join()}), ${c});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${s});
      const ${r} end = ${r}(${i});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}},yQ=({inputs:e,backend:t,attrs:n})=>{let{x:a}=e,{paddings:r,mode:s}=n,i=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gQ(a.shape,r,s):new fQ(a.shape,r,s);return t.runWebGLProgram(i,[a],a.dtype)},bQ={kernelName:hc,backendName:"webgl",kernelFunc:yQ},xQ=`if (b == 0.0) return NAN;
  return mod(a, b);`,vQ=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+Km+`
  return result;
`,wQ=on({opSnippet:xQ,packedOpSnippet:vQ}),kQ={kernelName:cl,backendName:"webgl",kernelFunc:wQ},IQ=class{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`
      uniform float seed;

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.seedLoc==null&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}},NQ=`
if (a == b) {
  return 1.0;
};
return a / b;`,TQ=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,QT=on({opSnippet:NQ,packedOpSnippet:TQ,checkOutOfBounds:!0}),SQ={kernelName:Vs,backendName:"webgl",kernelFunc:QT},ZT="return a - b;",eS=on({opSnippet:ZT,packedOpSnippet:ZT,supportsComplex:!0,cpuKernelImpl:AX}),CQ={kernelName:vi,backendName:"webgl",kernelFunc:eS};function tS(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=I.parseAxisParam([s],r.shape),o=JT({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=E.expandShapeToKeepDim(o.shape,i),u=ye({inputs:{x:o},backend:n,attrs:{shape:l}}),c=eS({inputs:{a:r,b:u},backend:n}),p=jT({inputs:{x:c},backend:n}),d=tw({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),h=ye({inputs:{x:d},backend:n,attrs:{shape:l}}),m=QT({inputs:{a:p,b:h},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),m}var AQ={kernelName:bi,backendName:"webgl",kernelFunc:tS};function FQ(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=a,l=o?r:tS({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],p=new IQ(u,c,s),d=p.getCustomSetupFunc(i),h=n.runWebGLProgram(p,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),h}var _Q={kernelName:Yd,backendName:"webgl",kernelFunc:FQ},nS="return -x;";function EQ(e){let{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){let s=n.texData.get(a.dataId),[i,o]=kX(s.values,a.shape,a.dtype);return n.makeTensorInfo(o,a.dtype,i)}let r;return Z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new vu(a.shape,nS):r=new gs(a.shape,nS),n.runWebGLProgram(r,[a],a.dtype)}var $Q={kernelName:pl,backendName:"webgl",kernelFunc:EQ},DQ=Qa.nonMaxSuppressionV3Impl;function MQ(e){E.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=a,u=n.readSync(r.dataId),c=n.readSync(s.dataId),{selectedIndices:p}=DQ(u,c,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var RQ={kernelName:hl,backendName:"webgl",kernelFunc:MQ},PQ=Qa.nonMaxSuppressionV4Impl;function OQ(e){E.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=a,c=n.readSync(r.dataId),p=n.readSync(s.dataId),{selectedIndices:d,validOutputs:h}=PQ(c,p,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var LQ={kernelName:ml,backendName:"webgl",kernelFunc:OQ},zQ=Qa.nonMaxSuppressionV5Impl;function WQ(e){E.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=a,c=n.readSync(r.dataId),p=n.readSync(s.dataId),d=i,h=o,m=l,f=u,{selectedIndices:g,selectedScores:y}=zQ(c,p,d,h,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var BQ={kernelName:fl,backendName:"webgl",kernelFunc:WQ},VQ=class{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${a}), float(${n}),
                      float(index == coords.y)));
      }
    `}},UQ=e=>{let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{depth:s,onValue:i,offValue:o}=a,l=I.sizeFromShape(r.shape),u=new VQ(l,s,i,o),c=ye({inputs:{x:r},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(u,[c],r.dtype);n.disposeIntermediateTensorInfo(c);let d=[...r.shape,s],h=ye({inputs:{x:p},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(p),h},GQ={kernelName:ri,backendName:"webgl",kernelFunc:UQ};function nf(e){let{inputs:t,backend:n}=e,{x:a}=t;if(a.dtype==="complex64"){let r=kp({inputs:{input:a},backend:n}),s=nf({inputs:{x:r},backend:n}),i=tf({inputs:{input:a},backend:n}),o=nf({inputs:{x:i},backend:n}),l=ys({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return iw({attrs:{shape:a.shape,dtype:a.dtype,value:a.dtype==="string"?"":0},backend:n})}var HQ={kernelName:Dl,backendName:"webgl",kernelFunc:nf};function aS(e){let{inputs:t,backend:n}=e,{x:a}=t;if(a.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(a.dtype==="complex64"){let r=kp({inputs:{input:a},backend:n}),s=aS({inputs:{x:r},backend:n}),i=tf({inputs:{input:a},backend:n}),o=nf({inputs:{x:i},backend:n}),l=ys({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return iw({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:n})}var jQ={kernelName:gl,backendName:"webgl",kernelFunc:aS};function qQ(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(t.length===1)return sw({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach(c=>{I.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),I.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(c=>{let p=sw({inputs:{input:c},backend:n,attrs:{dim:r}});return o.push(p),p}),u=PT({inputs:l,backend:n,attrs:{axis:r}});return o.forEach(c=>n.disposeIntermediateTensorInfo(c)),u}var XQ={kernelName:yl,backendName:"webgl",kernelFunc:qQ},KQ=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((l,u)=>l[0]+e[u]+l[1]);let a=e.length,r=ht(a),s=t.map(l=>l[0]).join(","),i=t.map((l,u)=>l[0]+e[u]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);if(a===1){this.userCode=`
        int start = ${s};
        int end = ${i};
        uniform float value;

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${s});
      ${r} end = ${r}(${i});
      uniform float value;

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.valueLoc==null&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}},YQ=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((m,f)=>m[0]+e[f]+m[1]);let a=e.length,r=ht(a),s=t.map(m=>m[0]).join(","),i=t.map((m,f)=>m[0]+e[f]).join(","),o=gn("rc",a),l=gn("source",a),u=`${o[a-1]} < ${this.outputShape[a-1]}`,c=a===1?"source":`vec2(${l.slice(-2).join()})`,p=[`${r} rc = outputLoc;`,`${o[a-1]} += 1;
       if(${u}) {
      `,a===1?"":`}
       rc = outputLoc;
       ${o[a-2]} += 1;
       if(${o[a-2]} < ${this.outputShape[a-2]}) {`,a===1?"":`  ${o[a-1]} += 1;
         if(${u}) {`],d=a===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let m=0,f=a===1?2:4;m<f;m++)h+=`
        ${p[m]}
        if (${d}) {
          result[${m}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${m}] = getChannel(getX(${l.join()}), ${c});
        }
      `;h+=a===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${s});
      const ${r} end = ${r}(${i});
      uniform float value;

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.valueLoc==null&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}},rS=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a,o=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new YQ(r.shape,s,i):new KQ(r.shape,s,i),l=o.getCustomSetupFunc(i);return n.runWebGLProgram(o,[r],r.dtype,l)},JQ={kernelName:si,backendName:"webgl",kernelFunc:rS},QQ=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,ZQ=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+Km+`
  return result;
`,eZ=on({opSnippet:QQ,packedOpSnippet:ZQ}),tZ={kernelName:ii,backendName:"webgl",kernelFunc:eZ};function nZ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=[],u=I.parseAxisParam(s,r.shape),c=u,p=E.getAxesPermutation(c,o),d=r;p!=null&&(d=En({inputs:{x:r},backend:n,attrs:{perm:p}}),c=E.getInnerMostAxes(c.length,o),l.push(d)),E.assertAxesAreInnerMostDims("prod",c,o);let h;if(n.shouldExecuteOnCPU([d])){let m=n.texData.get(d.dataId).values,{outVals:f,outShape:g,outDtype:y}=IX(d.shape,d.dtype,m,c);h=n.makeTensorInfo(g,y,f)}else{let[m,f]=E.computeOutAndReduceShapes(d.shape,c),g=I.sizeFromShape(f),y=ye({inputs:{x:d},backend:n,attrs:{shape:[-1,g]}}),b=uh(r.dtype),x=Zi(y,b,"prod",n);h=ye({inputs:{x},backend:n,attrs:{shape:m}}),l.push(y),l.push(x)}if(i){l.push(h);let m=E.expandShapeToKeepDim(h.shape,u);h=ye({inputs:{x:h},backend:n,attrs:{shape:m}})}return l.forEach(m=>n.disposeIntermediateTensorInfo(m)),h}var aZ={kernelName:bl,backendName:"webgl",kernelFunc:nZ},sS=e=>{let{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:i}=n,o=NX(a,r,s,i);return t.makeTensorInfo([o.length],i,o)},rZ={kernelName:mc,backendName:"webgl",kernelFunc:sS},sZ="return 1.0 / x;",iZ=Xe({opSnippet:sZ}),oZ={kernelName:xl,backendName:"webgl",kernelFunc:iZ},lZ=Pa+`
  return (x < 0.0) ? 0.0 : x;
`,uZ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cZ=Xe({opSnippet:lZ,packedOpSnippet:uZ}),pZ={kernelName:li,backendName:"webgl",kernelFunc:cZ},dZ=Pa+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,hZ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,mZ=Xe({opSnippet:dZ,packedOpSnippet:hZ}),fZ={kernelName:ci,backendName:"webgl",kernelFunc:mZ},gZ=class{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n],p;r?p="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/c[0]},
          ${u[1]/c[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},yZ=class{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n],p;r?p="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/c[0]},
          ${u[1]/c[1]},
          ${u[1]/c[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function bZ(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,u]=o,c=Z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new yZ(r.shape,l,u,s,i):new gZ(r.shape,l,u,s,i);return n.runWebGLProgram(c,[r],"float32")}var xZ={kernelName:ui,backendName:"webgl",kernelFunc:bZ},vZ=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,a,r]=t,[,s,i]=e,o=[n&&s>1?a-1:a,n&&i>1?r-1:r],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],p=1/u,d=1/c,h=Math.ceil(p)*2+2,m=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${c});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${h});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function wZ(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,o=new vZ(s.shape,r.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var kZ={kernelName:Zd,backendName:"webgl",kernelFunc:wZ},IZ=class{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n],p=a?"0.5":"0.0",d;r?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/c[0]},
          ${u[1]/c[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};function NZ(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,u]=o,c=new IZ(r.shape,l,u,s,i);return n.runWebGLProgram(c,[r],r.dtype)}var TZ={kernelName:fc,backendName:"webgl",kernelFunc:NZ},SZ=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,a,r]=t,[,s,i]=e,o=[n&&s>1?a-1:a,n&&i>1?r-1:r],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],p=1/u,d=1/c,h=Math.ceil(p)*2+2,m=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${c});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${h});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${a}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function CZ(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,o=new SZ(s.shape,r.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var AZ={kernelName:Qd,backendName:"webgl",kernelFunc:CZ},FZ=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let a=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,r=e.map((i,o)=>a(o)).join(","),s=ht(n);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}},_Z=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let a=gn("rc",n),r=`${a[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${a[n-2]} + 1 < ${this.outputShape[n-2]}`,i=ht(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(a.slice())};
          if(${r}){
            result.g = ${l(a.slice())};
          }
          if(${s}) {
            result.b = ${u(a.slice())};
            if(${r}) {
              result.a = ${c(a.slice())};
            }
          }
          setOutput(result);
        }
    `;function o(h){return p(h)}function l(h){return h[n-1]="("+h[n-1]+" + 1)",p(h)}function u(h){return h[n-2]="("+h[n-2]+" + 1)",p(h)}function c(h){return h[n-1]="("+h[n-1]+" + 1)",h[n-2]="("+h[n-2]+" + 1)",p(h)}function p(h){let m=e.map((y,b)=>d(b,h)),f=m.join(","),g=m.slice(-2).join(",");return`getChannel(getX(${f}), vec2(${g}))`}function d(h,m){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${m[h]} - 1`:`${m[h]}`}}};function EZ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,i=r.shape.length,o=I.parseAxisParam(s,r.shape);if(i===0)return Gn({inputs:{x:r},backend:n});let l=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _Z(r.shape,o):new FZ(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}var $Z={kernelName:pi,backendName:"webgl",kernelFunc:EZ},DZ=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[];let n=e[1],a=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        uniform vec4 params;
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}getCustomSetupFunc(e,t,n,a){return(r,s)=>{this.paramsLoc==null&&(this.paramsLoc=r.getUniformLocationNoThrow(s,"params")),r.gl.uniform4f(this.paramsLoc,e,t,n,a)}}},MZ={kernelName:Ml,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,{radians:r,fillValue:s,center:i}=t,o=n,l=new DZ(a.shape,s),[u,c]=E.getImageCenter(i,a.shape[1],a.shape[2]),p=l.getCustomSetupFunc(u,c,Math.sin(r),Math.cos(r));return o.runWebGLProgram(l,[a],a.dtype,p)}},RZ=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,PZ=Xe({opSnippet:RZ}),OZ={kernelName:di,backendName:"webgl",kernelFunc:PZ},LZ="return inversesqrt(x);",zZ=Xe({opSnippet:LZ,cpuKernelImpl:TX}),WZ={kernelName:hi,backendName:"webgl",kernelFunc:zZ},iS=class{constructor(e,t,n,a,r,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let o=ht(r.length),l=ht(s.length),u="";n===1?u="i":n===2&&(u="i, j");let c=`getIndices(${u})`,p="";a===1?p="i":a===2&&(p="i, coords[1]");let d=`getUpdates(${p})`,h=t>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${r});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${c});
              flattenedIndex += index * ${h};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function BZ(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=E.calculateShapes(s,r,i),d=[p/u,u];if(p===0)return n.makeTensorInfo(i,r.dtype);let h=ye({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),m=ye({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),f=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new iS(l,o,h.shape.length,m.shape.length,c,d),y=n.runWebGLProgram(g,[m,h,f],m.dtype),b=ye({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(f),b}var VZ={kernelName:wl,backendName:"webgl",kernelFunc:BZ},UZ=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let a,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",a="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],l=[];for(let u=0;u<t.length;u++)l.push(`${i[u]}`),u<e&&o.push(`${i[u]}`);a=o.join(),r=l.join()}let s=ht(n);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${a});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};function GZ(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=new UZ(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[a,r,s],pa(r.dtype,s.dtype))}var HZ={kernelName:kl,backendName:"webgl",kernelFunc:GZ},jZ=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${E.SELU_SCALEALPHA};
  float scale = ${E.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,qZ=Xe({opSnippet:jZ}),XZ={kernelName:Il,backendName:"webgl",kernelFunc:qZ},KZ="return 1.0 / (1.0 + exp(-1.0 * x));",YZ=Xe({opSnippet:KZ}),JZ={kernelName:fi,backendName:"webgl",kernelFunc:YZ},QZ=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,ZZ=Xe({opSnippet:QZ}),eee={kernelName:Sl,backendName:"webgl",kernelFunc:ZZ},tee=xT+`
  return sin(x);
`,nee=Xe({opSnippet:tee}),aee={kernelName:mi,backendName:"webgl",kernelFunc:nee},ree=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,see=Xe({opSnippet:ree}),iee={kernelName:Tl,backendName:"webgl",kernelFunc:see},oee=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,lee=Xe({opSnippet:oee}),uee={kernelName:Cl,backendName:"webgl",kernelFunc:lee},cee=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;I.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((y,b)=>y*b),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<r.shape.length;++y)l.push([0,0]);let u=[],c=rS({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),p=E.getReshaped(c.shape,s,o,!1),d=E.getPermuted(p.length,s.length,!1),h=E.getReshapedPermuted(c.shape,s,o,!1),m=ye({inputs:{x:c},backend:n,attrs:{shape:p}}),f=En({inputs:{x:m},backend:n,attrs:{perm:d}}),g=ye({inputs:{x:f},backend:n,attrs:{shape:h}});return u.push(c),u.push(m),u.push(f),u.forEach(y=>n.disposeIntermediateTensorInfo(y)),g},pee={kernelName:gc,backendName:"webgl",kernelFunc:cee};function dee(e){let{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:u,strides:c,outputSize:p}=E.calculateShapes(s,r,o),d=!1,h=new iS(u,l,r.shape.length,s.shape.length,c,[p,1],d),m=n.runWebGLProgram(h,[s,r,i],s.dtype),f=ye({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),f}var hee={kernelName:eh,backendName:"webgl",kernelFunc:dee};function mee(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=I.parseAxisParam(i,r.shape)[0],l=E.prepareSplitSize(r,s,o),u=r.shape.length,c=new Array(u).fill(0),p=r.shape.slice();return l.map(d=>{let h=[...p];h[o]=d;let m=wp({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});return c[o]+=d,m})}var fee={kernelName:Al,backendName:"webgl",kernelFunc:mee},gee="return sqrt(x);",yee=Xe({opSnippet:gee}),bee={kernelName:gi,backendName:"webgl",kernelFunc:yee},xee="return x * x;",vee=Xe({opSnippet:xee}),wee={kernelName:yc,backendName:"webgl",kernelFunc:vee},oS="return (a - b) * (a - b);",kee=on({opSnippet:oS,packedOpSnippet:oS}),Iee={kernelName:xi,backendName:"webgl",kernelFunc:kee};function Nee({inputs:e,attrs:t,backend:n}){let{x:a}=e,r=Pa+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new gs(a.shape,r);return n.runWebGLProgram(s,[a],a.dtype)}var Tee={kernelName:Xr,backendName:"webgl",kernelFunc:Nee},See=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let a=n.length,r=ht(n.length),s=ht(n.length),i="";if(a===1)i="coords * strides + begin";else{let o=0;i=n.map((l,u)=>(o++,n.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${o-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function Cee(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=a,{nonStrided:h,$begin:m,$strides:f,size:g,newShape:y,outShape:b}=dn.sliceInfo(r.shape,s,i,o,l,u,c,p,d),x=ye({inputs:{x:r},backend:n,attrs:{shape:y}}),v;if(h){let w=wp({inputs:{x},backend:n,attrs:{begin:m,size:g}});v=ye({inputs:{x:w},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(w)}else if(b.some(w=>w===0))v=n.makeTensorInfo(b,r.dtype,[]);else if(n.shouldExecuteOnCPU([x])){let w=n.texData.get(x.dataId).values,S=Le(x.shape,x.dtype,w),A=CX(b,S,f,m);v=n.makeTensorInfo(b,x.dtype,A.values)}else{let w=new See(m,f,b);v=n.runWebGLProgram(w,[x],x.dtype)}let k=ye({inputs:{x:v},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),k}var Aee={kernelName:Fl,backendName:"webgl",kernelFunc:Cee},Fee="return tan(x);",_ee=Xe({opSnippet:Fee}),Eee={kernelName:_l,backendName:"webgl",kernelFunc:_ee},$ee=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Dee=Xe({opSnippet:$ee}),Mee={kernelName:wi,backendName:"webgl",kernelFunc:Dee},Pee=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;let a=ht(this.rank),r=Ree(e);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function Ree(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<e.length;r++)a.push(`imod(${n[r]}, ${e[r]})`);return a.join()}function lS(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if(r.dtype==="string"){let o=n.readSync(r.dataId).map(c=>I.decodeString(c)),l=Le(r.shape,r.dtype,o),u=FX(l,s);return n.makeTensorInfo(u.shape,u.dtype,u.values)}let i=new Pee(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}var Oee={kernelName:qr,backendName:"webgl",kernelFunc:lS};function Lee(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a,o=n.readSync(r.dataId),[l,u]=_X(o,r.shape,r.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}var zee={kernelName:El,backendName:"webgl",kernelFunc:Lee},Wee=class{constructor(e,t,n,a,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i=n==="nearest"?1:2,o;switch(a){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${o} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Bee(e){let{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=a,[c,p,d,h]=r.shape,[m,f]=u!=null?u:[p,d],g=[c,m,f,h],y=new Wee(p,d,i,o,l,g);return n.runWebGLProgram(y,[r,s],"float32")}var Vee={kernelName:th,backendName:"webgl",kernelFunc:Bee};function Uee(e){let{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;yp(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=a.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=EX(i,r,s.shape,s.dtype);return[a.makeTensorInfo(l,s.dtype,o),a.makeTensorInfo([u.length],"int32",u)]}var Gee={kernelName:nh,backendName:"webgl",kernelFunc:Uee};function Hee(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:s}=a;s<0&&(s+=r.shape.length);let i=r,o=i.shape.length,l=r.shape[s],u=new Array(o-1),c=0;for(let f=0;f<o;f++)f!==s&&(u[c++]=i.shape[f]);let p=[],d=new Array(o).fill(0),h=i.shape.slice();h[s]=1;let m=new Array(l);for(let f=0;f<m.length;f++){d[s]=f;let g=wp({inputs:{x:i},backend:n,attrs:{begin:d,size:h}}),y=ye({inputs:{x:g},backend:n,attrs:{shape:u}});m[f]=y,p.push(g)}return p.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var jee={kernelName:$l,backendName:"webgl",kernelFunc:Hee},qee=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,a=e.batchSize,r=e.inSize,s=e.numSegments,i=s*Math.ceil(r/n);this.outputShape=[a,i];let o="0.0",l="sumValue",u=Math.floor(n/4)*4,c=n%4,p=`
        sumValue += dot(values, segFilter);
    `,d="";r%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${o};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${p}
        }

        int inIdx = inOffset + ${u};
        if (${c===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${p}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${p}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${p}
        }
        setOutput(${l});
      }
    `}};function Xee(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a,o=r.shape.length,l=[],u=0,c=E.getAxesPermutation([u],o),p=r;c!=null&&(p=En({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(p),u=E.getInnerMostAxes(1,o)[0]);let d=E.segment_util.computeOutShape(p.shape,u,i),h=I.sizeFromShape([p.shape[u]]),m=ye({inputs:{x:p},backend:n,attrs:{shape:[-1,h]}});l.push(m);let f=uh(r.dtype),g=(v,k,w,S,A)=>{let F=v.shape[0],D=v.shape[1],R=E.segment_util.segOpComputeOptimalWindowSize(D,A),L={windowSize:R,inSize:D,batchSize:F,numSegments:A},W=new qee(L,k),U=n.compileAndRun(W,[v,w],S);if(l.push(U),U.shape[1]===A)return U;let G=sS({backend:n,attrs:{start:0,stop:A,step:1,dtype:"float32"}}),X=lS({inputs:{x:G},backend:n,attrs:{reps:[D/R]}});return l.push(G),l.push(X),g(U,k,X,S,A)},y=g(m,"unsortedSegmentSum",s,f,i),b=ye({inputs:{x:y},backend:n,attrs:{shape:d}}),x=b;if(c!=null){l.push(b);let v=E.getUndoAxesPermutation(c);x=En({inputs:{x},backend:n,attrs:{perm:v}})}return l.forEach(v=>n.disposeIntermediateTensorInfo(v)),x}var Kee={kernelName:bc,backendName:"webgl",kernelFunc:Xee},Yee=[zJ,VJ,CK,FK,$K,RK,OK,WK,VK,GK,XK,YK,ZK,n7,u7,s7,d7,g7,m7,v7,k7,N7,A7,R7,O7,U7,H7,K7,Q7,lK,nY,dY,mY,iY,bY,vY,gY,IY,SY,FY,EY,DY,PY,VY,GY,LY,qY,YY,e9,r9,l9,p9,d9,h9,f9,y9,x9,w9,I9,C9,E9,D9,R9,L9,V9,j9,Y9,oK,Q9,tY,tJ,rJ,oJ,cK,pJ,fJ,yJ,NJ,wJ,AJ,EJ,RJ,GJ,QJ,YJ,nQ,rQ,iQ,XJ,lQ,cQ,mQ,bQ,kQ,_Q,fK,$Q,RQ,LQ,BQ,z7,GQ,jQ,XQ,JQ,tZ,dK,aZ,rZ,W7,SQ,oZ,fZ,pZ,yK,xZ,kZ,TZ,AZ,$Z,MZ,OZ,WZ,VZ,HZ,XZ,JZ,eee,aee,iee,D7,AQ,uee,pee,hee,fee,bee,wee,Iee,Tee,Aee,CQ,NK,Eee,Mee,Oee,zee,Vee,TK,Gee,jee,Kee,HQ];for(let e of Yee)vc(e);var Jee="3.3.0",Qee={"tfjs-core":c1,"tfjs-backend-cpu":bG,"tfjs-backend-webgl":iK,"tfjs-data":ON,"tfjs-layers":Im,"tfjs-converter":EN,tfjs:Jee},Hn;(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(Hn||(Hn={}));var Ip;(function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu"})(Ip||(Ip={}));var uS;function Zee(e){uS=e.wasm.cwrap(Ii,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function ete(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t;if(r.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=a,d=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(s.dataId).id,m=0;if(i!=null){let A=n.dataIdMap.get(i.dataId);if(A.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${A.shape.length}.`);m=A.id}let f=o==null?0:n.dataIdMap.get(o.dataId).id,g=Ip[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?r.shape[2]:r.shape[1],b=u?s.shape[1]:s.shape[2],x=r.shape[0],v=n.makeOutput([x,y,b],r.dtype),k=n.dataIdMap.get(v.dataId).id,w=new Uint8Array(new Int32Array(r.shape).buffer),S=new Uint8Array(new Int32Array(s.shape).buffer);return uS(d,w,r.shape.length,h,S,s.shape.length,l,u,g,m,f,p||0,k),v}var tte={kernelName:Ii,backendName:"wasm",setupFunc:Zee,kernelFunc:ete};function $n(e){let t;function n(r){t=r.wasm.cwrap(e,null,["number","number"])}function a(r){let{backend:s,inputs:{x:i}}=r,o=s.dataIdMap.get(i.dataId).id,l=s.makeOutput(i.shape,i.dtype),u=s.dataIdMap.get(l.dataId).id;return I.sizeFromShape(l.shape)===0||t(o,u),l}return{kernelName:e,backendName:"wasm",setupFunc:n,kernelFunc:a}}var nte=$n(Po);function yn(e,t,n){let a;function r(i){a=i.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function s(i){let{backend:o,inputs:l}=i,{a:u,b:c}=l,p=o.dataIdMap.get(u.dataId).id,d=o.dataIdMap.get(c.dataId).id,h=n!=null?n:u.dtype,m=E.assertAndGetBroadcastShape(u.shape,c.shape),f=o.makeOutput(m,h);if(I.sizeFromShape(m)===0)return f;let g=new Uint8Array(new Int32Array(u.shape).buffer),y=new Uint8Array(new Int32Array(c.shape).buffer),b=o.dataIdMap.get(f.dataId).id,x=()=>a(p,g,u.shape.length,d,y,c.shape.length,Hn[u.dtype],b);if(t&&u.dtype==="float32")return x(),f;let v=E.getBroadcastDims(u.shape,m),k=E.getBroadcastDims(c.shape,m),w=v.every((A,F)=>A===F),S=k.every((A,F)=>A===F);if(w&&S)return x(),f;throw new Error(`Broadcasting along outer dims is not yet supported for ${u.dtype} ${e}.`)}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:s}}var ate=!0,rte=yn(Hr,ate),cS;function ste(e){cS=e.wasm.cwrap(Es,null,["array","number","number","number"])}function ite(e){let{inputs:t,backend:n}=e,a=n.makeOutput(t[0].shape,t[0].dtype);if(I.sizeFromShape(a.shape)===0)return a;let r=t.map(o=>n.dataIdMap.get(o.dataId).id),s=new Uint8Array(new Int32Array(r).buffer),i=n.dataIdMap.get(a.dataId).id;return cS(s,r.length,Hn[a.dtype],i),a}var ote={kernelName:Es,backendName:"wasm",setupFunc:ste,kernelFunc:ite};function af(e){let{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(a).set(r),a}var lte={kernelName:Xs,backendName:"wasm",kernelFunc:af},pS;function ute(e){pS=e.wasm.cwrap(ki,null,["number","array","number","number","number","array","number"])}function rf(e){let{inputs:t,backend:n,attrs:a}=e,[r,s]=pte(t.x.shape,a.perm),i=!0;for(let m=0;m<s.length;m++)s[m]!==m&&(i=!1);let o=cte(t.x.shape,a.perm),l={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(i){let m=af({inputs:t,backend:n});return m.shape=o,m}let u=n.makeOutput(o,l.dtype),c=n.dataIdMap.get(l.dataId).id,p=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),h=new Uint8Array(new Int32Array(l.shape).buffer);return pS(c,h,l.shape.length,Hn[l.dtype],p,d,s.length),u}function cte(e,t){let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];return n}function pte(e,t){let n=[],a=[];for(let r=0;r<e.length;++r)e[r]!==1&&n.push(e[r]),e[t[r]]!==1&&a.push(t[r]);for(let r=0;r<a.length;++r){let s=-1;for(let i=0;i<a.length;++i)a[i]>=r&&(s===-1||a[s]>a[i])&&(s=i);a[s]=r}return[n,a]}var dte={kernelName:ki,backendName:"wasm",kernelFunc:rf,setupFunc:ute};function Nu(e,t,n){let a=e.shape,r=e.shape.length,s=I.parseAxisParam(t,a),i=s,o=E.getAxesPermutation(i,r),l=null,u=!1;if(o!=null){let c=new Array(r);for(let d=0;d<c.length;d++)c[d]=a[o[d]];i=E.getInnerMostAxes(i.length,r),l=rf({inputs:{x:e},attrs:{perm:o},backend:n});let p=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==p&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}var dS;function hte(e){dS=e.wasm.cwrap($s,null,["number","number","number","number","number"])}function mte(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r}=a,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=i,l=s,{transposed:u,axes:c,inputWasTransposed:p}=Nu(s,r,t);if(p){let y=t.dataIdMap.get(u.dataId).id;y!==i&&(l=u,o=y)}let d=l.shape.slice(0,-1),h=t.makeOutput(d,"int32"),m=t.dataIdMap.get(h.dataId).id,f=I.sizeFromShape(h.shape),g=l.shape[c[0]];return dS(o,Hn[l.dtype],f,g,m),p&&t.disposeData(u.dataId),h}var fte={kernelName:$s,backendName:"wasm",kernelFunc:mte,setupFunc:hte},hS;function gte(e){hS=e.wasm.cwrap(Ds,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function yte(e){let{inputs:t,attrs:n,backend:a}=e,r=t.x,s=a.dataIdMap.get(r.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,c=E.computePool2DInfo(r.shape,i,o,1,l,u),p=c.filterHeight,d=c.filterWidth,h=c.padInfo.top,m=c.padInfo.right,f=c.padInfo.bottom,g=c.padInfo.left,y=c.strideHeight,b=c.strideWidth,x=c.inChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(c.dilationWidth!==1||c.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);let v=a.makeOutput(c.outShape,"float32"),k=a.dataIdMap.get(v.dataId).id;return hS(s,r.shape[0],r.shape[1],r.shape[2],p,d,h,m,f,g,y,b,x,k),v}var bte={kernelName:Ds,backendName:"wasm",setupFunc:gte,kernelFunc:yte};function Oa(e){let{inputs:t,attrs:n}=e,{x:a}=t,{shape:r}=n,s=I.sizeFromShape(a.shape),i=I.inferFromImplicitShape(r,s);return I.assert(s===I.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${a.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(a.dataId),{dataId:a.dataId,shape:i,dtype:a.dtype}}var xte={kernelName:vl,backendName:"wasm",kernelFunc:Oa},mS;function vte(e){mS=e.wasm.cwrap(Ms,null,["number","array","number","number","array","number","number","number","number"])}function wte(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;if(r.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=r.shape.length,u=s.shape.length,c=i?r.shape[l-2]:r.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],d=i?r.shape[l-1]:r.shape[l-2],h=o?s.shape[u-2]:s.shape[u-1],m=r.shape.slice(0,-2),f=s.shape.slice(0,-2),g=I.sizeFromShape(m),y=I.sizeFromShape(f),b=g===y||g===1||y===1;I.assert(l>=2&&u>=2&&b,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${f}).`);let x=(g>y?r.shape.slice(0,-2):s.shape.slice(0,-2)).concat([d,h]);I.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${r.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let v=i?[g,c,d]:[g,d,c],k=o?[y,h,p]:[y,p,h],w=Oa({inputs:{x:r},backend:n,attrs:{shape:v}}),S=Oa({inputs:{x:s},backend:n,attrs:{shape:k}}),A=n.dataIdMap.get(w.dataId).id,F=n.dataIdMap.get(S.dataId).id,D=i?w.shape[2]:w.shape[1],R=o?S.shape[1]:S.shape[2],L=Math.max(g,y),W=n.makeOutput([L,D,R],w.dtype),U=n.dataIdMap.get(W.dataId).id,G=new Uint8Array(new Int32Array(w.shape).buffer),X=new Uint8Array(new Int32Array(S.shape).buffer);return mS(A,G,w.shape.length,F,X,S.shape.length,i,o,U),n.disposeData(w.dataId),n.disposeData(S.dataId),W.shape=x,W}var kte={kernelName:Ms,backendName:"wasm",setupFunc:vte,kernelFunc:wte};function sf(e){let{inputs:{x:t},attrs:{dtype:n},backend:a}=e,r=a.makeOutput(t.shape,n),s=a.typedArrayFromHeap(t);return a.typedArrayFromHeap(r).set(s),r}var Ite={kernelName:Rs,backendName:"wasm",kernelFunc:sf},Nte=$n(Ps),fS;function Tte(e){fS=e.wasm.cwrap(jr,null,["number","number","number","number"])}function Ste(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=a,o=n.dataIdMap.get(r.dataId).id,l=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(l.dataId).id;return fS(o,s,i,u),l}var Cte={kernelName:jr,backendName:"wasm",setupFunc:Tte,kernelFunc:Ste};function gS(e){let{inputs:t,backend:n}=e,a=I.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=E.computeOutShape(t.map(h=>h.shape),a),s=t.filter(h=>I.sizeFromShape(h.shape)>0);if(s.length===1)return af({inputs:{x:s[0]},backend:n});let i=n.makeOutput(r,t[0].dtype);if(I.sizeFromShape(r)===0)return i;let o=s.map(h=>h.shape);if(E.assertParamsConsistent(o,a),s[0].dtype==="string"){let h=s.map(x=>{let v=I.sizeFromShape(x.shape.slice(a));return Oa({inputs:{x},backend:n,attrs:{shape:[-1,v]}})}),m=h.map(x=>({vals:n.readSync(x.dataId),shape:x.shape}));r=E.computeOutShape(h.map(x=>x.shape),1);let f=h[0].shape[0]===1,g=_v(m,r,t[0].dtype,f),y=E.computeOutShape(s.map(x=>x.shape),a);i.shape=y;let b=n.dataIdMap.get(i.dataId);return b.stringBytes=E.fromStringArrayToUint8(g),h.forEach(x=>n.disposeData(x.dataId)),i}let l=I.sizeFromShape(s[0].shape.slice(0,a)),u=0,c=s.map(h=>{let m=I.sizeFromShape(h.shape.slice(a));return u+=m,m}),p=s.map(h=>n.typedArrayFromHeap(h)),d=n.typedArrayFromHeap(i);for(let h=0;h<l;h++){let m=h*u;for(let f=0;f<p.length;f++){let g=c[f],y=h*g,b=p[f].subarray(y,y+g);d.set(b,m),m+=g}}return i}var Ate={kernelName:Go,backendName:"wasm",kernelFunc:gS},yS;function Fte(e){yS=e.wasm.cwrap(Os,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function _te(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s}=t,i=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:p,dataFormat:d}=n,h=E.convertConv2DDataFormat(d),m=E.computeConv2DInfo(r.shape,s.shape,l,u,c,p,!1,h),f=m.filterHeight,g=m.filterWidth,y=m.padInfo.top,b=m.padInfo.right,x=m.padInfo.bottom,v=m.padInfo.left,k=m.dilationHeight,w=m.dilationWidth,S=m.strideHeight,A=m.strideWidth,F=m.inChannels,D=m.outChannels,R=m.padInfo.type==="SAME"?1:0;if(m.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${m.dataFormat}'. Please use 'channelsLast'.`);let L=a.makeOutput(m.outShape,"float32"),W=a.dataIdMap.get(L.dataId).id;return yS(i,r.shape[0],r.shape[1],r.shape[2],o,f,g,y,b,x,v,R,k,w,S,A,F,D,W),L}var Ete={kernelName:Os,backendName:"wasm",setupFunc:Fte,kernelFunc:_te},bS;function $te(e){bS=e.wasm.cwrap(Ls,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Dte(e){let{backend:t,inputs:n,attrs:a}=e,{dy:r,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:c}=a,p=1,d=E.convertConv2DDataFormat(l),h=E.computeConv2DInfo(c,s.shape,i,p,o,u,!1,d),{batchSize:m,filterHeight:f,filterWidth:g,inChannels:y,inHeight:b,inWidth:x,outChannels:v,outHeight:k,outWidth:w,strideHeight:S,strideWidth:A}=h,F=f-1-h.padInfo.top,D=g-1-h.padInfo.left,R=h.dataFormat==="channelsLast",L=I.computeStrides(h.inShape),W=I.computeStrides(r.shape),[U,G,X]=I.computeStrides(s.shape),j=L[0],te=R?L[1]:L[2],Q=R?L[2]:1,se=R?1:L[1],ne=W[0],ie=R?W[1]:W[2],ee=R?W[2]:1,de=R?1:W[1],oe=t.makeOutput(h.inShape,"float32"),ge=t.dataIdMap.get(oe.dataId).id,fe=t.dataIdMap.get(r.dataId).id,we=t.dataIdMap.get(s.dataId).id;return bS(fe,we,m,f,g,b,x,y,k,w,v,S,A,F,D,U,G,X,j,te,Q,se,ne,ie,ee,de,ge),oe}var Mte={kernelName:Ls,backendName:"wasm",setupFunc:$te,kernelFunc:Dte},Rte=$n(zs),ow;(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(ow||(ow={}));var xS;function Pte(e){xS=e.wasm.cwrap(jo,null,["number","number","number","number","array","number","number","number","number","number"])}function Ote(e){let{backend:t,inputs:n,attrs:a}=e,{method:r,extrapolationValue:s,cropSize:i}=a,{image:o,boxes:l,boxInd:u}=n,c=l.shape[0],[p,d]=i,h=[c,p,d,o.shape[3]],m=t.dataIdMap.get(o.dataId),f;o.dtype!=="float32"&&(f=sf({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));let g=m.id,y=t.dataIdMap.get(l.dataId).id,b=t.dataIdMap.get(u.dataId).id,x=t.makeOutput(h,"float32"),v=t.dataIdMap.get(x.dataId).id,k=new Uint8Array(new Int32Array(o.shape).buffer);return xS(g,y,b,c,k,p,d,ow[r],s,v),f!=null&&t.disposeData(f.dataId),x}var Lte={kernelName:jo,backendName:"wasm",setupFunc:Pte,kernelFunc:Ote},vS;function zte(e){vS=e.wasm.cwrap(Ws,null,["number","number","number","number","number","number"])}function Wte(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a,l=r.shape.length;I.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);let u=E.getAxesPermutation([s],l),c=r;u!==null&&(c=rf({inputs:{x:r},attrs:{perm:u},backend:n}));let p=E.getInnerMostAxes(1,l)[0];E.assertAxesAreInnerMostDims("cumsum",[p],l);let d=n.makeOutput(c.shape,c.dtype),h=c.shape[p],m=n.dataIdMap.get(c.dataId).id,f=n.dataIdMap.get(d.dataId).id;vS(m,i?1:0,o?1:0,h,f,Hn[r.dtype]);let g=d;if(u!==null){let y=E.getUndoAxesPermutation(u);g=rf({inputs:{x:d},attrs:{perm:y},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)}return g}var Bte={kernelName:Ws,backendName:"wasm",setupFunc:zte,kernelFunc:Wte},wS;function Vte(e){wS=e.wasm.cwrap(qo,null,["number","number","number","array","number","array","array","number","number"])}function Ute(e){let{backend:t,inputs:n,attrs:a}=e,{x:r}=n,{blockSize:s,dataFormat:i}=a;I.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);let o=r.shape[0],l=i==="NHWC"?r.shape[1]:r.shape[2],u=i==="NHWC"?r.shape[2]:r.shape[3],c=i==="NHWC"?r.shape[3]:r.shape[1],p=l*s,d=u*s,h=c/(s*s),m=i==="NHWC"?[o,p,d,h]:[o,h,p,d],f=t.makeOutput(m,"float32"),g=t.dataIdMap.get(r.dataId).id,y=new Uint8Array(new Int32Array(I.computeStrides(r.shape)).buffer),b=new Uint8Array(new Int32Array(m).buffer),x=new Uint8Array(new Int32Array(I.computeStrides(m)).buffer),v=t.dataIdMap.get(f.dataId).id;return wS(g,s,i==="NHWC"?1:0,y,r.shape.length-1,b,x,m.length,v),f}var Gte={kernelName:qo,backendName:"wasm",setupFunc:Vte,kernelFunc:Ute},kS;function Hte(e){kS=e.wasm.cwrap(Bs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function jte(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s}=t,i=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:p}=n,d=u==null?[1,1]:u,h=E.computeConv2DInfo(r.shape,s.shape,l,d,c,p,!0),m=h.filterHeight,f=h.filterWidth,g=h.padInfo.top,y=h.padInfo.right,b=h.padInfo.bottom,x=h.padInfo.left,v=h.dilationHeight,k=h.dilationWidth,w=h.strideHeight,S=h.strideWidth,A=h.inChannels,F=h.outChannels,D=h.padInfo.type==="SAME"?1:0;if(h.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let R=a.makeOutput(h.outShape,"float32"),L=a.dataIdMap.get(R.dataId).id;return kS(i,r.shape[0],r.shape[1],r.shape[2],o,m,f,g,y,b,x,D,v,k,w,S,A,F,L),R}var qte={kernelName:Bs,backendName:"wasm",setupFunc:Hte,kernelFunc:jte},Xte=!1,Kte=yn(Yo,Xte,"bool"),Yte=$n(Us);function lw(e){let{inputs:t,attrs:n,backend:a}=e,{input:r}=t,{dim:s}=n,i=r.shape.length,o=r.shape.slice(),l=s;return s<0&&(I.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),Oa({inputs:{x:r},backend:a,attrs:{shape:o}})}var Jte={kernelName:Jo,backendName:"wasm",kernelFunc:lw};function Qte(e){let{attrs:{shape:t,value:n,dtype:a},backend:r}=e,s=r.makeOutput(t,a);return r.typedArrayFromHeap(s).fill(n),s}var Zte={kernelName:lc,backendName:"wasm",kernelFunc:Qte},IS;function ene(e){IS=e.wasm.cwrap(Zo,null,["number","number","number","number","number","number"])}function tne(e){let{inputs:t,backend:n}=e,{image:a}=t,r=n.makeOutput(a.shape,a.dtype),s=n.dataIdMap.get(a.dataId).id,i=n.dataIdMap.get(r.dataId).id,[o,l,u,c]=a.shape;return IS(s,o,l,u,c,i),r}var nne={kernelName:Zo,backendName:"wasm",kernelFunc:tne,setupFunc:ene},ane=$n(Gs),rne=!1,sne=yn(Hs,rne),NS;function ine(e){NS=e.wasm.cwrap(js,null,["number","number","number","number","number","number","number"])}function one(e){let{backend:t,inputs:n,attrs:a}=e,{varianceEpsilon:r}=a,{x:s,mean:i,variance:o,offset:l,scale:u}=n,c=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,h=l!=null?t.dataIdMap.get(l.dataId).id:0,m=u!=null?t.dataIdMap.get(u.dataId).id:0,f=t.makeOutput(s.shape,s.dtype);if(I.sizeFromShape(s.shape)===0)return f;let g=t.dataIdMap.get(f.dataId).id;return NS(c,p,d,h,m,r,g),f}var lne={kernelName:js,backendName:"wasm",setupFunc:ine,kernelFunc:one},TS;function une(e){TS=e.wasm.cwrap(Ni,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function cne(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dataFormat:p,dimRoundingMode:d,activation:h,leakyreluAlpha:m}=n,f=E.computeConv2DInfo(r.shape,s.shape,l,c,u,d),g=Ip[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let y=a.dataIdMap.get(r.dataId).id,b=a.dataIdMap.get(s.dataId).id,x=f.outChannels,v=0;if(i!=null){let ee=a.dataIdMap.get(i.dataId);if(ee.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${ee.shape.length}.`);if(ee.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${ee.shape}) does not match the number of output channels (${x})`);v=ee.id}let k=f.filterHeight,w=f.filterWidth,S=f.padInfo.top,A=f.padInfo.right,F=f.padInfo.bottom,D=f.padInfo.left,R=f.dilationHeight,L=f.dilationWidth,W=f.strideHeight,U=f.strideWidth,G=f.inChannels,X=f.padInfo.type==="SAME"?1:0,j=f.batchSize,te=f.inHeight,Q=f.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let se=a.makeOutput(f.outShape,"float32"),ne=a.dataIdMap.get(se.dataId).id,ie=o==null?0:a.dataIdMap.get(o.dataId).id;return TS(y,j,te,Q,b,k,w,v,S,A,F,D,X,R,L,W,U,G,x,g,ie,m||0,ne),se}var pne={kernelName:Ni,backendName:"wasm",setupFunc:une,kernelFunc:cne},SS;function dne(e){SS=e.wasm.cwrap(Ti,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function hne(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dataFormat:p,dimRoundingMode:d,activation:h,leakyreluAlpha:m}=n,f=E.computeConv2DInfo(r.shape,s.shape,l,c,u,d,!0),g=Ip[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=a.dataIdMap.get(r.dataId).id,b=a.dataIdMap.get(s.dataId).id,x=f.outChannels,v=0;if(i!=null){let ee=a.dataIdMap.get(i.dataId);if(ee.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${ee.shape.length}.`);if(ee.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${ee.shape}) does not match the number of output channels (${x})`);v=ee.id}let k=f.filterHeight,w=f.filterWidth,S=f.padInfo.top,A=f.padInfo.right,F=f.padInfo.bottom,D=f.padInfo.left,R=f.dilationHeight,L=f.dilationWidth,W=f.strideHeight,U=f.strideWidth,G=f.inChannels,X=f.padInfo.type==="SAME"?1:0,j=f.batchSize,te=f.inHeight,Q=f.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let se=a.makeOutput(f.outShape,"float32"),ne=a.dataIdMap.get(se.dataId).id,ie=o==null?0:a.dataIdMap.get(o.dataId).id;return SS(y,j,te,Q,b,k,w,v,S,A,F,D,X,R,L,W,U,G,x,g,ie,m||0,ne),se}var mne={kernelName:Ti,backendName:"wasm",setupFunc:dne,kernelFunc:hne},CS;function fne(e){CS=e.wasm.cwrap(tl,null,["number","number","number","number","number","number","array","number"])}function gne(e){let{backend:t,inputs:n}=e,{params:a,indices:r}=n,[s,i,o,l]=Ay.prepareAndValidate(a,r),u=t.makeOutput(s,a.dtype);if(i===0)return u;let c=r.shape,p=c[c.length-1],d=t.dataIdMap.get(a.dataId).id,h=t.dataIdMap.get(r.dataId).id,m=new Uint8Array(new Int32Array(l).buffer),f=t.dataIdMap.get(u.dataId).id;return CS(d,Hn[a.dtype],h,i,p,o,m,f),u}var yne={kernelName:tl,backendName:"wasm",setupFunc:fne,kernelFunc:gne},AS;function bne(e){AS=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function xne(e){let{backend:t,inputs:n,attrs:a}=e,{x:r,indices:s}=n,{axis:i,batchDims:o}=a,l=I.parseAxisParam(i,r.shape)[0],u=E.segment_util.collectGatherOpShapeInfo(r,s,l,o),c=Oa({inputs:{x:r},attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]},backend:t}),p=I.sizeFromShape(s.shape),d=Oa({inputs:{x:s},attrs:{shape:[u.batchSize,p/u.batchSize]},backend:t}),h=[u.batchSize,u.outerSize,p/u.batchSize,u.sliceSize],m=t.makeOutput(h,r.dtype);if(I.sizeFromShape(r.shape)===0)return m;let f=c.shape.length-1,g=t.dataIdMap.get(c.dataId).id,y=t.dataIdMap.get(d.dataId).id,b=t.dataIdMap.get(m.dataId).id,x=new Uint8Array(new Int32Array(I.computeStrides(c.shape)).buffer),v=new Uint8Array(new Int32Array(I.computeStrides(h)).buffer);return AS(g,Hn[r.dtype],x,f,y,u.batchSize,v,b),t.disposeData(c.dataId),t.disposeData(d.dataId),m.shape=u.outputShape,m}var vne={kernelName:el,backendName:"wasm",setupFunc:bne,kernelFunc:xne},wne=!1,kne=yn(nl,wne,"bool"),Ine=!1,Nne=yn(qs,Ine,"bool"),FS;function Tne(e){FS=e.wasm.cwrap(Ks,null,["number","number","number"])}function Sne(e){let{inputs:{x:t},attrs:{alpha:n},backend:a}=e,r=a.dataIdMap.get(t.dataId).id,s=a.makeOutput(t.shape,t.dtype);if(I.sizeFromShape(t.shape)!==0){let i=a.dataIdMap.get(s.dataId).id;FS(r,n,i)}return s}var Cne={kernelName:Ks,backendName:"wasm",setupFunc:Tne,kernelFunc:Sne},Ane=!1,Fne=yn(il,Ane,"bool"),_ne=!1,Ene=yn(ol,_ne,"bool"),$ne=$n(Ys),Dne=!1,Mne=yn(ul,Dne,"bool"),_S;function Rne(e){_S=e.wasm.cwrap(Js,null,["number, number, number"])}function Pne(e){let{backend:t,inputs:n,attrs:a}=e,{reductionIndices:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:c,originalAxes:p,inputWasTransposed:d}=Nu(i,r,t);if(d){let b=t.dataIdMap.get(u.dataId).id;l=u,o=b}let h=l.shape.length;E.assertAxesAreInnerMostDims("max",c,h);let[m,f]=E.computeOutAndReduceShapes(l.shape,c),g=I.sizeFromShape(f),y=t.makeOutput(m,i.dtype);if(I.sizeFromShape(l.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;_S(o,g,b)}if(d&&t.disposeData(u.dataId),s){let b=E.expandShapeToKeepDim(y.shape,p);y.shape=b}return y}var One={kernelName:Js,backendName:"wasm",setupFunc:Rne,kernelFunc:Pne},Lne=!1,zne=yn(Qs,Lne),ES;function Wne(e){ES=e.wasm.cwrap(Zs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Bne(e){let{inputs:t,attrs:n,backend:a}=e,r=t.x,s=a.dataIdMap.get(r.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,c=E.computePool2DInfo(r.shape,i,o,1,l,u),p=c.filterHeight,d=c.filterWidth,h=c.padInfo.top,m=c.padInfo.right,f=c.padInfo.bottom,g=c.padInfo.left,y=c.dilationHeight,b=c.dilationWidth,x=c.strideHeight,v=c.strideWidth,k=c.inChannels,w=c.outChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let S=a.makeOutput(c.outShape,"float32"),A=a.dataIdMap.get(S.dataId).id;return ES(s,r.shape[0],r.shape[1],r.shape[2],p,d,h,m,f,g,y,b,x,v,k,w,A),S}var Vne={kernelName:Zs,backendName:"wasm",setupFunc:Wne,kernelFunc:Bne},$S;function Une(e){$S=e.wasm.cwrap(ei,null,["number, number, number"])}function Gne(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Nu(i,r,t),m=p;if(h){let v=t.dataIdMap.get(c.dataId).id;v!==o&&(u=c,l=v,m=E.getInnerMostAxes(m.length,u.shape.length))}E.assertAxesAreInnerMostDims("mean",m,u.shape.length);let[f,g]=E.computeOutAndReduceShapes(u.shape,m),y=I.sizeFromShape(g),b=u;u.dtype!=="float32"&&(b=sf({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(f,"float32");if(I.sizeFromShape(u.shape)!==0){let v=t.dataIdMap.get(x.dataId).id;$S(l,y,v)}if(h&&t.disposeData(c.dataId),s){let v=E.expandShapeToKeepDim(x.shape,d);x.shape=v}return u.dtype!=="float32"&&t.disposeData(b.dataId),x}var Hne={kernelName:ei,backendName:"wasm",setupFunc:Une,kernelFunc:Gne},DS;function jne(e){DS=e.wasm.cwrap(ti,null,["number, number, number"])}function qne(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Nu(i,r,t);if(h){let x=t.dataIdMap.get(c.dataId).id;x!==o&&(u=c,l=x)}let m=u.shape.length;E.assertAxesAreInnerMostDims("min",p,m);let[f,g]=E.computeOutAndReduceShapes(u.shape,p),y=I.sizeFromShape(g),b=t.makeOutput(f,u.dtype);if(I.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;DS(l,y,x)}if(h&&t.disposeData(c.dataId),s){let x=E.expandShapeToKeepDim(b.shape,d);b.shape=x}return b}var Xne={kernelName:ti,backendName:"wasm",setupFunc:jne,kernelFunc:qne},Kne=!1,Yne=yn(ni,Kne),Jne=!0,Qne=yn(ai,Jne),Zne=$n(pl);function uw(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),a=n[0],r=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:a,selectedSize:r,pSelectedScores:s,pValidOutputs:i}}var MS;function eae(e){MS=e.wasm.cwrap(hl,"number",["number","number","number","number","number"])}function tae(e){let{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i}=a,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(l.dataId).id,p=MS(u,c,s,r,i),{pSelectedIndices:d,selectedSize:h,pSelectedScores:m,pValidOutputs:f}=uw(t,p);return t.wasm._free(m),t.wasm._free(f),t.makeOutput([h],"int32",d)}var nae={kernelName:hl,backendName:"wasm",setupFunc:eae,kernelFunc:tae},RS;function aae(e){RS=e.wasm.cwrap(ml,"number",["number","number","number","number","number","bool"])}function rae(e){let{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=a,{boxes:l,scores:u}=n,c=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=RS(c,p,s,r,i,o),{pSelectedIndices:h,selectedSize:m,pSelectedScores:f,pValidOutputs:g}=uw(t,d);t.wasm._free(f);let y=t.makeOutput([m],"int32",h),b=t.makeOutput([],"int32",g);return[y,b]}var sae={kernelName:ml,backendName:"wasm",setupFunc:aae,kernelFunc:rae},PS;function iae(e){PS=e.wasm.cwrap(fl,"number",["number","number","number","number","number","number"])}function oae(e){let{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=a,{boxes:l,scores:u}=n,c=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=PS(c,p,s,r,i,o),{pSelectedIndices:h,selectedSize:m,pSelectedScores:f,pValidOutputs:g}=uw(t,d);t.wasm._free(g);let y=t.makeOutput([m],"int32",h),b=t.makeOutput([m],"float32",f);return[y,b]}var lae={kernelName:fl,backendName:"wasm",setupFunc:iae,kernelFunc:oae},uae=!1,cae=yn(dl,uae,"bool"),OS;function pae(e){OS=e.wasm.cwrap(ri,null,["number","number","number","number","number"])}function dae(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{depth:s,onValue:i,offValue:o}=a,l=n.makeOutput([...r.shape,s],"int32"),u=n.dataIdMap.get(l.dataId).id,c=n.dataIdMap.get(r.dataId).id;return OS(c,s,i,o,u),l}var hae={kernelName:ri,backendName:"wasm",setupFunc:pae,kernelFunc:dae};function mae(e){let{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(1),a}var fae={kernelName:gl,backendName:"wasm",kernelFunc:mae};function gae(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(t.length===1)return lw({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach(c=>{I.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),I.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(c=>{let p=lw({inputs:{input:c},backend:n,attrs:{dim:r}});return o.push(p),p}),u=gS({inputs:l,backend:n,attrs:{axis:r}});return o.forEach(c=>n.disposeData(c.dataId)),u}var yae={kernelName:yl,backendName:"wasm",kernelFunc:gae},LS;function bae(e){LS=e.wasm.cwrap(si,null,["number","array","number","number","array","array","number","number"])}function xae(e){let{inputs:{x:t},backend:n,attrs:{paddings:a,constantValue:r}}=e,s=a.map((m,f)=>m[0]+t.shape[f]+m[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),c=a.map(m=>m[0]),p=a.map(m=>m[1]),d=new Uint8Array(new Int32Array(c).buffer),h=new Uint8Array(new Int32Array(p).buffer);return LS(i,u,t.shape.length,Hn[t.dtype],d,h,r,l),o}var vae={kernelName:si,backendName:"wasm",kernelFunc:xae,setupFunc:bae},wae=!1,kae=yn(ii,wae),zS;function Iae(e){zS=e.wasm.cwrap(oi,null,["number","number","number"])}function Nae(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=n.dataIdMap.get(a.dataId).id,i=n.dataIdMap.get(r.dataId).id,o=n.makeOutput(a.shape,"float32"),l=n.dataIdMap.get(o.dataId).id;return zS(s,i,l),o}var Tae={kernelName:oi,backendName:"wasm",setupFunc:Iae,kernelFunc:Nae},WS;function Sae(e){WS=e.wasm.cwrap(bl,null,["number","number","number","number"])}function Cae(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Nu(i,r,t),m=p;if(h){let x=t.dataIdMap.get(c.dataId).id;x!==o&&(u=c,l=x,m=E.getInnerMostAxes(m.length,u.shape.length))}E.assertAxesAreInnerMostDims("prod",m,u.shape.length);let[f,g]=E.computeOutAndReduceShapes(u.shape,m),y=I.sizeFromShape(g),b=t.makeOutput(f,u.dtype);if(I.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;WS(l,y,Hn[b.dtype],x)}if(h&&t.disposeData(c.dataId),s){let x=E.expandShapeToKeepDim(b.shape,d);b.shape=x}return b}var Aae={kernelName:bl,backendName:"wasm",setupFunc:Sae,kernelFunc:Cae},Fae=e=>{let{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:i}=n,o=Dv(a,r,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l},_ae={kernelName:mc,backendName:"wasm",kernelFunc:Fae},Eae=!0,$ae=yn(Vs,Eae),Dae=$n(li),Mae=$n(ci),BS;function Rae(e){BS=e.wasm.cwrap(ui,null,["number","number","number","number","number","number","number","number","number","number"])}function Pae(e){let{backend:t,inputs:n,attrs:a}=e,{images:r}=n,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,u]=o,[c,p,d,h]=r.shape,m=[c,l,u,h],f=t.dataIdMap.get(r.dataId),g;f.dtype!=="float32"&&(g=sf({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(g.dataId));let y=f.id,b=t.makeOutput(m,"float32");if(I.sizeFromShape(r.shape)===0)return b;let x=t.dataIdMap.get(b.dataId).id;return BS(y,c,p,d,h,l,u,s?1:0,i?1:0,x),g!=null&&t.disposeData(g.dataId),b}var Oae={kernelName:ui,backendName:"wasm",setupFunc:Rae,kernelFunc:Pae},VS;function Lae(e){VS=e.wasm.cwrap(pi,null,["number","array","number","array","number","number"])}function zae(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,i=I.parseAxisParam(s,r.shape);if(r.shape.length===0)return af({inputs:{x:r},backend:n});let o=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),p=new Uint8Array(new Int32Array(r.shape).buffer);VS(l,c,i.length,p,r.shape.length,u);let d=Oa({inputs:{x:o},attrs:{shape:r.shape},backend:n});return n.disposeData(o.dataId),d}var Wae={kernelName:pi,backendName:"wasm",kernelFunc:zae,setupFunc:Lae},US;function Bae(e){US=e.wasm.cwrap(Ml,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Vae(e){let{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{radians:s,fillValue:i,center:o}=a,l=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(l.dataId).id,[p,d,h,m]=r.shape,[f,g]=E.getImageCenter(o,d,h),y=i===0,b=255,x=typeof i=="number"?[i,i,i,y?0:b]:[...i,b],v=new Uint8Array(new Int32Array(x).buffer);return US(u,p,d,h,m,s,f,g,v,x.length,c),l}var Uae={kernelName:Ml,backendName:"wasm",kernelFunc:Vae,setupFunc:Bae},Gae=$n(di),Hae=$n(hi),GS;function jae(e){GS=e.wasm.cwrap(wl,null,["number","number","number","number","number","number","array","number","number"])}function qae(e){let{backend:t,inputs:n,attrs:a}=e,{indices:r,updates:s}=n,{shape:i}=a,o=t.makeOutput(i,s.dtype);if(I.sizeFromShape(i)===0)return o;let{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=Fy.calculateShapes(s,r,i),h=t.dataIdMap.get(r.dataId).id,m=t.dataIdMap.get(s.dataId).id,f=new Uint8Array(new Int32Array(p).buffer),g=t.dataIdMap.get(o.dataId).id;return GS(h,m,Hn[s.dtype],l,u,c,f,d,g),o}var Xae={kernelName:wl,backendName:"wasm",setupFunc:jae,kernelFunc:qae},HS;function Kae(e){HS=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Yae(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=n.dataIdMap.get(a.dataId).id,o=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(u.dataId).id,p=a.shape.length,d=r.shape.length,h=p===0||p>1||d===1?1:I.sizeFromShape(r.shape.slice(1));return HS(i,o,l,h,c),u}var Jae={kernelName:kl,backendName:"wasm",kernelFunc:Yae,setupFunc:Kae},jS;function Qae(e){jS=e.wasm.cwrap(fi,null,["number","number"])}function Zae(e){let{backend:t,inputs:{x:n}}=e,a=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(r.dataId).id;return I.sizeFromShape(r.shape)===0||jS(a,s),r}var ere={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Qae,kernelFunc:Zae},tre=$n(mi);function of(e){let{inputs:{x:t},attrs:{begin:n,size:a},backend:r}=e,[s,i]=dn.parseSliceParams(t,n,a),o=dn.isSliceContinous(t.shape,s,i),l=r.readSync(t.dataId),u=r.makeOutput(i,t.dtype),c=I.computeStrides(t.shape),p=r.dataIdMap.get(u.dataId);if(o){let m=dn.computeFlatOffset(s,c);return t.dtype==="string"?p.stringBytes=l.slice(m,m+I.sizeFromShape(i)):r.typedArrayFromHeap(u).set(l.subarray(m,m+I.sizeFromShape(i))),u}if(t.dtype==="string"){let m=zm(l,s,i,t.shape,t.dtype);return p.stringBytes=m,u}let d=r.typedArrayFromHeap(u),h=t.shape.length;if(h===2)nre(l,c[0],d,s,i);else if(h===3)are(l,c[0],c[1],d,s,i);else if(h===4)rre(l,c[0],c[1],c[2],d,s,i);else{let m=zm(l,s,i,t.shape,t.dtype);d.set(m)}return u}function nre(e,t,n,a,r){let s=0,i=a[0],o=a[1],l=i+r[0];for(let u=i;u<l;u++){let c=u*t+o;n.set(e.subarray(c,c+r[1]),s),s+=r[1]}}function are(e,t,n,a,r,s){let i=0,o=r[0],l=r[1],u=r[2],c=o+s[0],p=l+s[1];for(let d=o;d<c;d++)for(let h=l;h<p;h++){let m=d*t+h*n+u;a.set(e.subarray(m,m+s[2]),i),i+=s[2]}}function rre(e,t,n,a,r,s,i){let o=0,l=s[0],u=s[1],c=s[2],p=l+i[0],d=u+i[1],h=c+i[2],m=s[3];for(let f=l;f<p;f++)for(let g=u;g<d;g++)for(let y=c;y<h;y++){let b=f*t+g*n+y*a+m;r.set(e.subarray(b,b+i[3]),o),o+=i[3]}}var sre={kernelName:Nl,backendName:"wasm",kernelFunc:of},qS;function ire(e){qS=e.wasm.cwrap(bi,null,["number","number","number","number"])}function ore(e){let{backend:t,inputs:{logits:n},attrs:{dim:a}}=e,r=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[a],l=I.sizeFromShape(n.shape)/o;return I.sizeFromShape(s.shape)===0||qS(r,i,o,l),s}var lre={kernelName:bi,backendName:"wasm",setupFunc:ire,kernelFunc:ore};function ure(e){let{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=n,o=I.parseAxisParam(i,r.shape)[0],l=E.prepareSplitSize(r,s,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map(p=>{let d=[...c];d[o]=p;let h=of({inputs:{x:r},attrs:{begin:u,size:d},backend:a});return u[o]+=p,h})}var cre={kernelName:Al,backendName:"wasm",kernelFunc:ure},pre=$n(gi),dre=$n(yc),hre=!0,mre=yn(xi,hre),XS;function fre(e){XS=e.wasm.cwrap(Xr,null,["number","number","number"])}function gre(e){let{backend:t,inputs:n,attrs:a}=e,{alpha:r}=a,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return XS(i,r,l),o}var yre={kernelName:Xr,backendName:"wasm",setupFunc:fre,kernelFunc:gre},KS;function bre(e){KS=e.wasm.cwrap(Fl,null,["number","array","number","array","array","array","array","array","number","number"])}function xre(e){let{backend:t,inputs:n,attrs:a}=e,{x:r}=n,{begin:s,end:i,strides:o}=a;o==null&&(o=new Array(s.length));let{beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=a,h=E.slice_util.maskToAxes(c);if(h.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(c!==0&&p!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(c!==0&&d!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let m=r.shape.length-s.length,f=E.slice_util.maskToAxes(p),g=r.shape.slice();f.forEach(D=>{s[D]=0,i[D]=1,g.splice(D,0,1)});let y=Oa({inputs:{x:r},attrs:{shape:g},backend:t}),{begin:b,end:x,strides:v}=E.slice_util.getNormalizedAxes(y.shape,h,m,s,i,o,l,u,c);s=b,i=x,o=v;let k=E.slice_util.maskToAxes(d);k.forEach(D=>{i[D]=s[D]+1,o[D]=1});let w=E.slice_util.computeOutShape(s,i,o),S=w.filter((D,R)=>k.indexOf(R)===-1);if(o.every(D=>D===1)){let D=of({inputs:{x:y},attrs:{begin:s,size:w},backend:t});t.disposeData(y.dataId);let R=Oa({inputs:{x:D},attrs:{shape:S},backend:t});return t.disposeData(D.dataId),R}let A=t.makeOutput(S,"float32");if(!S.some(D=>D===0)){let D=t.dataIdMap.get(y.dataId).id,R=new Uint8Array(new Int32Array(I.computeStrides(y.shape)).buffer),L=new Uint8Array(new Int32Array(s).buffer),W=new Uint8Array(new Int32Array(i).buffer),U=new Uint8Array(new Int32Array(o).buffer),G=new Uint8Array(new Int32Array(S).buffer),X=new Uint8Array(new Int32Array(I.computeStrides(S)).buffer),j=t.dataIdMap.get(A.dataId).id;KS(D,R,y.shape.length,L,W,U,G,X,S.length,j)}t.disposeData(y.dataId);let F=Oa({inputs:{x:A},attrs:{shape:S},backend:t});return t.disposeData(A.dataId),F}var vre={kernelName:Fl,backendName:"wasm",setupFunc:bre,kernelFunc:xre},wre=!0,kre=yn(vi,wre),YS;function Ire(e){YS=e.wasm.cwrap(yi,null,["number, number, number"])}function Nre(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Nu(i,r,t),m=p;if(h){let x=t.dataIdMap.get(c.dataId).id;x!==o&&(u=c,l=x,m=E.getInnerMostAxes(m.length,u.shape.length))}E.assertAxesAreInnerMostDims("sum",m,u.shape.length);let[f,g]=E.computeOutAndReduceShapes(u.shape,m),y=I.sizeFromShape(g),b=t.makeOutput(f,u.dtype);if(I.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;YS(l,y,x)}if(h&&t.disposeData(c.dataId),s){let x=E.expandShapeToKeepDim(b.shape,d);b.shape=x}return b}var Tre={kernelName:yi,backendName:"wasm",setupFunc:Ire,kernelFunc:Nre},Sre=$n(wi),JS;function Cre(e){JS=e.wasm.cwrap(qr,null,["number","array","number","array","number","number"])}function Are(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,s=n.dataIdMap.get(r.dataId).id,{reps:i}=a,o=new Array(r.shape.length);for(let d=0;d<o.length;d++)o[d]=r.shape[d]*i[d];let l=new Uint8Array(new Int32Array(r.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),c=n.makeOutput(o,r.dtype),p=n.dataIdMap.get(c.dataId).id;return JS(s,l,r.shape.length,u,o.length,Hn[c.dtype],p),c}var Fre={kernelName:qr,backendName:"wasm",setupFunc:Cre,kernelFunc:Are},QS;function _re(e){QS=e.wasm.cwrap(El,null,["number","array","number","number","number","bool","number","number"])}var Ere=({inputs:e,backend:t,attrs:n})=>{let{x:a}=e,{k:r,sorted:s}=n,i=t.dataIdMap.get(a.dataId).id,o=new Uint8Array(new Int32Array(a.shape).buffer),l=a.shape.slice();l[l.length-1]=r;let u=t.makeOutput(l,a.dtype),c=t.dataIdMap.get(u.dataId).id,p=t.makeOutput(l,"int32"),d=t.dataIdMap.get(p.dataId).id;return QS(i,o,a.shape.length,Hn[a.dtype],r,s,c,d),[u,p]},$re={kernelName:El,backendName:"wasm",setupFunc:_re,kernelFunc:Ere};function Dre(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:s}=a;s<0&&(s+=r.shape.length);let i=r.shape[s],o=r.shape.length,l=new Array(o-1),u=0;for(let h=0;h<o;h++)h!==s&&(l[u++]=r.shape[h]);let c=new Array(i),p=new Array(o).fill(0),d=r.shape.slice();d[s]=1;for(let h=0;h<c.length;h++)p[s]=h,c[h]=of({inputs:{x:r},attrs:{begin:p,size:d},backend:n});return c.map(({dataId:h,dtype:m})=>({dataId:h,dtype:m,shape:l}))}var Mre={kernelName:$l,backendName:"wasm",kernelFunc:Dre};function Rre(e){let{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(0),a}var Pre={kernelName:Dl,backendName:"wasm",kernelFunc:Rre},Ore=[nte,rte,ote,fte,bte,kte,Ite,Nte,Cte,Ate,Ete,Mte,Rte,Lte,Bte,Gte,qte,Kte,Yte,Jte,Zte,nne,ane,sne,tte,lne,pne,mne,yne,vne,kne,Nne,lte,Cne,Fne,Ene,$ne,Mne,One,zne,Vne,Hne,Xne,Yne,Qne,Zne,nae,sae,lae,cae,hae,fae,yae,vae,kae,Tae,Aae,_ae,$ae,Dae,Mae,xte,Oae,Wae,Uae,Hae,Gae,Xae,Jae,ere,tre,sre,lre,cre,pre,dre,mre,yre,vre,kre,Tre,Sre,Fre,$re,dte,Mre,Pre];for(let e of Ore)vc(e);var cw=Z();cw.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));cw.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(cw.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var ZS=Do(XF()),Lre='var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}',zre=Do(KF()),eC=class extends Zu{constructor(e){super();this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new kd(this,Ha())}write(e,t,n){let a={id:this.dataIdNextNumber++};return this.move(a,e,t,n,1),a}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=I.now();return e(),{kernelMs:I.now()-t}}move(e,t,n,a,r){let s=this.dataIdNextNumber++;if(a==="string"){let u=t;this.dataIdMap.set(e,{id:s,stringBytes:u,shape:n,dtype:a,memoryOffset:null,refCount:r});return}let i=I.sizeFromShape(n),o=i*I.bytesPerElement(a),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:a,refCount:r}),this.wasm.tfjs.registerTensor(s,i,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e){let{memoryOffset:t,dtype:n,shape:a,stringBytes:r}=this.dataIdMap.get(e);if(n==="string")return r;let s=this.wasm.HEAPU8.slice(t,t+I.sizeFromShape(a)*I.bytesPerElement(n));return Wre(s.buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let a;if(n==null)a=this.write(null,e,t);else{let r=this.dataIdNextNumber++;a={id:r},this.dataIdMap.set(a,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let s=I.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,s,n)}return{dataId:a,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let a=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),s=I.sizeFromShape(e);switch(t){case"float32":return new Float32Array(a,r,s);case"int32":return new Int32Array(a,r,s);case"bool":return new Uint8Array(a,r,s);default:throw new Error(`Unknown dtype ${t}`)}}};function Bre(e){return(t,n)=>(I.fetch(e,{credentials:"same-origin"}).then(a=>{a.ok||t.env.a(`failed to load wasm binary file at '${e}'`),a.arrayBuffer().then(r=>{WebAssembly.instantiate(r,t).then(s=>{n(s.instance)})})}),{})}function tC(e,t,n){if(lf!=null)return lf;let a="tfjs-backend-wasm.wasm";return e&&t?a="tfjs-backend-wasm-threaded-simd.wasm":e&&(a="tfjs-backend-wasm-simd.wasm"),Np!=null&&Np[a]!=null?Np[a]:n+a}async function Vre(){let[e,t]=await Promise.all([Z().getAsync("WASM_HAS_SIMD_SUPPORT"),Z().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,a)=>{let r={};r.locateFile=(o,l)=>{if(o.endsWith(".worker.js")){let u=Lre,c=new Blob([u],{type:"application/javascript"});return URL.createObjectURL(c)}return o.endsWith(".wasm")?tC(e,t,Tp!=null?Tp:l):l+o},pw&&(r.instantiateWasm=Bre(tC(e,t,Tp!=null?Tp:"")));let s=!1;r.onAbort=()=>{s||Sp||(Sp=!0,a({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))};let i;t&&e&&lf==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+ZS.default.toString()],{type:"text/javascript"}),i=(0,ZS.default)(r)):i=(0,zre.default)(r),i.then(o=>{s=!0,Sp=!1;let l=null;o.tfjs={init:o.cwrap("init",null,[]),registerTensor:o.cwrap("register_tensor",null,["number","number","number"]),disposeData:o.cwrap("dispose_data",l,["number"]),dispose:o.cwrap("dispose",l,[])},n({wasm:o})})})}function Wre(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var Ure=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],lf=null,Tp=null,Np={},Sp=!1,pw=!1;function Gre(e,t=!1){if(Ry("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Sp)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");lf=e,pw=t}function Hre(e,t=!1){if(Sp)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")Tp=e;else{Np=e;let n=Ure.filter(a=>Np[a]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}pw=t}var jre="3.3.0",qre=2;fh("wasm",async()=>{let{wasm:e}=await Vre();return new eC(e)},qre);var Cw={};Ju(Cw,{AnchorPosition:()=>lr,DrawBox:()=>gf,DrawBoxOptions:()=>Nw,DrawFaceLandmarks:()=>Sw,DrawFaceLandmarksOptions:()=>Tw,DrawTextField:()=>vs,DrawTextFieldOptions:()=>Cp,drawContour:()=>Ar,drawDetections:()=>nse,drawFaceExpressions:()=>ase,drawFaceLandmarks:()=>sse});function Ar(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach(({x:a,y:r},s)=>{let i=t[s];e.moveTo(i.x,i.y),e.lineTo(a,r)}),n){let a=t[t.length-1],r=t[0];if(!a||!r)return;e.moveTo(a.x,a.y),e.lineTo(r.x,r.y)}e.stroke()}var dw={};Ju(dw,{computeReshapedDimensions:()=>fw,getCenterPoint:()=>no,isDimensions:()=>cf,isEven:()=>uf,isFloat:()=>mw,isTensor:()=>eo,isTensor1D:()=>Xre,isTensor2D:()=>hw,isTensor3D:()=>Fr,isTensor4D:()=>ra,isValidNumber:()=>La,isValidProbablitiy:()=>Tu,range:()=>ir,round:()=>to});var cn=class{constructor(t,n){if(!La(t)||!La(n))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:t,height:n})}`);this._width=t,this._height=n}get width(){return this._width}get height(){return this._height}reverse(){return new cn(1/this.width,1/this.height)}};function eo(e,t){return e instanceof Fe&&e.shape.length===t}function Xre(e){return eo(e,1)}function hw(e){return eo(e,2)}function Fr(e){return eo(e,3)}function ra(e){return eo(e,4)}function mw(e){return e%1!=0}function uf(e){return e%2==0}function to(e,t=2){let n=10**t;return Math.floor(e*n)/n}function cf(e){return e&&e.width&&e.height}function fw({width:e,height:t},n){let a=n/Math.max(t,e);return new cn(Math.round(e*a),Math.round(t*a))}function no(e){return e.reduce((t,n)=>t.add(n),new De(0,0)).div(new De(e.length,e.length))}function ir(e,t,n){return Array(e).fill(0).map((a,r)=>t+r*n)}function La(e){return!!e&&e!==Infinity&&e!==-Infinity&&!Number.isNaN(e)||e===0}function Tu(e){return La(e)&&e>=0&&e<=1}var De=class{constructor(t,n){this._x=t,this._y=n}get x(){return this._x}get y(){return this._y}add(t){return new De(this.x+t.x,this.y+t.y)}sub(t){return new De(this.x-t.x,this.y-t.y)}mul(t){return new De(this.x*t.x,this.y*t.y)}div(t){return new De(this.x/t.x,this.y/t.y)}abs(){return new De(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new De(Math.floor(this.x),Math.floor(this.y))}};var ot=class{static isRect(t){return!!t&&[t.x,t.y,t.width,t.height].every(La)}static assertIsValidBox(t,n,a=!1){if(!ot.isRect(t))throw new Error(`${n} - invalid box: ${JSON.stringify(t)}, expected object with properties x, y, width, height`);if(!a&&(t.width<0||t.height<0))throw new Error(`${n} - width (${t.width}) and height (${t.height}) must be positive numbers`)}constructor(t,n=!0){let a=t||{},r=[a.left,a.top,a.right,a.bottom].every(La),s=[a.x,a.y,a.width,a.height].every(La);if(!s&&!r)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(a)}`);let[i,o,l,u]=s?[a.x,a.y,a.width,a.height]:[a.left,a.top,a.right-a.left,a.bottom-a.top];ot.assertIsValidBox({x:i,y:o,width:l,height:u},"Box.constructor",n),this._x=i,this._y=o,this._width=l,this._height=u}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new De(this.left,this.top)}get topRight(){return new De(this.right,this.top)}get bottomLeft(){return new De(this.left,this.bottom)}get bottomRight(){return new De(this.right,this.bottom)}round(){let[t,n,a,r]=[this.x,this.y,this.width,this.height].map(s=>Math.round(s));return new ot({x:t,y:n,width:a,height:r})}floor(){let[t,n,a,r]=[this.x,this.y,this.width,this.height].map(s=>Math.floor(s));return new ot({x:t,y:n,width:a,height:r})}toSquare(){let{x:t,y:n,width:a,height:r}=this,s=Math.abs(a-r);return a<r&&(t-=s/2,a+=s),r<a&&(n-=s/2,r+=s),new ot({x:t,y:n,width:a,height:r})}rescale(t){let n=cf(t)?t.width:t,a=cf(t)?t.height:t;return new ot({x:this.x*n,y:this.y*a,width:this.width*n,height:this.height*a})}pad(t,n){let[a,r,s,i]=[this.x-t/2,this.y-n/2,this.width+t,this.height+n];return new ot({x:a,y:r,width:s,height:i})}clipAtImageBorders(t,n){let{x:a,y:r,right:s,bottom:i}=this,o=Math.max(a,0),l=Math.max(r,0),u=s-o,c=i-l,p=Math.min(u,t-o),d=Math.min(c,n-l);return new ot({x:o,y:l,width:p,height:d}).floor()}shift(t,n){let{width:a,height:r}=this,s=this.x+t,i=this.y+n;return new ot({x:s,y:i,width:a,height:r})}padAtBorders(t,n){let a=this.width+1,r=this.height+1,s=1,i=1,o=a,l=r,u=this.left,c=this.top,p=this.right,d=this.bottom;return p>n&&(o=-p+n+a,p=n),d>t&&(l=-d+t+r,d=t),u<1&&(l=2-u,u=1),c<1&&(l=2-c,c=1),{dy:i,edy:l,dx:s,edx:o,y:c,ey:d,x:u,ex:p,w:a,h:r}}calibrate(t){return new ot({left:this.left+t.left*this.width,top:this.top+t.top*this.height,right:this.right+t.right*this.width,bottom:this.bottom+t.bottom*this.height}).toSquare().round()}};var ao=class extends ot{constructor(t,n,a,r,s=!1){super({left:t,top:n,right:a,bottom:r},s)}};var _r=class{constructor(t,n,a,r,s){this._imageDims=new cn(s.width,s.height),this._score=t,this._classScore=n,this._className=a,this._box=new ot(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new ot(this._box).rescale(this.imageDims.reverse())}forSize(t,n){return new _r(this.score,this.classScore,this.className,this.relativeBox,{width:t,height:n})}};var ft=class extends _r{constructor(t,n,a){super(t,t,"",n,a)}forSize(t,n){let{score:a,relativeBox:r,imageDims:s}=super.forSize(t,n);return new ft(a,r,s)}};function pf(e,t,n=!0){let a=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left)),r=Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top)),s=a*r;return n?s/(e.area+t.area-s):s/Math.min(e.area,t.area)}function df(e){let t=e.map(o=>o.x),n=e.map(o=>o.y),a=t.reduce((o,l)=>l<o?l:o,Infinity),r=n.reduce((o,l)=>l<o?l:o,Infinity),s=t.reduce((o,l)=>o<l?l:o,0),i=n.reduce((o,l)=>o<l?l:o,0);return new ao(a,r,s,i)}function hf(e,t,n,a=!0){let r=t.map((i,o)=>({score:i,boxIndex:o})).sort((i,o)=>i.score-o.score).map(i=>i.boxIndex),s=[];for(;r.length>0;){let i=r.pop();s.push(i);let o=r,l=[];for(let u=0;u<o.length;u++){let c=o[u],p=e[i],d=e[c];l.push(pf(p,d,a))}r=r.filter((u,c)=>l[c]<=n)}return s}function wa(e,t){return M(()=>{let[n,a,r]=t,s=Cn([...e.shape.slice(0,3),1],n,"float32"),i=Cn([...e.shape.slice(0,3),1],a,"float32"),o=Cn([...e.shape.slice(0,3),1],r,"float32"),l=Je([s,i,o],3);return me(e,l)})}function mf(e,t=!1){return M(()=>{let[n,a]=e.shape.slice(1);if(n===a)return e;let r=Math.abs(n-a),s=Math.round(r*(t?.5:1)),i=n>a?2:1,o=d=>{let h=e.shape.slice();return h[i]=d,Cn(h,0,"float32")},l=o(s),u=r-l.shape[i],p=[t&&u?o(u):null,e,l].filter(d=>!!d).map(d=>ue(d,"float32"));return Je(p,i)})}function nC(e){let t=e.slice();for(let n=t.length-1;n>0;n--){let a=Math.floor(Math.random()*(n+1)),r=t[n];t[n]=t[a],t[a]=r}return t}function Su(e){return 1/(1+Math.exp(-e))}function aC(e){return Math.log(e/(1-e))}var ro=class extends ot{constructor(t,n,a,r,s=!1){super({x:t,y:n,width:a,height:r},s)}};var Kre=.5,Yre=.43,Jre=.45,jn=class{constructor(t,n,a=new De(0,0)){let{width:r,height:s}=n;this._imgDims=new cn(r,s),this._shift=a,this._positions=t.map(i=>i.mul(new De(r,s)).add(a))}get shift(){return new De(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map(t=>t.sub(this._shift).div(new De(this.imageWidth,this.imageHeight)))}forSize(t,n){return new this.constructor(this.relativePositions,{width:t,height:n})}shiftBy(t,n){return new this.constructor(this.relativePositions,this._imgDims,new De(t,n))}shiftByPoint(t){return this.shiftBy(t.x,t.y)}align(t,n={}){if(t){let s=t instanceof ft?t.box.floor():new ot(t);return this.shiftBy(s.x,s.y).align(null,n)}let{useDlibAlignment:a,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...n};return a?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let t=this.getRefPointsForAlignment(),[n,a,r]=t,s=p=>r.sub(p).magnitude(),i=(s(n)+s(a))/2,o=Math.floor(i/Jre),l=no(t),u=Math.floor(Math.max(0,l.x-Kre*o)),c=Math.floor(Math.max(0,l.y-Yre*o));return new ro(u,c,Math.min(o,this.imageWidth+u),Math.min(o,this.imageHeight+c))}alignMinBbox(t){let n=df(this.positions);return n.pad(n.width*t,n.height*t)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}};var gw=class extends jn{getRefPointsForAlignment(){let t=this.positions;return[t[0],t[1],no([t[3],t[4]])]}};var so=class extends jn{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(no)}};var Cu=class{constructor(t,n){this._label=t,this._distance=n}get label(){return this._label}get distance(){return this._distance}toString(t=!0){return`${this.label}${t?` (${to(this.distance)})`:""}`}};var Au=class extends ot{static assertIsValidLabeledBox(t,n){if(ot.assertIsValidBox(t,n),!La(t.label))throw new Error(`${n} - expected property label (${t.label}) to be a number`)}constructor(t,n){super(t);this._label=n}get label(){return this._label}};var or=class{constructor(t,n){if(typeof t!="string")throw new Error("LabeledFaceDescriptors - constructor expected label to be a string");if(!Array.isArray(n)||n.some(a=>!(a instanceof Float32Array)))throw new Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array");this._label=t,this._descriptors=n}get label(){return this._label}get descriptors(){return this._descriptors}toJSON(){return{label:this.label,descriptors:this.descriptors.map(t=>Array.from(t))}}static fromJSON(t){let n=t.descriptors.map(a=>new Float32Array(a));return new or(t.label,n)}};var yw=class extends Au{static assertIsValidPredictedBox(t,n){if(Au.assertIsValidLabeledBox(t,n),!Tu(t.score)||!Tu(t.classScore))throw new Error(`${n} - expected properties score (${t.score}) and (${t.classScore}) to be a number between [0, 1]`)}constructor(t,n,a,r){super(t,n);this._score=a,this._classScore=r}get score(){return this._score}get classScore(){return this._classScore}};function za(e){return e.detection instanceof ft}function bs(e,t){return{...e,...{detection:t}}}function bw(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function ff(e){let t="";if(!e)try{e=require("fs")}catch(a){t=a.toString()}return{readFile:e?a=>new Promise((r,s)=>{e.readFile(a,(i,o)=>i?s(i):r(o))}):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function xw(){let e=global.Canvas||global.HTMLCanvasElement,t=global.Image||global.HTMLImageElement,n=()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},a=()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},r=global.fetch,s=ff();return{Canvas:e||class{},CanvasRenderingContext2D:global.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:global.ImageData||class{},Video:global.HTMLVideoElement||class{},createCanvasElement:n,createImageElement:a,fetch:r,...s}}function vw(){return typeof window=="object"&&typeof document!="undefined"&&typeof HTMLImageElement!="undefined"&&typeof HTMLCanvasElement!="undefined"&&typeof HTMLVideoElement!="undefined"&&typeof ImageData!="undefined"&&typeof CanvasRenderingContext2D!="undefined"}var ww=hF(sC()),Zt;function ese(){if(!Zt)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return Zt}function kw(e){Zt=e}function Iw(){return vw()?kw(bw()):(0,ww.isNodejs)()?kw(xw()):null}function tse(e){if(Zt||Iw(),!Zt)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=Zt.Canvas,Image:n=Zt.Image}=e;Zt.Canvas=t,Zt.Image=n,Zt.createCanvasElement=e.createCanvasElement||(()=>new t),Zt.createImageElement=e.createImageElement||(()=>new n),Zt.ImageData=e.ImageData||Zt.ImageData,Zt.Video=e.Video||Zt.Video,Zt.fetch=e.fetch||Zt.fetch,Zt.readFile=e.readFile||Zt.readFile}var nt={getEnv:ese,setEnv:kw,initialize:Iw,createBrowserEnv:bw,createFileSystem:ff,createNodejsEnv:xw,monkeyPatch:tse,isBrowser:vw,isNodejs:ww.isNodejs};Iw();function xs(e){return!nt.isNodejs()&&typeof e=="string"?document.getElementById(e):e}function bn(e){let{Canvas:t,CanvasRenderingContext2D:n}=nt.getEnv();if(e instanceof n)return e;let a=xs(e);if(!(a instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let r=a.getContext("2d");if(!r)throw new Error("resolveContext2d - canvas 2d context is null");return r}var lr;(function(e){e.TOP_LEFT="TOP_LEFT",e.TOP_RIGHT="TOP_RIGHT",e.BOTTOM_LEFT="BOTTOM_LEFT",e.BOTTOM_RIGHT="BOTTOM_RIGHT"})(lr||(lr={}));var Cp=class{constructor(t={}){let{anchorPosition:n,backgroundColor:a,fontColor:r,fontSize:s,fontStyle:i,padding:o}=t;this.anchorPosition=n||lr.TOP_LEFT,this.backgroundColor=a||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=s||14,this.fontStyle=i||"Georgia",this.padding=o||4}},vs=class{constructor(t,n,a={}){this.text=typeof t=="string"?[t]:t instanceof vs?t.text:t,this.anchor=n,this.options=new Cp(a)}measureWidth(t){let{padding:n}=this.options;return this.text.map(a=>t.measureText(a).width).reduce((a,r)=>a<r?r:a,0)+2*n}measureHeight(){let{fontSize:t,padding:n}=this.options;return this.text.length*t+2*n}getUpperLeft(t,n){let{anchorPosition:a}=this.options,r=a===lr.BOTTOM_RIGHT||a===lr.TOP_RIGHT,s=a===lr.BOTTOM_LEFT||a===lr.BOTTOM_RIGHT,i=this.measureWidth(t),o=this.measureHeight(),l=r?this.anchor.x-i:this.anchor.x,u=s?this.anchor.y-o:this.anchor.y;if(n){let{width:c,height:p}=n,d=Math.max(Math.min(l,c-i),0),h=Math.max(Math.min(u,p-o),0);return{x:d,y:h}}return{x:l,y:u}}draw(t){let n=xs(t),a=bn(n),{backgroundColor:r,fontColor:s,fontSize:i,fontStyle:o,padding:l}=this.options;a.font=`${i}px ${o}`;let u=this.measureWidth(a),c=this.measureHeight();a.fillStyle=r;let p=this.getUpperLeft(a,n);a.fillRect(p.x,p.y,u,c),a.fillStyle=s,this.text.forEach((d,h)=>{let m=l+p.x,f=l+p.y+(h+1)*i;a.fillText(d,m,f)})}};var Nw=class{constructor(t={}){let{boxColor:n,lineWidth:a,label:r,drawLabelOptions:s}=t;this.boxColor=n||"rgba(0, 0, 255, 1)",this.lineWidth=a||2,this.label=r;let i={anchorPosition:lr.BOTTOM_LEFT,backgroundColor:this.boxColor};this.drawLabelOptions=new Cp({...i,...s})}},gf=class{constructor(t,n={}){this.box=new ot(t),this.options=new Nw(n)}draw(t){let n=bn(t),{boxColor:a,lineWidth:r}=this.options,{x:s,y:i,width:o,height:l}=this.box;n.strokeStyle=a,n.lineWidth=r,n.strokeRect(s,i,o,l);let{label:u}=this.options;u&&new vs([u],{x:s-r/2,y:i},this.options.drawLabelOptions).draw(t)}};function nse(e,t){(Array.isArray(t)?t:[t]).forEach(a=>{let r=a instanceof ft?a.score:za(a)?a.detection.score:void 0,s=a instanceof ft?a.box:za(a)?a.detection.box:new ot(a),i=r?`${to(r)}`:void 0;new gf(s,{label:i}).draw(e)})}function Fu(e){let{Image:t,Video:n}=nt.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function yf(e){return new Promise((t,n)=>{if(e instanceof nt.getEnv().Canvas||Fu(e))return t(null);function a(s){!s.currentTarget||(s.currentTarget.removeEventListener("load",r),s.currentTarget.removeEventListener("error",a),n(s))}function r(s){!s.currentTarget||(s.currentTarget.removeEventListener("load",r),s.currentTarget.removeEventListener("error",a),t(s))}e.addEventListener("load",r),e.addEventListener("error",a)})}function bf(e){return new Promise((t,n)=>{e instanceof Blob||n(new Error("bufferToImage - expected buf to be of type: Blob"));let a=new FileReader;a.onload=()=>{typeof a.result!="string"&&n(new Error("bufferToImage - expected reader.result to be a string, in onload"));let r=nt.getEnv().createImageElement();r.onload=()=>t(r),r.onerror=n,r.src=a.result},a.onerror=n,a.readAsDataURL(e)})}function ws(e){let{Image:t,Video:n}=nt.getEnv();return e instanceof t?new cn(e.naturalWidth,e.naturalHeight):e instanceof n?new cn(e.videoWidth,e.videoHeight):new cn(e.width,e.height)}function ks({width:e,height:t}){let{createCanvasElement:n}=nt.getEnv(),a=n();return a.width=e,a.height=t,a}function _u(e,t){let{ImageData:n}=nt.getEnv();if(!(e instanceof n)&&!Fu(e))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:a,height:r}=t||ws(e),s=ks({width:a,height:r});return e instanceof n?bn(s).putImageData(e,0,0):bn(s).drawImage(e,0,0,a,r),s}async function xf(e,t){let n=t||nt.getEnv().createCanvasElement(),[a,r,s]=e.shape.slice(ra(e)?1:0),i=M(()=>e.as3D(a,r,s).toInt());return await Fi.toPixels(i,n),i.dispose(),n}function Ap(e){let{Image:t,Canvas:n,Video:a}=nt.getEnv();return e instanceof t||e instanceof n||e instanceof a}function vf(e,t,n=!1){let{Image:a,Canvas:r}=nt.getEnv();if(!(e instanceof a||e instanceof r))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return ks({width:1,height:1});let s=ws(e),i=t/Math.max(s.height,s.width),o=i*s.width,l=i*s.height,u=ks({width:t,height:t}),c=e instanceof r?e:_u(e),p=Math.abs(o-l)/2,d=n&&o<l?p:0,h=n&&l<o?p:0;return c.width>0&&c.height>0&&bn(u).drawImage(c,d,h,o,l),u}var ur=class{constructor(t,n=!1){this._imageTensors=[];this._canvases=[];this._treatAsBatchInput=!1;this._inputDimensions=[];if(!Array.isArray(t))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${t}`);this._treatAsBatchInput=n,this._batchSize=t.length,t.forEach((a,r)=>{if(Fr(a)){this._imageTensors[r]=a,this._inputDimensions[r]=a.shape;return}if(ra(a)){let i=a.shape[0];if(i!==1)throw new Error(`NetInput - tf.Tensor4D with batchSize ${i} passed, but not supported in input array`);this._imageTensors[r]=a,this._inputDimensions[r]=a.shape.slice(1);return}let s=a instanceof nt.getEnv().Canvas?a:_u(a);this._canvases[r]=s,this._inputDimensions[r]=[s.height,s.width,3]})}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return ir(this.batchSize,0,1).map((t,n)=>this.getReshapedInputDimensions(n))}getInput(t){return this.canvases[t]||this.imageTensors[t]}getInputDimensions(t){return this._inputDimensions[t]}getInputHeight(t){return this._inputDimensions[t][0]}getInputWidth(t){return this._inputDimensions[t][1]}getReshapedInputDimensions(t){if(typeof this.inputSize!="number")throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");let n=this.getInputWidth(t),a=this.getInputHeight(t);return fw({width:n,height:a},this.inputSize)}toBatchTensor(t,n=!0){return this._inputSize=t,M(()=>{let a=ir(this.batchSize,0,1).map(s=>{let i=this.getInput(s);if(i instanceof Fe){let o=ra(i)?i:i.expandDims();return o=mf(o,n),(o.shape[1]!==t||o.shape[2]!==t)&&(o=Ja.resizeBilinear(o,[t,t])),o.as3D(t,t,3)}if(i instanceof nt.getEnv().Canvas)return Fi.fromPixels(vf(i,t,n));throw new Error(`toBatchTensor - at batchIdx ${s}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${i}`)});return Dt(a.map(s=>ue(s,"float32"))).as4D(this.batchSize,t,t,3)})}};async function mt(e){if(e instanceof ur)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=r=>Array.isArray(e)?` at input index ${r}:`:"",a=t.map(xs);return a.forEach((r,s)=>{if(!Ap(r)&&!Fr(r)&&!ra(r))throw typeof t[s]=="string"?new Error(`toNetInput -${n(s)} string passed, but could not resolve HTMLElement for element id ${t[s]}`):new Error(`toNetInput -${n(s)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(ra(r)){let i=r.shape[0];if(i!==1)throw new Error(`toNetInput -${n(s)} tf.Tensor4D with batchSize ${i} passed, but not supported in input array`)}}),await Promise.all(a.map(r=>Ap(r)&&yf(r))),new ur(a,Array.isArray(e))}async function io(e,t){let{Canvas:n}=nt.getEnv(),a=e;if(!(e instanceof n)){let i=await mt(e);if(i.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let o=i.getInput(0);a=o instanceof n?o:await xf(o)}let r=bn(a);return t.map(i=>i instanceof ft?i.forSize(a.width,a.height).box.floor():i).map(i=>i.clipAtImageBorders(a.width,a.height)).map(({x:i,y:o,width:l,height:u})=>{let c=ks({width:l,height:u});return l>0&&u>0&&bn(c).putImageData(r.getImageData(i,o,l,u),0,0),c})}async function oo(e,t){if(!Fr(e)&&!ra(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(ra(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return M(()=>{let[n,a,r]=e.shape.slice(ra(e)?1:0);return t.map(o=>o instanceof ft?o.forSize(a,n).box:o).map(o=>o.clipAtImageBorders(a,n)).map(({x:o,y:l,width:u,height:c})=>Yl(e.as3D(n,a,r),[l,o,0],[c,u,r]))})}async function Is(e,t){let{fetch:n}=nt.getEnv(),a=await n(e,t);if(!(a.status<400))throw new Error(`failed to fetch: (${a.status}) ${a.statusText}, from url: ${a.url}`);return a}async function iC(e){let t=await Is(e),n=await t.blob();if(!n.type.startsWith("image/"))throw new Error(`fetchImage - expected blob type to be of type image/*, instead have: ${n.type}, for url: ${t.url}`);return bf(n)}async function wf(e){return(await Is(e)).json()}async function oC(e){return new Float32Array(await(await Is(e)).arrayBuffer())}function kf(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if(e==="/")return{modelBaseUri:"/",manifestUri:`/${n}`};let a=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"";e=e.replace(a,"");let r=e.split("/").filter(o=>o),s=e.endsWith(".json")?r[r.length-1]:n,i=a+(e.endsWith(".json")?r.slice(0,r.length-1):r).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:i==="/"?`/${s}`:`${i}/${s}`}}async function If(e,t){let{manifestUri:n,modelBaseUri:a}=kf(e,t),r=await wf(n);return jt.loadWeights(r,a)}function lC(e,t,n=!1){let{width:a,height:r}=n?ws(t):t;return e.width=a,e.height=r,{width:a,height:r}}var en=class{constructor(t){this._params=void 0;this._paramMappings=[];this._name=t}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(t){let{obj:n,objProp:a}=this.traversePropertyPath(t);return n[a]}reassignParamFromPath(t,n){let{obj:a,objProp:r}=this.traversePropertyPath(t);a[r].dispose(),a[r]=n}getParamList(){return this._paramMappings.map(({paramPath:t})=>({path:t,tensor:this.getParamFromPath(t)}))}getTrainableParams(){return this.getParamList().filter(t=>t.tensor instanceof Kr)}getFrozenParams(){return this.getParamList().filter(t=>!(t.tensor instanceof Kr))}variable(){this.getFrozenParams().forEach(({path:t,tensor:n})=>{this.reassignParamFromPath(t,n.variable())})}freeze(){this.getTrainableParams().forEach(({path:t,tensor:n})=>{let a=Jn(n.dataSync());n.dispose(),this.reassignParamFromPath(t,a)})}dispose(t=!0){this.getParamList().forEach(n=>{if(t&&n.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${n.path}`);n.tensor.dispose()}),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map(({tensor:t})=>Array.from(t.dataSync())).reduce((t,n)=>t.concat(n)))}async load(t){if(t instanceof Float32Array){this.extractWeights(t);return}await this.loadFromUri(t)}async loadFromUri(t){if(t&&typeof t!="string")throw new Error(`${this._name}.loadFromUri - expected model uri`);let n=await If(t,this.getDefaultModelName());this.loadFromWeightMap(n)}async loadFromDisk(t){if(t&&typeof t!="string")throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:n}=nt.getEnv(),{manifestUri:a,modelBaseUri:r}=kf(t,this.getDefaultModelName()),s=u=>Promise.all(u.map(c=>n(c).then(p=>p.buffer))),i=jt.weightsLoaderFactory(s),o=JSON.parse((await n(a)).toString()),l=await i(o,r);this.loadFromWeightMap(l)}loadFromWeightMap(t){let{paramMappings:n,params:a}=this.extractParamsFromWeightMap(t);this._paramMappings=n,this._params=a}extractWeights(t){let{paramMappings:n,params:a}=this.extractParams(t);this._paramMappings=n,this._params=a}traversePropertyPath(t){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let n=t.split("/").reduce((s,i)=>{if(!s.nextObj.hasOwnProperty(i))throw new Error(`traversePropertyPath - object does not have property ${i}, for path ${t}`);return{obj:s.nextObj,objProp:i,nextObj:s.nextObj[i]}},{nextObj:this.params}),{obj:a,objProp:r}=n;if(!a||!r||!(a[r]instanceof Fe))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${t}`);return{obj:a,objProp:r}}};function Dn(e,t,n){return M(()=>{let a=Pi(e,t.depthwise_filter,t.pointwise_filter,n,"same");return a=J(a,t.bias),a})}function Nf(e,t,n=!1){return M(()=>{let a=qe(n?J(Et(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):Dn(e,t.conv0,[2,2])),r=Dn(a,t.conv1,[1,1]),s=qe(J(a,r)),i=Dn(s,t.conv2,[1,1]);return qe(J(a,J(r,i)))})}function Fp(e,t,n=!1,a=!0){return M(()=>{let r=qe(n?J(Et(e,t.conv0.filters,a?[2,2]:[1,1],"same"),t.conv0.bias):Dn(e,t.conv0,a?[2,2]:[1,1])),s=Dn(r,t.conv1,[1,1]),i=qe(J(r,s)),o=Dn(i,t.conv2,[1,1]),l=qe(J(r,J(s,o))),u=Dn(l,t.conv3,[1,1]);return qe(J(r,J(s,J(o,u))))})}function lo(e,t,n="same",a=!1){return M(()=>{let r=J(Et(e,t.filters,[1,1],n),t.bias);return a?qe(r):r})}function xn(e,t){Object.keys(e).forEach(n=>{t.some(a=>a.originalPath===n)||e[n].dispose()})}function Eu(e,t){return(n,a,r,s)=>{let i=Aa(e(n*a*r*r),[r,r,n,a]),o=Ze(e(a));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function Tf(e,t){return(n,a,r)=>{let s=Ca(e(n*a),[n,a]),i=Ze(e(a));return t.push({paramPath:`${r}/weights`},{paramPath:`${r}/bias`}),{weights:s,bias:i}}}var Sf=class{constructor(t,n,a){this.depthwise_filter=t;this.pointwise_filter=n;this.bias=a}};function $u(e,t){return(n,a,r)=>{let s=Aa(e(3*3*n),[3,3,n,1]),i=Aa(e(n*a),[1,1,n,a]),o=Ze(e(a));return t.push({paramPath:`${r}/depthwise_filter`},{paramPath:`${r}/pointwise_filter`},{paramPath:`${r}/bias`}),new Sf(s,i,o)}}function Du(e){return t=>{let n=e(`${t}/depthwise_filter`,4),a=e(`${t}/pointwise_filter`,4),r=e(`${t}/bias`,1);return new Sf(n,a,r)}}function qn(e,t){return(n,a,r)=>{let s=e[n];if(!eo(s,a))throw new Error(`expected weightMap[${n}] to be a Tensor${a}D, instead have ${s}`);return t.push({originalPath:n,paramPath:r||n}),s}}function vn(e){let t=e;function n(r){let s=t.slice(0,r);return t=t.slice(r),s}function a(){return t}return{extractWeights:n,getRemainingWeights:a}}function Cf(e,t){let n=Eu(e,t),a=$u(e,t);function r(i,o,l,u=!1){let c=u?n(i,o,3,`${l}/conv0`):a(i,o,`${l}/conv0`),p=a(o,o,`${l}/conv1`),d=a(o,o,`${l}/conv2`);return{conv0:c,conv1:p,conv2:d}}function s(i,o,l,u=!1){let{conv0:c,conv1:p,conv2:d}=r(i,o,l,u),h=a(o,o,`${l}/conv3`);return{conv0:c,conv1:p,conv2:d,conv3:h}}return{extractDenseBlock3Params:r,extractDenseBlock4Params:s}}function uC(e){let t=[],{extractWeights:n,getRemainingWeights:a}=vn(e),{extractDenseBlock4Params:r}=Cf(n,t),s=r(3,32,"dense0",!0),i=r(32,64,"dense1"),o=r(64,128,"dense2"),l=r(128,256,"dense3");if(a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:l}}}function Af(e){return t=>{let n=e(`${t}/filters`,4),a=e(`${t}/bias`,1);return{filters:n,bias:a}}}function Ff(e,t){let n=qn(e,t),a=Af(n),r=Du(n);function s(o,l=!1){let u=l?a(`${o}/conv0`):r(`${o}/conv0`),c=r(`${o}/conv1`),p=r(`${o}/conv2`);return{conv0:u,conv1:c,conv2:p}}function i(o,l=!1){let u=l?a(`${o}/conv0`):r(`${o}/conv0`),c=r(`${o}/conv1`),p=r(`${o}/conv2`),d=r(`${o}/conv3`);return{conv0:u,conv1:c,conv2:p,conv3:d}}return{extractDenseBlock3Params:s,extractDenseBlock4Params:i}}function cC(e){let t=[],{extractDenseBlock4Params:n}=Ff(e,t),a={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return xn(e,t),{params:a,paramMappings:t}}var _p=class extends en{constructor(){super("FaceFeatureExtractor")}forwardInput(t){let{params:n}=this;if(!n)throw new Error("FaceFeatureExtractor - load model before inference");return M(()=>{let a=ue(t.toBatchTensor(112,!0),"float32"),s=wa(a,[122.782,117.001,104.298]).div(ce(255)),i=Fp(s,n.dense0,!0);return i=Fp(i,n.dense1),i=Fp(i,n.dense2),i=Fp(i,n.dense3),i=Zn(i,[7,7],[2,2],"valid"),i})}async forward(t){return this.forwardInput(await mt(t))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(t){return cC(t)}extractParams(t){return uC(t)}};function Ep(e,t){return M(()=>J(ze(e,t.weights),t.bias))}function pC(e,t,n){let a=[],{extractWeights:r,getRemainingWeights:s}=vn(e),o=Tf(r,a)(t,n,"fc");if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:a,params:{fc:o}}}function dC(e){let t=[],n=qn(e,t);function a(s){let i=n(`${s}/weights`,2),o=n(`${s}/bias`,1);return{weights:i,bias:o}}let r={fc:a("fc")};return xn(e,t),{params:r,paramMappings:t}}function _f(e){let t={},n={};return Object.keys(e).forEach(a=>{let r=a.startsWith("fc")?n:t;r[a]=e[a]}),{featureExtractorMap:t,classifierMap:n}}var $p=class extends en{constructor(t,n){super(t);this._faceFeatureExtractor=n}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(t){let{params:n}=this;if(!n)throw new Error(`${this._name} - load model before inference`);return M(()=>{let a=t instanceof ur?this.faceFeatureExtractor.forwardInput(t):t;return Ep(a.as2D(a.shape[0],-1),n.fc)})}dispose(t=!0){this.faceFeatureExtractor.dispose(t),super.dispose(t)}loadClassifierParams(t){let{params:n,paramMappings:a}=this.extractClassifierParams(t);this._params=n,this._paramMappings=a}extractClassifierParams(t){return pC(t,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(t){let{featureExtractorMap:n,classifierMap:a}=_f(t);return this.faceFeatureExtractor.loadFromWeightMap(n),dC(a)}extractParams(t){let n=this.getClassifierChannelsIn(),a=this.getClassifierChannelsOut(),r=a*n+a,s=t.slice(0,t.length-r),i=t.slice(t.length-r);return this.faceFeatureExtractor.extractWeights(s),this.extractClassifierParams(i)}};var Ef=["neutral","happy","sad","angry","fearful","disgusted","surprised"],Er=class{constructor(t){if(t.length!==7)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${t.length}`);Ef.forEach((n,a)=>{this[n]=t[a]})}asSortedArray(){return Ef.map(t=>({expression:t,probability:this[t]})).sort((t,n)=>n.probability-t.probability)}};var Dp=class extends $p{constructor(t=new _p){super("FaceExpressionNet",t)}forwardInput(t){return M(()=>Sa(this.runNet(t)))}async forward(t){return this.forwardInput(await mt(t))}async predictExpressions(t){let n=await mt(t),a=await this.forwardInput(n),r=await Promise.all(ct(a).map(async i=>{let o=await i.data();return i.dispose(),o}));a.dispose();let s=r.map(i=>new Er(i));return n.isBatchInput?s:s[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function $f(e){return e.expressions instanceof Er}function Mp(e,t){return{...e,...{expressions:t}}}function ase(e,t,n=.1,a){(Array.isArray(t)?t:[t]).forEach(s=>{let i=s instanceof Er?s:$f(s)?s.expressions:void 0;if(!i)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let l=i.asSortedArray().filter(p=>p.probability>n),u=za(s)?s.detection.box.bottomLeft:a||new De(0,0);new vs(l.map(p=>`${p.expression} (${to(p.probability)})`),u).draw(e)})}function Ns(e){return za(e)&&e.landmarks instanceof jn&&e.unshiftedLandmarks instanceof jn&&e.alignedRect instanceof ft}function rse(e){let t=(o,l,u,c)=>Math.atan2(c-l,u-o)%Math.PI,n=o=>o*180/Math.PI,a={roll:void 0,pitch:void 0,yaw:void 0};if(!e||!e._positions||e._positions.length!==68)return a;let r=e._positions;a.roll=-t(r[36]._x,r[36]._y,r[45]._x,r[45]._y),a.pitch=t(0,Math.abs(r[0]._x-r[30]._x)/r[30]._x,Math.PI,Math.abs(r[16]._x-r[30]._x)/r[30]._x);let s=r.reduce((o,l)=>o<l._y?o:l._y,Infinity),i=r.reduce((o,l)=>o>l._y?o:l._y,-Infinity);return a.yaw=Math.PI*(e._imgDims._height/(i-s)/1.4-1),a}function uo(e,t){let{box:n}=e.detection,a=t.shiftBy(n.x,n.y),r=a.align(),{imageDims:s}=e.detection,i=new ft(e.detection.score,r.rescale(s.reverse()),s),o=rse(t);return{...e,...{landmarks:a,unshiftedLandmarks:t,alignedRect:i,angle:o}}}var Tw=class{constructor(t={}){let{drawLines:n=!0,drawPoints:a=!0,lineWidth:r,lineColor:s,pointSize:i,pointColor:o}=t;this.drawLines=n,this.drawPoints=a,this.lineWidth=r||1,this.pointSize=i||2,this.lineColor=s||"rgba(0, 255, 255, 1)",this.pointColor=o||"rgba(255, 0, 255, 1)"}},Sw=class{constructor(t,n={}){this.faceLandmarks=t,this.options=new Tw(n)}draw(t){let n=bn(t),{drawLines:a,drawPoints:r,lineWidth:s,lineColor:i,pointSize:o,pointColor:l}=this.options;if(a&&this.faceLandmarks instanceof so&&(n.strokeStyle=i,n.lineWidth=s,Ar(n,this.faceLandmarks.getJawOutline()),Ar(n,this.faceLandmarks.getLeftEyeBrow()),Ar(n,this.faceLandmarks.getRightEyeBrow()),Ar(n,this.faceLandmarks.getNose()),Ar(n,this.faceLandmarks.getLeftEye(),!0),Ar(n,this.faceLandmarks.getRightEye(),!0),Ar(n,this.faceLandmarks.getMouth(),!0)),r){n.strokeStyle=l,n.fillStyle=l;let u=c=>{n.beginPath(),n.arc(c.x,c.y,o,0,2*Math.PI),n.fill()};this.faceLandmarks.positions.forEach(u)}}};function sse(e,t){(Array.isArray(t)?t:[t]).forEach(a=>{let r=a instanceof jn?a:Ns(a)?a.landmarks:void 0;if(!r)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new Sw(r).draw(e)})}var hC="1.1.2";function ise(e,t){let n=Eu(e,t),a=$u(e,t);function r(i,o,l){let u=a(i,o,`${l}/separable_conv0`),c=a(o,o,`${l}/separable_conv1`),p=n(i,o,1,`${l}/expansion_conv`);return{separable_conv0:u,separable_conv1:c,expansion_conv:p}}function s(i,o){let l=a(i,i,`${o}/separable_conv0`),u=a(i,i,`${o}/separable_conv1`),c=a(i,i,`${o}/separable_conv2`);return{separable_conv0:l,separable_conv1:u,separable_conv2:c}}return{extractConvParams:n,extractSeparableConvParams:a,extractReductionBlockParams:r,extractMainBlockParams:s}}function mC(e,t){let n=[],{extractWeights:a,getRemainingWeights:r}=vn(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:l}=ise(a,n),u=s(3,32,3,"entry_flow/conv_in"),c=o(32,64,"entry_flow/reduction_block_0"),p=o(64,128,"entry_flow/reduction_block_1"),d={conv_in:u,reduction_block_0:c,reduction_block_1:p},h={};ir(t,0,1).forEach(y=>{h[`main_block_${y}`]=l(128,`middle_flow/main_block_${y}`)});let m=o(128,256,"exit_flow/reduction_block"),f=i(256,512,"exit_flow/separable_conv"),g={reduction_block:m,separable_conv:f};if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:n,params:{entry_flow:d,middle_flow:h,exit_flow:g}}}function ose(e,t){let n=qn(e,t),a=Af(n),r=Du(n);function s(o){let l=r(`${o}/separable_conv0`),u=r(`${o}/separable_conv1`),c=a(`${o}/expansion_conv`);return{separable_conv0:l,separable_conv1:u,expansion_conv:c}}function i(o){let l=r(`${o}/separable_conv0`),u=r(`${o}/separable_conv1`),c=r(`${o}/separable_conv2`);return{separable_conv0:l,separable_conv1:u,separable_conv2:c}}return{extractConvParams:a,extractSeparableConvParams:r,extractReductionBlockParams:s,extractMainBlockParams:i}}function fC(e,t){let n=[],{extractConvParams:a,extractSeparableConvParams:r,extractReductionBlockParams:s,extractMainBlockParams:i}=ose(e,n),o=a("entry_flow/conv_in"),l=s("entry_flow/reduction_block_0"),u=s("entry_flow/reduction_block_1"),c={conv_in:o,reduction_block_0:l,reduction_block_1:u},p={};ir(t,0,1).forEach(f=>{p[`main_block_${f}`]=i(`middle_flow/main_block_${f}`)});let d=s("exit_flow/reduction_block"),h=r("exit_flow/separable_conv"),m={reduction_block:d,separable_conv:h};return xn(e,n),{params:{entry_flow:c,middle_flow:p,exit_flow:m},paramMappings:n}}function gC(e,t,n){return J(Et(e,t.filters,n,"same"),t.bias)}function Aw(e,t,n=!0){let a=n?qe(e):e;return a=Dn(a,t.separable_conv0,[1,1]),a=Dn(qe(a),t.separable_conv1,[1,1]),a=$t(a,[3,3],[2,2],"same"),a=J(a,gC(e,t.expansion_conv,[2,2])),a}function lse(e,t){let n=Dn(qe(e),t.separable_conv0,[1,1]);return n=Dn(qe(n),t.separable_conv1,[1,1]),n=Dn(qe(n),t.separable_conv2,[1,1]),n=J(n,e),n}var Fw=class extends en{constructor(t){super("TinyXception");this._numMainBlocks=t}forwardInput(t){let{params:n}=this;if(!n)throw new Error("TinyXception - load model before inference");return M(()=>{let a=ue(t.toBatchTensor(112,!0),"float32"),s=wa(a,[122.782,117.001,104.298]).div(ce(256)),i=qe(gC(s,n.entry_flow.conv_in,[2,2]));return i=Aw(i,n.entry_flow.reduction_block_0,!1),i=Aw(i,n.entry_flow.reduction_block_1),ir(this._numMainBlocks,0,1).forEach(o=>{i=lse(i,n.middle_flow[`main_block_${o}`])}),i=Aw(i,n.exit_flow.reduction_block),i=qe(Dn(i,n.exit_flow.separable_conv,[1,1])),i})}async forward(t){return this.forwardInput(await mt(t))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(t){return fC(t,this._numMainBlocks)}extractParams(t){return mC(t,this._numMainBlocks)}};function yC(e){let t=[],{extractWeights:n,getRemainingWeights:a}=vn(e),r=Tf(n,t),s=r(512,1,"fc/age"),i=r(512,2,"fc/gender");if(a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}function bC(e){let t=[],n=qn(e,t);function a(s){let i=n(`${s}/weights`,2),o=n(`${s}/bias`,1);return{weights:i,bias:o}}let r={fc:{age:a("fc/age"),gender:a("fc/gender")}};return xn(e,t),{params:r,paramMappings:t}}var cr;(function(e){e.FEMALE="female",e.MALE="male"})(cr||(cr={}));var Rp=class extends en{constructor(t=new Fw(2)){super("AgeGenderNet");this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(t){let{params:n}=this;if(!n)throw new Error(`${this._name} - load model before inference`);return M(()=>{let a=t instanceof ur?this.faceFeatureExtractor.forwardInput(t):t,r=Zn(a,[7,7],[2,2],"valid").as2D(a.shape[0],-1),s=Ep(r,n.fc.age).as1D(),i=Ep(r,n.fc.gender);return{age:s,gender:i}})}forwardInput(t){return M(()=>{let{age:n,gender:a}=this.runNet(t);return{age:n,gender:Sa(a)}})}async forward(t){return this.forwardInput(await mt(t))}async predictAgeAndGender(t){let n=await mt(t),a=await this.forwardInput(n),r=ct(a.age),s=ct(a.gender),i=r.map((l,u)=>({ageTensor:l,genderTensor:s[u]})),o=await Promise.all(i.map(async({ageTensor:l,genderTensor:u})=>{let c=(await l.data())[0],p=(await u.data())[0],d=p>.5,h=d?cr.MALE:cr.FEMALE,m=d?p:1-p;return l.dispose(),u.dispose(),{age:c,gender:h,genderProbability:m}}));return a.age.dispose(),a.gender.dispose(),n.isBatchInput?o:o[0]}getDefaultModelName(){return"age_gender_model"}dispose(t=!0){this.faceFeatureExtractor.dispose(t),super.dispose(t)}loadClassifierParams(t){let{params:n,paramMappings:a}=this.extractClassifierParams(t);this._params=n,this._paramMappings=a}extractClassifierParams(t){return yC(t)}extractParamsFromWeightMap(t){let{featureExtractorMap:n,classifierMap:a}=_f(t);return this.faceFeatureExtractor.loadFromWeightMap(n),bC(a)}extractParams(t){let n=512*1+1+(512*2+2),a=t.slice(0,t.length-n),r=t.slice(t.length-n);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(r)}};var Pp=class extends $p{postProcess(t,n,a){let r=a.map(({width:i,height:o})=>{let l=n/Math.max(o,i);return{width:i*l,height:o*l}}),s=r.length;return M(()=>{let i=(p,d)=>Dt([Cn([68],p,"float32"),Cn([68],d,"float32")],1).as2D(1,136).as1D(),o=(p,d)=>{let{width:h,height:m}=r[p];return d(h,m)?Math.abs(h-m)/2:0},l=p=>o(p,(d,h)=>d<h),u=p=>o(p,(d,h)=>h<d);return t.mul(Cn([s,136],n,"float32")).sub(Dt(Array.from(Array(s),(p,d)=>i(l(d),u(d))))).div(Dt(Array.from(Array(s),(p,d)=>i(r[d].width,r[d].height))))})}forwardInput(t){return M(()=>{let n=this.runNet(t);return this.postProcess(n,t.inputSize,t.inputDimensions.map(([a,r])=>({height:a,width:r})))})}async forward(t){return this.forwardInput(await mt(t))}async detectLandmarks(t){let n=await mt(t),a=M(()=>ct(this.forwardInput(n))),r=await Promise.all(a.map(async(s,i)=>{let o=Array.from(await s.data()),l=o.filter((c,p)=>uf(p)),u=o.filter((c,p)=>!uf(p));return new so(Array(68).fill(0).map((c,p)=>new De(l[p],u[p])),{height:n.getInputHeight(i),width:n.getInputWidth(i)})}));return a.forEach(s=>s.dispose()),n.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}};var co=class extends Pp{constructor(t=new _p){super("FaceLandmark68Net",t)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};function xC(e){let t=[],{extractDenseBlock3Params:n}=Ff(e,t),a={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return xn(e,t),{params:a,paramMappings:t}}function vC(e){let t=[],{extractWeights:n,getRemainingWeights:a}=vn(e),{extractDenseBlock3Params:r}=Cf(n,t),s=r(3,32,"dense0",!0),i=r(32,64,"dense1"),o=r(64,128,"dense2");if(a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}var _w=class extends en{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(t){let{params:n}=this;if(!n)throw new Error("TinyFaceFeatureExtractor - load model before inference");return M(()=>{let a=ue(t.toBatchTensor(112,!0),"float32"),s=wa(a,[122.782,117.001,104.298]).div(ce(255)),i=Nf(s,n.dense0,!0);return i=Nf(i,n.dense1),i=Nf(i,n.dense2),i=Zn(i,[14,14],[2,2],"valid"),i})}async forward(t){return this.forwardInput(await mt(t))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(t){return xC(t)}extractParams(t){return vC(t)}};var Op=class extends Pp{constructor(t=new _w){super("FaceLandmark68TinyNet",t)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}};var Ew=class extends co{};function wC(e,t){return J(B(e,t.weights),t.biases)}function $w(e,t,n,a,r="same"){let{filters:s,bias:i}=t.conv,o=Et(e,s,n,r);return o=J(o,i),o=wC(o,t.scale),a?qe(o):o}function kC(e,t){return $w(e,t,[1,1],!0)}function Dw(e,t){return $w(e,t,[1,1],!1)}function Df(e,t){return $w(e,t,[2,2],!0,"valid")}function use(e,t){function n(o,l,u){let c=e(o),p=c.length/(l*u*u);if(mw(p))throw new Error(`depth has to be an integer: ${p}, weights.length: ${c.length}, numFilters: ${l}, filterSize: ${u}`);return M(()=>Ve(Aa(c,[l,p,u,u]),[2,3,1,0]))}function a(o,l,u,c){let p=n(o,l,u),d=Ze(e(l));return t.push({paramPath:`${c}/filters`},{paramPath:`${c}/bias`}),{filters:p,bias:d}}function r(o,l){let u=Ze(e(o)),c=Ze(e(o));return t.push({paramPath:`${l}/weights`},{paramPath:`${l}/biases`}),{weights:u,biases:c}}function s(o,l,u,c){let p=a(o,l,u,`${c}/conv`),d=r(l,`${c}/scale`);return{conv:p,scale:d}}function i(o,l,u,c,p=!1){let d=s((p?.5:1)*o,l,u,`${c}/conv1`),h=s(o,l,u,`${c}/conv2`);return{conv1:d,conv2:h}}return{extractConvLayerParams:s,extractResidualLayerParams:i}}function IC(e){let{extractWeights:t,getRemainingWeights:n}=vn(e),a=[],{extractConvLayerParams:r,extractResidualLayerParams:s}=use(t,a),i=r(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),u=s(9216,32,3,"conv32_3"),c=s(36864,64,3,"conv64_down",!0),p=s(36864,64,3,"conv64_1"),d=s(36864,64,3,"conv64_2"),h=s(36864,64,3,"conv64_3"),m=s(147456,128,3,"conv128_down",!0),f=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),v=s(589824,256,3,"conv256_down_out"),k=M(()=>Ve(Ca(t(256*128),[128,256]),[1,0]));if(a.push({paramPath:"fc"}),n().length!==0)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:l,conv32_3:u,conv64_down:c,conv64_1:p,conv64_2:d,conv64_3:h,conv128_down:m,conv128_1:f,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:v,fc:k},paramMappings:a}}function cse(e,t){let n=qn(e,t);function a(i){let o=n(`${i}/scale/weights`,1),l=n(`${i}/scale/biases`,1);return{weights:o,biases:l}}function r(i){let o=n(`${i}/conv/filters`,4),l=n(`${i}/conv/bias`,1),u=a(i);return{conv:{filters:o,bias:l},scale:u}}function s(i){return{conv1:r(`${i}/conv1`),conv2:r(`${i}/conv2`)}}return{extractConvLayerParams:r,extractResidualLayerParams:s}}function NC(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:a}=cse(e,t),r=n("conv32_down"),s=a("conv32_1"),i=a("conv32_2"),o=a("conv32_3"),l=a("conv64_down"),u=a("conv64_1"),c=a("conv64_2"),p=a("conv64_3"),d=a("conv128_down"),h=a("conv128_1"),m=a("conv128_2"),f=a("conv256_down"),g=a("conv256_1"),y=a("conv256_2"),b=a("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!hw(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);let v={conv32_down:r,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:l,conv64_1:u,conv64_2:c,conv64_3:p,conv128_down:d,conv128_1:h,conv128_2:m,conv256_down:f,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return xn(e,t),{params:v,paramMappings:t}}function Wa(e,t){let n=kC(e,t.conv1);return n=Dw(n,t.conv2),n=J(n,e),n=qe(n),n}function Lp(e,t){let n=Df(e,t.conv1);n=Dw(n,t.conv2);let a=Zn(e,2,2,"valid"),r=vt(a.shape),s=a.shape[3]!==n.shape[3];if(a.shape[1]!==n.shape[1]||a.shape[2]!==n.shape[2]){let o=[...n.shape];o[1]=1;let l=vt(o);n=Je([n,l],1);let u=[...n.shape];u[2]=1;let c=vt(u);n=Je([n,c],2)}return a=s?Je([a,r],3):a,n=J(a,n),n=qe(n),n}var po=class extends en{constructor(){super("FaceRecognitionNet")}forwardInput(t){let{params:n}=this;if(!n)throw new Error("FaceRecognitionNet - load model before inference");return M(()=>{let a=ue(t.toBatchTensor(150,!0),"float32"),s=wa(a,[122.782,117.001,104.298]).div(ce(256)),i=Df(s,n.conv32_down);i=$t(i,3,2,"valid"),i=Wa(i,n.conv32_1),i=Wa(i,n.conv32_2),i=Wa(i,n.conv32_3),i=Lp(i,n.conv64_down),i=Wa(i,n.conv64_1),i=Wa(i,n.conv64_2),i=Wa(i,n.conv64_3),i=Lp(i,n.conv128_down),i=Wa(i,n.conv128_1),i=Wa(i,n.conv128_2),i=Lp(i,n.conv256_down),i=Wa(i,n.conv256_1),i=Wa(i,n.conv256_2),i=Lp(i,n.conv256_down_out);let o=i.mean([1,2]);return ze(o,n.fc)})}async forward(t){return this.forwardInput(await mt(t))}async computeFaceDescriptor(t){var s;if((s=t==null?void 0:t.shape)==null?void 0:s.some(i=>i<=0))return new Float32Array(128);let n=await mt(t),a=M(()=>ct(this.forwardInput(n))),r=await Promise.all(a.map(i=>i.data()));return a.forEach(i=>i.dispose()),n.isBatchInput?r:r[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(t){return NC(t)}extractParams(t){return IC(t)}};function TC(e){let t=new po;return t.extractWeights(e),t}function zp(e,t){return{...e,...{descriptor:t}}}function SC(e){return typeof e.age=="number"}function Wp(e,t){return{...e,...{age:t}}}function CC(e){return(e.gender===cr.MALE||e.gender===cr.FEMALE)&&Tu(e.genderProbability)}function Bp(e,t,n){return{...e,...{gender:t,genderProbability:n}}}function pse(e,t){function n(l,u){let c=Aa(e(3*3*l),[3,3,l,1]),p=Ze(e(l)),d=Ze(e(l)),h=Ze(e(l)),m=Ze(e(l));return t.push({paramPath:`${u}/filters`},{paramPath:`${u}/batch_norm_scale`},{paramPath:`${u}/batch_norm_offset`},{paramPath:`${u}/batch_norm_mean`},{paramPath:`${u}/batch_norm_variance`}),{filters:c,batch_norm_scale:p,batch_norm_offset:d,batch_norm_mean:h,batch_norm_variance:m}}function a(l,u,c,p,d){let h=Aa(e(l*u*c*c),[c,c,l,u]),m=Ze(e(u));return t.push({paramPath:`${p}/filters`},{paramPath:`${p}/${d?"batch_norm_offset":"bias"}`}),{filters:h,bias:m}}function r(l,u,c,p){let{filters:d,bias:h}=a(l,u,c,p,!0);return{filters:d,batch_norm_offset:h}}function s(l,u,c){let p=n(l,`${c}/depthwise_conv`),d=r(l,u,1,`${c}/pointwise_conv`);return{depthwise_conv:p,pointwise_conv:d}}function i(){let l=r(3,32,3,"mobilenetv1/conv_0"),u=s(32,64,"mobilenetv1/conv_1"),c=s(64,128,"mobilenetv1/conv_2"),p=s(128,128,"mobilenetv1/conv_3"),d=s(128,256,"mobilenetv1/conv_4"),h=s(256,256,"mobilenetv1/conv_5"),m=s(256,512,"mobilenetv1/conv_6"),f=s(512,512,"mobilenetv1/conv_7"),g=s(512,512,"mobilenetv1/conv_8"),y=s(512,512,"mobilenetv1/conv_9"),b=s(512,512,"mobilenetv1/conv_10"),x=s(512,512,"mobilenetv1/conv_11"),v=s(512,1024,"mobilenetv1/conv_12"),k=s(1024,1024,"mobilenetv1/conv_13");return{conv_0:l,conv_1:u,conv_2:c,conv_3:p,conv_4:d,conv_5:h,conv_6:m,conv_7:f,conv_8:g,conv_9:y,conv_10:b,conv_11:x,conv_12:v,conv_13:k}}function o(){let l=r(1024,256,1,"prediction_layer/conv_0"),u=r(256,512,3,"prediction_layer/conv_1"),c=r(512,128,1,"prediction_layer/conv_2"),p=r(128,256,3,"prediction_layer/conv_3"),d=r(256,128,1,"prediction_layer/conv_4"),h=r(128,256,3,"prediction_layer/conv_5"),m=r(256,64,1,"prediction_layer/conv_6"),f=r(64,128,3,"prediction_layer/conv_7"),g=a(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),y=a(512,9,1,"prediction_layer/box_predictor_0/class_predictor"),b=a(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),x=a(1024,18,1,"prediction_layer/box_predictor_1/class_predictor"),v=a(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),k=a(512,18,1,"prediction_layer/box_predictor_2/class_predictor"),w=a(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),S=a(256,18,1,"prediction_layer/box_predictor_3/class_predictor"),A=a(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),F=a(256,18,1,"prediction_layer/box_predictor_4/class_predictor"),D=a(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),R=a(128,18,1,"prediction_layer/box_predictor_5/class_predictor");return{conv_0:l,conv_1:u,conv_2:c,conv_3:p,conv_4:d,conv_5:h,conv_6:m,conv_7:f,box_predictor_0:{box_encoding_predictor:g,class_predictor:y},box_predictor_1:{box_encoding_predictor:b,class_predictor:x},box_predictor_2:{box_encoding_predictor:v,class_predictor:k},box_predictor_3:{box_encoding_predictor:w,class_predictor:S},box_predictor_4:{box_encoding_predictor:A,class_predictor:F},box_predictor_5:{box_encoding_predictor:D,class_predictor:R}}}return{extractMobilenetV1Params:i,extractPredictionLayerParams:o}}function AC(e){let t=[],{extractWeights:n,getRemainingWeights:a}=vn(e),{extractMobilenetV1Params:r,extractPredictionLayerParams:s}=pse(n,t),i=r(),o=s(),u={extra_dim:dh(n(5118*4),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:u},paramMappings:t}}function dse(e,t){let n=qn(e,t);function a(u,c,p){let d=n(`${u}/Conv2d_${c}_pointwise/weights`,4,`${p}/filters`),h=n(`${u}/Conv2d_${c}_pointwise/convolution_bn_offset`,1,`${p}/batch_norm_offset`);return{filters:d,batch_norm_offset:h}}function r(u){let c=`mobilenetv1/conv_${u}`,p=`MobilenetV1/Conv2d_${u}_depthwise`,d=`${c}/depthwise_conv`,h=`${c}/pointwise_conv`,m=n(`${p}/depthwise_weights`,4,`${d}/filters`),f=n(`${p}/BatchNorm/gamma`,1,`${d}/batch_norm_scale`),g=n(`${p}/BatchNorm/beta`,1,`${d}/batch_norm_offset`),y=n(`${p}/BatchNorm/moving_mean`,1,`${d}/batch_norm_mean`),b=n(`${p}/BatchNorm/moving_variance`,1,`${d}/batch_norm_variance`);return{depthwise_conv:{filters:m,batch_norm_scale:f,batch_norm_offset:g,batch_norm_mean:y,batch_norm_variance:b},pointwise_conv:a("MobilenetV1",u,h)}}function s(){return{conv_0:a("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:r(1),conv_2:r(2),conv_3:r(3),conv_4:r(4),conv_5:r(5),conv_6:r(6),conv_7:r(7),conv_8:r(8),conv_9:r(9),conv_10:r(10),conv_11:r(11),conv_12:r(12),conv_13:r(13)}}function i(u,c){let p=n(`${u}/weights`,4,`${c}/filters`),d=n(`${u}/biases`,1,`${c}/bias`);return{filters:p,bias:d}}function o(u){let c=i(`Prediction/BoxPredictor_${u}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${u}/box_encoding_predictor`),p=i(`Prediction/BoxPredictor_${u}/ClassPredictor`,`prediction_layer/box_predictor_${u}/class_predictor`);return{box_encoding_predictor:c,class_predictor:p}}function l(){return{conv_0:a("Prediction",0,"prediction_layer/conv_0"),conv_1:a("Prediction",1,"prediction_layer/conv_1"),conv_2:a("Prediction",2,"prediction_layer/conv_2"),conv_3:a("Prediction",3,"prediction_layer/conv_3"),conv_4:a("Prediction",4,"prediction_layer/conv_4"),conv_5:a("Prediction",5,"prediction_layer/conv_5"),conv_6:a("Prediction",6,"prediction_layer/conv_6"),conv_7:a("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:o(0),box_predictor_1:o(1),box_predictor_2:o(2),box_predictor_3:o(3),box_predictor_4:o(4),box_predictor_5:o(5)}}return{extractMobilenetV1Params:s,extractPredictionLayerParams:l}}function FC(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:a}=dse(e,t),r=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!Fr(r))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${r}`);let s={mobilenetv1:n(),prediction_layer:a(),output_layer:{extra_dim:r}};return xn(e,t),{params:s,paramMappings:t}}function ka(e,t,n){return M(()=>{let a=Et(e,t.filters,n,"same");return a=J(a,t.batch_norm_offset),Xt(a,0,6)})}var hse=.0010000000474974513;function mse(e,t,n){return M(()=>{let a=ns(e,t.filters,n,"same");return a=br(a,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,hse),Xt(a,0,6)})}function fse(e){return[2,4,6,12].some(t=>t===e)?[2,2]:[1,1]}function _C(e,t){return M(()=>{let n,a=ka(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach((s,i)=>{let o=i+1,l=fse(o);a=mse(a,s.depthwise_conv,l),a=ka(a,s.pointwise_conv,[1,1]),o===11&&(n=a)}),n===null)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:a,conv11:n}})}function gse(e,t,n){let a=e.arraySync(),r=Math.min(a[t][0],a[t][2]),s=Math.min(a[t][1],a[t][3]),i=Math.max(a[t][0],a[t][2]),o=Math.max(a[t][1],a[t][3]),l=Math.min(a[n][0],a[n][2]),u=Math.min(a[n][1],a[n][3]),c=Math.max(a[n][0],a[n][2]),p=Math.max(a[n][1],a[n][3]),d=(i-r)*(o-s),h=(c-l)*(p-u);if(d<=0||h<=0)return 0;let m=Math.max(r,l),f=Math.max(s,u),g=Math.min(i,c),y=Math.min(o,p),b=Math.max(g-m,0)*Math.max(y-f,0);return b/(d+h-b)}function EC(e,t,n,a,r){let s=e.shape[0],i=Math.min(n,s),o=t.map((c,p)=>({score:c,boxIndex:p})).filter(c=>c.score>r).sort((c,p)=>p.score-c.score),l=c=>c<=a?1:0,u=[];return o.forEach(c=>{if(u.length>=i)return;let p=c.score;for(let d=u.length-1;d>=0;--d){let h=gse(e,c.boxIndex,u[d]);if(h!==0&&(c.score*=l(h),c.score<=r))break}p===c.score&&u.push(c.boxIndex)}),u}function yse(e){let t=ct(Ve(e,[1,0])),n=[me(t[2],t[0]),me(t[3],t[1])],a=[J(t[0],xe(n[0],ce(2))),J(t[1],xe(n[1],ce(2)))];return{sizes:n,centers:a}}function bse(e,t){let{sizes:n,centers:a}=yse(e),r=ct(Ve(t,[1,0])),s=xe(B(hn(xe(r[2],ce(5))),n[0]),ce(2)),i=J(B(xe(r[0],ce(10)),n[0]),a[0]),o=xe(B(hn(xe(r[3],ce(5))),n[1]),ce(2)),l=J(B(xe(r[1],ce(10)),n[1]),a[1]);return Ve(Dt([me(i,s),me(l,o),J(i,s),J(l,o)]),[1,0])}function $C(e,t,n){return M(()=>{let a=e.shape[0],r=bse(H(qa(n.extra_dim,[a,1,1]),[-1,4]),H(e,[-1,4]));r=H(r,[a,r.shape[0]/a,4]);let s=da(Be(t,[0,0,1],[-1,-1,-1])),i=Be(s,[0,0,0],[-1,-1,1]);i=H(i,[a,i.shape[1]]);let o=ct(r),l=ct(i);return{boxes:o,scores:l}})}function ho(e,t){return M(()=>{let n=e.shape[0],a=H(lo(e,t.box_encoding_predictor),[n,-1,1,4]),r=H(lo(e,t.class_predictor),[n,-1,3]);return{boxPredictionEncoding:a,classPrediction:r}})}function DC(e,t,n){return M(()=>{let a=ka(e,n.conv_0,[1,1]),r=ka(a,n.conv_1,[2,2]),s=ka(r,n.conv_2,[1,1]),i=ka(s,n.conv_3,[2,2]),o=ka(i,n.conv_4,[1,1]),l=ka(o,n.conv_5,[2,2]),u=ka(l,n.conv_6,[1,1]),c=ka(u,n.conv_7,[2,2]),p=ho(t,n.box_predictor_0),d=ho(e,n.box_predictor_1),h=ho(r,n.box_predictor_2),m=ho(i,n.box_predictor_3),f=ho(l,n.box_predictor_4),g=ho(c,n.box_predictor_5),y=Je([p.boxPredictionEncoding,d.boxPredictionEncoding,h.boxPredictionEncoding,m.boxPredictionEncoding,f.boxPredictionEncoding,g.boxPredictionEncoding],1),b=Je([p.classPrediction,d.classPrediction,h.classPrediction,m.classPrediction,f.classPrediction,g.classPrediction],1);return{boxPredictions:y,classPredictions:b}})}var sa=class{constructor({minConfidence:t,maxResults:n}={}){this._name="SsdMobilenetv1Options";if(this._minConfidence=t||.5,this._maxResults=n||100,typeof this._minConfidence!="number"||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if(typeof this._maxResults!="number")throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}};var Ts=class extends en{constructor(){super("SsdMobilenetv1")}forwardInput(t){let{params:n}=this;if(!n)throw new Error("SsdMobilenetv1 - load model before inference");return M(()=>{let a=ue(t.toBatchTensor(512,!1),"float32"),r=me(B(a,ce(.007843137718737125)),ce(1)),s=_C(r,n.mobilenetv1),{boxPredictions:i,classPredictions:o}=DC(s.out,s.conv11,n.prediction_layer);return $C(i,o,n.output_layer)})}async forward(t){return this.forwardInput(await mt(t))}async locateFaces(t,n={}){let{maxResults:a,minConfidence:r}=new sa(n),s=await mt(t),{boxes:i,scores:o}=this.forwardInput(s),l=i[0],u=o[0];for(let x=1;x<i.length;x++)i[x].dispose(),o[x].dispose();let c=Array.from(await u.data()),d=EC(l,c,a,.5,r),h=s.getReshapedInputDimensions(0),m=s.inputSize,f=m/h.width,g=m/h.height,y=l.arraySync(),b=d.map(x=>{let[v,k]=[Math.max(0,y[x][0]),Math.min(1,y[x][2])].map(A=>A*g),[w,S]=[Math.max(0,y[x][1]),Math.min(1,y[x][3])].map(A=>A*f);return new ft(c[x],new ro(w,v,S-w,k-v),{height:s.getInputHeight(0),width:s.getInputWidth(0)})});return l.dispose(),u.dispose(),b}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(t){return FC(t)}extractParams(t){return AC(t)}};function Mw(e){let t=new Ts;return t.extractWeights(e),t}function MC(e){return Mw(e)}var Rw=class extends Ts{};var RC=.4,PC=[new De(.738768,.874946),new De(2.42204,2.65704),new De(4.30971,7.04493),new De(10.246,4.59428),new De(12.6868,11.8741)],OC=[new De(1.603231,2.094468),new De(6.041143,7.080126),new De(2.882459,3.518061),new De(4.266906,5.178857),new De(9.041765,10.66308)],LC=[117.001,114.697,97.404],zC="tiny_yolov2_model",WC="tiny_yolov2_separable_conv_model";var Mf=e=>typeof e=="number";function Rf(e){if(!e)throw new Error(`invalid config: ${e}`);if(typeof e.withSeparableConvs!="boolean")throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!Mf(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every(t=>typeof t=="string"))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map(t=>t||{}).every(t=>Mf(t.x)&&Mf(t.y)))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||e.meanRgb.length!==3||!e.meanRgb.every(Mf)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}function Mu(e){return M(()=>{let t=B(e,ce(.10000000149011612));return J(qe(me(e,t)),t)})}function $r(e,t){return M(()=>{let n=ta(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Et(n,t.conv.filters,[1,1],"valid"),n=me(n,t.bn.sub),n=B(n,t.bn.truediv),n=J(n,t.conv.bias),Mu(n)})}function Dr(e,t){return M(()=>{let n=ta(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Pi(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=J(n,t.bias),Mu(n)})}function xse(e,t){let n=Eu(e,t);function a(i,o){let l=Ze(e(i)),u=Ze(e(i));return t.push({paramPath:`${o}/sub`},{paramPath:`${o}/truediv`}),{sub:l,truediv:u}}function r(i,o,l){let u=n(i,o,3,`${l}/conv`),c=a(o,`${l}/bn`);return{conv:u,bn:c}}let s=$u(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:r,extractSeparableConvParams:s}}function BC(e,t,n,a){let{extractWeights:r,getRemainingWeights:s}=vn(e),i=[],{extractConvParams:o,extractConvWithBatchNormParams:l,extractSeparableConvParams:u}=xse(r,i),c;if(t.withSeparableConvs){let[p,d,h,m,f,g,y,b,x]=a,v=t.isFirstLayerConv2d?o(p,d,3,"conv0"):u(p,d,"conv0"),k=u(d,h,"conv1"),w=u(h,m,"conv2"),S=u(m,f,"conv3"),A=u(f,g,"conv4"),F=u(g,y,"conv5"),D=b?u(y,b,"conv6"):void 0,R=x?u(b,x,"conv7"):void 0,L=o(x||b||y,5*n,1,"conv8");c={conv0:v,conv1:k,conv2:w,conv3:S,conv4:A,conv5:F,conv6:D,conv7:R,conv8:L}}else{let[p,d,h,m,f,g,y,b,x]=a,v=l(p,d,"conv0"),k=l(d,h,"conv1"),w=l(h,m,"conv2"),S=l(m,f,"conv3"),A=l(f,g,"conv4"),F=l(g,y,"conv5"),D=l(y,b,"conv6"),R=l(b,x,"conv7"),L=o(x,5*n,1,"conv8");c={conv0:v,conv1:k,conv2:w,conv3:S,conv4:A,conv5:F,conv6:D,conv7:R,conv8:L}}if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{params:c,paramMappings:i}}function vse(e,t){let n=qn(e,t);function a(o){let l=n(`${o}/sub`,1),u=n(`${o}/truediv`,1);return{sub:l,truediv:u}}function r(o){let l=n(`${o}/filters`,4),u=n(`${o}/bias`,1);return{filters:l,bias:u}}function s(o){let l=r(`${o}/conv`),u=a(`${o}/bn`);return{conv:l,bn:u}}let i=Du(n);return{extractConvParams:r,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}}function VC(e,t){let n=[],{extractConvParams:a,extractConvWithBatchNormParams:r,extractSeparableConvParams:s}=vse(e,n),i;if(t.withSeparableConvs){let o=t.filterSizes&&t.filterSizes.length||9;i={conv0:t.isFirstLayerConv2d?a("conv0"):s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:o>7?s("conv6"):void 0,conv7:o>8?s("conv7"):void 0,conv8:a("conv8")}}else i={conv0:r("conv0"),conv1:r("conv1"),conv2:r("conv2"),conv3:r("conv3"),conv4:r("conv4"),conv5:r("conv5"),conv6:r("conv6"),conv7:r("conv7"),conv8:a("conv8")};return xn(e,n),{params:i,paramMappings:n}}var Ba=class{constructor({inputSize:t,scoreThreshold:n}={}){this._name="TinyYolov2Options";if(this._inputSize=t||416,this._scoreThreshold=n||.5,typeof this._inputSize!="number"||this._inputSize%32!=0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if(typeof this._scoreThreshold!="number"||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}};var Pw=class extends en{constructor(t){super("TinyYolov2");Rf(t),this._config=t}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(t,n){let a=$r(t,n.conv0);return a=$t(a,[2,2],[2,2],"same"),a=$r(a,n.conv1),a=$t(a,[2,2],[2,2],"same"),a=$r(a,n.conv2),a=$t(a,[2,2],[2,2],"same"),a=$r(a,n.conv3),a=$t(a,[2,2],[2,2],"same"),a=$r(a,n.conv4),a=$t(a,[2,2],[2,2],"same"),a=$r(a,n.conv5),a=$t(a,[2,2],[1,1],"same"),a=$r(a,n.conv6),a=$r(a,n.conv7),lo(a,n.conv8,"valid",!1)}runMobilenet(t,n){let a=this.config.isFirstLayerConv2d?Mu(lo(t,n.conv0,"valid",!1)):Dr(t,n.conv0);return a=$t(a,[2,2],[2,2],"same"),a=Dr(a,n.conv1),a=$t(a,[2,2],[2,2],"same"),a=Dr(a,n.conv2),a=$t(a,[2,2],[2,2],"same"),a=Dr(a,n.conv3),a=$t(a,[2,2],[2,2],"same"),a=Dr(a,n.conv4),a=$t(a,[2,2],[2,2],"same"),a=Dr(a,n.conv5),a=$t(a,[2,2],[1,1],"same"),a=n.conv6?Dr(a,n.conv6):a,a=n.conv7?Dr(a,n.conv7):a,lo(a,n.conv8,"valid",!1)}forwardInput(t,n){let{params:a}=this;if(!a)throw new Error("TinyYolov2 - load model before inference");return M(()=>{let r=ue(t.toBatchTensor(n,!1),"float32");return r=this.config.meanRgb?wa(r,this.config.meanRgb):r,r=r.div(ce(256)),this.config.withSeparableConvs?this.runMobilenet(r,a):this.runTinyYolov2(r,a)})}async forward(t,n){return this.forwardInput(await mt(t),n)}async detect(t,n={}){let{inputSize:a,scoreThreshold:r}=new Ba(n),s=await mt(t),i=await this.forwardInput(s,a),o=M(()=>ct(i)[0].expandDims()),l={width:s.getInputWidth(0),height:s.getInputHeight(0)},u=await this.extractBoxes(o,s.getReshapedInputDimensions(0),r);i.dispose(),o.dispose();let c=u.map(g=>g.box),p=u.map(g=>g.score),d=u.map(g=>g.classScore),h=u.map(g=>this.config.classes[g.label]);return hf(c.map(g=>g.rescale(a)),p,this.config.iouThreshold,!0).map(g=>new _r(p[g],d[g],h[g],c[g],l))}getDefaultModelName(){return""}extractParamsFromWeightMap(t){return VC(t,this.config)}extractParams(t){let n=this.config.filterSizes||Pw.DEFAULT_FILTER_SIZES,a=n?n.length:void 0;if(a!==7&&a!==8&&a!==9)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${a} filterSizes in config`);return BC(t,this.config,this.boxEncodingSize,n)}async extractBoxes(t,n,a){let{width:r,height:s}=n,i=Math.max(r,s),o=i/r,l=i/s,u=t.shape[1],c=this.config.anchors.length,[p,d,h]=M(()=>{let y=t.reshape([u,u,c,this.boxEncodingSize]),b=y.slice([0,0,0,0],[u,u,c,4]),x=y.slice([0,0,0,4],[u,u,c,1]),v=this.withClassScores?Sa(y.slice([0,0,0,5],[u,u,c,this.config.classes.length]),3):ce(0);return[b,x,v]}),m=[],f=await d.array(),g=await p.array();for(let y=0;y<u;y++)for(let b=0;b<u;b++)for(let x=0;x<c;x++){let v=Su(f[y][b][x][0]);if(!a||v>a){let k=(b+Su(g[y][b][x][0]))/u*o,w=(y+Su(g[y][b][x][1]))/u*l,S=Math.exp(g[y][b][x][2])*this.config.anchors[x].x/u*o,A=Math.exp(g[y][b][x][3])*this.config.anchors[x].y/u*l,F=k-S/2,D=w-A/2,R={row:y,col:b,anchor:x},{classScore:L,label:W}=this.withClassScores?await this.extractPredictedClass(h,R):{classScore:1,label:0};m.push({box:new ao(F,D,F+S,D+A),score:v,classScore:v*L,label:W,...R})}}return p.dispose(),d.dispose(),h.dispose(),m}async extractPredictedClass(t,n){let{row:a,col:r,anchor:s}=n,i=await t.array();return Array(this.config.classes.length).fill(0).map((o,l)=>i[a][r][s][l]).map((o,l)=>({classScore:o,label:l})).reduce((o,l)=>o.classScore>l.classScore?o:l)}},Ru=Pw;Ru.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var mo=class extends Ru{constructor(t=!0){let n={withSeparableConvs:t,iouThreshold:RC,classes:["face"],...t?{anchors:OC,meanRgb:LC}:{anchors:PC,withClassScores:!0}};super(n)}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(t,n){return(await this.detect(t,n)).map(r=>new ft(r.score,r.relativeBox,{width:r.imageWidth,height:r.imageHeight}))}getDefaultModelName(){return this.withSeparableConvs?WC:zC}extractParamsFromWeightMap(t){return super.extractParamsFromWeightMap(t)}};function UC(e,t=!0){let n=new mo(t);return n.extractWeights(e),n}var Vp=class extends Ba{constructor(){super(...arguments);this._name="TinyFaceDetectorOptions"}};var ia=class{async then(t){return t(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function fo(e,t,n,a,r=({alignedRect:s})=>s){let s=e.map(l=>Ns(l)?r(l):l.detection),i=a||(t instanceof Fe?await oo(t,s):await io(t,s)),o=await n(i);return i.forEach(l=>l instanceof Fe&&l.dispose()),o}async function Pu(e,t,n,a,r){return fo([e],t,async s=>n(s[0]),a,r)}var GC=.4,HC=[new De(1.603231,2.094468),new De(6.041143,7.080126),new De(2.882459,3.518061),new De(4.266906,5.178857),new De(9.041765,10.66308)],jC=[117.001,114.697,97.404];var go=class extends Ru{constructor(){let t={withSeparableConvs:!0,iouThreshold:GC,classes:["face"],anchors:HC,meanRgb:jC,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]};super(t)}get anchors(){return this.config.anchors}async locateFaces(t,n){return(await this.detect(t,n)).map(r=>new ft(r.score,r.relativeBox,{width:r.imageWidth,height:r.imageHeight}))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(t){return super.extractParamsFromWeightMap(t)}};var Qe={ssdMobilenetv1:new Ts,tinyFaceDetector:new go,tinyYolov2:new mo,faceLandmark68Net:new co,faceLandmark68TinyNet:new Op,faceRecognitionNet:new po,faceExpressionNet:new Dp,ageGenderNet:new Rp},Ow=(e,t)=>Qe.ssdMobilenetv1.locateFaces(e,t),qC=(e,t)=>Qe.tinyFaceDetector.locateFaces(e,t),XC=(e,t)=>Qe.tinyYolov2.locateFaces(e,t),Lw=e=>Qe.faceLandmark68Net.detectLandmarks(e),KC=e=>Qe.faceLandmark68TinyNet.detectLandmarks(e),YC=e=>Qe.faceRecognitionNet.computeFaceDescriptor(e),JC=e=>Qe.faceExpressionNet.predictExpressions(e),QC=e=>Qe.ageGenderNet.predictAgeAndGender(e),zw=e=>Qe.ssdMobilenetv1.load(e),ZC=e=>Qe.tinyFaceDetector.load(e),eA=e=>Qe.tinyYolov2.load(e),tA=e=>Qe.faceLandmark68Net.load(e),nA=e=>Qe.faceLandmark68TinyNet.load(e),aA=e=>Qe.faceRecognitionNet.load(e),rA=e=>Qe.faceExpressionNet.load(e),sA=e=>Qe.ageGenderNet.load(e),iA=zw,oA=Ow,lA=Lw;var Ww=class extends ia{constructor(t,n,a){super();this.parentTask=t;this.input=n;this.extractedFaces=a}},zu=class extends Ww{async run(){let t=await this.parentTask,n=await fo(t,this.input,async a=>Promise.all(a.map(r=>Qe.faceExpressionNet.predictExpressions(r))),this.extractedFaces);return t.map((a,r)=>Mp(a,n[r]))}withAgeAndGender(){return new Ou(this,this.input)}},Wu=class extends Ww{async run(){let t=await this.parentTask;if(!t)return;let n=await Pu(t,this.input,a=>Qe.faceExpressionNet.predictExpressions(a),this.extractedFaces);return Mp(t,n)}withAgeAndGender(){return new Lu(this,this.input)}},xo=class extends zu{withAgeAndGender(){return new yo(this,this.input)}withFaceDescriptors(){return new Mr(this,this.input)}},vo=class extends Wu{withAgeAndGender(){return new bo(this,this.input)}withFaceDescriptor(){return new Rr(this,this.input)}};var Bw=class extends ia{constructor(t,n,a){super();this.parentTask=t;this.input=n;this.extractedFaces=a}},Ou=class extends Bw{async run(){let t=await this.parentTask,n=await fo(t,this.input,async a=>Promise.all(a.map(r=>Qe.ageGenderNet.predictAgeAndGender(r))),this.extractedFaces);return t.map((a,r)=>{let{age:s,gender:i,genderProbability:o}=n[r];return Wp(Bp(a,i,o),s)})}withFaceExpressions(){return new zu(this,this.input)}},Lu=class extends Bw{async run(){let t=await this.parentTask;if(!t)return;let{age:n,gender:a,genderProbability:r}=await Pu(t,this.input,s=>Qe.ageGenderNet.predictAgeAndGender(s),this.extractedFaces);return Wp(Bp(t,a,r),n)}withFaceExpressions(){return new Wu(this,this.input)}},yo=class extends Ou{withFaceExpressions(){return new xo(this,this.input)}withFaceDescriptors(){return new Mr(this,this.input)}},bo=class extends Lu{withFaceExpressions(){return new vo(this,this.input)}withFaceDescriptor(){return new Rr(this,this.input)}};var Up=class extends ia{constructor(t,n){super();this.parentTask=t;this.input=n}},Mr=class extends Up{async run(){let t=await this.parentTask;return(await fo(t,this.input,a=>Promise.all(a.map(r=>Qe.faceRecognitionNet.computeFaceDescriptor(r))),null,a=>a.landmarks.align(null,{useDlibAlignment:!0}))).map((a,r)=>zp(t[r],a))}withFaceExpressions(){return new xo(this,this.input)}withAgeAndGender(){return new yo(this,this.input)}},Rr=class extends Up{async run(){let t=await this.parentTask;if(!t)return;let n=await Pu(t,this.input,a=>Qe.faceRecognitionNet.computeFaceDescriptor(a),null,a=>a.landmarks.align(null,{useDlibAlignment:!0}));return zp(t,n)}withFaceExpressions(){return new vo(this,this.input)}withAgeAndGender(){return new bo(this,this.input)}};var Gp=class extends ia{constructor(t,n,a){super();this.parentTask=t;this.input=n;this.useTinyLandmarkNet=a}get landmarkNet(){return this.useTinyLandmarkNet?Qe.faceLandmark68TinyNet:Qe.faceLandmark68Net}},Hp=class extends Gp{async run(){let t=await this.parentTask,n=t.map(s=>s.detection),a=this.input instanceof Fe?await oo(this.input,n):await io(this.input,n),r=await Promise.all(a.map(s=>this.landmarkNet.detectLandmarks(s)));return a.forEach(s=>s instanceof Fe&&s.dispose()),t.map((s,i)=>uo(s,r[i]))}withFaceExpressions(){return new xo(this,this.input)}withAgeAndGender(){return new yo(this,this.input)}withFaceDescriptors(){return new Mr(this,this.input)}},jp=class extends Gp{async run(){let t=await this.parentTask;if(!t)return;let{detection:n}=t,a=this.input instanceof Fe?await oo(this.input,[n]):await io(this.input,[n]),r=await this.landmarkNet.detectLandmarks(a[0]);return a.forEach(s=>s instanceof Fe&&s.dispose()),uo(t,r)}withFaceExpressions(){return new vo(this,this.input)}withAgeAndGender(){return new bo(this,this.input)}withFaceDescriptor(){return new Rr(this,this.input)}};var qp=class extends ia{constructor(t,n=new sa){super();this.input=t;this.options=n}},Bu=class extends qp{async run(){let{input:t,options:n}=this,a;if(n instanceof Vp)a=Qe.tinyFaceDetector.locateFaces(t,n);else if(n instanceof sa)a=Qe.ssdMobilenetv1.locateFaces(t,n);else if(n instanceof Ba)a=Qe.tinyYolov2.locateFaces(t,n);else throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");return a}runAndExtendWithFaceDetections(){return new Promise(async t=>{let n=await this.run();t(n.map(a=>bs({},a)))})}withFaceLandmarks(t=!1){return new Hp(this.runAndExtendWithFaceDetections(),this.input,t)}withFaceExpressions(){return new zu(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new Ou(this.runAndExtendWithFaceDetections(),this.input)}},Xp=class extends qp{async run(){let t=await new Bu(this.input,this.options),n=t[0];return t.forEach(a=>{a.score>n.score&&(n=a)}),n}runAndExtendWithFaceDetection(){return new Promise(async t=>{let n=await this.run();t(n?bs({},n):void 0)})}withFaceLandmarks(t=!1){return new jp(this.runAndExtendWithFaceDetection(),this.input,t)}withFaceExpressions(){return new Wu(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new Lu(this.runAndExtendWithFaceDetection(),this.input)}};function uA(e,t=new sa){return new Xp(e,t)}function Kp(e,t=new sa){return new Bu(e,t)}async function Vw(e,t){return Kp(e,new sa(t?{minConfidence:t}:{})).withFaceLandmarks().withFaceDescriptors()}async function cA(e,t={}){return Kp(e,new Ba(t)).withFaceLandmarks().withFaceDescriptors()}var pA=Vw;function Pf(e,t){if(e.length!==t.length)throw new Error("euclideanDistance: arr1.length !== arr2.length");let n=Array.from(e),a=Array.from(t);return Math.sqrt(n.map((r,s)=>r-a[s]).reduce((r,s)=>r+s**2,0))}var Yp=class{constructor(t,n=.6){this._distanceThreshold=n;let a=Array.isArray(t)?t:[t];if(!a.length)throw new Error("FaceRecognizer.constructor - expected atleast one input");let r=1,s=()=>`person ${r++}`;this._labeledDescriptors=a.map(i=>{if(i instanceof or)return i;if(i instanceof Float32Array)return new or(s(),[i]);if(i.descriptor&&i.descriptor instanceof Float32Array)return new or(s(),[i.descriptor]);throw new Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>")})}get labeledDescriptors(){return this._labeledDescriptors}get distanceThreshold(){return this._distanceThreshold}computeMeanDistance(t,n){return n.map(a=>Pf(a,t)).reduce((a,r)=>a+r,0)/(n.length||1)}matchDescriptor(t){return this.labeledDescriptors.map(({descriptors:n,label:a})=>new Cu(a,this.computeMeanDistance(t,n))).reduce((n,a)=>n.distance<a.distance?n:a)}findBestMatch(t){let n=this.matchDescriptor(t);return n.distance<this.distanceThreshold?n:new Cu("unknown",n.distance)}toJSON(){return{distanceThreshold:this.distanceThreshold,labeledDescriptors:this.labeledDescriptors.map(t=>t.toJSON())}}static fromJSON(t){let n=t.labeledDescriptors.map(a=>or.fromJSON(a));return new Yp(n,t.distanceThreshold)}};function dA(e){let t=new go;return t.extractWeights(e),t}function Uw(e,t){let{width:n,height:a}=new cn(t.width,t.height);if(n<=0||a<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:a})}`);if(Array.isArray(e))return e.map(r=>Uw(r,{width:n,height:a}));if(Ns(e)){let r=e.detection.forSize(n,a),s=e.unshiftedLandmarks.forSize(r.box.width,r.box.height);return uo(bs(e,r),s)}return za(e)?bs(e,e.detection.forSize(n,a)):e instanceof jn||e instanceof ft?e.forSize(n,a):e}var kse=typeof process!="undefined",Ise=typeof navigator!="undefined"&&typeof navigator.userAgent!="undefined",hA={faceapi:hC,node:kse,browser:Ise};return wse;})();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/** @license See the LICENSE file. */
//# sourceMappingURL=face-api.js.map
