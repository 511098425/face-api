
  /*
  Face-API
  homepage: <https://github.com/vladmandic/face-api>
  author: <https://github.com/vladmandic>'
  */

var hB=Object.create,$h=Object.defineProperty,gB=Object.getPrototypeOf,xB=Object.prototype.hasOwnProperty,yB=Object.getOwnPropertyNames,bB=Object.getOwnPropertyDescriptor;var wB=r=>$h(r,"__esModule",{value:!0});var Wr=(r,e)=>()=>(e||(e={exports:{}},r(e.exports,e)),e.exports),Je=(r,e)=>{for(var t in e)$h(r,t,{get:e[t],enumerable:!0})},_B=(r,e,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of yB(e))!xB.call(r,o)&&o!=="default"&&$h(r,o,{get:()=>e[o],enumerable:!(t=bB(e,o))||t.enumerable});return r},Ic=r=>_B(wB($h(r!=null?hB(gB(r)):{},"default",r&&r.__esModule&&"default"in r?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);var QI=Wr(()=>{});var $N=Wr((DN,Nw)=>{(function(r,e,t){function o(i){var l=this,u=a();l.next=function(){var c=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=c-(l.c=c|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(i),l.s0<0&&(l.s0+=1),l.s1-=u(i),l.s1<0&&(l.s1+=1),l.s2-=u(i),l.s2<0&&(l.s2+=1),u=null}function n(i,l){return l.c=i.c,l.s0=i.s0,l.s1=i.s1,l.s2=i.s2,l}function s(i,l){var u=new o(i),c=l&&l.state,p=u.next;return p.int32=function(){return u.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,c&&(typeof c=="object"&&n(c,u),p.state=function(){return n(u,{})}),p}function a(){var i=4022871197,l=function(u){u=u.toString();for(var c=0;c<u.length;c++){i+=u.charCodeAt(c);var p=.02519603282416938*i;i=p>>>0,p-=i,p*=i,i=p>>>0,p-=i,i+=p*4294967296}return(i>>>0)*23283064365386963e-26};return l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(DN,typeof Nw=="object"&&Nw,typeof define=="function"&&define)});var FN=Wr((RN,Sw)=>{(function(r,e,t){function o(a){var i=this,l="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var c=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^c^c>>>8},a===(a|0)?i.x=a:l+=a;for(var u=0;u<l.length+64;u++)i.x^=l.charCodeAt(u)|0,i.next()}function n(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i}function s(a,i){var l=new o(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&n(u,l),c.state=function(){return n(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(RN,typeof Sw=="object"&&Sw,typeof define=="function"&&define)});var PN=Wr((ON,Tw)=>{(function(r,e,t){function o(a){var i=this,l="";i.next=function(){var c=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(c^c<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,a===(a|0)?i.x=a:l+=a;for(var u=0;u<l.length+64;u++)i.x^=l.charCodeAt(u)|0,u==l.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function n(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i.v=a.v,i.d=a.d,i}function s(a,i){var l=new o(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&n(u,l),c.state=function(){return n(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(ON,typeof Tw=="object"&&Tw,typeof define=="function"&&define)});var LN=Wr((MN,Aw)=>{(function(r,e,t){function o(a){var i=this;i.next=function(){var u=i.x,c=i.i,p,m,f;return p=u[c],p^=p>>>7,m=p^p<<24,p=u[c+1&7],m^=p^p>>>10,p=u[c+3&7],m^=p^p>>>3,p=u[c+4&7],m^=p^p<<7,p=u[c+7&7],p=p^p<<13,m^=p^p<<9,u[c]=m,i.i=c+1&7,m};function l(u,c){var p,m,f=[];if(c===(c|0))m=f[0]=c;else for(c=""+c,p=0;p<c.length;++p)f[p&7]=f[p&7]<<15^c.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8?m=f[7]=-1:m=f[p],u.x=f,u.i=0,p=256;p>0;--p)u.next()}l(i,a)}function n(a,i){return i.x=a.x.slice(),i.i=a.i,i}function s(a,i){a==null&&(a=+new Date);var l=new o(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.x&&n(u,l),c.state=function(){return n(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(MN,typeof Aw=="object"&&Aw,typeof define=="function"&&define)});var BN=Wr((zN,Ew)=>{(function(r,e,t){function o(a){var i=this;i.next=function(){var u=i.w,c=i.X,p=i.i,m,f;return i.w=u=u+1640531527|0,f=c[p+34&127],m=c[p=p+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=c[p]=f^m,i.i=p,f+(u^u>>>16)|0};function l(u,c){var p,m,f,d,h,g=[],y=128;for(c===(c|0)?(m=c,c=null):(c=c+"\0",m=0,y=Math.max(y,c.length)),f=0,d=-32;d<y;++d)c&&(m^=c.charCodeAt((d+32)%c.length)),d===0&&(h=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,d>=0&&(h=h+1640531527|0,p=g[d&127]^=m+h,f=p==0?f+1:0);for(f>=128&&(g[(c&&c.length||0)&127]=-1),f=127,d=4*128;d>0;--d)m=g[f+34&127],p=g[f=f+1&127],m^=m<<13,p^=p<<17,m^=m>>>15,p^=p>>>12,g[f]=m^p;u.w=h,u.X=g,u.i=f}l(i,a)}function n(a,i){return i.i=a.i,i.w=a.w,i.X=a.X.slice(),i}function s(a,i){a==null&&(a=+new Date);var l=new o(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.X&&n(u,l),c.state=function(){return n(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(zN,typeof Ew=="object"&&Ew,typeof define=="function"&&define)});var GN=Wr((VN,Dw)=>{(function(r,e,t){function o(a){var i=this,l="";i.next=function(){var c=i.b,p=i.c,m=i.d,f=i.a;return c=c<<25^c>>>7^p,p=p-m|0,m=m<<24^m>>>8^f,f=f-c|0,i.b=c=c<<20^c>>>12^p,i.c=p=p-m|0,i.d=m<<16^p>>>16^f,i.a=f-c|0},i.a=0,i.b=0,i.c=2654435769|0,i.d=1367130551,a===Math.floor(a)?(i.a=a/4294967296|0,i.b=a|0):l+=a;for(var u=0;u<l.length+20;u++)i.b^=l.charCodeAt(u)|0,i.next()}function n(a,i){return i.a=a.a,i.b=a.b,i.c=a.c,i.d=a.d,i}function s(a,i){var l=new o(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&n(u,l),c.state=function(){return n(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(VN,typeof Dw=="object"&&Dw,typeof define=="function"&&define)});var WN=Wr(()=>{});var UN=Wr((lxe,tg)=>{(function(r,e){var t=this,o=256,n=6,s=52,a="random",i=e.pow(o,n),l=e.pow(2,s),u=l*2,c=o-1,p;function m(w,_,C){var D=[];_=_==!0?{entropy:!0}:_||{};var T=g(h(_.entropy?[w,b(r)]:w==null?y():w,3),D),R=new f(D),P=function(){for(var B=R.g(n),G=i,U=0;B<l;)B=(B+U)*o,G*=o,U=R.g(1);for(;B>=u;)B/=2,G/=2,U>>>=1;return(B+U)/G};return P.int32=function(){return R.g(4)|0},P.quick=function(){return R.g(4)/4294967296},P.double=P,g(b(R.S),r),(_.pass||C||function(B,G,U,j){return j&&(j.S&&d(j,R),B.state=function(){return d(R,{})}),U?(e[a]=B,G):B})(P,T,"global"in _?_.global:this==e,_.state)}e["seed"+a]=m;function f(w){var _,C=w.length,D=this,T=0,R=D.i=D.j=0,P=D.S=[];for(C||(w=[C++]);T<o;)P[T]=T++;for(T=0;T<o;T++)P[T]=P[R=c&R+w[T%C]+(_=P[T])],P[R]=_;(D.g=function(B){for(var G,U=0,j=D.i,H=D.j,K=D.S;B--;)G=K[j=c&j+1],U=U*o+K[c&(K[j]=K[H=c&H+G])+(K[H]=G)];return D.i=j,D.j=H,U})(o)}function d(w,_){return _.i=w.i,_.j=w.j,_.S=w.S.slice(),_}function h(w,_){var C=[],D=typeof w,T;if(_&&D=="object")for(T in w)try{C.push(h(w[T],_-1))}catch(R){}return C.length?C:D=="string"?w:w+"\0"}function g(w,_){for(var C=w+"",D,T=0;T<C.length;)_[c&T]=c&(D^=_[c&T]*19)+C.charCodeAt(T++);return b(_)}function y(){try{var w;return p&&(w=p.randomBytes)?w=w(o):(w=new Uint8Array(o),(t.crypto||t.msCrypto).getRandomValues(w)),b(w)}catch(D){var _=t.navigator,C=_&&_.plugins;return[+new Date,t,C,t.screen,b(r)]}}function b(w){return String.fromCharCode.apply(0,w)}if(g(e.random(),r),typeof tg=="object"&&tg.exports){tg.exports=m;try{p=WN()}catch(w){}}else typeof define=="function"&&define.amd&&define(function(){return m})})([],Math)});var zm=Wr((uxe,jN)=>{var jW=$N(),HW=FN(),qW=PN(),KW=LN(),XW=BN(),YW=GN(),Eu=UN();Eu.alea=jW;Eu.xor128=HW;Eu.xorwow=qW;Eu.xorshift7=KW;Eu.xor4096=XW;Eu.tychei=YW;jN.exports=Eu});var $A=Wr(()=>{});var Xp=Wr(()=>{});var hz=Wr(()=>{});var gz=Wr(()=>{});var xz=Wr((jx,ZC)=>{var JC=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(e){e=e||{};function t(){return te.buffer!=Ue&&rr(te.buffer),ut}function o(){return te.buffer!=Ue&&rr(te.buffer),mt}function n(){return te.buffer!=Ue&&rr(te.buffer),Kt}function s(){return te.buffer!=Ue&&rr(te.buffer),to}function a(){return te.buffer!=Ue&&rr(te.buffer),Uo}var i=typeof e!="undefined"?e:{},l,u;i.ready=new Promise(function(I,$){l=I,u=$});var c={},p;for(p in i)i.hasOwnProperty(p)&&(c[p]=i[p]);var m=[],f="./this.program",d=function(I,$){throw $},h=!1,g=!1,y=!1,b=!1;h=typeof window=="object",g=typeof importScripts=="function",y=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",b=!h&&!y&&!g;var w=i.ENVIRONMENT_IS_PTHREAD||!1;w&&(Ue=i.buffer);var _="";function C(I){return i.locateFile?i.locateFile(I,_):_+I}var D,T,R,P,B,G;if(y){g?_=Xp().dirname(_)+"/":_=__dirname+"/",D=function($,z){return B||(B=require("fs")),G||(G=Xp()),$=G.normalize($),B.readFileSync($,z?null:"utf8")},R=function($){var z=D($,!0);return z.buffer||(z=new Uint8Array(z)),fe(z.buffer),z},process.argv.length>1&&(f=process.argv[1].replace(/\\/g,"/")),m=process.argv.slice(2),process.on("uncaughtException",function(I){if(!(I instanceof sm))throw I}),process.on("unhandledRejection",Zi),d=function(I){process.exit(I)},i.inspect=function(){return"[Emscripten Module object]"};var U;try{U=hz()}catch(I){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),I}global.Worker=U.Worker}else b?(typeof read!="undefined"&&(D=function($){return read($)}),R=function($){var z;return typeof readbuffer=="function"?new Uint8Array(readbuffer($)):(z=read($,"binary"),fe(typeof z=="object"),z)},typeof scriptArgs!="undefined"?m=scriptArgs:typeof arguments!="undefined"&&(m=arguments),typeof quit=="function"&&(d=function(I){quit(I)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(h||g)&&(g?_=self.location.href:typeof document!="undefined"&&document.currentScript&&(_=document.currentScript.src),typeof r!="undefined"&&r&&(_=r),_.indexOf("blob:")!==0?_=_.substr(0,_.lastIndexOf("/")+1):_="",y?(D=function($,z){return B||(B=require("fs")),G||(G=Xp()),$=G.normalize($),B.readFileSync($,z?null:"utf8")},R=function($){var z=D($,!0);return z.buffer||(z=new Uint8Array(z)),fe(z.buffer),z}):(D=function(I){var $=new XMLHttpRequest;return $.open("GET",I,!1),$.send(null),$.responseText},g&&(R=function(I){var $=new XMLHttpRequest;return $.open("GET",I,!1),$.responseType="arraybuffer",$.send(null),new Uint8Array($.response)}),T=function(I,$,z){var q=new XMLHttpRequest;q.open("GET",I,!0),q.responseType="arraybuffer",q.onload=function(){if(q.status==200||q.status==0&&q.response){$(q.response);return}z()},q.onerror=z,q.send(null)}),P=function(I){document.title=I});y&&typeof performance=="undefined"&&(global.performance=gz().performance);var j=i.print||console.log.bind(console),H=i.printErr||console.warn.bind(console);for(p in c)c.hasOwnProperty(p)&&(i[p]=c[p]);c=null,i.arguments&&(m=i.arguments),i.thisProgram&&(f=i.thisProgram),i.quit&&(d=i.quit);var K=Atomics.load,X=Atomics.store,oe=Atomics.compareExchange,Y;i.wasmBinary&&(Y=i.wasmBinary);var re=i.noExitRuntime||!0;typeof WebAssembly!="object"&&Zi("no native wasm support detected");var te,ie,le=!1,ae;function fe(I,$){I||Zi("Assertion failed: "+$)}function de(I){var $=i["_"+I];return fe($,"Cannot call unknown function "+I+", make sure it is exported"),$}function xe(I,$,z,q,be){var he={string:function(Gr){var Cc=0;if(Gr!=null&&Gr!==0){var dI=(Gr.length<<2)+1;Cc=_c(dI),qe(Gr,Cc,dI)}return Cc},array:function(Gr){var Cc=_c(Gr.length);return Tt(Gr,Cc),Cc}};function ye(Gr){return $==="string"?Ie(Gr):$==="boolean"?Boolean(Gr):Gr}var Se=de(I),wt=[],br=0;if(q)for(var mr=0;mr<q.length;mr++){var Ka=he[z[mr]];Ka?(br===0&&(br=nm()),wt[mr]=Ka(q[mr])):wt[mr]=q[mr]}var vc=Se.apply(null,wt);return vc=ye(vc),br!==0&&wc(br),vc}function we(I,$,z,q){z=z||[];var be=z.every(function(ye){return ye==="number"}),he=$!=="string";return he&&be&&!q?de(I):function(){return xe(I,$,z,arguments,q)}}function De(I,$,z){for(var q=$+z,be="";!($>=q);){var he=I[$++];if(!he)return be;if(!(he&128)){be+=String.fromCharCode(he);continue}var ye=I[$++]&63;if((he&224)==192){be+=String.fromCharCode((he&31)<<6|ye);continue}var Se=I[$++]&63;if((he&240)==224?he=(he&15)<<12|ye<<6|Se:he=(he&7)<<18|ye<<12|Se<<6|I[$++]&63,he<65536)be+=String.fromCharCode(he);else{var wt=he-65536;be+=String.fromCharCode(55296|wt>>10,56320|wt&1023)}}return be}function Ie(I,$){return I?De(o(),I,$):""}function ze(I,$,z,q){if(!(q>0))return 0;for(var be=z,he=z+q-1,ye=0;ye<I.length;++ye){var Se=I.charCodeAt(ye);if(Se>=55296&&Se<=57343){var wt=I.charCodeAt(++ye);Se=65536+((Se&1023)<<10)|wt&1023}if(Se<=127){if(z>=he)break;$[z++]=Se}else if(Se<=2047){if(z+1>=he)break;$[z++]=192|Se>>6,$[z++]=128|Se&63}else if(Se<=65535){if(z+2>=he)break;$[z++]=224|Se>>12,$[z++]=128|Se>>6&63,$[z++]=128|Se&63}else{if(z+3>=he)break;$[z++]=240|Se>>18,$[z++]=128|Se>>12&63,$[z++]=128|Se>>6&63,$[z++]=128|Se&63}}return $[z]=0,z-be}function qe(I,$,z){return ze(I,o(),$,z)}function it(I){for(var $=0,z=0;z<I.length;++z){var q=I.charCodeAt(z);q>=55296&&q<=57343&&(q=65536+((q&1023)<<10)|I.charCodeAt(++z)&1023),q<=127?++$:q<=2047?$+=2:q<=65535?$+=3:$+=4}return $}function Tt(I,$){t().set(I,$)}function At(I,$){return I%$>0&&(I+=$-I%$),I}var Ue,ut,mt,Pt,xo,Kt,to,Dr,Uo;function rr(I){Ue=I,i.HEAP8=ut=new Int8Array(I),i.HEAP16=Pt=new Int16Array(I),i.HEAP32=Kt=new Int32Array(I),i.HEAPU8=mt=new Uint8Array(I),i.HEAPU16=xo=new Uint16Array(I),i.HEAPU32=to=new Uint32Array(I),i.HEAPF32=Dr=new Float32Array(I),i.HEAPF64=Uo=new Float64Array(I)}var yo=i.INITIAL_MEMORY||16777216;if(w)te=i.wasmMemory,Ue=i.buffer;else if(i.wasmMemory)te=i.wasmMemory;else if(te=new WebAssembly.Memory({initial:yo/65536,maximum:2147483648/65536,shared:!0}),!(te.buffer instanceof SharedArrayBuffer))throw H("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),y&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");te&&(Ue=te.buffer),yo=Ue.byteLength,rr(Ue);var Vr,yr=[],ro=[],Ao=[],Dl=[],Wa=[],ns=!1,Xi=!1;w||ro.push({func:function(){Ih()}}),w&&(ns=!0);function Yp(){if(!w){if(i.preRun)for(typeof i.preRun=="function"&&(i.preRun=[i.preRun]);i.preRun.length;)mh(i.preRun.shift());hc(yr)}}function fc(){ns=!0,hc(ro)}function Xx(){w||hc(Ao)}function ph(){w||(Xi=!0)}function oo(){if(!w){if(i.postRun)for(typeof i.postRun=="function"&&(i.postRun=[i.postRun]);i.postRun.length;)Yx(i.postRun.shift());hc(Wa)}}function mh(I){yr.unshift(I)}function Yx(I){Wa.unshift(I)}var Yi=0,Ua=null,$l=null;function Zx(I){fe(!w,"addRunDependency cannot be used in a pthread worker"),Yi++,i.monitorRunDependencies&&i.monitorRunDependencies(Yi)}function Jx(I){if(Yi--,i.monitorRunDependencies&&i.monitorRunDependencies(Yi),Yi==0&&(Ua!==null&&(clearInterval(Ua),Ua=null),$l)){var $=$l;$l=null,$()}}i.preloadedImages={},i.preloadedAudios={};function Zi(I){i.onAbort&&i.onAbort(I),w&&console.error("Pthread aborting at "+new Error().stack),I+="",H(I),le=!0,ae=1,I="abort("+I+"). Build with -s ASSERTIONS=1 for more info.";var $=new WebAssembly.RuntimeError(I);throw u($),$}function fh(I,$){return String.prototype.startsWith?I.startsWith($):I.indexOf($)===0}var dc="data:application/octet-stream;base64,";function dh(I){return fh(I,dc)}var Qx="file://";function hh(I){return fh(I,Qx)}var no="tfjs-backend-wasm-threaded-simd.wasm";dh(no)||(no=C(no));function ey(I){try{if(I==no&&Y)return new Uint8Array(Y);if(R)return R(I);throw"both async and sync fetching of the wasm failed"}catch($){Zi($)}}function gh(){if(!Y&&(h||g)){if(typeof fetch=="function"&&!hh(no))return fetch(no,{credentials:"same-origin"}).then(function(I){if(!I.ok)throw"failed to load wasm binary file at '"+no+"'";return I.arrayBuffer()}).catch(function(){return ey(no)});if(T)return new Promise(function(I,$){T(no,function(z){I(new Uint8Array(z))},$)})}return Promise.resolve().then(function(){return ey(no)})}function ty(){var I={a:jy};function $(ye,Se){var wt=ye.exports;if(i.asm=wt,Vr=i.asm.F,ie=Se,!w){var br=Ee.unusedWorkers.length;Ee.unusedWorkers.forEach(function(mr){Ee.loadWasmModuleToWorker(mr,function(){--br||Jx("wasm-instantiate")})})}}w||Zx("wasm-instantiate");function z(ye){$(ye.instance,ye.module)}function q(ye){return gh().then(function(Se){return WebAssembly.instantiate(Se,I)}).then(ye,function(Se){H("failed to asynchronously prepare wasm: "+Se),Zi(Se)})}function be(){return!Y&&typeof WebAssembly.instantiateStreaming=="function"&&!dh(no)&&!hh(no)&&typeof fetch=="function"?fetch(no,{credentials:"same-origin"}).then(function(ye){var Se=WebAssembly.instantiateStreaming(ye,I);return Se.then(z,function(wt){return H("wasm streaming compile failed: "+wt),H("falling back to ArrayBuffer instantiation"),q(z)})}):q(z)}if(i.instantiateWasm)try{var he=i.instantiateWasm(I,$);return he}catch(ye){return H("Module.instantiateWasm callback failed with error: "+ye),!1}return be().catch(u),{}}var xh={8991:function(I,$){setTimeout(function(){lI(I,$)},0)}};function ry(){Ee.initRuntime()}function hc(I){for(;I.length>0;){var $=I.shift();if(typeof $=="function"){$(i);continue}var z=$.func;typeof z=="number"?$.arg===void 0?Vr.get(z)():Vr.get(z)($.arg):z($.arg===void 0?null:$.arg)}}function gc(I,$){if(I<=0||I>t().length||I&!0||$<0)return-28;if($==0)return 0;$>=2147483647&&($=Infinity);var z=Atomics.load(n(),kc>>2),q=0;if(z==I){var be=Atomics.compareExchange(n(),kc>>2,z,0);if(be==z&&(--$,q=1,$<=0))return 1}var he=Atomics.notify(n(),I>>2,$);if(he>=0)return he+q;throw"Atomics.notify returned an unexpected value "+he}i._emscripten_futex_wake=gc;function oy(I){if(w)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in killThread!";n()[I+12>>2]=0;var $=Ee.pthreads[I];$.worker.terminate(),Ee.freeThreadData($),Ee.runningWorkers.splice(Ee.runningWorkers.indexOf($.worker),1),$.worker.pthread=void 0}function ny(I){if(w)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in cancelThread!";var $=Ee.pthreads[I];$.worker.postMessage({cmd:"cancel"})}function sy(I){if(w)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in cleanupThread!";n()[I+12>>2]=0;var $=Ee.pthreads[I];if($){var z=$.worker;Ee.returnWorkerToPool(z)}}var Ee={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var I=8,$=0;$<I;++$)Ee.allocateUnusedWorker()},initRuntime:function(){for(var I=Fl(228),$=0;$<228/4;++$)s()[I/4+$]=0;n()[I+12>>2]=I;var z=I+152;n()[z>>2]=z;for(var q=Fl(512),$=0;$<128;++$)s()[q/4+$]=0;Atomics.store(s(),I+100>>2,q),Atomics.store(s(),I+40>>2,I),Eh(I,!g,1),aI(I)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Ee.threadExitHandlers.length>0;)Ee.threadExitHandlers.pop()();w&&bc()&&iI()},threadExit:function(I){var $=bc();$&&(Atomics.store(s(),$+4>>2,I),Atomics.store(s(),$+0>>2,1),Atomics.store(s(),$+56>>2,1),Atomics.store(s(),$+60>>2,0),Ee.runExitHandlers(),gc($+0,2147483647),Eh(0,0,0),w&&postMessage({cmd:"exit"}))},threadCancel:function(){Ee.runExitHandlers();var I=bc();Atomics.store(s(),I+4>>2,-1),Atomics.store(s(),I+0>>2,1),gc(I+0,2147483647),Eh(0,0,0),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var I in Ee.pthreads){var $=Ee.pthreads[I];$&&$.worker&&Ee.returnWorkerToPool($.worker)}Ee.pthreads={};for(var z=0;z<Ee.unusedWorkers.length;++z){var q=Ee.unusedWorkers[z];q.terminate()}Ee.unusedWorkers=[];for(var z=0;z<Ee.runningWorkers.length;++z){var q=Ee.runningWorkers[z],$=q.pthread;Ee.freeThreadData($),q.terminate()}Ee.runningWorkers=[]},freeThreadData:function(I){if(!!I){if(I.threadInfoStruct){var $=n()[I.threadInfoStruct+100>>2];n()[I.threadInfoStruct+100>>2]=0,om($),om(I.threadInfoStruct)}I.threadInfoStruct=0,I.allocatedOwnStack&&I.stackBase&&om(I.stackBase),I.stackBase=0,I.worker&&(I.worker.pthread=null)}},returnWorkerToPool:function(I){Ee.runWithoutMainThreadQueuedCalls(function(){delete Ee.pthreads[I.pthread.threadInfoStruct],Ee.unusedWorkers.push(I),Ee.runningWorkers.splice(Ee.runningWorkers.indexOf(I),1),Ee.freeThreadData(I.pthread),I.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(I){n()[fI>>2]=0;try{I()}finally{n()[fI>>2]=1}},receiveObjectTransfer:function(I){},loadWasmModuleToWorker:function(I,$){I.onmessage=function(z){var q=z.data,be=q.cmd;if(I.pthread&&(Ee.currentProxiedOperationCallerThread=I.pthread.threadInfoStruct),q.targetThread&&q.targetThread!=bc()){var he=Ee.pthreads[q.targetThread];he?he.worker.postMessage(z.data,q.transferList):console.error('Internal error! Worker sent a message "'+be+'" to target pthread '+q.targetThread+", but that thread no longer exists!"),Ee.currentProxiedOperationCallerThread=void 0;return}if(be==="processQueuedMainThreadWork")ib();else if(be==="spawnThread")vh(z.data);else if(be==="cleanupThread")sy(q.thread);else if(be==="killThread")oy(q.thread);else if(be==="cancelThread")ny(q.thread);else if(be==="loaded")I.loaded=!0,$&&$(I),I.runPthread&&(I.runPthread(),delete I.runPthread);else if(be==="print")j("Thread "+q.threadId+": "+q.text);else if(be==="printErr")H("Thread "+q.threadId+": "+q.text);else if(be==="alert")alert("Thread "+q.threadId+": "+q.text);else if(be==="exit"){var ye=I.pthread&&Atomics.load(s(),I.pthread.threadInfoStruct+64>>2);ye&&Ee.returnWorkerToPool(I)}else if(be==="exitProcess")try{dB(q.returnCode)}catch(Se){if(Se instanceof sm)return;throw Se}else be==="cancelDone"?Ee.returnWorkerToPool(I):be==="objectTransfer"?Ee.receiveObjectTransfer(z.data):z.data.target==="setimmediate"?I.postMessage(z.data):H("worker sent an unknown command "+be);Ee.currentProxiedOperationCallerThread=void 0},I.onerror=function(z){H("pthread sent an error! "+z.filename+":"+z.lineno+": "+z.message)},y&&(I.on("message",function(z){I.onmessage({data:z})}),I.on("error",function(z){I.onerror(z)}),I.on("exit",function(z){})),I.postMessage({cmd:"load",urlOrBlob:i.mainScriptUrlOrBlob||r,wasmMemory:te,wasmModule:ie})},allocateUnusedWorker:function(){var I=C("tfjs-backend-wasm-threaded-simd.worker.js");Ee.unusedWorkers.push(new Worker(I))},getNewWorker:function(){return Ee.unusedWorkers.length==0&&(Ee.allocateUnusedWorker(),Ee.loadWasmModuleToWorker(Ee.unusedWorkers[0])),Ee.unusedWorkers.length>0?Ee.unusedWorkers.pop():null},busySpinWait:function(I){for(var $=performance.now()+I;performance.now()<$;);}};function iy(I,$){pI(I,$),wc(I)}i.establishStackSpace=iy;function ay(){return re}i.getNoExitRuntime=ay;function ly(I,$){return Vr.get(I)($)}i.invokeEntryPoint=ly;function uy(I,$,z,q){Zi("Assertion failed: "+Ie(I)+", at: "+[$?Ie($):"unknown filename",z,q?Ie(q):"unknown function"])}function cy(I,$){var z=_main(I,$)}var Rl;y?Rl=function(){var I=process.hrtime();return I[0]*1e3+I[1]/1e6}:w?Rl=function(){return performance.now()-i.__performance_now_clock_drift}:typeof dateNow!="undefined"?Rl=dateNow:Rl=function(){return performance.now()};function py(I){return n()[nI()>>2]=I,I}function my(I,$){if(w)return ja(1,1,I,$)}function fy(I,$){if(I==$)postMessage({cmd:"processQueuedMainThreadWork"});else if(w)postMessage({targetThread:I,cmd:"processThreadQueue"});else{var z=Ee.pthreads[I],q=z&&z.worker;if(!q)return;q.postMessage({cmd:"processThreadQueue"})}return 1}function dy(){Zi()}function hy(I,$,z){var q=wy($,z);return xh[I].apply(null,q)}function gy(I,$){}function xy(I,$,z){if(I<=0||I>t().length||I&!0)return-28;if(h){if(Atomics.load(n(),I>>2)!=$)return-6;for(var be=performance.now(),he=be+z,ye=Atomics.exchange(n(),kc>>2,I);;){if(be=performance.now(),be>he)return ye=Atomics.exchange(n(),kc>>2,0),-73;if(ye=Atomics.exchange(n(),kc>>2,0),ye==0)break;if(ib(),Atomics.load(n(),I>>2)!=$)return-6;ye=Atomics.exchange(n(),kc>>2,I)}return 0}else{var q=Atomics.wait(n(),I>>2,$,z);if(q==="timed-out")return-73;if(q==="not-equal")return-6;if(q==="ok")return 0;throw"Atomics.wait returned an unexpected value "+q}}function yy(I,$,z){o().copyWithin(I,$,$+z)}function by(){return y?require("os").cpus().length:navigator.hardwareConcurrency}function ja(I,$){for(var z=arguments.length-2,q=nm(),be=z,he=_c(be*8),ye=he>>3,Se=0;Se<z;Se++){var wt=arguments[2+Se];a()[ye+Se]=wt}var br=cI(I,be,he,$);return wc(q),br}var Zp=[],Jp=[];function wy(I,$){Jp.length=0;var z;for($>>=2;z=o()[I++];){var q=z<105;q&&$&1&&$++,Jp.push(q?a()[$++>>1]:n()[$]),++$}return Jp}function _y(I,$,z){Zp.length=$;for(var q=z>>3,be=0;be<$;be++)Zp[be]=a()[q+be];var he=I<0,ye=he?xh[-I-1]:Uy[I];return ye.apply(null,Zp)}function ky(){return o().length}function vy(I){try{return te.grow(I-Ue.byteLength+65535>>>16),rr(te.buffer),1}catch($){}}function Cy(I){var $=ky();if(I<=$)return!1;var z=2147483648;if(I>z)return!1;for(var q=1;q<=4;q*=2){var be=$*(1+.2/q);be=Math.min(be,I+100663296);var he=Math.min(z,At(Math.max(I,be),65536)),ye=vy(he);if(ye)return!0}return!1}var Xe={inEventHandler:0,removeAllEventListeners:function(){for(var I=Xe.eventHandlers.length-1;I>=0;--I)Xe._removeHandler(I);Xe.eventHandlers=[],Xe.deferredCalls=[]},registerRemoveEventListeners:function(){Xe.removeEventListenersRegistered||(Dl.push(Xe.removeAllEventListeners),Xe.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(I,$,z){function q(ye,Se){if(ye.length!=Se.length)return!1;for(var wt in ye)if(ye[wt]!=Se[wt])return!1;return!0}for(var be in Xe.deferredCalls){var he=Xe.deferredCalls[be];if(he.targetFunction==I&&q(he.argsList,z))return}Xe.deferredCalls.push({targetFunction:I,precedence:$,argsList:z}),Xe.deferredCalls.sort(function(ye,Se){return ye.precedence<Se.precedence})},removeDeferredCalls:function(I){for(var $=0;$<Xe.deferredCalls.length;++$)Xe.deferredCalls[$].targetFunction==I&&(Xe.deferredCalls.splice($,1),--$)},canPerformEventHandlerRequests:function(){return Xe.inEventHandler&&Xe.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!Xe.canPerformEventHandlerRequests())for(var I=0;I<Xe.deferredCalls.length;++I){var $=Xe.deferredCalls[I];Xe.deferredCalls.splice(I,1),--I,$.targetFunction.apply(null,$.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(I,$){for(var z=0;z<Xe.eventHandlers.length;++z)Xe.eventHandlers[z].target==I&&(!$||$==Xe.eventHandlers[z].eventTypeString)&&Xe._removeHandler(z--)},_removeHandler:function(I){var $=Xe.eventHandlers[I];$.target.removeEventListener($.eventTypeString,$.eventListenerFunc,$.useCapture),Xe.eventHandlers.splice(I,1)},registerOrRemoveHandler:function(I){var $=function(be){++Xe.inEventHandler,Xe.currentEventHandler=I,Xe.runDeferredCalls(),I.handlerFunc(be),Xe.runDeferredCalls(),--Xe.inEventHandler};if(I.callbackfunc)I.eventListenerFunc=$,I.target.addEventListener(I.eventTypeString,$,I.useCapture),Xe.eventHandlers.push(I),Xe.registerRemoveEventListeners();else for(var z=0;z<Xe.eventHandlers.length;++z)Xe.eventHandlers[z].target==I.target&&Xe.eventHandlers[z].eventTypeString==I.eventTypeString&&Xe._removeHandler(z--)},queueEventHandlerOnThread_iiii:function(I,$,z,q,be){var he=nm(),ye=_c(12);n()[ye>>2]=z,n()[ye+4>>2]=q,n()[ye+8>>2]=be,ab(0,I,637534208,$,q,ye),wc(he)},getTargetThreadForEventCallback:function(I){switch(I){case 1:return 0;case 2:return Ee.currentProxiedOperationCallerThread;default:return I}},getNodeNameForTarget:function(I){return I?I==window?"#window":I==screen?"#screen":I&&I.nodeName?I.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Iy(I){var $=it(I)+1,z=Fl($);return qe(I,z,$),z}function Ny(I,$,z,q){var be=nm(),he=_c(12),ye=0;$&&(ye=Iy($)),n()[he>>2]=ye,n()[he+4>>2]=z,n()[he+8>>2]=q,ab(0,I,657457152,0,ye,he),wc(be)}function Sy(I,$,z,q){$=$?Ie($):"",Ny(I,$,z,q)}function Ty(I){return I>2?Ie(I):I}var Ay=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function Ey(I){I=Ty(I);var $=Ay[I]||(typeof document!="undefined"?document.querySelector(I):void 0);return $}function Qp(I){return Ey(I)}function yh(I,$,z){var q=Qp(I);if(!q)return-4;if(q.canvasSharedPtr&&(n()[q.canvasSharedPtr>>2]=$,n()[q.canvasSharedPtr+4>>2]=z),q.offscreenCanvas||!q.controlTransferredOffscreen){q.offscreenCanvas&&(q=q.offscreenCanvas);var be=!1;if(q.GLctxObject&&q.GLctxObject.GLctx){var he=q.GLctxObject.GLctx.getParameter(2978);be=he[0]===0&&he[1]===0&&he[2]===q.width&&he[3]===q.height}q.width=$,q.height=z,be&&q.GLctxObject.GLctx.viewport(0,0,$,z)}else if(q.canvasSharedPtr){var ye=n()[q.canvasSharedPtr+8>>2];return Sy(ye,I,$,z),1}else return-4;return 0}function bh(I,$,z){return w?ja(2,1,I,$,z):yh(I,$,z)}function Dy(I,$,z){var q=Qp(I);return q?yh(I,$,z):bh(I,$,z)}function $y(I){}function Ry(I,$){}function Fy(I){var $=I.getExtension("ANGLE_instanced_arrays");if($)return I.vertexAttribDivisor=function(z,q){$.vertexAttribDivisorANGLE(z,q)},I.drawArraysInstanced=function(z,q,be,he){$.drawArraysInstancedANGLE(z,q,be,he)},I.drawElementsInstanced=function(z,q,be,he,ye){$.drawElementsInstancedANGLE(z,q,be,he,ye)},1}function Oy(I){var $=I.getExtension("OES_vertex_array_object");if($)return I.createVertexArray=function(){return $.createVertexArrayOES()},I.deleteVertexArray=function(z){$.deleteVertexArrayOES(z)},I.bindVertexArray=function(z){$.bindVertexArrayOES(z)},I.isVertexArray=function(z){return $.isVertexArrayOES(z)},1}function Py(I){var $=I.getExtension("WEBGL_draw_buffers");if($)return I.drawBuffers=function(z,q){$.drawBuffersWEBGL(z,q)},1}function My(I){return!!(I.multiDrawWebgl=I.getExtension("WEBGL_multi_draw"))}var ft={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function($){ft.lastError||(ft.lastError=$)},getNewId:function(I){for(var $=ft.counter++,z=I.length;z<$;z++)I[z]=null;return $},getSource:function(I,$,z,q){for(var be="",he=0;he<$;++he){var ye=q?n()[q+he*4>>2]:-1;be+=Ie(n()[z+he*4>>2],ye<0?void 0:ye)}return be},createContext:function(I,$){var z=I.getContext("webgl",$);if(!z)return 0;var q=ft.registerContext(z,$);return q},registerContext:function(I,$){var z=Fl(8);n()[z+4>>2]=bc();var q={handle:z,attributes:$,version:$.majorVersion,GLctx:I};return I.canvas&&(I.canvas.GLctxObject=q),ft.contexts[z]=q,(typeof $.enableExtensionsByDefault=="undefined"||$.enableExtensionsByDefault)&&ft.initExtensions(q),z},makeContextCurrent:function(I){return ft.currentContext=ft.contexts[I],i.ctx=Ha=ft.currentContext&&ft.currentContext.GLctx,!(I&&!Ha)},getContext:function(I){return ft.contexts[I]},deleteContext:function(I){ft.currentContext===ft.contexts[I]&&(ft.currentContext=null),typeof Xe=="object"&&Xe.removeAllHandlersOnTarget(ft.contexts[I].GLctx.canvas),ft.contexts[I]&&ft.contexts[I].GLctx.canvas&&(ft.contexts[I].GLctx.canvas.GLctxObject=void 0),om(ft.contexts[I].handle),ft.contexts[I]=null},initExtensions:function(I){if(I||(I=ft.currentContext),!I.initExtensionsDone){I.initExtensionsDone=!0;var $=I.GLctx;Fy($),Oy($),Py($),$.disjointTimerQueryExt=$.getExtension("EXT_disjoint_timer_query"),My($);var z=$.getSupportedExtensions()||[];z.forEach(function(q){q.indexOf("lose_context")<0&&q.indexOf("debug")<0&&$.getExtension(q)})}},populateUniformTable:function(I){for(var $=ft.programs[I],z=ft.programInfos[I]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},q=z.uniforms,be=Ha.getProgramParameter($,35718),he=0;he<be;++he){var ye=Ha.getActiveUniform($,he),Se=ye.name;z.maxUniformLength=Math.max(z.maxUniformLength,Se.length+1),Se.slice(-1)=="]"&&(Se=Se.slice(0,Se.lastIndexOf("[")));var wt=Ha.getUniformLocation($,Se);if(wt){var br=ft.getNewId(ft.uniforms);q[Se]=[ye.size,br],ft.uniforms[br]=wt;for(var mr=1;mr<ye.size;++mr){var Ka=Se+"["+mr+"]";wt=Ha.getUniformLocation($,Ka),br=ft.getNewId(ft.uniforms),ft.uniforms[br]=wt}}}}},Ly=["default","low-power","high-performance"];function zy(I,$){var z=$>>2,q=n()[z+(24>>2)],be={alpha:!!n()[z+(0>>2)],depth:!!n()[z+(4>>2)],stencil:!!n()[z+(8>>2)],antialias:!!n()[z+(12>>2)],premultipliedAlpha:!!n()[z+(16>>2)],preserveDrawingBuffer:!!n()[z+(20>>2)],powerPreference:Ly[q],failIfMajorPerformanceCaveat:!!n()[z+(28>>2)],majorVersion:n()[z+(32>>2)],minorVersion:n()[z+(36>>2)],enableExtensionsByDefault:n()[z+(40>>2)],explicitSwapControl:n()[z+(44>>2)],proxyContextToMainThread:n()[z+(48>>2)],renderViaOffscreenBackBuffer:n()[z+(52>>2)]},he=Qp(I);if(!he||be.explicitSwapControl)return 0;var ye=ft.createContext(he,be);return ye}function By(I,$){return zy(I,$)}var xc={mappings:{},buffers:[null,[],[]],printChar:function(I,$){var z=xc.buffers[I];$===0||$===10?((I===1?j:H)(De(z,0)),z.length=0):z.push($)},varargs:void 0,get:function(){xc.varargs+=4;var I=n()[xc.varargs-4>>2];return I},getStr:function(I){var $=Ie(I);return $},get64:function(I,$){return I}};function wh(I){return w?ja(3,1,I):0}function _h(I,$,z,q,be){if(w)return ja(4,1,I,$,z,q,be)}function kh(I,$,z,q){if(w)return ja(5,1,I,$,z,q);for(var be=0,he=0;he<z;he++){for(var ye=n()[$+he*8>>2],Se=n()[$+(he*8+4)>>2],wt=0;wt<Se;wt++)xc.printChar(I,o()[ye+wt]);be+=Se}return n()[q>>2]=be,0}function Vy(I){var $=Ee.threadExitHandlers.pop();I&&$()}function Gy(I,$){Ee.threadExitHandlers.push(function(){Vr.get(I)($)})}function vh(I){if(w)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var $=Ee.getNewWorker();if($.pthread!==void 0)throw"Internal error!";if(!I.pthread_ptr)throw"Internal error, no pthread ptr!";Ee.runningWorkers.push($);for(var z=Fl(128*4),q=0;q<128;++q)n()[z+q*4>>2]=0;var be=I.stackBase+I.stackSize,he=Ee.pthreads[I.pthread_ptr]={worker:$,stackBase:I.stackBase,stackSize:I.stackSize,allocatedOwnStack:I.allocatedOwnStack,threadInfoStruct:I.pthread_ptr},ye=he.threadInfoStruct>>2;Atomics.store(s(),ye+(64>>2),I.detached),Atomics.store(s(),ye+(100>>2),z),Atomics.store(s(),ye+(40>>2),he.threadInfoStruct),Atomics.store(s(),ye+(80>>2),I.stackSize),Atomics.store(s(),ye+(76>>2),be),Atomics.store(s(),ye+(104>>2),I.stackSize),Atomics.store(s(),ye+(104+8>>2),be),Atomics.store(s(),ye+(104+12>>2),I.detached);var Se=sI(),wt=Se+40;Atomics.store(s(),ye+(172>>2),wt),$.pthread=he;var br={cmd:"run",start_routine:I.startRoutine,arg:I.arg,threadInfoStruct:I.pthread_ptr,stackBase:I.stackBase,stackSize:I.stackSize};$.runPthread=function(){br.time=performance.now(),$.postMessage(br,I.transferList)},$.loaded&&($.runPthread(),delete $.runPthread)}function Wy(I,$,z,q){if(typeof SharedArrayBuffer=="undefined")return H("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!I)return H("pthread_create called with a null thread pointer!"),28;var be=[],he=0;if(w&&(be.length===0||he))return uI(687865856,I,$,z,q);if(he)return he;var ye=0,Se=0,wt=0;$&&$!=-1?(ye=n()[$>>2],ye+=81920,Se=n()[$+8>>2],wt=n()[$+12>>2]!==0):ye=2097152;var br=Se==0;br?Se=mI(16,ye):(Se-=ye,fe(Se>0));for(var mr=Fl(228),Ka=0;Ka<228>>2;++Ka)s()[(mr>>2)+Ka]=0;n()[I>>2]=mr,n()[mr+12>>2]=mr;var vc=mr+152;n()[vc>>2]=vc;var Gr={stackBase:Se,stackSize:ye,allocatedOwnStack:br,detached:wt,startRoutine:z,pthread_ptr:mr,arg:q,transferList:be};return w?(Gr.cmd="spawnThread",postMessage(Gr,be)):vh(Gr),0}function Ch(I){if(w)return ja(6,1,I);switch(I){case 30:return 16384;case 85:var $=2147483648;return $/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return py(28),-1}w||Ee.initMainThreadBlock();var Ha,Uy=[null,my,bh,wh,_h,kh,Ch],jy={e:uy,r:cy,x:fy,b:dy,y:hy,j:gy,c:xy,d:gc,f:Rl,p:yy,z:by,u:_y,q:Cy,v:Dy,i:$y,t:Ry,w:By,m:wh,n:_h,g:kh,o:ry,a:te||i.wasmMemory,k:Vy,l:Gy,h:Wy,s:Ch},oI=ty(),Ih=i.___wasm_call_ctors=function(){return(Ih=i.___wasm_call_ctors=i.asm.A).apply(null,arguments)},Hy=i._init=function(){return(Hy=i._init=i.asm.B).apply(null,arguments)},qy=i._register_tensor=function(){return(qy=i._register_tensor=i.asm.C).apply(null,arguments)},Ky=i._dispose_data=function(){return(Ky=i._dispose_data=i.asm.D).apply(null,arguments)},Xy=i._dispose=function(){return(Xy=i._dispose=i.asm.E).apply(null,arguments)},Yy=i._Abs=function(){return(Yy=i._Abs=i.asm.G).apply(null,arguments)},Zy=i._Add=function(){return(Zy=i._Add=i.asm.H).apply(null,arguments)},Jy=i._AddN=function(){return(Jy=i._AddN=i.asm.I).apply(null,arguments)},Qy=i._ArgMax=function(){return(Qy=i._ArgMax=i.asm.J).apply(null,arguments)},eb=i._AvgPool=function(){return(eb=i._AvgPool=i.asm.K).apply(null,arguments)},tb=i._BatchMatMul=function(){return(tb=i._BatchMatMul=i.asm.L).apply(null,arguments)},rb=i._Ceil=function(){return(rb=i._Ceil=i.asm.M).apply(null,arguments)},ob=i._ClipByValue=function(){return(ob=i._ClipByValue=i.asm.N).apply(null,arguments)},nb=i._Conv2D=function(){return(nb=i._Conv2D=i.asm.O).apply(null,arguments)},Nh=i._Conv2DBackpropInput=function(){return(Nh=i._Conv2DBackpropInput=i.asm.P).apply(null,arguments)},Sh=i._Cos=function(){return(Sh=i._Cos=i.asm.Q).apply(null,arguments)},em=i._CropAndResize=function(){return(em=i._CropAndResize=i.asm.R).apply(null,arguments)},yc=i._Cumsum=function(){return(yc=i._Cumsum=i.asm.S).apply(null,arguments)},sb=i._DepthToSpace=function(){return(sb=i._DepthToSpace=i.asm.T).apply(null,arguments)},tm=i._DepthwiseConv2dNative=function(){return(tm=i._DepthwiseConv2dNative=i.asm.U).apply(null,arguments)},Z=i._Equal=function(){return(Z=i._Equal=i.asm.V).apply(null,arguments)},se=i._Exp=function(){return(se=i._Exp=i.asm.W).apply(null,arguments)},ke=i._FlipLeftRight=function(){return(ke=i._FlipLeftRight=i.asm.X).apply(null,arguments)},at=i._Floor=function(){return(at=i._Floor=i.asm.Y).apply(null,arguments)},Xt=i._FloorDiv=function(){return(Xt=i._FloorDiv=i.asm.Z).apply(null,arguments)},zt=i._FusedBatchNorm=function(){return(zt=i._FusedBatchNorm=i.asm._).apply(null,arguments)},tt=i._FusedConv2D=function(){return(tt=i._FusedConv2D=i.asm.$).apply(null,arguments)},rt=i._FusedDepthwiseConv2D=function(){return(rt=i._FusedDepthwiseConv2D=i.asm.aa).apply(null,arguments)},kr=i._Gather=function(){return(kr=i._Gather=i.asm.ba).apply(null,arguments)},Ji=i._GatherNd=function(){return(Ji=i._GatherNd=i.asm.ca).apply(null,arguments)},Qi=i._Greater=function(){return(Qi=i._Greater=i.asm.da).apply(null,arguments)},Th=i._GreaterEqual=function(){return(Th=i._GreaterEqual=i.asm.ea).apply(null,arguments)},rm=i._LeakyRelu=function(){return(rm=i._LeakyRelu=i.asm.fa).apply(null,arguments)},bo=i._Less=function(){return(bo=i._Less=i.asm.ga).apply(null,arguments)},qa=i._LessEqual=function(){return(qa=i._LessEqual=i.asm.ha).apply(null,arguments)},Ah=i._Log=function(){return(Ah=i._Log=i.asm.ia).apply(null,arguments)},vz=i._LogicalAnd=function(){return(vz=i._LogicalAnd=i.asm.ja).apply(null,arguments)},Cz=i._Max=function(){return(Cz=i._Max=i.asm.ka).apply(null,arguments)},Iz=i._MaxPool=function(){return(Iz=i._MaxPool=i.asm.la).apply(null,arguments)},Nz=i._Maximum=function(){return(Nz=i._Maximum=i.asm.ma).apply(null,arguments)},Sz=i._Mean=function(){return(Sz=i._Mean=i.asm.na).apply(null,arguments)},Tz=i._Min=function(){return(Tz=i._Min=i.asm.oa).apply(null,arguments)},Az=i._Minimum=function(){return(Az=i._Minimum=i.asm.pa).apply(null,arguments)},Ez=i._Multiply=function(){return(Ez=i._Multiply=i.asm.qa).apply(null,arguments)},Dz=i._Neg=function(){return(Dz=i._Neg=i.asm.ra).apply(null,arguments)},$z=i._NonMaxSuppressionV3=function(){return($z=i._NonMaxSuppressionV3=i.asm.sa).apply(null,arguments)},Rz=i._NonMaxSuppressionV4=function(){return(Rz=i._NonMaxSuppressionV4=i.asm.ta).apply(null,arguments)},Fz=i._NonMaxSuppressionV5=function(){return(Fz=i._NonMaxSuppressionV5=i.asm.ua).apply(null,arguments)},Oz=i._NotEqual=function(){return(Oz=i._NotEqual=i.asm.va).apply(null,arguments)},Pz=i._OneHot=function(){return(Pz=i._OneHot=i.asm.wa).apply(null,arguments)},Mz=i._PadV2=function(){return(Mz=i._PadV2=i.asm.xa).apply(null,arguments)},Lz=i._Pow=function(){return(Lz=i._Pow=i.asm.ya).apply(null,arguments)},zz=i._Prelu=function(){return(zz=i._Prelu=i.asm.za).apply(null,arguments)},Bz=i._Prod=function(){return(Bz=i._Prod=i.asm.Aa).apply(null,arguments)},Vz=i._RealDiv=function(){return(Vz=i._RealDiv=i.asm.Ba).apply(null,arguments)},Gz=i._Relu=function(){return(Gz=i._Relu=i.asm.Ca).apply(null,arguments)},Wz=i._Relu6=function(){return(Wz=i._Relu6=i.asm.Da).apply(null,arguments)},Uz=i._ResizeBilinear=function(){return(Uz=i._ResizeBilinear=i.asm.Ea).apply(null,arguments)},jz=i._Reverse=function(){return(jz=i._Reverse=i.asm.Fa).apply(null,arguments)},Hz=i._RotateWithOffset=function(){return(Hz=i._RotateWithOffset=i.asm.Ga).apply(null,arguments)},qz=i._Round=function(){return(qz=i._Round=i.asm.Ha).apply(null,arguments)},Kz=i._Rsqrt=function(){return(Kz=i._Rsqrt=i.asm.Ia).apply(null,arguments)},Xz=i._ScatterNd=function(){return(Xz=i._ScatterNd=i.asm.Ja).apply(null,arguments)},Yz=i._SelectV2=function(){return(Yz=i._SelectV2=i.asm.Ka).apply(null,arguments)},Zz=i._Sigmoid=function(){return(Zz=i._Sigmoid=i.asm.La).apply(null,arguments)},Jz=i._Sin=function(){return(Jz=i._Sin=i.asm.Ma).apply(null,arguments)},Qz=i._Softmax=function(){return(Qz=i._Softmax=i.asm.Na).apply(null,arguments)},eB=i._Sqrt=function(){return(eB=i._Sqrt=i.asm.Oa).apply(null,arguments)},tB=i._Square=function(){return(tB=i._Square=i.asm.Pa).apply(null,arguments)},rB=i._SquaredDifference=function(){return(rB=i._SquaredDifference=i.asm.Qa).apply(null,arguments)},oB=i._Step=function(){return(oB=i._Step=i.asm.Ra).apply(null,arguments)},nB=i._StridedSlice=function(){return(nB=i._StridedSlice=i.asm.Sa).apply(null,arguments)},sB=i._Sub=function(){return(sB=i._Sub=i.asm.Ta).apply(null,arguments)},iB=i._Sum=function(){return(iB=i._Sum=i.asm.Ua).apply(null,arguments)},aB=i._Tanh=function(){return(aB=i._Tanh=i.asm.Va).apply(null,arguments)},lB=i._Tile=function(){return(lB=i._Tile=i.asm.Wa).apply(null,arguments)},uB=i._TopK=function(){return(uB=i._TopK=i.asm.Xa).apply(null,arguments)},cB=i._Transpose=function(){return(cB=i._Transpose=i.asm.Ya).apply(null,arguments)},pB=i.__FusedMatMul=function(){return(pB=i.__FusedMatMul=i.asm.Za).apply(null,arguments)},Fl=i._malloc=function(){return(Fl=i._malloc=i.asm._a).apply(null,arguments)},om=i._free=function(){return(om=i._free=i.asm.$a).apply(null,arguments)},nI=i.___errno_location=function(){return(nI=i.___errno_location=i.asm.ab).apply(null,arguments)},sI=i._emscripten_get_global_libc=function(){return(sI=i._emscripten_get_global_libc=i.asm.bb).apply(null,arguments)},bc=i._pthread_self=function(){return(bc=i._pthread_self=i.asm.cb).apply(null,arguments)},iI=i.___pthread_tsd_run_dtors=function(){return(iI=i.___pthread_tsd_run_dtors=i.asm.db).apply(null,arguments)},ib=i._emscripten_main_thread_process_queued_calls=function(){return(ib=i._emscripten_main_thread_process_queued_calls=i.asm.eb).apply(null,arguments)},mB=i._emscripten_current_thread_process_queued_calls=function(){return(mB=i._emscripten_current_thread_process_queued_calls=i.asm.fb).apply(null,arguments)},aI=i._emscripten_register_main_browser_thread_id=function(){return(aI=i._emscripten_register_main_browser_thread_id=i.asm.gb).apply(null,arguments)},lI=i.__emscripten_do_dispatch_to_thread=function(){return(lI=i.__emscripten_do_dispatch_to_thread=i.asm.hb).apply(null,arguments)},uI=i._emscripten_sync_run_in_main_thread_4=function(){return(uI=i._emscripten_sync_run_in_main_thread_4=i.asm.ib).apply(null,arguments)},cI=i._emscripten_run_in_main_runtime_thread_js=function(){return(cI=i._emscripten_run_in_main_runtime_thread_js=i.asm.jb).apply(null,arguments)},ab=i.__emscripten_call_on_thread=function(){return(ab=i.__emscripten_call_on_thread=i.asm.kb).apply(null,arguments)},fB=i._emscripten_tls_init=function(){return(fB=i._emscripten_tls_init=i.asm.lb).apply(null,arguments)},Eh=i.__emscripten_thread_init=function(){return(Eh=i.__emscripten_thread_init=i.asm.mb).apply(null,arguments)},nm=i.stackSave=function(){return(nm=i.stackSave=i.asm.nb).apply(null,arguments)},wc=i.stackRestore=function(){return(wc=i.stackRestore=i.asm.ob).apply(null,arguments)},_c=i.stackAlloc=function(){return(_c=i.stackAlloc=i.asm.pb).apply(null,arguments)},pI=i._emscripten_stack_set_limits=function(){return(pI=i._emscripten_stack_set_limits=i.asm.qb).apply(null,arguments)},mI=i._memalign=function(){return(mI=i._memalign=i.asm.rb).apply(null,arguments)},fI=i.__emscripten_allow_main_runtime_queued_calls=9880,kc=i.__emscripten_main_thread_futex=11368;i.cwrap=we,i.PThread=Ee,i.PThread=Ee,i.wasmMemory=te,i.ExitStatus=sm;var Dh;function sm(I){this.name="ExitStatus",this.message="Program terminated with exit("+I+")",this.status=I}$l=function I(){Dh||lb(),Dh||($l=I)};function lb(I){if(I=I||m,Yi>0)return;if(w){l(i),postMessage({cmd:"loaded"});return}if(Yp(),Yi>0)return;function $(){Dh||(Dh=!0,i.calledRun=!0,!le&&(fc(),Xx(),l(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),oo()))}i.setStatus?(i.setStatus("Running..."),setTimeout(function(){setTimeout(function(){i.setStatus("")},1),$()},1)):$()}i.run=lb;function dB(I,$){if(!($&&re&&I===0)){if(!$&&w)throw postMessage({cmd:"exitProcess",returnCode:I}),new sm(I);re||(Ee.terminateAllThreads(),ae=I,ph(),i.onExit&&i.onExit(I),le=!0),d(I,new sm(I))}}if(i.preInit)for(typeof i.preInit=="function"&&(i.preInit=[i.preInit]);i.preInit.length>0;)i.preInit.pop()();return w&&(re=!1,Ee.initWorker()),lb(),e.ready}}();typeof jx=="object"&&typeof ZC=="object"?ZC.exports=JC:typeof define=="function"&&define.amd?define([],function(){return JC}):typeof jx=="object"&&(jx.WasmBackendModuleThreadedSimd=JC)});var bz=Wr((Hx,QC)=>{var eI=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(e){e=e||{};var t=typeof e!="undefined"?e:{},o,n;t.ready=new Promise(function(Z,se){o=Z,n=se});var s={},a;for(a in t)t.hasOwnProperty(a)&&(s[a]=t[a]);var i=[],l="./this.program",u=function(Z,se){throw se},c=!1,p=!1,m=!1,f=!1;c=typeof window=="object",p=typeof importScripts=="function",m=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",f=!c&&!m&&!p;var d="";function h(Z){return t.locateFile?t.locateFile(Z,d):d+Z}var g,y,b,w,_,C;m?(p?d=Xp().dirname(d)+"/":d=__dirname+"/",g=function(se,ke){return _||(_=require("fs")),C||(C=Xp()),se=C.normalize(se),_.readFileSync(se,ke?null:"utf8")},b=function(se){var ke=g(se,!0);return ke.buffer||(ke=new Uint8Array(ke)),j(ke.buffer),ke},process.argv.length>1&&(l=process.argv[1].replace(/\\/g,"/")),i=process.argv.slice(2),process.on("uncaughtException",function(Z){if(!(Z instanceof sb))throw Z}),process.on("unhandledRejection",ns),u=function(Z){process.exit(Z)},t.inspect=function(){return"[Emscripten Module object]"}):f?(typeof read!="undefined"&&(g=function(se){return read(se)}),b=function(se){var ke;return typeof readbuffer=="function"?new Uint8Array(readbuffer(se)):(ke=read(se,"binary"),j(typeof ke=="object"),ke)},typeof scriptArgs!="undefined"?i=scriptArgs:typeof arguments!="undefined"&&(i=arguments),typeof quit=="function"&&(u=function(Z){quit(Z)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(c||p)&&(p?d=self.location.href:typeof document!="undefined"&&document.currentScript&&(d=document.currentScript.src),r&&(d=r),d.indexOf("blob:")!==0?d=d.substr(0,d.lastIndexOf("/")+1):d="",g=function(Z){var se=new XMLHttpRequest;return se.open("GET",Z,!1),se.send(null),se.responseText},p&&(b=function(Z){var se=new XMLHttpRequest;return se.open("GET",Z,!1),se.responseType="arraybuffer",se.send(null),new Uint8Array(se.response)}),y=function(Z,se,ke){var at=new XMLHttpRequest;at.open("GET",Z,!0),at.responseType="arraybuffer",at.onload=function(){if(at.status==200||at.status==0&&at.response){se(at.response);return}ke()},at.onerror=ke,at.send(null)},w=function(Z){document.title=Z});var D=t.print||console.log.bind(console),T=t.printErr||console.warn.bind(console);for(a in s)s.hasOwnProperty(a)&&(t[a]=s[a]);s=null,t.arguments&&(i=t.arguments),t.thisProgram&&(l=t.thisProgram),t.quit&&(u=t.quit);var R;t.wasmBinary&&(R=t.wasmBinary);var P=t.noExitRuntime||!0;typeof WebAssembly!="object"&&ns("no native wasm support detected");var B,G=!1,U;function j(Z,se){Z||ns("Assertion failed: "+se)}function H(Z){var se=t["_"+Z];return j(se,"Cannot call unknown function "+Z+", make sure it is exported"),se}function K(Z,se,ke,at,Xt){var zt={string:function(bo){var qa=0;if(bo!=null&&bo!==0){var Ah=(bo.length<<2)+1;qa=em(Ah),ie(bo,qa,Ah)}return qa},array:function(bo){var qa=em(bo.length);return le(bo,qa),qa}};function tt(bo){return se==="string"?re(bo):se==="boolean"?Boolean(bo):bo}var rt=H(Z),kr=[],Ji=0;if(at)for(var Qi=0;Qi<at.length;Qi++){var Th=zt[ke[Qi]];Th?(Ji===0&&(Ji=Nh()),kr[Qi]=Th(at[Qi])):kr[Qi]=at[Qi]}var rm=rt.apply(null,kr);return rm=tt(rm),Ji!==0&&Sh(Ji),rm}function X(Z,se,ke,at){ke=ke||[];var Xt=ke.every(function(tt){return tt==="number"}),zt=se!=="string";return zt&&Xt&&!at?H(Z):function(){return K(Z,se,ke,arguments,at)}}var oe=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function Y(Z,se,ke){for(var at=se+ke,Xt=se;Z[Xt]&&!(Xt>=at);)++Xt;if(Xt-se>16&&Z.subarray&&oe)return oe.decode(Z.subarray(se,Xt));for(var zt="";se<Xt;){var tt=Z[se++];if(!(tt&128)){zt+=String.fromCharCode(tt);continue}var rt=Z[se++]&63;if((tt&224)==192){zt+=String.fromCharCode((tt&31)<<6|rt);continue}var kr=Z[se++]&63;if((tt&240)==224?tt=(tt&15)<<12|rt<<6|kr:tt=(tt&7)<<18|rt<<12|kr<<6|Z[se++]&63,tt<65536)zt+=String.fromCharCode(tt);else{var Ji=tt-65536;zt+=String.fromCharCode(55296|Ji>>10,56320|Ji&1023)}}return zt}function re(Z,se){return Z?Y(xe,Z,se):""}function te(Z,se,ke,at){if(!(at>0))return 0;for(var Xt=ke,zt=ke+at-1,tt=0;tt<Z.length;++tt){var rt=Z.charCodeAt(tt);if(rt>=55296&&rt<=57343){var kr=Z.charCodeAt(++tt);rt=65536+((rt&1023)<<10)|kr&1023}if(rt<=127){if(ke>=zt)break;se[ke++]=rt}else if(rt<=2047){if(ke+1>=zt)break;se[ke++]=192|rt>>6,se[ke++]=128|rt&63}else if(rt<=65535){if(ke+2>=zt)break;se[ke++]=224|rt>>12,se[ke++]=128|rt>>6&63,se[ke++]=128|rt&63}else{if(ke+3>=zt)break;se[ke++]=240|rt>>18,se[ke++]=128|rt>>12&63,se[ke++]=128|rt>>6&63,se[ke++]=128|rt&63}}return se[ke]=0,ke-Xt}function ie(Z,se,ke){return te(Z,xe,se,ke)}function le(Z,se){de.set(Z,se)}function ae(Z,se){return Z%se>0&&(Z+=se-Z%se),Z}var fe,de,xe,we,De,Ie,ze,qe,it;function Tt(Z){fe=Z,t.HEAP8=de=new Int8Array(Z),t.HEAP16=we=new Int16Array(Z),t.HEAP32=Ie=new Int32Array(Z),t.HEAPU8=xe=new Uint8Array(Z),t.HEAPU16=De=new Uint16Array(Z),t.HEAPU32=ze=new Uint32Array(Z),t.HEAPF32=qe=new Float32Array(Z),t.HEAPF64=it=new Float64Array(Z)}var At=t.INITIAL_MEMORY||16777216,Ue,ut=[],mt=[],Pt=[],xo=[],Kt=!1;mt.push({func:function(){gh()}});function to(){if(t.preRun)for(typeof t.preRun=="function"&&(t.preRun=[t.preRun]);t.preRun.length;)yo(t.preRun.shift());Ua(ut)}function Dr(){Kt=!0,Ua(mt)}function Uo(){Ua(Pt)}function rr(){if(t.postRun)for(typeof t.postRun=="function"&&(t.postRun=[t.postRun]);t.postRun.length;)Vr(t.postRun.shift());Ua(xo)}function yo(Z){ut.unshift(Z)}function Vr(Z){xo.unshift(Z)}var yr=0,ro=null,Ao=null;function Dl(Z){yr++,t.monitorRunDependencies&&t.monitorRunDependencies(yr)}function Wa(Z){if(yr--,t.monitorRunDependencies&&t.monitorRunDependencies(yr),yr==0&&(ro!==null&&(clearInterval(ro),ro=null),Ao)){var se=Ao;Ao=null,se()}}t.preloadedImages={},t.preloadedAudios={};function ns(Z){t.onAbort&&t.onAbort(Z),Z+="",T(Z),G=!0,U=1,Z="abort("+Z+"). Build with -s ASSERTIONS=1 for more info.";var se=new WebAssembly.RuntimeError(Z);throw n(se),se}function Xi(Z,se){return String.prototype.startsWith?Z.startsWith(se):Z.indexOf(se)===0}var Yp="data:application/octet-stream;base64,";function fc(Z){return Xi(Z,Yp)}var Xx="file://";function ph(Z){return Xi(Z,Xx)}var oo="tfjs-backend-wasm.wasm";fc(oo)||(oo=h(oo));function mh(Z){try{if(Z==oo&&R)return new Uint8Array(R);if(b)return b(Z);throw"both async and sync fetching of the wasm failed"}catch(se){ns(se)}}function Yx(){if(!R&&(c||p)){if(typeof fetch=="function"&&!ph(oo))return fetch(oo,{credentials:"same-origin"}).then(function(Z){if(!Z.ok)throw"failed to load wasm binary file at '"+oo+"'";return Z.arrayBuffer()}).catch(function(){return mh(oo)});if(y)return new Promise(function(Z,se){y(oo,function(ke){Z(new Uint8Array(ke))},se)})}return Promise.resolve().then(function(){return mh(oo)})}function Yi(){var Z={a:no};function se(tt,rt){var kr=tt.exports;t.asm=kr,B=t.asm.g,Tt(B.buffer),Ue=t.asm.m,Wa("wasm-instantiate")}Dl("wasm-instantiate");function ke(tt){se(tt.instance)}function at(tt){return Yx().then(function(rt){return WebAssembly.instantiate(rt,Z)}).then(tt,function(rt){T("failed to asynchronously prepare wasm: "+rt),ns(rt)})}function Xt(){return!R&&typeof WebAssembly.instantiateStreaming=="function"&&!fc(oo)&&!ph(oo)&&typeof fetch=="function"?fetch(oo,{credentials:"same-origin"}).then(function(tt){var rt=WebAssembly.instantiateStreaming(tt,Z);return rt.then(ke,function(kr){return T("wasm streaming compile failed: "+kr),T("falling back to ArrayBuffer instantiation"),at(ke)})}):at(ke)}if(t.instantiateWasm)try{var zt=t.instantiateWasm(Z,se);return zt}catch(tt){return T("Module.instantiateWasm callback failed with error: "+tt),!1}return Xt().catch(n),{}}function Ua(Z){for(;Z.length>0;){var se=Z.shift();if(typeof se=="function"){se(t);continue}var ke=se.func;typeof ke=="number"?se.arg===void 0?Ue.get(ke)():Ue.get(ke)(se.arg):ke(se.arg===void 0?null:se.arg)}}function $l(){ns()}function Zx(Z,se,ke){xe.copyWithin(Z,se,se+ke)}function Jx(){return xe.length}function Zi(Z){try{return B.grow(Z-fe.byteLength+65535>>>16),Tt(B.buffer),1}catch(se){}}function fh(Z){var se=Jx(),ke=2147483648;if(Z>ke)return!1;for(var at=1;at<=4;at*=2){var Xt=se*(1+.2/at);Xt=Math.min(Xt,Z+100663296);var zt=Math.min(ke,ae(Math.max(Z,Xt),65536)),tt=Zi(zt);if(tt)return!0}return!1}var dc={mappings:{},buffers:[null,[],[]],printChar:function(Z,se){var ke=dc.buffers[Z];se===0||se===10?((Z===1?D:T)(Y(ke,0)),ke.length=0):ke.push(se)},varargs:void 0,get:function(){dc.varargs+=4;var Z=Ie[dc.varargs-4>>2];return Z},getStr:function(Z){var se=re(Z);return se},get64:function(Z,se){return Z}};function dh(Z){return 0}function Qx(Z,se,ke,at,Xt){}function hh(Z,se,ke,at){for(var Xt=0,zt=0;zt<ke;zt++){for(var tt=Ie[se+zt*8>>2],rt=Ie[se+(zt*8+4)>>2],kr=0;kr<rt;kr++)dc.printChar(Z,xe[tt+kr]);Xt+=rt}return Ie[at>>2]=Xt,0}var no={a:$l,d:Zx,e:fh,f:dh,c:Qx,b:hh},ey=Yi(),gh=t.___wasm_call_ctors=function(){return(gh=t.___wasm_call_ctors=t.asm.h).apply(null,arguments)},ty=t._init=function(){return(ty=t._init=t.asm.i).apply(null,arguments)},xh=t._register_tensor=function(){return(xh=t._register_tensor=t.asm.j).apply(null,arguments)},ry=t._dispose_data=function(){return(ry=t._dispose_data=t.asm.k).apply(null,arguments)},hc=t._dispose=function(){return(hc=t._dispose=t.asm.l).apply(null,arguments)},gc=t._Abs=function(){return(gc=t._Abs=t.asm.n).apply(null,arguments)},oy=t._Add=function(){return(oy=t._Add=t.asm.o).apply(null,arguments)},ny=t._AddN=function(){return(ny=t._AddN=t.asm.p).apply(null,arguments)},sy=t._ArgMax=function(){return(sy=t._ArgMax=t.asm.q).apply(null,arguments)},Ee=t._AvgPool=function(){return(Ee=t._AvgPool=t.asm.r).apply(null,arguments)},iy=t._BatchMatMul=function(){return(iy=t._BatchMatMul=t.asm.s).apply(null,arguments)},ay=t._Ceil=function(){return(ay=t._Ceil=t.asm.t).apply(null,arguments)},ly=t._ClipByValue=function(){return(ly=t._ClipByValue=t.asm.u).apply(null,arguments)},uy=t._Conv2D=function(){return(uy=t._Conv2D=t.asm.v).apply(null,arguments)},cy=t._Conv2DBackpropInput=function(){return(cy=t._Conv2DBackpropInput=t.asm.w).apply(null,arguments)},Rl=t._Cos=function(){return(Rl=t._Cos=t.asm.x).apply(null,arguments)},py=t._CropAndResize=function(){return(py=t._CropAndResize=t.asm.y).apply(null,arguments)},my=t._Cumsum=function(){return(my=t._Cumsum=t.asm.z).apply(null,arguments)},fy=t._DepthToSpace=function(){return(fy=t._DepthToSpace=t.asm.A).apply(null,arguments)},dy=t._DepthwiseConv2dNative=function(){return(dy=t._DepthwiseConv2dNative=t.asm.B).apply(null,arguments)},hy=t._Equal=function(){return(hy=t._Equal=t.asm.C).apply(null,arguments)},gy=t._Exp=function(){return(gy=t._Exp=t.asm.D).apply(null,arguments)},xy=t._FlipLeftRight=function(){return(xy=t._FlipLeftRight=t.asm.E).apply(null,arguments)},yy=t._Floor=function(){return(yy=t._Floor=t.asm.F).apply(null,arguments)},by=t._FloorDiv=function(){return(by=t._FloorDiv=t.asm.G).apply(null,arguments)},ja=t._FusedBatchNorm=function(){return(ja=t._FusedBatchNorm=t.asm.H).apply(null,arguments)},Zp=t._FusedConv2D=function(){return(Zp=t._FusedConv2D=t.asm.I).apply(null,arguments)},Jp=t._FusedDepthwiseConv2D=function(){return(Jp=t._FusedDepthwiseConv2D=t.asm.J).apply(null,arguments)},wy=t._Gather=function(){return(wy=t._Gather=t.asm.K).apply(null,arguments)},_y=t._GatherNd=function(){return(_y=t._GatherNd=t.asm.L).apply(null,arguments)},ky=t._Greater=function(){return(ky=t._Greater=t.asm.M).apply(null,arguments)},vy=t._GreaterEqual=function(){return(vy=t._GreaterEqual=t.asm.N).apply(null,arguments)},Cy=t._LeakyRelu=function(){return(Cy=t._LeakyRelu=t.asm.O).apply(null,arguments)},Xe=t._Less=function(){return(Xe=t._Less=t.asm.P).apply(null,arguments)},Iy=t._LessEqual=function(){return(Iy=t._LessEqual=t.asm.Q).apply(null,arguments)},Ny=t._Log=function(){return(Ny=t._Log=t.asm.R).apply(null,arguments)},Sy=t._LogicalAnd=function(){return(Sy=t._LogicalAnd=t.asm.S).apply(null,arguments)},Ty=t._Max=function(){return(Ty=t._Max=t.asm.T).apply(null,arguments)},Ay=t._MaxPool=function(){return(Ay=t._MaxPool=t.asm.U).apply(null,arguments)},Ey=t._Maximum=function(){return(Ey=t._Maximum=t.asm.V).apply(null,arguments)},Qp=t._Mean=function(){return(Qp=t._Mean=t.asm.W).apply(null,arguments)},yh=t._Min=function(){return(yh=t._Min=t.asm.X).apply(null,arguments)},bh=t._Minimum=function(){return(bh=t._Minimum=t.asm.Y).apply(null,arguments)},Dy=t._Multiply=function(){return(Dy=t._Multiply=t.asm.Z).apply(null,arguments)},$y=t._Neg=function(){return($y=t._Neg=t.asm._).apply(null,arguments)},Ry=t._NonMaxSuppressionV3=function(){return(Ry=t._NonMaxSuppressionV3=t.asm.$).apply(null,arguments)},Fy=t._NonMaxSuppressionV4=function(){return(Fy=t._NonMaxSuppressionV4=t.asm.aa).apply(null,arguments)},Oy=t._NonMaxSuppressionV5=function(){return(Oy=t._NonMaxSuppressionV5=t.asm.ba).apply(null,arguments)},Py=t._NotEqual=function(){return(Py=t._NotEqual=t.asm.ca).apply(null,arguments)},My=t._OneHot=function(){return(My=t._OneHot=t.asm.da).apply(null,arguments)},ft=t._PadV2=function(){return(ft=t._PadV2=t.asm.ea).apply(null,arguments)},Ly=t._Pow=function(){return(Ly=t._Pow=t.asm.fa).apply(null,arguments)},zy=t._Prelu=function(){return(zy=t._Prelu=t.asm.ga).apply(null,arguments)},By=t._Prod=function(){return(By=t._Prod=t.asm.ha).apply(null,arguments)},xc=t._RealDiv=function(){return(xc=t._RealDiv=t.asm.ia).apply(null,arguments)},wh=t._Relu=function(){return(wh=t._Relu=t.asm.ja).apply(null,arguments)},_h=t._Relu6=function(){return(_h=t._Relu6=t.asm.ka).apply(null,arguments)},kh=t._ResizeBilinear=function(){return(kh=t._ResizeBilinear=t.asm.la).apply(null,arguments)},Vy=t._Reverse=function(){return(Vy=t._Reverse=t.asm.ma).apply(null,arguments)},Gy=t._RotateWithOffset=function(){return(Gy=t._RotateWithOffset=t.asm.na).apply(null,arguments)},vh=t._Round=function(){return(vh=t._Round=t.asm.oa).apply(null,arguments)},Wy=t._Rsqrt=function(){return(Wy=t._Rsqrt=t.asm.pa).apply(null,arguments)},Ch=t._ScatterNd=function(){return(Ch=t._ScatterNd=t.asm.qa).apply(null,arguments)},Ha=t._SelectV2=function(){return(Ha=t._SelectV2=t.asm.ra).apply(null,arguments)},Uy=t._Sigmoid=function(){return(Uy=t._Sigmoid=t.asm.sa).apply(null,arguments)},jy=t._Sin=function(){return(jy=t._Sin=t.asm.ta).apply(null,arguments)},oI=t._Softmax=function(){return(oI=t._Softmax=t.asm.ua).apply(null,arguments)},Ih=t._Sqrt=function(){return(Ih=t._Sqrt=t.asm.va).apply(null,arguments)},Hy=t._Square=function(){return(Hy=t._Square=t.asm.wa).apply(null,arguments)},qy=t._SquaredDifference=function(){return(qy=t._SquaredDifference=t.asm.xa).apply(null,arguments)},Ky=t._Step=function(){return(Ky=t._Step=t.asm.ya).apply(null,arguments)},Xy=t._StridedSlice=function(){return(Xy=t._StridedSlice=t.asm.za).apply(null,arguments)},Yy=t._Sub=function(){return(Yy=t._Sub=t.asm.Aa).apply(null,arguments)},Zy=t._Sum=function(){return(Zy=t._Sum=t.asm.Ba).apply(null,arguments)},Jy=t._Tanh=function(){return(Jy=t._Tanh=t.asm.Ca).apply(null,arguments)},Qy=t._Tile=function(){return(Qy=t._Tile=t.asm.Da).apply(null,arguments)},eb=t._TopK=function(){return(eb=t._TopK=t.asm.Ea).apply(null,arguments)},tb=t._Transpose=function(){return(tb=t._Transpose=t.asm.Fa).apply(null,arguments)},rb=t.__FusedMatMul=function(){return(rb=t.__FusedMatMul=t.asm.Ga).apply(null,arguments)},ob=t._malloc=function(){return(ob=t._malloc=t.asm.Ha).apply(null,arguments)},nb=t._free=function(){return(nb=t._free=t.asm.Ia).apply(null,arguments)},Nh=t.stackSave=function(){return(Nh=t.stackSave=t.asm.Ja).apply(null,arguments)},Sh=t.stackRestore=function(){return(Sh=t.stackRestore=t.asm.Ka).apply(null,arguments)},em=t.stackAlloc=function(){return(em=t.stackAlloc=t.asm.La).apply(null,arguments)};t.cwrap=X;var yc;function sb(Z){this.name="ExitStatus",this.message="Program terminated with exit("+Z+")",this.status=Z}Ao=function Z(){yc||tm(),yc||(Ao=Z)};function tm(Z){if(Z=Z||i,yr>0||(to(),yr>0))return;function se(){yc||(yc=!0,t.calledRun=!0,!G&&(Dr(),Uo(),o(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),rr()))}t.setStatus?(t.setStatus("Running..."),setTimeout(function(){setTimeout(function(){t.setStatus("")},1),se()},1)):se()}if(t.run=tm,t.preInit)for(typeof t.preInit=="function"&&(t.preInit=[t.preInit]);t.preInit.length>0;)t.preInit.pop()();return tm(),e.ready}}();typeof Hx=="object"&&typeof QC=="object"?QC.exports=eI:typeof define=="function"&&define.amd?define([],function(){return eI}):typeof Hx=="object"&&(Hx.WasmBackendModule=eI)});var kB=1e-7,vB=1e-4,Xa=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},Gs=class{refCount(e){return jo("refCount")}incRef(e){return jo("incRef")}timerAvailable(){return!0}time(e){return jo("time")}read(e){return jo("read")}readSync(e){return jo("readSync")}numDataIds(){return jo("numDataIds")}disposeData(e,t){return jo("disposeData")}write(e,t,o){return jo("write")}move(e,t,o,n,s){return jo("move")}memory(){return jo("memory")}floatPrecision(){return jo("floatPrecision")}epsilon(){return this.floatPrecision()===32?kB:vB}dispose(){return jo("dispose")}};function jo(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function hI(r){let e=r.length,t=0,o=0;for(;e>0;)o=Math.random()*e|0,e--,t=r[e],r[e]=r[o],r[o]=t}function CB(r,e){if(r.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${e.length}`);let t=r.length,o,n,s=0;for(;t>0;)s=Math.random()*t|0,t--,o=r[t],n=e[t],r[t]=r[s],e[t]=e[s],r[s]=o,e[s]=n}function Nc(r,e,t){return Math.max(r,Math.min(e,t))}function IB(r){return r%2==0?r:r+1}function NB(r){let e=0;for(let t=0;t<r.length;t++)e+=r[t];return e}function SB(r,e){let t=Math.random();return e*t+(1-t)*r}function TB(r,e){let t=0;for(let o=0;o<r.length;o++){let n=Number(r[o])-Number(e[o]);t+=n*n}return t}function A(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function vt(r,e,t=""){A(Ur(r,e),()=>t+` Shapes ${r} and ${e} must match`)}function Eo(r){A(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ss(r,e=[],t=!1){if(e==null&&(e=[]),Array.isArray(r)||or(r)&&!t)for(let o=0;o<r.length;++o)ss(r[o],e,t);else e.push(r);return e}function ct(r){if(r.length===0)return 1;let e=r[0];for(let t=1;t<r.length;t++)e*=r[t];return e}function AB(r){return r.length===0}function Ur(r,e){if(r===e)return!0;if(r==null||e==null||r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==e[t])return!1;return!0}function ot(r){return r%1==0}function EB(r){if(Math.tanh!=null)return Math.tanh(r);if(r===Infinity)return 1;if(r===-Infinity)return-1;{let e=Math.exp(2*r);return(e-1)/(e+1)}}function DB(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}function $B(r){let e=new Uint32Array(r);for(let t=0;t<r;++t)e[t]=t;return hI(e),e}function Ol(r,e){return e<=r.length?r:r+" ".repeat(e-r.length)}function RB(r,e=o=>0,t){return new Promise((o,n)=>{let s=0,a=()=>{if(r()){o();return}s++;let i=e(s);if(t!=null&&s>=t){n();return}setTimeout(a,i)};a()})}function FB(r,e){let t=1,o=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)t*=r[s];else if(r[s]===-1){if(o!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${o} and dim ${s}`);o=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(o===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${r}`);return r}if(t===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(e%t!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);let n=r.slice();return n[o]=e/t,n}function Jt(r,e){let t=e.length;return r=r==null?e.map((o,n)=>n):[].concat(r),A(r.every(o=>o>=-t&&o<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${r}`),A(r.every(o=>ot(o)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(o=>o<0?t+o:o)}function ub(r,e){let t=[],o=[],n=e!=null&&Array.isArray(e)&&e.length===0,s=e==null||n?null:Jt(e,r).sort(),a=0;for(let i=0;i<r.length;++i){if(s!=null){if(s[a]===i&&r[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${r[i]}' is not 1`);(s[a]==null||s[a]>i)&&r[i]===1&&(t.push(r[i]),o.push(i)),s[a]<=i&&a++}r[i]!==1&&(t.push(r[i]),o.push(i))}return{newShape:t,keptDims:o}}function cb(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${r}`);return t}function pb(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else if(r==="string")t=new Array(e);else throw new Error(`Unknown data type ${r}`);return t}function mb(r,e){for(let t=0;t<r.length;t++){let o=r[t];if(isNaN(o)||!isFinite(o))throw Error(`A tensor of type ${e} being uploaded contains ${o}.`)}}function fb(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function OB(r,e){return!(e==="complex64"||e==="float32"&&r!=="complex64"||e==="int32"&&r!=="float32"&&r!=="complex64"||e==="bool"&&r==="bool")}function or(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array}function Rh(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function db(r){if(r==null)return 0;let e=0;return r.forEach(t=>e+=t.length),e}function is(r){return typeof r=="string"||r instanceof String}function gI(r){return typeof r=="boolean"}function xI(r){return typeof r=="number"}function Sc(r){return Array.isArray(r)?Sc(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array?"int32":xI(r)?"float32":is(r)?"string":gI(r)?"bool":"float32"}function Ws(r){return!!(r&&r.constructor&&r.call&&r.apply)}function Tc(r,e){for(let t=e;t<r;++t)if(r%t==0)return t;return r}function Us(r){let e=r.length;if(e<2)return[];let t=new Array(e-1);t[e-2]=r[e-1];for(let o=e-3;o>=0;--o)t[o]=t[o+1]*r[o+1];return t}function yI(r,e,t){let o=new Array;if(e.length===1){let n=e[0];for(let s=0;s<n;s++)o[s]=t[r+s]}else{let n=e[0],s=e.slice(1),a=s.reduce((i,l)=>i*l);for(let i=0;i<n;i++)o[i]=yI(r+i*a,s,t)}return o}function Pl(r,e){if(r.length===0)return e[0];let t=r.reduce((o,n)=>o*n);if(t===0)return[];if(t!==e.length)throw new Error(`[${r}] does not match the input size ${e.length}.`);return yI(0,r,e)}function im(r,e){let t=Ac(r,e);for(let o=0;o<t.length;o++)t[o]=1;return t}function Ac(r,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${e}`)}function PB(r,e){let t=r.reduce((o,n)=>o*n,1);if(e==null||e==="float32")return Pl(r,new Float32Array(t));if(e==="int32")return Pl(r,new Int32Array(t));if(e==="bool")return Pl(r,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function am(r){r.forEach(e=>{A(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function MB(r,e,t){if(e===0)return 0;if(e===1)return r[0];let o=r[r.length-1];for(let n=0;n<r.length-1;++n)o+=t[n]*r[n];return o}function LB(r,e,t){if(e===0)return[];if(e===1)return[r];let o=new Array(e);for(let n=0;n<o.length-1;++n)o[n]=Math.floor(r/t[n]),r-=o[n]*t[n];return o[o.length-1]=r,o}function lm(r){return r&&r.then&&typeof r.then=="function"}var bI="tfjsflags",Fh=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,o){if(this.flagRegistry[e]={evaluationFn:t,setHook:o},this.urlFlags[e]!=null){let n=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${n}.`),this.set(e,n)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(lm(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=zB(this.global.location.search);bI in e&&e[bI].split(",").forEach(o=>{let[n,s]=o.split(":");this.urlFlags[n]=BB(n,s)})}};function zB(r){let e={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...o)=>(VB(e,o[0],o[1]),o.join("="))),e}function VB(r,e,t){r[decodeURIComponent(e)]=decodeURIComponent(t||"")}function BB(r,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${r}.`)}function W(){return hb}var hb=null;function wI(r){hb=r}var gb;function xb(){if(gb==null){let r;if(typeof window!="undefined")r=window;else if(typeof global!="undefined")r=global;else if(typeof process!="undefined")r=process;else if(typeof self!="undefined")r=self;else throw new Error("Could not find a global object");gb=r}return gb}function GB(){let r=xb();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function um(r,e){let t=GB();if(t.has(r))return t.get(r);{let o=e();return t.set(r,o),t.get(r)}}var as="Abs",js="Acos",Hs="Acosh",wo="Add",Ho="AddN",Ml="All",Ll="Any",qo="ArgMax",ea="ArgMin",qs="Asin",Ks="Asinh",Xs="Atan",Ys="Atanh",Zs="Atan2",Ko="AvgPool",zl="AvgPoolGrad",ta="AvgPool3D",Bl="AvgPool3DGrad",Xo="BatchMatMul",ra="BatchToSpaceND",Vl="Bincount",yb="BroadcastTo",Do="Cast",Yo="Ceil",$o="ClipByValue",Gl="Complex",oa="ComplexAbs",ls="Concat",Zo="Conv2D",Wl="Conv2DBackpropFilter",Jo="Conv2DBackpropInput",na="Conv3D",Ul="Conv3DBackpropFilterV2",jl="Conv3DBackpropInputV2",Qo="Cos",Js="Cosh",en="Cumsum",Qs="CropAndResize",Hl="DenseBincount",ei="DepthToSpace",tn="DepthwiseConv2dNative",ql="DepthwiseConv2dNativeBackpropFilter",Kl="DepthwiseConv2dNativeBackpropInput",Xl="Diag",sa="Dilation2D",Ec="Dilation2DBackpropInput",Dc="Dilation2DBackpropFilter",rn="RealDiv",ti="Elu",Yl="EluGrad",ri="Erf",oi="Equal",on="Exp",us="ExpandDims",ni="Expm1",Zl="FFT",ia="Fill",si="FlipLeftRight",nn="Floor",sn="FloorDiv",an="FusedBatchNorm",cs="GatherV2",ii="GatherNd",ai="Greater",ln="GreaterEqual",Ro="Identity",Jl="IFFT",Ql="Imag",li="IsFinite",ui="IsInf",ci="IsNan",un="LeakyRelu",pi="Less",mi="LessEqual",eu="LinSpace",cn="Log",fi="Log1p",di="LogicalAnd",Ya="LogicalNot",Za="LogicalOr",bb="LogSoftmax",aa="LRN",tu="LRNGrad",pn="Max",mn="Maximum",fn="MaxPool",ru="MaxPoolGrad",la="MaxPool3D",ou="MaxPool3DGrad",nu="MaxPoolWithArgmax",dn="Mean",hn="Min",gn="Minimum",ua="MirrorPad",hi="Mod",su="Multinomial",xn="Multiply",ps="Neg",gi="NotEqual",xi="NonMaxSuppressionV3",yi="NonMaxSuppressionV4",bi="NonMaxSuppressionV5",ms="OnesLike",yn="OneHot",fs="Pack",bn="PadV2",WB="Pool",wn="Pow",_n="Prelu",wi="Prod",ca="Range",iu="Real",_i="Reciprocal",kn="Relu",ds="Reshape",pa="ResizeNearestNeighbor",au="ResizeNearestNeighborGrad",vn="ResizeBilinear",lu="ResizeBilinearGrad",Cn="Relu6",In="Reverse",Nn="Round",Sn="Rsqrt",ki="ScatterNd",hs="Select",vi="Selu",gs="Slice",Tn="Sin",Ci="Sinh",Ii="Sign",An="Sigmoid",Ni="Softplus",En="Sqrt",Dn="Sum",ma="SpaceToBatchND",xs="SplitV",$n="Softmax",Rn="SquaredDifference",fa="Square",Fn="Sub",uu="SparseToDense",Si="StridedSlice",Ti="Tan",On="Tanh",_o="Tile",Ai="TopK",Pn="Transpose",cu="Unique",ys="Unpack",da="UnsortedSegmentSum",bs="ZerosLike",Fo="Step",$c="FromPixels",Ei="RotateWithOffset",ws="_FusedMatMul",_s="FusedConv2D",ks="FusedDepthwiseConv2D";var Rc=um("kernelRegistry",()=>new Map),cm=um("gradRegistry",()=>new Map);function Fc(r,e){let t=wb(r,e);return Rc.get(t)}function Oh(r){return cm.get(r)}function pm(r){let e=Rc.entries(),t=[];for(;;){let{done:o,value:n}=e.next();if(o)break;let[s,a]=n,[i]=s.split("_");i===r&&t.push(a)}return t}function Ja(r){let{kernelName:e,backendName:t}=r,o=wb(e,t);Rc.has(o)&&console.warn(`The kernel '${e}' for backend '${t}' is already registered`),Rc.set(o,r)}function _b(r){let{kernelName:e}=r;cm.has(e)&&W().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),cm.set(e,r)}function UB(r,e){let t=wb(r,e);if(!Rc.has(t))throw new Error(`The kernel '${r}' for backend '${e}' is not registered`);Rc.delete(t)}function jB(r){if(!cm.has(r))throw new Error(`The gradient '${r}' for backend is not registered`);cm.delete(r)}function HB(r,e){pm(r).forEach(o=>{let n=Object.assign({},o,{backendName:e});Ja(n)})}function wb(r,e){return`${e}_${r}`}var x={};Je(x,{arraysEqual:()=>Ur,assert:()=>A,assertNonNegativeIntegerDimensions:()=>am,assertNonNull:()=>Eo,assertShapesMatch:()=>vt,bytesFromStringArray:()=>db,bytesPerElement:()=>Rh,checkConversionForErrors:()=>mb,clamp:()=>Nc,computeStrides:()=>Us,createScalarValue:()=>qB,createShuffledIndices:()=>$B,decodeString:()=>Pc,distSquared:()=>TB,encodeString:()=>Qa,fetch:()=>XB,flatten:()=>ss,getArrayFromDType:()=>pb,getTypedArrayFromDType:()=>cb,hasEncodingLoss:()=>OB,indexToLoc:()=>LB,inferDtype:()=>Sc,inferFromImplicitShape:()=>FB,isBoolean:()=>gI,isFunction:()=>Ws,isInt:()=>ot,isNumber:()=>xI,isPromise:()=>lm,isScalarShape:()=>AB,isString:()=>is,isTypedArray:()=>or,isValidDtype:()=>fb,locToIndex:()=>MB,makeOnesTypedArray:()=>im,makeZerosNestedTypedArray:()=>PB,makeZerosTypedArray:()=>Ac,nearestDivisor:()=>Tc,nearestLargerEven:()=>IB,now:()=>pu,parseAxisParam:()=>Jt,randUniform:()=>SB,repeatedTry:()=>RB,rightPad:()=>Ol,shuffle:()=>hI,shuffleCombo:()=>CB,sizeFromShape:()=>ct,sizeToSquarishShape:()=>DB,squeezeShape:()=>ub,sum:()=>NB,tanh:()=>EB,toNestedArray:()=>Pl,toTypedArray:()=>Oc});function qB(r,e){return e==="string"?Qa(r):Oc([r],e)}function KB(r,e){return r instanceof Float32Array&&e==="float32"||r instanceof Int32Array&&e==="int32"||r instanceof Uint8Array&&e==="bool"}function Oc(r,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=ss(r)),W().getBool("DEBUG")&&mb(r,e),KB(r,e))return r;if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"){let t=new Uint8Array(r.length);for(let o=0;o<t.length;++o)Math.round(r[o])!==0&&(t[o]=1);return t}else throw new Error(`Unknown data type ${e}`)}function pu(){return W().platform.now()}function XB(r,e){return W().platform.fetch(r,e)}function Qa(r,e="utf-8"){return e=e||"utf-8",W().platform.encode(r,e)}function Pc(r,e="utf-8"){return e=e||"utf-8",W().platform.decode(r,e)}var kb=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new _I)}profileKernel(e,t,o){let n,s=()=>{n=o()},a,i=pu();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let u of n)u.dataSync();a=Promise.resolve({kernelMs:pu()-i})}if(W().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<n.length;u++){let c=n[u];c.data().then(p=>{YB(p,c.dtype,e)})}return{kernelName:e,outputs:n,inputs:t,timeMs:a.then(u=>u.kernelMs),extraInfo:a.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:o,timeMs:n,inputs:s,extraInfo:a}=e;o.forEach(i=>{Promise.all([i.data(),n,a]).then(l=>{this.logger.logKernelProfile(t,i,l[0],l[1],s,l[2])})})}};function YB(r,e,t){if(e!=="float32")return!1;for(let o=0;o<r.length;o++){let n=r[o];if(isNaN(n)||!isFinite(n))return console.warn(`Found ${n} in the result of '${t}'`),!0}return!1}var _I=class{logKernelProfile(e,t,o,n,s,a){let i=typeof n=="number"?Ol(`${n}ms`,9):n.error,l=Ol(e,25),u=t.rank,c=t.size,p=Ol(t.shape.toString(),14),m="";for(let f in s){let d=s[f];if(d!=null){let h=d.shape||t.shape,g=h.length;m+=`${f}: ${g}D ${g>0?h:""} `}}console.log(`%c${l}	%c${i}	%c${u}D ${p}	%c${c}	%c${m}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function kI(r,e,t){let o={},n={};for(let l=0;l<e.length;l++)o[e[l].id]=!0;for(let l=0;l<r.length;l++){let u=r[l],c=u.inputs;for(let p in c){let m=c[p],f=!1;for(let d=0;d<e.length;d++)if(o[m.id]){u.outputs.forEach(h=>o[h.id]=!0),f=!0,n[u.id]=!0;break}if(f)break}}let s={};s[t.id]=!0;let a={};for(let l=r.length-1;l>=0;l--){let u=r[l],c=u.inputs;for(let p=0;p<u.outputs.length;p++)if(s[u.outputs[p].id]){for(let m in c)s[c[m].id]=!0,a[u.id]=!0;break}}let i=[];for(let l=0;l<r.length;l++){let u=r[l];if(n[u.id]&&a[u.id]){let c={};for(let m in u.inputs){let f=u.inputs[m];o[f.id]&&(c[m]=f)}let p=Object.assign({},u);p.inputs=c,p.outputs=u.outputs,i.push(p)}}return i}function vI(r,e,t,o){for(let n=e.length-1;n>=0;n--){let s=e[n],a=[];if(s.outputs.forEach(l=>{let u=r[l.id];u!=null?a.push(u):a.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let i=s.gradient(a);for(let l in s.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);let u=t(()=>i[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let c=s.inputs[l];if(!Ur(u.shape,c.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(r[c.id]==null)r[c.id]=u;else{let p=r[c.id];r[c.id]=o(p,u),p.dispose()}}}}var CI=20,mm=3,vb=7;function II(r,e,t,o){let n=Us(e),s=ZB(r,e,t,n),a=e.length,i=Ph(r,e,t,n,s),l=["Tensor"];return o&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(i.map(u=>"    "+u).join(`
`)),l.join(`
`)}function ZB(r,e,t,o){let n=ct(e),s=o[o.length-1],a=new Array(s).fill(0),i=e.length,l=t==="complex64"?dm(r):r;if(i>1)for(let u=0;u<n/s;u++){let c=u*s;for(let p=0;p<s;p++)a[p]=Math.max(a[p],fm(l[c+p],0,t).length)}return a}function fm(r,e,t){let o;return Array.isArray(r)?o=`${parseFloat(r[0].toFixed(vb))} + ${parseFloat(r[1].toFixed(vb))}j`:is(r)?o=`'${r}'`:t==="bool"?o=NI(r):o=parseFloat(r.toFixed(vb)).toString(),Ol(o,e)}function NI(r){return r===0?"false":"true"}function Ph(r,e,t,o,n,s=!0){let a=t==="complex64"?2:1,i=e[0],l=e.length;if(l===0){if(t==="complex64"){let h=dm(r);return[fm(h[0],0,t)]}return t==="bool"?[NI(r[0])]:[r[0].toString()]}if(l===1){if(i>CI){let g=mm*a,y=Array.from(r.slice(0,g)),b=Array.from(r.slice((i-mm)*a,i*a));return t==="complex64"&&(y=dm(y),b=dm(b)),["["+y.map((w,_)=>fm(w,n[_],t)).join(", ")+", ..., "+b.map((w,_)=>fm(w,n[i-mm+_],t)).join(", ")+"]"]}let h=t==="complex64"?dm(r):Array.from(r);return["["+h.map((g,y)=>fm(g,n[y],t)).join(", ")+"]"]}let u=e.slice(1),c=o.slice(1),p=o[0]*a,m=[];if(i>CI){for(let h=0;h<mm;h++){let g=h*p,y=g+p;m.push(...Ph(r.slice(g,y),u,t,c,n,!1))}m.push("...");for(let h=i-mm;h<i;h++){let g=h*p,y=g+p;m.push(...Ph(r.slice(g,y),u,t,c,n,h===i-1))}}else for(let h=0;h<i;h++){let g=h*p,y=g+p;m.push(...Ph(r.slice(g,y),u,t,c,n,h===i-1))}let f=l===2?",":"";m[0]="["+m[0]+f;for(let h=1;h<m.length-1;h++)m[h]=" "+m[h]+f;let d=`,
`;for(let h=2;h<l;h++)d+=`
`;return m[m.length-1]=" "+m[m.length-1]+"]"+(s?"":d),m}function dm(r){let e=[];for(let t=0;t<r.length;t+=2)e.push([r[t],r[t+1]]);return e}var lt=class{constructor(e,t,o){if(this.dtype=t,this.shape=e.slice(),this.size=ct(e),o!=null){let n=o.length;A(n===this.size,()=>`Length of values '${n}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=o||pb(t,this.size),this.strides=Us(e)}set(e,...t){t.length===0&&(t=[0]),A(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let o=this.locToIndex(t);this.values[o]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let n of e){if(n<0||n>=this.shape[t]){let s=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(s)}t++}let o=e[e.length-1];for(let n=0;n<e.length-1;++n)o+=this.strides[n]*e[n];return this.values[o]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let o=0;o<e.length-1;++o)t+=this.strides[o]*e[o];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let o=0;o<t.length-1;++o)t[o]=Math.floor(e/this.strides[o]),e-=t[o]*this.strides[o];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Di().makeTensor(this.values,this.shape,this.dtype)}},Di=null,Mc=null,JB=null;function SI(r){Di=r}function TI(r){Mc=r}function AI(r){JB=r}var Ve=class{constructor(e,t,o,n){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ct(e),this.strides=Us(e),this.dataId=o,this.id=n,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Mc.buffer(this.shape,this.dtype,e)}bufferSync(){return Mc.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Pl(this.shape,e)}arraySync(){return Pl(this.shape,this.dataSync())}async data(){this.throwIfDisposed();let e=Di().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(o=>Pc(o))}catch(o){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();let e=Di().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Pc(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Di().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Di().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Mc.print(this,e)}clone(){return this.throwIfDisposed(),Mc.clone(this)}toString(e=!1){let t=this.dataSync();return II(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Mc.cast(this,e)}variable(e=!0,t,o){return this.throwIfDisposed(),Di().makeVariable(this,e,t,o)}};Object.defineProperty(Ve,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function F(){return um("Tensor",()=>Ve)}F();var el=class extends Ve{constructor(e,t,o,n){super(e.shape,e.dtype,e.dataId,n);this.trainable=t,this.name=o}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ur(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Di().disposeTensor(this),this.dataId=e.dataId,Di().incRef(this,null)}dispose(){Di().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(el,Symbol.hasInstance,{value:r=>r instanceof Ve&&r.assign!=null&&r.assign instanceof Function});var Mn={};Je(Mn,{assertTypesMatch:()=>Ab,getTensorsInContainer:()=>hm,isTensorInList:()=>e3,makeTypesMatch:()=>Ge});var Cb;(function(r){r.R0="R0",r.R1="R1",r.R2="R2",r.R3="R3",r.R4="R4",r.R5="R5",r.R6="R6"})(Cb||(Cb={}));var Ib;(function(r){r.float32="float32",r.int32="int32",r.bool="int32",r.complex64="complex64"})(Ib||(Ib={}));var Nb;(function(r){r.float32="float32",r.int32="int32",r.bool="bool",r.complex64="complex64"})(Nb||(Nb={}));var Sb;(function(r){r.float32="float32",r.int32="float32",r.bool="float32",r.complex64="complex64"})(Sb||(Sb={}));var Tb;(function(r){r.float32="complex64",r.int32="complex64",r.bool="complex64",r.complex64="complex64"})(Tb||(Tb={}));var QB={float32:Sb,int32:Ib,bool:Nb,complex64:Tb};function fr(r,e){if(r==="string"||e==="string"){if(r==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${r} with ${e}`)}return QB[r][e]}function mu(r){return fr(r,"int32")}function Ge(r,e){if(r.dtype===e.dtype)return[r,e];let t=fr(r.dtype,e.dtype);return[r.cast(t),e.cast(t)]}function Ab(r,e){A(r.dtype===e.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${e.dtype}) input must match`)}function e3(r,e){return e.some(t=>t.id===r.id)}function hm(r){let e=[],t=new Set;return EI(r,e,t),e}function EI(r,e,t){if(r==null)return;if(r instanceof Ve){e.push(r);return}if(!t3(r))return;let o=r;for(let n in o){let s=o[n];t.has(s)||(t.add(s),EI(s,e,t))}}function t3(r){return Array.isArray(r)||typeof r=="object"}function Eb(r){return r.kernelName!=null}var Db=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},fu=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Db}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let o=e[t];if(await this.initializeBackend(o).success){await this.setBackend(o);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,o=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:o},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:o}=this.initializeBackend(e);if(!(o?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new kb(this.backendInstance),!0}setupRegisteredKernels(){pm(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){pm(e).forEach(o=>{o.disposeFunc!=null&&o.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let o=t.factory();if(o&&!(o instanceof Gs)&&typeof o.then=="function"){let n=++this.pendingBackendInitId,s=o.then(a=>n<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(n<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=o,{success:!0,asyncInit:!1}}catch(o){return console.warn(`Initialization of backend ${e} failed`),console.warn(o.stack||o.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let o=e[t],{success:n,asyncInit:s}=this.initializeBackend(o);if(s||n)return{name:o,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let o=this.state.tensorInfo.get(t),n=o.backend,s=this.readSync(t),a=n.refCount(t);n.disposeData(t,!0),o.backend=e,e.move(t,s,o.shape,o.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let o=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");o=e}let n;return this.scopedRun(()=>this.startScope(o),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,o){e();try{let n=o();return t(),n}catch(n){throw t(),n}}nextTensorId(){return fu.nextTensorId++}nextVariableId(){return fu.nextVariableId++}clone(e){let t=E.runKernel(Ro,{x:e}),o={x:e},n=a=>({x:()=>{let i="float32",l={x:a},u={dtype:i};return E.runKernel(Do,l,u)}}),s=[];return this.addTapeNode(this.state.activeScope.name,o,[t],n,s,{}),t}runKernel(e,t,o){if(!(Fc(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:o})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,o){let n=this.backend.numDataIds(),s=0;o.forEach(l=>{s+=l.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=n-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,o=[],n=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let l,u=Eb(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Eb(e)){let{kernelName:d,inputs:h,attrs:g}=e;this.backendName==null&&this.backend;let y=Fc(d,this.backendName);A(y!=null,()=>`Cannot find registered kernel '${d}' for backend '${this.backendName}'`),i=()=>{let b=this.backend.numDataIds();l=y.kernelFunc({inputs:h,attrs:g,backend:this.backend});let w=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(d,b,w);let _=w.map(C=>{if(C.rank!=null)return C;let{dataId:D,shape:T,dtype:R}=C;return this.makeTensorFromDataId(D,T,R)});if(n){let C=this.getTensorsForGradient(d,h,_);o=this.saveTensorsForBackwardMode(C)}return _}}else{let{forwardFunc:d}=e,h=g=>{!n||(o=g.map(y=>this.keep(this.clone(y))))};i=()=>{let g=this.backend.numDataIds();l=this.tidy(()=>d(this.backend,h));let y=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,g,y),y}}let{inputs:c,attrs:p}=e,m=Eb(e)?null:e.backwardsFunc,f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(f=this.profiler.profileKernel(u,c,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs)}),n&&this.addTapeNode(u,c,t,m,o,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(d=>c[d]!=null?c[d].shape:null),outputShapes:t.map(d=>d.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(o=>this.keep(this.clone(o)))}getTensorsForGradient(e,t,o){let n=Oh(e);if(n!=null){let s=n.inputsToSave||[],a=n.outputsToSave||[],i;n.saveAllInputs?(A(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(u=>t[u])):i=s.map(u=>t[u]);let l=o.filter((u,c)=>a[c]);return i.concat(l)}return[]}makeTensor(e,t,o,n){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");o=o||"float32",n=n||this.backend;let s=e;o==="string"&&is(e[0])&&(s=e.map(l=>Qa(l)));let a=n.write(s,t,o),i=new Ve(t,o,a,this.nextTensorId());if(this.trackTensor(i,n),o==="string"){let l=this.state.tensorInfo.get(a),u=db(s);this.state.numBytes+=u-l.bytes,l.bytes=u}return i}makeTensorFromDataId(e,t,o,n){o=o||"float32";let s=new Ve(t,o,e,this.nextTensorId());return this.trackTensor(s,n),s}makeVariable(e,t=!0,o,n){o=o||this.nextVariableId().toString(),n!=null&&n!==e.dtype&&(e=e.cast(n));let s=new el(e,t,o,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let o=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(o=e.size*Rh(e.dtype)),this.state.numBytes+=o,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:o})),e instanceof el||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let o=e.size*Rh(e.dtype);this.state.numBytes-=o}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,o=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(n=>n.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-o;for(let n of this.state.activeProfile.kernels)n.kernelTimeMs=await n.kernelTimeMs,n.extraInfo=await n.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,o,n,s,a){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:o,saved:s},l=Oh(e);l!=null&&(n=l.gradFunc),n!=null&&(i.gradient=u=>(u=u.map((c,p)=>{if(c==null){let m=o[p],f=Ac(m.size,m.dtype);return this.makeTensor(f,m.shape,m.dtype)}return c}),n(u.length>1?u:u[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=hm(e),o=new Set(t.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!o.has(a.id)&&a.dispose()}let n=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(s=>{!s.kept&&s.scopeId===n.id&&this.track(s)})}gradients(e,t,o,n=!1){if(A(t.length>0,()=>"gradients() received an empty list of xs."),o!=null&&o.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${o.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));A(s instanceof Ve,()=>"The result y returned by f() must be a tensor.");let a=kI(this.state.activeTape,t,s);if(!n&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[s.id]=o==null?r3(s.shape):o,vI(i,a,u=>this.tidy(u),o3);let l=t.map(u=>i[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(let c of u.saved)c.dispose()}),this.state.activeTape=null),{value:s,grads:l}})}customGrad(e){return A(Ws(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{A(t.every(i=>i instanceof Ve),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let o,n={};t.forEach((i,l)=>{n[l]=i});let s=(i,l)=>(o=e(...t,l),A(o.value instanceof Ve,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),A(Ws(o.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),o.value),a=(i,l)=>{let u=o.gradFunc(i,l),c=Array.isArray(u)?u:[u];A(c.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),A(c.every(m=>m instanceof Ve),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let p={};return c.forEach((m,f)=>{p[f]=()=>m}),p};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:n})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){let t=pu(),o=await this.backend.time(e);return o.wallMs=pu()-t,o}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Db;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};fu.nextTensorId=0;fu.nextVariableId=0;function r3(r){let e=im(ct(r),"float32");return E.makeTensor(e,r,"float32")}function $b(){let r=xb();if(r._tfengine==null){let e=new Fh(r);r._tfengine=new fu(e)}return wI(r._tfengine.ENV),SI(()=>r._tfengine),r._tfengine}var E=$b();function o3(r,e){let t={a:r,b:e};return E.runKernel(wo,t)}var Lc={};Je(Lc,{isBrowser:()=>Rb,isMobile:()=>s3});function n3(){return typeof navigator!="undefined"&&navigator!=null}function s3(){if(n3()){let r=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(r)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(r.substr(0,4))}return!1}function Rb(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var $i=W();$i.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});$i.registerFlag("IS_BROWSER",()=>Rb());$i.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");$i.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));$i.registerFlag("PROD",()=>!1);$i.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>$i.getBool("DEBUG"));$i.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);$i.registerFlag("IS_TEST",()=>!1);$i.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);function vr(r,e){let t=r;if(or(r))return e==="string"?[]:[r.length];if(!Array.isArray(r))return[];let o=[];for(;Array.isArray(t)||or(t)&&e!=="string";)o.push(t.length),t=t[0];return Array.isArray(r)&&W().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&DI(r,o,[]),o}function DI(r,e,t){if(t=t||[],!Array.isArray(r)&&!or(r)){A(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}A(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${r.length} elements`),A(r.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${r.length} elements`);let o=e.slice(1);for(let n=0;n<r.length;++n)DI(r[n],o,t.concat(n))}function $I(r,e,t,o){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==e||r==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${o}' must be ${r} tensor, but got ${e} tensor`)}}function k(r,e,t,o="numeric"){if(r instanceof Ve)return $I(o,r.dtype,e,t),r;let n=Sc(r);if(n!=="string"&&["bool","int32","float32"].indexOf(o)>=0&&(n=o),$I(o,n,e,t),r==null||!or(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let l=r==null?"null":r.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${l}'`)}let s=vr(r,n);!or(r)&&!Array.isArray(r)&&(r=[r]);let i=n!=="string"?Oc(r,n):ss(r,[],!0);return E.makeTensor(i,s,n)}function ha(r,e,t,o="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,a)=>k(s,`${e}[${a}]`,t,o))}var RI="__op";function S(r){let e=Object.keys(r);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0],o=r[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+RI;let n=(...s)=>{E.startScope(t);try{let a=o(...s);return lm(a)&&console.error("Cannot return a Promise inside of tidy."),E.endScope(a),a}catch(a){throw E.endScope(null),a}};return Object.defineProperty(n,"name",{value:t,configurable:!0}),n}function i3(r,e){let t=k(r,"real","complex"),o=k(e,"imag","complex");vt(t.shape,o.shape,`real and imag shapes, ${t.shape} and ${o.shape}, must match in call to tf.complex().`);let n={real:t,imag:o};return E.runKernel(Gl,n)}var ko=S({complex_:i3});function jr(r,e,t,o){if(o==null&&(o=Sc(r)),o==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!or(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){am(e);let n=ct(e),s=ct(t);A(n===s,()=>`Based on the provided shape, [${e}], the tensor should have ${n} values but has ${s}`);for(let a=0;a<t.length;++a){let i=t[a],l=a===t.length-1?i!==ct(e.slice(a)):!0;A(t[a]===e[a]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!or(r)&&!Array.isArray(r)&&(r=[r]),e=e||t,r=o!=="string"?Oc(r,o):ss(r,[],!0),E.makeTensor(r,e,o)}function $r(r,e,t){let o=vr(r,t);return jr(r,e,o,t)}var gm={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var Mh=4;async function FI(r,e){let t=[],o=[],n=Array.isArray(r)?r.map(a=>a.name):Object.keys(r);for(let a=0;a<n.length;++a){let i=n[a],l=Array.isArray(r)?r[a].tensor:r[i];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);let u={name:i,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let c=new Promise(async p=>{let m=await l.bytes(),f=m.reduce((g,y)=>g+y.length,0)+Mh*m.length,d=new Uint8Array(f),h=0;for(let g=0;g<m.length;g++){let y=m[g],b=new Uint8Array(new Uint32Array([y.length]).buffer);d.set(b,h),h+=Mh,d.set(y,h),h+=y.length}p(d)});o.push(c)}else o.push(l.data());e!=null&&(u.group=e),t.push(u)}let s=await Promise.all(o);return{data:a3(s),specs:t}}function Lh(r,e){let t={},o,n=0;for(let s of e){let a=s.name,i=s.dtype,l=s.shape,u=ct(l),c;if("quantization"in s){let p=s.quantization;if(p.dtype==="uint8"||p.dtype==="uint16"){if(!("min"in p&&"scale"in p))throw new Error(`Weight ${s.name} with quantization ${p.dtype} doesn't have corresponding metadata min and scale.`)}else if(p.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${s.name} is quantized with ${p.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${p.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let m=gm[p.dtype],f=r.slice(n,n+u*m),d=p.dtype==="uint8"?new Uint8Array(f):new Uint16Array(f);if(i==="float32")if(p.dtype==="uint8"||p.dtype==="uint16"){c=new Float32Array(d.length);for(let h=0;h<d.length;h++){let g=d[h];c[h]=g*p.scale+p.min}}else if(p.dtype==="float16")o===void 0&&(o=l3()),c=o(d);else throw new Error(`Unsupported quantization type ${p.dtype} for weight type float32.`);else if(i==="int32"){if(p.dtype!=="uint8"&&p.dtype!=="uint16")throw new Error(`Unsupported quantization type ${p.dtype} for weight type int32.`);c=new Int32Array(d.length);for(let h=0;h<d.length;h++){let g=d[h];c[h]=Math.round(g*p.scale+p.min)}}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);n+=u*m}else if(i==="string"){let p=ct(s.shape);c=[];for(let m=0;m<p;m++){let f=new Uint32Array(r.slice(n,n+Mh))[0];n+=Mh;let d=new Uint8Array(r.slice(n,n+f));c.push(d),n+=f}}else{let p=gm[i],m=r.slice(n,n+u*p);if(i==="float32")c=new Float32Array(m);else if(i==="int32")c=new Int32Array(m);else if(i==="bool")c=new Uint8Array(m);else if(i==="complex64"){c=new Float32Array(m);let f=new Float32Array(c.length/2),d=new Float32Array(c.length/2);for(let y=0;y<f.length;y++)f[y]=c[y*2],d[y]=c[y*2+1];let h=$r(f,l,"float32"),g=$r(d,l,"float32");t[a]=ko(h,g),h.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);n+=u*p}i!=="complex64"&&(t[a]=$r(c,l,i))}return t}function a3(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let e=0,t=[];r.forEach(s=>{if(e+=s.byteLength,t.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let o=new Uint8Array(e),n=0;return t.forEach(s=>{o.set(new Uint8Array(s.buffer),n),n+=s.byteLength}),o.buffer}var Fb=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function OI(r){return Fb?Buffer.byteLength(r):new Blob([r]).size}function PI(r){if(Fb)return Buffer.from(r).toString("base64");let e=new Uint8Array(r),t="";for(let o=0,n=e.length;o<n;o++)t+=String.fromCharCode(e[o]);return btoa(t)}function MI(r){if(Fb){let o=Buffer.from(r,"base64");return o.buffer.slice(o.byteOffset,o.byteOffset+o.byteLength)}let e=atob(r),t=new Uint8Array(e.length);for(let o=0;o<e.length;++o)t.set([e.charCodeAt(o)],o);return t.buffer}function zc(r){if(r.length===1)return r[0];let e=0;r.forEach(n=>{e+=n.byteLength});let t=new Uint8Array(e),o=0;return r.forEach(n=>{t.set(new Uint8Array(n),o),o+=n.byteLength}),t.buffer}function Ob(r){let e="/";for(r=r.trim();r.endsWith(e);)r=r.slice(0,r.length-1);let t=r.split(e);return t[t.length-1]}function Ri(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:OI(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:OI(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:r.weightData.byteLength}}function u3(){let r=t=>{let o=t<<13,n=0;for(;(o&8388608)==0;)n-=8388608,o<<=1;return o&=~8388608,n+=947912704,o|n},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=r(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function c3(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let e=1;e<31;e++)r[e]=e<<23;for(let e=33;e<63;e++)r[e]=2147483648+(e-32<<23);return r}function p3(){let r=new Uint32Array(64);for(let e=0;e<64;e++)r[e]=1024;return r[0]=r[32]=0,r}function l3(){let r=u3(),e=c3(),t=p3();return o=>{let n=new ArrayBuffer(4*o.length),s=new Uint32Array(n);for(let a=0;a<o.length;a++){let i=o[a],l=r[t[i>>10]+(i&1023)]+e[i>>10];s[a]=l}return new Float32Array(n)}}var Ct=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Ct.instance==null&&(Ct.instance=new Ct),Ct.instance}static registerSaveRouter(e){Ct.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ct.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ct.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ct.getHandlers(e,"load",t)}static getHandlers(e,t,o){let n=[];return(t==="load"?Ct.getInstance().loadRouters:Ct.getInstance().saveRouters).forEach(a=>{let i=a(e,o);i!==null&&n.push(i)}),n}},LI=r=>Ct.registerSaveRouter(r),zI=r=>Ct.registerLoadRouter(r),BI=r=>Ct.getSaveHandlers(r),VI=(r,e)=>Ct.getLoadHandlers(r,e);var Pb="tensorflowjs",Mb=1,du="models_store",tl="model_info_store";function GI(){if(!W().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window=="undefined"?self:window,e=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Lb(r){let e=r.result;e.createObjectStore(du,{keyPath:"modelPath"}),e.createObjectStore(tl,{keyPath:"modelPath"})}var ga=class{constructor(e){if(this.indexedDB=GI(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((o,n)=>{let s=this.indexedDB.open(Pb,Mb);s.onupgradeneeded=()=>Lb(s),s.onsuccess=()=>{let a=s.result;if(t==null){let i=a.transaction(du,"readonly"),u=i.objectStore(du).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));o(u.result.modelArtifacts)},u.onerror=c=>(a.close(),n(u.error)),i.oncomplete=()=>a.close()}else{let i=Ri(t),l=a.transaction(tl,"readwrite"),u=l.objectStore(tl),c=u.put({modelPath:this.modelPath,modelArtifactsInfo:i}),p;c.onsuccess=()=>{p=a.transaction(du,"readwrite");let f=p.objectStore(du).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});f.onsuccess=()=>o({modelArtifactsInfo:i}),f.onerror=d=>{u=l.objectStore(tl);let h=u.delete(this.modelPath);h.onsuccess=()=>(a.close(),n(f.error)),h.onerror=g=>(a.close(),n(f.error))}},c.onerror=m=>(a.close(),n(c.error)),l.oncomplete=()=>{p==null?a.close():p.oncomplete=()=>a.close()}}},s.onerror=a=>n(s.error)})}};ga.URL_SCHEME="indexeddb://";var WI=r=>W().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(ga.URL_SCHEME)?m3(r.slice(ga.URL_SCHEME.length)):null;Ct.registerSaveRouter(WI);Ct.registerLoadRouter(WI);function m3(r){return new ga(r)}function f3(r){return r.startsWith(ga.URL_SCHEME)?r.slice(ga.URL_SCHEME.length):r}var zb=class{constructor(){this.indexedDB=GI()}async listModels(){return new Promise((e,t)=>{let o=this.indexedDB.open(Pb,Mb);o.onupgradeneeded=()=>Lb(o),o.onsuccess=()=>{let n=o.result,s=n.transaction(tl,"readonly"),i=s.objectStore(tl).getAll();i.onsuccess=()=>{let l={};for(let u of i.result)l[u.modelPath]=u.modelArtifactsInfo;e(l)},i.onerror=l=>(n.close(),t(i.error)),s.oncomplete=()=>n.close()},o.onerror=n=>t(o.error)})}async removeModel(e){return e=f3(e),new Promise((t,o)=>{let n=this.indexedDB.open(Pb,Mb);n.onupgradeneeded=()=>Lb(n),n.onsuccess=()=>{let s=n.result,a=s.transaction(tl,"readwrite"),i=a.objectStore(tl),l=i.get(e),u;l.onsuccess=()=>{if(l.result==null)return s.close(),o(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let c=i.delete(e),p=()=>{u=s.transaction(du,"readwrite");let f=u.objectStore(du).delete(e);f.onsuccess=()=>t(l.result.modelArtifactsInfo),f.onerror=d=>o(l.error)};c.onsuccess=p,c.onerror=m=>(p(),s.close(),o(l.error))}},l.onerror=c=>(s.close(),o(l.error)),a.oncomplete=()=>{u==null?s.close():u.oncomplete=()=>s.close()}},n.onerror=s=>o(n.error)})}};var xa="/",Bc="tensorflowjs_models",UI="info",d3="model_topology",h3="weight_specs",g3="weight_data",x3="model_metadata";function jI(r){return{info:[Bc,r,UI].join(xa),topology:[Bc,r,d3].join(xa),weightSpecs:[Bc,r,h3].join(xa),weightData:[Bc,r,g3].join(xa),modelMetadata:[Bc,r,x3].join(xa)}}function y3(r){let e=r.split(xa);if(e.length<3)throw new Error(`Invalid key format: ${r}`);return e.slice(1,e.length-1).join(xa)}function b3(r){return r.startsWith(ya.URL_SCHEME)?r.slice(ya.URL_SCHEME.length):r}var ya=class{constructor(e){if(!W().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=jI(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),o=JSON.stringify(e.weightSpecs),n=Ri(e);try{this.LS.setItem(this.keys.info,JSON.stringify(n)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,o),this.LS.setItem(this.keys.weightData,PI(e.weightData));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return e.signature!=null&&(s.signature=e.signature),e.userDefinedMetadata!=null&&(s.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(s.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:n}}catch(s){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${n.modelTopologyBytes}, weightSpecsBytes=${n.weightSpecsBytes}, weightDataBytes=${n.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},o=JSON.parse(this.LS.getItem(this.keys.topology));if(o==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=o;let n=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(n==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=n;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let i=JSON.parse(s);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=MI(a),t}};ya.URL_SCHEME="localstorage://";var HI=r=>W().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(ya.URL_SCHEME)?w3(r.slice(ya.URL_SCHEME.length)):null;Ct.registerSaveRouter(HI);Ct.registerLoadRouter(HI);function w3(r){return new ya(r)}var Bb=class{constructor(){A(W().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),A(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Bc+xa,o=xa+UI;for(let n=0;n<this.LS.length;++n){let s=this.LS.key(n);if(s.startsWith(t)&&s.endsWith(o)){let a=y3(s);e[a]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=b3(e);let t=jI(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let o=JSON.parse(this.LS.getItem(t.info));return this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),o}};var Vc="://",Hr=class{constructor(){this.managers={}}static getInstance(){return Hr.instance==null&&(Hr.instance=new Hr),Hr.instance}static registerManager(e,t){A(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Vc)&&(e=e.slice(0,e.indexOf(Vc))),A(e.length>0,()=>"scheme must not be an empty string.");let o=Hr.getInstance();A(o.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),o.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function zh(r){if(r.indexOf(Vc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Hr.getSchemes().join(",")}`);return{scheme:r.split(Vc)[0],path:r.split(Vc)[1]}}async function qI(r,e,t=!1){A(r!==e,()=>`Old path and new path are the same: '${r}'`);let o=Ct.getLoadHandlers(r);A(o.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),A(o.length<2,()=>`Copying failed because more than one (${o.length}) load handlers for source URL ${r}.`);let n=o[0],s=Ct.getSaveHandlers(e);A(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),A(s.length<2,()=>`Copying failed because more than one (${o.length}) save handlers for destination URL ${e}.`);let a=s[0],i=zh(r).scheme,l=zh(r).path,u=i===zh(r).scheme,c=await n.load();t&&u&&await Hr.getManager(i).removeModel(l);let p=await a.save(c);return t&&!u&&await Hr.getManager(i).removeModel(l),p.modelArtifactsInfo}async function KI(){let r=Hr.getSchemes(),e={};for(let t of r){let o=await Hr.getManager(t).listModels();for(let n in o){let s=t+Vc+n;e[s]=o[n]}}return e}async function XI(r){let e=zh(r);return Hr.getManager(e.scheme).removeModel(e.path)}async function YI(r,e){return qI(r,e,!1)}async function ZI(r,e){return qI(r,e,!0)}var JI=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(W().get("IS_BROWSER")){W().setPlatform("browser",new JI);try{Hr.registerManager(ya.URL_SCHEME,new Bb)}catch(r){}try{Hr.registerManager(ga.URL_SCHEME,new zb)}catch(r){}}var _3={importFetch:()=>QI()},Vb;var eN=class{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return W().global.fetch!=null?W().global.fetch(e,t):(Vb==null&&(Vb=_3.importFetch()),Vb(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};W().get("IS_NODE")&&W().setPlatform("node",new eN);function ve(r,e="float32",t){return e=e||"float32",am(r),new lt(r,e,t)}function k3(r,e){let t=k(r,"x","cast");if(!fb(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");let o={x:t},n={dtype:e};return E.runKernel(Do,o,n)}var ne=S({cast_:k3});function v3(r){let t={x:k(r,"x","clone","string_or_numeric")};return E.runKernel(Ro,t)}var Oo=S({clone_:v3});function Gb(r,e=!1){console.log(r.toString(e))}$b();var C3={buffer:ve,cast:ne,clone:Oo,print:Gb};TI(C3);var Cr={};Je(Cr,{browserFiles:()=>oN,browserHTTPRequest:()=>iN,concatenateArrayBuffers:()=>zc,copyModel:()=>YI,decodeWeights:()=>Lh,encodeWeights:()=>FI,fromMemory:()=>lN,getLoadHandlers:()=>VI,getModelArtifactsInfoForJSON:()=>Ri,getSaveHandlers:()=>BI,http:()=>Gh,isHTTPScheme:()=>Vh,listModels:()=>KI,loadWeights:()=>nN,moveModel:()=>ZI,registerLoadRouter:()=>zI,registerSaveRouter:()=>LI,removeModel:()=>XI,weightsLoaderFactory:()=>jb,withSaveHandler:()=>uN});var I3="model",N3=".json",S3=".weights.bin";function tN(r){return new Promise(e=>setTimeout(e)).then(r)}var rl=class{constructor(e){if(!W().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(rl.URL_SCHEME)&&(e=e.slice(rl.URL_SCHEME.length)),(e==null||e.length===0)&&(e=I3),this.modelTopologyFileName=e+N3,this.weightDataFileName=e+S3}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let o=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:o};e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer);let s=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=this.jsonAnchor==null?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await tN(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await tN(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ri(e)}}}};rl.URL_SCHEME="downloads://";var rN=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){let e=this.files[0],t=this.files.slice(1);return new Promise((o,n)=>{let s=new FileReader;s.onload=a=>{let i=JSON.parse(a.target.result),l=i.modelTopology;if(l==null){n(new Error(`modelTopology field is missing from file ${e.name}`));return}t.length===0&&o({modelTopology:l});let u=i.weightsManifest;if(u==null){n(new Error(`weightManifest field is missing from file ${e.name}`));return}let c;try{c=this.checkManifestAndWeightFiles(u,t)}catch(d){n(d);return}let p=[],m=[],f=[];u.forEach(d=>{d.paths.forEach(h=>{m.push(h),f.push(null)}),p.push(...d.weights)}),u.forEach(d=>{d.paths.forEach(h=>{let g=new FileReader;g.onload=y=>{let b=y.target.result,w=m.indexOf(h);if(f[w]=b,f.indexOf(null)===-1){let _={modelTopology:l,weightSpecs:p,weightData:zc(f),format:i.format,generatedBy:i.generatedBy,convertedBy:i.convertedBy};i.signature!=null&&(_.signature=i.signature),i.userDefinedMetadata!=null&&(_.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(_.modelInitializer=i.modelInitializer),o(_)}},g.onerror=y=>n(`Failed to weights data from file of path '${h}'.`),g.readAsArrayBuffer(c[h])})})},s.onerror=a=>n(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(e)})}checkManifestAndWeightFiles(e,t){let o=[],n=t.map(a=>Ob(a.name)),s={};for(let a of e)a.paths.forEach(i=>{let l=Ob(i);if(o.indexOf(l)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${l}'`);if(o.push(l),n.indexOf(l)===-1)throw new Error(`Weight file with basename '${l}' is not provided.`);s[i]=t[n.indexOf(l)]});if(o.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${o.length}) and the number of weight files provided (${t.length}).`);return s}},A3=r=>W().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(rl.URL_SCHEME)?T3(r.slice(rl.URL_SCHEME.length)):null;Ct.registerSaveRouter(A3);function T3(r="model"){return new rl(r)}function oN(r){return new rN(r)}function Wb(r,e,t,o){a(r),t=t==null?0:t,o=o==null?1:o,i(t,o);let n=0,s=l=>(l.then(u=>{let c=t+ ++n/r.length*(o-t);return e(c),u}),l);function a(l){A(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function i(l,u){A(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),A(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),A(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(r.map(s))}async function Ub(r,e){e==null&&(e={});let t=e.fetchFunc==null?W().platform.fetch:e.fetchFunc,o=r.map(p=>t(p,e.requestInit,{isBinary:!0})),n=0,s=.5,i=(e.onProgress==null?await Promise.all(o):await Wb(o,e.onProgress,n,s)).map(p=>p.arrayBuffer()),l=.5,u=1;return e.onProgress==null?await Promise.all(i):await Wb(i,e.onProgress,l,u)}async function nN(r,e="",t,o){return jb(a=>Ub(a,{requestInit:o}))(r,e,t)}function jb(r){return async(e,t="",o)=>{let n=e.map(()=>!1),s={},a=o!=null?o.map(()=>!1):[],i=[];if(e.forEach((f,d)=>{let h=0;f.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,b=gm[y]*ct(g.shape),w=()=>{n[d]=!0,s[d]==null&&(s[d]=[]),s[d].push({manifestEntry:g,groupOffset:h,sizeBytes:b})};o!=null?o.forEach((_,C)=>{_===g.name&&(w(),a[C]=!0)}):w(),i.push(g.name),h+=b})}),!a.every(f=>f)){let f=o.filter((d,h)=>!a[h]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let l=n.reduce((f,d,h)=>(d&&f.push(h),f),[]),u=[];l.forEach(f=>{e[f].paths.forEach(d=>{let h=t+(t.endsWith("/")?"":"/")+d;u.push(h)})});let c=await r(u),p={},m=0;return l.forEach(f=>{let d=e[f].paths.length,h=0;for(let _=0;_<d;_++)h+=c[m+_].byteLength;let g=new ArrayBuffer(h),y=new Uint8Array(g),b=0;for(let _=0;_<d;_++){let C=new Uint8Array(c[m+_]);y.set(C,b),b+=C.byteLength}s[f].forEach(_=>{let C=g.slice(_.groupOffset,_.groupOffset+_.sizeBytes),D=Lh(C,[_.manifestEntry]);for(let T in D)p[T]=D[T]}),m+=d}),p}}var E3="application/octet-stream",D3="application/json",Bh=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(A(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=W().platform.fetch,A(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&A(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let o=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:o};e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(n)],{type:D3}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:E3}),"model.weights.bin");let s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Ri(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(d){let h=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?h+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":h+=" Please make sure the server is serving valid JSON for this request.",new Error(h)}let o=t.modelTopology,n=t.weightsManifest,s=t.generatedBy,a=t.convertedBy,i=t.format,l=t.signature,u=t.userDefinedMetadata;if(o==null&&n==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let c,p;n!=null&&([c,p]=await this.loadWeights(n));let m={modelTopology:o,weightSpecs:c,weightData:p,generatedBy:s,convertedBy:a,format:i};l!=null&&(m.signature=l),u!=null&&(m.userDefinedMetadata=u);let f=t.modelInitializer;return f&&(m.modelInitializer=f),m}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[o,n]=$3(t),s=this.weightPathPrefix||o,a=[];for(let c of e)a.push(...c.weights);let i=[],l=[];for(let c of e)for(let p of c.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(p)):i.push(s+p+n);this.weightUrlConverter&&i.push(...await Promise.all(l));let u=await Ub(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,zc(u)]}};Bh.URL_SCHEME_REGEX=/^https?:\/\//;function $3(r){let e=r.lastIndexOf("/"),t=r.lastIndexOf("?"),o=r.substring(0,e),n=t>e?r.substring(t):"";return[o+"/",n]}function Vh(r){return r.match(Bh.URL_SCHEME_REGEX)!=null}var sN=(r,e)=>{if(typeof fetch=="undefined"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(r)?t=r.every(o=>Vh(o)):t=Vh(r),t)return Gh(r,e)}return null};Ct.registerSaveRouter(sN);Ct.registerLoadRouter(sN);function Gh(r,e){return new Bh(r,e)}function iN(r,e){return Gh(r,e)}var Wh=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},aN=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function lN(r,e,t,o){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new Wh(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Wh({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Wh({modelTopology:r,weightSpecs:e,weightData:t,trainingConfig:o}))}function uN(r){return new aN(r)}var cN={};Je(cN,{confusionMatrix:()=>M3});function R3(r,e,t=!1,o=!1){let n=k(r,"a","matMul"),s=k(e,"b","matMul");[n,s]=Ge(n,s);let a={a:n,b:s},i={transposeA:t,transposeB:o};return E.runKernel(Xo,a,i)}var We=S({matMul_:R3});function F3(r,e,t=1,o=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);let s={indices:k(r,"indices","oneHot","int32")},a={depth:e,onValue:t,offValue:o};return E.runKernel(yn,s,a)}var vs=S({oneHot_:F3});function O3(r,e){let t=k(r,"x","transpose");if(e==null&&(e=t.shape.map((s,a)=>a).reverse()),A(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of perm ${e}.`),e.forEach(s=>{A(s>=0&&s<t.rank,()=>`All entries in 'perm' must be between 0 and ${t.rank-1} but got ${e}`)}),t.rank<=1)return t.clone();let o={x:t},n={perm:e};return E.runKernel(Pn,o,n)}var je=S({transpose_:O3});function P3(r,e,t){let o=k(r,"labels","confusionMatrix"),n=k(e,"predictions","confusionMatrix");A(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),A(o.rank===1,()=>`Expected the rank of labels to be 1, but got ${o.rank}`),A(n.rank===1,()=>`Expected the rank of predictions to be 1, but got ${n.rank}`),A(o.shape[0]===n.shape[0],()=>`Mismatch in the number of examples: ${o.shape[0]} vs. ${n.shape[0]}. Labels and predictions should have the same number of elements.`),A(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);let s=vs(ne(o,"int32"),t),a=vs(ne(n,"int32"),t),i=je(s),l=We(i,a);return ne(l,"int32")}var M3=S({confusionMatrix_:P3});var Uh={};Je(Uh,{fromPixels:()=>B3,toPixels:()=>z3});function Hb(r,e,t){if(Eo(r),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let o=vr(r,t);if(o.length!==3&&o.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(o.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return jr(r,e,o,t)}var Gc;function L3(r,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,o=!1,n=!1,s=!1,a=!1,i=!1;if(r.data instanceof Uint8Array)t=!0;else if(typeof ImageData!="undefined"&&r instanceof ImageData)o=!0;else if(typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement)n=!0;else if(typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement)s=!0;else if(r.getContext!=null)a=!0;else if(typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(n){let d=2;if(n&&r.readyState<d)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(Fc($c,E.backendName)!=null){let d={pixels:r},h={numChannels:e};return E.runKernel($c,d,h)}let[u,c]=n?[r.videoWidth,r.videoHeight]:[r.width,r.height],p;a?p=r.getContext("2d").getImageData(0,0,u,c).data:o||t?p=r.data:(s||n||i)&&(Gc==null&&(Gc=document.createElement("canvas").getContext("2d")),Gc.canvas.width=u,Gc.canvas.height=c,Gc.drawImage(r,0,0,u,c),p=Gc.getImageData(0,0,u,c).data);let m;if(e===4)m=new Int32Array(p);else{let d=u*c;m=new Int32Array(d*e);for(let h=0;h<d;h++)for(let g=0;g<e;++g)m[h*e+g]=p[h*4+g]}return Hb(m,[c,u,e],"int32")}async function z3(r,e){let t=k(r,"img","toPixels");if(!(r instanceof Ve)){let u=t;t=ne(u,"int32"),u.dispose()}if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);let[o,n]=t.shape.slice(0,2),s=t.rank===2?1:t.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`);let a=await t.data(),i=t.dtype==="float32"?255:1,l=new Uint8ClampedArray(n*o*4);for(let u=0;u<o*n;++u){let c=[0,0,0,255];for(let m=0;m<s;m++){let f=a[u*s+m];if(t.dtype==="float32"){if(f<0||f>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${f}.`)}else if(t.dtype==="int32"&&(f<0||f>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${f}.`);s===1?(c[0]=f*i,c[1]=f*i,c[2]=f*i):c[m]=f*i}let p=u*4;l[p+0]=Math.round(c[0]),l[p+1]=Math.round(c[1]),l[p+2]=Math.round(c[2]),l[p+3]=Math.round(c[3])}if(e!=null){e.width=n,e.height=o;let u=e.getContext("2d"),c=new ImageData(l,n,o);u.putImageData(c,0,0)}return t!==r&&t.dispose(),l}var B3=S({fromPixels_:L3});var jh={};Je(jh,{prepareAndValidate:()=>pN});function pN(r,e){let t=r.shape.length,o=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(o<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${o}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[o-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[o-1]} vs. ${t}`);if(ct(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let n=e.shape,s=n[n.length-1],a=1;for(let p=0;p<n.length-1;++p)a*=n[p];let i=r.shape,l=n.slice();l.pop();let u=1;for(let p=s;p<t;++p)u*=i[p],l.push(i[p]);let c=[...Us(r.shape).map(p=>p/u),1].slice(0,s);return[l,a,u,c]}var Hh={};Je(Hh,{calculateShapes:()=>mN,validateInput:()=>qh,validateUpdateShape:()=>qb});function qb(r,e,t){let o=e.rank>1?e.shape[e.rank-1]:1,n=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${r}, sliceDim: ${o}, and batchDim: ${n}.`;if(t.rank<n)throw new Error(s+` update.rank < ${n}. `);if(r.length<o+(t.rank-n))throw new Error(s+` Output shape length < ${o+(t.rank-n)}`);if(t.rank!==n+r.length-o)throw new Error(s+` update.rank != ${n+r.length-o}`);for(let a=0;a<n;++a)if(t.shape[a]!==e.shape[a])throw new Error(s+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-n;++a)if(t.shape[a+n]!==r[a+o])throw new Error(s+` updates.shape[${a+n}] (${t.shape[a+n]}) != shape[${a+n}] (${r[a+n]})`)}function qh(r,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}qb(t,e,r)}function mN(r,e,t){let o=e.shape.length,n=o>1?e.shape[o-1]:1,s=t.length,a=1;for(let p=n;p<s;++p)a*=t[p];let i=n<1?1:n,l=ct(e.shape)/i,u=[...Us(t.slice(0,n)),1],c=ct(t);return{sliceRank:n,numUpdates:l,sliceSize:a,strides:u,outputSize:c}}var nr={};Je(nr,{assertParamsValid:()=>V3,computeFlatOffset:()=>W3,computeOutShape:()=>fN,getNormalizedAxes:()=>kN,isSliceContinous:()=>G3,maskToAxes:()=>Kh,parseSliceParams:()=>Kb,sliceInfo:()=>U3,startForAxis:()=>wN,startIndicesWithElidedDims:()=>xN,stopForAxis:()=>_N,stopIndicesWithElidedDims:()=>yN,stridesForAxis:()=>bN,stridesWithElidedDims:()=>dN});function V3(r,e,t){let o=r.shape.length;A(o===e.length,()=>`Error in slice${o}D: Length of begin ${e} must match the rank of the array (${o}).`),A(o===t.length,()=>`Error in slice${o}D: Length of size ${t} must match the rank of the array (${o}).`);for(let n=0;n<o;++n)A(e[n]+t[n]<=r.shape[n],()=>`Error in slice${o}D: begin[${n}] + size[${n}] (${e[n]+t[n]}) would overflow input.shape[${n}] (${r.shape[n]})`)}function Kh(r){let e=[],t=0;for(;r>0;)r&1&&e.push(t),r/=2,t++;return e}function fN(r,e,t){let o=[];for(let n=0;n<r.length;n++)o[n]=Math.ceil((e[n]-r[n])/t[n]);return o}function dN(r,e,t,o){let n=[...r];for(let s=n.length;s<o.length;s++)n.push(1);for(let s=0;s<t;s++)s===0?n[e]=1:(n.splice(e,0,1),n.pop());return n}function hN(r,e,t){return t<=r?t:t-(e-1)}function gN(r,e){let t=[];for(let o=0;o<r;o++)t.push(e+o);return t}function kN(r,e,t,o,n,s,a,i,l){let u=r.length,c=new Array(u),p=new Array(u),m=new Array(u);if(e.length&&t>0){let f=e[0],d=t+1;c=xN(a,f,d,o,r),p=yN(i,f,d,n,r),m=dN(s,f,d,r)}else for(let f=0;f<u;f++)c[f]=wN(a,o,s,r,f,l),p[f]=_N(i,n,s,r,f,l),m[f]=bN(s,f,l);return{begin:c,end:p,strides:m}}function xN(r,e,t,o,n){let s=[...n],a=gN(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=0;else{let l=hN(e,t,i),u=o[l];r&1<<l&&(u=0),s[i]=u}return s}function yN(r,e,t,o,n){let s=[...n],a=gN(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{let l=hN(e,t,i),u=o[l];r&1<<l&&(u=Number.MAX_SAFE_INTEGER),s[i]=u}for(let i=0;i<s.length;i++){let l=n[i];s[i]<0&&(s[i]+=l),s[i]=Nc(0,s[i],n[i])}return s}function bN(r,e,t){let o=r[e];return(t&1<<e||o==null)&&(o=1),o}function wN(r,e,t,o,n,s){let a=e[n],i=t[n]||1;(r&1<<n||s&1<<n||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);let l=o[n];return a<0&&(a+=l),a=Nc(0,a,l-1),a}function _N(r,e,t,o,n,s){let a=e[n],i=t[n]||1;(r&1<<n||s&1<<n||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);let l=o[n];return a<0&&(a+=l),i>0?a=Nc(0,a,l):a=Nc(-1,a,l-1),a}function G3(r,e,t){let o=t.length;for(let n=0;n<t.length;n++)if(t[n]>1){o=n;break}for(let n=o+1;n<t.length;n++)if(e[n]>0||t[n]!==r[n])return!1;return!0}function W3(r,e){let t=r.length>0?r[r.length-1]:1;for(let o=0;o<r.length-1;o++)t+=r[o]*e[o];return t}function Kb(r,e,t){let o,n=r.shape.length;typeof e=="number"?o=[e,...new Array(n-1).fill(0)]:e.length<n?o=e.concat(new Array(n-e.length).fill(0)):o=e.slice(),o.forEach(a=>{A(a!==-1,()=>"slice() does not support negative begin indexing.")});let s;return t==null?s=new Array(n).fill(-1):typeof t=="number"?s=[t,...new Array(n-1).fill(-1)]:t.length<n?s=t.concat(new Array(n-t.length).fill(-1)):s=t,s=s.map((a,i)=>a>=0?a:(A(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),r.shape[i]-o[i])),[o,s]}function U3(r,e,t,o,n,s,a,i,l){let u=e.slice(),c=t.slice(),p=o;o==null&&(p=new Array(u.length));let m=Kh(a);if(m.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(a!==0&&i!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(a!==0&&l!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let f=r.length-u.length,d=Kh(i),h=r.slice();d.forEach(T=>{u[T]=0,c[T]=1,h.splice(T,0,1)});let{begin:g,end:y,strides:b}=kN(h,m,f,u,c,p,n,s,a);u=g,c=y,p=b;let w=Kh(l);w.forEach(T=>{c[T]=u[T]+1,p[T]=1});let _=fN(u,c,p),C=_.filter((T,R)=>w.indexOf(R)===-1);return{nonStrided:p.every(T=>T===1),$begin:u,$end:c,$strides:p,size:_,newShape:h,outShape:C}}var J={};Je(J,{Serializable:()=>Xh,SerializationMap:()=>ba,registerClass:()=>so});var Xh=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},ba=class{constructor(){this.classNameMap={}}static getMap(){return ba.instance==null&&(ba.instance=new ba),ba.instance}static register(e){ba.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function so(r){A(r.className!=null,()=>"Class being registered does not have the static className property defined."),A(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),A(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),ba.register(r)}var vN={};Je(vN,{TEST_EPSILON_FLOAT16:()=>CN,encodeStrings:()=>IN,expectArrayBuffersEqual:()=>Z3,expectArraysClose:()=>H3,expectArraysEqual:()=>K3,expectNumbersClose:()=>X3,expectPromiseToFail:()=>q3,expectValuesInRange:()=>Y3,testEpsilon:()=>Xb});var j3=.001,CN=.1;function H3(r,e,t){return t==null&&(t=Xb()),Yb(r,e,(o,n)=>Zb(o,n,t))}function Xb(){return E.backend.floatPrecision()===32?j3:CN}function Yb(r,e,t){let o=!0;if((or(r)||or(e))&&(o=!1),or(r)&&or(e)&&(o=!0),o){let a=r.constructor.name,i=e.constructor.name;if(a!==i)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${i}`)}if(Array.isArray(r)&&Array.isArray(e)){let a=vr(r),i=vr(e);if(!Ur(a,i))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${i}]`)}let n=or(r)?r:ss(r),s=or(e)?e:ss(e);if(n.length!==s.length)throw new Error(`Arrays have different lengths actual: ${n.length} vs expected: ${s.length}.
Actual:   ${n}.
Expected: ${s}.`);for(let a=0;a<s.length;++a){let i=n[a],l=s[a];if(!t(i,l))throw new Error(`Arrays differ: actual[${a}] = ${i}, expected[${a}] = ${l}.
Actual:   ${n}.
Expected: ${s}.`)}}function q3(r,e){r().then(()=>e.fail(),()=>e())}function K3(r,e){let t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return is(r)||is(r[0])||is(e)||is(e[0])?Yb(r,t,(o,n)=>o==n):Yb(r,e,(o,n)=>Zb(o,n,0))}function X3(r,e,t){if(t==null&&(t=Xb()),!Zb(r,e,t))throw new Error(`Numbers differ: actual === ${r}, expected === ${e}`)}function Zb(r,e,t){return!isFinite(r)&&!isFinite(e)?!0:!(isNaN(r)||isNaN(e)||Math.abs(r-e)>t)}function Y3(r,e,t){for(let o=0;o<r.length;o++)if(r[o]<e||r[o]>t)throw new Error(`Value out of range:${r[o]} low: ${e}, high: ${t}`)}function Z3(r,e){expect(new Float32Array(r)).toEqual(new Float32Array(e))}function IN(r){for(let e=0;e<r.length;e++){let t=r[e];Array.isArray(t)?IN(t):r[e]=Qa(t)}return r}var Jb="3.2.0";function J3(){W().set("PROD",!0)}function Q3(){W().set("DEBUG",!0)}function eV(){W().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Yh(r){W().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}AI(Yh);function tV(){E.disposeVariables()}function Po(){return E}function Wc(){return E.memory()}function rV(r){return E.profile(r)}function V(r,e){return E.tidy(r,e)}function Te(r){hm(r).forEach(t=>t.dispose())}function Et(r){return E.keep(r)}function oV(r){return E.time(r)}function NN(r){return E.setBackend(r)}function nV(){return E.ready()}function sV(){return E.backendName}function iV(r){E.removeBackend(r)}function aV(r){return E.findBackend(r)}function lV(r){return E.findBackendFactory(r)}function hu(r,e,t=1){return E.registerBackend(r,e,t)}function Qb(){return E.backend}function uV(r,e){W().setPlatform(r,e)}function cV(r,e){let t=k(r,"a","add"),o=k(e,"b","add");[t,o]=Ge(t,o);let n={a:t,b:o};return E.runKernel(wo,n)}var Q=S({add_:cV});function pV(r,e){let t=k(r,"a","floorDiv"),o=k(e,"b","floorDiv");[t,o]=Ge(t,o);let n={a:t,b:o};return E.runKernel(sn,n)}var gu=S({floorDiv_:pV});function mV(r,e){let t=k(r,"a","div"),o=k(e,"b","div");if([t,o]=Ge(t,o),t.dtype==="int32"&&o.dtype==="int32")return gu(t,o);let n={a:t,b:o},s={};return E.runKernel(rn,n,s)}var me=S({div_:mV});function fV(r,e){let t=k(r,"a","mul"),o=k(e,"b","mul");[t,o]=Ge(t,o);let n={a:t,b:o};return E.runKernel(xn,n)}var O=S({mul_:fV});function dV(r){let e=k(r,"x","abs");if(e.dtype==="complex64"){let t={x:e};return E.runKernel(oa,t)}else{let t={x:e};return E.runKernel(as,t)}}var It=S({abs_:dV});function hV(r){let t={x:k(r,"x","acos")};return E.runKernel(js,t)}var xm=S({acos_:hV});function gV(r){let t={x:k(r,"x","acosh")};return E.runKernel(Hs,t)}var ym=S({acosh_:gV});function xV(r){A(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),A(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let e=r.map((n,s)=>k(n,`tensors${s}`,"addN")),t=e[0];e.forEach(n=>{if(n.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(n=>{if(!Ur(n.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let o=e;return E.runKernel(Ho,o)}var ew=S({addN_:xV});function yV(r,e=null,t=!1){let n={x:k(r,"x","all","bool")},s={axis:e,keepDims:t};return E.runKernel(Ml,n,s)}var xu=S({all_:yV});function bV(r,e=null,t=!1){let n={x:k(r,"x","any","bool")},s={axis:e,keepDims:t};return E.runKernel(Ll,n,s)}var ol=S({any_:bV});function wV(r,e=0){let o={x:k(r,"x","argMax")},n={axis:e};return E.runKernel(qo,o,n)}var nl=S({argMax_:wV});function _V(r,e=0){let o={x:k(r,"x","argMin")},n={axis:e};return E.runKernel(ea,o,n)}var bm=S({argMin_:_V});function kV(r){let t={x:k(r,"x","asin")};return E.runKernel(qs,t)}var wm=S({asin_:kV});function vV(r){let t={x:k(r,"x","asinh")};return E.runKernel(Ks,t)}var _m=S({asinh_:vV});function CV(r){let t={x:k(r,"x","atan")};return E.runKernel(Xs,t)}var km=S({atan_:CV});function IV(r,e){let t=k(r,"a","atan2"),o=k(e,"b","atan2");[t,o]=Ge(t,o);let n={a:t,b:o};return E.runKernel(Zs,n)}var vm=S({atan2_:IV});function NV(r){let t={x:k(r,"x","atanh")};return E.runKernel(Ys,t)}var Cm=S({atanh_:NV});function SV(r,e,t,o,n="NHWC",s){let a=r[3],i=[...e,a],l=SN(n);return yu(r,i,t,s,o,null,null,l)}function tw(r,e,t,o,n,s,a="channelsLast"){let[i,l]=Zh(e),u;if(a==="channelsLast")u=[i,l,r[3],r[3]];else if(a==="channelsFirst")u=[i,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return yu(r,u,t,o,n,s,!1,a)}function TV(r,e,t,o,n,s,a="NDHWC"){let[i,l,u]=rw(e),c,p;if(a==="NDHWC")p="channelsLast",c=[i,l,u,r[4],r[4]];else if(a==="NCDHW")p="channelsFirst",c=[i,l,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return TN(r,c,t,o,n,!1,p,s)}function yu(r,e,t,o,n,s,a=!1,i="channelsLast"){let[l,u,c,p]=[-1,-1,-1,-1];if(i==="channelsLast")[l,u,c,p]=r;else if(i==="channelsFirst")[l,p,u,c]=r;else throw new Error(`Unknown dataFormat ${i}`);let[m,f,,d]=e,[h,g]=Zh(t),[y,b]=Zh(o),w=Uc(m,y),_=Uc(f,b),{padInfo:C,outHeight:D,outWidth:T}=AV(n,u,c,h,g,w,_,s,i),R=a?d*p:d,P;return i==="channelsFirst"?P=[l,R,D,T]:i==="channelsLast"&&(P=[l,D,T,R]),{batchSize:l,dataFormat:i,inHeight:u,inWidth:c,inChannels:p,outHeight:D,outWidth:T,outChannels:R,padInfo:C,strideHeight:h,strideWidth:g,filterHeight:m,filterWidth:f,effectiveFilterHeight:w,effectiveFilterWidth:_,dilationHeight:y,dilationWidth:b,inShape:r,outShape:P,filterShape:e}}function TN(r,e,t,o,n,s=!1,a="channelsLast",i){let[l,u,c,p,m]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,p,m]=r;else if(a==="channelsFirst")[l,m,u,c,p]=r;else throw new Error(`Unknown dataFormat ${a}`);let[f,d,h,,g]=e,[y,b,w]=rw(t),[_,C,D]=rw(o),T=Uc(f,_),R=Uc(d,C),P=Uc(h,D),{padInfo:B,outDepth:G,outHeight:U,outWidth:j}=EV(n,u,c,p,y,b,w,T,R,P,i),H=s?g*m:g,K;return a==="channelsFirst"?K=[l,H,G,U,j]:a==="channelsLast"&&(K=[l,G,U,j,H]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:p,inChannels:m,outDepth:G,outHeight:U,outWidth:j,outChannels:H,padInfo:B,strideDepth:y,strideHeight:b,strideWidth:w,filterDepth:f,filterHeight:d,filterWidth:h,effectiveFilterDepth:T,effectiveFilterHeight:R,effectiveFilterWidth:P,dilationDepth:_,dilationHeight:C,dilationWidth:D,inShape:r,outShape:K,filterShape:e}}function DV(r,e,t,o,n){o==null&&(o=ow(r,e,t));let s=r[0],a=r[1],i=bu((s-e+2*o)/t+1,n),l=bu((a-e+2*o)/t+1,n);return[i,l]}function $V(r,e,t,o,n,s){n==null&&(n=ow(r,e,o));let a=r[0],i=r[1],l=r[2],u=bu((a-e+2*n)/o+1,s),c=bu((i-e+2*n)/o+1,s),p=bu((l-e+2*n)/o+1,s);return[u,c,p,t]}function ow(r,e,t,o=1){let n=Uc(e,o);return Math.floor((r[0]*(t-1)-t+n)/2)}function Zh(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function rw(r){return typeof r=="number"?[r,r,r]:r}function Uc(r,e){return e<=1?r:r+(r-1)*(e-1)}function AV(r,e,t,o,n,s,a,i,l){let u,c,p;if(typeof r=="number"){u={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let f=DV([e,t],s,o,r,i);c=f[0],p=f[1]}else if(r==="same"){c=Math.ceil(e/o),p=Math.ceil(t/n);let m=Math.max(0,(c-1)*o+s-e),f=Math.max(0,(p-1)*n+a-t),d=Math.floor(m/2),h=m-d,g=Math.floor(f/2),y=f-g;u={top:d,bottom:h,left:g,right:y,type:"SAME"}}else if(r==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-s+1)/o),p=Math.ceil((t-a+1)/n);else if(typeof r=="object"){let m=l==="channelsLast"?r[1][0]:r[2][0],f=l==="channelsLast"?r[1][1]:r[2][1],d=l==="channelsLast"?r[2][0]:r[3][0],h=l==="channelsLast"?r[2][1]:r[3][1];u={top:m,bottom:f,left:d,right:h,type:m===0&&f===0&&d===0&&h===0?"VALID":"EXPLICIT"},c=bu((e-s+m+f)/o+1,i),p=bu((t-a+d+h)/n+1,i)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:u,outHeight:c,outWidth:p}}function EV(r,e,t,o,n,s,a,i,l,u,c){let p,m,f,d;if(typeof r=="number"){p={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=$V([e,t,o,1],i,1,n,r,c);m=g[0],f=g[1],d=g[2]}else if(r==="same"){m=Math.ceil(e/n),f=Math.ceil(t/s),d=Math.ceil(o/a);let h=(m-1)*n+i-e,g=(f-1)*s+l-t,y=(d-1)*a+u-o,b=Math.floor(h/2),w=h-b,_=Math.floor(g/2),C=g-_,D=Math.floor(y/2),T=y-D;p={top:_,bottom:C,left:D,right:T,front:b,back:w,type:"SAME"}}else if(r==="valid")p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},m=Math.ceil((e-i+1)/n),f=Math.ceil((t-l+1)/s),d=Math.ceil((o-u+1)/a);else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:p,outDepth:m,outHeight:f,outWidth:d}}function bu(r,e){if(!e)return Math.trunc(r);switch(e){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${e}`)}}function Mo(r){let[e,t,o]=Zh(r);return e===1&&t===1&&o===1}function wr(r,e){return Mo(r)||Mo(e)}function SN(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function RV(r,e){let o={x:k(r,"x","reshape","string_or_numeric")},n={shape:e};return E.runKernel(ds,o,n)}var M=S({reshape_:RV});function FV(r,e,t,o,n){let s=k(r,"x","avgPool","float32"),a=1;A(wr(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let i=s,l=!1;s.rank===3&&(l=!0,i=M(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),n!=null&&A(ot(o),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${n} but got pad ${o}.`);let u={x:i},c={filterSize:e,strides:t,pad:o,dimRoundingMode:n},p=E.runKernel(Ko,u,c);return p=ne(p,s.dtype),l?M(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var wa=S({avgPool_:FV});function OV(r,e,t,o,n,s="NDHWC"){let a=k(r,"x","avgPool3d","float32"),i=a,l=!1;a.rank===4&&(l=!0,i=M(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),A(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),A(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),n!=null&&A(ot(o),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${n} but got pad ${o}.`);let u={x:i},c={filterSize:e,strides:t,pad:o,dimRoundingMode:n,dataFormat:s},p=E.runKernel(ta,u,c);return p=ne(p,i.dtype),l?M(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Im=S({avgPool3d_:OV});function PV(r,e=0){A(r.length>=1,()=>"Pass at least one tensor to concat");let t=ha(r,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),t.length===1)return Oo(t[0]);let o=t,n={axis:e};return E.runKernel(ls,o,n)}var Ye=S({concat_:PV});function MV(r){let t={x:k(r,"x","sigmoid")};return E.runKernel(An,t)}var qr=S({sigmoid_:MV});function LV(r,e,t){let o=k(r,"x","slice","string_or_numeric");if(o.rank===0)throw new Error("Slicing scalar is not possible");let n={x:o},s={begin:e,size:t};return E.runKernel(gs,n,s)}var Re=S({slice_:LV});function zV(r){let t={x:k(r,"x","tanh")};return E.runKernel(On,t)}var Fi=S({tanh_:zV});function BV(r,e,t,o,n,s){let a=k(r,"forgetBias","basicLSTMCell"),i=k(e,"lstmKernel","basicLSTMCell"),l=k(t,"lstmBias","basicLSTMCell"),u=k(o,"data","basicLSTMCell"),c=k(n,"c","basicLSTMCell"),p=k(s,"h","basicLSTMCell"),m=Ye([u,p],1),f=We(m,i),d=Q(f,l),h=d.shape[0],g=d.shape[1]/4,y=[h,g],b=Re(d,[0,0],y),w=Re(d,[0,g],y),_=Re(d,[0,g*2],y),C=Re(d,[0,g*3],y),D=Q(O(qr(b),Fi(w)),O(c,qr(Q(a,_)))),T=O(Fi(D),qr(C));return[D,T]}var VV=S({basicLSTMCell_:BV});function GV(r,e,t){let o=k(r,"x","batchToSpaceND"),n=e.reduce((i,l)=>i*l);A(o.rank>=1+e.length,()=>`input rank is ${o.rank} but should be > than blockShape.length ${e.length}`),A(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),A(o.shape[0]%n==0,()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${n}`);let s={x:o},a={blockShape:e,crops:t};return E.runKernel(ra,s,a)}var _a=S({batchToSpaceND_:GV});function AN(r){let e;return r.rank===0||r.rank===1?e=M(r,[1,1,1,r.size]):r.rank===2?e=M(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?e=M(r,[1,r.shape[0],r.shape[1],r.shape[2]]):e=r,e}function WV(r,e,t,o,n,s){s==null&&(s=.001);let a=k(r,"x","batchNorm"),i=k(e,"mean","batchNorm"),l=k(t,"variance","batchNorm"),u;n!=null&&(u=k(n,"scale","batchNorm"));let c;o!=null&&(c=k(o,"offset","batchNorm")),A(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),A(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),A(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let m={x:AN(a),scale:u,offset:c,mean:i,variance:l},f={varianceEpsilon:s},d=E.runKernel(an,m,f);return M(d,a.shape)}var Ln=S({batchNorm_:WV});function UV(r,e,t,o,n,s){let a=k(r,"x","batchNorm"),i=k(e,"mean","batchNorm"),l=k(t,"variance","batchNorm"),u;n!=null&&(u=k(n,"scale","batchNorm"));let c;return o!=null&&(c=k(o,"offset","batchNorm")),A(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),A(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),A(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&A(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Ln(a,i,l,c,u,s)}var nw=S({batchNorm2d_:UV});function jV(r,e,t,o,n,s){let a=k(r,"x","batchNorm"),i=k(e,"mean","batchNorm"),l=k(t,"variance","batchNorm"),u;n!=null&&(u=k(n,"scale","batchNorm"));let c;return o!=null&&(c=k(o,"offset","batchNorm")),A(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),A(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),A(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&A(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Ln(a,i,l,c,u,s)}var sw=S({batchNorm3d_:jV});function HV(r,e,t,o,n,s){let a=k(r,"x","batchNorm"),i=k(e,"mean","batchNorm"),l=k(t,"variance","batchNorm"),u;n!=null&&(u=k(n,"scale","batchNorm"));let c;return o!=null&&(c=k(o,"offset","batchNorm")),A(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),A(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),A(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&A(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Ln(a,i,l,c,u,s)}var iw=S({batchNorm4d_:HV});function qV(r,e,t){let o=k(r,"x","bincount"),n=k(e,"weights","bincount");A(o.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`),A(t>=0,()=>`size must be non-negative, but got ${t}.`),A(n.size===o.size||n.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${n.shape}.`);let s={x:o,weights:n},a={size:t};return E.runKernel(Vl,s,a)}var aw=S({bincount_:qV});function KV(r,e){let t=k(r,"broadcastTo","x"),o=t.shape;if(e.some(u=>!(u>0)||u%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){let u=t.shape.slice();for(;u.length<e.length;)u.unshift(1);t=M(t,u)}let n=t.shape,s=Array.from(e);for(let u=e.length-1;u>=0;u--)if(n[u]===e[u])s[u]=1;else if(t.shape[u]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${e}].`);if(s.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Oo(t);let i={x:t},l={reps:s};return E.runKernel(_o,i,l)}var sl=S({broadcastTo_:KV});function XV(r){let t={x:k(r,"x","ceil")};return E.runKernel(Yo,t)}var Nm=S({ceil_:XV});function YV(r,e,t){let o=k(r,"x","clipByValue");A(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`);let n={x:o},s={clipValueMin:e,clipValueMax:t};return E.runKernel($o,n,s)}var sr=S({clipByValue_:YV});function ZV(r){return Ye(r,0)}var lw=S({concat1d_:ZV});function JV(r,e){return Ye(r,e)}var uw=S({concat2d_:JV});function QV(r,e){return Ye(r,e)}var cw=S({concat3d_:QV});function eG(r,e){return Ye(r,e)}var pw=S({concat4d_:eG});function tG(r,e,t,o,n="NHWC",s=[1,1],a){let i=k(r,"x","conv2d"),l=k(e,"filter","conv2d"),u=i,c=!1;i.rank===3&&(c=!0,u=M(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),A(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),a!=null&&A(ot(o),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`);let p=n==="NHWC"?u.shape[3]:u.shape[1];A(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),A(wr(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);let m={x:u,filter:l},f={strides:t,pad:o,dataFormat:n,dilations:s,dimRoundingMode:a},d=E.runKernel(Zo,m,f);return c?M(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Kr=S({conv2d_:tG});function rG(r,e,t,o,n="NWC",s=1,a){let i=k(r,"x","conv1d"),l=k(e,"filter","conv1d"),u=i,c=!1;i.rank===2&&(c=!0,u=M(i,[1,i.shape[0],i.shape[1]])),A(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),A(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),a!=null&&A(ot(o),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`),A(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),A(wr(t,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${s}'`),A(n==="NWC",()=>`Error in conv1d: got dataFormat of ${n} but only NWC is currently supported.`);let p=M(l,[1,l.shape[0],l.shape[1],l.shape[2]]),m=M(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=Kr(m,p,[1,t],o,"NHWC",[1,s],a);return c?M(g,[g.shape[2],g.shape[3]]):M(g,[g.shape[0],g.shape[2],g.shape[3]])}var wu=S({conv1d_:rG});function oG(r,e,t,o,n,s="NHWC",a){A(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let i=r,l=e,u=!1;e.rank===3&&(u=!0,l=M(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,r[0],r[1],r[2]]),A(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),A(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),A(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);let c=s==="NHWC"?i[3]:i[1],p=s==="NHWC"?l.shape[3]:l.shape[1];A(c===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[2]}.`),A(p===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${t.shape[3]}.`),a!=null&&A(ot(n),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`);let m={dy:l,filter:t},f={strides:o,pad:n,dataFormat:s,dimRoundingMode:a,inputShape:i},d=E.runKernel(Jo,m,f);return u?M(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var jc=S({conv2DBackpropInput_:oG});function nG(r,e,t,o,n,s){let a=k(r,"x","conv2dTranspose"),i=k(e,"filter","conv2dTranspose");return jc(t,a,i,o,n,"NHWC",s)}var _u=S({conv2dTranspose_:nG});function sG(r,e,t,o,n="NDHWC",s=[1,1,1]){let a=k(r,"x","conv3d"),i=k(e,"filter","conv3d"),l=a,u=!1;a.rank===4&&(u=!0,l=M(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),A(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),A(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),A(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),A(wr(t,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),A(n==="NDHWC",()=>`Error in conv3d: got dataFormat of ${n} but only NDHWC is currently supported.`);let c={x:l,filter:i},p={strides:t,pad:o,dataFormat:n,dilations:s},m=E.runKernel(na,c,p);return u?M(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Sm=S({conv3d_:sG});function iG(r,e,t,o,n){A(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let s=r,a=e,i=!1;e.rank===4&&(i=!0,a=M(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let l=s[4],u=a.shape[4];A(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),A(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),A(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),A(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),A(u===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[4]}.`);let c={dy:a,filter:t},p={pad:n,strides:o,inputShape:s},m=E.runKernel(jl,c,p);return i?M(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Jh=S({conv3DBackpropInput_:iG});function aG(r,e,t,o,n){let s=k(r,"x","conv3dTranspose"),a=k(e,"filter","conv3dTranspose");return Jh(t,s,a,o,n)}var lG=S({conv3dTranspose_:aG});function uG(r){let t={x:k(r,"x","cos")};return E.runKernel(Qo,t)}var ka=S({cos_:uG});function cG(r){let t={x:k(r,"x","cosh")};return E.runKernel(Js,t)}var ku=S({cosh_:cG});function pG(r,e=0,t=!1,o=!1){let s={x:k(r,"x","cumsum")},a={axis:e,exclusive:t,reverse:o};return E.runKernel(en,s,a)}var vu=S({cumsum_:pG});function mG(r,e,t,o=!1){let n=k(r,"x","denseBincount"),s=k(e,"weights","denseBincount");A(n.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${n.dtype}`),A(n.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${n.rank}.`),A(t>=0,()=>`size must be non-negative, but got ${t}.`),A(s.size===n.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${n.shape}, weights shape: ${s.shape}.`);let a={x:n,weights:s},i={size:t,binaryOutput:o};return E.runKernel(Hl,a,i)}var mw=S({denseBincount_:mG});function fG(r,e,t="NHWC"){let o=k(r,"x","depthToSpace"),n=t==="NHWC"?o.shape[1]:o.shape[2],s=t==="NHWC"?o.shape[2]:o.shape[3],a=t==="NHWC"?o.shape[3]:o.shape[1];A(n*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${n} and ${e}  for depthToSpace with input shape
    ${o.shape}`),A(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e} for depthToSpace with input shape
        ${o.shape}`),A(a%(e*e)==0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${o.shape}`);let i={x:o},l={blockSize:e,dataFormat:t};return E.runKernel(ei,i,l)}var Tm=S({depthToSpace_:fG});function dG(r,e,t,o,n="NHWC",s=[1,1],a){let i=k(r,"x","depthwiseConv2d"),l=k(e,"filter","depthwiseConv2d"),u=i,c=!1;i.rank===3&&(c=!0,u=M(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),A(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),A(u.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),a!=null&&A(ot(o),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`);let p={x:u,filter:l},m={strides:t,pad:o,dataFormat:n,dilations:s,dimRoundingMode:a},f=E.runKernel(tn,p,m);return c?M(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Cs=S({depthwiseConv2d_:dG});function hG(r){let t={x:k(r,"x","diag")};return E.runKernel(Xl,t)}var gG=S({diag_:hG});function xG(r,e,t,o,n=[1,1],s="NHWC"){let a=k(r,"x","dilation2d"),i=k(e,"filter","dilation2d");A(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),A(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),A(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=a,u=!1;a.rank===3&&(l=M(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);let c={x:l,filter:i},p={strides:t,pad:o,dilations:n},m=E.runKernel(sa,c,p);return u?M(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Am=S({dilation2d_:xG});function yG(r,e){let t=r.length,o=[];for(let n=0;n<t;n++){let s=t-1-n,a=r[s]||1;(e[e.length-1-n]||1)>1&&a===1&&o.unshift(s)}return o}function _t(r,e){let t=[];for(let o=0;o<e.length;o++){let n=r[r.length-o-1],s=e.length-o-1,a=e[s];(n==null||n===1&&a>1)&&t.unshift(s)}return t}function Be(r,e){let t=[],o=Math.max(r.length,e.length);for(let n=0;n<o;n++){let s=r[r.length-n-1];s==null&&(s=1);let a=e[e.length-n-1];if(a==null&&(a=1),s===1)t.unshift(a);else if(a===1)t.unshift(s);else if(s!==a){let i=`Operands could not be broadcast together with shapes ${r} and ${e}.`;throw Error(i)}else t.unshift(s)}return t}function bG(r,e){let t=k(r,"a","equal"),o=k(e,"b","equal");[t,o]=Ge(t,o),Be(t.shape,o.shape);let n={a:t,b:o};return E.runKernel(oi,n)}var vo=S({equal_:bG});function wG(r,e,t){let o=k(e,"a","where"),n=k(t,"b","where"),s=k(r,"condition","where","bool"),a=Be(o.shape,n.shape),i=sl(o,a),l=sl(n,a);s.rank===1&&A(s.shape[0]===o.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),s.rank!==1&&vt(s.shape,l.shape,"Error in where: ");let u={condition:s,t:i,e:l};return E.runKernel(hs,u)}var Dt=S({where_:wG});function _G(r){let t={x:k(r,"x","zerosLike")};return E.runKernel(bs,t)}var Ce=S({zerosLike_:_G});function kG(r,e){let t=k(r,"a","div"),o=k(e,"b","div");[t,o]=Ge(t,o);let n=me(t,o),s=Ce(n),a=vo(o,s);return Dt(a,s,n)}var Em=S({divNoNan_:kG});function vG(r,e){let t=k(r,"t1","dot"),o=k(e,"t2","dot");A((t.rank===1||t.rank===2)&&(o.rank===1||o.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${o.rank}.`);let n=t.rank===1?t.size:t.shape[1],s=o.rank===1?o.size:o.shape[0];if(A(n===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${n} and ${s}.`),t.rank===1&&o.rank===1){let a=M(t,[1,-1]),i=M(o,[-1,1]),l=We(a,i);return M(l,[])}else if(t.rank===1&&o.rank===2){let a=M(t,[1,-1]),i=M(o,[o.shape[0],o.shape[1]]),l=We(a,i);return M(l,[l.size])}else if(t.rank===2&&o.rank===1){let a=M(o,[-1,1]),i=We(t,a);return M(i,[i.size])}else{let a=M(o,[o.shape[0],o.shape[1]]);return We(t,a)}}var fw=S({dot_:vG});function CG(r){let t={x:k(r,"x","elu")};return E.runKernel(ti,t)}var Is=S({elu_:CG});function IG(r){let e=k(r,"x","erf");A(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=ne(e,"float32"));let t={x:e};return E.runKernel(ri,t)}var Dm=S({erf_:IG});function NG(r){let t={x:k(r,"x","exp")};return E.runKernel(on,t)}var Yt=S({exp_:NG});function SG(r,e=0){let t=k(r,"x","expandDims","string_or_numeric");A(e<=t.rank,()=>"Axis must be <= rank of the tensor");let o={input:t},n={dim:e};return E.runKernel(us,o,n)}var ir=S({expandDims_:SG});function TG(r){let t={x:k(r,"x","expm1")};return E.runKernel(ni,t)}var $m=S({expm1_:TG});function AG(r,e){let t=k(r,"x","tile","string_or_numeric");A(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);let o={x:t},n={reps:e};return E.runKernel(_o,o,n)}var Lo=S({tile_:AG});function EG(r,e,t,o="float32"){e==null&&(e=r);let n=ve([r,e],o),s=r<=e?r:e;for(let i=0;i<s;++i)n.set(1,i,i);let a=M(n.toTensor(),[r,e]);if(t==null)return a;if(t.length===1)return Lo(ir(a,0),[t[0],1,1]);if(t.length===2)return Lo(ir(ir(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return Lo(ir(ir(ir(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}var Hc=S({eye_:EG});function va(r,e,t){let o={shape:r,value:e,dtype:t};return E.runKernel(ia,{},o)}function DG(r){let t={x:k(r,"x","floor")};return E.runKernel(nn,t)}var Ns=S({floor_:DG});function $G(r,e,t=0,o=0){let n=k(r,"x","gather"),s=k(e,"indices","gather","int32"),a={x:n,indices:s},i={axis:t,batchDims:o};return E.runKernel(cs,a,i)}var zn=S({gather_:$G});function RG(r,e){let t=k(r,"a","greater"),o=k(e,"b","greater");[t,o]=Ge(t,o),Be(t.shape,o.shape);let n={a:t,b:o};return E.runKernel(ai,n)}var Qt=S({greater_:RG});function FG(r,e){let t=k(r,"a","greaterEqual"),o=k(e,"b","greaterEqual");[t,o]=Ge(t,o),Be(t.shape,o.shape);let n={a:t,b:o};return E.runKernel(ln,n)}var io=S({greaterEqual_:FG});function OG(r){let t={input:k(r,"input","imag")};return E.runKernel(Ql,t)}var Cu=S({imag_:OG});function PG(r){let t={x:k(r,"x","isFinite")};return E.runKernel(li,t)}var dw=S({isFinite_:PG});function MG(r){let t={x:k(r,"x","isInf")};return E.runKernel(ui,t)}var hw=S({isInf_:MG});function LG(r){let t={x:k(r,"x","isNaN")};return E.runKernel(ci,t)}var gw=S({isNaN_:LG});function zG(r,e=.2){let o={x:k(r,"x","leakyRelu")},n={alpha:e};return E.runKernel(un,o,n)}var Ca=S({leakyRelu_:zG});function BG(r,e){let t=k(r,"a","less"),o=k(e,"b","less");[t,o]=Ge(t,o),Be(t.shape,o.shape);let n={a:t,b:o};return E.runKernel(pi,n)}var Iu=S({less_:BG});function VG(r,e){let t=k(r,"a","lessEqual"),o=k(e,"b","lessEqual");[t,o]=Ge(t,o),Be(t.shape,o.shape);let n={a:t,b:o};return E.runKernel(mi,n)}var zo=S({lessEqual_:VG});function xw(r,e,t){if(t<=0)throw new Error("The number of values should be positive.");let o={start:r,stop:e,num:t};return E.runKernel(eu,{},o)}function GG(r,e=5,t=1,o=1,n=.5){let s=k(r,"x","localResponseNormalization");A(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),A(ot(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=s,i=!1;s.rank===3&&(i=!0,a=M(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:a},u={depthRadius:e,bias:t,alpha:o,beta:n},c=E.runKernel(aa,l,u);return i?M(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var Rm=S({localResponseNormalization_:GG});function WG(r){let t={x:k(r,"x","log")};return E.runKernel(cn,t)}var ar=S({log_:WG});function UG(r){let t={x:k(r,"x","log1p")};return E.runKernel(fi,t)}var Nu=S({log1p_:UG});function jG(r){return A(Ws(r),()=>"The f passed in grad(f) must be a function"),(e,t)=>{let o=k(e,"x","tf.grad","string_or_numeric"),n=t!=null?k(t,"dy","tf.grad"):null;return E.tidy(()=>{let{value:s,grads:a}=E.gradients(()=>r(o),[o],n);return n!=null&&vt(s.shape,n.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Qh(a),a[0]})}}function HG(r){return A(Ws(r),()=>"The f passed in grads(f) must be a function"),(e,t)=>{A(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let o=ha(e,"args","tf.grads","string_or_numeric"),n=t!=null?k(t,"dy","tf.grads"):null;return E.tidy(()=>{let{value:s,grads:a}=E.gradients(()=>r(...o),o,n);return n!=null&&vt(s.shape,n.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Qh(a),a})}}function qG(r){return A(Ws(r),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{A(e instanceof Ve,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),A(t==null||t instanceof Ve,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:o,value:n}=E.gradients(()=>r(e),[e],t);return Qh(o),{grad:o[0],value:n}}}function KG(r){return A(Ws(r),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{A(Array.isArray(e)&&e.every(n=>n instanceof Ve),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),A(t==null||t instanceof Ve,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let o=E.gradients(()=>r(...e),e,t);return t!=null&&vt(o.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Qh(o.grads),o}}function eg(r,e){A(Ws(r),()=>"The f passed in variableGrads(f) must be a function"),A(e==null||Array.isArray(e)&&e.every(u=>u instanceof el),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let t=e!=null;if(!t){e=[];for(let u in E.registeredVariables)e.push(E.registeredVariables[u])}let o=t?e.filter(u=>!u.trainable):null,n=e.length;e=e.filter(u=>u.trainable),A(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${n} variables is trainable.`);let s=!0,{value:a,grads:i}=E.gradients(r,e,null,s);A(i.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),A(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);let l={};return e.forEach((u,c)=>{i[c]!=null&&(l[u.name]=i[c])}),o!=null&&o.forEach(u=>l[u.name]=null),{value:a,grads:l}}function Xr(r){return E.customGrad(r)}function Qh(r){if(r.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function XG(r){let t={x:k(r,"x","neg")};return E.runKernel(ps,t)}var He=S({neg_:XG});function YG(r){let t={x:k(r,"x","softplus")};return E.runKernel(Ni,t)}var Ss=S({softplus_:YG});function ZG(r){let e=k(r,"x","logSigmoid");return Xr(o=>({value:He(Ss(He(o))),gradFunc:a=>O(a,qr(He(o)))}))(e)}var yw=S({logSigmoid_:ZG});function JG(r,e=null,t=!1){let n={x:k(r,"x","max")},s={reductionIndices:e,keepDims:t};return E.runKernel(pn,n,s)}var lr=S({max_:JG});function QG(r,e){let t=k(r,"a","sub"),o=k(e,"b","sub");[t,o]=Ge(t,o);let n={a:t,b:o};return E.runKernel(Fn,n)}var ce=S({sub_:QG});function eW(r,e=null,t=!1){let o=k(r,"x","sum");o.dtype==="bool"&&(o=ne(o,"int32"));let n={x:o},s={axis:e,keepDims:t};return E.runKernel(Dn,n,s)}var ge=S({sum_:eW});function tW(r,e=-1){let t=k(r,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return Xr((n,s)=>{let a=!0,i=lr(n,e,!0),l=ce(n,i),u=ce(ne(l,"float32"),ar(ge(Yt(l),e,a)));return s([u]),{value:u,gradFunc:(p,m)=>{let[f]=m,d=!0,h=Yt(f);return ce(p,O(ge(p,e,d),h))}}})(t)}var Su=S({logSoftmax_:tW});function bw(r,e){for(let t=0;t<r.length;++t)if(r[r.length-t-1]!==e-1-t)return!1;return!0}function EN(r,e,t){let o=r.length+e.length,n=[],s=0,a=0;for(let i=0;i<o;i++)t.indexOf(i)===-1?n.push(r[s++]):n.push(e[a++]);return n}function ww(r,e){let t=[],o=r.length;for(let s=0;s<o;s++)e.indexOf(s)===-1&&t.push(r[s]);let n=e.map(s=>r[s]);return[t,n]}function Bn(r,e){let t=e.map(o=>1);return EN(r,t,e)}function rW(r,e,t){A(bw(e,t),()=>`${r} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function _w(r,e){if(bw(r,e))return null;let t=[];for(let o=0;o<e;++o)r.indexOf(o)===-1&&t.push(o);return r.forEach(o=>t.push(o)),t}function Fm(r){return r.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function oW(r,e){let t=[];for(let o=e-r;o<e;++o)t.push(o);return t}function nW(r,e=null,t=!1){let o=k(r,"x","logSumExp"),n=Jt(e,o.shape),s=lr(o,n,!0),a=ce(o,s),i=Yt(a),l=ge(i,n),u=ar(l),c=Q(M(s,u.shape),u);if(t){let p=Bn(c.shape,n);return M(c,p)}return c}var Om=S({logSumExp_:nW});function sW(r,e){let t=k(r,"a","logicalAnd","bool"),o=k(e,"b","logicalAnd","bool");Be(t.shape,o.shape);let n={a:t,b:o};return E.runKernel(di,n)}var dr=S({logicalAnd_:sW});function iW(r){let t={x:k(r,"x","logicalNot","bool")};return E.runKernel(Ya,t)}var Ia=S({logicalNot_:iW});function aW(r,e){let t=k(r,"a","logicalOr","bool"),o=k(e,"b","logicalOr","bool");Be(t.shape,o.shape);let n={a:t,b:o};return E.runKernel(Za,n)}var Tu=S({logicalOr_:aW});function lW(r,e){let t=k(r,"a","logicalXor","bool"),o=k(e,"b","logicalXor","bool");return Be(t.shape,o.shape),dr(Tu(r,e),Ia(dr(r,e)))}var kw=S({logicalXor_:lW});function uW(r,e,t,o,n){let s=k(r,"x","maxPool"),a=1,i=s,l=!1;s.rank===3&&(l=!0,i=M(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),A(wr(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),n!=null&&A(ot(o),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${n} but got pad ${o}.`);let u={x:i},c={filterSize:e,strides:t,pad:o,dimRoundingMode:n},p=E.runKernel(fn,u,c);return l?M(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Na=S({maxPool_:uW});function cW(r,e=[1,1,1],t,o,n,s="NDHWC"){let a=k(r,"x","maxPool3d"),i=a,l=!1;a.rank===4&&(l=!0,i=M(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),A(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),A(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),n!=null&&A(ot(o),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${n} but got pad ${o}.`);let u={x:i},c={filterSize:e,strides:t,pad:o,dimRoundingMode:n,dataFormat:s},p=E.runKernel(la,u,c);return l?M(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Pm=S({maxPool3d_:cW});function pW(r,e,t,o,n=!1){let a={x:k(r,"x","maxPoolWithArgmax")},i={filterSize:e,strides:t,pad:o,includeBatchInIndex:n},l=E.runKernel(nu,a,i);return{result:l[0],indexes:l[1]}}var vw=S({maxPoolWithArgmax_:pW});function mW(r,e){let t=k(r,"a","maximum"),o=k(e,"b","maximum");[t,o]=Ge(t,o),t.dtype==="bool"&&(t=ne(t,"int32"),o=ne(o,"int32")),Be(t.shape,o.shape);let n={a:t,b:o};return E.runKernel(mn,n)}var Yr=S({maximum_:mW});function fW(r,e=null,t=!1){let n={x:k(r,"x","mean")},s={axis:e,keepDims:t};return E.runKernel(dn,n,s)}var dt=S({mean_:fW});function dW(r,e=null,t=!1){let n={x:k(r,"x","min")},s={axis:e,keepDims:t};return E.runKernel(hn,n,s)}var Oi=S({min_:dW});function hW(r,e){let t=k(r,"a","minimum"),o=k(e,"b","minimum");[t,o]=Ge(t,o),t.dtype==="bool"&&(t=ne(t,"int32"),o=ne(o,"int32")),Be(t.shape,o.shape);let n={a:t,b:o};return E.runKernel(gn,n)}var Ts=S({minimum_:hW});function gW(r,e,t){A(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);let o=k(r,"x","mirrorPad");if(o.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");A(e.length===o.rank,()=>`Padding doesn't match input. Must be ${o.rank}. Got ${e.length}.`);let n=t==="reflect"?1:0;for(let i=0;i<o.rank;i++)A(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),A(e[i][0]>=0&&e[i][0]<=o.shape[i]-n&&e[i][1]>=0&&e[i][1]<=o.shape[i]-n,()=>`Padding in dimension ${i} cannot be greater than or equal to ${o.shape[i]-n} or less than 0 for input of shape ${o.shape}`);let s={paddings:e,mode:t},a={x:o};return E.runKernel(ua,a,s)}var Mm=S({mirrorPad_:gW});function xW(r,e){let t=k(r,"a","mod"),o=k(e,"b","mod");[t,o]=Ge(t,o);let n={a:t,b:o};return E.runKernel(hi,n)}var Lm=S({mod_:xW});function yW(r){let e=k(r,"x","square"),t={};return E.runKernel("Square",{x:e},t)}var Oe=S({square_:yW});function bW(r,e=null,t=!1){r=k(r,"x","moments");let o=Jt(e,r.shape),n=dt(r,o,t),s=n.shape;t||(s=Bn(n.shape,o));let a=Oe(ce(ne(r,"float32"),M(n,s))),i=dt(a,o,t);return{mean:n,variance:i}}var qc=S({moments_:bW});function wW(r,e,t,o){let n=k(e,"data","multiRNNCell"),s=ha(t,"c","multiRNNCell"),a=ha(o,"h","multiRNNCell"),i=n,l=[];for(let p=0;p<r.length;p++){let m=r[p](i,s[p],a[p]);l.push(m[0]),l.push(m[1]),i=m[1]}let u=[],c=[];for(let p=0;p<l.length;p+=2)u.push(l[p]),c.push(l[p+1]);return[u,c]}var _W=S({multiRNNCell_:wW});function kW(r,e,t,o=!1){let n=k(r,"logits","multinomial"),s=n.size,a=n.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();let l={logits:a===1?M(n,[1,-1]):n},u={numSamples:e,seed:t,normalized:o},c=E.runKernel(su,l,u);return a===1?M(c,[c.size]):c}var Cw=S({multinomial_:kW});function vW(r,e){let t=k(r,"a","notEqual"),o=k(e,"b","notEqual");[t,o]=Ge(t,o),Be(t.shape,o.shape);let n={a:t,b:o};return E.runKernel(gi,n)}var Vn=S({notEqual_:vW});function ht(r,e="float32"){if(e==="complex64"){let o=ht(r,"float32"),n=ht(r,"float32");return ko(o,n)}let t=Ac(ct(r),e);return E.makeTensor(t,r,e)}function Ir(r,e="float32"){if(e==="complex64"){let o=Ir(r,"float32"),n=ht(r,"float32");return ko(o,n)}let t=im(ct(r),e);return E.makeTensor(t,r,e)}function CW(r){let t={x:k(r,"x","onesLike")};return E.runKernel(ms,t)}var er=S({onesLike_:CW});function IW(r,e){let t=k(r,"v1","outerProduct"),o=k(e,"v2","outerProduct");A(t.rank===1&&o.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${o.rank}.`);let n=M(t,[-1,1]),s=M(o,[1,-1]);return We(n,s)}var NW=S({outerProduct_:IW});function SW(r,e,t=0){let o=k(r,"x","pad");if(o.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let n={paddings:e,constantValue:t},s={x:o};return E.runKernel(bn,s,n)}var Rr=S({pad_:SW});function TW(r,e,t=0){return A(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Rr(r,[e],t)}var AW=S({pad1d_:TW});function EW(r,e,t=0){return A(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Rr(r,e,t)}var DW=S({pad2d_:EW});function $W(r,e,t=0){return A(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Rr(r,e,t)}var RW=S({pad3d_:$W});function FW(r,e,t=0){return A(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Rr(r,e,t)}var OW=S({pad4d_:FW});function PW(r,e,t){let o=k(r,"x","spaceToBatchND");A(o.rank>=1+e.length,()=>`input rank ${o.rank} should be > than [blockShape] ${e.length}`),A(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),A(o.shape.reduce((a,i,l)=>l>0&&l<=e.length?a&&(i+t[l-1][0]+t[l-1][1])%e[l-1]==0:a,!0),()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);let n={x:o},s={blockShape:e,paddings:t};return E.runKernel(ma,n,s)}var Sa=S({spaceToBatchND_:PW});function zW(r,e,t,o,n,s){n==null&&(n=[1,1]),s==null&&(s=1),o===0&&(o="valid");let a=k(r,"x","maxPool"),i=a,l=!1;a.rank===3&&(l=!0,i=M(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(wr(s,n),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${n}'`);let u=tw(i.shape,e,s,n,o),c=[u.dilationHeight,u.dilationWidth],p;o==="same"?p=LW([u.filterHeight,u.filterWidth],c):p=[[0,0],[0,0]];let m=c[0]===1&&c[1]===1,[f,d]=MW([u.inHeight,u.inWidth],c,p),h=m?o:"valid",g=m?i:Sa(i,c,f),b=(t==="avg"?()=>wa(g,e,s,h):()=>Na(g,e,s,h))(),w=m?b:_a(b,c,d);return l?M(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function MW(r,e,t){let o=t.map(c=>c[0]),n=t.map(c=>c[1]),s=r.concat(o,n),a=e.map((c,p)=>(c-s[p]%c)%c),i=n.map((c,p)=>c+a[p]),l=e.map((c,p)=>[o[p],i[p]]),u=e.map((c,p)=>[0,a[p]]);return[l,u]}function LW(r,e){let o=r.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),n=o.map(a=>Math.floor(a/2)),s=o.map((a,i)=>a-n[i]);return o.map((a,i)=>[n[i],s[i]])}var Iw=S({pool_:zW});function BW(r,e){let t=k(r,"base","pow"),o=k(e,"exp","pow");[t,o]=Ge(t,o);let n={a:t,b:o};return E.runKernel(wn,n)}var Fr=S({pow_:BW});function VW(r,e){let t=k(r,"x","prelu"),o=k(e,"alpha","prelu"),n={x:t,alpha:o};return E.runKernel(_n,n)}var Ta=S({prelu_:VW});function GW(r,e=null,t=!1){let o=k(r,"x","prod");o.dtype==="bool"&&(o=ne(o,"int32"));let n={x:o},s={axis:e,keepDims:t};return E.runKernel(wi,n,s)}var Au=S({prod_:GW});function WW(r,e,t){let o=ct(r),n=null;if(t==null||t==="float32")n=new Float32Array(o);else if(t==="int32")n=new Int32Array(o);else if(t==="bool")n=new Uint8Array(o);else throw new Error(`Unknown data type ${t}`);for(let s=0;s<o;s++)n[s]=e();return E.makeTensor(n,r,t)}var UW=S({rand_:WW});var rg=Ic(zm());var Kc=class{constructor(e,t,o,n,s){this.mean=e,this.stdDev=t,this.dtype=o,this.nextVal=NaN,this.truncated=n,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=s||Math.random();this.random=rg.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let n=this.nextVal;return this.nextVal=NaN,n}let e,t,o=!1;for(;!o;){let n,s,a;do n=2*this.random()-1,s=2*this.random()-1,a=n*n+s*s;while(a>=1||a===0);let i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*n*i,t=this.mean+this.stdDev*s*i,(!this.truncated||this.isValidTruncated(e))&&(o=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},$w=class{constructor(e,t,o,n){this.alpha=e,this.beta=1/t,this.dtype=o;let s=n||Math.random();this.randu=rg.alea(s.toString()),this.randn=new Kc(0,1,o,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,o,n,s,a;for(;;){do n=this.randn.nextValue(),a=1+this.c*n;while(a<=0);if(a*=a*a,e=n*n,t=1-.331*e*e,o=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<o)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},Rw=class{constructor(e=0,t=1,o,n){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=o,n==null&&(n=Math.random()),typeof n=="number"&&(n=n.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=rg.alea(n)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function ZW(r,e,t=1,o="float32",n){if(t==null&&(t=1),o==null&&(o="float32"),o!=="float32"&&o!=="int32")throw new Error(`Unsupported data type ${o}`);let s=new $w(e,t,o,n),a=ve(r,o);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var JW=S({randomGamma_:ZW});function QW(r,e=0,t=1,o,n){if(o!=null&&o==="bool")throw new Error(`Unsupported data type ${o}`);let s=new Kc(e,t,o,!1,n),a=ve(r,o);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var og=S({randomNormal_:QW});function eU(r,e=0,t=1,o="float32",n){let s=ve(r,o),a=new Rw(e,t,null,n);for(let i=0;i<s.values.length;i++)s.values[i]=a.nextValue();return s.toTensor()}var As=S({randomUniform_:eU});function Xc(r,e,t=1,o="float32"){if(t===0)throw new Error("Cannot have a step of zero");let n={start:r,stop:e,step:t,dtype:o};return E.runKernel(ca,{},n)}function tU(r){let t={input:k(r,"input","real")};return E.runKernel(iu,t)}var il=S({real_:tU});function rU(r){let t={x:k(r,"x","reciprocal")};return E.runKernel(_i,t)}var Bm=S({reciprocal_:rU});function oU(r){let t={x:k(r,"x","relu")};return E.runKernel(kn,t)}var Nr=S({relu_:oU});function nU(r){let t={x:k(r,"x","relu6")};return E.runKernel(Cn,t)}var Du=S({relu6_:nU});function sU(r,e){let o={x:k(r,"x","reverse")},n={dims:e};return E.runKernel(In,o,n)}var Ht=S({reverse_:sU});function iU(r){let e=k(r,"x","reverse");return A(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Ht(e,0)}var aU=S({reverse1d_:iU});function lU(r,e){let t=k(r,"x","reverse");return A(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),Ht(t,e)}var uU=S({reverse2d_:lU});function cU(r,e){let t=k(r,"x","reverse");return A(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),Ht(t,e)}var pU=S({reverse3d_:cU});function mU(r,e){let t=k(r,"x","reverse");return A(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),Ht(t,e)}var fU=S({reverse4d_:mU});function dU(r){let t={x:k(r,"x","round")};return E.runKernel(Nn,t)}var Vm=S({round_:dU});function hU(r){let t={x:k(r,"x","rsqrt")};return E.runKernel(Sn,t)}var $u=S({rsqrt_:hU});function ue(r,e){if((or(r)&&e!=="string"||Array.isArray(r))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&or(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return jr(r,[],[],e)}function gU(r){let t={x:k(r,"x","selu")};return E.runKernel(vi,t)}var Ru=S({selu_:gU});function xU(r,e,t,o,n,s=[1,1],a="NHWC"){let i=k(r,"x","separableConv2d"),l=k(e,"depthwiseFilter","separableConv2d"),u=k(t,"pointwiseFilter","separableConv2d"),c=i,p=!1;if(i.rank===3&&(p=!0,c=M(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");A(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),A(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),A(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),A(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),A(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let m=l.shape[2],f=l.shape[3];A(u.shape[2]===m*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*f}, but got ${u.shape[2]}.`);let d=Cs(c,l,o,n,a,s),g=Kr(d,u,1,"valid",a);return p?M(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var Gm=S({separableConv2d_:xU});async function yU(r,e){let t=k(r,"x","setdiff1d"),o=k(e,"y","setdiff1d");A(t.dtype===o.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${o.dtype}).`),A(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),A(o.rank===1,()=>`y should be 1D tensor, but got y (${o.shape}).`);let n=await t.data(),s=await o.data(),a=new Set(s),i=0;for(let c=0;c<n.length;c++)a.has(n[c])||i++;let l=new lt([i],t.dtype),u=new lt([i],"int32");for(let c=0,p=0;c<n.length;c++)a.has(n[c])||(l.values[p]=n[c],u.values[p]=c,p++);return[l.toTensor(),u.toTensor()]}var Fw=yU;function bU(r){let t={x:k(r,"x","sign")};return E.runKernel(Ii,t)}var Wm=S({sign_:bU});function wU(r){let t={x:k(r,"x","sin")};return E.runKernel(Tn,t)}var Fu=S({sin_:wU});function _U(r){let t={x:k(r,"x","sinh")};return E.runKernel(Ci,t)}var Ou=S({sinh_:_U});function kU(r,e,t){let o=k(r,"x","slice1d");return A(o.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${o.rank} tensor`),Re(o,[e],[t])}var Um=S({slice1d_:kU});function vU(r,e,t){let o=k(r,"x","slice2d");return A(o.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${o.rank} tensor`),Re(o,e,t)}var ng=S({slice2d_:vU});function CU(r,e,t){let o=k(r,"x","slice3d");return A(o.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${o.rank} tensor`),Re(o,e,t)}var jm=S({slice3d_:CU});function IU(r,e,t){let o=k(r,"x","slice4d");return A(o.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${o.rank} tensor`),Re(o,e,t)}var Yc=S({slice4d_:IU});function NU(r,e=-1){let t=k(r,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);let o={logits:t},n={dim:e};return E.runKernel($n,o,n)}var Aa=S({softmax_:NU});function SU(r){A(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let e={input:r};return E.runKernel(Zl,e)}var Ea=S({fft_:SU});function TU(r){A(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let e={input:r};return E.runKernel(Jl,e)}var Pi=S({ifft_:TU});function AU(r){let e=r.shape[r.shape.length-1],t=r.size/e,o;if(e<=2){let n=M(r,[t,e]);o=Pi(n)}else{let n=[t,2*(e-1)],s=M(il(r),[t,e]),a=M(Cu(r),[t,e]),i=Ht(Re(s,[0,1],[t,e-2]),1),l=O(Ht(Re(a,[0,1],[t,e-2]),1),ue(-1)),u=Ye([s,i],1),c=Ye([a,l],1),p=M(ko(u,c),[n[0],n[1]]);o=Pi(p)}if(o=il(o),r.rank===3&&r.shape[0]!==0){let n=o,s=r.shape[0];o=M(o,[s,o.shape[0]/s,o.shape[1]]),n.dispose()}return o}var Pu=S({irfft_:AU});function EU(r,e,t=0){let n={x:k(r,"x","split")},s={numOrSizeSplits:e,axis:t};return E.runKernel(xs,n,s)}var ur=S({split_:EU});function DU(r,e){A(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let t=r.shape[r.shape.length-1],o=r.size/t,n;if(e!=null&&e<t){let d=r.shape.map(g=>0),h=r.shape.map(g=>g);h[r.shape.length-1]=e,n=Re(r,d,h),t=e}else if(e!=null&&e>t){let d=r.shape.map(h=>h);d[r.shape.length-1]=e-t,n=Ye([r,ht(d)],r.shape.length-1),t=e}else n=r;let s=Ce(n),a=M(ko(n,s),[o,t]),i=Ea(a),l=Math.floor(t/2)+1,u=il(i),c=Cu(i),p=ur(u,[l,t-l],u.shape.length-1),m=ur(c,[l,t-l],c.shape.length-1),f=n.shape.slice();return f[n.shape.length-1]=l,M(ko(p[0],m[0]),f)}var Da=S({rfft_:DU});function $U(r){let t={x:k(r,"x","sqrt")};return E.runKernel(En,t)}var gt=S({sqrt_:$U});function RU(r,e){let t=k(r,"a","squaredDifference"),o=k(e,"b","squaredDifference");[t,o]=Ge(t,o),Be(t.shape,o.shape);let n={a:t,b:o},s={};return E.runKernel(Rn,n,s)}var Mu=S({squaredDifference_:RU});function FU(r,e){let t=k(r,"x","squeeze");return M(t,ub(t.shape,e).newShape)}var Co=S({squeeze_:FU});function OU(r,e=0){let t=ha(r,"tensors","stack","string_or_numeric");A(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&A(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");let o=t,n={axis:e};return E.runKernel(fs,o,n)}var Bt=S({stack_:OU});function PU(r,e=0){let o={x:k(r,"x","step")},n={alpha:e};return E.runKernel(Fo,o,n)}var Es=S({step_:PU});function MU(r,e,t,o,n=0,s=0,a=0,i=0,l=0){let c={x:k(r,"x","stridedSlice")},p={begin:e,end:t,strides:o,beginMask:n,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:l};return E.runKernel(Si,c,p)}var Hm=S({stridedSlice_:MU});function LU(r){let t={x:k(r,"x","tan")};return E.runKernel(Ti,t)}var qm=S({tan_:LU});function Vt(r,e){Eo(r);let t=vr(r,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return jr(r,null,t,e)}function Mi(r,e,t){if(Eo(r),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let o=vr(r,t);if(o.length!==2&&o.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(o.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return jr(r,e,o,t)}function zU(r,e,t){if(Eo(r),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let o=vr(r,t);if(o.length!==4&&o.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(o.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return jr(r,e,o,t)}function BU(r,e,t){if(Eo(r),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let o=vr(r,t);if(o.length!==5&&o.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(o.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return jr(r,e,o,t)}function VU(r,e,t){if(Eo(r),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let o=vr(r,t);if(o.length!==6&&o.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(o.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||o,jr(r,e,o,t)}function GU(r,e=1,t=!0){let o=k(r,"x","topk");if(o.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let n=o.shape[o.shape.length-1];if(e>n)throw new Error(`'k' passed to topk() must be <= the last dimension (${n}) but got ${e}`);let s={x:o},a={k:e,sorted:t},[i,l]=E.runKernel(Ai,s,a);return{values:i,indices:l}}var Km=S({topk_:GU});function WU(r,e=0,t=1,o,n){if(o!=null&&o==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new Kc(e,t,o,!0,n),a=ve(r,o);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var Lu=S({truncatedNormal_:WU});function UU(r,e=0){let t=k(r,"x","unique","string_or_numeric");A(t.rank>0,()=>"The input tensor must be at least 1D");let o={x:t},n={axis:e},[s,a]=E.runKernel(cu,o,n);return{values:s,indices:a}}var Zc=S({unique_:UU});function jU(r,e,t){let o=k(r,"x","unsortedSegmentSum"),n=k(e,"segmentIds","unsortedSegmentSum","int32");A(ot(t),()=>"numSegments must be of dtype int");let s={x:o,segmentIds:n},a={numSegments:t};return E.runKernel(da,s,a)}var Xm=S({unsortedSegmentSum_:jU});function HU(r,e=0){let t=k(r,"x","unstack","string_or_numeric");A(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);let o={value:t},n={axis:e};return E.runKernel(ys,o,n)}var cr=S({unstack_:HU});function Ow(r,e=!0,t,o){return E.makeVariable(r,e,t,o)}function Pw(r,e){let t=[];for(let s=0;s<e.length;s++)e[s]&&t.push(s);let o=ve(r,"int32"),n=ve([t.length,r.length],"int32");for(let s=0;s<t.length;s++){let a=o.indexToLoc(t[s]),i=s*r.length;n.values.set(a,i)}return n.toTensor()}async function qU(r){let e=k(r,"condition","whereAsync","bool"),t=await e.data(),o=Pw(e.shape,t);return r!==e&&e.dispose(),o}var Ym=qU;async function KU(r,e,t){let o=k(r,"tensor","boolMask"),n=k(e,"mask","boolMask","bool"),s=t==null?0:t,a=n.rank,i=o.shape;A(a>0,()=>"mask cannot be scalar"),vt(i.slice(s,s+a),n.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let h=s;h<s+a;h++)l*=i[h];let u=i.slice(0,s).concat([l],i.slice(s+a)),c=M(o,u),p=M(n,[-1]),m=await Ym(p),f=Co(m,[1]),d=zn(c,f,s);return r!==o&&o.dispose(),e!==n&&n.dispose(),f.dispose(),c.dispose(),p.dispose(),m.dispose(),d}var XU=KU;function YU(r,e="euclidean",t=null,o=!1){r=k(r,"x","norm");let n=HN(r,e,t),s=n.shape;if(o){let a=Jt(t,r.shape);s=Bn(n.shape,a)}return M(n,s)}function HN(r,e,t=null){if(r.rank===0)return It(r);if(r.rank!==1&&t===null)return HN(M(r,[-1]),e,t);if(r.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return ge(It(r),t);if(e===Infinity)return lr(It(r),t);if(e===-Infinity)return Oi(It(r),t);if(e==="euclidean"||e===2)return gt(ge(Fr(It(r),ue(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return lr(ge(It(r),t[0]),t[1]-1);if(e===Infinity)return lr(ge(It(r),t[1]),t[0]);if(e===-Infinity)return Oi(ge(It(r),t[1]),t[0]);if(e==="fro"||e==="euclidean")return gt(ge(Oe(r),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}var zu=S({norm_:YU});function ZU(r,e,t,o,n=!0){let s=k(r,"v","movingAverage"),a=k(e,"x","movingAverage"),i=k(t,"decay","movingAverage");Ab(s,a),A(Ur(s.shape,a.shape),()=>"Shape mismatch in v and x");let l=ue(1),u=ce(l,i),c=O(ce(a,s),u);if(n){A(o!=null,()=>"When using zeroDebias: true, step is required.");let p=k(o,"step","movingAverage");c=me(c,ce(l,Fr(i,p)))}return Q(s,c)}var JU=S({movingAverage_:ZU});function QU(r,e,t){let o=k(r,"indices","scatterND","int32"),n=k(e,"updates","scatterND");qh(n,o,t);let s={indices:o,updates:n},a={shape:t};return E.runKernel(ki,s,a)}var Mw=S({scatterND_:QU});function qN(r,e,t,o){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let n=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(t.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${s}.`);let a=e.size;if(!(e.rank===0||e.rank===1&&a===n))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${n}]`);if(e.dtype!==o.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function e4(r,e,t,o=0){let n=k(r,"sparseIndices","sparseToDense","int32"),s=k(e,"sparseValues","sparseToDense"),a=k(o,"defaultValue","sparseToDense",s.dtype);qN(n,s,t,a);let i={sparseIndices:n,sparseValues:s,defaultValue:a},l={outputShape:t};return E.runKernel(uu,i,l)}var Zm=S({sparseToDense_:e4});function t4(r,e){let t=k(e,"indices","gatherND","int32"),n={params:k(r,"x","gatherND"),indices:t};return E.runKernel(ii,n)}var Lw=S({gatherND_:t4});function KN(r,e){if(e==null)return r.shape.slice();if(Ur(r.shape,e))return e;if(r.shape.length===e.length){let t=[];for(let o=0;o<r.shape.length;o++)e[o]==null&&r.shape[o]!=null?t.push(r.shape[o]):t.push(e[o]);return t}return e}function r4(r,e,t,o){let n=k(r,"x","dropout");if(A(n.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${n.dtype} tensor instead.`),A(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return r instanceof Ve?n.clone():n;let s=KN(n,t),a=1-e,i=me(Ns(Q(As(s,0,1,"float32",o),a)),a);return O(n,i)}var zw=S({dropout_:r4});function Bw(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function Jm(r,e,t){let o=1-r%2,n=new Float32Array(r);for(let s=0;s<r;++s){let a=2*Math.PI*s/(r+o-1);n[s]=e-t*Math.cos(a)}return Vt(n,"float32")}async function o4(r,e,t=1){let o=k(r,"predictions","inTopK"),n=k(e,"targets","inTopK");A(o.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${o.rank}`),A(o.rank-1===n.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${o.rank} and targets rank ${n.rank}`),vt(o.shape.slice(0,o.shape.length-1),n.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=o.shape[o.shape.length-1];A(t>0&&t<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${t}`);let a=await o.data(),i=await n.data(),[l,u]=[a.length/s,s],c=cb("bool",l);for(let p=0;p<l;p++){let m=p*u,f=a.subarray(m,m+u),d=[];for(let h=0;h<f.length;h++)d.push({value:f[h],index:h});d.sort((h,g)=>g.value-h.value),c[p]=0;for(let h=0;h<t;h++)if(d[h].index===i[p]){c[p]=1;break}}return r!==o&&o.dispose(),e!==n&&n.dispose(),$r(c,n.shape,"bool")}var n4=o4;var Gn={};Je(Gn,{conv2d:()=>a4,depthwiseConv2d:()=>p4,matMul:()=>f4});function s4(r,e,t,o,n,s="NHWC",a){let i=r;r.rank===3&&(i=M(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=e;l.rank===3&&(l=M(e,[1,e.shape[0],e.shape[1],e.shape[2]])),A(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),A(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),A(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);let u=s==="NHWC"?i.shape[3]:i.shape[1],c=s==="NHWC"?l.shape[3]:l.shape[1];A(u===t[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${t[2]}.`),A(c===t[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${t[3]}).`),a!=null&&A(ot(n),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`);let p={x:i,dy:l},m={strides:o,pad:n,dataFormat:s,dimRoundingMode:a,filterShape:t};return E.runKernel(Wl,p,m)}var Jc=S({conv2DBackpropFilter_:s4});function Bu(r,e,t){if(t==null||t==="linear")return r;if(t==="relu")return O(r,Es(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Vu(r,e){let t=e,o=_t(r.shape,e.shape);return o.length>0&&(t=ge(t,o)),M(t,r.shape)}function Gu(r,e,t,o){if(e==="linear")return r;if(e==="relu")return Nr(r);if(e==="elu")return Is(r);if(e==="relu6")return Du(r);if(e==="prelu")return Ta(r,t);if(e==="leakyrelu")return Ca(r,o);throw new Error(`Unknown fused activation ${e}.`)}var Wu=(r,e)=>!(r>0)||e==="linear";function i4({x:r,filter:e,strides:t,pad:o,dataFormat:n="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",Wu(E.state.gradientDepth,l)===!1){let C=Kr(r,e,t,o,n,s,a);return i!=null&&(C=Q(C,i)),Gu(C,l,u,c)}let p=k(r,"x","conv2d"),m=k(e,"filter","conv2d"),f=p,d=!1;p.rank===3&&(d=!0,f=M(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),A(m.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),a!=null&&A(ot(o),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`),A(f.shape[3]===m.shape[2],()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${m.shape[2]}.`),A(wr(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),A(n==="NHWC",()=>`Error in conv2d: got dataFormat of ${n} but only NHWC is currently supported.`);let h=yu(f.shape,m.shape,t,s,o,a),g;i!=null&&(g=k(i,"bias","fused conv2d"),[g]=Ge(g,p),Be(h.outShape,g.shape));let y;u!=null&&(y=k(u,"prelu weights","fused conv2d"));let b=(C,D)=>{let[T,R,P,B]=D,G=Bu(C,P,l);A(Mo(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let U=jc(R.shape,G,T,t,o),j=Jc(R,G,T.shape,t,o),H=[U,j];if(B!=null){let K=Vu(B,G);H.push(K)}return H},w={x:f,filter:m,bias:g,preluActivationWeights:y},_={strides:t,pad:o,dataFormat:n,dilations:s,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return i==null?Xr((D,T,R)=>{let P=E.runKernel(_s,w,_);return R([T,D,P]),d&&(P=M(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:b}})(f,m):Xr((D,T,R,P)=>{let B=E.runKernel(_s,w,_);return P([T,D,B,R]),d&&(B=M(B,[B.shape[1],B.shape[2],B.shape[3]])),{value:B,gradFunc:b}})(f,m,g)}var a4=S({fusedConv2d_:i4});function l4(r,e,t,o,n,s=[1,1],a){let i=r;r.rank===3&&(i=M(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=e;l.rank===3&&(l=M(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u={x:i,dy:l},c={strides:o,pad:n,dimRoundingMode:a,dilations:s,filterShape:t};return E.runKernel(ql,u,c)}var sg=S({depthwiseConv2dNativeBackpropFilter_:l4});function u4(r,e,t,o,n,s=[1,1],a){let i=e,l=!1;e.rank===3&&(l=!0,i=M(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u={dy:i,filter:t},c={strides:o,pad:n,dimRoundingMode:a,dilations:s,inputShape:r},p=E.runKernel(Kl,u,c);return l?M(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var ig=S({depthwiseConv2dNativeBackpropInput_:u4});function c4({x:r,filter:e,strides:t,pad:o,dataFormat:n="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(Wu(E.state.gradientDepth,l)===!1){let C=Cs(r,e,t,o,n,s,a);return i!=null&&(C=Q(C,i)),Gu(C,l,u,c)}let p=k(r,"x","depthwiseConv2d"),m=k(e,"filter","depthwiseConv2d"),f=p,d=!1;p.rank===3&&(d=!0,f=M(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),A(m.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),A(f.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),s==null&&(s=[1,1]),A(wr(t,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),a!=null&&A(ot(o),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${a} but got pad ${o}.`);let h=yu(f.shape,m.shape,t,s,o,a,!0),g;i!=null&&(g=k(i,"bias","fused conv2d"),[g]=Ge(g,p),Be(h.outShape,g.shape));let y;u!=null&&(y=k(u,"prelu weights","fused depthwiseConv2d"));let b=(C,D)=>{A(Mo(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[T,R,P,B]=D,G=Bu(C,P,l),U=ig(R.shape,G,T,t,o,s,a),j=sg(R,G,T.shape,t,o,s,a);if(B!=null){let H=Vu(g,G);return[U,j,H]}return[U,j]},w={x:f,filter:m,bias:g,preluActivationWeights:y},_={strides:t,pad:o,dataFormat:n,dilations:s,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return i==null?Xr((D,T,R)=>{let P=E.runKernel(ks,w,_);return R([T,D,P]),d&&(P=M(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:b}})(f,m):Xr((D,T,R,P)=>{let B=E.runKernel(ks,w,_);return P([T,D,B,R]),d&&(B=M(B,[B.shape[1],B.shape[2],B.shape[3]])),{value:B,gradFunc:b}})(f,m,g)}var p4=S({fusedDepthwiseConv2d_:c4});function m4({a:r,b:e,transposeA:t=!1,transposeB:o=!1,bias:n,activation:s="linear",preluActivationWeights:a,leakyreluAlpha:i}){if(Wu(E.state.gradientDepth,s)===!1){let B=We(r,e,t,o);return n!=null&&(B=Q(B,n)),Gu(B,s,a,i)}let l=k(r,"a","fused matMul"),u=k(e,"b","fused matMul");[l,u]=Ge(l,u);let c=t?l.shape[l.rank-2]:l.shape[l.rank-1],p=o?u.shape[u.rank-1]:u.shape[u.rank-2],m=t?l.shape[l.rank-1]:l.shape[l.rank-2],f=o?u.shape[u.rank-2]:u.shape[u.rank-1],d=l.shape.slice(0,-2),h=u.shape.slice(0,-2),g=ct(d),y=ct(h);A(l.rank>=2&&u.rank>=2&&l.rank===u.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`),A(Ur(d,h),()=>`Error in fused matMul: outer dimensions (${d}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`),A(c===p,()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${t} and transposeB=${o} must match.`);let b=l.shape.slice(0,-2).concat([m,f]),w=t?M(l,[g,c,m]):M(l,[g,m,c]),_=o?M(u,[y,f,p]):M(u,[y,p,f]),C;n!=null&&(C=k(n,"bias","fused matMul"),[C]=Ge(C,l),Be(b,C.shape));let D;a!=null&&(D=k(a,"prelu weights","fused matMul"));let T=(B,G)=>{let[U,j,H,K]=G,X=Bu(M(B,H.shape),H,s),oe,Y;if(!t&&!o?(oe=We(X,j,!1,!0),Y=We(U,X,!0,!1)):!t&&o?(oe=We(X,j,!1,!1),Y=We(X,U,!0,!1)):t&&!o?(oe=We(j,X,!1,!0),Y=We(U,X,!1,!1)):(oe=We(j,X,!0,!0),Y=We(X,U,!0,!0)),n!=null){let re=Vu(K,X);return[oe,Y,re]}else return[oe,Y]},R={a:w,b:_,bias:C,preluActivationWeights:D},P={transposeA:t,transposeB:o,activation:s,leakyreluAlpha:i};return n==null?Xr((G,U,j)=>{let H=E.runKernel(ws,R,P);return j([G,U,H]),{value:M(H,b),gradFunc:T}})(w,_):Xr((G,U,j,H)=>{let K=E.runKernel(ws,R,P);return H([G,U,K,j]),{value:M(K,b),gradFunc:T}})(w,_,C)}var f4=S({fusedMatMul_:m4});function d4(r){return Jm(r,.54,.46)}var XN=S({hammingWindow_:d4});function h4(r){return Jm(r,.5,.5)}var ag=S({hannWindow_:h4});function g4(r,e,t,o=!1,n=0){let s=0,a=[];for(;s+e<=r.size;)a.push(Re(r,s,e)),s+=t;if(o)for(;s<r.size;){let i=s+e-r.size,l=Ye([Re(r,s,e-i),va([i],n)]);a.push(l),s+=t}return a.length===0?Mi([],[0,e]):M(Ye(a),[a.length,e])}var lg=S({frame_:g4});function x4(r,e,t,o,n=ag){o==null&&(o=Bw(e));let s=lg(r,e,t),a=O(s,n(e)),i=[];for(let l=0;l<s.shape[0];l++)i.push(Da(Re(a,[l,0],[1,e]),o));return Ye(i)}var YN=S({stft_:x4});function y4(r,e,t,o,n="bilinear",s=0){let a=k(r,"image","cropAndResize"),i=k(e,"boxes","cropAndResize","float32"),l=k(t,"boxInd","cropAndResize","int32"),u=i.shape[0];A(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),A(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`),A(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`),A(o.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${o.length}.`),A(o[0]>=1&&o[1]>=1,()=>`cropSize must be atleast [1,1], but was ${o}`),A(n==="bilinear"||n==="nearest",()=>`method must be bilinear or nearest, but was ${n}`);let c={image:a,boxes:i,boxInd:l},p={method:n,extrapolationValue:s,cropSize:o};return E.runKernel(Qs,c,p)}var ZN=S({cropAndResize_:y4});function b4(r){let e=k(r,"image","flipLeftRight","float32");A(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);let t={image:e};return E.runKernel(si,t,{})}var JN=S({flipLeftRight_:b4});function w4(r,e,t=0,o=.5){let n=k(r,"image","rotateWithOffset","float32");A(n.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${n.rank}.`);let s={image:n},a={radians:e,fillValue:t,center:o};return E.runKernel(Ei,s,a)}var QN=S({rotateWithOffset_:w4});function Wn(r,e,t,o,n,s){o==null&&(o=.5),n==null&&(n=Number.NEGATIVE_INFINITY),s==null&&(s=0);let a=r.shape[0];return t=Math.min(t,a),A(0<=o&&o<=1,()=>`iouThreshold must be in [0, 1], but was '${o}'`),A(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),A(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),A(e.rank===1,()=>"scores must be a 1D tensor"),A(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),A(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:t,iouThreshold:o,scoreThreshold:n,softNmsSigma:s}}function _4(r,e,t,o=.5,n=Number.NEGATIVE_INFINITY){let s=k(r,"boxes","nonMaxSuppression"),a=k(e,"scores","nonMaxSuppression"),i=Wn(s,a,t,o,n);t=i.maxOutputSize,o=i.iouThreshold,n=i.scoreThreshold;let l={maxOutputSize:t,iouThreshold:o,scoreThreshold:n};return E.runKernel(xi,{boxes:s,scores:a},l)}var e0=S({nonMaxSuppression_:_4});function t0(r,e,t){let o=k4(r,e,t),n=o<0?-(o+1):o;r.splice(n,0,e)}function k4(r,e,t){return C4(r,e,t||v4)}function v4(r,e){return r>e?1:r<e?-1:0}function C4(r,e,t){let o=0,n=r.length,s=0,a=!1;for(;o<n;){s=o+(n-o>>>1);let i=t(e,r[s]);i>0?o=s+1:(n=s,a=!i)}return a?o:-o-1}function Gw(r,e,t,o,n){return Vw(r,e,t,o,n,0)}function Ww(r,e,t,o,n,s){return Vw(r,e,t,o,n,0,!1,s,!0)}function Uw(r,e,t,o,n,s){return Vw(r,e,t,o,n,s,!0)}function Vw(r,e,t,o,n,s,a=!1,i=!1,l=!1){let u=[];for(let g=0;g<e.length;g++)e[g]>n&&u.push({score:e[g],boxIndex:g,suppressBeginIndex:0});u.sort(r0);let c=s>0?-.5/s:0,p=[],m=[];for(;p.length<t&&u.length>0;){let g=u.pop(),{score:y,boxIndex:b,suppressBeginIndex:w}=g;if(y<n)break;let _=!1;for(let C=p.length-1;C>=w;--C){let D=I4(r,b,p[C]);if(D>=o){_=!0;break}if(g.score=g.score*N4(o,c,D),g.score<=n)break}g.suppressBeginIndex=p.length,_||(g.score===y?(p.push(b),m.push(g.score)):g.score>n&&t0(u,g,r0))}let f=p.length,d=t-f;i&&d>0&&(p.push(...new Array(d).fill(0)),m.push(...new Array(d).fill(0)));let h={selectedIndices:p};return a&&(h.selectedScores=m),l&&(h.validOutputs=f),h}function I4(r,e,t){let o=r.subarray(e*4,e*4+4),n=r.subarray(t*4,t*4+4),s=Math.min(o[0],o[2]),a=Math.min(o[1],o[3]),i=Math.max(o[0],o[2]),l=Math.max(o[1],o[3]),u=Math.min(n[0],n[2]),c=Math.min(n[1],n[3]),p=Math.max(n[0],n[2]),m=Math.max(n[1],n[3]),f=(i-s)*(l-a),d=(p-u)*(m-c);if(f<=0||d<=0)return 0;let h=Math.max(s,u),g=Math.max(a,c),y=Math.min(i,p),b=Math.min(l,m),w=Math.max(y-h,0)*Math.max(b-g,0);return w/(f+d-w)}function N4(r,e,t){let o=Math.exp(e*t*t);return t<=r?o:0}function r0(r,e){return r.score-e.score||r.score===e.score&&e.boxIndex-r.boxIndex}async function S4(r,e,t,o=.5,n=Number.NEGATIVE_INFINITY){let s=k(r,"boxes","nonMaxSuppressionAsync"),a=k(e,"scores","nonMaxSuppressionAsync"),i=Wn(s,a,t,o,n);t=i.maxOutputSize,o=i.iouThreshold,n=i.scoreThreshold;let l=await Promise.all([s.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:p}=Gw(u,c,t,o,n);return s!==r&&s.dispose(),a!==e&&a.dispose(),Vt(p,"int32")}var o0=S4;function T4(r,e,t,o=.5,n=Number.NEGATIVE_INFINITY,s=0){let a=k(r,"boxes","nonMaxSuppression"),i=k(e,"scores","nonMaxSuppression"),l=Wn(a,i,t,o,n,s);t=l.maxOutputSize,o=l.iouThreshold,n=l.scoreThreshold,s=l.softNmsSigma;let u={boxes:a,scores:i},c={maxOutputSize:t,iouThreshold:o,scoreThreshold:n,softNmsSigma:s},p=E.runKernel(bi,u,c);return{selectedIndices:p[0],selectedScores:p[1]}}var n0=S({nonMaxSuppressionWithScore_:T4});async function A4(r,e,t,o=.5,n=Number.NEGATIVE_INFINITY,s=0){let a=k(r,"boxes","nonMaxSuppressionAsync"),i=k(e,"scores","nonMaxSuppressionAsync"),l=Wn(a,i,t,o,n,s);t=l.maxOutputSize,o=l.iouThreshold,n=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([a.data(),i.data()]),c=u[0],p=u[1],{selectedIndices:m,selectedScores:f}=Uw(c,p,t,o,n,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Vt(m,"int32"),selectedScores:Vt(f)}}var s0=A4;function E4(r,e,t,o=.5,n=Number.NEGATIVE_INFINITY,s=!1){let a=k(r,"boxes","nonMaxSuppression"),i=k(e,"scores","nonMaxSuppression"),l=Wn(a,i,t,o,n,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,m={boxes:a,scores:i},f={maxOutputSize:u,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:s},d=E.runKernel(yi,m,f);return{selectedIndices:d[0],validOutputs:d[1]}}var i0=S({nonMaxSuppressionPadded_:E4});async function D4(r,e,t,o=.5,n=Number.NEGATIVE_INFINITY,s=!1){let a=k(r,"boxes","nonMaxSuppressionAsync"),i=k(e,"scores","nonMaxSuppressionAsync"),l=Wn(a,i,t,o,n,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,[m,f]=await Promise.all([a.data(),i.data()]),{selectedIndices:d,validOutputs:h}=Ww(m,f,u,c,p,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Vt(d,"int32"),validOutputs:ue(h,"int32")}}var a0=D4;function $4(r,e,t=!1,o=!1){let n=k(r,"images","resizeBilinear");A(n.rank===3||n.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${n.rank}.`),A(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),A(o===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=n,a=!1;n.rank===3&&(a=!0,s=M(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=e,i={images:s},l={alignCorners:t,halfPixelCenters:o,size:e},u=E.runKernel(vn,i,l);return a?M(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var ug=S({resizeBilinear_:$4});function R4(r,e,t=!1,o=!1){let n=k(r,"images","resizeNearestNeighbor");A(n.rank===3||n.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${n.rank}.`),A(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),A(n.dtype==="float32"||n.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),A(o===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=n,a=!1;n.rank===3&&(a=!0,s=M(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=e,i={images:s},l={alignCorners:t,halfPixelCenters:o,size:e},u=E.runKernel(pa,i,l);return a?M(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var cg=S({resizeNearestNeighbor_:R4});function F4(r,e,t){A(e%1==0,()=>`bandPart(): numLower must be an integer, got ${e}.`),A(t%1==0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);let o=k(r,"a","bandPart");A(o.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${o.rank}.`);let n=o.shape,[s,a]=o.shape.slice(-2);if(!(e<=s))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`);if(!(t<=a))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`);e<0&&(e=s),t<0&&(t=a);let i=M(Xc(0,s,1,"int32"),[-1,1]),l=Xc(0,a,1,"int32"),u=ce(i,l),c=dr(zo(u,ue(+e,"int32")),io(u,ue(-t,"int32"))),p=ht([s,a],o.dtype);return M(Bt(cr(M(o,[-1,s,a])).map(m=>Dt(c,m,p))),n)}var l0=S({bandPart_:F4});function O4(r){let e;if(Array.isArray(r)){e=!1,A(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let n=r[0].shape[0];for(let s=1;s<r.length;++s)A(r[s].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${n})`)}else e=!0,r=ur(r,r.shape[0],0).map(n=>Co(n,[0]));A(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let t=[],o=r;for(let n=0;n<r.length;++n)t.push(E.tidy(()=>{let s=o[n];if(n>0)for(let a=0;a<n;++a){let i=O(ge(O(t[a],s)),t[a]);s=ce(s,i)}return me(s,zu(s,"euclidean"))}));return e?Bt(t,0):t}var u0=S({gramSchmidt_:O4});function P4(r,e=!1){if(A(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return c0(r,e);{let t=r.shape.slice(0,r.shape.length-2).reduce((l,u)=>l*u),o=cr(M(r,[t,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),n=[],s=[];o.forEach(l=>{let[u,c]=c0(l,e);n.push(u),s.push(c)});let a=M(Bt(n,0),r.shape),i=M(Bt(s,0),r.shape);return[a,i]}}function c0(r,e=!1){return E.tidy(()=>{A(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let t=r.shape[0],o=r.shape[1],n=Hc(t),s=Oo(r),a=Mi([[1]],[1,1]),i=Oo(a),l=t>=o?o:t;for(let u=0;u<l;++u){let c=s,p=i,m=n;[i,s,n]=E.tidy(()=>{let f=Re(s,[u,u],[t-u,1]),d=zu(f),h=Re(s,[u,u],[1,1]),g=Dt(Qt(h,0),Mi([[-1]]),Mi([[1]])),y=ce(h,O(g,d)),b=me(f,y);b.shape[0]===1?i=Oo(a):i=Ye([a,Re(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let w=He(me(We(g,y),d)),_=Re(s,[u,0],[t-u,o]),C=O(w,i),D=je(i);if(u===0)s=ce(_,We(C,We(D,_)));else{let P=ce(_,We(C,We(D,_)));s=Ye([Re(s,[0,0],[u,o]),P],0)}let T=je(C),R=Re(n,[0,u],[t,n.shape[1]-u]);if(u===0)n=ce(R,We(We(R,i),T));else{let P=ce(R,We(We(R,i),T));n=Ye([Re(n,[0,0],[t,u]),P],1)}return[i,s,n]}),Te([c,p,m])}return!e&&t>o&&(n=Re(n,[0,0],[t,o]),s=Re(s,[0,0],[o,o])),[n,s]})}var p0=S({qr_:P4});var Gt;(function(r){r[r.NONE=0]="NONE",r[r.MEAN=1]="MEAN",r[r.SUM=2]="SUM",r[r.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Gt||(Gt={}));function M4(r,e,t=Gt.SUM_BY_NONZERO_WEIGHTS){let o=k(r,"losses","computeWeightedLoss"),n=null;e!=null&&(n=k(e,"weights","computeWeightedLoss"));let s=n==null?o:O(o,n);if(t===Gt.NONE)return s;if(t===Gt.SUM)return ge(s);if(t===Gt.MEAN){if(n==null)return dt(s);{let a=o.size/n.size,i=me(ge(s),ge(n));return a>1?me(i,ue(a)):i}}if(t===Gt.SUM_BY_NONZERO_WEIGHTS){if(n==null)return me(ge(s),ue(o.size));{let a=O(n,Ir(o.shape)),i=ne(ge(Vn(a,ue(0))),"float32");return me(ge(s),i)}}throw Error(`Unknown reduction: ${t}`)}var Sr=S({computeWeightedLoss_:M4});function L4(r,e,t,o=Gt.SUM_BY_NONZERO_WEIGHTS){let n=k(r,"labels","absoluteDifference"),s=k(e,"predictions","absoluteDifference"),a=null;t!=null&&(a=k(t,"weights","absoluteDifference")),vt(n.shape,s.shape,"Error in absoluteDifference: ");let i=It(ce(n,s));return Sr(i,a,o)}var m0=S({absoluteDifference_:L4});function z4(r,e,t,o,n=Gt.SUM_BY_NONZERO_WEIGHTS){let s=k(r,"labels","cosineDistance"),a=k(e,"predictions","cosineDistance"),i=null;o!=null&&(i=k(o,"weights","cosineDistance")),vt(s.shape,a.shape,"Error in cosineDistance: ");let l=ue(1),u=ce(l,ge(O(s,a),t,!0));return Sr(u,i,n)}var f0=S({cosineDistance_:z4});function B4(r,e,t,o=Gt.SUM_BY_NONZERO_WEIGHTS){let n=k(r,"labels","hingeLoss"),s=k(e,"predictions","hingeLoss"),a=null;t!=null&&(a=k(t,"weights","hingeLoss")),vt(n.shape,s.shape,"Error in hingeLoss: ");let i=ue(1);n=ce(O(ue(2),n),i);let l=Nr(ce(i,O(n,s)));return Sr(l,a,o)}var d0=S({hingeLoss_:B4});function V4(r,e,t,o=1,n=Gt.SUM_BY_NONZERO_WEIGHTS){let s=k(r,"labels","huberLoss"),a=k(e,"predictions","huberLoss"),i=null;t!=null&&(i=k(t,"weights","huberLoss")),vt(s.shape,a.shape,"Error in huberLoss: ");let l=ue(o),u=It(ce(a,s)),c=Ts(u,l),p=ce(u,c),m=Q(O(ue(.5),Oe(c)),O(l,p));return Sr(m,i,n)}var h0=S({huberLoss_:V4});function G4(r,e,t,o=1e-7,n=Gt.SUM_BY_NONZERO_WEIGHTS){let s=k(r,"labels","logLoss"),a=k(e,"predictions","logLoss"),i=null;t!=null&&(i=k(t,"weights","logLoss")),vt(s.shape,a.shape,"Error in logLoss: ");let l=ue(1),u=ue(o),c=He(O(s,ar(Q(a,u)))),p=O(ce(l,s),ar(Q(ce(l,a),u))),m=ce(c,p);return Sr(m,i,n)}var g0=S({logLoss_:G4});function W4(r,e,t,o=Gt.SUM_BY_NONZERO_WEIGHTS){let n=k(r,"labels","meanSquaredError"),s=k(e,"predictions","meanSquaredError"),a=null;t!=null&&(a=k(t,"weights","meanSquaredError")),vt(n.shape,s.shape,"Error in meanSquaredError: ");let i=Mu(n,s);return Sr(i,a,o)}var x0=S({meanSquaredError_:W4});function U4(r,e){let t=k(r,"labels","sigmoidCrossEntropyWithLogits"),o=k(e,"logits","sigmoidCrossEntropyWithLogits");vt(t.shape,o.shape,"Error in sigmoidCrossEntropyWithLogits: ");let n=Nr(o),s=O(o,t),a=Nu(Yt(He(It(o))));return Q(ce(n,s),a)}function j4(r,e,t,o=0,n=Gt.SUM_BY_NONZERO_WEIGHTS){let s=k(r,"multiClassLabels","sigmoidCrossEntropy"),a=k(e,"logits","sigmoidCrossEntropy"),i=null;if(t!=null&&(i=k(t,"weights","sigmoidCrossEntropy")),vt(s.shape,a.shape,"Error in sigmoidCrossEntropy: "),o>0){let u=ue(o),c=ue(1),p=ue(.5);s=Q(O(s,ce(c,u)),O(p,u))}let l=U4(s,a);return Sr(l,i,n)}var y0=S({sigmoidCrossEntropy_:j4});function H4(r,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return Xr((n,s,a)=>{let l=Om(s,[t],!0),u=ce(ne(s,"float32"),l);a([n,u]);let c=He(O(u,n));return{value:ge(c,[t]),gradFunc:(f,d)=>{let[h,g]=d,y=Bn(f.shape,[t]);return[O(M(f,y),ce(ne(h,"float32"),Yt(g))),O(M(f,y),ce(Yt(g),ne(h,"float32")))]}}})(r,e)}function q4(r,e,t,o=0,n=Gt.SUM_BY_NONZERO_WEIGHTS){let s=k(r,"onehotLabels","softmaxCrossEntropy"),a=k(e,"logits","softmaxCrossEntropy"),i=null;if(t!=null&&(i=k(t,"weights","softmaxCrossEntropy")),vt(s.shape,a.shape,"Error in softmaxCrossEntropy: "),o>0){let u=ue(o),c=ue(1),p=ue(s.shape[1]);s=Q(O(s,ce(c,u)),me(u,p))}let l=H4(s,a);return Sr(l,i,n)}var b0=S({softmaxCrossEntropy_:q4});var K4={fft:Ea,ifft:Pi,rfft:Da,irfft:Pu},X4={hammingWindow:XN,hannWindow:ag,frame:lg,stft:YN},Ds={flipLeftRight:JN,resizeNearestNeighbor:cg,resizeBilinear:ug,rotateWithOffset:QN,cropAndResize:ZN,nonMaxSuppression:e0,nonMaxSuppressionAsync:o0,nonMaxSuppressionWithScore:n0,nonMaxSuppressionWithScoreAsync:s0,nonMaxSuppressionPadded:i0,nonMaxSuppressionPaddedAsync:a0},jw={bandPart:l0,gramSchmidt:u0,qr:p0},Y4={absoluteDifference:m0,computeWeightedLoss:Sr,cosineDistance:f0,hingeLoss:d0,huberLoss:h0,logLoss:g0,meanSquaredError:x0,sigmoidCrossEntropy:y0,softmaxCrossEntropy:b0};var Or=class extends Xh{minimize(e,t=!1,o){let{value:n,grads:s}=this.computeGradients(e,o);if(o!=null){let a=o.map(i=>({name:i.name,tensor:s[i.name]}));this.applyGradients(a)}else this.applyGradients(s);return Te(s),t?n:(n.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return eg(e,t)}dispose(){this.iterations_!=null&&Te(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ue(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Or,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var Qc=class extends Or{constructor(e,t,o=null){super();this.learningRate=e,this.rho=t,this.epsilon=o,this.accumulatedGrads=[],this.accumulatedUpdates=[],o==null&&(this.epsilon=E.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,n)=>{let s=E.registeredVariables[o],a=!1;this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${o}/accum_grad`,variable:V(()=>Ce(s).variable(a))}),this.accumulatedUpdates[n]==null&&(this.accumulatedUpdates[n]={originalName:`${o}/accum_var`,variable:V(()=>Ce(s).variable(a))});let i=Array.isArray(e)?e[n].tensor:e[o];if(i==null)return;let l=this.accumulatedGrads[n].variable,u=this.accumulatedUpdates[n].variable;V(()=>{let c=Q(O(l,this.rho),O(Oe(i),1-this.rho)),p=O(me(gt(Q(u,this.epsilon)),gt(Q(l,this.epsilon))),i),m=Q(O(u,this.rho),O(Oe(p),1-this.rho));l.assign(c),u.assign(m);let f=Q(O(p,-this.learningRate),s);s.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Te(this.accumulatedGrads.map(e=>e.variable)),Te(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,o=!1;this.accumulatedGrads=e.slice(0,t).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedUpdates=e.slice(t,t*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Qc.className="Adadelta";so(Qc);var ep=class extends Or{constructor(e,t=.1){super();this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,n)=>{let s=E.registeredVariables[o];if(this.accumulatedGrads[n]==null){let l=!1;this.accumulatedGrads[n]={originalName:`${o}/accumulator`,variable:V(()=>va(s.shape,this.initialAccumulatorValue).variable(l))}}let a=Array.isArray(e)?e[n].tensor:e[o];if(a==null)return;let i=this.accumulatedGrads[n].variable;V(()=>{let l=Q(i,Oe(a));i.assign(l);let u=Q(O(me(a,gt(Q(l,E.backend.epsilon()))),-this.learningRate),s);s.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Te(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(o=>({originalName:o.name,variable:o.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};ep.className="Adagrad";so(ep);var tp=class extends Or{constructor(e,t,o,n=null){super();this.learningRate=e,this.beta1=t,this.beta2=o,this.epsilon=n,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],V(()=>{this.accBeta1=ue(t).variable(),this.accBeta2=ue(o).variable()}),n==null&&(this.epsilon=E.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);V(()=>{let o=ce(1,this.accBeta1),n=ce(1,this.accBeta2);t.forEach((s,a)=>{let i=E.registeredVariables[s],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:V(()=>Ce(i).variable(l))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${s}/v`,variable:V(()=>Ce(i).variable(l))});let u=Array.isArray(e)?e[a].tensor:e[s];if(u==null)return;let c=this.accumulatedFirstMoment[a].variable,p=this.accumulatedSecondMoment[a].variable,m=Q(O(c,this.beta1),O(u,1-this.beta1)),f=Q(O(p,this.beta2),O(Oe(u),1-this.beta2)),d=me(m,o),h=me(f,n);c.assign(m),p.assign(f);let g=Q(O(me(d,Q(gt(h),this.epsilon)),-this.learningRate),i);i.assign(g)}),this.accBeta1.assign(O(this.accBeta1,this.beta1)),this.accBeta2.assign(O(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Te(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Te(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),V(()=>{this.accBeta1.assign(Fr(this.beta1,this.iterations_+1)),this.accBeta2.assign(Fr(this.beta2,this.iterations_+1))});let t=e.length/2,o=!1;this.accumulatedFirstMoment=e.slice(0,t).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};tp.className="Adam";so(tp);var rp=class extends Or{constructor(e,t,o,n=null,s=0){super();this.learningRate=e,this.beta1=t,this.beta2=o,this.epsilon=n,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],V(()=>{this.iteration=ue(0).variable(),this.accBeta1=ue(t).variable()}),n==null&&(this.epsilon=E.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);V(()=>{let o=ce(1,this.accBeta1),n=me(-this.learningRate,Q(O(this.iteration,this.decay),1));t.forEach((s,a)=>{let i=E.registeredVariables[s],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:Ce(i).variable(l)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${s}/v`,variable:Ce(i).variable(l)});let u=Array.isArray(e)?e[a].tensor:e[s];if(u==null)return;let c=this.accumulatedFirstMoment[a].variable,p=this.accumulatedWeightedInfNorm[a].variable,m=Q(O(c,this.beta1),O(u,1-this.beta1)),f=O(p,this.beta2),d=It(u),h=Yr(f,d);c.assign(m),p.assign(h);let g=Q(O(me(n,o),me(m,Q(h,this.epsilon))),i);i.assign(g)}),this.iteration.assign(Q(this.iteration,1)),this.accBeta1.assign(O(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Te(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Te(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};rp.className="Adamax";so(rp);var al=class extends Or{constructor(e){super();this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,n)=>{let s=Array.isArray(e)?e[n].tensor:e[o];if(s==null)return;let a=E.registeredVariables[o];V(()=>{let i=Q(O(this.c,s),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Et(ue(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};al.className="SGD";so(al);var op=class extends al{constructor(e,t,o=!1){super(e);this.learningRate=e,this.momentum=t,this.useNesterov=o,this.accumulations=[],this.m=ue(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,n)=>{let s=E.registeredVariables[o];if(this.accumulations[n]==null){let l=!1;this.accumulations[n]={originalName:`${o}/momentum`,variable:V(()=>Ce(s).variable(l))}}let a=this.accumulations[n].variable,i=Array.isArray(e)?e[n].tensor:e[o];i!=null&&V(()=>{let l,u=Q(O(this.m,a),i);this.useNesterov?l=Q(O(this.c,Q(i,O(u,this.m))),s):l=Q(O(this.c,u),s),a.assign(u),s.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Te(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(o=>({originalName:o.name,variable:o.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};op.className="Momentum";so(op);var np=class extends Or{constructor(e,t=.9,o=0,n=null,s=!1){super();if(this.learningRate=e,this.decay=t,this.momentum=o,this.epsilon=n,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,n==null&&(this.epsilon=E.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,n)=>{let s=E.registeredVariables[o],a=!1;this.accumulatedMeanSquares[n]==null&&(this.accumulatedMeanSquares[n]={originalName:`${o}/rms`,variable:V(()=>Ce(s).variable(a))}),this.accumulatedMoments[n]==null&&(this.accumulatedMoments[n]={originalName:`${o}/momentum`,variable:V(()=>Ce(s).variable(a))}),this.accumulatedMeanGrads[n]==null&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${o}/mg`,variable:V(()=>Ce(s).variable(a))});let i=Array.isArray(e)?e[n].tensor:e[o];if(i==null)return;let l=this.accumulatedMeanSquares[n].variable,u=this.accumulatedMoments[n].variable;V(()=>{let c=Q(O(l,this.decay),O(Oe(i),1-this.decay));if(this.centered){let p=this.accumulatedMeanGrads[n].variable,m=Q(O(p,this.decay),O(i,1-this.decay)),f=me(O(i,this.learningRate),gt(ce(c,Q(Oe(m),this.epsilon)))),d=Q(O(u,this.momentum),f);l.assign(c),p.assign(m),u.assign(d);let h=ce(s,d);s.assign(h)}else{let p=Q(O(l,this.decay),O(Oe(i),1-this.decay)),m=Q(O(u,this.momentum),me(O(i,this.learningRate),gt(Q(p,this.epsilon))));l.assign(p),u.assign(m);let f=ce(s,m);s.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Te(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Te(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Te(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,o=!1;this.accumulatedMeanSquares=e.slice(0,t).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedMoments=e.slice(t,t*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};np.className="RMSProp";so(np);var $a=class{static sgd(e){return new al(e)}static momentum(e,t,o=!1){return new op(e,t,o)}static rmsprop(e,t=.9,o=0,n=null,s=!1){return new np(e,t,o,n,s)}static adam(e=.001,t=.9,o=.999,n=null){return new tp(e,t,o,n)}static adadelta(e=.001,t=.95,o=null){return new Qc(e,t,o)}static adamax(e=.002,t=.9,o=.999,n=null,s=0){return new rp(e,t,o,n,s)}static adagrad(e,t=.1){return new ep(e,t)}};var ll={sgd:$a.sgd,momentum:$a.momentum,adadelta:$a.adadelta,adagrad:$a.adagrad,rmsprop:$a.rmsprop,adamax:$a.adamax,adam:$a.adam};var Z4=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:r=>r())();function Qm(){return new Promise(r=>Z4(()=>r()))}var N={};Je(N,{ERF_A1:()=>lj,ERF_A2:()=>uj,ERF_A3:()=>cj,ERF_A4:()=>pj,ERF_A5:()=>mj,ERF_P:()=>aj,PARALLELIZE_THRESHOLD:()=>pg,SELU_SCALE:()=>qw,SELU_SCALEALPHA:()=>Hw,applyActivation:()=>Gu,assertAndGetBroadcastShape:()=>Be,assertAxesAreInnerMostDims:()=>rW,assertParamsConsistent:()=>J4,assignToTypedArray:()=>wj,axesAreInnerMostDims:()=>bw,calculateShapes:()=>mN,combineLocations:()=>EN,complexWithEvenIndex:()=>xj,complexWithOddIndex:()=>yj,computeConv2DInfo:()=>yu,computeConv3DInfo:()=>TN,computeDefaultPad:()=>ow,computeDilation2DInfo:()=>SV,computeOptimalWindowSize:()=>ej,computeOutAndReduceShapes:()=>ww,computeOutShape:()=>Q4,computePool2DInfo:()=>tw,computePool3DInfo:()=>TV,convertConv2DDataFormat:()=>SN,eitherStridesOrDilationsAreOne:()=>wr,expandShapeToKeepDim:()=>Bn,exponent:()=>kj,exponents:()=>_j,fromStringArrayToUint8:()=>Tj,fromUint8ToStringArray:()=>Sj,getAxesPermutation:()=>_w,getBroadcastDims:()=>yG,getComplexWithIndex:()=>bj,getFusedBiasGradient:()=>Vu,getFusedDyActivation:()=>Bu,getImageCenter:()=>tj,getInnerMostAxes:()=>oW,getPermuted:()=>oj,getReductionAxes:()=>_t,getReshaped:()=>rj,getReshapedPermuted:()=>nj,getSliceBeginCoords:()=>sj,getSliceSize:()=>ij,getUndoAxesPermutation:()=>Fm,log:()=>dj,mergeRealAndImagArrays:()=>hj,prepareAndValidate:()=>pN,prepareSplitSize:()=>vj,segment_util:()=>w0,shouldFuse:()=>Wu,slice_util:()=>nr,splitRealAndImagArrays:()=>gj,tupleValuesAreOne:()=>Mo,upcastType:()=>fr,validateInput:()=>qh,validateUpdateShape:()=>qb,warn:()=>fj});function J4(r,e){let t=r[0].length;r.forEach((n,s)=>{A(n.length===t,()=>`Error in concat${t}D: rank of tensors[${s}] must be the same as the rank of the rest (${t})`)}),A(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);let o=r[0];r.forEach((n,s)=>{for(let a=0;a<t;a++)A(a===e||n[a]===o[a],()=>`Error in concat${t}D: Shape of tensors[${s}] (${n}) does not match the shape of the rest (${o}) along the non-concatenated axis ${s}.`)})}function Q4(r,e){let t=r[0].slice();for(let o=1;o<r.length;o++)t[e]+=r[o][e];return t}var pg=30;function ej(r){return r<=pg?r:Tc(r,Math.floor(Math.sqrt(r)))}function tj(r,e,t){let o=t*(typeof r=="number"?r:r[0]),n=e*(typeof r=="number"?r:r[1]);return[o,n]}function rj(r,e,t,o=!0){let n=[];if(o)n=n.concat(e.slice(0)),n.push(r[0]/t),n=n.concat(r.slice(1));else{n=n.concat(r[0]);let s=e.length;for(let a=0;a<s;++a)n=n.concat([r[a+1]/e[a],e[a]]);n=n.concat(r.slice(s+1))}return n}function oj(r,e,t=!0){let o=[];if(t){o.push(e);for(let n=e+1;n<r;++n)n<=2*e?(o.push(n),o.push(n-(e+1))):o.push(n)}else{let n=[],s=[];for(let a=1;a<r;++a)a>=e*2+1||a%2==1?s.push(a):n.push(a);o.push(...n),o.push(0),o.push(...s)}return o}function nj(r,e,t,o=!0){let n=[];o?n.push(r[0]/t):n.push(r[0]*t);for(let s=1;s<r.length;++s)s<=e.length?o?n.push(e[s-1]*r[s]):n.push(r[s]/e[s-1]):n.push(r[s]);return n}function sj(r,e){let t=[0];for(let o=0;o<e;++o)t.push(r[o][0]);return t}function ij(r,e,t){let o=r.slice(0,1);for(let n=0;n<t;++n)o.push(r[n+1]-e[n][0]-e[n][1]);return o}var Hw=1.7580993408473768,qw=1.0507009873554805;var aj=.3275911,lj=.254829592,uj=-.284496736,cj=1.421413741,pj=-1.453152027,mj=1.061405429;function fj(...r){W().getBool("IS_TEST")||console.warn(...r)}function dj(...r){W().getBool("IS_TEST")||console.log(...r)}function hj(r,e){if(r.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${e.length}.`);let t=new Float32Array(r.length*2);for(let o=0;o<t.length;o+=2)t[o]=r[o/2],t[o+1]=e[o/2];return t}function gj(r){let e=new Float32Array(r.length/2),t=new Float32Array(r.length/2);for(let o=0;o<r.length;o+=2)e[o/2]=r[o],t[o/2]=r[o+1];return{real:e,imag:t}}function xj(r){let e=Math.ceil(r.length/4),t=new Float32Array(e),o=new Float32Array(e);for(let n=0;n<r.length;n+=4)t[Math.floor(n/4)]=r[n],o[Math.floor(n/4)]=r[n+1];return{real:t,imag:o}}function yj(r){let e=Math.floor(r.length/4),t=new Float32Array(e),o=new Float32Array(e);for(let n=2;n<r.length;n+=4)t[Math.floor(n/4)]=r[n],o[Math.floor(n/4)]=r[n+1];return{real:t,imag:o}}function bj(r,e){let t=r[e*2],o=r[e*2+1];return{real:t,imag:o}}function wj(r,e,t,o){r[o*2]=e,r[o*2+1]=t}function _j(r,e){let t=new Float32Array(r/2),o=new Float32Array(r/2);for(let n=0;n<Math.ceil(r/2);n++){let s=(e?2:-2)*Math.PI*(n/r);t[n]=Math.cos(s),o[n]=Math.sin(s)}return{real:t,imag:o}}function kj(r,e,t){let o=(t?2:-2)*Math.PI*(r/e),n=Math.cos(o),s=Math.sin(o);return{real:n,imag:s}}function vj(r,e,t=0){let o=[];if(typeof e=="number")A(r.shape[t]%e==0,()=>"Number of splits must evenly divide the axis."),o=new Array(e).fill(r.shape[t]/e);else{let n=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);A(n<=1,()=>"There should be only one negative value in split array.");let s=e.indexOf(-1);if(s!==-1){let a=e.reduce((i,l)=>l>0?i+l:i);e[s]=r.shape[t]-a}A(r.shape[t]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),o=e}return o}var w0={};Je(w0,{collectGatherOpShapeInfo:()=>Nj,computeOutShape:()=>Ij,segOpComputeOptimalWindowSize:()=>Cj});function Cj(r,e){let t=!1,o;for(r<=pg?(o=r,t=!0):o=Tc(r,Math.floor(Math.sqrt(r)));!t;)o>e||o===r?t=!0:o=Tc(r,o+1);return o}function Ij(r,e,t){let o=[],n=r.length;for(let s=0;s<n;s++)s!==e?o.push(r[s]):o.push(t);return o}function Nj(r,e,t,o){let n=e.shape.length,s=r.shape.length;if(o!==0&&(o<-n||o>n))throw new Error(`Expect batchDims in the range of [-${n}, ${n}], but got ${o}`);if(o<0&&(o+=n),o>s)throw new Error(`batchDims (${o}) must be less than rank(x) (
    ${s}).`);if(t<o)throw new Error(`batchDims (${o}) must be less than or equal to axis (${t}).`);for(let p=0;p<o;++p)if(r.shape[p]!==e.shape[p])throw new Error(`x.shape[${p}]: ${r.shape[p]} should be equal to indices.shape[${p}]: ${e.shape[p]}.`);let a=r.shape[t],i=[],l=1,u=1,c=1;for(let p=0;p<o;++p)i.push(r.shape[p]),l*=r.shape[p];for(let p=o;p<t;p++)i.push(r.shape[p]),u*=r.shape[p];for(let p=o;p<n;p++)i.push(e.shape[p]);for(let p=t+1;p<s;p++)i.push(r.shape[p]),c*=r.shape[p];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:i}}function Sj(r){try{return r.map(e=>Pc(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Tj(r){return r.map(e=>Qa(e))}var Tr={};Je(Tr,{nonMaxSuppressionV3Impl:()=>Gw,nonMaxSuppressionV4Impl:()=>Ww,nonMaxSuppressionV5Impl:()=>Uw,whereImpl:()=>Pw});var mg={kernelName:as,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>O(r,Es(ne(t,"float32"),-1))}}};var _0={kernelName:js,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let o=Oe(ne(t,"float32")),n=gt(ce(ue(1),o));return He(me(r,n))}}}};var k0={kernelName:Hs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let o=gt(ce(Oe(ne(t,"float32")),1));return me(r,o)}}}};var v0={kernelName:wo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e,n=Be(t.shape,o.shape);return{a:()=>{let i=r,l=_t(t.shape,n);return l.length>0&&(i=ge(i,l)),M(i,t.shape)},b:()=>{let i=r,l=_t(o.shape,n);return l.length>0&&(i=ge(i,l)),M(i,o.shape)}}}};var C0={kernelName:Ho,saveAllInputs:!0,gradFunc:(r,e)=>{let t={};return e.forEach((o,n)=>{t[n]=()=>r.clone()}),t}};var I0={kernelName:qo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Ce(t)}}};var N0={kernelName:ea,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Ce(t)}}};var S0={kernelName:qs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,gt(ce(ue(1),Oe(ne(t,"float32")))))}}};var T0={kernelName:Ks,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let o=gt(Q(ue(1),Oe(ne(t,"float32"))));return me(r,o)}}}};var A0={kernelName:Zs,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e,n=Be(t.shape,o.shape);return{a:()=>{let i=Q(Oe(t),Oe(o)),l=O(r,me(o,i)),u=_t(t.shape,n);return u.length>0&&(l=ge(l,u)),M(l,t.shape)},b:()=>{let i=Q(Oe(t),Oe(o)),l=He(O(r,me(t,i))),u=_t(o.shape,n);return u.length>0&&(l=ge(l,u)),M(l,o.shape)}}}};var E0={kernelName:Xs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,Q(Oe(ne(t,"float32")),1))}}};var D0={kernelName:Ys,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,ce(ue(1),Oe(ne(t,"float32"))))}}};function Aj(r,e,t,o,n,s){let a=k(r,"dy","avgPool3dGrad"),i=k(e,"input","avgPool3dGrad"),l=a,u=i,c=!1;i.rank===4&&(c=!0,l=M(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=M(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),A(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),s!=null&&A(ot(n),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${n}.`);let p={dy:l,input:u},m={filterSize:t,strides:o,pad:n,dimRoundingMode:s},f=E.runKernel(Bl,p,m);return c?M(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}var $0=S({avgPool3dGrad_:Aj});var R0={kernelName:ta,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[o]=e,{filterSize:n,strides:s,pad:a,dimRoundingMode:i}=t;return{x:()=>$0(r,o,n,s,a,i)}}};function Ej(r,e,t,o,n){let s=k(r,"dy","avgPoolGrad"),a=k(e,"input","avgPoolGrad");A(a.rank===s.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${s.rank})`);let i=a,l=s,u=!1;a.rank===3&&(u=!0,i=M(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=M(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),A(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let c={dy:l,input:i},p={filterSize:t,strides:o,pad:n},m=E.runKernel(zl,c,p);return u?M(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var F0=S({avgPoolGrad_:Ej});var O0={kernelName:Ko,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[o]=e,{filterSize:n,strides:s,pad:a}=t;return{x:()=>F0(r,o,n,s,a)}}};var P0={kernelName:Xo,inputsToSave:["a","b"],gradFunc:(r,e,t)=>{let[o,n]=e,{transposeA:s,transposeB:a}=t;return!s&&!a?{a:()=>We(r,n,!1,!0),b:()=>We(o,r,!0,!1)}:!s&&a?{a:()=>We(r,n,!1,!1),b:()=>We(r,o,!0,!1)}:s&&!a?{a:()=>We(n,r,!1,!0),b:()=>We(o,r,!1,!1)}:{a:()=>We(n,r,!0,!0),b:()=>We(r,o,!0,!0)}}};var M0={kernelName:ra,gradFunc:(r,e,t)=>{let{blockShape:o,crops:n}=t;return{x:()=>Sa(r,o,n)}}};var L0={kernelName:yb,gradFunc:(r,e,t)=>{let o=t,n=o.inputShape,s=o.shape,a=Array.from(s);for(let l=n.length-1;l>=0;l--)if(n[l]===s[l])a[l]=1;else if(n[l]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${s}].`);let i=[];for(let l=0;l<a.length;l++)a[l]>1&&i.push(l);return{x:()=>ge(r,i,!0)}}};var z0={kernelName:Do,gradFunc:r=>({x:()=>r.clone()})};var B0={kernelName:Yo,gradFunc:r=>({x:()=>Ce(r)})};var V0={kernelName:$o,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[o]=e,{clipValueMin:n,clipValueMax:s}=t;return{x:()=>Dt(dr(io(o,n),zo(o,s)),r,Ce(r))}}};var G0={kernelName:oa,inputsToSave:["x"],gradFunc:mg.gradFunc};var W0={kernelName:ls,saveAllInputs:!0,gradFunc:(r,e,t)=>{let o=e.map(l=>l.shape),{axis:n}=t,s=Jt(n,e[0].shape)[0],a=o.map(l=>l[s]);return ur(r,a,s).map(l=>()=>l)}};var U0={kernelName:Zo,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[o,n]=e,{dilations:s,strides:a,pad:i,dataFormat:l}=t;return A(Mo(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>jc(o.shape,r,n,a,i,l),filter:()=>Jc(o,r,n.shape,a,i,l)}}};var j0={kernelName:Jo,inputsToSave:["dy","filter"],gradFunc:(r,e,t)=>{let[o,n]=e,{strides:s,pad:a,dataFormat:i,dimRoundingMode:l}=t;return{dy:()=>Kr(r,n,s,a,i,1,l),filter:()=>Jc(r,o,n.shape,s,a,i,l)}}};function Dj(r,e,t,o,n){let s=r;r.rank===4&&(s=M(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let a=e;a.rank===4&&(a=M(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),A(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),A(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),A(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),A(s.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${t[3]}.`),A(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);let i={x:s,dy:a},l={strides:o,pad:n,filterShape:t};return E.runKernel(Ul,i,l)}var H0=S({conv3DBackpropFilter_:Dj});var q0={kernelName:na,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:o,strides:n,pad:s}=t;A(Mo(o),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);let[a,i]=e;return{x:()=>Jh(a.shape,r,i,n,s),filter:()=>H0(a,r,i.shape,n,s)}}};var K0={kernelName:Qo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>O(He(Fu(ne(t,"float32"))),r)}}};var X0={kernelName:Js,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>O(Ou(ne(t,"float32")),r)}}};var Y0={kernelName:en,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[o]=e,{axis:n,exclusive:s,reverse:a}=t;return{x:()=>{let i=_w([n],o.rank),l=vu(r,n,s,!a);return i!=null&&(l=je(l,i)),l}}}};var Z0={kernelName:tn,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:o,strides:n,pad:s,dimRoundingMode:a}=t,i=o==null?[1,1]:o;A(Mo(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[l,u]=e;return A(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),A(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),A(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),A(wr(n,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${n} and dilations '${i}'.`),a!=null&&A(ot(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`),{x:()=>ig(l.shape,r,u,n,s,o,a),filter:()=>sg(l,r,u.shape,n,s,o,a)}}};var J0={kernelName:sa,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[o,n]=e,s={x:o,filter:n,dy:r},a={x:o,filter:n,dy:r};return{x:()=>E.runKernel(Ec,s,t),filter:()=>E.runKernel(Dc,a,t)}}};var Q0={kernelName:ti,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e,o={dy:r,y:t};return{x:()=>E.runKernel(Yl,o)}}};var eS={kernelName:ri,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,o=O(Yt(He(Oe(t))),2/Math.sqrt(Math.PI));return{x:()=>O(r,o)}}};var tS={kernelName:on,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>O(r,t)}}};var rS={kernelName:us,inputsToSave:["input"],gradFunc:(r,e)=>{let[t]=e;return{input:()=>M(r,t.shape)}}};var oS={kernelName:ni,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>O(r,Yt(t))}}};var nS={kernelName:nn,gradFunc:r=>({x:()=>Ce(r)})};var sS={kernelName:sn,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e,n=Be(t.shape,o.shape);return{a:()=>{let i=me(r,ne(o,"float32")),l=_t(t.shape,n);return l.length>0?M(ge(i,l),t.shape):i},b:()=>{let i=O(r,ne(t,"float32")),l=_t(o.shape,n);l.length>0&&(i=M(ge(i,l),o.shape));let u=Oe(o);return He(me(i,ne(u,"float32")))}}}};var iS={kernelName:an,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,e,t)=>{let{varianceEpsilon:o}=t,[n,s,a,i]=e,l=i==null?ue(1):i,u=_t(s.shape,n.shape),c=[];if(s.rank===1){for(let _=0;_<n.shape.length-1;++_)c.push(n.shape[_]);c.push(1)}let p=ce(n,s),m=O(r,l),f=$u(Q(a,ue(o))),d=O(O(O(f,f),f),ue(-.5));return{x:()=>s.rank===1?M(O(O(r,Lo(M(f,[1,1,1,s.shape[0]]),c)),l),n.shape):M(O(O(r,f),l),n.shape),mean:()=>{let _=O(O(f,ue(-1)),m);return s.rank===1&&(_=ge(_,u)),M(_,s.shape)},variance:()=>{let _=O(O(d,p),m);return s.rank===1&&(_=ge(_,u)),M(_,s.shape)},scale:()=>{let _=O(p,f),C=O(r,_);return s.rank===1&&(C=ge(C,u)),M(C,s.shape)},offset:()=>{let _=r;return s.rank===1&&(_=ge(_,u)),M(_,s.shape)}}}};var uS={kernelName:cs,inputsToSave:["x","indices"],gradFunc:(r,e,t)=>{let[o,n]=e,{axis:s}=t,a=Jt(s,o.shape)[0];return{x:()=>{let l=o.shape,u=n.size,c=l.slice(0,a),p=c.length,m=l.slice(s,l.length).slice(1),f=m.length,d=aS(0,p),h=aS(p+1,p+1+f),g=lS([c,[u],m]),y=M(r,g),b=M(n,[u]),w=lS([[p],d,h]),_=je(y,w),C=Xm(_,b,o.shape[a]),D=Fm(w);return C=je(C,D),C},indices:()=>n}}};function aS(r,e){let t=[];for(let o=r;o<e;++o)t.push(o);return t}function lS(r){let e=[];for(let t=0;t<r.length;++t)for(let o=0;o<r[t].length;++o)e.push(r[t][o]);return e}var cS={kernelName:ln,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e;return{a:()=>Ce(t),b:()=>Ce(o)}}};var pS={kernelName:Ro,gradFunc:r=>({x:()=>ne(r,"float32")})};var mS={kernelName:li,gradFunc:r=>({x:()=>Ce(r)})};var fS={kernelName:ui,gradFunc:r=>({x:()=>Ce(r)})};var dS={kernelName:ci,gradFunc:r=>({x:()=>Ce(r)})};var hS={kernelName:un,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[o]=e,{alpha:n}=t,s=Qt(o,0);return{x:()=>Dt(s,r,O(r,n))}}};var gS={kernelName:fi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,Q(t,1))}}};var xS={kernelName:cn,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,ne(t,"float32"))}}};var yS={kernelName:bb,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[o]=e,{axis:n}=t;return{logits:()=>{let s=!0,a=Yt(o);return ce(r,O(ge(r,n,s),a))}}}};function $j(r,e,t,o=5,n=1,s=1,a=.5){let i={x:r,y:e,dy:t},l={depthRadius:o,bias:n,alpha:s,beta:a};return E.runKernel(tu,i,l)}var bS=S({localResponseNormalizationBackprop_:$j});var wS={kernelName:aa,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[o,n]=e,{depthRadius:s,bias:a,alpha:i,beta:l}=t;return{x:()=>bS(o,n,r,s,a,i,l)}}};function fg(r,e,t,o){return e.rank<t.rank&&(e=M(e,Bn(e.shape,o))),r.rank<t.rank&&(r=M(r,Bn(r.shape,o))),{x:()=>O(r,ne(vo(t,e),r.dtype))}}var Kw={kernelName:pn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let o=t,{reductionIndices:n}=o,s=e[0],a=e[1],i=Jt(n,s.shape),l=fg(r,a,s,i);return{x:()=>l.x()}}};var _S={kernelName:mn,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e;return{a:()=>O(r,ne(io(t,o),"float32")),b:()=>O(r,ne(Iu(t,o),"float32"))}}};function Rj(r,e,t,o,n,s,a){let i=k(r,"dy","maxPool3dGrad"),l=k(e,"input","maxPool3dGrad"),u=k(t,"output","maxPool3dGrad"),c=i,p=l,m=u,f=!1;l.rank===4&&(f=!0,c=M(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),p=M(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),m=M(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),A(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),A(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),A(m.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${m.rank}.`),a!=null&&A(ot(s),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);let d={dy:c,input:p,output:m},h={filterSize:o,strides:n,pad:s,dimRoundingMode:a},g=E.runKernel(ou,d,h);return f?M(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var kS=S({maxPool3dGrad_:Rj});var vS={kernelName:la,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[o,n]=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:l}=t;return{x:()=>kS(r,o,n,s,a,i,l)}}};function Fj(r,e,t,o,n,s,a){let i=k(r,"dy","maxPoolGrad"),l=k(e,"input","maxPoolGrad"),u=k(t,"output","maxPoolGrad");A(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),A(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),A(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),a!=null&&A(ot(s),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);let c={dy:i,input:l,output:u},p={filterSize:o,strides:n,pad:s,dimRoundingMode:a};return E.runKernel(ru,c,p)}var CS=S({maxPoolGrad_:Fj});var IS={kernelName:fn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[o,n]=e,{filterSize:s,strides:a,pad:i}=t;return{x:()=>CS(r,o,n,s,a,i)}}};var NS={kernelName:dn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[o]=e,{axis:n}=t,s=Jt(n,o.shape),i=ww(o.shape,s)[1],l=ct(i);return{x:()=>{let c=o.shape.slice();s.forEach(f=>{c[f]=1});let p=M(r,c);return me(O(p,Ir(o.shape,"float32")),l)}}}};var SS={kernelName:hn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let o=t,{axis:n}=o,[s,a]=e,i=Jt(n,s.shape),l=fg(r,a,s,i);return{x:()=>l.x()}}};var TS={kernelName:gn,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e;return{a:()=>O(r,ne(zo(t,o),"float32")),b:()=>O(r,ne(Qt(t,o),"float32"))}}};var AS={kernelName:ua,inputsToSave:["x"],gradFunc:(r,e,t)=>{let o=e[0],{paddings:n}=t,s=n.map(a=>a[0]);return{x:()=>Re(r,s,o.shape)}}};var ES={kernelName:hi,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e,n=Be(t.shape,o.shape);return{a:()=>{let i=_t(t.shape,n);return i.length>0?M(ge(r,i),t.shape):r},b:()=>{let i=O(r,He(Ns(me(t,o)))),l=_t(o.shape,n);return l.length>0?M(ge(i,l),o.shape):i}}}};var DS={kernelName:xn,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e,n=Be(t.shape,o.shape);return{a:()=>{let i=O(r,ne(o,"float32")),l=_t(t.shape,n);return l.length>0?M(ge(i,l),t.shape):i},b:()=>{let i=O(r,ne(t,"float32")),l=_t(o.shape,n);return l.length>0?M(ge(i,l),o.shape):i}}}};var $S={kernelName:ps,gradFunc:r=>({x:()=>He(r)})};var RS={kernelName:yn,inputsToSave:["indices"],gradFunc:(r,e)=>{let t=e[0];return{indices:()=>ht(t.shape,"float32")}}};var FS={kernelName:ms,gradFunc:r=>({x:()=>Ce(r)})};var OS={kernelName:fs,saveAllInputs:!0,gradFunc:(r,e,t)=>{let{axis:o}=t;return cr(r,o).map(s=>()=>s)}};var Xw={kernelName:bn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let o=e[0],{paddings:n}=t,s=n.map(a=>a[0]);return{x:()=>Re(r,s,o.shape)}}};var PS={kernelName:wn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,e)=>{let[t,o,n]=e,s=t,a=o,i=Be(s.shape,a.shape);return{a:()=>{let c=ne(a,"float32"),p=O(r,O(c,Fr(s,ce(c,ue(1))))),m=_t(s.shape,i);return m.length>0&&(p=ge(p,m)),M(p,s.shape)},b:()=>{let c=Qt(s,0),p=Dt(c,ar(s),Ce(s)),m=O(r,O(n,p)),f=_t(a.shape,i);return f.length>0&&(m=ge(m,f)),M(m,a.shape)}}}};var MS={kernelName:_n,inputsToSave:["x","alpha"],gradFunc:(r,e)=>{let[t,o]=e,n=Qt(t,0);return{x:()=>Dt(n,r,O(r,o)),alpha:()=>{let s=Dt(n,Ce(r),O(r,t)),a=_t(o.shape,r.shape);return a.length>0&&(s=ge(s,a)),M(s,o.shape)}}}};var LS={kernelName:rn,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e,n=Be(t.shape,o.shape);return{a:()=>{let i=me(r,ne(o,"float32")),l=_t(t.shape,n);return l.length>0?M(ge(i,l),t.shape):i},b:()=>{let i=O(r,ne(t,"float32")),l=_t(o.shape,n);l.length>0&&(i=M(ge(i,l),o.shape));let u=Oe(o);return He(me(i,ne(u,"float32")))}}}};var zS={kernelName:_i,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,He(Oe(t)))}}};var BS={kernelName:Cn,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,o=O(zo(t,6),Es(t));return{x:()=>O(r,ne(o,"float32"))}}};var VS={kernelName:kn,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>O(r,ne(Es(t),"float32"))}}};var GS={kernelName:ds,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>M(r,t.shape)}}};var WS={kernelName:vn,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[o]=e,n={dy:r,images:o};return{images:()=>E.runKernel(lu,n,t)}}};var US={kernelName:pa,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[o]=e,n={dy:r,images:o};return{images:()=>E.runKernel(au,n,t)}}};var jS={kernelName:In,gradFunc:(r,e,t)=>{let{dims:o}=t,n=Jt(o,r.shape);return{x:()=>Ht(r,n)}}};var HS={kernelName:Nn,gradFunc:r=>({x:()=>Ce(r)})};var qS={kernelName:Sn,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>He(me(r,O(Fr(t,1.5),2)))}}};var KS={kernelName:hs,inputsToSave:["condition"],gradFunc:(r,e)=>{let[t]=e;return{condition:()=>ne(Ce(t),"float32"),t:()=>O(r,ne(t,r.dtype)),e:()=>O(r,ne(Ia(t),r.dtype))}}};var XS={kernelName:vi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let o=Qt(t,ue(0)),n=ue(Hw),s=ue(qw),a=O(r,s),i=O(O(r,n),Yt(ne(t,"float32")));return Dt(o,a,i)}}}};var YS={kernelName:An,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>O(r,O(t,ce(ue(1),t)))}}};var ZS={kernelName:Ii,gradFunc:r=>({x:()=>Ce(r)})};var JS={kernelName:Tn,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>O(ka(ne(t,"float32")),r)}}};var QS={kernelName:Ci,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>O(ku(ne(t,"float32")),r)}}};var eT={kernelName:gs,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[o]=e,{begin:n,size:s}=t,a=o.shape,[i,l]=Kb(o,n,s),u=[];for(let c=0;c<r.rank;c++)u.push([i[c],a[c]-i[c]-l[c]]);return{x:()=>Rr(r,u)}}};var tT={kernelName:$n,outputsToSave:[!0],gradFunc:(r,e,t)=>{let[o]=e,{dim:n}=t,s=!0,a=O(r,o);return{logits:()=>ce(a,O(ge(a,[n],s),o))}}};var rT={kernelName:Ni,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>O(r,qr(t))}}};var Yw={kernelName:ma,gradFunc:(r,e,t)=>{let{blockShape:o,paddings:n}=t;return{x:()=>_a(r,o,n)}}};var Zw={kernelName:xs,gradFunc:(r,e,t)=>{let{axis:o}=t;return{x:()=>Ye(r,o)}}};var oT={kernelName:En,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,O(gt(ne(t,"float32")),2))}}};var nT={kernelName:fa,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>O(r,O(ne(t,"float32"),2))}}};var sT={kernelName:Rn,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e,n=ue(2);return{a:()=>O(r,O(n,ce(t,o))),b:()=>O(r,O(n,ce(o,t)))}}};var iT={kernelName:Fo,gradFunc:r=>({x:()=>Ce(r)})};var aT={kernelName:Fn,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e,n=Be(t.shape,o.shape);return{a:()=>{let i=r,l=_t(t.shape,n);return l.length>0&&(i=ge(i,l)),M(i,t.shape)},b:()=>{let i=r,l=_t(o.shape,n);return l.length>0&&(i=ge(i,l)),M(He(i),o.shape)}}}};var lT={kernelName:Dn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[o]=e,n=o.shape.slice(),{axis:s}=t;Jt(s,o.shape).forEach(u=>{n[u]=1});let i=M(r,n),l=O(i,Ir(o.shape,"float32"));return{x:()=>l}}};var uT={kernelName:Ti,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,Oe(ka(t)))}}};var cT={kernelName:On,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>O(ce(ue(1),Oe(t)),r)}}};var pT={kernelName:_o,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[o]=e,{reps:n}=t;return{x:()=>{let a=Ce(o);if(o.rank===1)for(let i=0;i<n[0];++i)a=Q(a,Re(r,[i*o.shape[0]],[o.shape[0]]));else if(o.rank===2)for(let i=0;i<n[0];++i)for(let l=0;l<n[1];++l)a=Q(a,Re(r,[i*o.shape[0],l*o.shape[1]],[o.shape[0],o.shape[1]]));else if(o.rank===3)for(let i=0;i<n[0];++i)for(let l=0;l<n[1];++l)for(let u=0;u<n[2];++u)a=Q(a,Re(r,[i*o.shape[0],l*o.shape[1],u*o.shape[2]],[o.shape[0],o.shape[1],o.shape[2]]));else if(o.rank===4)for(let i=0;i<n[0];++i)for(let l=0;l<n[1];++l)for(let u=0;u<n[2];++u)for(let c=0;c<n[3];++c)a=Q(a,Re(r,[i*o.shape[0],l*o.shape[1],u*o.shape[2],c*o.shape[3]],[o.shape[0],o.shape[1],o.shape[2],o.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${o.rank} tensors yet.`);return a}}}};var mT={kernelName:Pn,gradFunc:(r,e,t)=>{let o=t,{perm:n}=o,s=Fm(n);return{x:()=>je(r,s)}}};var fT={kernelName:ys,gradFunc:(r,e,t)=>{let o=t,{axis:n}=o;return{value:()=>Bt(r,n)}}};var dT={kernelName:da,inputsToSave:["segmentIds"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Oj(r,t)}}};function Oj(r,e){let t=Yr(e,Ce(e)),o=zn(r,t),n=io(e,ue(0,"int32")),s=o.rank-n.rank;for(let i=0;i<s;++i)n=ir(n,i+1);n=dr(n,Ir(o.shape,"bool"));let a=Ce(o);return Dt(n,o,a)}var hT={kernelName:bs,gradFunc:r=>({x:()=>Ce(r)})};var Pj=[mg,_0,k0,v0,C0,I0,N0,S0,T0,A0,E0,D0,R0,O0,P0,M0,L0,z0,B0,V0,G0,W0,j0,U0,q0,K0,X0,Y0,Z0,J0,LS,Q0,eS,tS,rS,oS,sS,nS,iS,uS,cS,pS,mS,fS,dS,hS,gS,xS,yS,wS,Kw,Kw,_S,vS,IS,NS,SS,TS,AS,ES,DS,$S,RS,FS,OS,Xw,Xw,PS,MS,zS,BS,VS,GS,WS,US,jS,HS,qS,KS,XS,YS,ZS,JS,QS,eT,tT,rT,Yw,Yw,Zw,Zw,oT,sT,nT,iT,aT,lT,uT,cT,pT,mT,fT,dT,hT];for(let r of Pj)_b(r);F().prototype.abs=function(){return this.throwIfDisposed(),It(this)};F().prototype.acos=function(){return this.throwIfDisposed(),xm(this)};F().prototype.acosh=function(){return this.throwIfDisposed(),ym(this)};F().prototype.add=function(r){return this.throwIfDisposed(),Q(this,r)};F().prototype.all=function(r,e){return this.throwIfDisposed(),xu(this,r,e)};F().prototype.any=function(r,e){return this.throwIfDisposed(),ol(this,r,e)};F().prototype.argMax=function(r){return this.throwIfDisposed(),nl(this,r)};F().prototype.argMin=function(r){return this.throwIfDisposed(),bm(this,r)};F().prototype.asScalar=function(){return this.throwIfDisposed(),A(this.size===1,()=>"The array must have only 1 element."),M(this,[])};F().prototype.asType=function(r){return this.throwIfDisposed(),ne(this,r)};F().prototype.as1D=function(){return this.throwIfDisposed(),M(this,[this.size])};F().prototype.as2D=function(r,e){return this.throwIfDisposed(),M(this,[r,e])};F().prototype.as3D=function(r,e,t){return this.throwIfDisposed(),M(this,[r,e,t])};F().prototype.as4D=function(r,e,t,o){return this.throwIfDisposed(),M(this,[r,e,t,o])};F().prototype.as5D=function(r,e,t,o,n){return this.throwIfDisposed(),M(this,[r,e,t,o,n])};F().prototype.asin=function(){return this.throwIfDisposed(),wm(this)};F().prototype.asinh=function(){return this.throwIfDisposed(),_m(this)};F().prototype.atan=function(){return this.throwIfDisposed(),km(this)};F().prototype.atan2=function(r){return this.throwIfDisposed(),vm(this,r)};F().prototype.atanh=function(){return this.throwIfDisposed(),Cm(this)};F().prototype.avgPool=function(r,e,t,o){return this.throwIfDisposed(),wa(this,r,e,t,o)};F().prototype.batchToSpaceND=function(r,e){return this.throwIfDisposed(),_a(this,r,e)};F().prototype.batchNorm=function(r,e,t,o,n){return this.throwIfDisposed(),Ln(this,r,e,t,o,n)};F().prototype.broadcastTo=function(r){return this.throwIfDisposed(),sl(this,r)};F().prototype.cast=function(r){return this.throwIfDisposed(),ne(this,r)};F().prototype.ceil=function(){return this.throwIfDisposed(),Nm(this)};F().prototype.clipByValue=function(r,e){return this.throwIfDisposed(),sr(this,r,e)};F().prototype.concat=function(r,e){return this.throwIfDisposed(),r instanceof Ve&&(r=[r]),Ye([this,...r],e)};F().prototype.conv1d=function(r,e,t,o,n,s){return this.throwIfDisposed(),wu(this,r,e,t,o,n,s)};F().prototype.conv2dTranspose=function(r,e,t,o,n){return this.throwIfDisposed(),_u(this,r,e,t,o,n)};F().prototype.conv2d=function(r,e,t,o,n,s){return this.throwIfDisposed(),Kr(this,r,e,t,o,n,s)};F().prototype.cos=function(){return this.throwIfDisposed(),ka(this)};F().prototype.cosh=function(){return this.throwIfDisposed(),ku(this)};F().prototype.cumsum=function(r,e,t){return this.throwIfDisposed(),vu(this,r,e,t)};F().prototype.depthToSpace=function(r,e){return this.throwIfDisposed(),Tm(this,r,e)};F().prototype.depthwiseConv2d=function(r,e,t,o,n,s){return this.throwIfDisposed(),Cs(this,r,e,t,o,n,s)};F().prototype.dilation2d=function(r,e,t,o,n){return this.throwIfDisposed(),Am(this,r,e,t,o,n)};F().prototype.divNoNan=function(r){return this.throwIfDisposed(),Em(this,r)};F().prototype.div=function(r){return this.throwIfDisposed(),me(this,r)};F().prototype.dot=function(r){return this.throwIfDisposed(),fw(this,r)};F().prototype.elu=function(){return this.throwIfDisposed(),Is(this)};F().prototype.equal=function(r){return this.throwIfDisposed(),vo(this,r)};F().prototype.erf=function(){return this.throwIfDisposed(),Dm(this)};F().prototype.exp=function(){return this.throwIfDisposed(),Yt(this)};F().prototype.expandDims=function(r){return this.throwIfDisposed(),ir(this,r)};F().prototype.expm1=function(){return this.throwIfDisposed(),$m(this)};F().prototype.fft=function(){return this.throwIfDisposed(),Ea(this)};F().prototype.flatten=function(){return this.throwIfDisposed(),M(this,[this.size])};F().prototype.floor=function(){return this.throwIfDisposed(),Ns(this)};F().prototype.floorDiv=function(r){return this.throwIfDisposed(),gu(this,r)};F().prototype.gather=function(r,e){return this.throwIfDisposed(),zn(this,r,e)};F().prototype.greaterEqual=function(r){return this.throwIfDisposed(),io(this,r)};F().prototype.greater=function(r){return this.throwIfDisposed(),Qt(this,r)};F().prototype.ifft=function(){return this.throwIfDisposed(),Pi(this)};F().prototype.irfft=function(){return this.throwIfDisposed(),Pu(this)};F().prototype.isFinite=function(){return this.throwIfDisposed(),dw(this)};F().prototype.isInf=function(){return this.throwIfDisposed(),hw(this)};F().prototype.isNaN=function(){return this.throwIfDisposed(),gw(this)};F().prototype.leakyRelu=function(r){return this.throwIfDisposed(),Ca(this,r)};F().prototype.lessEqual=function(r){return this.throwIfDisposed(),zo(this,r)};F().prototype.less=function(r){return this.throwIfDisposed(),Iu(this,r)};F().prototype.localResponseNormalization=function(r,e,t,o){return this.throwIfDisposed(),Rm(this,r,e,t,o)};F().prototype.logSigmoid=function(){return this.throwIfDisposed(),yw(this)};F().prototype.logSoftmax=function(r){return this.throwIfDisposed(),Su(this,r)};F().prototype.logSumExp=function(r,e){return this.throwIfDisposed(),Om(this,r,e)};F().prototype.log=function(){return this.throwIfDisposed(),ar(this)};F().prototype.log1p=function(){return this.throwIfDisposed(),Nu(this)};F().prototype.logicalAnd=function(r){return this.throwIfDisposed(),dr(this,r)};F().prototype.logicalNot=function(){return this.throwIfDisposed(),Ia(this)};F().prototype.logicalOr=function(r){return this.throwIfDisposed(),Tu(this,r)};F().prototype.logicalXor=function(r){return this.throwIfDisposed(),kw(this,r)};F().prototype.matMul=function(r,e,t){return this.throwIfDisposed(),We(this,r,e,t)};F().prototype.maxPool=function(r,e,t,o){return this.throwIfDisposed(),Na(this,r,e,t,o)};F().prototype.max=function(r,e){return this.throwIfDisposed(),lr(this,r,e)};F().prototype.maximum=function(r){return this.throwIfDisposed(),Yr(this,r)};F().prototype.mean=function(r,e){return this.throwIfDisposed(),dt(this,r,e)};F().prototype.min=function(r,e){return this.throwIfDisposed(),Oi(this,r,e)};F().prototype.minimum=function(r){return this.throwIfDisposed(),Ts(this,r)};F().prototype.mirrorPad=function(r,e){return this.throwIfDisposed(),Mm(this,r,e)};F().prototype.mod=function(r){return this.throwIfDisposed(),Lm(this,r)};F().prototype.mul=function(r){return this.throwIfDisposed(),O(this,r)};F().prototype.neg=function(){return this.throwIfDisposed(),He(this)};F().prototype.norm=function(r,e,t){return this.throwIfDisposed(),zu(this,r,e,t)};F().prototype.notEqual=function(r){return this.throwIfDisposed(),Vn(this,r)};F().prototype.oneHot=function(r,e=1,t=0){return this.throwIfDisposed(),vs(this,r,e,t)};F().prototype.onesLike=function(){return this.throwIfDisposed(),er(this)};F().prototype.pad=function(r,e){return this.throwIfDisposed(),Rr(this,r,e)};F().prototype.pool=function(r,e,t,o,n){return this.throwIfDisposed(),Iw(this,r,e,t,o,n)};F().prototype.pow=function(r){return this.throwIfDisposed(),Fr(this,r)};F().prototype.prelu=function(r){return this.throwIfDisposed(),Ta(this,r)};F().prototype.prod=function(r,e){return this.throwIfDisposed(),Au(this,r,e)};F().prototype.reciprocal=function(){return this.throwIfDisposed(),Bm(this)};F().prototype.relu=function(){return this.throwIfDisposed(),Nr(this)};F().prototype.relu6=function(){return this.throwIfDisposed(),Du(this)};F().prototype.reshapeAs=function(r){return this.throwIfDisposed(),M(this,r.shape)};F().prototype.reshape=function(r){return this.throwIfDisposed(),M(this,r)};F().prototype.resizeBilinear=function(r,e,t){return this.throwIfDisposed(),ug(this,r,e,t)};F().prototype.resizeNearestNeighbor=function(r,e,t){return this.throwIfDisposed(),cg(this,r,e,t)};F().prototype.reverse=function(r){return this.throwIfDisposed(),Ht(this,r)};F().prototype.rfft=function(){return this.throwIfDisposed(),Da(this)};F().prototype.round=function(){return this.throwIfDisposed(),Vm(this)};F().prototype.rsqrt=function(){return this.throwIfDisposed(),$u(this)};F().prototype.selu=function(){return this.throwIfDisposed(),Ru(this)};F().prototype.separableConv2d=function(r,e,t,o,n,s){return this.throwIfDisposed(),Gm(this,r,e,t,o,n,s)};F().prototype.sigmoid=function(){return this.throwIfDisposed(),qr(this)};F().prototype.sign=function(){return this.throwIfDisposed(),Wm(this)};F().prototype.sin=function(){return this.throwIfDisposed(),Fu(this)};F().prototype.sinh=function(){return this.throwIfDisposed(),Ou(this)};F().prototype.slice=function(r,e){return this.throwIfDisposed(),Re(this,r,e)};F().prototype.softmax=function(r){return this.throwIfDisposed(),Aa(this,r)};F().prototype.softplus=function(){return this.throwIfDisposed(),Ss(this)};F().prototype.spaceToBatchND=function(r,e){return this.throwIfDisposed(),Sa(this,r,e)};F().prototype.split=function(r,e){return this.throwIfDisposed(),ur(this,r,e)};F().prototype.sqrt=function(){return this.throwIfDisposed(),gt(this)};F().prototype.square=function(){return this.throwIfDisposed(),Oe(this)};F().prototype.squaredDifference=function(r){return this.throwIfDisposed(),Mu(this,r)};F().prototype.squeeze=function(r){return this.throwIfDisposed(),Co(this,r)};F().prototype.stack=function(r,e){this.throwIfDisposed();let t=r instanceof Ve?[this,r]:[this,...r];return Bt(t,e)};F().prototype.step=function(r){return this.throwIfDisposed(),Es(this,r)};F().prototype.stridedSlice=function(r,e,t,o,n,s,a,i){return this.throwIfDisposed(),Hm(this,r,e,t,o,n,s,a,i)};F().prototype.sub=function(r){return this.throwIfDisposed(),ce(this,r)};F().prototype.sum=function(r,e){return this.throwIfDisposed(),ge(this,r,e)};F().prototype.tan=function(){return this.throwIfDisposed(),qm(this)};F().prototype.tanh=function(){return this.throwIfDisposed(),Fi(this)};F().prototype.tile=function(r){return this.throwIfDisposed(),Lo(this,r)};F().prototype.toBool=function(){return this.throwIfDisposed(),ne(this,"bool")};F().prototype.toFloat=function(){return this.throwIfDisposed(),ne(this,"float32")};F().prototype.toInt=function(){return this.throwIfDisposed(),ne(this,"int32")};F().prototype.topk=function(r,e){return this.throwIfDisposed(),Km(this,r,e)};F().prototype.transpose=function(r){return this.throwIfDisposed(),je(this,r)};F().prototype.unique=function(r){return this.throwIfDisposed(),Zc(this,r)};F().prototype.unsortedSegmentSum=function(r,e){return this.throwIfDisposed(),Xm(this,r,e)};F().prototype.unstack=function(r){return this.throwIfDisposed(),cr(this,r)};F().prototype.where=function(r,e){return this.throwIfDisposed(),Dt(r,this,e)};F().prototype.zerosLike=function(){return this.throwIfDisposed(),Ce(this)};var r_={};Je(r_,{maxNorm:()=>Lj,minMaxNorm:()=>Vj,nonNeg:()=>Bj,unitNorm:()=>zj});var Jw;function Zt(){return Jw==null&&(Jw=Qb().epsilon()),Jw}function Zr(){return"channelsLast"}var Io=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Io.prototype)}},Pr=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Pr.prototype)}},L=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,L.prototype)}},Ne=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Ne.prototype)}},ef=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,ef.prototype)}};function Un(r,e){if(Array.isArray(r)){let t=[];for(let o=0;o<e;o++)t=t.concat(r);return t}else{let t=new Array(e);return t.fill(r),t}}function Bo(r,e){if(!r)throw new ef(e)}function Qw(r,e){let t=0;for(let o of r)o===e&&t++;return t}function hr(r){return r.length===1?r[0]:r}function xt(r){return Array.isArray(r)?r:[r]}function jn(r){let t=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Ra(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}var Hn={};function sp(r){if(r==null)return null;let e={};return e.className=r.getClassName(),e.config=r.getConfig(),e}function e_(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(e=>e_(e));else{let e=Object.keys(r);for(let t of e){let o=r[t];o!=null&&typeof o=="object"&&(!Array.isArray(o)&&o.type==="ndarray"&&typeof o.value=="number"?r[t]=o.value:e_(o))}}}function Li(r,e={},t={},o="object",n=!1){if(typeof r=="string"){let s=r,a;if(s in t)a=t[s];else if(s in Hn)a=Hn[s];else if(a=e[s],a==null)throw new L(`Unknown ${o}: ${r}. This may be due to one of the following reasons:
1. The ${o} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${o} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{let s=r;if(s.className==null||s.config==null)throw new L(`${o}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let a=s.className,i,l;if(a in t?[i,l]=t[a]:a in Hn?[i,l]=Hn.className:a in e&&([i,l]=e[a]),i==null)throw new L(`Unknown ${o}: ${a}. This may be due to one of the following reasons:
1. The ${o} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${o} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let u={};for(let f of Object.keys(Hn))u[f]=Hn[f];for(let f of Object.keys(t))u[f]=t[f];let c=s.config;c.customObjects=u;let p=Object.assign({},Hn);for(let f of Object.keys(t))Hn[f]=t[f];e_(s.config);let m=l(i,s.config,t,n);return Hn=Object.assign({},p),m}else{let u=Object.assign({},Hn);for(let p of Object.keys(t))Hn[p]=t[p];let c=new i(s.config);return Hn=Object.assign({},u),c}}}function Mj(r,e){return r<e?-1:r>e?1:0}function tf(r,e){return-1*Mj(r,e)}function qn(r){if(r==null)return r;let e=[];for(let t of r)e.indexOf(t)===-1&&e.push(t);return e}function gT(r){if(r==null)throw new L(`Invalid value in obj: ${JSON.stringify(r)}`);for(let e in r)if(r.hasOwnProperty(e))return!1;return!0}function zi(r,e,t){if(t!=null&&r.indexOf(t)<0)throw new L(`${t} is not a valid ${e}.  Valid values are ${r} or null/undefined.`)}function dg(r,e,t=0,o=Infinity){return Bo(t>=0),Bo(o>=t),Array.isArray(r)&&r.length>=t&&r.length<=o&&r.every(n=>typeof n===e)}function Wt(r,e){Array.isArray(r)?(x.assert(r.length>0,()=>`${e} is unexpectedly an empty array.`),r.forEach((t,o)=>Wt(t,`element ${o+1} of ${e}`))):x.assert(Number.isInteger(r)&&r>0,()=>`Expected ${e} to be a positive integer, but got ${xT(r)}.`)}function xT(r){return r===null?"null":Array.isArray(r)?"["+r.map(e=>xT(e)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function yT(r,e){let t=x.now(),o;return(...s)=>{let a=x.now();return a-t<e||(t=a,o=r(...s)),o}}function hg(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}function t_(r,e){return V(()=>gt(ge(O(r,r),e,!0)))}var ip=class extends J.Serializable{getConfig(){return{}}},rf=class extends ip{constructor(e){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return V(()=>{let t=t_(e,this.axis),o=sr(t,0,this.maxValue);return O(e,me(o,Q(Zt(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};rf.className="MaxNorm";J.registerClass(rf);var of=class extends ip{constructor(e){super();this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return V(()=>me(e,Q(Zt(),t_(e,this.axis))))}getConfig(){return{axis:this.axis}}};of.className="UnitNorm";J.registerClass(of);var nf=class extends ip{apply(e){return Nr(e)}};nf.className="NonNeg";J.registerClass(nf);var sf=class extends ip{constructor(e){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return V(()=>{let t=t_(e,this.axis),o=Q(O(this.rate,sr(t,this.minValue,this.maxValue)),O(1-this.rate,t));return O(e,me(o,Q(Zt(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};sf.className="MinMaxNorm";J.registerClass(sf);var bT={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Rt(r){return sp(r)}function wT(r,e={}){return Li(r,J.SerializationMap.getMap().classNameMap,e,"constraint")}function Ft(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in bT?bT[r]:r,config:{}};return wT(t)}else return r instanceof ip?r:wT(r)}function Lj(r){return new rf(r)}function zj(r){return new of(r)}function Bj(){return new nf}function Vj(r){return new sf(r)}var a_={};Je(a_,{constant:()=>Xj,glorotNormal:()=>rH,glorotUniform:()=>tH,heNormal:()=>oH,heUniform:()=>nH,identity:()=>Qj,leCunNormal:()=>sH,leCunUniform:()=>iH,ones:()=>Kj,orthogonal:()=>aH,randomNormal:()=>Zj,randomUniform:()=>Yj,truncatedNormal:()=>Jj,varianceScaling:()=>eH,zeros:()=>qj});var _T=["channelsFirst","channelsLast"],kT=["nearest","bilinear"],vT=["valid","same","causal"],CT=["max","avg"],IT=["sum","mul","concat","ave"];var ap=new Map;function $t(r){zi(_T,"DataFormat",r)}function NT(r){zi(kT,"InterpolationFormat",r)}function Jr(r){zi(vT,"PaddingMode",r)}function o_(r){zi(CT,"PoolMode",r)}var af=[],ST="/";function $s(r,e){af.push(r);try{let t=e();return af.pop(),t}catch(t){throw af.pop(),t}}function Gj(){return af.length===0?"":af.join(ST)+ST}function gg(r){if(!TT(r))throw new Error("Not a valid tensor name: '"+r+"'");return Gj()+r}function xg(r){if(!TT(r))throw new Error("Not a valid tensor name: '"+r+"'");ap.has(r)||ap.set(r,0);let e=ap.get(r);if(ap.set(r,ap.get(r)+1),e>0){let t=`${r}_${e}`;return ap.set(t,1),t}else return r}var Wj=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function TT(r){return!!r.match(Wj)}function AT(r){return r===parseInt(r.toString(),10)}function Kn(r,e,t){e==null&&(e=0),t==null&&(t=r.length);let o=1;for(let n=e;n<t;++n)o*=r[n];return o}function ET(r){return r=Array.isArray(r)?new Float32Array(r):r,Vt(r)}function Uu(r){return Oi(ET(r)).dataSync()[0]}function Rs(r){return lr(ET(r)).dataSync()[0]}function Mr(r,e){if(e<r)throw new L(`end (${e}) < begin (${r}) is forbidden.`);let t=[];for(let o=r;o<e;++o)t.push(o);return t}function Fa(r,e){return r.asType(e)}function Oa(r,e=-1){let t=r.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),r.reshape(t)}function DT(r,e){return V(()=>{if(r.shape.length!==2)throw new L(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let t=Oa(r,1);return yg(t,[1,e,1])})}function $T(r){let e=[Kn(r.shape)];return r.reshape(e)}function RT(r){if(r.rank<=1)throw new L(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let e=[r.shape[0],Kn(r.shape,1)];return r.reshape(e)}function Pa(r,e,t){return V(()=>{switch(r.rank){case 1:return Um(r,e,t);case 2:return ng(r,[e,0],[t,r.shape[1]]);case 3:return jm(r,[e,0,0],[t,r.shape[1],r.shape[2]]);case 4:return Yc(r,[e,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3]]);case 5:return Re(r,[e,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return Re(r,[e,0,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new L(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function n_(r,e,t){return V(()=>{switch(r.rank){case 1:return Um(r,e,t);case 2:return ng(r,[0,e],[r.shape[0],t]);case 3:return jm(r,[0,0,e],[r.shape[0],r.shape[1],t]);case 4:return Yc(r,[0,0,0,e],[r.shape[0],r.shape[1],r.shape[2],t]);default:throw new L(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function lf(r,e,t,o){return V(()=>{switch(r.rank){case 1:return Um(r,e,t);case 2:switch(o){case 1:return Pa(r,e,t);case 2:return n_(r,e,t);default:throw new L(`The axis is not within the rank of the tensor ${o}`)}case 3:switch(o){case 1:return Pa(r,e,t);case 2:return jm(r,[0,e,0],[r.shape[0],t,r.shape[2]]);case 3:return n_(r,e,t);default:throw new L(`The axis is not within the rank of the tensor ${o}`)}case 4:switch(o){case 1:return Pa(r,e,t);case 2:return Yc(r,[0,e,0,0],[r.shape[0],t,r.shape[2],r.shape[3]]);case 3:return Yc(r,[0,0,e,0],[r.shape[0],r.shape[1],t,r.shape[3]]);case 4:return n_(r,e,t);default:throw new L(`The axis is not within the rank of the tensor ${o}`)}default:throw new L(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function lp(r,e=-1){let t;return e<0&&(t=r[0].rank,t!==0?e=t:e=0),e===r[0].rank&&(e=-1),Ye(r,e)}function s_(r,e){switch(r.rank){case 1:return lw([r,e]);case 2:return uw([r,e],0);case 3:return cw([r,e],0);case 4:return pw([r,e],0);default:throw new L(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function yg(r,e){if(Array.isArray(e)||(e=[e]),r.rank!==e.length)throw new L(`The length of input n (${e.length}) does not match the number of dimensions in input x (${r.rank})`);return Lo(r,e)}function up(r,e=0,t=1,o,n){return og(r,e,t,o,n)}function Xn(r,e,t,o){if(r.rank<2||e.rank<2)throw new Ne(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${e.shape}`);if(e.rank>=3){let n=r.shape.slice(-1)[0],s=e.shape.slice(-2)[0];if(n!==s)throw new Ne(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${e.shape}`)}if(r.rank===2&&e.rank===2){let n=!1,s=!1;return Gn.matMul({a:r,b:e,transposeA:n,transposeB:s,bias:o?i_(r.rank,o,Zr()):null,activation:t})}else{let n=r.shape.slice(),s=n.pop();r=r.reshape([-1,s]);let a=e.shape.slice(),i=a.pop(),l=a.pop(),u=[...a,i],c=Array.from({length:e.rank},(d,h)=>h===0?e.rank-2:h<=e.rank-2?h-1:h);e=e.transpose(c).reshape([l,-1]);let p=[...n,...u],m=!1,f=!1;return Gn.matMul({a:r,b:e,transposeA:m,transposeB:f,bias:o?i_(r.rank,o,Zr()):null,activation:t}).reshape(p)}}function bg(r,e,t){return V(()=>(Array.isArray(e)?e=Vt(e,"int32"):e=e.toInt(),zn(r,e,t)))}function ju(r){return O(r,r)}function i_(r,e,t){let o=e.shape;if(e.rank!==1&&e.rank!==r)throw new L(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${r}`);if(r===5){if(t==="channelsFirst")return o.length===1?e.reshape([1,o[0],1,1,1]):e.reshape([1,o[3],o[0],o[1],o[2]]);if(t==="channelsLast")return o.length===1?e.reshape([1,1,1,1,o[0]]):e.reshape([1].concat(o))}else if(r===4){if(t==="channelsFirst")return o.length===1?e.reshape([1,o[0],1,1]):e.reshape([1,o[2],o[0],o[1]]);if(t==="channelsLast")return o.length===1?e.reshape([1,1,1,o[0]]):e.reshape([1].concat(o))}else if(r===3){if(t==="channelsFirst")return o.length===1?e.reshape([1,o[0],1]):e.reshape([1,o[1],o[0]]);if(t==="channelsLast")return o.length===1?e.reshape([1,1,o[0]]):e.reshape([1].concat(o))}else if(r<3)return e;throw new L(`Unsupported input rank by biasAdd: ${e.rank}`)}function ao(r,e,t){return V(()=>(t==null&&(t=Zr()),$t(t),r.add(i_(r.rank,e,t))))}function FT(r,e=1){if(e!==1)throw new Ne(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Is(r)}function OT(r){return V(()=>me(r,It(r).add(1)))}function wg(r,e,t,o){return V(()=>zw(r,e,t,o))}function PT(r){return V(()=>{let e=Q(.5,O(.2,r));return sr(e,0,1)})}function ul(r,e,t=!1){return t?r():e()}var MT=["fanIn","fanOut","fanAvg"],LT=["normal","uniform","truncatedNormal"];function Uj(r){zi(MT,"FanMode",r)}function jj(r){zi(LT,"Distribution",r)}var lo=class extends J.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},uf=class extends lo{apply(e,t){return ht(e,t)}};uf.className="Zeros";J.registerClass(uf);var Hu=class extends lo{apply(e,t){return Ir(e,t)}};Hu.className="Ones";J.registerClass(Hu);var cf=class extends lo{constructor(e){super();if(typeof e!="object")throw new L(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new L(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return V(()=>O(ue(this.value),Ir(e,t)))}getConfig(){return{value:this.value}}};cf.className="Constant";J.registerClass(cf);var pf=class extends lo{constructor(e){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return As(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};pf.className="RandomUniform";J.registerClass(pf);var mf=class extends lo{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ne(`randomNormal does not support dType ${t}.`);return up(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};mf.className="RandomNormal";J.registerClass(mf);var ff=class extends lo{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ne(`truncatedNormal does not support dType ${t}.`);return Lu(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};ff.className="TruncatedNormal";J.registerClass(ff);var df=class extends lo{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return V(()=>{if(e.length!==2||e[0]!==e[1])throw new L("Identity matrix initializer can only be used for 2D square matrices.");return O(this.gain,Hc(e[0]))})}getConfig(){return{gain:this.gain}}};df.className="Identity";J.registerClass(df);function Hj(r,e="channelsLast"){let t,o;if($t(e),r.length===2)t=r[0],o=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(e==="channelsFirst"){let n=Kn(r,2);t=r[1]*n,o=r[0]*n}else if(e==="channelsLast"){let n=Kn(r,0,r.length-2);t=r[r.length-2]*n,o=r[r.length-1]*n}}else{let n=Kn(r);t=Math.sqrt(n),o=Math.sqrt(n)}return[t,o]}var Lr=class extends lo{constructor(e){super();if(e.scale<0)throw new L(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,Uj(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,jj(this.distribution),this.seed=e.seed}apply(e,t){let o=Hj(e),n=o[0],s=o[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,n):this.mode==="fanOut"?a/=Math.max(1,s):a/=Math.max(1,(n+s)/2),this.distribution==="normal"){let i=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ne(`${this.getClassName()} does not support dType ${t}.`);return Lu(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*a);return As(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Lr.className="VarianceScaling";J.registerClass(Lr);var cp=class extends Lr{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Lr.className}};cp.className="GlorotUniform";J.registerClass(cp);var pp=class extends Lr{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Lr.className}};pp.className="GlorotNormal";J.registerClass(pp);var mp=class extends Lr{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Lr.className}};mp.className="HeNormal";J.registerClass(mp);var fp=class extends Lr{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Lr.className}};fp.className="HeUniform";J.registerClass(fp);var dp=class extends Lr{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Lr.className}};dp.className="LeCunNormal";J.registerClass(dp);var hp=class extends Lr{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Lr.className}};hp.className="LeCunNormal";J.registerClass(hp);var hf=class extends lo{constructor(e){super();if(this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Ne("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return V(()=>{if(e.length<2)throw new Ne("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let o=e[0]>e[1]?[e[1],e[0]]:e,n=up(o,0,1,"float32"),s=jw.gramSchmidt(n);return e[0]>e[1]&&(s=s.transpose()),O(this.gain,s)})}getConfig(){return{gain:this.gain,seed:this.seed}}};hf.className="Orthogonal";J.registerClass(hf);var zT={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function BT(r,e={}){return Li(r,J.SerializationMap.getMap().classNameMap,e,"initializer")}function kt(r){return sp(r)}function pt(r){if(typeof r=="string"){let e=r in zT?zT[r]:r;if(e==="GlorotNormal")return new pp;if(e==="GlorotUniform")return new cp;if(e==="HeNormal")return new mp;if(e==="HeUniform")return new fp;if(e==="LeCunNormal")return new dp;if(e==="LeCunUniform")return new hp;{let t={};return t.className=e,t.config={},BT(t)}}else return r instanceof lo?r:BT(r)}function qj(){return new uf}function Kj(){return new Hu}function Xj(r){return new cf(r)}function Yj(r){return new pf(r)}function Zj(r){return new mf(r)}function Jj(r){return new ff(r)}function Qj(r){return new df(r)}function eH(r){return new Lr(r)}function tH(r){return new cp(r)}function rH(r){return new pp(r)}function oH(r){return new mp(r)}function nH(r){return new fp(r)}function sH(r){return new dp(r)}function iH(r){return new hp(r)}function aH(r){return new hf(r)}var W_={};Je(W_,{Layer:()=>Pe,RNN:()=>mo,RNNCell:()=>yl,activation:()=>Iq,add:()=>Fq,alphaDropout:()=>xK,average:()=>Oq,averagePooling1d:()=>U_,averagePooling2d:()=>j_,averagePooling3d:()=>H_,avgPool1d:()=>Uq,avgPool2d:()=>Hq,avgPool3d:()=>Kq,avgPooling1d:()=>jq,avgPooling2d:()=>qq,avgPooling3d:()=>Xq,batchNormalization:()=>Vq,bidirectional:()=>uK,concatenate:()=>Pq,conv1d:()=>xq,conv2d:()=>yq,conv2dTranspose:()=>bq,conv3d:()=>wq,convLstm2d:()=>sK,convLstm2dCell:()=>iK,cropping2D:()=>kq,dense:()=>Nq,depthwiseConv2d:()=>Cq,dot:()=>Bq,dropout:()=>Sq,elu:()=>pq,embedding:()=>Rq,flatten:()=>Aq,gaussianDropout:()=>gK,gaussianNoise:()=>hK,globalAveragePooling1d:()=>Yq,globalAveragePooling2d:()=>Zq,globalMaxPool1d:()=>pK,globalMaxPool2d:()=>mK,globalMaxPooling1d:()=>_1,globalMaxPooling2d:()=>k1,gru:()=>Qq,gruCell:()=>eK,input:()=>Gg,inputLayer:()=>cq,layerNormalization:()=>Gq,leakyReLU:()=>fq,lstm:()=>tK,lstmCell:()=>rK,masking:()=>yK,maxPool1d:()=>fK,maxPool2d:()=>dK,maxPooling1d:()=>v1,maxPooling2d:()=>C1,maxPooling3d:()=>Jq,maximum:()=>Mq,minimum:()=>Lq,multiply:()=>zq,permute:()=>$q,prelu:()=>dq,reLU:()=>mq,repeatVector:()=>Eq,reshape:()=>Dq,rnn:()=>aK,separableConv2d:()=>_q,simpleRNN:()=>oK,simpleRNNCell:()=>nK,softmax:()=>hq,spatialDropout1d:()=>Tq,stackedRNNCells:()=>lK,thresholdedReLU:()=>gq,timeDistributed:()=>cK,upSampling2d:()=>vq,zeroPadding2d:()=>Wq});var lH=0;function _g(){return lH++}var kg={};function cl(r=""){return r in kg||(kg[r]=0),kg[r]+=1,r+kg[r].toString()}function vg(r){return Array.isArray(r)&&Array.isArray(r[0])}function gp(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function Fe(r){let e;if(Array.isArray(r)){if(r.length!==1)throw new L(`Expected Tensor length to be 1; got ${r.length}`);e=r[0]}else e=r;return e}function Ze(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new L(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function xp(r){let e=0;for(let t of r)t.shape.length===0?e+=1:e+=t.shape.reduce((o,n)=>o*n);return e}var VT="Variable",gf=class{constructor(e,t="float32",o=VT,n=!0,s=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=_g(),o=o==null?VT:o,this.originalName=gg(o),this.name=xg(this.originalName),this.trainable_=n,this.constraint=s,this.val=Ow(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),uH(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function uH(r,e){if(r.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(e.shape))}function xf(r){return r.map(e=>e.read())}function yp(r){r.forEach(e=>{e[0].write(e[1])})}var Nt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},zr=class{constructor(e,t,o,n,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=o,this.inputs=n,this.callArgs=s,this.outputTensorIndex=i,this.id=_g(),a!=null&&(this.originalName=gg(a),this.name=xg(this.originalName)),this.rank=t.length}},cH=0,pl=class{constructor(e,t){this.callArgs=t,this.id=cH++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let o of e.inboundLayers)o!=null&&o.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},pH=0,Pe=class extends J.Serializable{constructor(e={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=pH++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let o=this.getClassName();t=jn(o)+"_"+cl(o)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let o;if(e.batchInputShape!=null)o=e.batchInputShape;else if(e.inputShape!=null){let s=null;e.batchSize!=null&&(s=e.batchSize),o=[s].concat(e.inputShape)}this.batchInputShape=o;let n=e.dtype;n==null&&(n=e.inputDType),n==null&&(n="float32"),this.dtype=n}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Pr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new L(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return hr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return hr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Io(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Io(`Layer ${this.name} is not connected, no input to return.`);return hr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Io(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Io(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return hr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=xt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=xt(this.inputSpec);if(e.length!==t.length)throw new L(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let o=0;o<e.length;o++){let n=e[o],s=t[o];if(s==null)continue;let a=n.rank;if(s.ndim!=null&&a!==s.ndim)throw new L(`Input ${o} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(s.maxNDim!=null&&a>s.maxNDim)throw new L(`Input ${o} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(s.minNDim!=null&&a<s.minNDim)throw new L(`Input ${o} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(s.dtype!=null&&n.dtype!==s.dtype)throw new L(`Input ${o} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${n.dtype}.`);if(s.axes){let i=n.shape;for(let l in s.axes){let u=Number(l),c=s.axes[l],p=u>=0?i[u]:i[i.length+u];if(c!=null&&[c,null].indexOf(p)===-1)throw new L(`Input ${o} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${c} but got shape ${i}.`)}}if(s.shape!=null)for(let i=0;i<s.shape.length;++i){let l=s.shape[i],u=n.shape[i];if(l!=null&&u!=null&&l!==u)throw new L(`Input ${o} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${n.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let o=xt(e),n=!0;for(let a of o)if(!(a instanceof zr)){n=!1;break}let s=!0;for(let a of o)if(a instanceof zr){s=!1;break}if(n===s)throw new L("Arguments to apply() must be all SymbolicTensors or all Tensors");return $s(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let i of xt(e))a.push(i.shape);this.build(hr(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let a=this.call(e,t),i=xt(a),l=[];for(let u of i)o.indexOf(u)!==-1&&(u=u.clone()),l.push(u);if(a=hr(l),this.activityRegularizer!=null)throw new Ne("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=mH(e),i=this.computeOutputShape(a),l,u=fH(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?l=i.map((c,p)=>new zr(u,c,this,xt(e),t,this.name,p)):l=new zr(u,i,this,xt(e),t,this.name),this.addInboundNode(e,l,null,null,a,i,t),this._refCount++,this.activityRegularizer!=null)throw new Ne("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((o,n)=>{o!=null&&e[n]!=null&&e[n]!==o&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Io(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let o=JSON.stringify(t.outputShapes);e.indexOf(o)===-1&&e.push(o)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Io(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Pr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return xp(this.weights)}build(e){this.built=!0}getWeights(e=!1){return xf(e?this.trainableWeights:this.weights)}setWeights(e){V(()=>{let t=this.weights;if(t.length!==e.length)throw new L(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let o=[],n=xf(t);for(let s=0;s<n.length;++s){let a=n[s],i=t[s],l=e[s];if(!x.arraysEqual(a.shape,l.shape))throw new L(`Layer weight shape ${a.shape} not compatible with provided weight shape ${l.shape}`);o.push([i,l])}yp(o)})}addWeight(e,t,o,n,s,a,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new L(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),o==null&&(o="float32"),this.fastWeightInitDuringBuild&&(n=pt("zeros"));let l=n.apply(t,o),u=new gf(l,o,e,a,i);return l.dispose(),s!=null&&this.addLoss(()=>s.apply(u.read())),a==null&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=xt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(o=>{if(o!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,o,n,s,a,i=null){let l=xt(e);t=xt(t),o=xt(o),n=xt(n),s=gp(s),a=gp(a);let u=[],c=[],p=[];for(let m of l)u.push(m.sourceLayer),c.push(m.nodeIndex),p.push(m.tensorIndex);new pl({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:p,inputTensors:l,outputTensors:t,inputMasks:o,outputMasks:n,inputShapes:s,outputShapes:a},i);for(let m=0;m<t.length;m++)t[m].sourceLayer=this,t[m].nodeIndex=this.inboundNodes.length-1,t[m].tensorIndex=m}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount==0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function mH(r){r=xt(r);let e=[];for(let t of r)e.push(t.shape);return hr(e)}function fH(r){return"float32"}function l_(r,e,t){if((e==null||t!=null&&t>0)&&(e=r.sourceLayer,t=r.nodeIndex),e.inboundNodes.length===0)return[r];{let o=e.inboundNodes[t];if(o.inboundLayers.length===0)return o.inputTensors;{let n=[];for(let s=0;s<o.inboundLayers.length;s++){let a=o.inputTensors[s],i=o.inboundLayers[s],l=o.nodeIndices[s],u=l_(a,i,l);for(let c of u)n.indexOf(c)===-1&&n.push(c)}return n}}}var Bi=class extends Pe{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:cl("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new L("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new L("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new L("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let o=e.dtype||"float32";this.batchInputShape=t,this.dtype=o,this.inputSpec=[{shape:t}];let n=new zr(this.dtype,this.batchInputShape,this,[],{},this.name);n.nodeIndex=0,n.tensorIndex=0,new pl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[n],outputTensors:[n],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new L(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};Bi.className="InputLayer";J.registerClass(Bi);function Cg(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new L("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=r.batchShape;r.shape!=null&&e==null&&(e=[null].concat(r.shape));let t=r.dtype;return t==null&&(t="float32"),new Bi({batchInputShape:e,name:r.name,dtype:t,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}async function Vi(r){if(r==null)return;let e=[],t=[],o=[];for(let n in r){let s=r[n];if(typeof s!="number"){let a=s;e.push(a.data()),t.push(n),o.push(a)}}if(e.length>0){let n=await Promise.all(e);for(let s=0;s<n.length;++s)r[t[s]]=n[s][0];Te(o)}}function Ig(r){if(r!=null)for(let e in r){let t=r[e];typeof t!="number"&&t.dispose()}}var GT;(function(r){r[r.SILENT=0]="SILENT",r[r.VERBOSE=1]="VERBOSE"})(GT||(GT={}));var dH=125,ml=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},Ng=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let o of this.callbacks)await o.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let o of this.callbacks)await o.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let o of this.callbacks)await o.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let o of this.callbacks)await o.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},WT=class extends ml{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let o=t.size==null?0:t.size;this.seen+=o;for(let n in t){let s=t[n];if(typeof s=="number")this.totals.hasOwnProperty(n)||(this.totals[n]=0),this.totals[n]=this.totals[n]+s*o;else{let a;n in this.totals?a=this.totals[n]:this.totals[n]=0;let i=V(()=>Q(this.totals[n],O(s,o)));this.totals[n]=i,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let o of this.params.metrics)this.totals[o]!=null&&(typeof this.totals[o]=="number"?t[o]=this.totals[o]/this.seen:V(()=>{let n=O(me(1,this.seen),this.totals[o]);t[o]=n,this.totals[o].dispose(),Et(t[o])}))}},Sg=class extends ml{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let o in t)this.history[o]==null&&(this.history[o]=[]),this.history[o].push(t[o])}async syncData(){let e=[],t=[],o=[];for(let s in this.history){let a=this.history[s];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){let l=a[i];e.push(l.data()),t.push(s),o.push(i)}}let n=await Promise.all(e);for(let s=0;s<n.length;++s)this.history[t[s]][o[s]].dispose(),this.history[t[s]][o[s]]=n[s][0]}},Tg=class extends ml{constructor(e,t){super();if(this.currentEpoch=0,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=dH),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");x.isNumber(this.yieldEvery)&&(this.maybeWait=yT(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,o){let n=[];this.yield!=null&&(await Vi(o),n.push(this.yield(e,t,o))),n.push(Qm()),await Promise.all(n)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Vi(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let o=[];this.epochEnd!=null&&(await Vi(t),o.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&o.push(Qm()),await Promise.all(o)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Vi(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let o=[];this.batchEnd!=null&&(await Vi(t),o.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?o.push(Qm()):x.isNumber(this.yieldEvery)&&o.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(o)}async onTrainBegin(e){this.trainBegin!=null&&(await Vi(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Vi(e),await this.trainEnd(e))}};function Ag(r,e){return r==null&&(r={}),r instanceof ml?[r]:Array.isArray(r)&&r[0]instanceof ml?r:xt(r).map(o=>new Tg(o,e))}var uo=class{constructor(){}static registerCallbackConstructor(e,t){x.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),uo.checkForDuplicate(t),uo.constructors[e]==null&&(uo.constructors[e]=[]),uo.constructors[e].push(t)}static checkForDuplicate(e){for(let t in uo.constructors)uo.constructors[+t].forEach(n=>{if(n===e)throw new L("Duplicate callback constructor.")})}static clear(){uo.constructors={}}static createCallbacks(e){let t=[];for(let o in uo.constructors){let n=+o;e>=n&&t.push(...uo.constructors[n])}return t.map(o=>new o)}};uo.constructors={};function Eg(r,e,t,o,n,s,a,i,l){let u=new Sg,c=[new WT,...uo.createCallbacks(e)];r!=null&&c.push(...r),c.push(u);let p=new Ng(c);return p.setParams({epochs:t,initialEpoch:o,samples:n,steps:s,batchSize:a,verbose:e,doValidation:i,metrics:l}),{callbackList:p,history:u}}function Qr(r,e={},t=!1){return Li(r,J.SerializationMap.getMap().classNameMap,e,"layer",t)}function yf(r,e){return V(()=>{r.dtype!=="float32"&&(r=r.asType("float32"));let t=ge(ju(r),e,!0),o=va(t.shape,Zt()),n=gt(Yr(t,o));return me(r,n)})}function Gi(r,e){return V(()=>dt(ju(ce(e,r)),-1))}function bp(r,e){return V(()=>dt(It(ce(e,r)),-1))}function fl(r,e){return V(()=>{let t=ce(r,e),o=sr(It(r),Zt(),Number.MAX_VALUE),n=It(me(t,o));return O(100,dt(n,-1))})}function hH(r,e){return V(()=>{let t=sr(e,Zt(),Number.MAX_VALUE),o=ar(Q(1,t)),n=sr(r,Zt(),Number.MAX_VALUE),s=ar(Q(1,n));return dt(ju(ce(o,s)),-1)})}function gH(r,e){return V(()=>{let t=Yr(0,ce(1,O(r,e)));return dt(ju(t),-1)})}function xH(r,e){return V(()=>{let t=Yr(0,ce(1,O(r,e)));return dt(t,-1)})}function yH(r,e){return V(()=>{let t=ge(O(r,e),-1),o=lr(O(ce(1,r),e),-1);return Yr(0,Q(1,ce(o,t)))})}function bH(r,e){return V(()=>{let t=Math.log(2),o=ce(e,r),n=ce(Q(o,Ss(O(-2,o))),t);return dt(n,-1)})}function qu(r,e,t=!1){return V(()=>{if(t)e=Aa(e);else{let o=ge(e,e.shape.length-1,!0);e=me(e,o)}return e=sr(e,Zt(),1-Zt()),He(ge(O(r.toFloat(),ar(e)),e.shape.length-1))})}function wp(r,e,t=!1){return V(()=>{let o=Ns($T(r)).toInt();e=sr(e,Zt(),1-Zt());let n=e.shape,s=vs(o,n[n.length-1]).reshape(n);return qu(s,e,t)})}function wH(r,e){if(!x.arraysEqual(r.shape,e.shape))throw new L(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(e.shape)}`);return V(()=>{let t=e.relu(),o=e.abs().neg();return t.sub(e.mul(r)).add(o.exp().log1p())})}function _p(r,e){return V(()=>{let t;return t=sr(e,Zt(),1-Zt()),t=ar(me(t,ce(1,t))),dt(wH(r,t),-1)})}function _H(r,e){return V(()=>{let t=sr(r,Zt(),1),o=sr(e,Zt(),1);return ge(O(r,ar(me(t,o))),-1)})}function kH(r,e){return V(()=>{let t=ar(Q(Zt(),e));return dt(ce(e,O(r,t)),-1)})}function bf(r,e){return V(()=>{let t=yf(r,-1),o=yf(e,-1),n=O(t,o);return He(ge(n,-1))})}var wf={meanSquaredError:Gi,meanAbsoluteError:bp,meanAbsolutePercentageError:fl,meanSquaredLogarithmicError:hH,squaredHinge:gH,hinge:xH,categoricalHinge:yH,logcosh:bH,categoricalCrossentropy:qu,sparseCategoricalCrossentropy:wp,binaryCrossentropy:_p,kullbackLeiblerDivergence:_H,poisson:kH,cosineProximity:bf};function Dg(r){if(typeof r=="string"){if(r in wf)return wf[r];let e=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new L(e)}else return r}function _f(r,e){return V(()=>{let t=O(.5,er(e)),o=Fa(Qt(e,t),r.dtype);return dt(vo(r,o),-1)})}function kf(r,e){return V(()=>Fa(vo(nl(r,-1),nl(e,-1)),"float32"))}function UT(r,e){return V(()=>dr(r.equal(1),e.equal(1)).sum().cast("float32"))}function vH(r,e){return V(()=>dr(r.equal(1),e.equal(0)).sum().cast("float32"))}function CH(r,e){return V(()=>dr(r.equal(0),e.equal(1)).sum().cast("float32"))}function u_(r,e){return V(()=>{let t=UT(r,e),o=CH(r,e),n=t.add(o);return Dt(Qt(n,0),t.div(n),0).cast("float32")})}function jT(r,e){return V(()=>{let t=UT(r,e),o=vH(r,e),n=t.add(o);return Dt(Qt(n,0),t.div(n),0).cast("float32")})}function $g(r,e){return _p(r,e)}function Rg(r,e){return r.rank===e.rank&&(r=r.squeeze([r.rank-1])),e=e.argMax(-1),e.dtype!==r.dtype&&(e=e.asType(r.dtype)),vo(r,e).asType("float32")}var IH=Gi,NH=Gi,SH=bp,TH=bp,AH=fl,EH=fl,vf=qu,DH=bf,c_=wp,Fg={binaryAccuracy:_f,categoricalAccuracy:kf,precision:u_,categoricalCrossentropy:vf,sparseCategoricalCrossentropy:c_,mse:IH,MSE:NH,mae:SH,MAE:TH,mape:AH,MAPE:EH,cosine:DH};function HT(r){if(typeof r=="string"&&r in Fg)return Fg[r];if(typeof r!="string"&&r!=null)return r;throw new L(`Unknown metric ${r}`)}function Cf(r){if(Bo(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let e;for(let t of Object.keys(wf))if(wf[t]===r){e=t;break}if(e!==void 0)return e;for(let t of Object.keys(Fg))if(Fg[t]===r){e=t;break}return e!==void 0?e:r.name}}function qT(r){let e={Adagrad:()=>ll.adagrad(.01),Adadelta:()=>ll.adadelta(1,.95,Zt()),Adam:()=>ll.adam(.001,.9,.999,Zt()),Adamax:()=>ll.adamax(.002,.9,.999,Zt(),0),RMSProp:()=>ll.rmsprop(.001,.9,0,Zt()),SGD:()=>ll.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,r in e)return e[r]();throw new L(`Unknown Optimizer ${r}`)}var KT=1*1024*1024;function m_(r,e,t=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!p_(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){let o=JSON.stringify(r);o.length>KT&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${o.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${KT}.`)}}function p_(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let e=Object.keys(r);for(let t of e)if(typeof t!="string"||!p_(r[t]))return!1;return!0}else if(Array.isArray(r)){for(let e of r)if(!p_(e))return!1;return!0}else return!1;else{let e=typeof r;return e==="string"||e==="number"||e==="boolean"}}function XT(r,e,t,o=console.log){let n=RH(r),s=["Layer (type)","Output shape","Param #"];n?(e=e||65,t=t||[.45,.85,1]):(e=e||98,t=t||[.33,.55,.67,1]),t[t.length-1]<=1&&(t=t.map(c=>Math.floor(e*c)));let a;if(!n){s.push("Receives inputs"),a=[];for(let c in r.nodesByDepth)a.push(...r.nodesByDepth[c])}o("_".repeat(e)),Og(s,t,o),o("=".repeat(e));let i=r.layers;for(let c=0;c<i.length;++c)n?FH(i[c],t,o):OH(i[c],t,a,o),o((c===i.length-1?"=":"_").repeat(e));r.checkTrainableWeightsConsistency();let l=$H(r),u=xp(r.nonTrainableWeights);o(`Total params: ${l+u}`),o(`Trainable params: ${l}`),o(`Non-trainable params: ${u}`),o("_".repeat(e))}function $H(r){let e;return r.collectedTrainableWeights!=null?e=xp(r.collectedTrainableWeights):e=xp(r.trainableWeights),e}function RH(r){let e=!0,t=[],o=[];for(let n in r.nodesByDepth)t.push(r.nodesByDepth[n]);for(let n of t){if(n.length>1||n.length===1&&n[0].inboundLayers.length>1){e=!1;break}o.push(...n)}if(e)for(let n of r.layers){let s=!1;for(let a of n.inboundNodes)if(o.indexOf(a)!==-1)if(s){e=!1;break}else s=!0;if(!e)break}return e}function Og(r,e,t=console.log){let o="";for(let n=0;n<r.length;++n)n>0&&(o=o.slice(0,o.length-1)+" "),o+=r[n],o=o.slice(0,e[n]),o+=" ".repeat(e[n]-o.length);t(o)}function FH(r,e,t){let o;try{o=JSON.stringify(r.outputShape)}catch(i){o="multiple"}let n=r.name,s=r.getClassName(),a=[`${n} (${s})`,o,r.countParams().toString()];Og(a,e,t)}function OH(r,e,t,o){let n;try{n=JSON.stringify(r.outputShape)}catch(c){n="multiple"}let s=[];for(let c of r.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(c)===-1))for(let p=0;p<c.inboundLayers.length;++p){let m=c.inboundLayers[p].name,f=c.nodeIndices[p],d=c.tensorIndices[p];s.push(`${m}[${f}][${d}]`)}let a=r.name,i=r.getClassName(),l=s.length===0?"":s[0],u=[`${a} (${i})`,n,r.countParams().toString(),l];Og(u,e,o);for(let c=1;c<s.length;++c)Og(["","","",s[c]],e,o)}function YT(r,e,t){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&e===0&&typeof t=="string"}function Ku(r,e){if(r===null)return null;if(typeof r=="string")return Ra(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],o=r.length;for(let n=0;n<o;++n){let s=r[n];YT(e,n,s)?t.push(s):t.push(Ku(s,e))}return t}else{let t={};for(let o of Object.keys(r)){let n=r[o];if(o==="name"&&typeof n=="string")t[o]=n;else{let s=Ra(o);t[s]=Ku(n,s)}}return t}}function Pg(r,e){if(r==null)return null;if(typeof r=="string")return jn(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],o=r.length;for(let n=0;n<o;++n){let s=r[n];YT(e,n,s)?t.push(s):t.push(Pg(s,e))}return t}else{let t={};for(let o of Object.keys(r)){let n=r[o],s=jn(o);(o==="name"||o==="className")&&typeof n=="string"?t[s]=n:t[s]=Pg(n,o)}return t}}var dl="3.2.0";function PH(r,e){if(r.dtype==null||r.dtype===e.dtype)return e;try{return ne(e,r.dtype)}catch(t){throw new L(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var Fs=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Fs)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,o){if(this.id2Value[e.id]==null)this.id2Value[e.id]=PH(e,t),this.name2Id[e.name]=e.id,o!=null&&(this.id2Mask[e.id]=o);else throw new L(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof zr){if(this.id2Value[e.id]==null)throw new L(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new L(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof zr){if(this.id2Value[e.id]==null)throw new L(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new L(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Te(this.id2Mask)}},f_={},ZT={};function Xu(r,e,t,o){let n=t==null?!1:t.training,s=Array.isArray(r),a=s?r:[r],i=a.map(d=>d.name),l=[],u=e.names();for(let d of i)u.indexOf(d)!==-1?l.push(e.getValue(d)):l.push(null);o!=null&&(o.maxNumTensors=-Infinity,o.minNumTensors=Infinity);let c=i.join(",")+"|"+e.names().join(","),p,m;if(f_[c]==null){let d=MH(a,e);p=d.sorted,m=d.recipientCounts,f_[c]=p,ZT[c]=m}p=f_[c],m={},n||Object.assign(m,ZT[c]);let f=new Fs(e);for(let d=0;d<p.length;++d){if(o!=null){let P=Wc().numTensors;P>o.maxNumTensors&&(o.maxNumTensors=P),P<o.minNumTensors&&(o.minNumTensors=P)}let h=p[d],g=h.sourceLayer;if(g instanceof Bi)continue;let y=[],b=[],w=[],_=!1;for(let P of h.inputs){let B=f.getValue(P),G=f.getMask(P);y.push(B),b.push(G),G!=null&&(_=!0),n||(m[P.name]--,m[P.name]===0&&!e.hasKey(P)&&i.indexOf(P.name)===-1&&!B.isDisposed&&P.sourceLayer.stateful!==!0&&w.push(B))}_&&(t=t||{},t.mask=b[0]);let C=xt(g.apply(y,t)),D=null;g.supportsMasking&&(D=g.computeMask(y,b));let T=LH(h),R=Array.isArray(T)?T:[T];for(let P=0;P<R.length;++P){f.hasKey(R[P])||f.add(R[P],C[P],Array.isArray(D)?D[0]:D);let B=i.indexOf(R[P].name);B!==-1&&(l[B]=C[P])}n||Te(w)}return f.disposeMasks(),s?l:l[0]}function MH(r,e){x.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let t=[],o={};if(r.length===1){let n=JT(r[0],e);t=n.sorted,o=n.recipientMap}else{let n=new Set;for(let s of r){let{sorted:a,recipientMap:i}=JT(s,e);for(let l of a)n.has(l.name)||(t.push(l),n.add(l.name));for(let l in i)o[l]==null&&(o[l]=new Set),i[l].forEach(u=>o[l].add(u))}}return{sorted:t,recipientCounts:zH(o)}}function zH(r){let e={};for(let t in r)e[t]=r[t].size;return e}function JT(r,e){let t=new Set,o=[],n={};for(let i of e.names())t.add(i);let s=[],a=[];for(s.push(r);s.length>0;){let i=s[s.length-1];if(t.has(i.name)){s.pop();continue}let l=a[a.length-1]===s.length-1;if(i.inputs.length===0||l)s.pop(),o.push(i),t.add(i.name),l&&a.pop();else{a.push(s.length-1);for(let u of i.inputs)n[u.name]==null&&(n[u.name]=new Set),n[u.name].add(i.name),!t.has(u.name)&&s.push(u)}}return{sorted:o,recipientMap:n}}function LH(r){let e;if(r.sourceLayer.inboundNodes.length===1)e=r.sourceLayer.output;else{let t=null;for(let o=0;o<r.sourceLayer.inboundNodes.length;++o)for(let n of r.sourceLayer.inboundNodes[o].outputTensors)if(n.id===r.id){t=o;break}e=r.sourceLayer.getOutputAt(t)}return e}var Vo=class extends Pe{constructor(e){super({});if(this.containerNodes=new Set,this.name=e.name,this.name==null){let b=this.getClassName().toLowerCase();this.name=cl(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],qn(this.inputs).length!==this.inputs.length)throw new L(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);qn(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let b of this.outputs){let w=b.sourceLayer,_=b.nodeIndex,C=b.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(_),this.outputLayersTensorIndices.push(C)}for(let b of this.inputs){let w=b.sourceLayer,_=b.nodeIndex,C=b.tensorIndex;Bo(_===0,"input layer has >1 nodes"),Bo(C===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(_),this.inputLayersTensorIndices.push(C)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){let w=this.inputLayers[b];if(!(w instanceof Bi))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(let b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);let t={},o={},n={},s={},a={},i=[],l=(b,w,_,C,D,T)=>{(C==null||D==null||T==null)&&(C=b.sourceLayer,D=b.nodeIndex,T=b.tensorIndex);let R=C.inboundNodes[D];if(_.indexOf(R)!==-1)throw new Pr(`The tensor ${b.name} at layer "${C.name}" is part of a cycle.`);if(w.indexOf(R)!==-1)return;this.containerNodes.add(Vo.nodeKey(C,D)),C.id in a||(a[C.id]=Object.keys(a).length),_.indexOf(R)===-1&&_.push(R);let P=R.inboundLayers.length;for(let B=0;B<P;B++){let G=R.inputTensors[B],U=R.inboundLayers[B],j=R.nodeIndices[B],H=R.tensorIndices[B];l(G,w,_,U,j,H)}for(w.push(R);_.indexOf(R)>=0;)_.splice(_.indexOf(R),1);i.push(R)},u=[],c=[];for(let b of this.outputs)l(b,u,c);let p=i.slice().reverse();for(let b of p){o[b.id]=b,b.id in t||(t[b.id]=0);let w=t[b.id],_=n[b.outboundLayer.id]==null?0:n[b.outboundLayer.id];w=Math.max(w,_),n[b.outboundLayer.id]=w,s[b.outboundLayer.id]=b.outboundLayer,t[b.id]=w;for(let C=0;C<b.inboundLayers.length;C++){let D=b.inboundLayers[C],T=b.nodeIndices[C],R=D.inboundNodes[T],P=t[R.id]==null?0:t[R.id];t[R.id]=Math.max(w+1,P),o[R.id]=R}}let m={};for(let b in t){let w=t[b];w in m||(m[w]=[]),m[w].push(o[b])}let f={};for(let b in n){let w=n[b];w in f||(f[w]=[]),f[w].push(s[b])}let d=Object.keys(f).map(b=>parseInt(b,10)).sort(tf);this.layers=[];for(let b of d){let w=f[b];w.sort((_,C)=>{let D=a[_.id],T=a[C.id];return D<T?-1:D>T?1:0});for(let _ of w)_ instanceof Vo&&this.internalContainerRefs.push(_),this.layers.push(_)}this.layersByDepth=f,d=Object.keys(m).map(b=>parseInt(b,10)).sort(tf);let h=this.inputs.slice(),g=[];for(let b of d)for(let w of m[b]){let _=w.outboundLayer;if(_!=null){for(let C of w.inputTensors)if(h.indexOf(C)===-1)throw new Pr(`Graph disconnected: cannot obtain value for tensor ${C} at layer "${_.name}". The following previous layers were accessed without issue: ${g}`);for(let C of w.outputTensors)h.push(C);g.push(_.name)}}this.nodesByDepth=m;let y=this.layers.map(b=>b.name);for(let b of y){let w=y.filter(_=>_===b).length;if(w!==1)throw new Pr(`The name "${b}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new pl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(o=>o.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new L("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let o of this.layers)t.push(...o.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let o={},n=0;for(let a of this.layers)for(let i of a.weights){if(o[i.originalName]!=null)throw new L(`Duplicate weight name: ${i.originalName}`);o[i.originalName]=i,n++}let s=[];for(let a in e){let i=a;if(o[a]==null){let l=a.split("/");i=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(o[i]!=null)s.push([o[i],e[a]]);else if(t)throw new L(`Provided weight data has no target variable: ${a}`);delete o[i]}if(t){let a=[];for(let i in o)a.push(i);if(a.length>0)throw new L(`${a.length} of ${n} weights are not set: ${a}`)}yp(s)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${dl}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let o=Pg(this.updatedConfig());return t?JSON.stringify(o):o}call(e,t){return V(()=>{e=xt(e);let o=new Fs;for(let n=0;n<this.inputs.length;++n)o.add(this.inputs[n],e[n]);return Xu(this.outputs,o,t)})}computeMask(e,t){return V(()=>{e=xt(e);let o;return t==null?o=Un(null,e.length):o=xt(t),this.runInternalGraph(e,o)[1]})}computeOutputShape(e){let t=gp(e);if(t.length!==this.inputLayers.length)throw new L(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let o={};for(let i=0;i<t.length;i++){let l=this.inputLayers[i],u=t[i],c=l.name+"_0_0";o[c]=u}let n=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(tf);if(n.length>1)for(let i of n){let l=this.nodesByDepth[i];for(let u of l){let c=u.outboundLayer;if(this.inputLayers.map(h=>h.id).indexOf(c.id)!==-1)continue;let p=[];for(let h=0;h<u.inboundLayers.length;h++){let g=u.inboundLayers[h],y=u.nodeIndices[h],b=u.tensorIndices[h],w=`${g.name}_${y}_${b}`,_=o[w];p.push(_)}let m=c.computeOutputShape(hr(p)),f=gp(m),d=c.inboundNodes.indexOf(u);for(let h=0;h<f.length;h++){let g=`${c.name}_${d}_${h}`;o[g]=f[h]}}}let s=[],a=[];for(let i=0;i<this.outputLayers.length;i++){let l=this.outputLayers[i],u=this.outputLayersNodeIndices[i],c=this.outputLayersTensorIndices[i],p=`${l.name}_${u}_${c}`;a.push(p)}for(let i=0;i<a.length;i++){let l=a[i];Bo(l in o),s.push(o[l])}return hr(s)}runInternalGraph(e,t){t==null&&(t=Un(null,e.length));let o={};for(let l=0;l<this.inputs.length;++l){let u=this.inputs[l],c=e[l],p=t[l];o[u.id]=[c,p]}let n=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(tf);for(let l of n){let u=this.nodesByDepth[l];for(let c of u){let p=c.outboundLayer,m=c.inputTensors,f=c.outputTensors,d=new Array;for(let h of m)h.id in o&&d.push(o[h.id]);if(d.length===m.length){let h={},g,y,b,w;if(c.callArgs!=null&&(h=c.callArgs),d.length===1){let[_,C]=d[0];h.mask==null&&(h.mask=C),b=xt(p.call(_,h)),w=xt(p.computeMask(_,C)),g=[_],y=[C]}else g=d.map(_=>_[0]),y=d.map(_=>_[1]),h.mask==null&&(h.mask=y),b=xt(p.call(g,h)),w=xt(p.computeMask(g,y));if(p.activityRegularizer)throw new Ne("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let _=0;_<f.length;++_){let C=f[_],D=b[_],T=w[_];o[C.id]=[D,T]}}}}let s=[],a=[],i=[];for(let l of this.outputs){Bo(l.id in o,`Could not compute output ${l.name} : ${l.id}`);let[u,c]=o[l.id];i.push(u.shape),s.push(u),a.push(c)}return[s,a,i]}buildNodeConversionMap(e){let t={},o;for(let n of this.layers){o=n instanceof Vo?1:0;for(let s=0;s<n.inboundNodes.length;s++){let a=Vo.nodeKey(n,s);this.containerNodes.has(a)&&(t[a]=o,o+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new L(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new L("Provide either a layer name or layer index");for(let o of this.layers)if(o.name===e)return o;throw new L(`No such layer: ${e}`)}calculateLosses(){return V(()=>{let e=[];for(let t of this.layers)for(let o=0;o<t.inboundNodes.length;++o){let n=Vo.nodeKey(t,o);this.containerNodes.has(n)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),o=[];for(let a of this.layers){let i=a.getClassName(),l=a.getConfig(),u=[];for(let p=0;p<a.inboundNodes.length;p++){let m=a.inboundNodes[p],f=Vo.nodeKey(a,p),d={};if(this.containerNodes.has(f)){if(m.callArgs)try{JSON.stringify(m.callArgs),d=m.callArgs}catch(h){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${m.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),d={}}if(m.inboundLayers.length>0){let h=[];for(let g=0;g<m.inboundLayers.length;g++){let y=m.inboundLayers[g],b=m.nodeIndices[g],w=m.tensorIndices[g],_=Vo.nodeKey(y,b),C=t[_];C==null&&(C=0),h.push([y.name,C,w,d])}u.push(h)}}}let c={};c.name=a.name,c.className=i,c.config=l,c.inboundNodes=u,o.push(c)}e.layers=o;let n=[];for(let a=0;a<this.inputLayers.length;a++){let i=this.inputLayers[a],l=this.inputLayersNodeIndices[a],u=Vo.nodeKey(i,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);let p=this.inputLayersTensorIndices[a];n.push([i.name,c,p])}e.inputLayers=n;let s=[];for(let a=0;a<this.outputLayers.length;a++){let i=this.outputLayers[a],l=this.outputLayersNodeIndices[a],u=Vo.nodeKey(i,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);let p=this.outputLayersTensorIndices[a];s.push([i.name,c,p])}return e.outputLayers=s,e}static fromConfig(e,t,o={},n=!1){let s={},a={};function i(g,y){g.name in a?a[g.name].push(y):a[g.name]=[y]}function l(g,y){let b=[],w;for(let _ of y){let C=_[0],D=_[1],T=_[2];if(w=_[3]==null?{}:_[3],!(C in s)){i(g,y);return}let R=s[C];if(R.inboundNodes.length<=D){i(g,y);return}let P=R.inboundNodes[D];b.push(P.outputTensors[T])}b.length>0&&g.apply(hr(b),w)}function u(g){let y=g.name,b=Qr(g,t.customObjects!=null?t.customObjects:{});b.setFastWeightInitDuringBuild(n),s[y]=b,g.inboundNodes.forEach(_=>{if(!(_ instanceof Array))throw new L(`Corrupted configuration, expected array for nodeData: ${_}`);i(b,_)})}let c=t.name,p=t.layers;for(let g of p)u(g);for(;!gT(a);)for(let g of p){let y=s[g.name];if(y.name in a){let b=a[y.name];delete a[y.name];for(let w of b)l(y,w)}}let m=[],f=[],d=t.inputLayers;for(let g of d){let y=g[0],b=g[1],w=g[2];Bo(y in s);let C=s[y].inboundNodes[b].outputTensors;m.push(C[w])}let h=t.outputLayers;for(let g of h){let y=g[0],b=g[1],w=g[2];Bo(y in s);let C=s[y].inboundNodes[b].outputTensors;f.push(C[w])}return new e({inputs:m,outputs:f,name:c})}get stateful(){if(this._stateful)throw new L("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){V(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function BH(r,e,t){let o=e.length;if(r==null||Array.isArray(r)&&r.length===0)return e.map(n=>null);if(o===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&e[0]in r?[r[e[0]]]:[r];if(Array.isArray(r)){if(r.length!==o)throw new Error(`Provided ${t} is an array of ${r.length} element(s), but the model has ${o} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let n=[];return e.forEach(s=>{s in r?n.push(r[s]):n.push(null)}),n}else throw new Error(`The model has multiple (${o}) outputs, so ${t} must be either an array with ${o} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(r)}`)}function Mg(r,e){return BH(r,e,"classWeight")}async function Lg(r,e,t,o){if(e!=null||o!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){let n=V(()=>{if(r.shape.length===1)return r.clone();if(r.shape.length===2)if(r.shape[1]>1){let i=1;return r.argMax(i)}else{if(r.shape[1]===1)return r.reshape([r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await n.data());Te(n);let a=[];return s.forEach(i=>{if(t[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(t[i])}),Vt(a,"float32")}else return null}function QT(r,e){return O(r,e)}var VH=32;function t1(r,e){let t,o,n=e;t=n.xs,o=n.ys,x.assert(t!=null&&o!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);let s=e1("input",r.inputNames,t),a=e1("output",r.outputNames,o),i=s[0].shape[0];x.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),x.assert(a.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let l=0;l<s.length;l++)x.assert(s[l].shape[0]===i,()=>`Batch size mismatch: input ${r.inputNames[l]} has ${s[l].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);for(let l=0;l<a.length;l++)x.assert(a[l].shape[0]===i,()=>`Batch size mismatch: output ${r.outputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);return{xs:s,ys:a}}function e1(r,e,t){if(t instanceof Ve)return[t];if(Array.isArray(t))return x.assert(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${r} keys ${e}.`),t;{let o=[];for(let n of e){if(t[n]==null)throw new L(`The feature data generated by the dataset lacks the required ${r} key '${n}'.`);o.push(t[n])}return o}}function GH(r){if(r.length===3)throw new Ne("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}async function o1(r,e,t){let o=t.batchesPerEpoch!=null;if(x.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),x.assert(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),x.assert(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),x.assert(!o||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),x.assert(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let n=t.validationData!=null,s,a;if(n)if(r1(t.validationData))x.assert(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{let g=GH(t.validationData);s=g.xs,a=g.ys}let i=r.makeTrainFunction(),l=r.getDedupedMetricsNames(),u;n?u=l.slice().concat(l.map(g=>"val_"+g)):u=l.slice();let c=Ag(t.callbacks,t.yieldEvery),p=t.verbose==null?1:t.verbose,{callbackList:m,history:f}=Eg(c,p,t.epochs,null,null,WH(e,t),null,n,u);m.setModel(r),r.history=f,await m.onTrainBegin(),r.stopTraining_=!1;let d=t.initialEpoch==null?0:t.initialEpoch,h=await e.iterator();for(;d<t.epochs;){let g={};await m.onEpochBegin(d);let y=0,b=0;for(o||(h=await e.iterator());o?y<t.batchesPerEpoch:!0;){let w=await h.next();if(o&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){let{xs:_,ys:C}=t1(r,w.value),D={};D.batch=b,D.size=_[0].shape[0],await m.onBatchBegin(b,D);let T=[];if(t.classWeight!=null){let B=Mg(t.classWeight,r.outputNames);for(let G=0;G<B.length;++G)T.push(await Lg(C[G],null,B[G]))}let R=_.concat(C).concat(T),P=i(R);Te(R);for(let B=0;B<l.length;++B){let G=l[B],U=P[B];D[G]=U,Et(U)}await m.onBatchEnd(b,D),Ig(D),b++,y++}if(o?y>=t.batchesPerEpoch:w.done){if(n){let _;r1(t.validationData)?_=xt(await r.evaluateDataset(t.validationData,{batches:t.validationBatches})):_=xt(r.evaluate(s,a,{batchSize:t.validationBatchSize==null?VH:t.validationBatchSize,verbose:0}));for(let C=0;C<r.metricsNames.length;++C)g[`val_${r.metricsNames[C]}`]=_[C]}break}if(r.stopTraining_)break}if(await m.onEpochEnd(d,g),d++,r.stopTraining_)break}return await m.onTrainEnd(),await r.history.syncData(),r.history}finally{r.isTraining=!1}}function WH(r,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(r.size)&&(t=r.size),t}function r1(r){return typeof r.iterator=="function"}function UH(r){return typeof r.next=="function"}async function n1(r,e,t){t=t||{};let o=t.batches!=null,n=r.testFunction,s=[];if(t.verbose>0)throw new Ne("Verbose mode is not implemented yet.");x.assert(!o||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);let a=UH(e)?e:await e.iterator(),i=0,l=0;for(;o?l<t.batches:!0;){let u=await a.next();if(s=V(()=>{if(u.value){let{xs:c,ys:p}=t1(r,u.value),m=c.concat(p),f=V(()=>n(m));if(Te(m),l===0)for(let h=0;h<f.length;++h)s.push(ue(0));let d=m[0].shape[0];for(let h=0;h<f.length;++h){let g=f[h],y=s[h];s[h]=V(()=>Q(s[h],O(d,g))),l>0&&Te(y)}Te(f),i+=d,++l}return s}),u.done){o&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let c=s[u];s[u]=me(s[u],i),Te(c)}return hr(s)}function zg(r){x.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function kp(r,e,t){return r==null?[null]:Array.isArray(r)?r.map(o=>Pa(o,e,t-e)):Pa(r,e,t-e)}function Bg(r,e){return V(()=>r==null?null:Array.isArray(r)?r.map(t=>Bg(t,e)):bg(r,e.dtype==="int32"?e:e.toInt()))}function Vg(r,e){let t=[],o=0,n=null;for(;o<r;)n=o+e,n>=r&&(n=r),t.push([o,n]),o=n;return t}async function jH(r,e,t,o,n,s,a,i,l,u,c,p,m,f,d){n==null&&(n=32),s==null&&(s=1),c==null&&(c=!0),m==null&&(m=0);let h=!1;if(l!=null&&u!=null&&(h=!0),d!=null&&(h=!0,f==null))throw new L("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=r.checkNumSamples(t,n,f,"steps_per_epoch"),y;g!=null&&(y=Mr(0,g)),a==null&&(a=1);let{callbackList:b,history:w}=Eg(i,a,s,m,g,f,n,h,p);b.setModel(r),r.history=w,await b.onTrainBegin(),r.stopTraining_=!1;for(let _=m;_<s;++_){await b.onEpochBegin(_);let C={};if(f!=null)throw new Ne("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new Ne("batch shuffling is not implemneted yet");c&&x.shuffle(y);let D=Vt(y),T=Vg(g,n);for(let R=0;R<T.length;++R){let P={};if(await b.onBatchBegin(R,P),V(()=>{let B=T[R][0],G=T[R][1],U=Pa(D,B,G-B);P.batch=R,P.size=G-B;let j=Bg(t,U),H=e(j);for(let K=0;K<o.length;++K){let X=o[K],oe=H[K];P[X]=oe,Et(oe)}if(R===T.length-1&&h){let K=r.testLoop(l,u,n);for(let X=0;X<o.length;++X){let oe=o[X],Y=K[X];Et(Y),C["val_"+oe]=Y}}}),await b.onBatchEnd(R,P),Ig(P),r.stopTraining_)break}D.dispose()}if(await b.onEpochEnd(_,C),r.stopTraining_)break}return await b.onTrainEnd(),await r.history.syncData(),r.history}async function s1(r,e,t,o={}){if(r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;let n,s,a,i,l,u,c;try{let p=o.batchSize==null?32:o.batchSize;zg(p);let m=!1,f=await r.standardizeUserData(e,t,o.sampleWeight,o.classWeight,m,p);n=f[0],s=f[1],c=f[2];let d=!1,h;if(o.validationData!=null&&o.validationData.length>0){if(d=!0,o.validationData.length===2)a=o.validationData[0],i=o.validationData[1];else throw o.validationData.length===3?new Ne("validationData including sample weights is not supported yet."):new L(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${o.validationData} is invalid.`);let T=!0,R=await r.standardizeUserData(a,i,null,null,T,p);l=R[0],u=R[1],h=l.concat(u)}else if(o.validationSplit!=null&&o.validationSplit>0&&o.validationSplit<1){d=!0;let T=Math.floor(n[0].shape[0]*(1-o.validationSplit)),R=n[0].shape[0];l=kp(n,T,R),n=kp(n,0,T),u=kp(s,T,R),s=kp(s,0,T),h=l.concat(u)}else o.validationSteps!=null&&(d=!0);let g=n.concat(s).concat(c);r.checkTrainableWeightsConsistency();let y=r.makeTrainFunction(),b=r.getDedupedMetricsNames(),w,_;d?(r.makeTestFunction(),w=r.testFunction,_=b.slice().concat(b.map(T=>"val_"+T))):(w=null,h=[],_=b.slice());let C=Ag(o.callbacks,o.yieldEvery);return await jH(r,y,g,b,p,o.epochs,o.verbose,C,w,h,o.shuffle,_,o.initialEpoch,null,null)}finally{r.isTraining=!1,hl(n,e),hl(s,t),hl(l,a),hl(u,i),c!=null&&Te(c)}}function d_(r){let e=[];r instanceof Ve&&(r=[r]);for(let t=0;t<r.length;++t){let o=r[t];if(o.rank===1)e.push(Oa(o,1));else{if(o.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(o)}}return e}function hl(r,e){if(r==null)return;let t=[];if(e instanceof Ve)t.push(e.id);else if(Array.isArray(e))e.forEach(n=>t.push(n.id));else if(e!=null)for(let n in e){let s=e[n];t.push(s.id)}let o=[];if(r instanceof Ve)t.indexOf(r.id)===-1&&o.push(r);else if(Array.isArray(r))r.forEach(n=>{t.indexOf(n.id)===-1&&o.push(n)});else if(r!=null)for(let n in r){let s=r[n];t.indexOf(s.id)===-1&&o.push(s)}o.forEach(n=>{n.isDisposed||n.dispose()})}function HH(r){return r instanceof Ve}function h_(r){return Array.isArray(r)}function i1(r){return!HH(r)&&!h_(r)}function a1(r,e,t,o=!0,n=""){if(e==null||e.length===0){if(r!=null){let a=!1;if(h_(r)&&r.length>0)a=!0;else if(i1(r)){for(let i in r)if(r.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new L(`Error when checking model ${n} expected no data, but got ${r}`)}return[]}if(r==null)return e.map(a=>null);let s;if(i1(r)){r=r,s=[];for(let a of e){if(r[a]==null)throw new L(`No data provided for "${a}". Need data for each key in: ${e}`);s.push(r[a])}}else if(h_(r)){if(r=r,r.length!==e.length)throw new L(`Error when checking model ${n}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,e.length>1)throw new L(`The model ${n} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=d_(s),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new L(`Error when checking ${n}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<t[a].length;++l){if(l===0&&!o)continue;let u=i.shape[l],c=t[a][l];if(c!=null&&c>=0&&u!==c)throw new L(`Error when checking ${n}: expected ${e[a]} to have shape [${t[a]}], but got array with shape [${i.shape}].`)}}return s}function qH(r,e,t){let o=qn(r.map(s=>s.shape[0]));o.sort();let n=qn(e.map(s=>s.shape[0]));if(n.sort(),o.length>1)throw new L(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(n.length>1)throw new L(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(o.length>0&&n.length>0&&!x.arraysEqual(o,n))throw new L(`Input Tensors should have the same number of samples as target Tensors. Found ${o[0]} input sample(s) and ${n[0]} target sample(s).`)}function KH(r,e,t){let o=[Gi,_p,qu];for(let n=0;n<r.length;++n){let s=r[n],a=e[n],i=t[n];if(a!=null){if(a===qu&&s.shape[s.shape.length-1]===1)throw new L(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(o.indexOf(a)!==-1){let l=s.shape.slice(1),u=i.slice(1);for(let c=0;c<l.length;++c){let p=l[c],m=u[c];if(m!=null&&p!==m)throw new L(`A target Tensor with shape ${s.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function l1(r,e,t,o=!0,n=""){let s;if(Array.isArray(r)){if(r.length!==e.length)throw new L(`Error when checking model ${n}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(e.length>1)throw new L(`The model expects ${e.length} ${n} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new L(`Error when checking ${n}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<t[a].length;++l){if(l===0&&!o)continue;let u=i.shape[l],c=t[a][l];if(c!=null&&c!==u)throw new L(`Error when checking ${n}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function XH(r,e){if(r==null||Array.isArray(r)&&r.length===0)return e.map(o=>[]);let t;if(typeof r=="string"||typeof r=="function")t=[r];else if(Array.isArray(r)||typeof r=="object")t=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(t))return e.map(o=>t);{let o=[];for(let n of e){let s=t.hasOwnProperty(n)?t[n]:[];Array.isArray(s)||(s=[s]),o.push(s)}return o}}var YH="layers-model",No=class extends Vo{constructor(e){super(e);this.isTraining=!1}summary(e,t,o=console.log){if(!this.built)throw new L("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");XT(this,e,t,o)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=qT(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Or))throw new L("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new L(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(Dg(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new L(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>Dg(i))}else{let a=Dg(e.loss);this.outputs.forEach(i=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let i=this.internalOutputShapes[a],l=this.outputNames[a];this.feedOutputNames.push(l),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}let o=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],$s("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(o.indexOf(a)!==-1)continue;let i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let n=XH(e.metrics,this.outputNames),s=(a,i,l)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([l,a])};$s("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(o.indexOf(a)!==-1)continue;let i=n[a];(u=>{let c="",p,m,f;for(let d of u){if(typeof d=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(d)!==-1){let g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===_p?["accuracy","acc"].indexOf(d)!==-1?m=_f:["crossentropy","ce"].indexOf(d)!==-1&&(m=$g):this.lossFunctions[a]===wp?["accuracy","acc"].indexOf(d)!==-1?m=Rg:["crossentropy","ce"].indexOf(d)!==-1&&(m=c_):["accuracy","acc"].indexOf(d)!==-1?m=kf:["crossentropy","ce"].indexOf(d)!==-1&&(m=vf);let y;["accuracy","acc"].indexOf(d)!==-1?y="acc":["crossentropy","ce"].indexOf(d)!==-1&&(y="ce"),f=m,p=c+y}else f=HT(d),p=c+Cf(d);let h;$s(p,()=>{h=f}),s(a,p,h)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,o={}){let n=o.batchSize==null?32:o.batchSize;zg(n);let s=!0,a=this.standardizeUserDataXY(e,t,s,n);try{let i=a[0].concat(a[1]);this.makeTestFunction();let l=this.testFunction,u=this.testLoop(l,i,n,o.verbose,o.steps);return hr(u)}finally{hl(a[0],e),hl(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),n1(this,e,t)}checkNumSamples(e,t,o,n="steps"){let s;if(o!=null){if(s=null,t!=null)throw new L(`If ${n} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?s=e[0].shape[0]:s=e.shape[0];else throw new L(`Either the input data should have a defined shape, or ${n} shoud be specified.`);return s}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new L("`outputs` is an empty Array, which is not allowed.");let o=Array.isArray(t),n=o?t:[t],s=this.retrieveSymbolicTensors(n),a=new Fs;if(e instanceof Ve&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new L(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)a.add(this.inputs[l],e[l])}else for(let l of this.inputs){let u=e[l.name];if(u==null)throw new L(`No value is provided for the model's input ${l.name}`);a.add(l,u)}let i=Xu(s,a);return o?i:i[0]}retrieveSymbolicTensors(e){let t=Un(null,e.length),o=e.length;for(let n of this.layers){let s=Array.isArray(n.output)?n.output:[n.output],a=s.map(i=>i.name);for(let i=0;i<e.length;++i){let l=a.indexOf(e[i]);if(l!==-1&&(t[i]=s[l],o--),o===0)break}if(o===0)break}if(o>0){let n=[];throw t.forEach((s,a)=>{s==null&&n.push(e[a])}),new L(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,o=!1){return V(()=>{let n=this.checkNumSamples(e);if(o)throw new Ne("Verbose predictLoop() is not implemented yet.");let s=Vg(n,t),a=this.outputs.map(i=>[]);for(let i=0;i<s.length;++i)V(()=>{let u=s[i][0],c=s[i][1],p=kp(e,u,c),m=[];if(Array.isArray(p))for(let d=0;d<p.length;++d)m.push({key:this.inputs[d],value:p[d]});else m.push({key:this.inputs[0],value:p});let f=new Fs(m);return Xu(this.outputs,f)}).forEach((u,c)=>a[c].push(u));return hr(a.map(i=>Ye(i,0)))})}predict(e,t={}){let o=d_(e);l1(o,this.inputNames,this.feedInputShapes,!1);try{let n=t.batchSize==null?32:t.batchSize;return zg(n),this.predictLoop(o,n)}finally{hl(o,e)}}predictOnBatch(e){l1(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,o=!0,n){if(this.optimizer_==null)throw new Pr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let a=0;a<this.feedOutputShapes.length;++a){let i=this.feedOutputShapes[a];this.feedLossFns[a]===wp?s.push(i.slice(0,i.length-1).concat([1])):s.push(i)}if(e=a1(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=a1(t,this.feedOutputNames,s,!1,"target"),qH(e,t,null),KH(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&n!=null&&n>0&&e[0].shape[0]%n!=0)throw new L(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${n}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,o,n,s=!0,a){let[i,l]=this.standardizeUserDataXY(e,t,s,a);if(o!=null)throw new Error("sample weight is not supported yet.");let u=null;if(n!=null){let c=Mg(n,this.outputNames);u=[];for(let p=0;p<c.length;++p)u.push(await Lg(l[p],null,c[p]))}return[i,l,u]}testLoop(e,t,o,n=0,s){return V(()=>{let a=this.checkNumSamples(t,o,s,"steps"),i=[];if(n>0)throw new Ne("Verbose mode is not implemented yet.");if(s!=null)throw new Ne("steps mode in testLoop() is not implemented yet");{let l=Vg(a,o),u=Vt(Mr(0,a));for(let c=0;c<l.length;++c){let p=l[c][0],m=l[c][1],f=Pa(u,p,m-p),d=Bg(t,f),h=e(d);if(c===0)for(let g=0;g<h.length;++g)i.push(ue(0));for(let g=0;g<h.length;++g){let y=h[g];i[g]=Q(i[g],O(m-p,y))}}for(let c=0;c<i.length;++c)i[c]=me(i[c],a)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let o=0;o<e.length;++o){let n=e[o],s=n;Qw(e,n)>1&&(s+=`_${Qw(e.slice(0,o),n)}`),t.push(s)}return t}makeTrainFunction(){return e=>{let t=[],o=e.slice(0,this.inputs.length),n=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{let p=[];for(let h=0;h<this.inputs.length;++h)p.push({key:this.inputs[h],value:o[h]});let m=new Fs(p),f=Xu(this.outputs,m,{training:!0}),d;for(let h=0;h<this.lossFunctions.length;++h){let y=this.lossFunctions[h](n[h],f[h]);s[h]!=null&&(y=QT(y,s[h]));let b=dt(y);t.push(b),h===0?d=y:d=Q(d,y)}for(let h=0;h<this.metricsTensors.length;++h){let g;if(this.outputs.length>1&&h<this.outputs.length)g=t[h];else{let y=this.metricsTensors[h][0],b=this.metricsTensors[h][1];g=dt(y(n[b],f[b]))}Et(g),a.push(g)}return d=dt(d),this.calculateLosses().forEach(h=>{d=Q(d,h)}),d},l=this.collectedTrainableWeights.map(p=>p.read()),u=!0;return[this.optimizer_.minimize(i,u,l)].concat(a)}}makeTestFunction(){this.testFunction=e=>V(()=>{let t=[],o,n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let u=0;u<this.inputs.length;++u)a.push({key:this.inputs[u],value:n[u]});let i=new Fs(a),l=Xu(this.outputs,i);for(let u=0;u<this.lossFunctions.length;++u){let c=this.lossFunctions[u],p=dt(c(s[u],l[u]));u===0?o=p:o=Q(o,p),t.push(o)}for(let u=0;u<this.metricsTensors.length;++u){let c=this.metricsTensors[u][0],p=this.metricsTensors[u][1],m=dt(c(s[p],l[p]));t.push(m)}return t})}async fit(e,t,o={}){return s1(this,e,t,o)}async fitDataset(e,t){return o1(this,e,t)}async trainOnBatch(e,t){let o=await this.standardizeUserData(e,t),n=o[0],s=o[1],i=this.makeTrainFunction()(n.concat(s)),l=[];for(let u of i){let c=await u.data();l.push(c[0])}return Te(i),hr(l)}getNamedWeights(e){let t=[],o=e!=null&&e.trainableOnly,n=o?this.trainableWeights:this.weights,s=this.getWeights(o);for(let a=0;a<n.length;++a)o&&!n[a].trainable||t.push({name:n[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=Wc().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Wc().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=jn(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>jn(t))}else{let t=Object.keys(this.loss);e={};let o=this.loss;for(let n of t)if(typeof o[n]=="string")e[n]=jn(o[n]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[jn(Cf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>jn(Cf(e)));{let e={};for(let t in this.metrics)e[t]=jn(Cf(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=Ku(e.optimizer_config),o=Qr(t),n;if(typeof e.loss=="string")n=Ra(e.loss);else if(Array.isArray(e.loss))n=e.loss.map(a=>Ra(a));else if(e.loss!=null){n={};for(let a in e.loss)n[a]=Ra(e.loss[a])}let s;if(Array.isArray(e.metrics))s=e.metrics.map(a=>Ra(a));else if(e.metrics!=null){s={};for(let a in e.metrics)s[a]=Ra(e.metrics[a])}this.compile({loss:n,metrics:s,optimizer:o})}async save(e,t){if(typeof e=="string"){let u=Cr.getSaveHandlers(e);if(u.length===0)throw new L(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new L(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new L("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let o=await Cr.encodeWeights(this.getNamedWeights(t)),n=!1,s=null,i={modelTopology:this.toJSON(s,n),format:YH,generatedBy:`TensorFlow.js tfjs-layers v${dl}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();let u="optimizer",{data:c,specs:p}=await Cr.encodeWeights(await this.optimizer.getWeights(),u);o.specs.push(...p),o.data=Cr.concatenateArrayBuffers([o.data,c])}if(this.userDefinedMetadata!=null){let u=!0;m_(this.userDefinedMetadata,this.name,u),i.userDefinedMetadata=this.userDefinedMetadata}return i.weightData=o.data,i.weightSpecs=o.specs,e.save(i)}setUserDefinedMetadata(e){m_(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};No.className="Model";J.registerClass(No);var g_=class extends No{};g_.className="Functional";J.registerClass(g_);async function u1(r,e){"modelTopology"in r||(r={modelTopology:r}),r=r;let t=r.modelTopology;t.model_config!=null&&(t=t.model_config);let o=Ku(t),n=Qr(o,e);if(r.weightsManifest!=null){let s=await Cr.loadWeights(r.weightsManifest,r.pathPrefix,n.weights.map(i=>i.originalName)),a={};for(let i of n.weights)a[i.originalName]=s[i.originalName];n.loadWeights(a),Te(s)}return n}async function c1(r,e){if(e==null&&(e={}),typeof r=="string"){let t=Cr.getLoadHandlers(r,e);if(t.length===0)t.push(Cr.browserHTTPRequest(r,e));else if(t.length>1)throw new L(`Found more than one (${t.length}) load handlers for URL '${r}'`);r=t[0]}return ZH(r,void 0,e)}async function ZH(r,e,t){if(t==null&&(t={}),r.load==null)throw new L("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let o=await r.load(),n=o.modelTopology;n.model_config!=null&&(n=n.model_config);let s=t.strict==null?!0:t.strict,a=o.weightData!=null&&o.weightSpecs!=null&&s,i=Qr(Ku(n),e,a),l=o.trainingConfig;if(l!=null&&i.loadTrainingConfig(l),o.userDefinedMetadata!=null&&i.setUserDefinedMetadata(o.userDefinedMetadata),o.weightData!=null){if(o.weightSpecs==null)throw new L("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:u,optimizerWeights:c}=JH(o.weightData,o.weightSpecs);i.loadWeights(u,s),i.optimizer!=null&&c.length>0&&await i.optimizer.setWeights(c),Te(u),Te(c.map(p=>p.tensor))}return i}function JH(r,e){let t=Cr.decodeWeights(r,e),o={},n=[];return e.forEach(s=>{s.group==="optimizer"?n.push({name:s.name,tensor:t[s.name]}):o[s.name]=t[s.name]}),{modelWeights:o,optimizerWeights:n}}var Wi=class extends No{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:cl("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(o=>o<0))throw new L(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof Wi||e instanceof No,o;if(t){if(o=e,o.outputs.length!==1)throw new L("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(o.inputs.length!==1)throw new L("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new L("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let n=Cg({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(n)}if(t)this.outputs=o.outputs,this.inputs=o.inputs;else{if(e.inboundNodes.length!==1)throw new L(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new L("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=l_(this.outputs[0])}this.inboundNodes=[],new pl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Un(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(n=>n.shape),outputShapes:this.outputs[0].shape})}else{let n=e.apply(this.outputs[0]);if(Array.isArray(n))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[n],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(Ze(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new No({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,o=console.log){this.built||this.build(),super.summary(e,t,o)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,o={}){if(!this.built)throw new Pr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,o)}async evaluateDataset(e,t){if(!this.built)throw new Pr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,o={}){if(!this.built)throw new Pr("The model needs to be compiled before being used.");return this.model.fit(e,t,o)}async fitDataset(e,t){if(!this.built)throw new Pr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,o={},n=!1){let s,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new L("Legacy serialization format not supported yet.");s=t}else x.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,a=t;let i=new e(a);if(!(i instanceof Wi))throw new Ne(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let l of s){let c=Qr(l,void 0,n);n&&c.setFastWeightInitDuringBuild(!0),i.add(c)}return i}set stopTraining(e){if(this.model==null)throw new L("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new L("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let o={};o.className=t.getClassName(),o.config=t.getConfig(),e.push(o)}return{name:this.name,layers:e}}};Wi.className="Sequential";J.registerClass(Wi);function p1(r){return new No(r)}function m1(r){return new Wi(r)}function f1(r,e){return e==null&&(e={}),c1(r,e)}function Gg(r){return Cg(r)}function d1(r,e){uo.registerCallbackConstructor(r,e)}var co=class extends J.Serializable{getConfig(){return{}}},x_=class extends co{apply(e,t=1){return FT(e,t)}};x_.className="elu";J.registerClass(x_);var y_=class extends co{apply(e){return Ru(e)}};y_.className="selu";J.registerClass(y_);var b_=class extends co{apply(e){return Nr(e)}};b_.className="relu";J.registerClass(b_);var w_=class extends co{apply(e){return V(()=>Ts(6,Nr(e)))}};w_.className="relu6";J.registerClass(w_);var __=class extends co{apply(e){return e}};__.className="linear";J.registerClass(__);var k_=class extends co{apply(e){return qr(e)}};k_.className="sigmoid";J.registerClass(k_);var v_=class extends co{apply(e){return PT(e)}};v_.className="hardSigmoid";J.registerClass(v_);var C_=class extends co{apply(e){return Ss(e)}};C_.className="softplus";J.registerClass(C_);var I_=class extends co{apply(e){return OT(e)}};I_.className="softsign";J.registerClass(I_);var N_=class extends co{apply(e){return Fi(e)}};N_.className="tanh";J.registerClass(N_);var If=class extends co{apply(e,t=-1){return Aa(e,t)}};If.className="softmax";J.registerClass(If);var S_=class extends co{apply(e,t=-1){return Su(e,t)}};S_.className="logSoftmax";J.registerClass(S_);var T_=class extends co{apply(e,t=1){return V(()=>qr(e.mul(t)).mul(e))}};T_.className="swish";J.registerClass(T_);function Os(r){return r.getClassName()}function A_(r,e={}){return Li(r,J.SerializationMap.getMap().classNameMap,e,"activation")}function Ps(r){if(r==null){let e={};return e.className="linear",e.config={},A_(e)}if(typeof r=="string"){let e={};return e.className=r,e.config={},A_(e)}else return r instanceof co?r:A_(r)}function E_(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var D_=class extends J.Serializable{},Yu=class extends D_{constructor(e){super();E_(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return V(()=>{let t=ht([1]);return this.hasL1&&(t=Q(t,ge(O(this.l1,It(e))))),this.hasL2&&(t=Q(t,ge(O(this.l2,ju(e))))),t.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Yu.className="L1L2";J.registerClass(Yu);function h1(r){return E_(r),new Yu({l1:r!=null?r.l1:null,l2:0})}function g1(r){return E_(r),new Yu({l2:r!=null?r.l2:null,l1:0})}var x1={l1l2:"L1L2"};function st(r){return sp(r)}function y1(r,e={}){return Li(r,J.SerializationMap.getMap().classNameMap,e,"regularizer")}function yt(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in x1?x1[r]:r,config:{}};return y1(t)}else return r instanceof D_?r:y1(r)}var Nf=class extends Pe{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Fe(e);let o=Nr(e);return this.maxValue!=null&&(o=sr(o,0,this.maxValue)),o}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Nf.className="ReLU";J.registerClass(Nf);var Sf=class extends Pe{constructor(e){super(e==null?{}:e);this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let o=Fe(e);return Ca(o,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Sf.className="LeakyReLU";J.registerClass(Sf);var Tf=class extends Pe{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=pt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=yt(e.alphaRegularizer),this.alphaConstraint=Ft(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new L(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Ze(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let n of this.sharedAxes)t[n-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let o={};if(this.sharedAxes!=null)for(let n=1;n<e.length;++n)o[n]=e[n];this.inputSpec=[new Nt({ndim:e.length,axes:o})],this.built=!0}call(e,t){return e=Fe(e),Ta(e,this.alpha.read())}getConfig(){let e={alphaInitializer:kt(this.alphaInitializer),alphaRegularizer:st(this.alphaRegularizer),alphaConstraint:Rt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Tf.className="PReLU";J.registerClass(Tf);var Af=class extends Pe{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Ne(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let o=Fe(e);return Is(o)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Af.className="ELU";J.registerClass(Af);var Ef=class extends Pe{constructor(e){super(e==null?{}:e);this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let o=Fe(e);return o.mul(Fa(o.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Ef.className="ThresholdedReLU";J.registerClass(Ef);var Df=class extends Pe{constructor(e){super(e==null?{}:e);this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new If().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let o=Fe(e);return this.softmax(o,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Df.className="Softmax";J.registerClass(Df);function gl(r,e,t){if(typeof r=="number")return Un(r,e);if(r.length!==e)throw new L(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${r.length} elements.`);for(let o=0;o<e;++o){let n=r[o];if(!AT(n))throw new L(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(r)} including a non-integer number ${n}`)}return r}function po(r,e,t,o,n=1){if(r==null)return r;let s=e+(e-1)*(n-1),a;return t==="same"?a=r:a=r-s+1,Math.floor((a+o-1)/o)}function $f(r,e,t,o){if(r==null)return null;if(o==="valid")r=r*e+Rs([t-e,0]);else if(o==="same")r=r*e;else throw new L(`Unsupport padding mode: ${o}.`);return r}function Rf(r,e){return V(()=>($t(e),e==="channelsFirst"?je(r,[0,2,3,1]):r))}function $_(r,e){return V(()=>($t(e),e==="channelsFirst"?je(r,[0,2,3,4,1]):r))}function QH(r,e,t,o=1,n="valid",s,a=1){return V(()=>{if(s==null&&(s=Zr()),$t(s),r.shape.length!==3)throw new L(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(e.shape.length!==3)throw new L(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new L(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(s==="channelsFirst"&&(r=je(r,[0,2,1])),n==="causal")throw new Ne("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=wu(r,e,o,n==="same"?"same":"valid","NWC",a);return t!=null&&(i=ao(i,t)),i})}function b1(r,e,t,o=[1,1],n="valid",s,a,i=null){return V(()=>{if(s==null&&(s=Zr()),$t(s),r.rank!==3&&r.rank!==4)throw new L(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(e.rank!==3&&e.rank!==4)throw new L(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let l=Rf(r,s);if(n==="causal")throw new Ne("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Gn.conv2d({x:l,filter:e,strides:o,pad:n==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:i}),s==="channelsFirst"&&(l=je(l,[0,3,1,2])),l})}function eq(r,e,t,o=[1,1,1],n="valid",s,a){return V(()=>{if(s==null&&(s=Zr()),$t(s),r.rank!==4&&r.rank!==5)throw new L(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(e.rank!==4&&e.rank!==5)throw new L(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let i=$_(r,s);if(n==="causal")throw new Ne("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Sm(i,e,o,n==="same"?"same":"valid","NDHWC",a),t!=null&&(i=ao(i,t)),s==="channelsFirst"&&(i=je(i,[0,4,1,2,3])),i})}var vp=class extends Pe{constructor(e,t){super(t);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",vp.verifyArgs(t),this.rank=e,Wt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Ne(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=gl(t.kernelSize,e,"kernelSize"),this.strides=gl(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Jr(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,$t(this.dataFormat),this.activation=Ps(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=pt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ft(t.biasConstraint),this.biasRegularizer=yt(t.biasRegularizer),this.activityRegularizer=yt(t.activityRegularizer),this.dilationRate=gl(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new L(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new L(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new L(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Bo("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!dg(e.kernelSize,"number",1,3))throw new L(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Os(this.activation),useBias:this.useBias,biasInitializer:kt(this.biasInitializer),biasRegularizer:st(this.biasRegularizer),activityRegularizer:st(this.activityRegularizer),biasConstraint:Rt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Zu=class extends vp{constructor(e,t){super(e,t);this.kernel=null,Zu.verifyArgs(t),this.filters=t.filters,Wt(this.filters,"filters"),this.kernelInitializer=pt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ft(t.kernelConstraint),this.kernelRegularizer=yt(t.kernelRegularizer)}build(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new L(`The channel dimension of the input should be defined. Found ${e[t]}`);let o=e[t],n=this.kernelSize.concat([o,this.filters]);this.kernel=this.addWeight("kernel",n,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:o}}],this.built=!0}call(e,t){return V(()=>{e=Fe(e);let o,n=this.bias==null?null:this.bias.read(),s=hg(this.activation.getClassName());if(s!=null&&this.rank===2)o=b1(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)o=QH(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)o=b1(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)o=eq(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Ne("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(o=this.activation.apply(o))}return o})}computeOutputShape(e){e=Ze(e);let t=[],o=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<o.length;++s){let a=po(o[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);t.push(a)}let n=[e[0]];return this.dataFormat==="channelsLast"?(n=n.concat(t),n.push(this.filters)):(n.push(this.filters),n=n.concat(t)),n}getConfig(){let e={filters:this.filters,kernelInitializer:kt(this.kernelInitializer),kernelRegularizer:st(this.kernelRegularizer),kernelConstraint:Rt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new L(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},xl=class extends Zu{constructor(e){super(2,e);xl.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!dg(e.kernelSize,"number",1,2))throw new L(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};xl.className="Conv2D";J.registerClass(xl);var Ju=class extends Zu{constructor(e){super(3,e);Ju.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new L(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};Ju.className="Conv3D";J.registerClass(Ju);var Ff=class extends xl{constructor(e){super(e);if(this.inputSpec=[new Nt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new L(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Ze(e),e.length!==4)throw new L("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new L("The channel dimension of the inputs should be defined. Found `None`.");let o=e[t],n=this.kernelSize.concat([this.filters,o]);this.kernel=this.addWeight("kernel",n,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Nt({ndim:4,axes:{[t]:o}})],this.built=!0}call(e,t){return V(()=>{let o=Fe(e);if(o.shape.length!==4)throw new L(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${o.shape.length}`);let n=o.shape,s=n[0],a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);let l=n[a],u=n[i],c=this.kernelSize[0],p=this.kernelSize[1],m=this.strides[0],f=this.strides[1],d=$f(l,m,c,this.padding),h=$f(u,f,p,this.padding),g=[s,d,h,this.filters];this.dataFormat!=="channelsLast"&&(o=je(o,[0,2,3,1]));let y=_u(o,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=je(y,[0,3,1,2])),this.bias!=null&&(y=ao(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(e){e=Ze(e);let t=e.slice(),o,n,s;this.dataFormat==="channelsFirst"?(o=1,n=2,s=3):(o=3,n=1,s=2);let a=this.kernelSize[0],i=this.kernelSize[1],l=this.strides[0],u=this.strides[1];return t[o]=this.filters,t[n]=$f(t[n],l,a,this.padding),t[s]=$f(t[s],u,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Ff.className="Conv2DTranspose";J.registerClass(Ff);var R_=class extends Zu{constructor(e,t){super(e,t);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new L("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new L("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new L(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=pt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=yt(t.depthwiseRegularizer),this.depthwiseConstraint=Ft(t.depthwiseConstraint),this.pointwiseInitializer=pt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=yt(t.pointwiseRegularizer),this.pointwiseConstraint=Ft(t.pointwiseConstraint)}build(e){if(e=Ze(e),e.length<this.rank+2)throw new L(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new L(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let o=e[t],n=this.kernelSize.concat([o,this.depthMultiplier]),s=[];for(let i=0;i<this.rank;++i)s.push(1);s.push(o*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",n,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Nt({ndim:this.rank+2,axes:{[t]:o}})],this.built=!0}call(e,t){return V(()=>{e=Fe(e);let o;if(this.rank===1)throw new Ne("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=je(e,[0,2,3,1])),o=Gm(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(o=ao(o,this.bias.read(),this.dataFormat)),this.activation!=null&&(o=this.activation.apply(o)),this.dataFormat==="channelsFirst"&&(o=je(o,[0,3,1,2])),o})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=kt(this.depthwiseInitializer),e.pointwiseInitializer=kt(this.pointwiseInitializer),e.depthwiseRegularizer=st(this.depthwiseRegularizer),e.pointwiseRegularizer=st(this.pointwiseRegularizer),e.depthwiseConstraint=Rt(this.depthwiseConstraint),e.pointwiseConstraint=Rt(this.pointwiseConstraint),e}};R_.className="SeparableConv";var Of=class extends R_{constructor(e){super(2,e)}};Of.className="SeparableConv2D";J.registerClass(Of);var Qu=class extends Zu{constructor(e){super(1,e);Qu.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!dg(e.kernelSize,"number",1,1))throw new L(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};Qu.className="Conv1D";J.registerClass(Qu);var Pf=class extends Pe{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return V(()=>{if(e=Fe(e),this.dataFormat==="channelsLast"){let o=lf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return lf(o,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let o=lf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return lf(o,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Pf.className="Cropping2D";J.registerClass(Pf);var Mf=class extends Pe{constructor(e){super(e);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,$t(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,NT(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],o=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,o]}else{let t=e[1]==null?null:this.size[0]*e[1],o=e[2]==null?null:this.size[1]*e[2];return[e[0],t,o,e[3]]}}call(e,t){return V(()=>{let o=Fe(e),n=o.shape;if(this.dataFormat==="channelsFirst"){o=je(o,[0,2,3,1]);let s=this.size[0]*n[2],a=this.size[1]*n[3],i=this.interpolation==="nearest"?o.resizeNearestNeighbor([s,a]):o.resizeBilinear([s,a]);return je(i,[0,3,1,2])}else{let s=this.size[0]*n[1],a=this.size[1]*n[2];return this.interpolation==="nearest"?o.resizeNearestNeighbor([s,a]):o.resizeBilinear([s,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Mf.className="UpSampling2D";J.registerClass(Mf);function tq(r,e,t=[1,1],o="valid",n,s){return V(()=>{n==null&&(n=Zr()),$t(n);let a=Rf(r,n);if(r.rank!==4)throw new L(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(e.rank!==4)throw new L(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=Cs(a,e,t,o==="same"?"same":"valid","NHWC",s),n==="channelsFirst"&&(a=je(a,[0,3,1,2])),a})}var Lf=class extends vp{constructor(e){super(2,e);this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=pt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ft(e.depthwiseConstraint),this.depthwiseRegularizer=yt(e.depthwiseRegularizer)}build(e){if(e=Ze(e),e.length<4)throw new L(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new L(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let o=e[t],n=[this.kernelSize[0],this.kernelSize[1],o,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",n,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[o*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return V(()=>{e=Fe(e);let o=tq(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(o=ao(o,this.bias.read(),this.dataFormat)),this.activation!=null&&(o=this.activation.apply(o)),o})}computeOutputShape(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],o=this.dataFormat==="channelsFirst"?e[3]:e[2],n=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=po(t,this.kernelSize[0],this.padding,this.strides[0]),a=po(o,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],n,s,a]:[e[0],s,a,n]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=kt(this.depthwiseInitializer),e.depthwiseRegularizer=st(this.depthwiseRegularizer),e.depthwiseConstraint=Rt(this.depthwiseRegularizer),e}};Lf.className="DepthwiseConv2D";J.registerClass(Lf);function F_(r,e,t,o){if(Array.isArray(r)){if(e!=null||t!=null)throw new L("When inputs is an array, neither initialState or constants should be provided");o!=null&&(t=r.slice(r.length-o,r.length),r=r.slice(0,r.length-o)),r.length>1&&(e=r.slice(1,r.length)),r=r[0]}function n(s){return s==null||Array.isArray(s)?s:[s]}return e=n(e),t=n(t),{inputs:r,initialState:e,constants:t}}function O_(r,e,t,o=!1,n,s,a=!1,i=!1){return V(()=>{let l=e.shape.length;if(l<3)throw new L(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(Mr(2,l));if(e=je(e,u),s!=null)throw new Ne("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),n!=null&&(n=n.asType("bool").asType("float32"),n.rank===l-1&&(n=ir(n,-1)),n=je(n,u)),o&&(e=Ht(e,0),n!=null&&(n=Ht(n,0)));let c=[],p,m=t,f=e.shape[0],d=cr(e),h;n!=null&&(h=cr(n));for(let y=0;y<f;++y){let b=d[y],w=V(()=>r(b,m));if(n==null)p=w[0],m=w[1];else{let _=V(()=>{let C=h[y],D=er(C).sub(C),T=w[0].mul(C).add(m[0].mul(D)),R=m.map((P,B)=>w[1][B].mul(C).add(P.mul(D)));return{output:T,newStates:R}});p=_.output,m=_.newStates}i&&c.push(p)}let g;return i&&(g=Bt(c,1)),[p,g,m]})}var mo=class extends Pe{constructor(e){super(e);let t;if(e.cell==null)throw new L("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Cp({cells:e.cell}):t=e.cell,t.stateSize==null)throw new L("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Nt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Mr(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){vg(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let o=t[0],n;if(this.returnSequences?n=[e[0],e[1],o]:n=[e[0],o],this.returnState){let s=[];for(let a of t)s.push([e[0],a]);return[n].concat(s)}else return n}computeMask(e,t){return V(()=>{Array.isArray(t)&&(t=t[0]);let o=this.returnSequences?t:null;if(this.returnState){let n=this.states.map(s=>null);return[o].concat(n)}else return o})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let o=0;o<e;++o)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){let t=null;if(this.numConstants!=null)throw new Ne("Constants support is not implemented in RNN yet.");vg(e)&&(e=e[0]),e=e;let o=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Nt({shape:[o,null,...n]});let s=[e[0]].concat(e.slice(2));if(t!=null)throw new Ne("Constants support is not implemented in RNN yet.");this.cell.build(s);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!x.arraysEqual(this.stateSpec.map(i=>i.shape[i.shape.length-1]),a))throw new L(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(i=>new Nt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){V(()=>{if(!this.stateful)throw new Io("Cannot call resetStates() on an RNN Layer that is not stateful.");let o=this.inputSpec[0].shape[0];if(o==null)throw new L("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(n=>ht([o,n])):this.states_=[ht([o,this.cell.stateSize])];else if(e==null)Te(this.states_),this.keptStates!=null&&(Te(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(n=>ht([o,n])):this.states_[0]=ht([o,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new L(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Te(this.states_);for(let n=0;n<this.states_.length;++n){let s=e[n],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[n]:this.cell.stateSize,i=[o,a];if(!x.arraysEqual(s.shape,i))throw new L(`State ${n} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[n]=s}}this.states_=this.states_.map(n=>Et(n.clone()))})}apply(e,t){let o=t==null?null:t.initialState,n=t==null?null:t.constants;t==null&&(t={});let s=F_(e,o,n,this.numConstants);e=s.inputs,o=s.initialState,n=s.constants;let a=[],i=[];if(o!=null){t.initialState=o,a=a.concat(o),this.stateSpec=[];for(let u of o)this.stateSpec.push(new Nt({shape:u.shape}));i=i.concat(this.stateSpec)}if(n!=null&&(t.constants=n,a=a.concat(n),this.numConstants=n.length),a[0]instanceof zr){let u=[e].concat(a),c=this.inputSpec.concat(i),p=this.inputSpec;this.inputSpec=c;let m=super.apply(u,t);return this.inputSpec=p,m}else return super.apply(e,t)}call(e,t){return V(()=>{let o=t==null?null:t.mask,n=t==null?null:t.training,s=t==null?null:t.initialState;e=Fe(e),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new L(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:n},u=O_((d,h)=>{let g=this.cell.call([d].concat(h),i);return[g[0],g.slice(1)]},e,s,this.goBackwards,o,null,this.unroll,this.returnSequences),c=u[0],p=u[1],m=u[2];this.stateful&&this.resetStates(m,n);let f=this.returnSequences?p:c;return this.returnState?[f].concat(m):f})}getInitialState(e){return V(()=>{let t=ht(e.shape);return t=ge(t,[1,2]),t=Oa(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(o=>o>1?yg(t,[1,o]):t):this.cell.stateSize>1?[yg(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let o=this.cell.getConfig();return this.getClassName()===mo.className&&(t.cell={className:this.cell.getClassName(),config:o}),Object.assign({},o,e,t)}static fromConfig(e,t,o={}){let n=t.cell,s=Qr(n,o);return new e(Object.assign(t,{cell:s}))}};mo.className="RNN";J.registerClass(mo);var yl=class extends Pe{},Ip=class extends yl{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Wt(this.units,"units"),this.activation=Ps(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=pt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=pt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=pt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=yt(e.kernelRegularizer),this.recurrentRegularizer=yt(e.recurrentRegularizer),this.biasRegularizer=yt(e.biasRegularizer),this.kernelConstraint=Ft(e.kernelConstraint),this.recurrentConstraint=Ft(e.recurrentConstraint),this.biasConstraint=Ft(e.biasConstraint),this.dropout=Uu([1,Rs([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Uu([1,Rs([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ze(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return V(()=>{if(e=e,e.length!==2)throw new L(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let o=e[1];e=e[0];let n=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ma({ones:()=>er(e),rate:this.dropout,training:n})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ma({ones:()=>er(o),rate:this.recurrentDropout,training:n}));let s,a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?s=Xn(O(e,a),this.kernel.read()):s=Xn(e,this.kernel.read()),this.bias!=null&&(s=ao(s,this.bias.read())),i!=null&&(o=O(o,i));let l=Q(s,Xn(o,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Os(this.activation),useBias:this.useBias,kernelInitializer:kt(this.kernelInitializer),recurrentInitializer:kt(this.recurrentInitializer),biasInitializer:kt(this.biasInitializer),kernelRegularizer:st(this.kernelRegularizer),recurrentRegularizer:st(this.recurrentRegularizer),biasRegularizer:st(this.biasRegularizer),activityRegularizer:st(this.activityRegularizer),kernelConstraint:Rt(this.kernelConstraint),recurrentConstraint:Rt(this.recurrentConstraint),biasConstraint:Rt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};Ip.className="SimpleRNNCell";J.registerClass(Ip);var zf=class extends mo{constructor(e){e.cell=new Ip(e),super(e)}call(e,t){return V(()=>{this.cell.dropoutMask!=null&&(Te(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Te(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let o=t==null?null:t.mask,n=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:o,training:n,initialState:s})})}static fromConfig(e,t){return new e(t)}};zf.className="SimpleRNN";J.registerClass(zf);var Np=class extends yl{constructor(e){super(e);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new L("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Wt(this.units,"units"),this.activation=Ps(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ps(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=pt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=pt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=pt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=yt(e.kernelRegularizer),this.recurrentRegularizer=yt(e.recurrentRegularizer),this.biasRegularizer=yt(e.biasRegularizer),this.kernelConstraint=Ft(e.kernelConstraint),this.recurrentConstraint=Ft(e.recurrentConstraint),this.biasConstraint=Ft(e.biasConstraint),this.dropout=Uu([1,Rs([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Uu([1,Rs([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ze(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return V(()=>{if(e=e,e.length!==2)throw new L(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let o=t.training==null?!1:t.training,n=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ma({ones:()=>er(e),rate:this.dropout,training:o,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ma({ones:()=>er(n),rate:this.recurrentDropout,training:o,count:3}));let s=this.dropoutMask,a=this.recurrentDropoutMask,i,l,u;0<this.dropout&&this.dropout<1&&(e=O(e,s[0]));let c=Xn(e,this.kernel.read());this.useBias&&(c=ao(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(n=O(n,a[0]));let p=this.recurrentKernel.read(),[m,f]=ur(p,[2*this.units,this.units],p.rank-1),d=Xn(n,m),[h,g,y]=ur(c,3,c.rank-1),[b,w]=ur(d,2,d.rank-1);i=this.recurrentActivation.apply(Q(h,b)),l=this.recurrentActivation.apply(Q(g,w));let _=Xn(O(l,n),f);u=this.activation.apply(Q(y,_));let C=Q(O(i,n),O(Q(1,He(i)),u));return[C,C]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Os(this.activation),recurrentActivation:Os(this.recurrentActivation),useBias:this.useBias,kernelInitializer:kt(this.kernelInitializer),recurrentInitializer:kt(this.recurrentInitializer),biasInitializer:kt(this.biasInitializer),kernelRegularizer:st(this.kernelRegularizer),recurrentRegularizer:st(this.recurrentRegularizer),biasRegularizer:st(this.biasRegularizer),activityRegularizer:st(this.activityRegularizer),kernelConstraint:Rt(this.kernelConstraint),recurrentConstraint:Rt(this.recurrentConstraint),biasConstraint:Rt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};Np.className="GRUCell";J.registerClass(Np);var Bf=class extends mo{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Np(e),super(e)}call(e,t){return V(()=>{this.cell.dropoutMask!=null&&(Te(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Te(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let o=t==null?null:t.mask,n=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:o,training:n,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Bf.className="GRU";J.registerClass(Bf);var bl=class extends yl{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Wt(this.units,"units"),this.activation=Ps(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ps(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=pt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=pt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=pt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=yt(e.kernelRegularizer),this.recurrentRegularizer=yt(e.recurrentRegularizer),this.biasRegularizer=yt(e.biasRegularizer),this.kernelConstraint=Ft(e.kernelConstraint),this.recurrentConstraint=Ft(e.recurrentConstraint),this.biasConstraint=Ft(e.biasConstraint),this.dropout=Uu([1,Rs([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Uu([1,Rs([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=Ze(e);let o=e[e.length-1];this.kernel=this.addWeight("kernel",[o,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let n;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,a=this.units;n=new(t=class extends lo{apply(l,u){let c=s.apply([a]),p=new Hu().apply([a]),m=s.apply([a*2]);return s_(s_(c,p),m)}},t.className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return V(()=>{let o=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new L(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=e[1],s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ma({ones:()=>er(e),rate:this.dropout,training:o,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ma({ones:()=>er(n),rate:this.recurrentDropout,training:o,count:4}));let a=this.dropoutMask,i=this.recurrentDropoutMask,l,u,c,p;0<this.dropout&&this.dropout<1&&(e=O(e,a[0]));let m=Xn(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(n=O(n,i[0])),m=Q(m,Xn(n,this.recurrentKernel.read())),this.useBias&&(m=ao(m,this.bias.read()));let[f,d,h,g]=ur(m,4,m.rank-1);l=this.recurrentActivation.apply(f),u=this.recurrentActivation.apply(d),c=Q(O(u,s),O(l,this.activation.apply(h))),p=this.recurrentActivation.apply(g);let y=O(p,this.activation.apply(c));return[y,y,c]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Os(this.activation),recurrentActivation:Os(this.recurrentActivation),useBias:this.useBias,kernelInitializer:kt(this.kernelInitializer),recurrentInitializer:kt(this.recurrentInitializer),biasInitializer:kt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:st(this.kernelRegularizer),recurrentRegularizer:st(this.recurrentRegularizer),biasRegularizer:st(this.biasRegularizer),activityRegularizer:st(this.activityRegularizer),kernelConstraint:Rt(this.kernelConstraint),recurrentConstraint:Rt(this.recurrentConstraint),biasConstraint:Rt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};bl.className="LSTMCell";J.registerClass(bl);var Vf=class extends mo{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new bl(e),super(e)}call(e,t){return V(()=>{this.cell.dropoutMask!=null&&(Te(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Te(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let o=t==null?null:t.mask,n=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:o,training:n,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Vf.className="LSTM";J.registerClass(Vf);var Cp=class extends yl{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return V(()=>{e=e;let o=e.slice(1),n=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?n.push(o.splice(0,i.stateSize.length)):n.push(o.splice(0,1));n.reverse();let s=[],a;for(let i=0;i<this.cells.length;++i){let l=this.cells[i];o=n[i],i===0?a=[e[0]].concat(o):a=[a[0]].concat(o),a=l.call(a,t),s.push(a.slice(1))}o=[];for(let i of s.slice().reverse())o.push(...i);return[a[0]].concat(o)})}build(e){vg(e)&&(e=e[0]),e=e;let t;this.cells.forEach((o,n)=>{$s(`RNNCell_${n}`,()=>{o.build(e),Array.isArray(o.stateSize)?t=o.stateSize[0]:t=o.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=s=>({className:s.getClassName(),config:s.getConfig()}),n={cells:this.cells.map(t)};return Object.assign({},e,n)}static fromConfig(e,t,o={}){let n=[];for(let s of t.cells)n.push(Qr(s,o));return new e({cells:n})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let o of this.cells)t.push(...o.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return xf(e)}setWeights(e){let t=[];for(let o of this.cells){let n=o.weights.length,s=e.splice(n);for(let a=0;a<o.weights.length;++a)t.push([o.weights[a],s[a]])}yp(t)}};Cp.className="StackedRNNCells";J.registerClass(Cp);function Ma(r){let{ones:e,rate:t,training:o=!1,count:n=1}=r,s=()=>wg(e(),t),a=()=>ul(s,e,o);return!n||n<=1?Et(a().clone()):Array(n).fill(void 0).map(a).map(l=>Et(l.clone()))}var rq=function(r,e){var t={};for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&e.indexOf(o)<0&&(t[o]=r[o]);if(r!=null&&typeof Object.getOwnPropertySymbols=="function")for(var n=0,o=Object.getOwnPropertySymbols(r);n<o.length;n++)e.indexOf(o[n])<0&&Object.prototype.propertyIsEnumerable.call(r,o[n])&&(t[o[n]]=r[o[n]]);return t};var P_=class extends mo{constructor(e){if(e.unroll)throw new Ne("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Ne("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Nt({ndim:5})]}call(e,t){return V(()=>{if(this.cell.dropoutMask!=null&&(Te(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Te(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new L("ConvRNN2D cell does not support constants");let o=t==null?null:t.mask,n=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:o,training:n,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return V(()=>{let{stateSize:t}=this.cell,o=e.shape,n=this.computeSingleOutputShape(o),s=[n[0],...n.slice(2)],a=ht(s);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){V(()=>{if(!this.stateful)throw new Io("Cannot call resetStates() on an RNN Layer that is not stateful.");let o=this.inputSpec[0].shape,n=this.computeSingleOutputShape(o),s=[n[0],...n.slice(2)];if(o[0]==null)throw new L("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>ht(s)):this.states_=[ht(s)];else if(e==null)Te(this.states_),this.keptStates!=null&&(Te(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>ht(s)):this.states_[0]=ht(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new L(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Te(this.states_);for(let i=0;i<this.states_.length;++i){let l=e[i],u=s;if(!x.arraysEqual(l.shape,u))throw new L(`State ${i} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${l.shape}`);this.states_[i]=l}}this.states_=this.states_.map(i=>Et(i.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:o,kernelSize:n,padding:s,strides:a,dilationRate:i}=this.cell,l=t==="channelsFirst",u=e[l?3:2],c=e[l?4:3],p=po(u,n[0],s,a[0],i[0]),m=po(c,n[1],s,a[1],i[1]);return[...e.slice(0,2),...l?[o,p,m]:[p,m,o]]}};P_.className="ConvRNN2D";var Sp=class extends bl{constructor(e){let{filters:t,kernelSize:o,strides:n,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t}));this.filters=t,Wt(this.filters,"filters"),this.kernelSize=gl(o,2,"kernelSize"),this.kernelSize.forEach(l=>Wt(l,"kernelSize")),this.strides=gl(n||1,2,"strides"),this.strides.forEach(l=>Wt(l,"strides")),this.padding=s||"valid",Jr(this.padding),this.dataFormat=a||"channelsLast",$t(this.dataFormat),this.dilationRate=gl(i||1,2,"dilationRate"),this.dilationRate.forEach(l=>Wt(l,"dilationRate"))}build(e){var t;e=Ze(e);let o=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[o]==null)throw new L(`The channel dimension of the input should be defined. Found ${e[o]}`);let n=e[o],s=4,a=this.kernelSize.concat([n,this.filters*s]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*s]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){let u=this.biasInitializer,c=this.filters;l=new(t=class extends lo{apply(m,f){let d=u.apply([c]),h=Ir([c]),g=u.apply([c*2]);return lp([d,h,g])}},t.className="CustomInit",t)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*s],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return V(()=>{if(e.length!==3)throw new L(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=t.training||!1,n=e[0],s=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ma({ones:()=>er(n),rate:this.dropout,training:o,count:i}));let l=this.dropoutMask,u=(te,ie,le)=>!ie||!ie[le]?te:O(ie[le],te),c=u(n,l,0),p=u(n,l,1),m=u(n,l,2),f=u(n,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ma({ones:()=>er(s),rate:this.recurrentDropout,training:o,count:i}));let d=this.recurrentDropoutMask,h=u(s,d,0),g=u(s,d,1),y=u(s,d,2),b=u(s,d,3),w=3,[_,C,D,T]=ur(this.kernel.read(),i,w),[R,P,B,G]=this.useBias?ur(this.bias.read(),i):[null,null,null,null];c=this.inputConv(c,_,R,this.padding),p=this.inputConv(p,C,P,this.padding),m=this.inputConv(m,D,B,this.padding),f=this.inputConv(f,T,G,this.padding);let[U,j,H,K]=ur(this.recurrentKernel.read(),i,w);h=this.recurrentConv(h,U),g=this.recurrentConv(g,j),y=this.recurrentConv(y,H),b=this.recurrentConv(b,K);let X=this.recurrentActivation.apply(Q(c,h)),oe=this.recurrentActivation.apply(Q(p,g)),Y=Q(O(oe,a),O(X,this.activation.apply(Q(m,y)))),re=O(this.recurrentActivation.apply(Q(f,b)),this.activation.apply(Y));return[re,re,Y]})}getConfig(){let e=super.getConfig(),{units:t}=e,o=rq(e,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},o,n)}inputConv(e,t,o,n){let s=Kr(e,t,this.strides,n||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return o?ao(s,o,this.dataFormat):s}recurrentConv(e,t){return Kr(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Sp.className="ConvLSTM2DCell";J.registerClass(Sp);var Gf=class extends P_{constructor(e){let t=new Sp(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};Gf.className="ConvLSTM2D";J.registerClass(Gf);var Tp=class extends Pe{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,o=[];for(let n=0;n<this.noiseShape.length;++n)o.push(this.noiseShape[n]==null?t[n]:this.noiseShape[n]);return o}call(e,t){return V(()=>{this.invokeCallHook(e,t);let o=Fe(e);if(0<this.rate&&this.rate<1){let n=t.training==null?!1:t.training,s=this.getNoiseShape(o);return ul(()=>wg(o,this.rate,s,this.seed),()=>o,n)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Tp.className="Dropout";J.registerClass(Tp);var Wf=class extends Tp{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Wf.className="SpatialDropout1D";J.registerClass(Wf);var Uf=class extends Pe{constructor(e){super(e);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Wt(this.units,"units"),this.activation=Ps(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=pt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=pt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ft(e.kernelConstraint),this.biasConstraint=Ft(e.biasConstraint),this.kernelRegularizer=yt(e.kernelRegularizer),this.biasRegularizer=yt(e.biasRegularizer),this.activityRegularizer=yt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Ze(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=Ze(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return V(()=>{this.invokeCallHook(e,t);let o=Fe(e),n=hg(this.activation.getClassName()),s;return n!=null?s=Xn(o,this.kernel.read(),n,this.bias?this.bias.read():null):(s=Xn(o,this.kernel.read()),this.bias!=null&&(s=ao(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let e={units:this.units,activation:Os(this.activation),useBias:this.useBias,kernelInitializer:kt(this.kernelInitializer),biasInitializer:kt(this.biasInitializer),kernelRegularizer:st(this.kernelRegularizer),biasRegularizer:st(this.biasRegularizer),activityRegularizer:st(this.activityRegularizer),kernelConstraint:Rt(this.kernelConstraint),biasConstraint:Rt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Uf.className="Dense";J.registerClass(Uf);var jf=class extends Pe{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ze(e);for(let t of e.slice(1))if(t==null)throw new L(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Kn(e,1)]}call(e,t){return V(()=>{this.invokeCallHook(e,t);let o=Fe(e);if(this.dataFormat==="channelsFirst"&&o.rank>1){let n=[0];for(let s=2;s<o.rank;++s)n.push(s);n.push(1),o=o.transpose(n)}return RT(o)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};jf.className="Flatten";J.registerClass(jf);var Hf=class extends Pe{constructor(e){super(e);this.supportsMasking=!0,this.activation=Ps(e.activation)}call(e,t){return V(()=>{this.invokeCallHook(e,t);let o=Fe(e);return this.activation.apply(o)})}getConfig(){let e={activation:Os(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Hf.className="Activation";J.registerClass(Hf);var qf=class extends Pe{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return V(()=>(e=Fe(e),DT(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};qf.className="RepeatVector";J.registerClass(qf);var Kf=class extends Pe{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let o="Total size of new array must be unchanged.",n=t.slice(),s=1,a=null;for(let l=0;l<n.length;++l){let u=n[l];if(this.isUnknown(u))if(a===null)a=l;else throw new L("Can only specifiy one unknown dimension.");else s*=u}let i=Kn(e);if(a!==null){if(s===0||i%s!=0)throw new L(o);n[a]=i/s}else if(i!==s)throw new L(o);return n}computeOutputShape(e){let t=!1;for(let o=0;o<e.length;++o)if(this.isUnknown(e[o])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return V(()=>{this.invokeCallHook(e,t);let o=Fe(e),n=o.shape,s=n.slice(0,1).concat(this.fixUnknownDimension(n.slice(1),this.targetShape));return o.reshape(s)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Kf.className="Reshape";J.registerClass(Kf);var Xf=class extends Pe{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Mr(1,e.dims.length+1);if(!x.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Nt({ndim:this.dims.length+1})]}computeOutputShape(e){e=Ze(e);let t=e.slice();return this.dims.forEach((o,n)=>{t[n+1]=e[o]}),t}call(e,t){return je(Fe(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Xf.className="Permute";J.registerClass(Xf);var Yf=class extends Pe{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let o=Fe(e),n=-1;return ol(Vn(o,this.maskValue),n)}call(e,t){return V(()=>{this.invokeCallHook(e,t);let o=Fe(e),n=-1,s=!0,a=ol(Vn(o,this.maskValue),n,s);return o.mul(a.asType(o.dtype))})}};Yf.className="Masking";J.registerClass(Yf);var Zf=class extends Pe{constructor(e){super(e);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(xt(e.inputLength))}this.inputDim=e.inputDim,Wt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Wt(this.outputDim,"outputDim"),this.embeddingsInitializer=pt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=yt(e.embeddingsRegularizer),this.activityRegularizer=yt(e.activityRegularizer),this.embeddingsConstraint=Ft(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return V(()=>this.maskZero?(e=Fe(e),Vn(e,Ce(e))):null)}computeOutputShape(e){if(e=Ze(e),this.inputLength==null)return[...e,this.outputDim];let t=xt(this.inputLength);if(t.length!==e.length-1)throw new L(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let o=0;for(let n=0;n<t.length;++n){let s=t[n],a=e[n+1];if(s!=null&&a!=null&&s!==a)throw new L(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);s==null&&(t[o]=a),o++}}return[e[0],...t,this.outputDim]}call(e,t){return V(()=>{this.invokeCallHook(e,t);let o=Fe(e);return o.dtype!=="int32"&&(o=Fa(o,"int32")),bg(this.embeddings.read(),o.as1D()).reshape(Ze(this.computeOutputShape(o.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:kt(this.embeddingsInitializer),embeddingsRegularizer:st(this.embeddingsRegularizer),activityRegularizer:st(this.activityRegularizer),embeddingsConstraint:Rt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Zf.className="Embedding";J.registerClass(Zf);var wl=class extends Pe{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Ne}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let o=e.slice(0,e.length-t.length);for(let n=0;n<t.length;++n){let s=e[e.length-t.length+n],a=t[n];if(s==null||a==null||s<0||a<0)o.push(null);else if(s===1)o.push(a);else if(a===1)o.push(s);else{if(s!==a)throw new L("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));o.push(s)}}return o}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ze(e)]),e=e,e.length<2)throw new L(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let s of e)s!=null&&s[0]!==null&&t.push(s[0]);if(t=qn(t),t.length>1)throw new L(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let o=e[0]==null?null:e[0].slice(1);for(let s=1;s<e.length;++s){let a=e[s]==null?null:e[s].slice(1);o=this.computeElementwiseOpOutputShape(o,a)}let n=e.map(s=>s.length);e.indexOf(null)===-1&&qn(n).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return V(()=>{if(e=e,this.reshapeRequired){let o=[],n=e.map(s=>s.rank);if(n.indexOf(null)===-1){let s=Rs(n);for(let a of e){let i=a.rank;for(let l=0;l<s-i;++l)a=Oa(a,1);o.push(a)}return this.mergeFunction(o)}else{let s=!1;for(let l of e){let u=l.rank;if(u==null){let c=l.shape,p=c[0],m=c.slice(1).concat([p]),f=l.reshape([p].concat(Kn(c.slice(1))));f=je(f,[1,0]),f=f.reshape(m),o.push(f),s=!0}else if(u>1){let c=Mr(1,u).concat([0]);o.push(je(l,c)),s=!0}else o.push(l)}let a=this.mergeFunction(o),i=a.rank;if(s){if(i==null){let l=a.shape,u=l.length,c=l[u-1],p=[c].concat(l.slice(0,l.length-1));a=je(a.reshape([-1,c]),[1,0]).reshape(p)}else if(i>1){let l=[i-1].concat(Mr(0,i-1));a=je(a,l)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let n=1;n<e.length;++n){let s=e[n]==null?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let o=[];for(let n of e)n!=null&&n[0]!==null&&o.push(n[0]);return o=qn(o),o.length===1?t=o.concat(t):t=[null].concat(t),t}computeMask(e,t){return V(()=>{if(t==null)return null;if(!Array.isArray(t))throw new L("`mask` should be an Array");if(!Array.isArray(e))throw new L("`inputs` should be an Array");if(t.length!==e.length)throw new L(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(n=>n==null))return null;t=t.map(n=>n==null?n:ir(n,0));let o=t[0];for(let n=1;n<t.length-1;++n)o=dr(o,t[n]);return o})}},Jf=class extends wl{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0].clone();for(let o=1;o<e.length;++o)t=Q(t,e[o]);return t})}};Jf.className="Add";J.registerClass(Jf);var Qf=class extends wl{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0].clone();for(let o=1;o<e.length;++o)t=O(t,e[o]);return t})}};Qf.className="Multiply";J.registerClass(Qf);var ed=class extends wl{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0].clone();for(let o=1;o<e.length;++o)t=Q(t,e[o]);return O(1/e.length,t)})}};ed.className="Average";J.registerClass(ed);var td=class extends wl{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0];for(let o=1;o<e.length;++o)t=Yr(t,e[o]);return t})}};td.className="Maximum";J.registerClass(td);var rd=class extends wl{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0];for(let o=1;o<e.length;++o)t=Ts(t,e[o]);return t})}};rd.className="Minimum";J.registerClass(rd);var od=class extends wl{constructor(e){super(e);this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new L("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let n of e)if(n!=null){t=!1;break}if(t)return;let o=[];for(let n=0;n<e.length;++n){let s=e[n].slice();s.splice(this.axis,1);let a=!1;for(let i of o)if(x.arraysEqual(i,s)){a=!0;break}a||o.push(s)}if(o.length>1)throw new L("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return V(()=>lp(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new L("A `Concatenate` layer should be called on a list of inputs.");let t=e,o=t[0].slice(),n=this.axis<0?o.length+this.axis:this.axis;for(let s of t.slice(1)){if(o[n]==null||s[n]==null){o[n]=null;break}o[n]+=s[n]}return o}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new L("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new L("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new L(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return V(()=>{let o=!0;if(t.forEach(a=>{if(a!=null){o=!1;return}}),o)return null;let n=[];for(let a=0;a<e.length;++a)t[a]==null?n.push(er(e[a]).asType("bool")):t[a].rank<e[a].rank?n.push(ir(t[a],-1)):n.push(t[a]);let s=Ye(n,this.axis);return xu(s,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};od.className="Concatenate";J.registerClass(od);function nd(r,e){for(;r<0;)r+=e;return r}function oq(r,e,t){if(r.shape.length>3||e.shape.length>3)throw new Ne("batchDot is not implemented for tensors of 4D or higher rank yet");if(x.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),x.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),r.dtype==="complex64"||e.dtype==="complex64")throw new Ne("batchDot is not implemented for complex64-type Tensors yet.");let o=r.shape.length,n=e.shape.length;t==null&&(t=[o-1,n-2]);let s=t;return V(()=>{let a;if(o>n){a=o-n;let l=[];for(let u=0;u<a;++u)l.push(1);e=e.reshape(e.shape.concat(l))}else if(n>o){a=n-o;let l=[];for(let u=0;u<a;++u)l.push(1);r=r.reshape(r.shape.concat(l))}else a=0;let i;if(r.shape.length===2&&e.shape.length===2)s[0]===s[1]?i=r.mul(e).sum(s[0]):i=r.transpose([1,0]).mul(e).sum(s[1]);else{let l=s[0]!==r.shape.length-1,u=s[1]===e.shape.length-1;i=r.matMul(e,l,u)}if(a>0){let l;o>n?l=o+n-3:l=o-1;let u=[];for(let c=l;c<l+a;++c)u.push(c);i=i.squeeze(u)}return i.shape.length===1&&(i=i.expandDims(1)),i})}var sd=class extends wl{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){x.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],o=e[1];if(t.length>3||o.length>3)throw new Ne("Dot layer does not support tensors of 4D or higher rank yet.");let n=this.interpretAxes(t,o);if(t[n[0]]!==o[n[1]])throw new L(`Dimension incompatibility: ${t[n[0]]} !== ${o[n[1]]}`)}mergeFunction(e){if(e.length!==2)throw new L(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],o=e[1],n;return Array.isArray(this.axes)?n=this.axes.map((s,a)=>nd(s,e[a].shape.length)):n=[nd(this.axes,t.shape.length),nd(this.axes,o.shape.length)],this.normalize&&(t=yf(t,n[0]),o=yf(o,n[1])),oq(t,o,n)}interpretAxes(e,t){let o;return Array.isArray(this.axes)?o=this.axes:o=[nd(this.axes,e.length),nd(this.axes,t.length)],o}computeOutputShape(e){x.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),o=e[1].slice();if(t.length>3||o.length>3)throw new Ne("Dot layer does not support tensors of 4D or higher rank yet.");let n=this.interpretAxes(t,o);t.splice(n[0],1),o.splice(n[1],1),o.splice(0,1);let s=t.concat(o);return s.length===1&&s.push(1),s}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};sd.className="Dot";J.registerClass(sd);var id=class extends Pe{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return V(()=>{this.invokeCallHook(e,t);let o=Fe(e);return ul(()=>up(o.shape,0,this.stddev).add(o),()=>o,t.training||!1)})}};id.className="GaussianNoise";J.registerClass(id);var ad=class extends Pe{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return V(()=>{this.invokeCallHook(e,t);let o=Fe(e);return this.rate>0&&this.rate<1?ul(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return o.mul(up(o.shape,1,s))},()=>o,t.training||!1):o})}};ad.className="GaussianDropout";J.registerClass(ad);var ld=class extends Pe{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Fe(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return V(()=>{if(this.rate<1&&this.rate>0){let o=this._getNoiseShape(e);return ul(()=>{let s=Fe(e),a=1.6732632423543772,i=1.0507009873554805,l=-a*i,u=io(As(o),this.rate);u=Fa(u,"float32");let c=((1-this.rate)*(1+this.rate*l**2))**-.5,p=-c*l*this.rate;return s.mul(u).add(u.add(-1).mul(l)).mul(c).add(p)},()=>Fe(e),t.training||!1)}return e})}};ld.className="AlphaDropout";J.registerClass(ld);function ud(r,e,t,o,n,s=.001){let a;if(r.rank===2)a=nw(r,e,t,o,n,s);else if(r.rank===3)a=sw(r,e,t,o,n,s);else if(r.rank===4)a=iw(r,e,t,o,n,s);else throw new Ne(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return a}function nq(r,e,t,o,n=.001){return V(()=>{let s=qc(r,o),a=s.mean,i=s.variance;return[ud(r,a,i,t,e,n),a,i]})}function sq(r,e,t,o,n=.001){return V(()=>{let s=qc(r,o),a=s.mean,i=s.variance,l=[];for(let d of Mr(0,r.rank))o.indexOf(d)!==-1?l.push(1):l.push(r.shape[d]);let u=a.reshape(l),c=i.reshape(l),p=e==null?null:e.reshape(l),m=t==null?null:t.reshape(l);return[ud(r,u,c,m,p,n),a,i]})}function iq(r,e,t,o,n=.001){return x.arraysEqual(o.slice().sort(),Mr(0,r.rank-1))?nq(r,e,t,o,n):sq(r,e,t,o,n)}var cd=class extends Pe{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=pt(e.betaInitializer||"zeros"),this.gammaInitializer=pt(e.gammaInitializer||"ones"),this.movingMeanInitializer=pt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=pt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ft(e.betaConstraint),this.gammaConstraint=Ft(e.gammaConstraint),this.betaRegularizer=yt(e.betaRegularizer),this.gammaRegularizer=yt(e.gammaRegularizer)}build(e){e=Ze(e);let t=this.axis>=0?this.axis:this.axis+e.length,o=e[t];if(o==null)throw new L(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Nt({ndim:e.length,axes:{[t]:o}})];let n=[o];this.scale&&(this.gamma=this.addWeight("gamma",n,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",n,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",n,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",n,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return V(()=>{let o=t.training==null?!1:t.training,n=Fe(e),s=n.shape,a=s.length,i=Mr(0,a),l=this.axis>=0?this.axis:this.axis+a;i.splice(l,1);let u=Un(1,a);u[l]=s[l];let c=i.slice();c.sort();let p=!x.arraysEqual(c,Mr(0,a).slice(0,a-1)),m=()=>{if(p){let b=this.movingMean.read().reshape(u),w=this.movingVariance.read().reshape(u),_=this.center?this.beta.read().reshape(u):null,C=this.scale?this.gamma.read().reshape(u):null;return ud(n,b,w,_,C,this.epsilon)}else return ud(n,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!o)return m();let[f,d,h]=iq(n,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(b,w,_)=>{V(()=>{let C=1-_,D=b.read(),T=D.sub(w).mul(C);b.write(D.sub(T))})};return(()=>{g(this.movingMean,d,this.momentum),g(this.movingVariance,h,this.momentum)})(),f})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:kt(this.betaInitializer),gammaInitializer:kt(this.gammaInitializer),movingMeanInitializer:kt(this.movingMeanInitializer),movingVarianceInitializer:kt(this.movingVarianceInitializer),betaRegularizer:st(this.betaRegularizer),gammaRegularizer:st(this.gammaRegularizer),betaConstraint:Rt(this.betaConstraint),gammaConstraint:Rt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};cd.className="BatchNormalization";J.registerClass(cd);var pd=class extends Pe{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=pt(e.betaInitializer||"zeros"),this.gammaInitializer=pt(e.gammaInitializer||"ones"),this.betaRegularizer=yt(e.betaRegularizer),this.gammaRegularizer=yt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Ze(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(let s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==qn(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let o=this.axis.map(s=>e[s]),n=!0;this.scale?this.gamma=this.addWeight("gamma",o,"float32",this.gammaInitializer,this.gammaRegularizer,n):this.gamma=null,this.center?this.beta=this.addWeight("beta",o,"float32",this.betaInitializer,this.betaRegularizer,n):this.beta=null,this.built=!0}call(e,t){let o=Fe(e),n=o.shape,s=n.length;return V(()=>{let a=!0,{mean:i,variance:l}=qc(o,this.axis,a),u=Un(1,s);for(let h of this.axis)u[h]=n[h];let c=h=>h!=null&&h.shape.length!==s&&this.axis!==[s-1]?h.reshape(u):h,p=c(this.gamma.read()),m=c(this.beta.read()),f=[],d=[];for(let h=0;h<s;++h)this.axis.indexOf(h)!==-1?(f.push(n[h]),d.push(1)):(f.push(1),d.push(n[h]));return i=i.tile(f),l=l.tile(f),p=p.tile(d),m=m.tile(d),ud(o,i,l,m,p,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:kt(this.betaInitializer),gammaInitializer:kt(this.gammaInitializer),betaRegularizer:st(this.betaRegularizer),gammaRegularizer:st(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};pd.className="LayerNormalization";J.registerClass(pd);function aq(r,e,t){return V(()=>{if(r.rank!==4)throw new L(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new L("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=Zr()),t!=="channelsLast"&&t!=="channelsFirst")throw new L(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let o;return t==="channelsFirst"?o=[[0,0],[0,0],e[0],e[1]]:o=[[0,0],e[0],e[1],[0,0]],Rr(r,o)})}var md=class extends Pe{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Zr():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new L(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,o;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],o=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new L(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new L(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);o=e.padding[1]}this.padding=[t,o]}this.inputSpec=[new Nt({ndim:4})]}computeOutputShape(e){e=Ze(e);let t,o;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?o=e[3]+this.padding[1][0]+this.padding[1][1]:o=null,[e[0],e[1],t,o]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?o=e[2]+this.padding[1][0]+this.padding[1][1]:o=null,[e[0],t,o,e[3]])}call(e,t){return V(()=>aq(Fe(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};md.className="ZeroPadding2D";J.registerClass(md);function Wg(r,e,t,o,n,s){return V(()=>{$t(n),o_(s),Jr(o),t==null&&(t=[1,1]),o==null&&(o="valid"),n==null&&(n=Zr()),s==null&&(s="max"),r=Rf(r,n);let a,i=o==="same"?"same":"valid";return s==="max"?a=Na(r,e,t,i):a=wa(r,e,t,i),n==="channelsFirst"&&(a=je(a,[0,3,1,2])),a})}function w1(r,e,t,o,n,s){return V(()=>{$t(n),o_(s),Jr(o),t==null&&(t=[1,1,1]),o==null&&(o="valid"),n==null&&(n=Zr()),s==null&&(s="max"),r=$_(r,n);let a,i=o==="same"?"same":"valid";return s==="max"?a=Pm(r,e,t,i):a=Im(r,e,t,i),n==="channelsFirst"&&(a=je(a,[0,4,1,2,3])),a})}var M_=class extends Pe{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new L(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Wt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new L(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Wt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Jr(this.padding),this.inputSpec=[new Nt({ndim:3})]}computeOutputShape(e){e=Ze(e);let t=po(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return V(()=>{this.invokeCallHook(e,t),e=Oa(Fe(e),2);let o=this.poolingFunction(Fe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Co(o,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},fd=class extends M_{constructor(e){super(e)}poolingFunction(e,t,o,n,s){return $t(s),Jr(n),Wg(e,t,o,n,s,"max")}};fd.className="MaxPooling1D";J.registerClass(fd);var dd=class extends M_{constructor(e){super(e)}poolingFunction(e,t,o,n,s){return $t(s),Jr(n),Wg(e,t,o,n,s,"avg")}};dd.className="AveragePooling1D";J.registerClass(dd);var L_=class extends Pe{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new L(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Wt(this.poolSize,"poolSize"),Wt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,$t(this.dataFormat),Jr(this.padding),this.inputSpec=[new Nt({ndim:4})]}computeOutputShape(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],o=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=po(t,this.poolSize[0],this.padding,this.strides[0]),o=po(o,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,o]:[e[0],t,o,e[3]]}call(e,t){return V(()=>(this.invokeCallHook(e,t),this.poolingFunction(Fe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},hd=class extends L_{constructor(e){super(e)}poolingFunction(e,t,o,n,s){return $t(s),Jr(n),Wg(e,t,o,n,s,"max")}};hd.className="MaxPooling2D";J.registerClass(hd);var gd=class extends L_{constructor(e){super(e)}poolingFunction(e,t,o,n,s){return $t(s),Jr(n),Wg(e,t,o,n,s,"avg")}};gd.className="AveragePooling2D";J.registerClass(gd);var z_=class extends Pe{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new L(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Wt(this.poolSize,"poolSize"),Wt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,$t(this.dataFormat),Jr(this.padding),this.inputSpec=[new Nt({ndim:5})]}computeOutputShape(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],o=this.dataFormat==="channelsFirst"?e[3]:e[2],n=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=po(t,this.poolSize[0],this.padding,this.strides[0]),o=po(o,this.poolSize[1],this.padding,this.strides[1]),n=po(n,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,o,n]:[e[0],t,o,n,e[4]]}call(e,t){return V(()=>(this.invokeCallHook(e,t),this.poolingFunction(Fe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},xd=class extends z_{constructor(e){super(e)}poolingFunction(e,t,o,n,s){return $t(s),Jr(n),w1(e,t,o,n,s,"max")}};xd.className="MaxPooling3D";J.registerClass(xd);var yd=class extends z_{constructor(e){super(e)}poolingFunction(e,t,o,n,s){return $t(s),Jr(n),w1(e,t,o,n,s,"avg")}};yd.className="AveragePooling3D";J.registerClass(yd);var B_=class extends Pe{constructor(e){super(e);this.inputSpec=[new Nt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Ne}},bd=class extends B_{constructor(e){super(e||{})}call(e,t){return V(()=>{let o=Fe(e);return dt(o,1)})}};bd.className="GlobalAveragePooling1D";J.registerClass(bd);var wd=class extends B_{constructor(e){super(e||{})}call(e,t){return V(()=>{let o=Fe(e);return lr(o,1)})}};wd.className="GlobalMaxPooling1D";J.registerClass(wd);var V_=class extends Pe{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,$t(this.dataFormat),this.inputSpec=[new Nt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Ne}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},_d=class extends V_{call(e,t){return V(()=>{let o=Fe(e);return this.dataFormat==="channelsLast"?dt(o,[1,2]):dt(o,[2,3])})}};_d.className="GlobalAveragePooling2D";J.registerClass(_d);var kd=class extends V_{call(e,t){return V(()=>{let o=Fe(e);return this.dataFormat==="channelsLast"?lr(o,[1,2]):lr(o,[2,3])})}};kd.className="GlobalMaxPooling2D";J.registerClass(kd);var G_=class extends Pe{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,o={}){let n=t.layer,s=Qr(n,o);delete t.layer;let a={layer:s};return Object.assign(a,t),new e(a)}},vd=class extends G_{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=Ze(e),e.length<3)throw new L(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Ze(e);let t=[e[0]].concat(e.slice(2)),o=this.layer.computeOutputShape(t),n=e[1];return[o[0],n].concat(o.slice(1))}call(e,t){return V(()=>(e=Fe(e),O_((a,i)=>[Fe(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};vd.className="TimeDistributed";J.registerClass(vd);function lq(r){zi(IT,"BidirectionalMergeMode",r)}var uq="concat",Cd=class extends G_{constructor(e){super(e);let t=e.layer.getConfig(),o={};o.className=e.layer.getClassName(),o.config=t,this.forwardLayer=Qr(o),t.goBackwards=t.goBackwards!==!0;let n={};if(n.className=e.layer.getClassName(),n.config=t,this.backwardLayer=Qr(n),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?uq:e.mergeMode,lq(this.mergeMode),e.weights)throw new Ne("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,o=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,o)),this.backwardLayer.setWeights(e.slice(o))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let o,n,s;return this.returnState&&(s=t.slice(1)),o=t[0],o=o,this.mergeMode==="concat"?(o[o.length-1]*=2,n=[o]):this.mergeMode==null?n=[o,o.slice()]:n=[o],this.returnState?this.mergeMode==null?n.concat(s).concat(s.slice()):[o].concat(s).concat(s.slice()):hr(n)}apply(e,t){let o=t==null?null:t.initialState,n=t==null?null:t.constants;t==null&&(t={});let s=F_(e,o,n,this.numConstants);if(e=s.inputs,o=s.initialState,n=s.constants,Array.isArray(e)&&(o=e.slice(1),e=e[0]),(o==null||o.length===0)&&n==null)return super.apply(e,t);let a=[],i=[];if(o!=null){let u=o.length;if(u%2>0)throw new L("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=o,a.push(...o);let c=o.map(p=>new Nt({shape:p.shape}));this.forwardLayer.stateSpec=c.slice(0,u/2),this.backwardLayer.stateSpec=c.slice(u/2),i.push(...c)}if(n!=null)throw new Ne("Support for constants in Bidirectional layers is not implemented yet.");let l=a[0]instanceof zr;for(let u of a)if(u instanceof zr!==l)throw new L("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){let u=[e].concat(a),c=this.inputSpec.concat(i),p=this.inputSpec;this.inputSpec=c;let m=super.apply(u,t);return this.inputSpec=p,m}else return super.apply(e,t)}call(e,t){return V(()=>{let o=t.initialState,n,s;if(o==null)n=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{let l=o.slice(0,o.length/2),u=o.slice(o.length/2);n=this.forwardLayer.call(e,Object.assign(t,{initialState:l})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let a;this.returnState&&(Array.isArray(n)&&(a=n.slice(1).concat(s.slice(1))),n=n[0],s=s[0]),this.returnSequences&&(s=Ht(s,1));let i;return this.mergeMode==="concat"?i=lp([n,s]):this.mergeMode==="sum"?i=Q(n,s):this.mergeMode==="ave"?i=O(.5,Q(n,s)):this.mergeMode==="mul"?i=O(n,s):this.mergeMode==null&&(i=[n,s]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){$s(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),$s(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let o;if(this.returnSequences?this.mergeMode==null?o=[t,t]:o=t:this.mergeMode==null?o=[null,null]:o=null,this.returnState){let s=this.forwardLayer.states.map(a=>null);return Array.isArray(o)?o.concat(s).concat(s):[o].concat(s).concat(s)}else return o}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let o=Qr(t.layer);if(delete t.layer,t.numConstants!=null)throw new Ne("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let n=t;return n.layer=o,new e(n)}};Cd.className="Bidirectional";J.registerClass(Cd);function cq(r){return new Bi(r)}function pq(r){return new Af(r)}function mq(r){return new Nf(r)}function fq(r){return new Sf(r)}function dq(r){return new Tf(r)}function hq(r){return new Df(r)}function gq(r){return new Ef(r)}function xq(r){return new Qu(r)}function yq(r){return new xl(r)}function bq(r){return new Ff(r)}function wq(r){return new Ju(r)}function _q(r){return new Of(r)}function kq(r){return new Pf(r)}function vq(r){return new Mf(r)}function Cq(r){return new Lf(r)}function Iq(r){return new Hf(r)}function Nq(r){return new Uf(r)}function Sq(r){return new Tp(r)}function Tq(r){return new Wf(r)}function Aq(r){return new jf(r)}function Eq(r){return new qf(r)}function Dq(r){return new Kf(r)}function $q(r){return new Xf(r)}function Rq(r){return new Zf(r)}function Fq(r){return new Jf(r)}function Oq(r){return new ed(r)}function Pq(r){return new od(r)}function Mq(r){return new td(r)}function Lq(r){return new rd(r)}function zq(r){return new Qf(r)}function Bq(r){return new sd(r)}function Vq(r){return new cd(r)}function Gq(r){return new pd(r)}function Wq(r){return new md(r)}function U_(r){return new dd(r)}function Uq(r){return U_(r)}function jq(r){return U_(r)}function j_(r){return new gd(r)}function Hq(r){return j_(r)}function qq(r){return j_(r)}function H_(r){return new yd(r)}function Kq(r){return H_(r)}function Xq(r){return H_(r)}function Yq(r){return new bd(r)}function Zq(r){return new _d(r)}function _1(r){return new wd(r)}function k1(r){return new kd(r)}function v1(r){return new fd(r)}function C1(r){return new hd(r)}function Jq(r){return new xd(r)}function Qq(r){return new Bf(r)}function eK(r){return new Np(r)}function tK(r){return new Vf(r)}function rK(r){return new bl(r)}function oK(r){return new zf(r)}function nK(r){return new Ip(r)}function sK(r){return new Gf(r)}function iK(r){return new Sp(r)}function aK(r){return new mo(r)}function lK(r){return new Cp(r)}function uK(r){return new Cd(r)}function cK(r){return new vd(r)}var pK=_1,mK=k1,fK=v1,dK=C1;function hK(r){return new id(r)}function gK(r){return new ad(r)}function xK(r){return new ld(r)}function yK(r){return new Yf(r)}var q_={};Je(q_,{MAPE:()=>AK,MSE:()=>$K,binaryAccuracy:()=>bK,binaryCrossentropy:()=>wK,categoricalAccuracy:()=>kK,categoricalCrossentropy:()=>vK,cosineProximity:()=>NK,mape:()=>EK,meanAbsoluteError:()=>SK,meanAbsolutePercentageError:()=>TK,meanSquaredError:()=>DK,mse:()=>RK,precision:()=>CK,recall:()=>IK,sparseCategoricalAccuracy:()=>_K});function bK(r,e){return _f(r,e)}function wK(r,e){return $g(r,e)}function _K(r,e){return Rg(r,e)}function kK(r,e){return kf(r,e)}function vK(r,e){return vf(r,e)}function CK(r,e){return u_(r,e)}function IK(r,e){return jT(r,e)}function NK(r,e){return bf(r,e)}function SK(r,e){return bp(r,e)}function TK(r,e){return fl(r,e)}function AK(r,e){return fl(r,e)}function EK(r,e){return fl(r,e)}function DK(r,e){return Gi(r,e)}function $K(r,e){return Gi(r,e)}function RK(r,e){return Gi(r,e)}var K_={};Je(K_,{modelFromJSON:()=>u1});var X_={};Je(X_,{l1:()=>OK,l1l2:()=>FK,l2:()=>PK});function FK(r){return new Yu(r)}function OK(r){return h1(r)}function PK(r){return g1(r)}var Ug=class extends ml{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof No))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function jg(r,e){return r<e}function I1(r,e){return r>e}var Hg=class extends Ug{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Ne("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=jg:this.mode==="max"?this.monitorFunc=I1:this.monitor.indexOf("acc")!==-1?this.monitorFunc=I1:this.monitorFunc=jg,this.monitorFunc===jg&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===jg?Infinity:-Infinity}async onEpochEnd(e,t){await Vi(t);let o=this.getMonitorValue(t);o!=null&&(this.monitorFunc(o-this.minDelta,this.best)?(this.best=o,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function MK(r){return new Hg(r)}var N1={earlyStopping:MK};var Yn;(function(r){r[r.DT_INVALID=0]="DT_INVALID",r[r.DT_FLOAT=1]="DT_FLOAT",r[r.DT_DOUBLE=2]="DT_DOUBLE",r[r.DT_INT32=3]="DT_INT32",r[r.DT_UINT8=4]="DT_UINT8",r[r.DT_INT16=5]="DT_INT16",r[r.DT_INT8=6]="DT_INT8",r[r.DT_STRING=7]="DT_STRING",r[r.DT_COMPLEX64=8]="DT_COMPLEX64",r[r.DT_INT64=9]="DT_INT64",r[r.DT_BOOL=10]="DT_BOOL",r[r.DT_QINT8=11]="DT_QINT8",r[r.DT_QUINT8=12]="DT_QUINT8",r[r.DT_QINT32=13]="DT_QINT32",r[r.DT_BFLOAT16=14]="DT_BFLOAT16",r[r.DT_FLOAT_REF=101]="DT_FLOAT_REF",r[r.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",r[r.DT_INT32_REF=103]="DT_INT32_REF",r[r.DT_UINT8_REF=104]="DT_UINT8_REF",r[r.DT_INT16_REF=105]="DT_INT16_REF",r[r.DT_INT8_REF=106]="DT_INT8_REF",r[r.DT_STRING_REF=107]="DT_STRING_REF",r[r.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",r[r.DT_INT64_REF=109]="DT_INT64_REF",r[r.DT_BOOL_REF=110]="DT_BOOL_REF",r[r.DT_QINT8_REF=111]="DT_QINT8_REF",r[r.DT_QUINT8_REF=112]="DT_QUINT8_REF",r[r.DT_QINT32_REF=113]="DT_QINT32_REF",r[r.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(Yn||(Yn={}));var S1;(function(r){let e;(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(e=r.CheckpointFormatVersion||(r.CheckpointFormatVersion={}))})(S1||(S1={}));var Y_={};function T1(r,e){let t={tfOpName:r,category:"custom",inputs:[],attrs:[],customExecutor:e};Y_[r]=t}function qg(r){return Y_[r]}function A1(r){delete Y_[r]}function v(r,e,t,o,n){let s=e.inputParams[r];if(s&&s.inputIndexStart!==void 0){let i=s.inputIndexStart,l=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?i+1:s.inputIndexEnd;if(s.type==="tensor")return gr(e.inputNames[s.inputIndexStart],t,o,n);if(s.type==="tensors")return e.inputNames.slice(i,l).map(m=>gr(m,t,o,n));let u=gr(e.inputNames.slice(i)[0],t,o,n),c=u.dataSync();return s.type==="number"?c[0]:x.toNestedArray(u.shape,c)}let a=e.attrParams[r];return a&&a.value}function gr(r,e,t,o){let[n,s]=eo(r);if(o!=null){let i=o.getHashTableHandleByName(n);if(i!=null)return i}let a=t.currentContextIds.find(i=>!!e[Kg(n,i)]);return a!==void 0?e[Kg(n,a)][s]:void 0}function E1(r,e,t){return e[Kg(r,t.currentContextId)]}function Ms(r,e){let[t,o]=eo(r);return[Kg(t,e&&e.currentContextId),o]}function Kg(r,e){return e?`${r}-${e}`:r}function eo(r){let e=r.split(":");return e.length===1?[r,0]:[e[0],Number(e[e.length-1])]}function Id(r,e,t){let o=v("pad",r,e,t);if(o==="explicit"){o=v("explicitPaddings",r,e,t);let n=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)n[s][0]=o[s*2],n[s][1]=o[s*2+1];return n}return o}function Ls(r){return r.kept?r:Oo(r)}var Z_={};Je(Z_,{json:()=>LK});var LK=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var J_={};Je(J_,{json:()=>zK});var zK=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var Q_={};Je(Q_,{json:()=>BK});var BK=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}];var ek={};Je(ek,{json:()=>VK});var VK=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var tk={};Je(tk,{json:()=>GK});var GK=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var rk={};Je(rk,{json:()=>WK});var WK=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var ok={};Je(ok,{json:()=>UK});var UK=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var nk={};Je(nk,{json:()=>jK});var jK=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var sk={};Je(sk,{json:()=>HK});var HK=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}];var ik={};Je(ik,{json:()=>qK});var qK=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}];var ak={};Je(ak,{json:()=>KK});var KK=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var lk={};Je(lk,{json:()=>XK});var XK=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var uk={};Je(uk,{json:()=>YK});var YK=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var ck={};Je(ck,{json:()=>ZK});var ZK=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var pk={};Je(pk,{json:()=>JK});var JK=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var mk={};Je(mk,{json:()=>QK});var QK=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var fk={};Je(fk,{json:()=>e6});var e6=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];var Xg=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[Z_,J_,Q_,ek,tk,rk,ok,ak,ik,nk,lk,uk,ck,pk,mk,fk,sk],t=[].concat(...e.map(o=>o.json));this.opMappers=t.reduce((o,n)=>(o[n.tfOpName]=n,o),{})}transformGraph(e,t={}){let o=e.node,n=[],s=[],a=[],i=o.reduce((h,g)=>(h[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?n.push(h[g.name]):g.op==="Const"?s.push(h[g.name]):(g.input==null||g.input.length===0)&&a.push(h[g.name]),h),{}),l=[],u=[],c={},p={};t!=null&&(c=this.mapSignatureEntries(t.inputs),p=this.mapSignatureEntries(t.outputs));let m=Object.keys(i);m.forEach(h=>{let g=i[h];g.inputNames.forEach(y=>{let[b]=Ms(y);g.inputs.push(i[b]),i[b].children.push(g)})}),Object.keys(p).length===0?m.forEach(h=>{let g=i[h];g.children.length===0&&u.push(g)}):Object.keys(p).forEach(h=>{let[g]=Ms(h),y=i[g];y!=null&&(y.signatureKey=p[h],u.push(y))}),Object.keys(c).length>0?Object.keys(c).forEach(h=>{let[g]=Ms(h),y=i[g];y&&(y.signatureKey=c[h],l.push(y))}):l=n;let f={};e.library!=null&&e.library.function!=null&&(f=e.library.function.reduce((h,g)=>(h[g.signature.name]=this.mapFunction(g),h),{}));let d={nodes:i,inputs:l,outputs:u,weights:s,placeholders:n,signature:t,functions:f};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,o)=>(t[e[o].name]=o,t),{})}mapNode(e){let t=qg(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let o={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(n=>n.startsWith("^")?n.substr(1):n),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return t.inputs!=null&&(o.inputParams=t.inputs.reduce((n,s)=>(n[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},n),{})),t.attrs!=null&&(o.attrParams=t.attrs.reduce((n,s)=>{let a=s.type,i;switch(s.type){case"string":i=Yg(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Yg(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":i=ox(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=ox(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":i=Jg(e.attr,s.tfName,s.defaultValue||0),i===void 0&&!!s.tfDeprecatedName&&(i=Jg(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":i=rx(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=rx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":i=Zg(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Zg(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":i=sx(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=sx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":i=tx(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=tx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":i=nx(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=nx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":i=Qg(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Qg(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":i=ex(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=ex(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":i=D1(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=D1(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${e.op}`)}return n[s.name]={value:i,type:a},n},{})),o}mapFunction(e){let t=e.nodeDef,o=[],n=[],s={};t!=null&&(s=t.reduce((p,m)=>(p[m.name]=this.mapNode(m),m.op==="Const"&&n.push(p[m.name]),p),{}));let a=[],i=[];e.signature.inputArg.forEach(p=>{let[m]=Ms(p.name),f={name:m,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:dk(p.type),type:"dtype"}},children:[]};f.signatureKey=p.name,a.push(f),s[m]=f}),Object.keys(s).forEach(p=>{let m=s[p];m.inputNames.forEach(f=>{let[d]=Ms(f);m.inputs.push(s[d]),s[d].children.push(m)})});let u=e.ret;e.signature.outputArg.forEach(p=>{let[m,f]=Ms(u[p.name]),d=s[m];d!=null&&(d.defaultOutput=f,i.push(d))});let c=this.mapArgsToSignature(e);return{nodes:s,inputs:a,outputs:i,weights:n,placeholders:o,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,o)=>(t[o.name]=this.mapArgToTensorInfo(o),t),{}),outputs:e.signature.outputArg.reduce((t,o)=>(t[o.name]=this.mapArgToTensorInfo(o,e.ret),t),{})}}mapArgToTensorInfo(e,t){let o=e.name;return t!=null&&(o=t[o]),{name:o,dtype:e.type}}};function t6(r){let e=W().global;if(typeof e.atob!="undefined")return e.atob(r);if(typeof Buffer!="undefined")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function $1(r,e){let t=Array.isArray(r)?String.fromCharCode.apply(null,r):t6(r);return e?t:t.toLowerCase()}function Yg(r,e,t,o=!1){let n=r[e];return n!=null?$1(n.s,o):t}function Zg(r,e,t){let o=r[e];return o?o.b:t}function Jg(r,e,t){let o=r[e]||{},n=o.i!=null?o.i:o.f!=null?o.f:t;return typeof n=="number"?n:parseInt(n,10)}function dk(r){switch(typeof r=="string"&&(r=Yn[r]),r){case Yn.DT_FLOAT:return"float32";case Yn.DT_INT32:case Yn.DT_INT64:case Yn.DT_INT8:case Yn.DT_UINT8:return"int32";case Yn.DT_BOOL:return"bool";case Yn.DT_DOUBLE:return"float32";case Yn.DT_STRING:return"string";default:return null}}function D1(r,e,t){let o=r[e];return o&&o.func?o.func.name:t}function Qg(r,e,t){let o=r[e];return o&&o.type?dk(o.type):t}function ex(r,e,t){let o=r[e];return o&&o.list&&o.list.type?o.list.type.map(n=>dk(n)):t}function R1(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function tx(r,e,t){let o=r[e];return o&&o.shape?R1(o.shape):t}function rx(r,e,t){let o=r[e];return o?((o.list.f&&o.list.f.length?o.list.f:o.list.i)||[]).map(n=>typeof n=="number"?n:parseInt(n,10)):t}function ox(r,e,t,o=!1){let n=r[e];return n&&n.list&&n.list.s?n.list.s.map(s=>$1(s,o)):t}function nx(r,e,t){let o=r[e];return o&&o.list&&o.list.shape?o.list.shape.map(n=>R1(n)):t}function sx(r,e,t){let o=r[e];return o&&o.list&&o.list.b?o.list.b:t}var hk=class{constructor(e,t,o){this.node=e,this.tensorMap=t,this.context=o,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(n=>this.getInput(n)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((n,s)=>(n[s]=this.getAttr(s),n),{}))}getInput(e){return gr(e,this.tensorMap,this.context)}getAttr(e,t){let o=this.node.rawAttrs[e];if(o.tensor!=null)return gr(e,this.tensorMap,this.context);if(o.i!=null||o.f!=null)return Jg(this.node.rawAttrs,e,t);if(o.s!=null)return Yg(this.node.rawAttrs,e,t);if(o.b!=null)return Zg(this.node.rawAttrs,e,t);if(o.shape!=null)return tx(this.node.rawAttrs,e,t);if(o.type!=null)return Qg(this.node.rawAttrs,e,t);if(o.list!=null){if(o.list.i!=null||o.list.f!=null)return rx(this.node.rawAttrs,e,t);if(o.list.s!=null)return ox(this.node.rawAttrs,e,t);if(o.list.shape!=null)return nx(this.node.rawAttrs,e,t);if(o.list.b!=null)return sx(this.node.rawAttrs,e,t);if(o.list.type!=null)return ex(this.node.rawAttrs,e,t)}return t}};var F1=(r,e,t)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[Q(v("a",r,e,t),v("b",r,e,t))];case"AddN":return[ew(v("tensors",r,e,t))];case"FloorMod":case"Mod":return[Lm(v("a",r,e,t),v("b",r,e,t))];case"Mul":return[O(v("a",r,e,t),v("b",r,e,t))];case"RealDiv":case"Div":return[me(v("a",r,e,t),v("b",r,e,t))];case"DivNoNan":return[Em(v("a",r,e,t),v("b",r,e,t))];case"FloorDiv":return[gu(v("a",r,e,t),v("b",r,e,t))];case"Sub":return[ce(v("a",r,e,t),v("b",r,e,t))];case"Minimum":return[Ts(v("a",r,e,t),v("b",r,e,t))];case"Maximum":return[Yr(v("a",r,e,t),v("b",r,e,t))];case"Pow":return[Fr(v("a",r,e,t),v("b",r,e,t))];case"SquaredDifference":return[Mu(v("a",r,e,t),v("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var O1=(r,e,t)=>{switch(r.op){case"Abs":case"ComplexAbs":return[It(v("x",r,e,t))];case"Acos":return[xm(v("x",r,e,t))];case"Acosh":return[ym(v("x",r,e,t))];case"Asin":return[wm(v("x",r,e,t))];case"Asinh":return[_m(v("x",r,e,t))];case"Atan":return[km(v("x",r,e,t))];case"Atan2":return[vm(v("x",r,e,t),v("y",r,e,t))];case"Atanh":return[Cm(v("x",r,e,t))];case"Ceil":return[Nm(v("x",r,e,t))];case"Complex":return[ko(v("real",r,e,t),v("imag",r,e,t))];case"Cos":return[ka(v("x",r,e,t))];case"Cosh":return[ku(v("x",r,e,t))];case"Elu":return[Is(v("x",r,e,t))];case"Erf":return[Dm(v("x",r,e,t))];case"Exp":return[Yt(v("x",r,e,t))];case"Expm1":return[$m(v("x",r,e,t))];case"Floor":return[Ns(v("x",r,e,t))];case"Log":return[ar(v("x",r,e,t))];case"Log1p":return[Nu(v("x",r,e,t))];case"Imag":return[Cu(v("x",r,e,t))];case"Neg":return[He(v("x",r,e,t))];case"Reciprocal":return[Bm(v("x",r,e,t))];case"Real":return[il(v("x",r,e,t))];case"Relu":return[Nr(v("x",r,e,t))];case"Round":return[Vm(v("x",r,e,t))];case"Selu":return[Ru(v("x",r,e,t))];case"Sigmoid":return[qr(v("x",r,e,t))];case"Sin":return[Fu(v("x",r,e,t))];case"Sign":return[Wm(v("x",r,e,t))];case"Sinh":return[Ou(v("x",r,e,t))];case"Softplus":return[Ss(v("x",r,e,t))];case"Sqrt":return[gt(v("x",r,e,t))];case"Square":return[Oe(v("x",r,e,t))];case"Tanh":return[Fi(v("x",r,e,t))];case"Tan":return[qm(v("x",r,e,t))];case"ClipByValue":return[sr(v("x",r,e,t),v("clipValueMin",r,e,t),v("clipValueMax",r,e,t))];case"Relu6":return[Du(v("x",r,e,t))];case"Rsqrt":return[$u(gr(r.inputNames[0],e,t))];case"Prod":return[Au(v("x",r,e,t),v("axes",r,e,t))];case"LeakyRelu":return[Ca(v("x",r,e,t),v("alpha",r,e,t))];case"Prelu":return[Ta(v("x",r,e,t),v("alpha",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function So(r,e,t=""){if(!(typeof r=="number"||typeof e=="number")){x.assert(r.length===e.length,()=>t+` Shapes ${r} and ${e} must match`);for(let o=0;o<r.length;o++){let n=r[o],s=e[o];x.assert(n<0||s<0||n===s,()=>t+` Shapes ${r} and ${e} must match`)}}}function P1(r){return!(typeof r=="number"||r.some(e=>e<0))}function Ap(r,e,t){let o=ix(r,t),n=!P1(o);if(n&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${o}`);if(n&&e.forEach(s=>{o=ix(s.shape,o)}),!P1(o))throw new Error(`Non-fully-defined elementShape: ${o}`);return o}function ix(r,e){if(typeof r=="number")return e;if(typeof e=="number")return r;if(r.length!==e.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${e}`);let t=[];for(let o=0;o<r.length;++o){let n=r[o],s=e[o];if(n>=0&&s>=0&&n!==s)throw new Error(`Incompatible shape during merge: ${r} vs. ${e}`);t[o]=n>=0?n:s}return t}var gk=class{constructor(e,t,o,n,s,a,i){this.name=e,this.dtype=t,this.maxSize=o,this.elementShape=n,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=ue(0),Et(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let o=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),So(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),o.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(o.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);o.tensor=t,Et(t),o.written=!0,this.tensors[e]=o}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((o,n)=>this.write(o,t[n]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let n=0;n<this.size();n++)e.push(n)}if(e.length===0)return $r([],[0].concat(this.elementShape));let o=this.readMany(e);return So(this.elementShape,o[0].shape,"TensorArray shape mismatch: "),Bt(o,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return $r([],[0].concat(this.elementShape));let t=[];for(let n=0;n<this.size();n++)t.push(n);let o=this.readMany(t);return So(this.elementShape,o[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${o[0].shape})`),Ye(o,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let o=Math.max(...e);if(!this.dynamicSize&&o>=this.maxSize)throw new Error(`Max index must be < array size (${o}  vs. ${this.maxSize})`);this.writeMany(e,cr(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let o=0,n=e.map(l=>(o+=l,o));if(o!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${o}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let s=o===0?0:t.size/o,a=[];V(()=>{t=M(t,[1,o,s]);for(let l=0;l<e.length;++l){let u=l===0?0:n[l-1],c=[0,u,0],p=[1,e[l],s];a[l]=M(Re(t,c,p),this.elementShape)}return a});let i=[];for(let l=0;l<e.length;l++)i[l]=l;this.writeMany(i,a)}};var ec=class{constructor(e,t,o,n=-1){this.tensors=e,this.elementShape=t,this.elementDtype=o,e!=null&&e.forEach(s=>{if(o!==s.dtype)throw new Error(`Invalid data types; op elements ${o}, but list elements ${s.dtype}`);So(t,s.shape,"TensorList shape mismatch: "),Et(s)}),this.idTensor=ue(0),this.maxNumElements=n,Et(this.idTensor)}get id(){return this.idTensor.id}copy(){return new ec([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,o=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(o!==-1&&this.tensors.length!==o)throw new Error(`Operation expected a list with ${o} elements but got a list with ${this.tensors.length} elements.`);So(e,this.elementShape,"TensorList shape mismatch: ");let n=Ap(this.elementShape,this.tensors,e);return V(()=>{let s=this.tensors.map(a=>M(a,n));return Bt(s,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let o=Ap(this.elementShape,this.tensors,e),n=this.tensors.pop();return So(n.shape,e,"TensorList shape mismatch: "),M(n,o)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(So(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Et(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,o){if(o!==this.elementDtype)throw new Error(`Invalid data types; op elements ${o}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);So(this.tensors[e].shape,t,"TensorList shape mismatch: ");let n=Ap(this.elementShape,this.tensors,t);return M(this.tensors[e],n)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);So(this.elementShape,t.shape,"TensorList shape mismatch: "),Et(t),this.tensors[e]=t}gather(e,t,o){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);So(this.elementShape,o,"TensorList shape mismatch: "),e=e.slice(0,this.size());let n=Ap(this.elementShape,this.tensors,o);return e.length===0?$r([],[0].concat(n)):V(()=>{let s=e.map(a=>M(this.tensors[a],n));return Bt(s,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);So(this.elementShape,t,"TensorList shape mismatch: ");let o=Ap(this.elementShape,this.tensors,t);return this.size()===0?$r([],[0].concat(o)):V(()=>{let n=this.tensors.map(s=>M(s,o));return Ye(n,0)})}};function M1(r,e,t){let o=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==t)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${t}`);let n=r.shape.slice(1);So(n,e,"TensorList shape mismatch: ");let s=cr(r);return new ec(s,e,o)}function L1(r,e,t){return new ec([],r,e,t)}function z1(r,e,t,o){if(e.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${r.shape[0]}`);let n=Math.max(...e);if(o!=null&&o!==-1&&n>=o)throw new Error(`Max index must be < array size (${n}  vs. ${o})`);let s=new ec([],t,r.dtype,o),a=cr(r,0);return e.forEach((i,l)=>{s.setItem(i,a[l])}),s}function B1(r,e,t){let o=0,n=e.map(c=>(o+=c,o));if(o!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${o}, and tensor's shape is: ${r.shape}`);let s=r.shape.slice(1),a=ix(s,t),i=o===0?0:r.size/o,l=V(()=>{let c=[];r=M(r,[1,o,i]);for(let p=0;p<e.length;++p){let m=p===0?0:n[p-1],f=[0,m,0],d=[1,e[p],i];c[p]=M(Re(r,f,d),a)}return r.dispose(),c}),u=new ec([],t,r.dtype,e.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}var V1=async(r,e,t)=>{switch(r.op){case"If":case"StatelessIf":{let o=v("thenBranch",r,e,t),n=v("elseBranch",r,e,t),s=v("cond",r,e,t),a=v("args",r,e,t);return(await s.data())[0]?t.functionMap[o].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[n].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{let o=v("body",r,e,t),n=v("cond",r,e,t),s=v("args",r,e,t),a=await t.functionMap[n].executeFunctionAsync(s,t.tensorArrayMap,t.tensorListMap),i=s.map(c=>c.id),l=await a[0].data();a.forEach(c=>{!c.kept&&i.indexOf(c.id)===-1&&c.dispose()});let u=s;for(;l[0];){let c=u;u=await t.functionMap[o].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);let p=u.map(f=>f.id);c.forEach(f=>{!f.kept&&i.indexOf(f.id)===-1&&p.indexOf(f.id)===-1&&f.dispose()});let m=await t.functionMap[n].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);l=await m[0].data(),m.forEach(f=>{!f.kept&&i.indexOf(f.id)===-1&&p.indexOf(f.id)===-1&&f.dispose()})}return u}case"LoopCond":{let o=v("pred",r,e,t);return[Ls(o)]}case"Switch":{let o=v("pred",r,e,t),n=v("data",r,e,t);return n.kept||(n=Ls(n)),(await o.data())[0]?[void 0,n]:[n,void 0]}case"Merge":{let o=r.inputNames.find(n=>gr(n,e,t)!==void 0);if(o){let n=gr(o,e,t);return[Ls(n)]}return}case"Enter":{let o=v("frameName",r,e,t),n=v("tensor",r,e,t);return t.enterFrame(o),[Ls(n)]}case"Exit":{let o=v("tensor",r,e,t);return t.exitFrame(),[Ls(o)]}case"NextIteration":{let o=v("tensor",r,e,t);return t.nextIteration(),[Ls(o)]}case"TensorArrayV3":{let o=v("size",r,e,t),n=v("dtype",r,e,t),s=v("elementShape",r,e,t),a=v("dynamicSize",r,e,t),i=v("clearAfterRead",r,e,t),l=v("identicalElementShapes",r,e,t),u=v("name",r,e,t),c=new gk(u,n,o,s,l,a,i);return t.addTensorArray(c),[c.idTensor,ue(1)]}case"TensorArrayWriteV3":{let o=v("tensorArrayId",r,e,t),n=v("index",r,e,t),s=v("tensor",r,e,t),a=t.getTensorArray(o.id);return a.write(n,s),[a.idTensor]}case"TensorArrayReadV3":{let o=v("tensorArrayId",r,e,t),n=v("index",r,e,t);return[t.getTensorArray(o.id).read(n)]}case"TensorArrayGatherV3":{let o=v("tensorArrayId",r,e,t),n=v("indices",r,e,t),s=v("dtype",r,e,t);return[t.getTensorArray(o.id).gather(n,s)]}case"TensorArrayScatterV3":{let o=v("tensorArrayId",r,e,t),n=v("indices",r,e,t),s=v("tensor",r,e,t),a=t.getTensorArray(o.id);return a.scatter(n,s),[a.idTensor]}case"TensorArrayConcatV3":{let o=v("tensorArrayId",r,e,t),n=t.getTensorArray(o.id),s=v("dtype",r,e,t);return[n.concat(s)]}case"TensorArraySplitV3":{let o=v("tensorArrayId",r,e,t),n=v("tensor",r,e,t),s=v("lengths",r,e,t),a=t.getTensorArray(o.id);return a.split(s,n),[a.idTensor]}case"TensorArraySizeV3":{let o=v("tensorArrayId",r,e,t),n=t.getTensorArray(o.id);return[ue(n.size(),"int32")]}case"TensorArrayCloseV3":{let o=v("tensorArrayId",r,e,t),n=t.getTensorArray(o.id);return n.clearAndClose(),[n.idTensor]}case"TensorListSetItem":{let o=v("tensorListId",r,e,t),n=v("index",r,e,t),s=v("tensor",r,e,t),a=t.getTensorList(o.id);return a.setItem(n,s),[a.idTensor]}case"TensorListGetItem":{let o=v("tensorListId",r,e,t),n=v("index",r,e,t),s=v("elementShape",r,e,t),a=v("elementDType",r,e,t);return[t.getTensorList(o.id).getItem(n,s,a)]}case"TensorListScatterV2":case"TensorListScatter":{let o=v("indices",r,e,t),n=v("tensor",r,e,t),s=v("elementShape",r,e,t),a=v("numElements",r,e,t),i=z1(n,o,s,a);return t.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let o=v("elementShape",r,e,t),n=v("elementDType",r,e,t),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let a=v(s,r,e,t),i=L1(o,n,a);return t.addTensorList(i),[i.idTensor]}case"TensorListGather":{let o=v("tensorListId",r,e,t),n=v("indices",r,e,t),s=v("elementShape",r,e,t),a=v("elementDType",r,e,t);return[t.getTensorList(o.id).gather(n,a,s)]}case"TensorListStack":{let o=v("tensorListId",r,e,t),n=v("elementShape",r,e,t),s=v("elementDType",r,e,t),a=v("numElements",r,e,t);return[t.getTensorList(o.id).stack(n,s,a)]}case"TensorListFromTensor":{let o=v("tensor",r,e,t),n=v("elementShape",r,e,t),s=v("elementDType",r,e,t),a=M1(o,n,s);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":{let o=v("tensorListId",r,e,t),n=t.getTensorList(o.id),s=v("dtype",r,e,t),a=v("elementShape",r,e,t);return[n.concat(s,a)]}case"TensorListPushBack":{let o=v("tensorListId",r,e,t),n=v("tensor",r,e,t),s=t.getTensorList(o.id);return s.pushBack(n),[s.idTensor]}case"TensorListPopBack":{let o=v("tensorListId",r,e,t),n=v("elementShape",r,e,t),s=v("elementDType",r,e,t);return[t.getTensorList(o.id).popBack(n,s)]}case"TensorListSplit":{let o=v("tensor",r,e,t),n=v("elementShape",r,e,t),s=v("lengths",r,e,t),a=B1(o,s,n);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};function G1(r,e,t){let[o,n]=v("fusedOps",r,e,t),s=o==="biasadd",a=n==="prelu",i=o==="fusedbatchnorm",l=v("numArgs",r,e,t);if(s){if(a&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(i)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");let u=v("strides",r,e,t),c=Id(r,e,t),p=v("dataFormat",r,e,t).toUpperCase(),m=v("dilations",r,e,t),[f,d]=v("args",r,e,t),h=v("leakyreluAlpha",r,e,t);return{stride:u,pad:c,dataFormat:p,dilations:m,biasArg:f,preluArg:d,activationFunc:n,leakyreluAlpha:h}}var W1=(r,e,t)=>{switch(r.op){case"Conv1D":{let o=v("stride",r,e,t),n=v("pad",r,e,t),s=v("dataFormat",r,e,t).toUpperCase(),a=v("dilation",r,e,t);return[wu(v("x",r,e,t),v("filter",r,e,t),o,n,s,a)]}case"Conv2D":{let o=v("strides",r,e,t),n=Id(r,e,t),s=v("dataFormat",r,e,t).toUpperCase(),a=v("dilations",r,e,t);return[Kr(v("x",r,e,t),v("filter",r,e,t),[o[1],o[2]],n,s,[a[1],a[2]])]}case"_FusedConv2D":{let{stride:o,pad:n,dataFormat:s,dilations:a,biasArg:i,preluArg:l,activationFunc:u,leakyreluAlpha:c}=G1(r,e,t);return[Gn.conv2d({x:v("x",r,e,t),filter:v("filter",r,e,t),strides:[o[1],o[2]],pad:n,dataFormat:s,dilations:[a[1],a[2]],bias:i,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{let{stride:o,pad:n,dataFormat:s,dilations:a,biasArg:i,preluArg:l,activationFunc:u,leakyreluAlpha:c}=G1(r,e,t);return[Gn.depthwiseConv2d({x:v("x",r,e,t),filter:v("filter",r,e,t),strides:[o[1],o[2]],pad:n,dataFormat:s,dilations:[a[1],a[2]],bias:i,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let o=v("outputShape",r,e,t),n=v("strides",r,e,t),s=Id(r,e,t);return[_u(v("x",r,e,t),v("filter",r,e,t),o,[n[1],n[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let o=v("strides",r,e,t),n=Id(r,e,t),s=v("dilations",r,e,t),a=v("dataFormat",r,e,t).toUpperCase();return[Cs(v("input",r,e,t),v("filter",r,e,t),[o[1],o[2]],n,a,[s[1],s[2]])]}case"Conv3D":{let o=v("strides",r,e,t),n=v("pad",r,e,t),s=v("dataFormat",r,e,t).toUpperCase(),a=v("dilations",r,e,t);return[Sm(v("x",r,e,t),v("filter",r,e,t),[o[1],o[2],o[3]],n,s,[a[1],a[2],a[3]])]}case"AvgPool":{let o=v("strides",r,e,t),n=v("pad",r,e,t),s=v("kernelSize",r,e,t);return[wa(v("x",r,e,t),[s[1],s[2]],[o[1],o[2]],n)]}case"MaxPool":{let o=v("strides",r,e,t),n=v("pad",r,e,t),s=v("kernelSize",r,e,t);return[Na(v("x",r,e,t),[s[1],s[2]],[o[1],o[2]],n)]}case"MaxPoolWithArgmax":{let o=v("strides",r,e,t),n=v("pad",r,e,t),s=v("kernelSize",r,e,t),a=v("includeBatchInIndex",r,e,t),{result:i,indexes:l}=vw(v("x",r,e,t),[s[1],s[2]],[o[1],o[2]],n,a);return[i,l]}case"AvgPool3D":{let o=v("strides",r,e,t),n=v("pad",r,e,t),s=v("kernelSize",r,e,t);return[Im(v("x",r,e,t),[s[1],s[2],s[3]],[o[1],o[2],o[3]],n)]}case"MaxPool3D":{let o=v("strides",r,e,t),n=v("pad",r,e,t),s=v("kernelSize",r,e,t);return[Pm(v("x",r,e,t),[s[1],s[2],s[3]],[o[1],o[2],o[3]],n)]}case"Dilation2D":{let o=v("strides",r,e,t),n=v("pad",r,e,t),s=v("dilations",r,e,t),a=o[1],i=o[2],l=s[1],u=s[2];return[Am(v("x",r,e,t),v("filter",r,e,t),[a,i],n,[l,u],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var U1=(r,e,t)=>{switch(r.op){case"Fill":{let o=v("shape",r,e,t),n=v("dtype",r,e,t),s=v("value",r,e,t);return[va(o,s,n)]}case"LinSpace":{let o=v("start",r,e,t),n=v("stop",r,e,t),s=v("num",r,e,t);return[xw(o,n,s)]}case"Multinomial":{let o=v("logits",r,e,t),n=v("numSamples",r,e,t),s=v("seed",r,e,t);return[Cw(o,n,s)]}case"OneHot":{let o=v("indices",r,e,t),n=v("depth",r,e,t),s=v("onValue",r,e,t),a=v("offValue",r,e,t);return[vs(o,n,s,a)]}case"Ones":return[Ir(v("shape",r,e,t),v("dtype",r,e,t))];case"OnesLike":return[er(v("x",r,e,t))];case"RandomUniform":return[As(v("shape",r,e,t),v("minval",r,e,t),v("maxval",r,e,t),v("dtype",r,e,t))];case"Range":{let o=v("start",r,e,t),n=v("stop",r,e,t),s=v("step",r,e,t);return[Xc(o,n,s,v("dtype",r,e,t))]}case"TruncatedNormal":{let o=v("shape",r,e,t),n=v("mean",r,e,t),s=v("stdDev",r,e,t),a=v("seed",r,e,t);return[Lu(o,n,s,v("dtype",r,e,t),a)]}case"Zeros":return[ht(v("shape",r,e,t),v("dtype",r,e,t))];case"ZerosLike":return[Ce(v("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function xk(r,e,t){let o=v("boxes",r,e,t),n=v("scores",r,e,t),s=v("maxOutputSize",r,e,t),a=v("iouThreshold",r,e,t),i=v("scoreThreshold",r,e,t),l=v("softNmsSigma",r,e,t);return{boxes:o,scores:n,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:l}}var j1=async(r,e,t)=>{switch(r.op){case"NonMaxSuppressionV5":{let{boxes:o,scores:n,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:l}=xk(r,e,t),u=await Ds.nonMaxSuppressionWithScoreAsync(o,n,s,a,i,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:o,scores:n,maxOutputSize:s,iouThreshold:a,scoreThreshold:i}=xk(r,e,t),l=v("padToMaxOutputSize",r,e,t),u=await Ds.nonMaxSuppressionPaddedAsync(o,n,s,a,i,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:o,scores:n,maxOutputSize:s,iouThreshold:a,scoreThreshold:i}=xk(r,e,t);return[await Ds.nonMaxSuppressionAsync(o,n,s,a,i)]}case"Where":{let o=ne(v("condition",r,e,t),"bool"),n=[await Ym(o)];return o.dispose(),n}case"ListDiff":return Fw(v("x",r,e,t),v("y",r,e,t));default:throw TypeError(`Node type ${r.op} is not implemented`)}};var H1=(r,e,t)=>{switch(r.op){case"TopKV2":{let o=v("x",r,e,t),n=v("k",r,e,t),s=v("sorted",r,e,t),a=Km(o,n,s);return[a.values,a.indices]}case"Unique":{let o=v("x",r,e,t),n=Zc(o);return[n.values,n.indices]}case"UniqueV2":{let o=v("x",r,e,t),n=v("axis",r,e,t),s=Zc(o,n);return[s.values,s.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var q1=(r,e,t)=>{switch(r.op){case"Const":return e[r.name];case"PlaceholderWithDefault":let o=v("default",r,e,t);return[gr(r.name,e,t)||o];case"Placeholder":return[gr(r.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let u=v("x",r,e,t);return[Ls(u)]}case"IdentityN":return v("x",r,e,t).map(u=>Ls(u));case"Snapshot":let n=v("x",r,e,t);return[Ls(n)];case"Shape":return[Vt(v("x",r,e,t).shape,"int32")];case"ShapeN":return v("x",r,e,t).map(u=>Vt(u.shape));case"Size":return[ue(v("x",r,e,t).size,"int32")];case"Rank":return[ue(v("x",r,e,t).rank,"int32")];case"NoOp":return[ue(1)];case"Print":let s=v("x",r,e,t),a=v("data",r,e,t),i=v("message",r,e,t),l=v("summarize",r,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let u=0;u<a.length;u++)console.log(Array.prototype.slice.call(a[u].dataSync()).slice(0,l));return[s];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var yk=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ue(0),this.tensorMap=new Map,Et(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(e,t){this.checkKeyAndValueTensor(e,t);let o=await e.data();return this.tensorMap.forEach(n=>n.dispose()),this.tensorMap.clear(),V(()=>{let n=cr(t),s=o.length,a=n.length;x.assert(s===a,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${a} elements.`);for(let i=0;i<s;i++){let l=o[i],u=n[i];Et(u),this.tensorMap.set(l,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let o=await e.data();return V(()=>{let n=[];for(let s=0;s<o.length;s++){let a=o[s],i=this.findWithDefault(a,t);n.push(i)}return Bt(n)})}findWithDefault(e,t){let o=this.tensorMap.get(e);return o!=null?o:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};var K1=async(r,e,t,o)=>{switch(r.op){case"HashTable":case"HashTableV2":{let n=v("keyDType",r,e,t),s=v("valueDType",r,e,t),a=new yk(n,s);return o.addHashTable(r.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{let n=v("tableHandle",r,e,t,o),s=v("keys",r,e,t),a=v("values",r,e,t);return[await o.getHashTableById(n.id).import(s,a)]}case"LookupTableFind":case"LookupTableFindV2":{let n=v("tableHandle",r,e,t,o),s=v("keys",r,e,t),a=v("defaultValue",r,e,t);return[await o.getHashTableById(n.id).find(s,a)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var X1=(r,e,t)=>{switch(r.op){case"ResizeBilinear":{let o=v("images",r,e,t),n=v("size",r,e,t),s=v("alignCorners",r,e,t),a=v("halfPixelCenters",r,e,t);return[Ds.resizeBilinear(o,[n[0],n[1]],s,a)]}case"ResizeNearestNeighbor":{let o=v("images",r,e,t),n=v("size",r,e,t),s=v("alignCorners",r,e,t),a=v("halfPixelCenters",r,e,t);return[Ds.resizeNearestNeighbor(o,[n[0],n[1]],s,a)]}case"CropAndResize":{let o=v("image",r,e,t),n=v("boxes",r,e,t),s=v("boxInd",r,e,t),a=v("cropSize",r,e,t),i=v("method",r,e,t),l=v("extrapolationValue",r,e,t);return[Ds.cropAndResize(o,n,s,a,i,l)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Y1=(r,e,t)=>{switch(r.op){case"Equal":return[vo(v("a",r,e,t),v("b",r,e,t))];case"NotEqual":return[Vn(v("a",r,e,t),v("b",r,e,t))];case"Greater":return[Qt(v("a",r,e,t),v("b",r,e,t))];case"GreaterEqual":return[io(v("a",r,e,t),v("b",r,e,t))];case"Less":return[Iu(v("a",r,e,t),v("b",r,e,t))];case"LessEqual":return[zo(v("a",r,e,t),v("b",r,e,t))];case"LogicalAnd":return[dr(v("a",r,e,t),v("b",r,e,t))];case"LogicalNot":return[Ia(v("a",r,e,t))];case"LogicalOr":return[Tu(v("a",r,e,t),v("b",r,e,t))];case"Select":case"SelectV2":return[Dt(v("condition",r,e,t),v("a",r,e,t),v("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Z1=(r,e,t)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[We(v("a",r,e,t),v("b",r,e,t),v("transposeA",r,e,t),v("transposeB",r,e,t))];case"Transpose":return[je(v("x",r,e,t),v("perm",r,e,t))];case"_FusedMatMul":let[o,n]=v("fusedOps",r,e,t),s=o==="biasadd",a=n==="prelu",i=v("numArgs",r,e,t),l=v("leakyreluAlpha",r,e,t);if(s){if(a&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,c]=v("args",r,e,t);return[Gn.matMul({a:v("a",r,e,t),b:v("b",r,e,t),transposeA:v("transposeA",r,e,t),transposeB:v("transposeB",r,e,t),bias:u,activation:n,preluActivationWeights:c,leakyreluAlpha:l})];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var J1=(r,e,t)=>{switch(r.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[Ln(v("x",r,e,t),v("mean",r,e,t),v("variance",r,e,t),v("offset",r,e,t),v("scale",r,e,t),v("epsilon",r,e,t))];case"FusedBatchNormV3":return[Ln(v("x",r,e,t),v("mean",r,e,t),v("variance",r,e,t),v("offset",r,e,t),v("scale",r,e,t),v("epsilon",r,e,t))];case"LRN":return[Rm(v("x",r,e,t),v("radius",r,e,t),v("bias",r,e,t),v("alpha",r,e,t),v("beta",r,e,t))];case"Softmax":return[Aa(v("x",r,e,t))];case"LogSoftmax":return[Su(v("x",r,e,t))];case"SparseToDense":return[Zm(v("sparseIndices",r,e,t),v("outputShape",r,e,t),v("sparseValues",r,e,t),v("defaultValue",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Q1=(r,e,t)=>{switch(r.op){case"Max":{let a=v("axis",r,e,t),i=v("keepDims",r,e,t);return[lr(v("x",r,e,t),a,i)]}case"Mean":{let a=v("axis",r,e,t),i=v("keepDims",r,e,t);return[dt(v("x",r,e,t),a,i)]}case"Min":{let a=v("axis",r,e,t),i=v("keepDims",r,e,t);return[Oi(v("x",r,e,t),a,i)]}case"Sum":{let a=v("axis",r,e,t),i=v("keepDims",r,e,t);return[ge(v("x",r,e,t),a,i)]}case"All":{let a=v("axis",r,e,t),i=v("keepDims",r,e,t);return[xu(v("x",r,e,t),a,i)]}case"Any":{let a=v("axis",r,e,t),i=v("keepDims",r,e,t);return[ol(v("x",r,e,t),a,i)]}case"ArgMax":{let a=v("axis",r,e,t);return[nl(v("x",r,e,t),a)]}case"ArgMin":{let a=v("axis",r,e,t);return[bm(v("x",r,e,t),a)]}case"Prod":{let a=v("axis",r,e,t),i=v("keepDims",r,e,t);return[Au(v("x",r,e,t),a,i)]}case"Cumsum":{let a=v("axis",r,e,t),i=v("exclusive",r,e,t),l=v("reverse",r,e,t);return[vu(v("x",r,e,t),a,i,l)]}case"Bincount":let o=v("x",r,e,t),n=v("weights",r,e,t),s=v("size",r,e,t);return[aw(o,n,s)];case"DenseBincount":{let a=v("x",r,e,t),i=v("weights",r,e,t),l=v("size",r,e,t),u=v("binaryOutput",r,e,t);return[mw(a,i,l,u)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var eA=(r,e,t)=>{switch(r.op){case"ConcatV2":case"Concat":{let o=v("n",r,e,t),n=v("axis",r,e,t),s=v("tensors",r,e,t);return s=s.slice(0,o),[Ye(s,n)]}case"Gather":{let o=v("x",r,e,t),n=v("indices",r,e,t);return[zn(o,ne(n,"int32"),0)]}case"GatherV2":{let o=v("axis",r,e,t),n=v("batchDims",r,e,t),s=v("x",r,e,t),a=v("indices",r,e,t);return[zn(s,ne(a,"int32"),o,n)]}case"Reverse":{let o=v("dims",r,e,t),n=[];for(let a=0;a<o.length;a++)o[a]&&n.push(a);let s=v("x",r,e,t);return[Ht(s,n)]}case"ReverseV2":{let o=v("axis",r,e,t),n=v("x",r,e,t);return[Ht(n,o)]}case"Slice":{let o=v("begin",r,e,t),n=v("size",r,e,t);return[Re(v("x",r,e,t),o,n)]}case"StridedSlice":{let o=v("begin",r,e,t),n=v("end",r,e,t),s=v("strides",r,e,t),a=v("beginMask",r,e,t),i=v("endMask",r,e,t),l=v("ellipsisMask",r,e,t),u=v("newAxisMask",r,e,t),c=v("shrinkAxisMask",r,e,t),p=v("x",r,e,t);return[Hm(p,o,n,s,a,i,l,u,c)]}case"Pack":return V(()=>{let o=v("axis",r,e,t),n=v("tensors",r,e,t),s=n[0].shape,a=Co(n[0]).shape,i=n.map(l=>{let u=x.arraysEqual(l.shape,s);if(!u&&!x.arraysEqual(Co(l).shape,a))throw new Error("the input tensors shape does not match");return u?l:M(l,s)});return[Bt(i,o)]});case"Unpack":{let o=v("axis",r,e,t),n=v("tensor",r,e,t);return cr(n,o)}case"Tile":{let o=v("reps",r,e,t);return[Lo(v("x",r,e,t),o)]}case"Split":case"SplitV":{let o=v("axis",r,e,t),n=v("numOrSizeSplits",r,e,t),s=v("x",r,e,t);return ur(s,n,o)}case"ScatterNd":{let o=v("indices",r,e,t),n=v("values",r,e,t),s=v("shape",r,e,t);return[Mw(o,n,s)]}case"GatherNd":{let o=v("x",r,e,t),n=v("indices",r,e,t);return[Lw(o,n)]}case"SparseToDense":{let o=v("sparseIndices",r,e,t),n=v("outputShape",r,e,t),s=v("sparseValues",r,e,t),a=v("defaultValue",r,e,t);return[Zm(o,s,n,s.dtype===a.dtype?a:ne(a,s.dtype))]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var tA=(r,e,t)=>{switch(r.op){case"FFT":return[Ea(v("x",r,e,t))];case"IFFT":return[Pi(v("x",r,e,t))];case"RFFT":return[Da(v("x",r,e,t))];case"IRFFT":return[Pu(v("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var rA=(r,e,t)=>{switch(r.op){case"Cast":return[ne(v("x",r,e,t),v("dtype",r,e,t))];case"ExpandDims":{let o=v("axis",r,e,t);return[ir(v("x",r,e,t),o)]}case"Squeeze":{let o=v("axis",r,e,t);return[Co(v("x",r,e,t),o)]}case"Reshape":return[M(v("x",r,e,t),v("shape",r,e,t))];case"MirrorPad":return[Mm(v("x",r,e,t),v("padding",r,e,t),v("mode",r,e,t))];case"PadV2":case"Pad":return[Rr(v("x",r,e,t),v("padding",r,e,t),v("constantValue",r,e,t))];case"SpaceToBatchND":{let o=v("blockShape",r,e,t),n=v("paddings",r,e,t);return[Sa(v("x",r,e,t),o,n)]}case"BatchToSpaceND":{let o=v("blockShape",r,e,t),n=v("crops",r,e,t);return[_a(v("x",r,e,t),o,n)]}case"DepthToSpace":{let o=v("blockSize",r,e,t),n=v("dataFormat",r,e,t).toUpperCase();return[Tm(v("x",r,e,t),o,n)]}case"BroadcastTo":return[sl(v("x",r,e,t),v("shape",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function bk(r,e,t,o){let n=((s,a,i)=>{switch(s.category){case"arithmetic":return V(()=>F1(s,a,i));case"basic_math":return V(()=>O1(s,a,i));case"control":return V1(s,a,i);case"convolution":return V(()=>W1(s,a,i));case"creation":return V(()=>U1(s,a,i));case"dynamic":return j1(s,a,i);case"evaluation":return V(()=>H1(s,a,i));case"image":return V(()=>X1(s,a,i));case"graph":return V(()=>q1(s,a,i));case"logical":return V(()=>Y1(s,a,i));case"matrices":return V(()=>Z1(s,a,i));case"normalization":return V(()=>J1(s,a,i));case"reduction":return V(()=>Q1(s,a,i));case"slice_join":return V(()=>eA(s,a,i));case"spectral":return V(()=>tA(s,a,i));case"transformation":return V(()=>rA(s,a,i));case"hash_table":return K1(s,a,i,o);case"custom":let l=qg(s.op);if(l&&l.customExecutor)return l.customExecutor(new hk(s,a,i));throw TypeError(`Custom op ${s.op} is not registered.`);default:throw TypeError(`Unknown op '${s.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,e,t);return x.isPromise(n)?n.then(s=>[].concat(s)):[].concat(n)}var ax=class{constructor(e={},t={},o={},n={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=o,this.functionMap=n,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let o=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(o))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function _k(r,e,t,o){let n=new Set,s=[],a=null,i=null,l=new Set,u=Object.keys(r).map(m=>eo(m)[0]),c=[];o!=null&&(c=o.map(m=>eo(m.name)[0]));let p=[...e];for(;p.length>0;){let m=p.pop();if((wk(m)||r6(m)||o6(m))&&a==null&&(a=m,i=a.children.map(f=>f.name).filter(f=>n.has(f))),n.add(m.name),t[m.name]==null&&u.indexOf(m.name)===-1&&c.indexOf(m.name)===-1){if(m.inputs.length===0){s.push(m.name);continue}m.inputs.forEach(f=>{l.has(f.name)||(l.add(f.name),p.push(f))})}}return{inputs:r,outputs:e,usedNodes:n,missingInputs:s,dynamicNode:a,syncInputs:i}}function oA(r,e,t){let{usedNodes:o,inputs:n}=t,s=[],a=Object.keys(n).map(c=>eo(c)[0]).map(c=>r.nodes[c]),i=r.initNodes;a.forEach(c=>{o.has(c.name)&&s.push(c)}),r.weights.forEach(c=>{o.has(c.name)&&s.push(c)}),i!=null&&i.forEach(c=>{o.has(c.name)&&s.push(c)});let l=new Set,u=[];for(;s.length>0;){let c=s.pop();l.add(c.name),e[c.name]||u.push(c),c.children.forEach(p=>{!l.has(p.name)&&o.has(p.name)&&p.inputs.every(m=>l.has(m.name))&&s.push(p)})}return u}var n6=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],s6=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],i6=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function wk(r){return n6.indexOf(r.op)>=0}function r6(r){return s6.indexOf(r.op)>=0}function o6(r){return i6.indexOf(r.op)>=0}var Ep=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(o=>{this._functionExecutorMap[o]=new Ep(e.functions[o],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(o=>e[o].map(n=>n.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let o=e.map(s=>s.name).sort(),n=t.map(s=>s.name).sort();return o.join(this.SEPERATOR)+"--"+n.join(this.SEPERATOR)}compile(e,t){let o=_k(e,t,this.weightMap,this._initNodes),{missingInputs:n,dynamicNode:s,syncInputs:a}=o;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(n.length>0){let i=t.map(u=>u.name),l=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${l}]. Missing the following inputs: [${n}]`)}return oA(this.graph,this.weightMap,o)}execute(e,t){e=this.mapInputs(e);let o=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let n=o.map(p=>this.graph.nodes[eo(p)[0]]),s=t.map(p=>eo(p)[0]),a=s.map(p=>this.graph.nodes[p]);a.length===0&&(a=this._outputs);let i=this.getCompilationKey(n,a),l=this.compiledMap.get(i);l==null&&(l=this.compile(e,a),this.compiledMap.set(i,l));let u={},c={};return V(()=>{let p=new ax(this.weightMap,u,c,this.functionExecutorMap),m=Object.assign({},this.weightMap);Object.keys(e).forEach(h=>{let[g,y]=eo(h),b=[];b[y]=e[h],m[g]=b});let f=this.getFrozenTensorIds(m),d={};for(let h=0;h<l.length;h++){let g=l[h];if(!m[g.name]){let y=bk(g,m,p,this._resourceManager);if(x.isPromise(y))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);m[g.name]=y,this.checkTensorForDisposal(g.name,g,m,p,f,s,d)}}return this.parent==null&&p.dispose(f),t.map(h=>gr(h,m,p))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(o=>e[o]).map(o=>o.map(n=>n.id)));return new Set(t)}checkTensorForDisposal(e,t,o,n,s,a,i){t.category==="control"||a.indexOf(e)!==-1||(o[e].forEach(l=>{l!=null&&(i[l.id]=(i[l.id]||0)+t.children.length)}),t.inputs.forEach(l=>{if(l.category!=="control"){let u=E1(l.name,o,n);u!=null&&u.forEach(c=>{if(c&&!s.has(c.id)){let p=i[c.id];p===1?(c.dispose(),delete i[c.id]):p!=null&&i[c.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,o=!1,n={},s={}){o||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));let a=new ax(this.weightMap,n,s,this.functionExecutorMap),i=await this.executeWithControlFlow(e,a,t,o),l=t.map(m=>gr(m,i,a)),u=l.map(m=>m.id),c=Object.keys(e).map(m=>e[m].id),p=new Set([...u,...c,...this.weightIds]);return Object.keys(i).forEach(m=>{i[m].forEach(d=>{d&&!d.isDisposed&&!p.has(d.id)&&d.dispose()})}),this.parent==null&&a.dispose(p),l}async executeFunctionAsync(e,t,o){let n=e.reduce((s,a,i)=>(s[this.inputs[i].name]=a,s),{});return this._executeAsync(n,this.outputNodes,!0,t,o)}async executeWithControlFlow(e,t,o,n){let s=Object.keys(e),a=s.map(w=>this.graph.nodes[eo(w)[0]]),i=o.map(w=>eo(w)[0]),l=i.map(w=>this.graph.nodes[w]);l.length===0&&(l=this._outputs);let{usedNodes:u,missingInputs:c,dynamicNode:p,syncInputs:m}=_k(e,l,this.weightMap,this._initNodes),f=[...a,...this.graph.weights,...this._initNodes||[]].map(w=>({node:w,contexts:t.currentContext})),d=Object.assign({},this.weightMap);Object.keys(e).forEach(w=>{let[_,C]=eo(w),D=[];D[C]=e[w],d[_]=D});let h={},g=this.getFrozenTensorIds(d),y={};for(;f.length>0;){let w=this.processStack(a,f,t,d,y,g,i,h,u);await Promise.all(w)}p==null&&!n&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let b=l.filter(w=>!wk(w)&&!gr(w.name,d,t)).map(w=>w.name);if(b.length>0){let w="";throw p!=null&&(w=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${m}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${w}`)}return d}processStack(e,t,o,n,s,a,i,l,u){let c=[];for(;t.length>0;){let p=t.pop();o.currentContext=p.contexts;let m="";if(p.node.op==="Enter"&&v("isConstant",p.node,n,o)&&([m]=Ms(p.node.name,o)),n[p.node.name]==null){let f=bk(p.node,n,o,this._resourceManager);m||([m]=Ms(p.node.name,o));let d=o.currentContext;x.isPromise(f)?c.push(f.then(h=>(n[m]=h,o.currentContext=d,this.checkTensorForDisposal(m,p.node,n,o,a,i,l),this.processChildNodes(p.node,t,o,n,s,u),h))):(n[m]=f,this.checkTensorForDisposal(m,p.node,n,o,a,i,l),this.processChildNodes(p.node,t,o,n,s,u))}else this.processChildNodes(p.node,t,o,n,s,u)}return c}processChildNodes(e,t,o,n,s,a){e.children.forEach(i=>{let[l]=Ms(i.name,o);s[l]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(u=>!!gr(u,n,o))&&(s[l]=!0,t.push({contexts:o.currentContext,node:i})):i.inputNames.every(u=>!!gr(u,n,o))&&(s[l]=!0,t.push({contexts:o.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let o=e[t],[n]=eo(t),s=this.graph.nodes[n];if(s.attrParams.shape&&s.attrParams.shape.value){let a=s.attrParams.shape.value,i=a.length===o.shape.length&&o.shape.every((l,u)=>a[u]===-1||a[u]===l);x.assert(i,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${a}], but was [${o.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&x.assert(o.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${o.dtype}`)})}mapInputs(e){let t={};for(let o in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[o]!=null){let n=this._signature.inputs[o];t[n.name]=e[o]}else t[o]=e[o];return t}checkInputs(e){let t=Object.keys(e).filter(o=>{let[n]=eo(o);return this.graph.nodes[n]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[o]=eo(t);if(!this.graph.nodes[o])throw new Error(`The output '${t}' is not found in the graph`)})}};var kk=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}};var a6="?tfjs-format=file",l6="model.json",lx=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new kk}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=Cr.browserHTTPRequest(e,this.loadOptions);else{let t=Cr.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(Cr.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,o;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?o=this.artifacts.userDefinedMetadata.signature:o=this.artifacts.signature,this.signature=o,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let n=Cr.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Ep(Xg.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(n),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let s=Xg.Instance.transformGraph(e.modelInitializer);this.initializer=new Ep(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let o=Cr.getSaveHandlers(e);if(o.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(o.length>1)throw new Error(`Found more than one (${o.length}) save handlers for URL '${e}'`);e=o[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Ve)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,o,n)=>(t[o]=e[n],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let o=this.executor.execute(e,t);return o.length>1?o:o[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let o=await this.executor.executeAsync(e,t);return o.length>1?o:o[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,o)=>(t[o]=[e[o]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function nA(r,e={}){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&r.load==null&&(r.endsWith("/")||(r=r+"/"),r=`${r}${l6}${a6}`);let t=new lx(r,e);return await t.load(),t}var ux="3.2.0";var Ek={};Je(Ek,{CSVDataset:()=>Ed,Dataset:()=>Ui,FileDataSource:()=>Od,TextLineDataset:()=>Td,URLDataSource:()=>Pd,array:()=>NA,csv:()=>PA,func:()=>MA,generator:()=>LA,microphone:()=>BA,version_data:()=>gx,webcam:()=>zA,zip:()=>SA});var IA=Ic(zm());var cA=Ic(zm());function sA(r,e){return cx(r,e)}function cx(r,e,t=new Map,o=new Set){if(r==null)return null;if(o.has(r))throw new Error("Circular references are not supported.");if(t.has(r))return t.get(r);let n=e(r);if(n.recurse&&n.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(n.recurse)if(_l(r)){let s=Array.isArray(r)?[]:{};o.add(r);for(let a in r){let i=r[a],l=cx(i,e,t,o);s[a]=l}return o.delete(r),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return t.set(r,n.value),n.value}function aA(r,e=vk){return iA(r,e)}function iA(r,e,t=new Set){let o=r[0];if(t.has(o))throw new Error("Circular references are not supported.");let n=e(r);if(n.recurse&&n.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(n.recurse)if(_l(o)){let s=Array.isArray(o)?[]:{};t.add(o);for(let a in o){let i=r.map(u=>u[a]),l=iA(i,e,t);s[a]=l}return t.delete(o),s}else throw new Error(`Can't recurse into non-iterable type: ${o}`);else return n.value}function vk(r){return r===null?null:_l(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}async function px(r,e){let t=new Map;cx(r,e,t);for(let n of Array.from(t.keys())){let s=t.get(n);if(x.isPromise(s)){let a=await s;t.set(n,a)}}return cx(r,e,t)}function _l(r){return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof Ve))}function lA(r){return r==null||u6(r)||Array.isArray(r)||typeof r=="object"&&r instanceof Ve||x.isTypedArray(r)}function u6(r){return r===null||typeof r!="object"&&typeof r!="function"}function uA(r){return sA(r,c6)}function c6(r){return r instanceof Ve?{value:r.clone(),recurse:!1}:_l(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var Nd=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),o=this.get(t);return this.set(t,this.pop()),o}};var Dp=class extends Nd{constructor(){super(Dp.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),o=this.length();for(let n=0;n<o;n++)t[n]=this.get(this.wrap(this.begin+n));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=o}};Dp.INITIAL_CAPACITY=32;function Ck(r){return new pA(r)}function Sd(r){return new mA(r)}function fA(r,e){return new Ik(r,e)}function hA(r,e=La.FAIL){return new dA(r,e)}var qt=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],o=await e.next();for(;!o.done;)t.push(o.value),o=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),o=e(t.value);for(;!t.done&&o;)t=await this.next(),o=e(t.value)}handleErrors(e){return new kA(this,e)}filter(e){return new wA(this,e)}map(e){return new _A(this,e)}mapAsync(e){return new Nk(this,e)}serialMapAsync(e){return new Nk(this,e).serial()}flatmap(e){return new vA(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new bA(this,e,t)}columnMajorBatch(e,t=!0,o=vk){return this.rowMajorBatch(e,t).map(s=>aA(s,o))}concatenate(e,t){return new Ik(Ck([this,e]),t)}take(e){return e<0||e==null?this:new yA(this,e)}skip(e){return e<0||e==null?this:new xA(this,e)}prefetch(e){return new Sk(this,e)}shuffle(e,t){return new CA(this,e,t)}serial(){return new gA(this)}},pA=class extends qt{constructor(e){super();this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:uA(e),done:!1}}},mA=class extends qt{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},gA=class extends qt{constructor(e){super();this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},xA=class extends qt{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Te(e.value)}return this.upstream.next()}},yA=class extends qt{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},bA=class extends qt{constructor(e,t,o=!0){super();this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=o,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},wA=class extends qt{constructor(e,t){super();this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Te(e.value)}}},_A=class extends qt{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Mn.getTensorsInContainer(e.value),o=this.transform(e.value),n=Mn.getTensorsInContainer(o);for(let s of t)Mn.isTensorInList(s,n)||s.dispose();return{value:o,done:!1}}},kA=class extends qt{constructor(e,t){super();this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},Nk=class extends qt{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Mn.getTensorsInContainer(e.value),o=await this.transform(e.value),n=Mn.getTensorsInContainer(o);for(let s of t)Mn.isTensorInList(s,n)||s.dispose();return{value:o,done:!1}}},$p=class extends qt{constructor(){super();this.outputQueue=new Dp,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},vA=class extends $p{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Mn.getTensorsInContainer(e.value),o=this.transform(e.value),n=Mn.getTensorsInContainer(o);this.outputQueue.pushAll(o);for(let s of t)Mn.isTensorInList(s,n)||s.dispose();return!0}},Ik=class extends qt{constructor(e,t){super();this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let o=await this.moreIterators.next();if(o.done)return{value:null,done:!0};this.iterator=o.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},La;(function(r){r[r.FAIL=0]="FAIL",r[r.SHORTEST=1]="SHORTEST",r[r.LONGEST=2]="LONGEST"})(La||(La={}));var dA=class extends qt{constructor(e,t=La.FAIL){super();this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,o=0;function n(a){return a instanceof qt?{value:a.next().then(l=>(t++,l.done&&o++,l.value)),recurse:!1}:{value:null,recurse:!0}}let s=await px(this.iterators,n);if(t===o)return{value:null,done:!0};if(o>0)switch(this.mismatchMode){case La.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case La.SHORTEST:return{value:null,done:!0};case La.LONGEST:default:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},Sk=class extends qt{constructor(e,t){super();this.upstream=e,this.bufferSize=t,this.buffer=new Nd(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},CA=class extends Sk{constructor(e,t,o){super(e,t);this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=cA.alea(o||x.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}};var Ui=class{constructor(){this.size=null}batch(e,t=!0){let o=this;x.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let n;return this.size===Infinity||this.size==null?n=this.size:t?n=Math.ceil(this.size/e):n=Math.floor(this.size/e),fo(async()=>(await o.iterator()).columnMajorBatch(e,t,p6),n)}concatenate(e){let t=this,o;return this.size===Infinity||e.size===Infinity?o=Infinity:this.size!=null&&e.size!=null?o=this.size+e.size:o=null,fo(async()=>(await t.iterator()).concatenate(await e.iterator()),o)}filter(e){let t=this,o;return this.size===Infinity?o=Infinity:o=null,fo(async()=>(await t.iterator()).filter(n=>V(()=>e(n))),o)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return fo(async()=>(await t.iterator()).map(o=>V(()=>e(o))),this.size)}mapAsync(e){let t=this;return fo(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return fo(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,o;return this.size!=null&&e>0?o=this.size*e:e===0?o=0:this.size!=null&&(e===void 0||e<0)?o=Infinity:o=null,fo(async()=>{let n=Sd(async()=>({value:await t.iterator(),done:!1}));return fA(n.take(e))},o)}skip(e){let t=this,o;return this.size!=null&&e>=0&&this.size>=e?o=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?o=0:o=null,fo(async()=>(await t.iterator()).skip(e),o)}shuffle(e,t,o=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let n=this,s=IA.alea(t||x.now().toString());return fo(async()=>{let a=s.int32();return o&&(a+=s.int32()),(await n.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,o;return this.size!=null&&this.size>e?o=e:this.size!=null&&this.size<=e?o=this.size:o=null,fo(async()=>(await t.iterator()).take(e),o)}async toArray(){if(this.size===Infinity)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===Infinity)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Ui.MAX_BUFFER_SIZE=1e4;function fo(r,e=null){return new class extends Ui{constructor(){super(...arguments);this.size=e}async iterator(){return r()}}}function NA(r){return fo(async()=>Ck(r),r.length)}function SA(r){if(!_l(r))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(r))for(let t=0;t<r.length;t++)e=e==null?r[t].size:Math.min(e,r[t].size);else if(r instanceof Object)for(let t in r)e=e==null?r[t].size:Math.min(e,r[t].size);return fo(async()=>{let t=await px(r,o=>{if(o instanceof Ui)return{value:o.iterator(),recurse:!1};if(_l(o))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return hA(t,La.SHORTEST)},e)}function p6(r){if(r===null)return null;let e=r[0];return lA(e)?{value:m6(r),recurse:!1}:{value:null,recurse:!0}}function m6(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof Ve?Bt(r):$r(r)}var Td=class extends Ui{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(n=>(n.endsWith("\r")&&(n=n.slice(0,-1)),n))}};var mx='"',Ad=Symbol("out"),TA=Symbol("field"),fx=Symbol("quote"),Tk=Symbol("quoteafterquote"),AA=Symbol("quoteinquote"),Ed=class extends Ui{constructor(e,t){super();this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new Td(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(x.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&x.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((n,s)=>(n[s]=n[s]+1||1,n),{}),o=Object.keys(t).filter(n=>t[n]>1);if(x.assert(o.length===0,()=>"Duplicate column names found: "+o.toString()),this.columnConfigs){for(let n of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(n)===-1)throw new Error('The key "'+n+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let o=t.value;return this.parseRow(o,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),o={},n={};for(let s=0;s<this.fullColumnNames.length;s++){let a=this.fullColumnNames[s],i=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!i)){let l=t[s],u=null;if(l==="")if(i&&i.default!==void 0)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{let c=Number(l);if(isNaN(c))i&&i.dtype==="bool"?u=this.getBoolean(l):u=l;else if(!i||!i.dtype)u=c;else switch(i.dtype){case"float32":u=c;break;case"int32":u=Math.floor(c);break;case"bool":u=this.getBoolean(l);break;default:u=c}}i&&i.isLabel?n[a]=u:o[a]=u}}return Object.keys(n).length===0?o:{xs:o,ys:n}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let o=[],n=0,s=e.length,a=Ad;for(let i=0;i<s;i++)switch(a){case Ad:switch(e.charAt(i)){case mx:n=i+1,a=fx;break;case this.delimiter:if(n=i+1,this.delimiter===" "&&this.delimWhitespace)break;o.push(""),a=Ad;break;default:a=TA,n=i;break}break;case TA:switch(e.charAt(i)){case this.delimiter:o.push(e.substring(n,i)),a=Ad,n=i+1;break;default:}break;case fx:switch(e.charAt(i)){case mx:a=Tk;break;default:}break;case Tk:switch(e.charAt(i)){case this.delimiter:o.push(e.substring(n,i-1)),a=Ad,n=i+1;break;case mx:a=fx;break;default:a=AA;break}break;case AA:switch(e.charAt(i)){case mx:a=fx;break;default:}break;default:}if(a===Tk?o.push(e.substring(n,s-1)):o.push(e.substring(n)),t&&o.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${o}`);return o}};var Dd=class extends qt{constructor(e){super();this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(W().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new Dd(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(o){throw new Error(`Error thrown while initializing video stream: ${o.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,o=await this.getAudioData();if(this.includeSpectrogram){let n=this.flattenQueue(o.freqDataQueue);e=this.getTensorFromAudioDataArray(n,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let n=this.flattenQueue(o.timeDataQueue);t=this.getTensorFromAudioDataArray(n,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],o=0;return new Promise(n=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-Infinity&&n({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++o===this.numFrames&&(clearInterval(s),n({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,o=new Float32Array(e.length*t);return e.forEach((n,s)=>o.set(n,s*t)),o}getTensorFromAudioDataArray(e,t){let o=new Float32Array(x.sizeFromShape(t));return o.set(e,o.length-e.length),$r(o,t)}};var $d=class extends qt{constructor(e,t){super();if(this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Vt([0],"int32"),this.webcamConfig.centerCrop){let o=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,n=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-o)/2,a=(1-n)/2,i=s+o,l=n+a;this.cropBox=Mi([a,s,l,i],[1,4])}else this.cropBox=Mi([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(W().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let o=new $d(e,t);return await o.start(),o}async start(){this.webcamConfig.facingMode&&x.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Uh.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return V(()=>{let t=ir(ne(e,"float32"),0),o;o=Ds.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let n=o.shape;return M(o,n.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}};var Rd=class{};var dx=class extends qt{split(e){return new EA(this,e)}},EA=class extends dx{constructor(e,t){super();this.upstream=e,this.impl=new DA(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},DA=class extends $p{constructor(e,t){super();this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let o of t.slice(0,-1))this.outputQueue.push(o);return this.carryover=t[t.length-1],!0}};var Ak=class extends qt{decodeUTF8(){return new RA(this)}},RA=class extends dx{constructor(e){super();this.upstream=e,this.impl=new FA(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},FA=class extends $p{constructor(e){super();if(this.upstream=e,W().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=$A();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let o;return W().get("IS_BROWSER")?o=this.decoder.decode(t,{stream:!0}):o=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(o),!0}};var Fd=class extends Ak{constructor(e,t={}){super();this.file=e,this.options=t,x.assert(e instanceof Uint8Array||(W().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,o)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,n)));else{let s=new FileReader;s.onload=i=>{let l=s.result;if(l instanceof ArrayBuffer&&(l=new Uint8Array(l)),!(l instanceof Uint8Array))return o(new TypeError("FileReader returned unknown type."));t(l)},s.onabort=i=>o(new Error("Aborted")),s.onerror=i=>o(new Error(i.type));let a=this.file.slice(this.offset,n);s.readAsArrayBuffer(a)}this.offset=n}),done:!1}}};async function OA(r,e={}){let t,o;typeof r=="string"?t=r:(t=r.url,o=f6(r));let n=await x.fetch(t,o);if(n.ok){let s=new Uint8Array(await n.arrayBuffer());return new Fd(s,e)}else throw new Error(n.statusText)}var f6=r=>({method:r.method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:r.referrer,integrity:r.integrity});function hx(r){return typeof r=="string"&&r.substr(0,7)==="file://"}var Od=class extends Rd{constructor(e,t={}){super();this.input=e,this.options=t}async iterator(){if(hx(this.input)&&W().get("IS_NODE")){let e=require("fs");this.input=e.readFileSync(this.input.substr(7))}return new Fd(this.input,this.options)}};var Pd=class extends Rd{constructor(e,t={}){super();this.url=e,this.fileOptions=t}async iterator(){return hx(this.url)?new Od(this.url,this.fileOptions).iterator():OA(this.url,this.fileOptions)}};function PA(r,e={}){return new Ed(new Pd(r),e)}function MA(r){let e=Sd(r);return fo(async()=>e)}function LA(r){return fo(async()=>{let e=await r();return Sd(()=>e.next())})}async function zA(r,e){return $d.create(r,e)}async function BA(r){return Dd.create(r)}var gx="3.2.0";function ee(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&x.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}var d6=Tr.whereImpl,Rp=class extends Gs{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new Xa(this,Po())}nextDataId(){return Rp.nextDataId++}write(e,t,o){this.firstUse&&(this.firstUse=!1,W().get("IS_NODE")&&N.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let n={id:this.nextDataId()};return this.data.set(n,{values:e,dtype:o,refCount:1}),n}makeTensorInfo(e,t,o){let n;if(t==="string"&&o!=null&&o.length>0&&x.isString(o[0])){let s=o.map(a=>x.encodeString(a));n=this.write(s,e,t)}else n=this.write(o,e,t);return{dataId:n,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,o,n,s){this.data.set(e,{values:t,dtype:n,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:o}=this.data.get(e);if(t==="complex64"){let n=this.readSync(o.real.dataId),s=this.readSync(o.imag.dataId);return N.mergeRealAndImagArrays(n,s)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),o=t;if(e.dtype==="string")try{o=t.map(n=>x.decodeString(n))}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return ve(e.shape,e.dtype,o)}makeOutput(e,t,o){let n=this.write(e,t,o);return Po().makeTensorFromDataId(n,t,o,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:o}=this.data.get(e);o!=null&&(this.disposeData(o.real.dataId,!0),this.disposeData(o.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=x.now();return e(),{kernelMs:x.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ee([e],"where");let t=this.readSync(e.dataId);return d6(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};Rp.nextDataId=0;var Bk={};Je(Bk,{addImpl:()=>qA,bincountImpl:()=>Md,bincountReduceImpl:()=>Dk,ceilImpl:()=>XA,concatImpl:()=>Ld,expImpl:()=>ZA,expm1Impl:()=>QA,floorImpl:()=>tE,gatherV2Impl:()=>Rk,greaterImpl:()=>oE,lessImpl:()=>sE,linSpaceImpl:()=>Fk,logImpl:()=>aE,maxImpl:()=>Ok,maximumImpl:()=>uE,minimumImpl:()=>pE,multiplyImpl:()=>xx,negImpl:()=>dE,notEqualImpl:()=>gE,prodImpl:()=>bE,rangeImpl:()=>Vd,rsqrtImpl:()=>_E,simpleAbsImpl:()=>VA,sliceImpl:()=>Gd,squaredDifferenceImpl:()=>CE,stridedSliceImpl:()=>Pk,subImpl:()=>NE,tileImpl:()=>Mk,topKImpl:()=>Lk,transposeImpl:()=>Bd,uniqueImpl:()=>zk});function VA(r){let e=new Float32Array(r.length);for(let t=0;t<r.length;++t)e[t]=Math.abs(r[t]);return e}var h6=r=>{let{x:e}=r.inputs,t=r.backend;ee(e,"abs");let o=new Float32Array(x.sizeFromShape(e.shape)),n=t.data.get(e.dataId).values;return o=VA(n),t.makeOutput(o,e.shape,"float32")},GA={kernelName:as,backendName:"cpu",kernelFunc:h6};function Ke(r){return(e,t,o,n,s)=>{let a=N.assertAndGetBroadcastShape(e,t),i=a.length,l=x.computeStrides(a),u=x.sizeFromShape(a),c=x.getTypedArrayFromDType(s,u),p=e.length,m=t.length,f=x.computeStrides(e),d=x.computeStrides(t),h=N.getBroadcastDims(e,a),g=N.getBroadcastDims(t,a);if(h.length+g.length===0)for(let y=0;y<c.length;++y)c[y]=r(o[y%o.length],n[y%n.length]);else for(let y=0;y<c.length;++y){let b=x.indexToLoc(y,i,l),w=b.slice(-p);h.forEach(T=>w[T]=0);let _=x.locToIndex(w,p,f),C=b.slice(-m);g.forEach(T=>C[T]=0);let D=x.locToIndex(C,m,d);c[y]=r(o[_],n[D])}return[c,a]}}function pr(r){let{inputs:e,backend:t}=r,{real:o,imag:n}=e,s=t.data.get(o.dataId).values,a=t.data.get(n.dataId).values,i=t.makeTensorInfo(o.shape,"complex64"),l=t.data.get(i.dataId);return l.complexTensorInfos={real:t.makeTensorInfo(o.shape,"float32",s),imag:t.makeTensorInfo(n.shape,"float32",a)},i}var WA={kernelName:Gl,backendName:"cpu",kernelFunc:pr};function Fp(r,e,t="float32"){if(t==="complex64"){let n=Fp(r,e,"float32"),s=Fp(r,e,"float32");return pr({inputs:{real:n,imag:s},backend:r})}let o=x.makeZerosTypedArray(x.sizeFromShape(e),t);return r.makeTensorInfo(e,t,o)}function Ar(r){let{inputs:e,backend:t}=r,{x:o}=e;return t.incRef(o.dataId),{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}var UA={kernelName:Ro,backendName:"cpu",kernelFunc:Ar};function Zn(r){let{inputs:e,backend:t}=r,{input:o}=e,n=t.data.get(o.dataId).complexTensorInfos.real,s=t.data.get(n.dataId).values;return t.makeTensorInfo(n.shape,n.dtype,s)}var jA={kernelName:iu,backendName:"cpu",kernelFunc:Zn};function Jn(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{dtype:s}=o;if(s==="complex64"){if(n.dtype==="complex64")return Ar({inputs:{x:n},backend:t});let a=Fp(t,n.shape,n.dtype),i=Jn({inputs:{x:n},backend:t,attrs:{dtype:"float32"}}),l=pr({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}if(n.dtype==="complex64"){let a=Zn({inputs:{input:n},backend:t}),i=Jn({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),i}if(!x.hasEncodingLoss(n.dtype,s)){let a=Ar({inputs:{x:n},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32"){let a=t.data.get(n.dataId).values,i=Int32Array.from(a);return t.makeTensorInfo(n.shape,"int32",i)}if(s==="bool"){let a=t.data.get(n.dataId).values,i=x.toTypedArray([0],n.dtype),[l,u]=Ke((c,p)=>c!==p?1:0)(n.shape,[],a,i,"bool");return t.makeTensorInfo(u,"bool",l)}throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${s}`)}var HA={kernelName:Do,backendName:"cpu",kernelFunc:Jn};function et(r,e,t,o){return t==null?({inputs:n,backend:s})=>{let{a,b:i}=n,l=s;ee([a,i],r);let u=l.data.get(a.dataId).values,c=l.data.get(i.dataId).values,p=o||a.dtype,[m,f]=e(a.shape,i.shape,u,c,p);return l.makeTensorInfo(f,p,m)}:({inputs:n,backend:s})=>{let{a,b:i}=n,l=s;if(a.dtype==="complex64"||i.dtype==="complex64"){let u=Jn({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),p=c.complexTensorInfos.real,m=c.complexTensorInfos.imag,f=l.data.get(p.dataId).values,d=l.data.get(m.dataId).values,h=Jn({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(h.dataId),y=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,w=l.data.get(y.dataId).values,_=l.data.get(b.dataId).values,[C,D,T]=t(a.shape,i.shape,f,d,w,_),R=l.makeTensorInfo(T,"float32",C),P=l.makeTensorInfo(T,"float32",D),B=pr({inputs:{real:R,imag:P},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(h),l.disposeIntermediateTensorInfo(R),l.disposeIntermediateTensorInfo(P),B}else{let u=l.data.get(a.dataId).values,c=l.data.get(i.dataId).values,p=o||a.dtype,[m,f]=e(a.shape,i.shape,u,c,p);return l.makeTensorInfo(f,p,m)}}}function Op(r){return(e,t,o,n,s,a)=>{let i=N.assertAndGetBroadcastShape(e,t),l=x.sizeFromShape(i),u=i.length,c=x.computeStrides(i),p=x.getTypedArrayFromDType("float32",l),m=x.getTypedArrayFromDType("float32",l),f=N.getBroadcastDims(e,i),d=N.getBroadcastDims(t,i),h=N.mergeRealAndImagArrays(o,n),g=N.mergeRealAndImagArrays(s,a),y=e.length,b=x.computeStrides(e),w=t.length,_=x.computeStrides(t);if(f.length+d.length===0)for(let C=0;C<p.length;C++){let D=C%h.length,T=C%g.length,R=r(h[D*2],h[D*2+1],g[T*2],g[T*2+1]);p[C]=R.real,m[C]=R.imag}else for(let C=0;C<p.length;C++){let D=x.indexToLoc(C,u,c),T=D.slice(-y);f.forEach(U=>T[U]=0);let R=x.locToIndex(T,y,b),P=D.slice(-w);d.forEach(U=>P[U]=0);let B=x.locToIndex(P,w,_),G=r(h[R*2],h[R*2+1],g[B*2],g[B*2+1]);p[C]=G.real,m[C]=G.imag}return[p,m,i]}}var qA=Ke((r,e)=>r+e),g6=Op((r,e,t,o)=>({real:r+t,imag:e+o})),za=et(wo,qA,g6),KA={kernelName:wo,backendName:"cpu",kernelFunc:za};function Md(r,e,t,o,n){let s=x.sizeFromShape(o),a=x.makeZerosTypedArray(n,t);for(let i=0;i<r.length;i++){let l=r[i];if(l<0)throw new Error("Input x must be non-negative!");l>=n||(s>0?a[l]+=e[i]:a[l]+=1)}return a}function Dk(r,e,t,o=!1){let n=r.shape[0],s=r.shape[1],a=ve([n,t],e.dtype);for(let i=0;i<n;i++)for(let l=0;l<s;l++){let u=r.get(i,l);if(u<0)throw new Error("Input x must be non-negative!");u>=t||(o?a.set(1,i,u):e.size>0?a.set(a.get(i,u)+e.get(i,l),i,u):a.set(a.get(i,u)+1,i,u))}return a}function Qn(r){return(e,t,o)=>{let n=x.getTypedArrayFromDType(t,e.length);for(let s=0;s<e.length;++s)n[s]=r(e[s],o);return n}}function $e(r,e,t){return({inputs:o,attrs:n,backend:s})=>{let{x:a}=o;if(ee(a,r),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,l=i.data.get(a.dataId).values,u=x.sizeFromShape(a.shape),c=t||a.dtype,p=x.getArrayFromDType(c,u);for(let m=0;m<u;++m)p[m]=e(l[m],n);return i.makeTensorInfo(a.shape,c,p)}}function es(r,e,t){return({inputs:o,attrs:n,backend:s})=>{let{x:a}=o;if(ee(a,r),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,l=i.data.get(a.dataId).values,u=t||a.dtype,c=e(l,u,n);return i.makeTensorInfo(a.shape,u,c)}}var XA=Qn(r=>Math.ceil(r)),x6=es(Yo,XA),YA={kernelName:Yo,backendName:"cpu",kernelFunc:x6};function Ld(r,e,t,o){let n=x.getArrayFromDType(t,x.sizeFromShape(e));if(o&&t!=="string"){let s=0;r.forEach(a=>{let i=x.sizeFromShape(a.shape);n.set(a.vals,s),s+=i})}else{let s=0;r.forEach(a=>{let i=t==="string"?N.fromUint8ToStringArray(a.vals):a.vals,l=0;for(let u=0;u<a.shape[0];++u){let c=u*e[1]+s;for(let p=0;p<a.shape[1];++p)n[c+p]=i[l++]}s+=a.shape[1]})}return n}var ZA=Qn(r=>Math.exp(r)),$k=es(on,ZA),JA={kernelName:on,backendName:"cpu",kernelFunc:$k};var QA=Qn(r=>Math.expm1(r)),y6=es(ni,QA),eE={kernelName:ni,backendName:"cpu",kernelFunc:y6};var tE=Qn(r=>Math.floor(r)),b6=es(nn,tE),rE={kernelName:nn,backendName:"cpu",kernelFunc:b6};function Rk(r,e,t){let o=ve(t,r.dtype);for(let n=0;n<o.size;++n){let a=o.indexToLoc(n).slice(),i=a[0],l=a[2],u=e.locToIndex([i,l]);a[2]=e.values[u];let c=r.locToIndex(a);o.values[n]=r.values[c]}return o}var oE=Ke((r,e)=>r>e?1:0),w6=et(ai,oE,null,"bool"),nE={kernelName:ai,backendName:"cpu",kernelFunc:w6};var sE=Ke((r,e)=>r<e?1:0),_6=et(pi,sE,null,"bool"),iE={kernelName:pi,backendName:"cpu",kernelFunc:_6};function Fk(r,e,t){let o=(e-r)/(t-1),n=x.makeZerosTypedArray(t,"float32");n[0]=r;for(let s=1;s<n.length;s++)n[s]=n[s-1]+o;return n}var aE=Qn(r=>Math.log(r)),k6=es(cn,aE),lE={kernelName:cn,backendName:"cpu",kernelFunc:k6};function Ok(r,e,t,o){let n=x.getTypedArrayFromDType(o,x.sizeFromShape(t));for(let s=0;s<n.length;++s){let a=s*e,i=r[a];for(let l=0;l<e;++l){let u=r[a+l];u>i&&(i=u)}n[s]=i}return n}var uE=Ke((r,e)=>Math.max(r,e)),v6=et(mn,uE),cE={kernelName:mn,backendName:"cpu",kernelFunc:v6};var pE=Ke((r,e)=>Math.min(r,e)),C6=et(gn,pE),mE={kernelName:gn,backendName:"cpu",kernelFunc:C6};var xx=Ke((r,e)=>r*e),I6=Op((r,e,t,o)=>({real:r*t-e*o,imag:r*o+e*t})),zd=et(xn,xx,I6),fE={kernelName:xn,backendName:"cpu",kernelFunc:zd};function dE(r,e,t){let o=x.createScalarValue(-1,t);return xx([],e,o,r,t)}function N6(r){let{inputs:e,backend:t}=r,{x:o}=e;ee(o,"neg");let n=t.data.get(o.dataId).values,[s,a]=dE(n,o.shape,o.dtype);return t.makeTensorInfo(a,o.dtype,s)}var hE={kernelName:ps,backendName:"cpu",kernelFunc:N6};var gE=Ke((r,e)=>r!==e?1:0),S6=et(gi,gE,null,"bool"),xE={kernelName:gi,backendName:"cpu",kernelFunc:S6};function Bd(r,e,t,o,n){let s=e.length,a=x.sizeFromShape(e),i=x.computeStrides(e),l=x.computeStrides(n),u=x.getTypedArrayFromDType(t,x.sizeFromShape(n));for(let c=0;c<a;++c){let p=x.indexToLoc(c,s,i),m=new Array(p.length);for(let d=0;d<m.length;d++)m[d]=p[o[d]];let f=x.locToIndex(m,s,l);u[f]=r[c]}return u}function tr(r){let{inputs:e,attrs:t,backend:o}=r,{x:n}=e,{perm:s}=t;ee(n,"transpose");let a=n.shape.length,i=new Array(a);for(let p=0;p<i.length;p++)i[p]=n.shape[s[p]];let l=o.data.get(n.dataId).values,u=Bd(l,n.shape,n.dtype,s,i);return{dataId:o.write(u,i,n.dtype),shape:i,dtype:n.dtype}}var yE={kernelName:Pn,backendName:"cpu",kernelFunc:tr};function bE(r,e,t,o){let[n,s]=N.computeOutAndReduceShapes(r,o),a=fr(e,"int32"),i=x.makeZerosTypedArray(x.sizeFromShape(n),a),l=x.sizeFromShape(s);for(let u=0;u<i.length;++u){let c=u*l,p=1;for(let m=0;m<l;++m)p*=t[c+m];i[u]=p}return{outVals:i,outShape:n,outDtype:a}}function T6(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:a}=o;ee(n,"prod");let i=n.shape.length,l=x.parseAxisParam(s,n.shape),u=N.getAxesPermutation(l,i),c=l,p=n,m=[];u!=null&&(p=tr({inputs:{x:n},backend:t,attrs:{perm:u}}),m.push(p),c=N.getInnerMostAxes(c.length,i));let f=t.data.get(p.dataId).values,{outVals:d,outShape:h,outDtype:g}=bE(p.shape,p.dtype,f,c),y=h;return a&&(y=N.expandShapeToKeepDim(h,l)),m.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.makeTensorInfo(y,g,d)}var wE={kernelName:wi,backendName:"cpu",kernelFunc:T6};function Vd(r,e,t,o){let n=r===e,s=r<e&&t<0,a=e<r&&t>1;if(n||s||a)return x.makeZerosTypedArray(0,o);let i=Math.abs(Math.ceil((e-r)/t)),l=x.makeZerosTypedArray(i,o);e<r&&t===1&&(t=-1),l[0]=r;for(let u=1;u<l.length;u++)l[u]=l[u-1]+t;return l}var _E=Qn(r=>1/Math.sqrt(r)),A6=es(Sn,_E),kE={kernelName:Sn,backendName:"cpu",kernelFunc:A6};function Gd(r,e,t,o,n){let s=nr.isSliceContinous(o,e,t),a=x.sizeFromShape(t),i=x.computeStrides(o);if(s){let p=nr.computeFlatOffset(e,i);return n==="string"?r.slice(p,p+a):r.subarray(p,p+a)}let l=n==="string"?N.fromUint8ToStringArray(r):r,u=ve(o,n,l),c=ve(t,n);for(let p=0;p<c.size;++p){let m=c.indexToLoc(p),f=m.map((d,h)=>d+e[h]);c.set(u.get(...f),...m)}return n==="string"?N.fromStringArrayToUint8(c.values):c.values}function ts(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{begin:s,size:a}=o;ee(n,"slice");let[i,l]=nr.parseSliceParams(n,s,a);nr.assertParamsValid(n,i,l);let u=t.data.get(n.dataId).values,c=Gd(u,i,l,n.shape,n.dtype);return t.makeTensorInfo(l,n.dtype,c)}var vE={kernelName:gs,backendName:"cpu",kernelFunc:ts};var CE=Ke((r,e)=>{let t=r-e;return t*t}),E6=et(Rn,CE),IE={kernelName:Rn,backendName:"cpu",kernelFunc:E6};function Pk(r,e,t,o){let n=ve(r,e.dtype);for(let s=0;s<n.size;s++){let a=n.indexToLoc(s),i=new Array(a.length);for(let l=0;l<i.length;l++)i[l]=a[l]*t[l]+o[l];n.set(e.get(...i),...a)}return n}var NE=Ke((r,e)=>r-e),D6=Op((r,e,t,o)=>({real:r-t,imag:e-o})),Wd=et(Fn,NE,D6),SE={kernelName:Fn,backendName:"cpu",kernelFunc:Wd};function Mk(r,e){let t=new Array(r.rank);for(let n=0;n<t.length;n++)t[n]=r.shape[n]*e[n];let o=ve(t,r.dtype);for(let n=0;n<o.values.length;++n){let s=o.indexToLoc(n),a=new Array(r.rank);for(let l=0;l<a.length;l++)a[l]=s[l]%r.shape[l];let i=r.locToIndex(a);o.values[n]=r.values[i]}return o}function Lk(r,e,t,o,n){let s=e[e.length-1],[a,i]=[r.length/s,s],l=x.getTypedArrayFromDType(t,a*o),u=x.getTypedArrayFromDType("int32",a*o);for(let p=0;p<a;p++){let m=p*i,f=r.subarray(m,m+i),d=[];for(let b=0;b<f.length;b++)d.push({value:f[b],index:b});d.sort((b,w)=>w.value-b.value);let h=p*o,g=l.subarray(h,h+o),y=u.subarray(h,h+o);for(let b=0;b<o;b++)g[b]=d[b].value,y[b]=d[b].index}let c=e.slice();return c[c.length-1]=o,[ve(c,t,l),ve(c,"int32",u)]}function zk(r,e,t,o){let n=x.parseAxisParam(e,t)[0],s=[1,t[0],1];for(let d=0;d<n;d++)s[0]*=t[d];s[1]=t[n];for(let d=n+1;d<t.length;d++)s[2]*=t[d];let a={},i=new Int32Array(t[n]),l=new lt(s,o,r),u=[],c=s[0]===1&&s[2]===1;for(let d=0;d<t[n];d++){let h;if(c)h=r[d].toString();else{let g=[];for(let y=0;y<s[0];y++)for(let b=0;b<s[2];b++)g.push(l.get(y,d,b));h=g.join(",")}if(a[h]!==void 0)i[d]=a[h];else{let g=Object.keys(a).length;a[h]=g,i[d]=g,u.push(d)}}let p=s.slice();p[1]=Object.keys(a).length;let m=new lt(p,o);u.forEach((d,h)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)m.set(l.get(g,d,y),g,h,y)});let f=t.slice();return f[n]=p[1],{outputValues:m.values,outputShape:f,indices:i}}var TE="3.2.0";hu("cpu",()=>new Rp,1);var Vk=$e(ti,r=>r>=0?r:Math.exp(r)-1),AE={kernelName:ti,backendName:"cpu",kernelFunc:Vk};function Gk(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{alpha:s}=o;ee([n],"leakyRelu");let a=x.sizeFromShape(n.shape),i=t.data.get(n.dataId).values,l=x.getTypedArrayFromDType("float32",a);for(let u=0;u<i.length;u++)l[u]=i[u]<0?s*i[u]:i[u];return t.makeTensorInfo(n.shape,"float32",l)}var EE={kernelName:un,backendName:"cpu",kernelFunc:Gk};var $6=Ke((r,e)=>r<0?e*r:r);function Wk(r){let{inputs:e,backend:t}=r,{x:o,alpha:n}=e;ee([o,n],"prelu");let s=t.data.get(o.dataId).values,a=t.data.get(n.dataId).values,[i,l]=$6(o.shape,n.shape,s,a,o.dtype);return t.makeTensorInfo(l,o.dtype,i)}var DE={kernelName:_n,backendName:"cpu",kernelFunc:Wk};var Uk=$e(kn,r=>Math.max(0,r)),$E={kernelName:kn,backendName:"cpu",kernelFunc:Uk};var jk=$e(Cn,r=>Math.min(Math.max(0,r),6)),RE={kernelName:Cn,backendName:"cpu",kernelFunc:jk};function Pp(r,e,t,o,n){if(t==="linear")return Ar({inputs:{x:e},backend:r});if(t==="relu")return Uk({inputs:{x:e},backend:r});if(t==="elu")return Vk({inputs:{x:e},backend:r});if(t==="relu6")return jk({inputs:{x:e},backend:r});if(t==="prelu")return Wk({inputs:{x:e,alpha:o},backend:r});if(t==="leakyrelu")return Gk({inputs:{x:e},backend:r,attrs:{alpha:n}});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}function Qe(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{shape:s}=o,a=x.sizeFromShape(n.shape),i=x.inferFromImplicitShape(s,a),l=x.sizeFromShape(i);x.assert(a===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${n.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(n.dataId);let u=t.data.get(n.dataId);if(u.complexTensorInfos!=null){let c=u.complexTensorInfos.real,p=u.complexTensorInfos.imag;c.shape=i,p.shape=i}return{dataId:n.dataId,shape:i,dtype:n.dtype}}var FE={kernelName:ds,backendName:"cpu",kernelFunc:Qe};function Hk(r){let{inputs:e,backend:t,attrs:o}=r,{a:n,b:s}=e,{transposeA:a,transposeB:i}=o;ee([n,s],"matMul");let l=n.shape.length,u=s.shape.length,c=a?n.shape[l-2]:n.shape[l-1],p=i?s.shape[u-1]:s.shape[u-2],m=a?n.shape[l-1]:n.shape[l-2],f=i?s.shape[u-2]:s.shape[u-1],d=n.shape.slice(0,-2),h=s.shape.slice(0,-2),g=x.sizeFromShape(d),y=x.sizeFromShape(h),b=g===y||g===1||y===1;x.assert(l>=2&&u>=2&&b,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${d}) and (${h}).`);let _=(g>y?n.shape.slice(0,-2):s.shape.slice(0,-2)).concat([m,f]);x.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${n.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let C=a?[g,c,m]:[g,m,c],D=i?[y,f,p]:[y,p,f],T=Qe({inputs:{x:n},backend:t,attrs:{shape:C}}),R=Qe({inputs:{x:s},backend:t,attrs:{shape:D}}),P=a?T.shape[1]:T.shape[2],B=a?T.shape[2]:T.shape[1],G=i?R.shape[1]:R.shape[2],U=Math.max(g,y),j=t.data.get(T.dataId).values,H=t.data.get(R.dataId).values,K=x.computeStrides(T.shape),X=x.computeStrides(R.shape),[oe,Y,re]=a?[K[0],1,K[1]]:[K[0],K[1],1],[te,ie,le]=i?[1,X[1],X[0]]:[X[1],1,X[0]],ae=B*G,fe=ve([U,B,G],T.dtype),de=fe.values,xe=t.blockSize;for(let we=0;we<U;we++)for(let De=0;De<B;De+=xe)for(let Ie=0;Ie<G;Ie+=xe)for(let ze=0;ze<P;ze+=xe){let qe=Math.min(De+xe,B),it=Math.min(Ie+xe,G),Tt=Math.min(ze+xe,P);for(let At=De;At<qe;At++)for(let Ue=Ie;Ue<it;Ue++){let ut=0;for(let mt=ze;mt<Tt;mt++){let Pt=Math.min(we,g-1)*oe,xo=Math.min(we,y-1)*le,Kt=j[Pt+At*Y+mt*re],to=H[mt*te+Ue*ie+xo];ut+=Kt*to}de[we*ae+(At*G+Ue)]+=ut}}return t.disposeIntermediateTensorInfo(T),t.disposeIntermediateTensorInfo(R),t.makeTensorInfo(_,fe.dtype,fe.values)}var OE={kernelName:Xo,backendName:"cpu",kernelFunc:Hk};function R6(r){let{inputs:e,backend:t,attrs:o}=r,{a:n,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=o,m,f,d,h=[];m=Hk({inputs:{a:n,b:s},attrs:{transposeA:l,transposeB:u},backend:t}),a&&(f=za({inputs:{a:m,b:a},backend:t}),h.push(m),m=f),c&&(d=Pp(t,m,c,i,p),h.push(m),m=d);for(let y of h)t.disposeIntermediateTensorInfo(y);return m}var PE={kernelName:ws,backendName:"cpu",kernelFunc:R6};var F6=$e(js,r=>Math.acos(r)),ME={kernelName:js,backendName:"cpu",kernelFunc:F6};var O6=$e(Hs,r=>Math.acosh(r)),LE={kernelName:Hs,backendName:"cpu",kernelFunc:O6};function P6(r){let{inputs:e,backend:t}=r,o=e;ee(e,"addN");let n=o.map(i=>t.data.get(i.dataId).values),s=ve(o[0].shape,o[0].dtype),a=s.values;for(let i=0;i<o.length;i++){let l=n[i];for(let u=0;u<a.length;u++)a[u]+=l[u]}return t.makeTensorInfo(s.shape,s.dtype,s.values)}var zE={kernelName:Ho,backendName:"cpu",kernelFunc:P6};function M6(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:a}=o;ee(n,"all");let i=x.parseAxisParam(s,n.shape),l=i,u=N.getAxesPermutation(l,n.shape.length),c=n;u!=null&&(c=tr({inputs:{x:n},backend:t,attrs:{perm:u}}),l=N.getInnerMostAxes(l.length,n.shape.length)),N.assertAxesAreInnerMostDims("all",l,c.shape.length);let[p,m]=N.computeOutAndReduceShapes(c.shape,l),f=x.sizeFromShape(m),d=x.makeZerosTypedArray(x.sizeFromShape(p),c.dtype),h=t.data.get(c.dataId).values;for(let y=0;y<d.length;++y){let b=y*f,w=h[b];for(let _=0;_<f;++_){let C=h[b+_];w=w&&C}d[y]=w}u!=null&&t.disposeIntermediateTensorInfo(c);let g=t.makeTensorInfo(p,c.dtype,d);if(a){let y=N.expandShapeToKeepDim(p,i),b=Qe({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),b}return g}var BE={kernelName:Ml,backendName:"cpu",kernelFunc:M6};function L6(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:a}=o;ee(n,"any");let i=x.parseAxisParam(s,n.shape),l=i,u=N.getAxesPermutation(l,n.shape.length),c=n;u!=null&&(c=tr({inputs:{x:n},backend:t,attrs:{perm:u}}),l=N.getInnerMostAxes(l.length,n.shape.length)),N.assertAxesAreInnerMostDims("any",l,c.shape.length);let[p,m]=N.computeOutAndReduceShapes(c.shape,l),f=x.sizeFromShape(m),d=x.makeZerosTypedArray(x.sizeFromShape(p),c.dtype),h=t.data.get(c.dataId).values;for(let y=0;y<d.length;++y){let b=y*f,w=h[b];for(let _=0;_<f;++_){let C=h[b+_];w=w||C}d[y]=w}u!=null&&t.disposeIntermediateTensorInfo(c);let g=t.makeTensorInfo(p,c.dtype,d);if(a){let y=N.expandShapeToKeepDim(p,i),b=Qe({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),b}return g}var VE={kernelName:Ll,backendName:"cpu",kernelFunc:L6};function z6(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s}=o;ee(n,"argMax");let a=x.parseAxisParam(s,n.shape),i=N.getAxesPermutation(a,n.shape.length),l=n,u=[];i!=null&&(l=tr({inputs:{x:n},backend:t,attrs:{perm:i}}),u.push(l),a=N.getInnerMostAxes(a.length,l.shape.length)),a=[a[0]],N.assertAxesAreInnerMostDims("argMax",a,l.shape.length);let[c,p]=N.computeOutAndReduceShapes(l.shape,a),m=x.sizeFromShape(c),f=x.makeZerosTypedArray(m,"int32"),d=x.sizeFromShape(p),h=t.data.get(l.dataId).values;for(let g=0;g<f.length;++g){let y=g*d,b=h[y],w=0;for(let _=0;_<d;++_){let C=h[y+_];C>b&&(b=C,w=_)}f[g]=w}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(c,"int32",f)}var GE={kernelName:qo,backendName:"cpu",kernelFunc:z6};function B6(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s}=o;ee(n,"argMin");let a=x.parseAxisParam(s,n.shape),i=N.getAxesPermutation(a,n.shape.length),l=n,u=[];i!=null&&(l=tr({inputs:{x:n},backend:t,attrs:{perm:i}}),u.push(l),a=N.getInnerMostAxes(a.length,l.shape.length)),a=[a[0]],N.assertAxesAreInnerMostDims("argMin",a,l.shape.length);let[c,p]=N.computeOutAndReduceShapes(l.shape,a),m=x.sizeFromShape(c),f=x.makeZerosTypedArray(m,"int32"),d=x.sizeFromShape(p),h=t.data.get(l.dataId).values;for(let g=0;g<f.length;++g){let y=g*d,b=h[y],w=0;for(let _=0;_<d;++_){let C=h[y+_];C<b&&(b=C,w=_)}f[g]=w}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(c,"int32",f)}var WE={kernelName:ea,backendName:"cpu",kernelFunc:B6};var V6=$e(qs,r=>Math.asin(r)),UE={kernelName:qs,backendName:"cpu",kernelFunc:V6};var G6=$e(Ks,r=>Math.asinh(r)),jE={kernelName:Ks,backendName:"cpu",kernelFunc:G6};var W6=$e(Xs,r=>Math.atan(r)),HE={kernelName:Xs,backendName:"cpu",kernelFunc:W6};var U6=Ke((r,e)=>Math.atan2(r,e)),j6=et(Zs,U6),qE={kernelName:Zs,backendName:"cpu",kernelFunc:j6};var H6=$e(Ys,r=>Math.atanh(r)),KE={kernelName:Ys,backendName:"cpu",kernelFunc:H6};function Mp(r,e,t,o,n,s){let a=n.strideHeight,i=n.strideWidth,l=n.dilationHeight,u=n.dilationWidth,c=n.effectiveFilterHeight,p=n.effectiveFilterWidth,m=n.padInfo.top,f=n.padInfo.left,d=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=ve(n.outShape,t),g=h.values,y=n.outShape[1]*n.outShape[2]*n.outShape[3],b=n.outShape[2]*n.outShape[3],w=n.outShape[3];for(let _=0;_<n.batchSize;++_){let C=_*y,D=_*o[0];for(let T=0;T<n.inChannels;++T)for(let R=0;R<n.outHeight;++R){let P=R*a-m,B=Math.max(0,P),G=Math.min(n.inHeight,c+P),U=C+R*b;for(let j=0;j<n.outWidth;++j){let H=j*i-f,K=Math.max(0,H),X=Math.min(n.inWidth,p+H),oe=d,Y=0,re=0;for(let ie=B;ie<G;ie+=l){let le=D+ie*o[1];for(let ae=K;ae<X;ae+=u){let fe=le+ae*o[2],de=r[fe+T];s==="max"&&de>oe?oe=de:s==="avg"&&(Y+=de,re++)}if(isNaN(oe))break}let te=U+j*w+T;g[te]=s==="avg"?Y/re:oe}}}return h}function yx(r,e,t,o,n=!1,s=!1){let a=ve(o.outShape,"int32"),i=o.strideHeight,l=o.strideWidth,u=o.dilationHeight,c=o.dilationWidth,p=o.effectiveFilterHeight,m=o.effectiveFilterWidth,f=o.padInfo.top,d=o.padInfo.left,h=ve(e,t,r);for(let g=0;g<o.batchSize;++g)for(let y=0;y<o.inChannels;++y)for(let b=0;b<o.outHeight;++b){let w=b*i-f,_=w;for(;_<0;)_+=u;let C=Math.min(o.inHeight,p+w);for(let D=0;D<o.outWidth;++D){let T=D*l-d,R=T;for(;R<0;)R+=c;let P=Math.min(o.inWidth,m+T),B=Number.NEGATIVE_INFINITY,G=-1;for(let U=_;U<C;U+=u){let j=U-w;for(let H=R;H<P;H+=c){let K=H-T,X=h.get(g,U,H,y);X>B&&(B=X,n?G=s?((g*o.inHeight+U)*o.inWidth+H)*o.inChannels+y:(U*o.inWidth+H)*o.inChannels+y:G=j*m+K)}}a.set(G,g,b,D,y)}}return a}function bx(r,e,t,o,n,s){let a=n.strideDepth,i=n.strideHeight,l=n.strideWidth,u=n.dilationDepth,c=n.dilationHeight,p=n.dilationWidth,m=n.effectiveFilterDepth,f=n.effectiveFilterHeight,d=n.effectiveFilterWidth,h=n.padInfo.front,g=n.padInfo.top,y=n.padInfo.left,b=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=ve(n.outShape,t),_=w.values,C=n.outShape[1]*n.outShape[2]*n.outShape[3]*n.outShape[4],D=n.outShape[2]*n.outShape[3]*n.outShape[4],T=n.outShape[3]*n.outShape[4],R=n.outShape[4];for(let P=0;P<n.batchSize;++P){let B=P*C,G=P*o[0];for(let U=0;U<n.inChannels;++U)for(let j=0;j<n.outDepth;++j){let H=j*a-h,K=H;for(;K<0;)K+=u;let X=Math.min(n.inDepth,m+H),oe=B+j*D;for(let Y=0;Y<n.outHeight;++Y){let re=Y*i-g,te=re;for(;te<0;)te+=c;let ie=Math.min(n.inHeight,f+re),le=oe+Y*T;for(let ae=0;ae<n.outWidth;++ae){let fe=ae*l-y,de=fe;for(;de<0;)de+=p;let xe=Math.min(n.inWidth,d+fe),we=le+ae*R,De=b,Ie=0,ze=0;for(let it=K;it<X;it+=u){let Tt=G+it*o[1];for(let At=te;At<ie;At+=c){let Ue=Tt+At*o[2];for(let ut=de;ut<xe;ut+=p){let mt=Ue+ut*o[3],Pt=r[mt+U];if(s==="max"&&Pt>De?De=Pt:s==="avg"&&(Ie+=Pt,ze++),isNaN(De))break}if(isNaN(De))break}if(isNaN(De))break}let qe=we+U;_[qe]=s==="avg"?Ie/ze:De}}}}return w}function XE(r,e){let t=ve(e.outShape,"int32"),o=e.strideDepth,n=e.strideHeight,s=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,m=e.padInfo.front,f=e.padInfo.top,d=e.padInfo.left;for(let h=0;h<e.batchSize;++h)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){let b=y*o-m,w=b;for(;w<0;)w+=a;let _=Math.min(e.inDepth,u+b);for(let C=0;C<e.outHeight;++C){let D=C*n-f,T=D;for(;T<0;)T+=i;let R=Math.min(e.inHeight,c+D);for(let P=0;P<e.outWidth;++P){let B=P*s-d,G=B;for(;G<0;)G+=l;let U=Math.min(e.inWidth,p+B),j=Number.NEGATIVE_INFINITY,H=-1;for(let K=w;K<_;K+=a){let X=K-b;for(let oe=T;oe<R;oe+=i){let Y=oe-D;for(let re=G;re<U;re+=l){let te=re-B,ie=r.get(h,K,oe,re,g);ie>=j&&(j=ie,H=X*c*p+Y*c+te)}}}t.set(H,h,y,C,P,g)}}}return t}function q6(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e;ee(n,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:l}=o,u=1;x.assert(N.eitherStridesOrDilationsAreOne(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let c=N.computePool2DInfo(n.shape,s,a,u,i,l),p;if(c.filterWidth===1&&c.filterHeight===1&&x.arraysEqual(c.inShape,c.outShape))p=Ar({inputs:{x:n},backend:t});else{let m=t.data.get(n.dataId).values,f=x.computeStrides(n.shape),d=Mp(m,n.shape,n.dtype,f,c,"avg");p=t.makeTensorInfo(c.outShape,n.dtype,d.values)}return p}var YE={kernelName:Ko,backendName:"cpu",kernelFunc:q6};function K6(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:l,dataFormat:u}=o;ee(n,"avgPool3d");let c=N.computePool3DInfo(n.shape,s,a,1,i,l,u),p=t.data.get(n.dataId).values,m=bx(p,n.shape,n.dtype,x.computeStrides(n.shape),c,"avg");return t.makeTensorInfo(m.shape,"float32",m.values)}var ZE={kernelName:ta,backendName:"cpu",kernelFunc:K6};function X6(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,input:s}=e,{filterSize:a,strides:i,pad:l,dimRoundingMode:u}=o;ee([n,s],"avgPool3DGrad");let c=N.computePool3DInfo(s.shape,a,i,1,l,u),p=c.strideDepth,m=c.strideHeight,f=c.strideWidth,d=c.filterDepth,h=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,w=c.dilationWidth,_=c.effectiveFilterDepth,C=c.effectiveFilterHeight,D=c.effectiveFilterWidth,T=_-1-c.padInfo.front,R=D-1-c.padInfo.left,P=C-1-c.padInfo.top,B=ve(s.shape,"float32"),G=1/(d*h*g),U=t.bufferSync(n);for(let j=0;j<c.batchSize;++j)for(let H=0;H<c.inChannels;++H)for(let K=0;K<c.inDepth;++K)for(let X=0;X<c.inHeight;++X)for(let oe=0;oe<c.inWidth;++oe){let Y=K-T,re=X-P,te=oe-R,ie=0;for(let le=0;le<_;le+=y){let ae=(Y+le)/p;if(!(ae<0||ae>=c.outDepth||Math.floor(ae)!==ae))for(let fe=0;fe<C;fe+=b){let de=(re+fe)/m;if(!(de<0||de>=c.outHeight||Math.floor(de)!==de))for(let xe=0;xe<D;xe+=w){let we=(te+xe)/f;if(we<0||we>=c.outWidth||Math.floor(we)!==we)continue;ie+=U.get(j,ae,de,we,H)}}}B.set(ie*G,j,K,X,oe,H)}return t.makeTensorInfo(B.shape,B.dtype,B.values)}var JE={kernelName:Bl,backendName:"cpu",kernelFunc:X6};function Y6(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,input:s}=e,a=s;ee([n,s],"avgPoolGrad");let{filterSize:i,strides:l,pad:u}=o,c=N.computePool2DInfo(a.shape,i,l,1,u),p=c.strideHeight,m=c.strideWidth,f=c.filterHeight,d=c.filterWidth,h=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,w=b-1-c.padInfo.left,_=y-1-c.padInfo.top,C=ve(a.shape,"float32"),D=1/(f*d),T=t.data.get(n.dataId).values,R=ve(n.shape,"float32",T);for(let P=0;P<c.batchSize;++P)for(let B=0;B<c.inChannels;++B)for(let G=0;G<c.inHeight;++G)for(let U=0;U<c.inWidth;++U){let j=G-_,H=U-w,K=0;for(let X=0;X<y;X+=h){let oe=(j+X)/p;if(!(oe<0||oe>=c.outHeight||Math.floor(oe)!==oe))for(let Y=0;Y<b;Y+=g){let re=(H+Y)/m;if(re<0||re>=c.outWidth||Math.floor(re)!==re)continue;K+=R.get(P,oe,re,B)}}C.set(K*D,P,G,U,B)}return t.makeTensorInfo(C.shape,C.dtype,C.values)}var QE={kernelName:zl,backendName:"cpu",kernelFunc:Y6};function Z6(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,scale:s,offset:a,mean:i,variance:l}=e;x.assert(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),x.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),x.assert(s==null||i.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ee([n,i,l,s,a],"batchNorm");let{varianceEpsilon:u}=o;u==null&&(u=.001);let c=t.data.get(n.dataId).values,p=t.data.get(i.dataId).values,m=t.data.get(l.dataId).values,f=s?t.data.get(s.dataId).values:new Float32Array([1]),d=a?t.data.get(a.dataId).values:new Float32Array([0]),h=new Float32Array(c.length),g=d.length,y=f.length,b=m.length,w=p.length,_=0,C=0,D=0,T=0;for(let R=0;R<c.length;++R)h[R]=d[_++]+(c[R]-p[C++])*f[D++]/Math.sqrt(m[T++]+u),_>=g&&(_=0),C>=w&&(C=0),D>=y&&(D=0),T>=b&&(T=0);return t.makeTensorInfo(n.shape,n.dtype,h)}var e2={kernelName:an,backendName:"cpu",kernelFunc:Z6};function J6(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{blockShape:s,crops:a}=o;ee([n],"batchToSpaceND");let i=s.reduce((y,b)=>y*b),l=N.getReshaped(n.shape,s,i),u=N.getPermuted(l.length,s.length),c=N.getReshapedPermuted(n.shape,s,i),p=N.getSliceBeginCoords(a,s.length),m=N.getSliceSize(c,a,s.length),f=Qe({inputs:{x:n},backend:t,attrs:{shape:l}}),d=tr({inputs:{x:f},backend:t,attrs:{perm:u}}),h=Qe({inputs:{x:d},backend:t,attrs:{shape:c}}),g=ts({inputs:{x:h},backend:t,attrs:{begin:p,size:m}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var t2={kernelName:ra,backendName:"cpu",kernelFunc:J6};function Q6(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,weights:s}=e,{size:a}=o,i=t.data.get(n.dataId).values,l=t.data.get(s.dataId).values,u=Md(i,l,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,u)}var r2={kernelName:Vl,backendName:"cpu",kernelFunc:Q6};var e5=$e($o,(r,e)=>{let t=e;return r>t.clipValueMax?t.clipValueMax:r<t.clipValueMin?t.clipValueMin:r}),o2={kernelName:$o,backendName:"cpu",kernelFunc:e5};var t5=r=>{let{x:e}=r.inputs,t=r.backend,o=new Float32Array(x.sizeFromShape(e.shape)),n=t.data.get(e.dataId),s=n.complexTensorInfos.real,a=n.complexTensorInfos.imag,i=t.data.get(s.dataId).values,l=t.data.get(a.dataId).values;for(let u=0;u<i.length;u++){let c=i[u],p=l[u];o[u]=Math.hypot(c,p)}return t.makeOutput(o,e.shape,"float32")},n2={kernelName:oa,backendName:"cpu",kernelFunc:t5};function ji(r){let{inputs:e,backend:t}=r,{input:o}=e,n=t.data.get(o.dataId).complexTensorInfos.imag,s=t.data.get(n.dataId).values;return t.makeTensorInfo(n.shape,n.dtype,s)}var s2={kernelName:Ql,backendName:"cpu",kernelFunc:ji};function kl(r){let{inputs:e,backend:t,attrs:o}=r,{axis:n}=o,s=x.parseAxisParam(n,e[0].shape)[0],a=N.computeOutShape(e.map(h=>h.shape),s);if(x.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(h=>x.sizeFromShape(h.shape)>0);if(i.length===1)return Ar({inputs:{x:i[0]},backend:t});let l=i.map(h=>h.shape);if(N.assertParamsConsistent(l,s),i[0].dtype==="complex64"){let h=i.map(_=>Zn({inputs:{input:_},backend:t})),g=i.map(_=>ji({inputs:{input:_},backend:t})),y=kl({inputs:h,backend:t,attrs:{axis:s}}),b=kl({inputs:g,backend:t,attrs:{axis:s}}),w=pr({inputs:{real:y,imag:b},backend:t});return h.forEach(_=>t.disposeIntermediateTensorInfo(_)),g.forEach(_=>t.disposeIntermediateTensorInfo(_)),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b),w}let u=i.map(h=>{let g=x.sizeFromShape(h.shape.slice(s));return Qe({inputs:{x:h},backend:t,attrs:{shape:[-1,g]}})}),c=u.map(h=>({vals:t.data.get(h.dataId).values,shape:h.shape}));a=N.computeOutShape(u.map(h=>h.shape),1);let p=u[0].shape[0]===1,m=Ld(c,a,e[0].dtype,p),f=N.computeOutShape(i.map(h=>h.shape),s),d=t.makeTensorInfo(f,e[0].dtype,m);return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),d}var i2={kernelName:ls,backendName:"cpu",kernelFunc:kl};function qk(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s}=e,{strides:a,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=o;ee([n,s],"conv2d");let p=N.convertConv2DDataFormat(l),m=N.computeConv2DInfo(n.shape,s.shape,a,u,i,c,!1,p),f=m.filterHeight,d=m.filterWidth,h=m.dilationHeight,g=m.dilationWidth,y=m.padInfo.left,b=m.padInfo.top,w=m.dataFormat==="channelsLast",_=new lt(m.outShape,n.dtype),C=x.computeStrides(n.shape),D=x.computeStrides(s.shape),T=C[0],R=w?C[1]:C[2],P=w?C[2]:1,B=w?1:C[1],G=_.strides[0],U=w?_.strides[1]:_.strides[2],j=w?_.strides[2]:1,H=w?1:_.strides[1],K=t.data.get(n.dataId).values,X=t.data.get(s.dataId).values,oe=_.values;for(let Y=0;Y<m.batchSize;++Y){let re=Y*T,te=Y*G;for(let ie=0;ie<m.outHeight;++ie){let le=te+ie*U,ae=ie*m.strideHeight-b;for(let fe=0;fe<f;++fe){let de=ae+fe*h;if(de<0||de>=m.inHeight)continue;let xe=fe*D[0],we=re+de*R;for(let De=0;De<m.outWidth;++De){let Ie=le+De*j,ze=De*m.strideWidth-y;for(let qe=0;qe<d;++qe){let it=ze+qe*g;if(it<0||it>=m.inWidth)continue;let Tt=xe+qe*D[1],At=we+it*P,Ue=Tt;for(let ut=0;ut<m.inChannels;++ut){let mt=K[At+ut*B];for(let Pt=0;Pt<m.outChannels;++Pt)oe[Ie+Pt*H]+=mt*X[Ue+Pt];Ue+=m.outChannels}}}}}}return t.makeTensorInfo(_.shape,_.dtype,oe)}var a2={kernelName:Zo,backendName:"cpu",kernelFunc:qk};function r5(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,dy:s}=e,{strides:a,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=o;ee([n,s],"conv2dBackpropFilter");let p=N.convertConv2DDataFormat(l),m=N.computeConv2DInfo(n.shape,c,a,1,i,u,!1,p),{strideHeight:f,strideWidth:d,filterHeight:h,filterWidth:g}=m,y=m.dataFormat==="channelsLast",b=new lt(m.filterShape,"float32"),w=m.padInfo.left,_=m.padInfo.top,C=t.data.get(n.dataId).values,D=t.data.get(s.dataId).values,T=new lt(n.shape,n.dtype,C),R=new lt(s.shape,s.dtype,D);for(let P=0;P<h;++P){let B=Math.max(0,Math.ceil((_-P)/f)),G=Math.min(m.outHeight,(m.inHeight+_-P)/f);for(let U=0;U<g;++U){let j=Math.max(0,Math.ceil((w-U)/d)),H=Math.min(m.outWidth,(m.inWidth+w-U)/d);for(let K=0;K<m.inChannels;++K)for(let X=0;X<m.outChannels;++X){let oe=0;for(let Y=0;Y<m.batchSize;++Y)for(let re=B;re<G;++re){let te=P+re*f-_;for(let ie=j;ie<H;++ie){let le=U+ie*d-w;y?oe+=T.get(Y,te,le,K)*R.get(Y,re,ie,X):oe+=T.get(Y,K,te,le)*R.get(Y,X,re,ie)}}b.set(oe,P,U,K,X)}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}var l2={kernelName:Wl,backendName:"cpu",kernelFunc:r5};function o5(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,filter:s}=e,{inputShape:a,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=o;ee([n,s],"conv2dBackpropInput");let p=x.computeStrides(s.shape),m=x.computeStrides(n.shape),f=N.convertConv2DDataFormat(u),d=N.computeConv2DInfo(a,s.shape,i,1,l,c,!1,f),h=new lt(d.inShape,"float32"),g=h.values,y=t.data.get(n.dataId).values,b=t.data.get(s.dataId).values,[w,_,C]=p,{batchSize:D,filterHeight:T,filterWidth:R,inChannels:P,inHeight:B,inWidth:G,outChannels:U,outHeight:j,outWidth:H,strideHeight:K,strideWidth:X}=d;f=d.dataFormat;let oe=T-1-d.padInfo.top,Y=R-1-d.padInfo.left,re=f==="channelsLast",te=h.strides[0],ie=re?h.strides[1]:h.strides[2],le=re?h.strides[2]:1,ae=re?1:h.strides[1],fe=m[0],de=re?m[1]:m[2],xe=re?m[2]:1,we=re?1:m[1];for(let De=0;De<D;++De)for(let Ie=0;Ie<P;++Ie)for(let ze=0;ze<B;++ze){let qe=ze-oe,it=Math.max(0,Math.ceil(qe/K)),Tt=Math.min(j,(T+qe)/K);for(let At=0;At<G;++At){let Ue=At-Y,ut=Math.max(0,Math.ceil(Ue/X)),mt=Math.min(H,(R+Ue)/X),Pt=0;for(let Kt=it;Kt<Tt;++Kt){let to=Kt*K-qe;for(let Dr=ut;Dr<mt;++Dr){let Uo=Dr*X-Ue,rr=fe*De+de*Kt+xe*Dr,yo=w*(T-1-to)+_*(R-1-Uo)+C*Ie;for(let Vr=0;Vr<U;++Vr){let yr=y[rr+we*Vr],ro=b[yo+Vr];Pt+=yr*ro}}}let xo=te*De+ie*ze+le*At+ae*Ie;g[xo]=Pt}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}var u2={kernelName:Jo,backendName:"cpu",kernelFunc:o5};function n5(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s}=e,{strides:a,pad:i,dilations:l}=o;ee([n,s],"conv3d");let u=N.computeConv3DInfo(n.shape,s.shape,a,l,i),{filterDepth:c,filterHeight:p,filterWidth:m,dilationDepth:f,dilationHeight:d,dilationWidth:h,padInfo:g}=u,y=g.front,b=g.left,w=g.top,_=new lt(u.outShape,n.dtype),C=t.data.get(n.dataId).values,D=t.data.get(s.dataId).values,T=_.values,R=x.computeStrides(n.shape),P=x.computeStrides(s.shape);for(let B=0;B<u.batchSize;++B){let G=B*R[0],U=B*_.strides[0];for(let j=0;j<u.outDepth;++j){let H=U+j*_.strides[1],K=j*u.strideDepth-y;for(let X=0;X<c;++X){let oe=K+X*f;if(oe<0||oe>=u.inDepth)continue;let Y=X*P[0],re=G+oe*R[1];for(let te=0;te<u.outHeight;++te){let ie=H+te*_.strides[2],le=te*u.strideHeight-w;for(let ae=0;ae<p;++ae){let fe=le+ae*d;if(fe<0||fe>=u.inHeight)continue;let de=Y+ae*P[1],xe=re+fe*R[2];for(let we=0;we<u.outWidth;++we){let De=ie+we*u.outChannels,Ie=we*u.strideWidth-b;for(let ze=0;ze<m;++ze){let qe=Ie+ze*h;if(qe<0||qe>=u.inWidth)continue;let it=de+ze*P[2],Tt=xe+qe*u.inChannels,At=it;for(let Ue=0;Ue<u.inChannels;++Ue){let ut=C[Tt+Ue];for(let mt=0;mt<u.outChannels;++mt)T[De+mt]+=ut*D[At+mt];At+=u.outChannels}}}}}}}}return t.makeTensorInfo(_.shape,_.dtype,_.values)}var c2={kernelName:na,backendName:"cpu",kernelFunc:n5};function s5(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,dy:s}=e,{strides:a,pad:i,filterShape:l}=o;ee([n,s],"conv3dBackpropFilterV2");let u=x.computeStrides(n.shape),c=x.computeStrides(s.shape),p=N.computeConv3DInfo(n.shape,l,a,1,i),m=p.strideDepth,f=p.strideHeight,d=p.strideWidth,h=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=new lt(p.filterShape,"float32"),w=b.values,[_,C,D,T]=b.strides,R=t.data.get(s.dataId).values,[P,B,G,U]=c,j=t.data.get(n.dataId).values,[H,K,X,oe]=u,Y=p.padInfo.front,re=p.padInfo.left,te=p.padInfo.top;for(let ie=0;ie<h;++ie){let le=Math.max(0,Math.ceil((Y-ie)/m)),ae=Math.min(p.outDepth,(p.inDepth+Y-ie)/m),fe=ie*_;for(let de=0;de<g;++de){let xe=Math.max(0,Math.ceil((te-de)/f)),we=Math.min(p.outHeight,(p.inHeight+te-de)/f),De=de*C+fe;for(let Ie=0;Ie<y;++Ie){let ze=Math.max(0,Math.ceil((re-Ie)/d)),qe=Math.min(p.outWidth,(p.inWidth+re-Ie)/d),it=Ie*D+De;for(let Tt=0;Tt<p.inChannels;++Tt){let At=Tt*T+it;for(let Ue=0;Ue<p.outChannels;++Ue){let ut=0;for(let mt=0;mt<p.batchSize;++mt){let Pt=mt*H,xo=mt*P;for(let Kt=le;Kt<ae;++Kt){let Dr=(ie+Kt*m-Y)*K+Pt,Uo=Kt*B+xo;for(let rr=xe;rr<we;++rr){let Vr=(de+rr*f-te)*X+Dr,yr=rr*G+Uo;for(let ro=ze;ro<qe;++ro){let Dl=(Ie+ro*d-re)*oe+Vr,Wa=ro*U+yr;ut+=j[Dl+Tt]*R[Wa+Ue]}}}}w[At+Ue]=ut}}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}var p2={kernelName:Ul,backendName:"cpu",kernelFunc:s5};function i5(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,filter:s}=e,{pad:a,strides:i,inputShape:l}=o;ee([n],"conv3dBackpropInputV2");let u=x.computeStrides(n.shape),c=x.computeStrides(s.shape),p=N.computeConv3DInfo(l,s.shape,i,1,a),m=new lt(p.inShape,"float32"),f=m.values,[d,h,g,y]=m.strides,b=t.data.get(n.dataId).values,[w,_,C,D]=u,T=t.data.get(s.dataId).values,[R,P,B,G]=c,{batchSize:U,filterDepth:j,filterHeight:H,filterWidth:K,inChannels:X,inDepth:oe,inHeight:Y,inWidth:re,outChannels:te,outDepth:ie,outHeight:le,outWidth:ae,strideDepth:fe,strideHeight:de,strideWidth:xe}=p,we=j-1-p.padInfo.front,De=H-1-p.padInfo.top,Ie=K-1-p.padInfo.left;for(let ze=0;ze<U;++ze)for(let qe=0;qe<X;++qe)for(let it=0;it<oe;++it){let Tt=it-we,At=Math.max(0,Math.ceil(Tt/fe)),Ue=Math.min(ie,(j+Tt)/fe);for(let ut=0;ut<Y;++ut){let mt=ut-De,Pt=Math.max(0,Math.ceil(mt/de)),xo=Math.min(le,(H+mt)/de);for(let Kt=0;Kt<re;++Kt){let to=Kt-Ie,Dr=Math.max(0,Math.ceil(to/xe)),Uo=Math.min(ae,(K+to)/xe),rr=0;for(let yo=At;yo<Ue;++yo){let Vr=yo*fe-Tt;for(let yr=Pt;yr<xo;++yr){let ro=yr*de-mt;for(let Ao=Dr;Ao<Uo;++Ao){let Dl=Ao*xe-to,Wa=w*ze+_*yo+C*yr+D*Ao,ns=R*(j-1-Vr)+P*(H-1-ro)+B*(K-1-Dl)+G*qe;for(let Xi=0;Xi<te;++Xi){let Yp=b[Wa+Xi],fc=T[ns+Xi];rr+=Yp*fc}}}}f[d*ze+h*it+g*ut+y*Kt+qe]=rr}}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}var m2={kernelName:jl,backendName:"cpu",kernelFunc:i5};var a5=$e(Qo,r=>Math.cos(r)),f2={kernelName:Qo,backendName:"cpu",kernelFunc:a5};var l5=$e(Js,r=>Math.cosh(r)),d2={kernelName:Js,backendName:"cpu",kernelFunc:l5};function u5(r){let{inputs:e,backend:t,attrs:o}=r,{image:n,boxes:s,boxInd:a}=e,{cropSize:i,method:l,extrapolationValue:u}=o,[c,p,m,f]=n.shape,d=s.shape[0],[h,g]=i,y=ve([d,h,g,f],"float32"),b=t.data.get(s.dataId).values,w=t.data.get(a.dataId).values,_=t.data.get(n.dataId).values,C=x.computeStrides(n.shape),D=x.computeStrides(y.shape);for(let T=0;T<d;T++){let R=T*4,P=b[R],B=b[R+1],G=b[R+2],U=b[R+3],j=w[T];if(j>=c)continue;let H=h>1?(G-P)*(p-1)/(h-1):0,K=g>1?(U-B)*(m-1)/(g-1):0;for(let X=0;X<h;X++){let oe=h>1?P*(p-1)+X*H:.5*(P+G)*(p-1);if(oe<0||oe>p-1){for(let Y=0;Y<g;Y++)for(let re=0;re<f;re++){let te=re+Y*D[2]+X*D[1]+T*D[0];y.values[te]=u}continue}if(l==="bilinear"){let Y=Math.floor(oe),re=Math.ceil(oe),te=oe-Y;for(let ie=0;ie<g;ie++){let le=g>1?B*(m-1)+ie*K:.5*(B+U)*(m-1);if(le<0||le>m-1){for(let xe=0;xe<f;xe++){let we=xe+ie*D[2]+X*D[1]+T*D[0];y.values[we]=u}continue}let ae=Math.floor(le),fe=Math.ceil(le),de=le-ae;for(let xe=0;xe<f;xe++){let we=xe+ae*C[2]+Y*C[1]+j*C[0],De=_[we];we=xe+fe*C[2]+Y*C[1]+j*C[0];let Ie=_[we];we=xe+ae*C[2]+re*C[1]+j*C[0];let ze=_[we];we=xe+fe*C[2]+re*C[1]+j*C[0];let qe=_[we],it=De+(Ie-De)*de,Tt=ze+(qe-ze)*de;we=xe+ie*D[2]+X*D[1]+T*D[0],y.values[we]=it+(Tt-it)*te}}}else for(let Y=0;Y<g;++Y){let re=g>1?B*(m-1)+Y*K:.5*(B+U)*(m-1);if(re<0||re>m-1){for(let le=0;le<f;le++){let ae=le+Y*D[2]+X*D[1]+T*D[0];y.values[ae]=u}continue}let te=Math.round(re),ie=Math.round(oe);for(let le=0;le<f;le++){let ae=le+te*C[2]+ie*C[1]+j*C[0],fe=le+Y*D[2]+X*D[1]+T*D[0];y.values[fe]=_[ae]}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}var h2={kernelName:Qs,backendName:"cpu",kernelFunc:u5};function c5(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,exclusive:a,reverse:i}=o;ee(n,"cumsum");let l=N.getAxesPermutation([s],n.shape.length),u=n;l!=null&&(u=tr({inputs:{x:n},backend:t,attrs:{perm:l}}));let c=N.getInnerMostAxes(1,n.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);let p=fr(u.dtype,"int32"),m=x.makeZerosTypedArray(x.sizeFromShape(u.shape),p),f=t.data.get(u.dataId).values,d=u.shape[u.shape.length-1],h=i?(y,b)=>y+d-b-1:(y,b)=>y+b;for(let y=0;y<f.length;y+=d)for(let b=0;b<d;b++){let w=h(y,b);if(b===0)m[w]=a?0:f[w];else{let _=h(y,b-1);m[w]=a?f[_]+m[_]:f[w]+m[_]}}let g=t.makeTensorInfo(u.shape,p,m);if(l!=null){let y=N.getUndoAxesPermutation(l),b=tr({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),b}return g}var g2={kernelName:en,backendName:"cpu",kernelFunc:c5};function p5(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,weights:s}=e,{size:a,binaryOutput:i}=o;if(n.shape.length===1){let l=t.data.get(n.dataId).values,u=t.data.get(s.dataId).values,c=Md(l,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,c)}else if(n.shape.length===2){let l=t.bufferSync(n),u=t.bufferSync(s),c=Dk(l,u,a,i);return t.makeTensorInfo(c.shape,s.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${n.shape.length}.`)}var x2={kernelName:Hl,backendName:"cpu",kernelFunc:p5};function m5(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{blockSize:s,dataFormat:a}=o;x.assert(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`),x.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);let i=n.shape[0],l=n.shape[1],u=n.shape[2],c=n.shape[3],p=l*s,m=u*s,f=c/(s*s),d=t.data.get(n.dataId).values,h=new Float32Array(i*p*m*f),g=0;for(let y=0;y<i;++y)for(let b=0;b<p;++b){let w=Math.floor(b/s),_=b%s;for(let C=0;C<m;++C){let D=Math.floor(C/s),T=C%s,R=(_*s+T)*f;for(let P=0;P<f;++P){let G=P+R+c*(D+u*(w+l*y));h[g++]=d[G]}}}return t.makeTensorInfo([i,p,m,f],n.dtype,h)}var y2={kernelName:ei,backendName:"cpu",kernelFunc:m5};function Kk(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s}=e,{strides:a,pad:i,dilations:l,dimRoundingMode:u}=o;ee([n,s],"depthwiseConv2DNative");let c=x.computeStrides(n.shape),p=x.computeStrides(s.shape),m=l;m==null&&(m=[1,1]),x.assert(N.eitherStridesOrDilationsAreOne(a,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${m}'`);let f=N.computeConv2DInfo(n.shape,s.shape,a,m,i,u,!0),{filterHeight:d,filterWidth:h,dilationHeight:g,dilationWidth:y,padInfo:b}=f,w=b.left,_=b.top,C=f.outChannels/f.inChannels,D=new lt(f.outShape,n.dtype),T=t.data.get(n.dataId).values,R=t.data.get(s.dataId).values,P=D.values;for(let B=0;B<f.batchSize;++B){let G=B*c[0],U=B*D.strides[0];for(let j=0;j<f.outHeight;++j){let H=U+j*D.strides[1],K=j*f.strideHeight-w;for(let X=0;X<d;++X){let oe=K+X*g;if(oe<0||oe>=f.inHeight)continue;let Y=X*p[0],re=G+oe*c[1];for(let te=0;te<f.outWidth;++te){let ie=H+te*D.strides[2],le=te*f.strideWidth-_;for(let ae=0;ae<h;++ae){let fe=le+ae*y;if(fe<0||fe>=f.inWidth)continue;let de=Y+ae*p[1],xe=re+fe*f.inChannels,we=ie,De=de;for(let Ie=0;Ie<f.inChannels;++Ie){let ze=T[xe+Ie];for(let qe=0;qe<C;++qe)P[we+qe]+=ze*R[De+qe];we+=C,De+=C}}}}}}return t.makeTensorInfo(D.shape,D.dtype,D.values)}var b2={kernelName:tn,backendName:"cpu",kernelFunc:Kk};function f5(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,dy:s}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=o;ee([n,s],"depthwiseConv2dNativeBackpropFilter");let p=N.computeConv2DInfo(n.shape,c,a,i,l,u,!0),{strideHeight:m,strideWidth:f,filterHeight:d,filterWidth:h}=p,g=new lt(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,w=p.outChannels/p.inChannels,_=t.data.get(n.dataId).values,C=new lt(n.shape,n.dtype,_),D=t.data.get(s.dataId).values,T=new lt(s.shape,s.dtype,D);for(let R=0;R<d;++R){let P=Math.max(0,Math.ceil((b-R)/m)),B=Math.min(p.outHeight,(p.inHeight+b-R)/m);for(let G=0;G<h;++G){let U=Math.max(0,Math.ceil((y-G)/f)),j=Math.min(p.outWidth,(p.inWidth+y-G)/f);for(let H=0;H<p.outChannels;++H){let K=Math.trunc(H/w),X=H%w,oe=0;for(let Y=0;Y<p.batchSize;++Y)for(let re=P;re<B;++re){let te=R+re*m-b;for(let ie=U;ie<j;++ie){let le=G+ie*f-y;oe+=C.get(Y,te,le,K)*T.get(Y,re,ie,H)}}g.set(oe,R,G,K,X)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}var w2={kernelName:ql,backendName:"cpu",kernelFunc:f5};function d5(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,filter:s}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=o;ee([n,s],"depthwiseConv2DNativeBackpropInput");let p=x.computeStrides(n.shape),m=x.computeStrides(s.shape),f=N.computeConv2DInfo(c,s.shape,a,i,l,u,!0),d=new lt(f.inShape,"float32"),h=d.values,[g,y,b]=d.strides,w=t.data.get(n.dataId).values,[_,C,D]=p,T=t.data.get(s.dataId).values,[R,P,B]=m,{batchSize:G,filterHeight:U,filterWidth:j,inChannels:H,inHeight:K,inWidth:X,outChannels:oe,outHeight:Y,outWidth:re,strideHeight:te,strideWidth:ie}=f,le=U-1-f.padInfo.top,ae=j-1-f.padInfo.left,fe=oe/H;for(let de=0;de<G;++de)for(let xe=0;xe<H;++xe)for(let we=0;we<K;++we){let De=we-le,Ie=Math.max(0,Math.ceil(De/te)),ze=Math.min(Y,(U+De)/te);for(let qe=0;qe<X;++qe){let it=qe-ae,Tt=Math.max(0,Math.ceil(it/ie)),At=Math.min(re,(j+it)/ie),Ue=0;for(let ut=Ie;ut<ze;++ut){let mt=ut*te-De;for(let Pt=Tt;Pt<At;++Pt){let xo=Pt*ie-it,Kt=_*de+C*ut+D*Pt,to=R*(U-1-mt)+P*(j-1-xo)+B*xe;for(let Dr=0;Dr<fe;++Dr){let Uo=xe*fe+Dr,rr=w[Kt+Uo],yo=T[to+Dr];Ue+=rr*yo}}}h[g*de+y*we+b*qe+xe]=Ue}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}var _2={kernelName:Kl,backendName:"cpu",kernelFunc:d5};function h5(r){let{inputs:e,backend:t}=r,{x:o}=e,n=x.sizeFromShape(o.shape),s=t.data.get(o.dataId).values,a=ve([n,n],o.dtype),i=a.values;for(let u=0;u<s.length;u++)i[u*n+u]=s[u];let l=[...o.shape,...o.shape];return t.makeTensorInfo(l,a.dtype,a.values)}var k2={kernelName:Xl,backendName:"cpu",kernelFunc:h5};var v2={kernelName:sa,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:o,filter:n}=r,{strides:s,pad:a,dilations:i}=t,l=e,u=l.data.get(o.dataId).values,c=o.shape.length,p=l.data.get(n.dataId).values,m=n.shape.length,{batchSize:f,inHeight:d,inWidth:h,inChannels:g,outHeight:y,outWidth:b,padInfo:w,strideHeight:_,strideWidth:C,filterHeight:D,filterWidth:T,dilationHeight:R,dilationWidth:P,outShape:B}=N.computeDilation2DInfo(o.shape,n.shape,s,a,"NHWC",i),G=x.sizeFromShape(B),U=B.length,j=x.getArrayFromDType(o.dtype,G);for(let K=0;K<f;++K)for(let X=0;X<y;++X){let oe=X*_-w.top;for(let Y=0;Y<b;++Y){let re=Y*C-w.left;for(let te=0;te<g;++te){let ie=Number.MIN_SAFE_INTEGER;for(let ae=0;ae<D;++ae){let fe=oe+ae*R;if(fe>=0&&fe<d)for(let de=0;de<T;++de){let xe=re+de*P;if(xe>=0&&xe<h){let we=x.locToIndex([K,fe,xe,te],c,x.computeStrides(o.shape)),De=x.locToIndex([ae,de,te],m,x.computeStrides(n.shape)),Ie=u[we]+p[De];Ie>ie&&(ie=Ie)}}}let le=x.locToIndex([K,X,Y,te],U,x.computeStrides(B));j[le]=ie}}}return{dataId:l.write(x.toTypedArray(j,o.dtype),B,o.dtype),shape:B,dtype:o.dtype}}};var C2={kernelName:Dc,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:o,filter:n,dy:s}=r,{strides:a,pad:i,dilations:l}=t,u=e,c=x.toNestedArray(o.shape,u.data.get(o.dataId).values),p=x.toNestedArray(n.shape,u.data.get(n.dataId).values),{batchSize:m,inHeight:f,inWidth:d,inChannels:h,outHeight:g,outWidth:y,padInfo:b,strideHeight:w,strideWidth:_,filterHeight:C,filterWidth:D,dilationHeight:T,dilationWidth:R,outShape:P}=N.computeDilation2DInfo(o.shape,n.shape,a,i,"NHWC",l);x.assert(s.rank===P.length,()=>`Error in ${Dc}, dy must have the same rank as output ${P.length}, but got ${s.rank}`);let B=x.toNestedArray(P,u.data.get(s.dataId).values),G=x.makeZerosNestedTypedArray(n.shape,n.dtype);for(let j=0;j<m;++j)for(let H=0;H<g;++H){let K=H*w-b.top;for(let X=0;X<y;++X){let oe=X*_-b.left;for(let Y=0;Y<h;++Y){let re=Number.MIN_SAFE_INTEGER,te=0,ie=0;for(let le=0;le<C;++le){let ae=K+le*T;if(ae>=0&&ae<f)for(let fe=0;fe<D;++fe){let de=oe+fe*R;if(de>=0&&de<d){let xe=c[j][ae][de][Y]+p[le][fe][Y];xe>re&&(re=xe,te=le,ie=fe)}}}G[te][ie][Y]+=B[j][H][X][Y]}}}return{dataId:u.write(x.toTypedArray(G,o.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var I2={kernelName:Ec,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:o,filter:n,dy:s}=r,{strides:a,pad:i,dilations:l}=t,u=e,c=x.toNestedArray(o.shape,u.data.get(o.dataId).values),p=x.toNestedArray(n.shape,u.data.get(n.dataId).values),{batchSize:m,inHeight:f,inWidth:d,inChannels:h,outHeight:g,outWidth:y,padInfo:b,strideHeight:w,strideWidth:_,filterHeight:C,filterWidth:D,dilationHeight:T,dilationWidth:R,outShape:P}=N.computeDilation2DInfo(o.shape,n.shape,a,i,"NHWC",l);x.assert(s.rank===P.length,()=>`Error in ${Ec}, dy must have the same rank as output ${P.length}, but got ${s.rank}`);let B=x.toNestedArray(P,u.data.get(s.dataId).values),G=x.makeZerosNestedTypedArray(o.shape,o.dtype);for(let j=0;j<m;++j)for(let H=0;H<g;++H){let K=H*w-b.top;for(let X=0;X<y;++X){let oe=X*_-b.left;for(let Y=0;Y<h;++Y){let re=Number.MIN_SAFE_INTEGER,te=K<0?0:K,ie=oe<0?0:oe;for(let le=0;le<C;++le){let ae=K+le*T;if(ae>=0&&ae<f)for(let fe=0;fe<D;++fe){let de=oe+fe*R;if(de>=0&&de<d){let xe=c[j][ae][de][Y]+p[le][fe][Y];xe>re&&(re=xe,te=ae,ie=de)}}}G[j][te][ie][Y]+=B[j][H][X][Y]}}}return{dataId:u.write(x.toTypedArray(G,o.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};function g5(r){let{inputs:e,backend:t}=r,{dy:o,y:n}=e;ee([o,n],"eluGrad");let s=new Float32Array(x.sizeFromShape(n.shape)),a=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values;for(let l=0;l<a.length;++l){let u=a[l];u>=1?s[l]=i[l]:s[l]=i[l]*(u+1)}return t.makeTensorInfo(n.shape,"float32",s)}var N2={kernelName:Yl,backendName:"cpu",kernelFunc:g5};var x5=Ke((r,e)=>r===e?1:0),Xk=et(oi,x5,null,"bool"),S2={kernelName:oi,backendName:"cpu",kernelFunc:Xk};var y5=N.ERF_P,b5=N.ERF_A1,w5=N.ERF_A2,_5=N.ERF_A3,k5=N.ERF_A4,v5=N.ERF_A5,C5=$e(ri,r=>{let e=Math.sign(r),t=Math.abs(r),o=1/(1+y5*t);return e*(1-((((v5*o+k5)*o+_5)*o+w5)*o+b5)*o*Math.exp(-t*t))}),T2={kernelName:ri,backendName:"cpu",kernelFunc:C5};function Lp(r){let{inputs:e,backend:t,attrs:o}=r,{input:n}=e,{dim:s}=o,a=n.shape.length,i=n.shape.slice(),l=s;return s<0&&(x.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+s+1),i.splice(l,0,1),Qe({inputs:{x:n},backend:t,attrs:{shape:i}})}var A2={kernelName:us,backendName:"cpu",kernelFunc:Lp};var I5=Ke((r,e)=>r/e),Ud=et(rn,I5),jd={kernelName:rn,backendName:"cpu",kernelFunc:Ud};function wx(r,e,t){let o=r.shape,n=o[0],s=o[1],a=t.data.get(r.dataId),i=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[n,s],c=x.sizeFromShape(u),p=x.getTypedArrayFromDType("float32",c),m=x.getTypedArrayFromDType("float32",c);for(let g=0;g<n;g++){let y=ts({inputs:{x:i},backend:t,attrs:{begin:[g,0],size:[1,s]}}),b=ts({inputs:{x:l},backend:t,attrs:{begin:[g,0],size:[1,s]}}),w=pr({inputs:{real:y,imag:b},backend:t}),{real:_,imag:C}=N5(w,e,t),D=N.mergeRealAndImagArrays(_,C);for(let T=0;T<s;T++){let R=N.getComplexWithIndex(D,T);p[g*s+T]=R.real,m[g*s+T]=R.imag}t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(w)}let f=t.makeTensorInfo(u,"float32",p),d=t.makeTensorInfo(u,"float32",m),h=pr({inputs:{real:f,imag:d},backend:t});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),h}function N5(r,e,t){let o=x.sizeFromShape(r.shape),n=t.data.get(r.dataId),s=t.data.get(n.complexTensorInfos.real.dataId).values,a=t.data.get(n.complexTensorInfos.imag.dataId).values;if(S5(o)){let i=Yk(s,a,o,e,t),l=[r.shape[0],r.shape[1]];if(e){let u=t.makeTensorInfo(l,"float32",i.real),c=t.makeTensorInfo(l,"float32",i.imag),p=t.makeTensorInfo([],"float32",x.createScalarValue(o,"float32")),m=Ar({inputs:{x:p},backend:t}),f=jd.kernelFunc({inputs:{a:u,b:p},backend:t}),d=jd.kernelFunc({inputs:{a:c,b:m},backend:t}),h=t.data.get(f.dataId).values,g=t.data.get(d.dataId).values;return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),{real:h,imag:g}}return i}else{let i=N.mergeRealAndImagArrays(s,a),l=T5(i,o,e);return N.splitRealAndImagArrays(l)}}function S5(r){return(r&r-1)==0}function Yk(r,e,t,o,n){if(t===1)return{real:r,imag:e};let s=N.mergeRealAndImagArrays(r,e),a=t/2,i=N.complexWithEvenIndex(s),l=i.real,u=i.imag,c=[l.length],p=n.makeTensorInfo(c,"float32",l),m=n.makeTensorInfo(c,"float32",u),f=pr({inputs:{real:p,imag:m},backend:n}),d=N.complexWithOddIndex(s),h=d.real,g=d.imag,y=[h.length],b=n.makeTensorInfo(y,"float32",h),w=n.makeTensorInfo(y,"float32",g),_=pr({inputs:{real:b,imag:w},backend:n}),C=Yk(l,u,a,o,n),D=C.real,T=C.imag,R=[D.length],P=n.makeTensorInfo(R,"float32",D),B=n.makeTensorInfo(R,"float32",T),G=pr({inputs:{real:P,imag:B},backend:n}),U=Yk(h,g,a,o,n),j=U.real,H=U.imag,K=[j.length],X=n.makeTensorInfo(K,"float32",j),oe=n.makeTensorInfo(K,"float32",H),Y=pr({inputs:{real:X,imag:oe},backend:n}),re=N.exponents(t,o),te=[re.real.length],ie=n.makeTensorInfo(te,"float32",re.real),le=n.makeTensorInfo(te,"float32",re.imag),ae=pr({inputs:{real:ie,imag:le},backend:n}),fe=zd({inputs:{a:ae,b:Y},backend:n}),de=za({inputs:{a:G,b:fe},backend:n}),xe=Wd({inputs:{a:G,b:fe},backend:n}),we=Zn({inputs:{input:de},backend:n}),De=Zn({inputs:{input:xe},backend:n}),Ie=ji({inputs:{input:de},backend:n}),ze=ji({inputs:{input:xe},backend:n}),qe=kl({inputs:[we,De],backend:n,attrs:{axis:0}}),it=kl({inputs:[Ie,ze],backend:n,attrs:{axis:0}}),Tt=n.data.get(qe.dataId).values,At=n.data.get(it.dataId).values;return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(_),n.disposeIntermediateTensorInfo(P),n.disposeIntermediateTensorInfo(B),n.disposeIntermediateTensorInfo(G),n.disposeIntermediateTensorInfo(X),n.disposeIntermediateTensorInfo(oe),n.disposeIntermediateTensorInfo(Y),n.disposeIntermediateTensorInfo(ie),n.disposeIntermediateTensorInfo(le),n.disposeIntermediateTensorInfo(ae),n.disposeIntermediateTensorInfo(fe),n.disposeIntermediateTensorInfo(de),n.disposeIntermediateTensorInfo(xe),n.disposeIntermediateTensorInfo(we),n.disposeIntermediateTensorInfo(Ie),n.disposeIntermediateTensorInfo(De),n.disposeIntermediateTensorInfo(ze),n.disposeIntermediateTensorInfo(qe),n.disposeIntermediateTensorInfo(it),{real:Tt,imag:At}}function T5(r,e,t){let o=new Float32Array(e*2);for(let n=0;n<e;n++){let s=0,a=0;for(let i=0;i<e;i++){let l=N.exponent(n*i,e,t),u=N.getComplexWithIndex(r,i);s+=u.real*l.real-u.imag*l.imag,a+=u.real*l.imag+u.imag*l.real}t&&(s/=e,a/=e),N.assignToTypedArray(o,s,a,n)}return o}function A5(r){let{inputs:e,backend:t}=r,{input:o}=e,n=x.sizeFromShape(o.shape),s=o.shape[o.shape.length-1],a=n/s,i=Qe({inputs:{x:o},backend:t,attrs:{shape:[a,s]}}),l=wx(i,!1,t),u=Qe({inputs:{x:l},backend:t,attrs:{shape:o.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),u}var E2={kernelName:Zl,backendName:"cpu",kernelFunc:A5};function Hd(r){let{backend:e,attrs:t}=r,{shape:o,value:n,dtype:s}=t,a=s||x.inferDtype(n),i=x.getArrayFromDType(a,x.sizeFromShape(o));return E5(i,n,a),e.makeTensorInfo(o,a,i)}var D2={kernelName:ia,backendName:"cpu",kernelFunc:Hd};function E5(r,e,t){r.fill(e)}var $2={kernelName:si,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:o}=r,n=t,s=x.getTypedArrayFromDType(o.dtype,x.sizeFromShape(o.shape)),[a,i,l,u]=o.shape,c=n.data.get(o.dataId).values;for(let m=0;m<a;m++){let f=m*l*i*u;for(let d=0;d<i;d++){let h=d*(l*u);for(let g=0;g<l;g++){let y=g*u;for(let b=0;b<u;b++){let _=[a,d,g,b][2],C=Math.round(l-_),D=f+h+y+b,T=c[D];if(C>=0&&C<l){let R=C*u,P=f+h+R+b;T=c[P]}s[D]=T}}}}return{dataId:n.write(s,o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var D5=Ke((r,e)=>Math.floor(r/e)),$5=et(sn,D5,null,"int32"),R2={kernelName:sn,backendName:"cpu",kernelFunc:$5};function R5(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=o,h=qk({inputs:{x:n,filter:s},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m}});if(a){let g=h;h=za({inputs:{a:h,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(f){let g=h;h=Pp(t,h,f,i,d),t.disposeIntermediateTensorInfo(g)}return h}var F2={kernelName:_s,backendName:"cpu",kernelFunc:R5};function F5(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=o,h=Kk({inputs:{x:n,filter:s},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m}});if(a){let g=h;h=za({inputs:{a:h,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(f){let g=h;h=Pp(t,h,f,i,d),t.disposeIntermediateTensorInfo(g)}return h}var O2={kernelName:ks,backendName:"cpu",kernelFunc:F5};function O5(r){let{inputs:e,backend:t}=r,{params:o,indices:n}=e,s=x.sizeFromShape(o.shape),a=n.shape,i=a[a.length-1],[l,u,c,p]=N.prepareAndValidate(o,n);if(u===0)return t.makeTensorInfo(l,o.dtype,[]);let m=ve([u,c],o.dtype),f=t.data.get(n.dataId).values,d=t.data.get(o.dataId).values;for(let h=0;h<u;h++){let g=[],y=0;for(let b=0;b<i;b++){let w=f[h*i+b];y+=w*p[b],g.push(w)}if(y<0||y>=s/c)throw new Error(`Invalid indices: ${g} does not index into ${o.shape}`);for(let b=0;b<c;b++)m.values[h*c+b]=d[y*c+b]}return t.makeTensorInfo(l,m.dtype,m.values)}var P2={kernelName:ii,backendName:"cpu",kernelFunc:O5};function P5(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,indices:s}=e,{axis:a,batchDims:i}=o;ee([n,s],"gatherV2");let l=i;i==null&&(l=0);let u=x.sizeFromShape(s.shape),c=x.parseAxisParam(a,n.shape)[0],p=N.segment_util.collectGatherOpShapeInfo(n,s,c,l),m=Qe({inputs:{x:n},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),f=Qe({inputs:{x:s},backend:t,attrs:{shape:[p.batchSize,u/p.batchSize]}}),d=[p.batchSize,p.outerSize,u/p.batchSize,p.sliceSize],h=t.bufferSync(f),g=t.bufferSync(m),y=Rk(g,h,d);return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.makeTensorInfo(p.outputShape,y.dtype,y.values)}var M2={kernelName:cs,backendName:"cpu",kernelFunc:P5};var M5=Ke((r,e)=>r>=e?1:0),L5=et(ln,M5,null,"bool"),L2={kernelName:ln,backendName:"cpu",kernelFunc:L5};function z5(r){let{inputs:e,backend:t}=r,{input:o}=e,n=x.sizeFromShape(o.shape),s=o.shape[o.shape.length-1],a=n/s,i=Qe({inputs:{x:o},backend:t,attrs:{shape:[a,s]}}),l=wx(i,!0,t),u=Qe({inputs:{x:l},backend:t,attrs:{shape:o.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),u}var z2={kernelName:Jl,backendName:"cpu",kernelFunc:z5};var B5=$e(li,r=>Number.isFinite(r)?1:0,"bool"),B2={kernelName:li,backendName:"cpu",kernelFunc:B5};var V5=$e(ui,r=>Math.abs(r)===Infinity?1:0,"bool"),V2={kernelName:ui,backendName:"cpu",kernelFunc:V5};var G5=$e(ci,r=>Number.isNaN(r)?1:0,"bool"),G2={kernelName:ci,backendName:"cpu",kernelFunc:G5};var W5=Ke((r,e)=>r<=e?1:0),U5=et(mi,W5,null,"bool"),W2={kernelName:mi,backendName:"cpu",kernelFunc:U5};function j5(r){let{backend:e,attrs:t}=r,{start:o,stop:n,num:s}=t,a=Fk(o,n,s);return e.makeTensorInfo([a.length],"float32",a)}var U2={kernelName:eu,backendName:"cpu",kernelFunc:j5};var H5=$e(fi,r=>Math.log1p(r)),j2={kernelName:fi,backendName:"cpu",kernelFunc:H5};var q5=Ke((r,e)=>r&&e),K5=et(di,q5,null,"bool"),H2={kernelName:di,backendName:"cpu",kernelFunc:K5};var X5=$e(Ya,r=>r?0:1,"bool"),q2={kernelName:Ya,backendName:"cpu",kernelFunc:X5};var Y5=Ke((r,e)=>r||e),Z5=et(Za,Y5,null,"bool"),K2={kernelName:Za,backendName:"cpu",kernelFunc:Z5};function J5(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{depthRadius:s,bias:a,alpha:i,beta:l}=o;ee(n,"LRN");let u=n.shape[3],c=u-1,p=t.data.get(n.dataId).values,m=x.sizeFromShape(n.shape),f=new Float32Array(m);function d(h){let g=h%u,y=h-g+Math.max(0,g-s),b=h-g+Math.min(g+s,c),w=0;for(;y<=b;y++){let _=p[y];w+=_*_}return w}for(let h=0;h<m;h++){let g=d(h),y=p[h]*Math.pow(a+i*g,-l);f[h]=y}return t.makeTensorInfo(n.shape,n.dtype,f)}var X2={kernelName:aa,backendName:"cpu",kernelFunc:J5};function Q5(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,y:s,dy:a}=e,{depthRadius:i,bias:l,alpha:u,beta:c}=o;ee(a,"LRNGrad");let p=x.sizeFromShape(a.shape),m=a.shape[3],f=t.data.get(a.dataId).values,d=t.data.get(n.dataId).values,h=t.data.get(s.dataId).values,g=new Float32Array(p),y=p;for(let b=0;b<y;b++){let w=b%m,_=b-w+Math.max(0,w-i),C=b-w+Math.min(m,w+i+1),D=0;for(let T=_;T<C;T++)D+=Math.pow(d[T],2);D=u*D+l;for(let T=_;T<C;T++){let R=-2*u*c*d[T]*h[b]/D;b===T&&(R+=Math.pow(D,-c)),R*=f[b],g[T]+=R}}return t.makeTensorInfo(a.shape,n.dtype,g)}var Y2={kernelName:tu,backendName:"cpu",kernelFunc:Q5};function Zk(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{reductionIndices:s,keepDims:a}=o,i=t,l=n.shape,u=l.length,c=x.parseAxisParam(s,l),p=c,m=N.getAxesPermutation(p,u),f=i.data.get(n.dataId).values;if(m!=null){let _=new Array(u);for(let C=0;C<_.length;C++)_[C]=l[m[C]];f=Bd(f,l,n.dtype,m,_),p=N.getInnerMostAxes(p.length,u),l=_}ee(n,"max"),N.assertAxesAreInnerMostDims("max",p,u);let[d,h]=N.computeOutAndReduceShapes(l,p),g=x.sizeFromShape(h),y=Ok(f,g,d,n.dtype),b=i.write(y,d,n.dtype),w=d;return a&&(w=N.expandShapeToKeepDim(d,c)),{dataId:b,shape:w,dtype:n.dtype}}var Z2={kernelName:pn,backendName:"cpu",kernelFunc:Zk};function eX(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e;ee(n,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:l}=o,u=1;x.assert(N.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let c=N.computePool2DInfo(n.shape,s,a,u,i,l),p;if(c.filterWidth===1&&c.filterHeight===1&&x.arraysEqual(c.inShape,c.outShape))p=Ar({inputs:{x:n},backend:t});else{let m=t.data.get(n.dataId).values,f=x.computeStrides(n.shape),d=Mp(m,n.shape,n.dtype,f,c,"max");p=t.makeTensorInfo(c.outShape,n.dtype,d.values)}return p}var J2={kernelName:fn,backendName:"cpu",kernelFunc:eX};function tX(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:l,dataFormat:u}=o;ee(n,"maxPool3d");let c=N.computePool3DInfo(n.shape,s,a,1,i,l,u),p=t.data.get(n.dataId).values,m=bx(p,n.shape,n.dtype,x.computeStrides(n.shape),c,"max");return t.makeTensorInfo(m.shape,"float32",m.values)}var Q2={kernelName:la,backendName:"cpu",kernelFunc:tX};function rX(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,input:s}=e,{filterSize:a,strides:i,pad:l,dimRoundingMode:u}=o;ee([n,s],"maxPool3DGrad");let c=N.computePool3DInfo(s.shape,a,i,1,l,u),p=t.bufferSync(s),m=XE(p,c),f=c.strideDepth,d=c.strideHeight,h=c.strideWidth,g=c.dilationDepth,y=c.dilationHeight,b=c.dilationWidth,w=c.effectiveFilterDepth,_=c.effectiveFilterHeight,C=c.effectiveFilterWidth,D=w-1-c.padInfo.front,T=C-1-c.padInfo.left,R=_-1-c.padInfo.top,P=ve(s.shape,"float32"),B=t.bufferSync(n);for(let G=0;G<c.batchSize;++G)for(let U=0;U<c.inChannels;++U)for(let j=0;j<c.inDepth;++j)for(let H=0;H<c.inHeight;++H)for(let K=0;K<c.inWidth;++K){let X=j-D,oe=H-R,Y=K-T,re=0;for(let te=0;te<w;te+=g){let ie=(X+te)/f;if(!(ie<0||ie>=c.outDepth||Math.floor(ie)!==ie))for(let le=0;le<_;le+=y){let ae=(oe+le)/d;if(!(ae<0||ae>=c.outHeight||Math.floor(ae)!==ae))for(let fe=0;fe<C;fe+=b){let de=(Y+fe)/h;if(de<0||de>=c.outWidth||Math.floor(de)!==de)continue;let xe=w*_*C-1-m.get(G,ie,ae,de,U),we=te*_*C+le*C+fe,De=xe===we?1:0;if(De===0)continue;re+=B.get(G,ie,ae,de,U)*De}}}P.set(re,G,j,H,K,U)}return t.makeTensorInfo(P.shape,P.dtype,P.values)}var eD={kernelName:ou,backendName:"cpu",kernelFunc:rX};function oX(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,input:s,output:a}=e,i=s;ee([s,a],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=o,m=N.computePool2DInfo(i.shape,l,u,1,c,p),f=t.data.get(i.dataId).values,d=ve(m.outShape,i.dtype,yx(f,i.shape,i.dtype,m).values),h=m.strideHeight,g=m.strideWidth,y=m.dilationHeight,b=m.dilationWidth,w=m.effectiveFilterHeight,_=m.effectiveFilterWidth,C=_-1-m.padInfo.left,D=w-1-m.padInfo.top,T=ve(i.shape,"float32"),R=t.data.get(n.dataId).values,P=ve(n.shape,"float32",R);for(let B=0;B<m.batchSize;++B)for(let G=0;G<m.inChannels;++G)for(let U=0;U<m.inHeight;++U)for(let j=0;j<m.inWidth;++j){let H=U-D,K=j-C,X=0;for(let oe=0;oe<w;oe+=y){let Y=(H+oe)/h;if(!(Y<0||Y>=m.outHeight||Math.floor(Y)!==Y))for(let re=0;re<_;re+=b){let te=(K+re)/g;if(te<0||te>=m.outWidth||Math.floor(te)!==te)continue;let ie=w*_-1-d.get(B,Y,te,G),le=oe*_+re,ae=ie===le?1:0;if(ae===0)continue;X+=P.get(B,Y,te,G)*ae}}T.set(X,B,U,j,G)}return t.makeTensorInfo(T.shape,T.dtype,T.values)}var tD={kernelName:ru,backendName:"cpu",kernelFunc:oX};function rD(r,e,t,o,n){let s=x.computeStrides(e),a=Mp(r,e,t,s,n,"max"),i=yx(r,e,t,n,!0,o);return[a.values,i.values]}var oD={kernelName:nu,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:o}=r,{filterSize:n,strides:s,pad:a,includeBatchInIndex:i}=e,l=t;ee(o,"MaxPoolWithArgmax");let u=l.data.get(o.dataId).values,c=N.computePool2DInfo(o.shape,n,s,[1,1],a),[p,m]=rD(u,o.shape,o.dtype,i,c),f=l.write(p,c.outShape,o.dtype),d=l.write(m,c.outShape,o.dtype);return[{dataId:f,shape:c.outShape,dtype:o.dtype},{dataId:d,shape:c.outShape,dtype:"int32"}]}};function tc(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:a}=o;ee(n,"sum");let i;n.dtype==="bool"?i=Jn({inputs:{x:n},backend:t,attrs:{dtype:"int32"}}):i=Ar({inputs:{x:n},backend:t});let l=i.shape.length,u=x.parseAxisParam(s,i.shape),c=N.getAxesPermutation(u,l),p=u,m=i;c!=null&&(m=tr({inputs:{x:i},backend:t,attrs:{perm:c}}),p=N.getInnerMostAxes(p.length,l)),N.assertAxesAreInnerMostDims("sum",p,m.shape.length);let[f,d]=N.computeOutAndReduceShapes(m.shape,p),h=N.upcastType(m.dtype,"int32"),g=Fp(t,f,h),y=x.sizeFromShape(d),b=t.data.get(g.dataId).values,w=t.data.get(m.dataId).values;for(let _=0;_<b.length;++_){let C=_*y,D=0;for(let T=0;T<y;++T)D+=w[C+T];b[_]=D}if(a){let _=N.expandShapeToKeepDim(g.shape,u),C=g;g=Qe({inputs:{x:g},backend:t,attrs:{shape:_}}),t.disposeIntermediateTensorInfo(C)}return t.disposeIntermediateTensorInfo(i),c!=null&&t.disposeIntermediateTensorInfo(m),g}var nD={kernelName:Dn,backendName:"cpu",kernelFunc:tc};function nX(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:a}=o,i=x.parseAxisParam(s,n.shape),u=N.computeOutAndReduceShapes(n.shape,i)[1],c=x.sizeFromShape(u),p=[],m=t.makeTensorInfo([],"float32",new Float32Array([c]));p.push(m);let f=Jn({inputs:{x:n},backend:t,attrs:{dtype:"float32"}});p.push(f);let d=Ud({inputs:{a:f,b:m},backend:t});p.push(d);let h=tc({inputs:{x:d},backend:t,attrs:{axis:s,keepDims:a}});return p.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}var sD={kernelName:dn,backendName:"cpu",kernelFunc:nX};function sX(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:a}=o;ee(n,"min");let i=x.parseAxisParam(s,n.shape),l=i,u=N.getAxesPermutation(l,n.shape.length),c=n;u!=null&&(c=tr({inputs:{x:n},backend:t,attrs:{perm:u}}),l=N.getInnerMostAxes(l.length,n.shape.length)),N.assertAxesAreInnerMostDims("min",l,c.shape.length);let[p,m]=N.computeOutAndReduceShapes(c.shape,l),f=x.sizeFromShape(m),d=x.makeZerosTypedArray(x.sizeFromShape(p),c.dtype),h=t.data.get(c.dataId).values;for(let y=0;y<d.length;++y){let b=y*f,w=h[b];for(let _=0;_<f;++_){let C=h[b+_];C<w&&(w=C)}d[y]=w}u!=null&&t.disposeIntermediateTensorInfo(c);let g=t.makeTensorInfo(p,c.dtype,d);if(a){let y=N.expandShapeToKeepDim(p,i),b=Qe({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),b}return g}var iD={kernelName:hn,backendName:"cpu",kernelFunc:sX};function iX(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{paddings:s,mode:a}=o;ee(n,"mirrorPad");let i=s.map((w,_)=>w[0]+n.shape[_]+w[1]),l=s.map(w=>w[0]),u=s.map((w,_)=>w[0]+n.shape[_]),c=a==="reflect"?0:1,p=t.data.get(n.dataId).values,m=n.shape.length,f=x.computeStrides(n.shape),d=x.sizeFromShape(i),h=i.length,g=x.computeStrides(i),y=x.getTypedArrayFromDType(n.dtype,d);for(let w=0;w<d;w++){let _=x.indexToLoc(w,h,g);for(let D=0;D<h;D++)_[D]<l[D]?_[D]=l[D]*2-_[D]-c:_[D]>=u[D]&&(_[D]=(u[D]-1)*2-_[D]+c);_=_.map((D,T)=>D-l[T]);let C=x.locToIndex(_,m,f);y[w]=p[C]}return{dataId:t.write(y,i,n.dtype),shape:i,dtype:n.dtype}}var aD={kernelName:ua,backendName:"cpu",kernelFunc:iX};var aX=Ke((r,e)=>{let t=r%e;return r<0&&e<0||r>=0&&e>=0?t:(t+e)%e}),lX=et(hi,aX),lD={kernelName:hi,backendName:"cpu",kernelFunc:lX};var cD=Ic(zm());function Jk(r){let{inputs:e,backend:t,attrs:o}=r,{logits:n}=e,{dim:s}=o,a=n.shape.length,i=s;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);let l=x.parseAxisParam([i],n.shape),u=Zk({inputs:{x:n},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),c=N.expandShapeToKeepDim(u.shape,l),p=Qe({inputs:{x:u},backend:t,attrs:{shape:c}}),m=Wd({inputs:{a:n,b:p},backend:t}),f=$k({inputs:{x:m},backend:t}),d=tc({inputs:{x:f},backend:t,attrs:{axis:l,keepDims:!1}}),h=Qe({inputs:{x:d},backend:t,attrs:{shape:c}}),g=Ud({inputs:{a:f,b:h},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var uD={kernelName:$n,backendName:"cpu",kernelFunc:Jk};function uX(r){let{inputs:e,backend:t,attrs:o}=r,{logits:n}=e,{numSamples:s,seed:a,normalized:i}=o;ee(n,"multinomial");let l=i?n:Jk({inputs:{logits:n},backend:t,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],p=t.data.get(l.dataId).values,m=[u,s],f=x.makeZerosTypedArray(x.sizeFromShape(m),"int32");for(let d=0;d<u;++d){let h=d*c,g=new Float32Array(c-1);g[0]=p[h];for(let w=1;w<g.length;++w)g[w]=g[w-1]+p[h+w];let y=cD.alea(a.toString()),b=d*s;for(let w=0;w<s;++w){let _=y();f[b+w]=g.length;for(let C=0;C<g.length;C++)if(_<g[C]){f[b+w]=C;break}}}return i||t.disposeIntermediateTensorInfo(l),t.makeTensorInfo(m,"int32",f)}var pD={kernelName:su,backendName:"cpu",kernelFunc:uX};var cX=Tr.nonMaxSuppressionV3Impl;function pX(r){let{inputs:e,backend:t,attrs:o}=r,{boxes:n,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=o;ee(n,"NonMaxSuppression");let u=t.data.get(n.dataId).values,c=t.data.get(s.dataId).values,{selectedIndices:p}=cX(u,c,a,i,l);return t.makeTensorInfo([p.length],"int32",new Int32Array(p))}var mD={kernelName:xi,backendName:"cpu",kernelFunc:pX};var mX=Tr.nonMaxSuppressionV4Impl;function fX(r){let{inputs:e,backend:t,attrs:o}=r,{boxes:n,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=o;ee(n,"NonMaxSuppressionPadded");let c=t.data.get(n.dataId).values,p=t.data.get(s.dataId).values,{selectedIndices:m,validOutputs:f}=mX(c,p,a,i,l,u);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}var fD={kernelName:yi,backendName:"cpu",kernelFunc:fX};var dX=Tr.nonMaxSuppressionV5Impl;function hX(r){let{inputs:e,backend:t,attrs:o}=r,{boxes:n,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=o;ee(n,"NonMaxSuppressionWithScore");let c=t.data.get(n.dataId).values,p=t.data.get(s.dataId).values,m=a,f=i,d=l,h=u,{selectedIndices:g,selectedScores:y}=dX(c,p,m,f,d,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var dD={kernelName:bi,backendName:"cpu",kernelFunc:hX};function gX(r){let{inputs:e,backend:t,attrs:o}=r,{indices:n}=e,{depth:s,onValue:a,offValue:i}=o;ee(n,"oneHot");let l=x.sizeFromShape(n.shape),u=new Float32Array(l*s);u.fill(i);let c=t.data.get(n.dataId).values;for(let p=0;p<l;++p)c[p]>=0&&c[p]<s&&(u[p*s+c[p]]=a);return t.makeTensorInfo([...n.shape,s],"int32",u)}var hD={kernelName:yn,backendName:"cpu",kernelFunc:gX};function qd(r){let{inputs:e,backend:t}=r,{x:o}=e;if(o.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(o.dtype==="complex64"){let n=Zn({inputs:{input:o},backend:t}),s=qd({inputs:{x:n},backend:t}),a=ji({inputs:{input:o},backend:t}),i=qd({inputs:{x:a},backend:t}),l=pr({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(n),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}else return Hd({backend:t,attrs:{shape:o.shape,value:0,dtype:o.dtype}})}var gD={kernelName:bs,backendName:"cpu",kernelFunc:qd};function xD(r){let{inputs:e,backend:t}=r,{x:o}=e;if(o.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(o.dtype==="complex64"){let n=Zn({inputs:{input:o},backend:t}),s=xD({inputs:{x:n},backend:t}),a=ji({inputs:{input:o},backend:t}),i=qd({inputs:{x:a},backend:t}),l=pr({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(n),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}else return Hd({backend:t,attrs:{shape:o.shape,value:1,dtype:o.dtype}})}var yD={kernelName:ms,backendName:"cpu",kernelFunc:xD};function Qk(r){let{inputs:e,backend:t,attrs:o}=r,{axis:n}=o;if(e.length===1)return Lp({inputs:{input:e[0]},backend:t,attrs:{dim:n}});let s=e[0].shape,a=e[0].dtype;e.forEach(c=>{x.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),x.assert(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=e.map(c=>{let p=Lp({inputs:{input:c},backend:t,attrs:{dim:n}});return i.push(p),p}),u=kl({inputs:l,backend:t,attrs:{axis:n}});return i.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}var bD={kernelName:fs,backendName:"cpu",kernelFunc:Qk};function xX(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{paddings:s,constantValue:a}=o;ee(n,"pad");let i=s.map((b,w)=>b[0]+n.shape[w]+b[1]),l=s.map(b=>b[0]),u=t.data.get(n.dataId).values,c=x.sizeFromShape(n.shape),p=n.shape.length,m=x.computeStrides(n.shape),f=x.sizeFromShape(i),d=i.length,h=x.computeStrides(i),g=x.getTypedArrayFromDType(n.dtype,f);a!==0&&g.fill(a);for(let b=0;b<c;b++){let _=x.indexToLoc(b,p,m).map((D,T)=>D+l[T]),C=x.locToIndex(_,d,h);g[C]=u[b]}return{dataId:t.write(g,i,n.dtype),shape:i,dtype:n.dtype}}var _x={kernelName:bn,backendName:"cpu",kernelFunc:xX};var yX=Ke((r,e)=>Math.pow(r,e)),bX=et(wn,yX),wD={kernelName:wn,backendName:"cpu",kernelFunc:bX};function wX(r){let{backend:e,attrs:t}=r,{start:o,stop:n,dtype:s,step:a}=t,i=Vd(o,n,a,s);return e.makeTensorInfo([i.length],s,i)}var _D={kernelName:ca,backendName:"cpu",kernelFunc:wX};var _X=$e(_i,r=>1/r),kD={kernelName:_i,backendName:"cpu",kernelFunc:_X};function kX(r){let{inputs:e,backend:t,attrs:o}=r,{images:n}=e,{alignCorners:s,halfPixelCenters:a,size:i}=o;ee(n,"resizeBilinear");let l=x.computeStrides(n.shape),[u,c]=i,[p,m,f,d]=n.shape,h=t.data.get(n.dataId).values,g=new Float32Array(x.sizeFromShape([p,u,c,d])),y=[s&&u>1?m-1:m,s&&c>1?f-1:f],b=[s&&u>1?u-1:u,s&&c>1?c-1:c],w=0,_=y[0]/b[0],C=y[1]/b[1];for(let D=0;D<p;D++)for(let T=0;T<u;T++){let R;a?R=_*(T+.5)-.5:R=_*T;let P=Math.max(0,Math.floor(R)),B=R-P,G=Math.min(m-1,Math.ceil(R)),U=D*l[0]+P*l[1],j=D*l[0]+G*l[1];for(let H=0;H<c;H++){let K;a?K=C*(H+.5)-.5:K=C*H;let X=Math.max(0,Math.floor(K)),oe=K-X,Y=Math.min(f-1,Math.ceil(K)),re=U+X*l[2],te=j+X*l[2],ie=U+Y*l[2],le=j+Y*l[2];for(let ae=0;ae<d;ae++){let fe=h[re+ae],de=h[te+ae],xe=h[ie+ae],we=h[le+ae],De=fe+(xe-fe)*oe,Ie=de+(we-de)*oe,ze=De+(Ie-De)*B;g[w++]=ze}}}return t.makeTensorInfo([p,u,c,d],"float32",g)}var vD={kernelName:vn,backendName:"cpu",kernelFunc:kX};function vX(r){let{inputs:e,backend:t,attrs:o}=r,{images:n,dy:s}=e,{alignCorners:a}=o;ee([s,n],"resizeBilinearGrad");let i=x.computeStrides(n.shape),[l,u,c,p]=n.shape,[,m,f]=s.shape,d=new Float32Array(l*u*c*p),h=[a&&m>1?u-1:u,a&&f>1?c-1:c],g=[a&&m>1?m-1:m,a&&f>1?f-1:f],y=h[0]/g[0],b=h[1]/g[1],w=t.data.get(s.dataId).values,_=0;for(let C=0;C<l;C++){let D=C*i[0];for(let T=0;T<m;T++){let R=T*y,P=Math.floor(R),B=Math.min(Math.ceil(R),u-1),G=D+P*i[1],U=D+B*i[1],j=R-P,H=1-j;for(let K=0;K<f;K++){let X=K*b,oe=Math.floor(X),Y=Math.min(Math.ceil(X),c-1),re=X-oe,te=1-re,ie=G+oe*i[2],le=G+Y*i[2],ae=U+oe*i[2],fe=U+Y*i[2],de=H*te,xe=H*re,we=j*te,De=j*re;for(let Ie=0;Ie<p;Ie++){let ze=w[_++];d[ie+Ie]+=ze*de,d[le+Ie]+=ze*xe,d[ae+Ie]+=ze*we,d[fe+Ie]+=ze*De}}}}return t.makeTensorInfo([l,c,u,p],"float32",d)}var CD={kernelName:lu,backendName:"cpu",kernelFunc:vX};function CX(r){let{inputs:e,backend:t,attrs:o}=r,{images:n}=e,{alignCorners:s,halfPixelCenters:a,size:i}=o;ee(n,"resizeNearestNeighbor");let l=x.computeStrides(n.shape),[u,c]=i,[p,m,f,d]=n.shape,h=t.data.get(n.dataId).values,g=new Float32Array(p*u*c*d),y=[s&&u>1?m-1:m,s&&c>1?f-1:f],b=[s&&u>1?u-1:u,s&&c>1?c-1:c],w=y[0]/b[0],_=y[1]/b[1],C=0;for(let D=0;D<p;D++){let T=D*l[0];for(let R=0;R<u;R++){let P=a?w*(R+.5):w*R,B=Math.min(m-1,s?Math.round(P):Math.floor(P));a&&(B=Math.max(0,B));let G=T+B*l[1];for(let U=0;U<c;U++){let j=a?_*(U+.5):_*U,H=Math.min(f-1,s?Math.round(j):Math.floor(j));a&&(H=Math.max(0,H));let K=G+H*l[2];for(let X=0;X<d;X++){let oe=h[K+X];g[C++]=oe}}}}return t.makeTensorInfo([p,u,c,d],n.dtype,g)}var ID={kernelName:pa,backendName:"cpu",kernelFunc:CX};function IX(r){let{inputs:e,backend:t,attrs:o}=r,{images:n,dy:s}=e,{alignCorners:a}=o;ee([s,n],"resizeNearestNeighborGrad");let i=x.computeStrides(n.shape),l=x.computeStrides(s.shape),[u,c,p,m]=n.shape,[,f,d]=s.shape,h=new Float32Array(u*c*p*m),g=t.data.get(s.dataId).values,y=[a&&f>1?c-1:c,a&&d>1?p-1:p],b=[a&&f>1?f-1:f,a&&d>1?d-1:d],w=y[0]/b[0],_=y[1]/b[1],C=1/w,D=1/_,T=Math.ceil(C)*2+2,R=Math.ceil(D)*2+2;for(let P=0;P<u;P++){let B=P*i[0];for(let G=0;G<c;G++){let U=B+G*i[1],j=Math.floor(G*C),H=Math.floor(j-T/2);for(let K=0;K<p;K++){let X=U+K*i[2],oe=Math.floor(K*D),Y=Math.floor(oe-R/2);for(let re=0;re<m;re++){let te=0;for(let ie=0;ie<T;ie++){let le=ie+H;if(le<0||le>=f)continue;let ae=B+le*l[1],fe=le*w,de=Math.min(c-1,a?Math.round(fe):Math.floor(fe));if(G===de)for(let xe=0;xe<R;xe++){let we=xe+Y;if(we<0||we>=d)continue;let De=ae+we*l[2],Ie=we*_,ze=Math.min(p-1,a?Math.round(Ie):Math.floor(Ie));K===ze&&(te+=g[De+re])}}h[X+re]=te}}}}return t.makeTensorInfo(n.shape,n.dtype,h)}var ND={kernelName:au,backendName:"cpu",kernelFunc:IX};function NX(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{dims:s}=o;ee(n,"reverse");let a=n.shape.length,i=x.parseAxisParam(s,n.shape);if(a===0)return Ar({inputs:{x:n},backend:t});let l=new lt(n.shape,n.dtype),u=t.bufferSync(n);for(let c=0;c<l.size;c++){let p=l.indexToLoc(c),m=p.slice();i.forEach(f=>m[f]=n.shape[f]-1-m[f]),l.set(u.get(...m),...p)}return t.makeTensorInfo(l.shape,l.dtype,l.values)}var SD={kernelName:In,backendName:"cpu",kernelFunc:NX};var TD={kernelName:Ei,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:o}=r,{radians:n,fillValue:s,center:a}=e,i=t,l=x.getTypedArrayFromDType(o.dtype,x.sizeFromShape(o.shape)),[u,c,p,m]=o.shape,[f,d]=N.getImageCenter(a,c,p),h=255,g=Math.sin(n),y=Math.cos(n),b=i.data.get(o.dataId).values;for(let _=0;_<u;_++){let C=_*p*c*m;for(let D=0;D<c;D++){let T=D*(p*m);for(let R=0;R<p;R++){let P=R*m;for(let B=0;B<m;B++){let G=[u,D,R,B],U=G[2],j=G[1],H=(U-f)*y-(j-d)*g,K=(U-f)*g+(j-d)*y;H=Math.round(H+f),K=Math.round(K+d);let X=s;if(typeof s!="number"&&(B===3?X=h:X=s[B]),H>=0&&H<p&&K>=0&&K<c){let Y=K*(p*m),re=H*m,te=C+Y+re+B;X=b[te]}let oe=C+T+P+B;l[oe]=X}}}}return{dataId:i.write(l,o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var SX=$e(Nn,r=>{let e=Math.floor(r);return r-e<.5?Math.floor(r):r-e>.5?Math.ceil(r):e%2==0?e:e+1}),AD={kernelName:Nn,backendName:"cpu",kernelFunc:SX};function kx(r,e,t,o,n,s,a,i,l,u){let c=[o/n,n],p=r.values,m=e.values;if(o===0)return ve(t,e.dtype);let f=ve(c,e.dtype);f.values.fill(l);for(let d=0;d<s;d++){let h=[],g=0;for(let y=0;y<a;y++){let b=p[d*a+y];h.push(b),g+=b*i[y]}if(g<0||g>=o/n)throw new Error(`Invalid indices: ${h} does not index into ${t}`);for(let y=0;y<n;y++)u?f.values[g*n+y]+=m[d*n+y]:f.values[g*n+y]=e.rank===0?m[0]:m[d*n+y]}return f}function TX(r){let{inputs:e,backend:t,attrs:o}=r,{indices:n,updates:s}=e,{shape:a}=o,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=N.calculateShapes(s,n,a),m=!0,f=t.bufferSync(n),d=t.bufferSync(s),h=kx(f,d,a,p,u,l,i,c,0,m);return t.makeTensorInfo(a,h.dtype,h.values)}var ED={kernelName:ki,backendName:"cpu",kernelFunc:TX};function AX(r){let{inputs:e,backend:t}=r,{condition:o,t:n,e:s}=e;ee([o,n,s],"select");let a=o.shape.length,i=t.data.get(o.dataId).values,l=t.data.get(n.dataId).values,u=t.data.get(s.dataId).values,c=fr(n.dtype,s.dtype),p=x.makeZerosTypedArray(x.sizeFromShape(n.shape),c),m=0,f=a===0||a>1||n.shape.length===1?1:x.sizeFromShape(n.shape.slice(1));for(let d=0;d<i.length;d++)for(let h=0;h<f;h++)i[d]===1?p[m++]=l[d]:p[m++]=u[d];return t.makeTensorInfo(n.shape,c,p)}var DD={kernelName:hs,backendName:"cpu",kernelFunc:AX};var EX=N.SELU_SCALEALPHA,DX=N.SELU_SCALE,$X=$e(vi,r=>r>=0?DX*r:EX*(Math.exp(r)-1)),$D={kernelName:vi,backendName:"cpu",kernelFunc:$X};var RX=$e(An,r=>1/(1+Math.exp(-r))),RD={kernelName:An,backendName:"cpu",kernelFunc:RX};var FX=$e(Ii,r=>r<0?-1:r>0?1:0),FD={kernelName:Ii,backendName:"cpu",kernelFunc:FX};var OX=$e(Tn,r=>Math.sin(r)),OD={kernelName:Tn,backendName:"cpu",kernelFunc:OX};var PX=$e(Ci,r=>Math.sinh(r)),PD={kernelName:Ci,backendName:"cpu",kernelFunc:PX};var MX=11920928955078125e-23,MD=Math.log(MX)+2,LX=$e(Ni,r=>{let e=r>-MD,t=r<MD,o=Math.exp(r),n;return t?n=o:e?n=r:n=Math.log(1+o),n}),LD={kernelName:Ni,backendName:"cpu",kernelFunc:LX};function zX(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{blockShape:s,paddings:a}=o;ee([n],"spaceToBatchND");let i=x.sizeFromShape(s),l=[[0,0]];l.push(...a);for(let D=1+s.length;D<n.shape.length;++D)l.push([0,0]);let u=_x.kernelFunc({inputs:{x:n},backend:t,attrs:{paddings:l,constantValue:0}}),c=N.getReshaped(u.shape,s,i,!1),p=N.getPermuted(c.length,s.length,!1),m=N.getReshapedPermuted(u.shape,s,i,!1),h=Qe({inputs:{x:u},backend:t,attrs:{shape:c}}),b=tr({inputs:{x:h},backend:t,attrs:{perm:p}}),C=Qe({inputs:{x:b},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(b),C}var zD={kernelName:ma,backendName:"cpu",kernelFunc:zX};function BX(r){let{inputs:e,backend:t,attrs:o}=r,{sparseIndices:n,sparseValues:s,defaultValue:a}=e,{outputShape:i}=o,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:m}=N.calculateShapes(s,n,i),f=!1,d=t.bufferSync(n),h=t.bufferSync(s),g=t.data.get(a.dataId).values[0],y=kx(d,h,i,m,c,u,l,p,g,f);return t.makeTensorInfo(i,y.dtype,y.values)}var BD={kernelName:uu,backendName:"cpu",kernelFunc:BX};function VX(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{numOrSizeSplits:s,axis:a}=o,i=x.parseAxisParam(a,n.shape)[0],l=N.prepareSplitSize(n,s,i),u=new Array(n.shape.length).fill(0),c=n.shape.slice();return l.map(p=>{let m=[...c];m[i]=p;let f=ts({inputs:{x:n},backend:t,attrs:{begin:u,size:m}});return u[i]+=p,f})}var VD={kernelName:xs,backendName:"cpu",kernelFunc:VX};var GX=$e(En,r=>Math.sqrt(r)),GD={kernelName:En,backendName:"cpu",kernelFunc:GX};var WD={kernelName:fa,backendName:"cpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,o=e;ee(t,"square");let n=o.data.get(t.dataId).values,s=new Float32Array(n.length);for(let i=0;i<n.length;++i){let l=n[i];s[i]=l*l}return{dataId:o.write(s,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};var WX=$e(Fo,(r,e)=>{let t=e;return isNaN(r)?NaN:r>0?1:t.alpha}),UD={kernelName:Fo,backendName:"cpu",kernelFunc:WX};function UX(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{begin:s,end:a,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=o;ee(n,"stridedSlice");let{nonStrided:f,$begin:d,$strides:h,size:g,newShape:y,outShape:b}=nr.sliceInfo(n.shape,s,a,i,l,u,c,p,m),w=Qe({inputs:{x:n},backend:t,attrs:{shape:y}}),_;if(f){let D=ts({inputs:{x:w},backend:t,attrs:{begin:d,size:g}});_=Qe({inputs:{x:D},backend:t,attrs:{shape:b}}),t.disposeIntermediateTensorInfo(D)}else if(b.some(D=>D===0))_=t.makeTensorInfo(b,n.dtype,[]);else{let D=t.bufferSync(w),T=Pk(b,D,h,d);_=t.makeTensorInfo(T.shape,T.dtype,T.values)}let C=Qe({inputs:{x:_},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(_),C}var jD={kernelName:Si,backendName:"cpu",kernelFunc:UX};var jX=$e(Ti,r=>Math.tan(r)),HD={kernelName:Ti,backendName:"cpu",kernelFunc:jX};var HX=$e(On,r=>Math.tanh(r)),qD={kernelName:On,backendName:"cpu",kernelFunc:HX};function qX(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{reps:s}=o;ee(n,"tile");let a=Mk(t.bufferSync(n),s);return t.makeTensorInfo(a.shape,a.dtype,a.values)}var KD={kernelName:_o,backendName:"cpu",kernelFunc:qX};function KX(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{k:s,sorted:a}=o;ee(n,"topk");let i=t.data.get(n.dataId).values,[l,u]=Lk(i,n.shape,n.dtype,s,a);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}var XD={kernelName:Ai,backendName:"cpu",kernelFunc:KX};function XX(r){let{inputs:e,attrs:t,backend:o}=r,{axis:n}=t,{x:s}=e;ee(s,"unique");let a=o.data.get(s.dataId).values,{outputValues:i,outputShape:l,indices:u}=zk(a,n,s.shape,s.dtype);return[o.makeTensorInfo(l,s.dtype,i),o.makeTensorInfo([u.length],"int32",u)]}var YD={kernelName:cu,backendName:"cpu",kernelFunc:XX};function YX(r){let{inputs:e,backend:t,attrs:o}=r,{value:n}=e,{axis:s}=o;s<0&&(s+=n.shape.length);let a=n.shape.length,i=n.shape[s],l=new Array(a-1),u=0;for(let f=0;f<a;f++)f!==s&&(l[u++]=n.shape[f]);let c=new Array(a).fill(0),p=n.shape.slice();p[s]=1;let m=new Array(i);for(let f=0;f<m.length;f++){c[s]=f;let d=ts({inputs:{x:n},backend:t,attrs:{begin:c,size:p}});m[f]=Qe({inputs:{x:d},backend:t,attrs:{shape:l}}),t.disposeIntermediateTensorInfo(d)}return m}var ZD={kernelName:ys,backendName:"cpu",kernelFunc:YX};function ZX(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,segmentIds:s}=e,{numSegments:a}=o;ee(n,"unsortedSegmentSum");let i=n.shape.length,l=s.shape.length,u=[],c=[],p=i-l,m=s;for(let d=0;d<p;++d){let h=Lp({inputs:{input:m},backend:t,attrs:{dim:d+1}});m=h,c.push(h)}for(let d=0;d<a;++d){let h=x.createScalarValue(d,"int32"),g=t.makeTensorInfo([],"int32",h),y=Xk({inputs:{a:g,b:m},backend:t}),b=Jn({inputs:{x:y},backend:t,attrs:{dtype:"float32"}}),w=zd({inputs:{a:b,b:n},backend:t}),_=tc({inputs:{x:w},backend:t,attrs:{axis:0,keepDims:!1}});u.push(_),c.push(g),c.push(y),c.push(b),c.push(w),c.push(_)}let f=Qk({inputs:u,backend:t,attrs:{axis:0}});return c.forEach(d=>t.disposeIntermediateTensorInfo(d)),f}var JD={kernelName:da,backendName:"cpu",kernelFunc:ZX};var JX=[PE,GA,ME,LE,KA,zE,BE,VE,GE,WE,UE,jE,HE,qE,KE,YE,ZE,JE,QE,OE,e2,t2,r2,HA,YA,o2,WA,n2,i2,l2,u2,a2,p2,m2,c2,f2,d2,h2,g2,x2,y2,b2,w2,_2,k2,v2,I2,C2,jd,AE,N2,S2,T2,JA,A2,eE,E2,D2,$2,rE,R2,F2,O2,P2,M2,nE,L2,UA,z2,s2,B2,V2,G2,EE,iE,W2,U2,lE,j2,H2,q2,K2,X2,Y2,cE,J2,Q2,eD,tD,oD,Z2,sD,iD,mE,aD,lD,pD,fE,hE,mD,fD,dD,xE,hD,yD,bD,_x,wD,DE,wE,_D,jA,kD,$E,RE,FE,vD,CD,ID,ND,SD,TD,AD,kE,ED,DD,$D,RD,FD,OD,PD,vE,uD,LD,zD,BD,VD,GD,WD,IE,UD,jD,SE,nD,HD,qD,KD,XD,yE,YD,ZD,JD,gD];for(let r of JX)Ja(r);var rc={},ev={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function QD(r,e){rc[r]=e}function Go(r){if(!(r in rc)){let t=QX(r);if(t!==null)rc[r]=t;else return console.log("Could not get context for WebGL version",r),null}let e=rc[r];return e.isContextLost()?(delete rc[r],Go(r)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),rc[r])}function e8(r){if(typeof OffscreenCanvas!="undefined"&&r===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function QX(r){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let e=e8(r);return e.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete rc[r]},!1),r===1?e.getContext("webgl",ev)||e.getContext("experimental-webgl",ev):e.getContext("webgl2",ev)}var vl;(function(r){r[r.DENSE=0]="DENSE",r[r.SHARED_BATCH=1]="SHARED_BATCH"})(vl||(vl={}));var Er;(function(r){r[r.RENDER=0]="RENDER",r[r.UPLOAD=1]="UPLOAD",r[r.PIXELS=2]="PIXELS",r[r.DOWNLOAD=3]="DOWNLOAD"})(Er||(Er={}));var _r;(function(r){r[r.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",r[r.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",r[r.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",r[r.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",r[r.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(_r||(_r={}));function oc(r,e){return[e,r]}function e$(r,e){return r*e}function Cl(r){let e=x.sizeFromShape(r),t=Math.ceil(e/4);return x.sizeToSquarishShape(t)}function Hi(r,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(r/2))]}function t$(r,e){let[t,o]=Hi(r,e);return t*o*4}function Kd(r,e){let t=r,o,n,s,a,i,l,u,c,p,m;return W().getNumber("WEBGL_VERSION")===2?(o=t.R32F,n=t.R16F,s=t.RGBA16F,a=t.RGBA32F,i=t.RED,u=4,c=1,p=t.HALF_FLOAT,m=t.FLOAT):(o=r.RGBA,n=r.RGBA,s=r.RGBA,a=t.RGBA,i=r.RGBA,u=4,c=4,p=e!=null?e.HALF_FLOAT_OES:null,m=r.FLOAT),l=r.RGBA,{internalFormatFloat:o,internalFormatHalfFloat:n,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:m}}function Ae(r,e){let t=e();return W().getBool("DEBUG")&&t8(r),t}function t8(r){let e=r.getError();if(e!==r.NO_ERROR)throw new Error("WebGL Error: "+r8(r,e))}var o8=596e-10,n8=65504;function r$(r){return!!(W().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||o8<Math.abs(r)&&Math.abs(r)<n8)}function r8(r,e){switch(e){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Xd(r,e){return Ba(r,()=>r.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function o$(r,e){let t=Ba(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ae(r,()=>r.shaderSource(t,e)),Ae(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function n$(r,e){let t=Ba(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ae(r,()=>r.shaderSource(t,e)),Ae(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw s8(e,r.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}var i8=/ERROR: [0-9]+:([0-9]+):/g;function s8(r,e){let t=i8.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(r);return}let o=+t[1],n=r.split(`
`),s=n.length.toString().length+2,a=n.map((p,m)=>x.rightPad((m+1).toString(),s)+p),i=0;for(let p=0;p<a.length;p++)i=Math.max(a[p].length,i);let l=a.slice(0,o-1),u=a.slice(o-1,o),c=a.slice(o);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${x.rightPad(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function s$(r){return Ba(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function i$(r,e){if(Ae(r,()=>r.linkProgram(e)),r.getProgramParameter(e,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function vx(r,e){if(Ae(r,()=>r.validateProgram(e)),r.getProgramParameter(e,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function a$(r,e){let t=Ba(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return Ae(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),Ae(r,()=>r.bufferData(r.ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function l$(r,e){let t=Ba(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return Ae(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t)),Ae(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function u$(r){return Ba(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function c$(r,e){let t=W().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||e<=0){let o=`[${r}x${e}]`;throw new Error("Requested texture size "+o+" is invalid.")}if(r>t||e>t){let o=`[${r}x${e}]`,n=`[${t}x${t}]`;throw new Error("Requested texture size "+o+" greater than WebGL maximum on this browser / GPU "+n+".")}}function p$(r){return Ba(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function tv(r,e,t,o,n,s,a){let i=r.getAttribLocation(e,t);return i===-1?!1:(Ae(r,()=>r.bindBuffer(r.ARRAY_BUFFER,o)),Ae(r,()=>r.vertexAttribPointer(i,n,r.FLOAT,!1,s,a)),Ae(r,()=>r.enableVertexAttribArray(i)),!0)}function l8(r,e,t){a8(r,t),Ae(r,()=>r.activeTexture(r.TEXTURE0+t)),Ae(r,()=>r.bindTexture(r.TEXTURE_2D,e))}function m$(r,e,t){return Ba(r,()=>r.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function f$(r,e,t){return r.getUniformLocation(e,t)}function d$(r,e,t,o){Ae(r,()=>l8(r,e,o)),Ae(r,()=>r.uniform1i(t,o))}function Cx(r,e,t){Ae(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),Ae(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0))}function rv(r,e){Ae(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),Ae(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function Yd(r){let e=r.checkFramebufferStatus(r.FRAMEBUFFER);if(e!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+u8(r,e))}function u8(r,e){switch(e){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Ba(r,e,t){let o=Ae(r,()=>e());if(o==null)throw new Error(t);return o}function a8(r,e){let t=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,o=e+r.TEXTURE0;if(o<r.TEXTURE0||o>t){let n=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${n}.`)}}function Il(r,e=2){return x.sizeFromShape(r.slice(0,r.length-e))}function Nl(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function Ix(r){let e=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(e=[Il(r),...Nl(r)]),e}function h$(r,e=!1){let t=W().getNumber("WEBGL_MAX_TEXTURE_SIZE");e&&(t=t*2,r=r.map((n,s)=>s>=r.length-2?x.nearestLargerEven(r[s]):r[s]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=x.squeezeShape(r).newShape);let o=x.sizeFromShape(r);if(r.length<=1&&o<=t)return[1,o];if(r.length===2&&r[0]<=t&&r[1]<=t)return r;if(r.length===3&&r[0]*r[1]<=t&&r[2]<=t)return[r[0]*r[1],r[2]];if(r.length===3&&r[0]<=t&&r[1]*r[2]<=t)return[r[0],r[1]*r[2]];if(r.length===4&&r[0]*r[1]*r[2]<=t&&r[3]<=t)return[r[0]*r[1]*r[2],r[3]];if(r.length===4&&r[0]<=t&&r[1]*r[2]*r[3]<=t)return[r[0],r[1]*r[2]*r[3]];if(e){let n=Il(r),s=2,a=2;return r.length&&([s,a]=Nl(r)),o=n*(s/2)*(a/2),x.sizeToSquarishShape(o).map(i=>i*2)}return x.sizeToSquarishShape(o)}function Nx(r){return r%2==0}function nc(r,e){if(r=r.slice(-2),e=e.slice(-2),x.arraysEqual(r,e)||!r.length||!e.length||r[0]===0||r[1]===0||e[0]===0||e[1]===0)return!0;if(r.length!==e.length){let t=r.slice(-1)[0],o=e.slice(-1)[0];if(t===o||Nx(t)&&Nx(o)&&(r[0]===1||e[0]===1))return!0}return r[1]===e[1]&&Nx(r[0])&&Nx(e[0])}var ov,nv;function g$(r){if(ov==null){let e=Go(r);ov=e.getParameter(e.MAX_TEXTURE_SIZE)}return ov}function x$(r){if(nv==null){let e=Go(r);nv=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,nv)}function y$(r){if(r===0)return 0;let e,t=Go(r);return Wo(t,"EXT_disjoint_timer_query_webgl2")&&r===2?e=2:Wo(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Wo(r,e){return r.getExtension(e)!=null}function sv(r){try{if(Go(r)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function b$(r){if(r===0)return!1;let e=Go(r);if(r===1){if(!Wo(e,"OES_texture_float"))return!1}else if(!Wo(e,"EXT_color_buffer_float"))return!1;return iv(e)}function w$(r){if(r===0)return!1;let e=Go(r);if(r===1){if(!Wo(e,"OES_texture_float")||!Wo(e,"WEBGL_color_buffer_float"))return!1}else{if(Wo(e,"EXT_color_buffer_float"))return iv(e);let o="EXT_color_buffer_half_float";if(Wo(e,o)){let n=e.getExtension(o);return c8(e,n)}return!1}return iv(e)}function iv(r){let e=Kd(r),t=r.createTexture();r.bindTexture(r.TEXTURE_2D,t);let o=1,n=1;r.texImage2D(r.TEXTURE_2D,0,e.internalFormatFloat,o,n,0,e.textureFormatFloat,e.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(t),r.deleteFramebuffer(s),a}function c8(r,e){let t=Kd(r,e),o=r.createTexture();r.bindTexture(r.TEXTURE_2D,o);let n=1,s=1;r.texImage2D(r.TEXTURE_2D,0,t.internalFormatHalfFloat,n,s,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);let a=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,a),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,o,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(o),r.deleteFramebuffer(a),i}function _$(r){return r!==2?!1:Go(r).fenceSync!=null}function qi(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&x.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}var Me=W();Me.registerFlag("HAS_WEBGL",()=>Me.getNumber("WEBGL_VERSION")>0);Me.registerFlag("WEBGL_VERSION",()=>sv(2)?2:sv(1)?1:0);Me.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Me.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Me.get("WEBGL_VERSION")===2);Me.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Me.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Me.registerFlag("WEBGL_PACK",()=>Me.getBool("HAS_WEBGL"));Me.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_CLIP",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1);Me.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_REDUCE",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_LAZILY_UNPACK",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_CONV_IM2COL",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>g$(Me.getNumber("WEBGL_VERSION")));Me.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>x$(Me.getNumber("WEBGL_VERSION")));Me.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=Me.getNumber("WEBGL_VERSION");return r===0?0:y$(r)});Me.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Me.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Lc.isMobile());Me.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>b$(Me.getNumber("WEBGL_VERSION")));Me.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Me.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Me.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Me.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>w$(Me.getNumber("WEBGL_VERSION")));Me.registerFlag("WEBGL_FENCE_API_ENABLED",()=>_$(Me.getNumber("WEBGL_VERSION")));Me.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Me.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Me.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});Me.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});function Ot(){let r,e,t,o,n,s,a,i,l,u;return W().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",e="in",t="out",o="in",n="texture",s="outputColor",a="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",e="attribute",t="varying",o="varying",n="texture2D",s="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:e,varyingVs:t,varyingFs:o,texture2D:n,output:s,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:l,defineRound:u}}function zs(r,e,t="index"){let o=x.computeStrides(e);return o.map((n,s)=>{let a=`int ${r[s]} = ${t} / ${n}`,i=s===o.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * ${n}`:`index -= ${r[s]} * ${n}`;return`${a}; ${i};`}).join("")}function zp(r){let e=x.computeStrides(r).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}var Sx=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var av=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=vl.DENSE;let t=Cl(e),o=Ot();this.outputShape=e,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${zs(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${t[0]}, ${t[1]}));
        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${o.output} = result;
      }
    `}};var lv=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=vl.DENSE;let t=Cl(e),o=Ot();this.outputShape=e,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${zs(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${t[0]}, ${t[1]}));
        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${o.output} = result;
      }
    `}};var uv=class{constructor(e){this.variableNames=["A"],this.outTexUsage=Er.DOWNLOAD;let t=Ot();this.outputShape=e,this.userCode=`
      ${Sx}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}};var cv=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Er.DOWNLOAD;let t=Ot();this.outputShape=e,this.userCode=`
      ${Sx}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}};var pv=class{constructor(e,t,o=!1){this.variableNames=["A"];let n=Ot(),[s,a]=t;this.outputShape=e;let i="result";o&&(i="floor(result * 255. + 0.5)"),this.userCode=`
      ${zp(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / ${a};
        int c = imod(flatIndex, ${a});
        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${i}, 0., 0., 0.);
      }
    `}};var mv=class{constructor(e,t,o=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let n=Ot(),[s,a]=t;this.outputShape=e;let i="",l="result";o&&(l="floor(result * 255. + 0.5)");for(let u=0;u<=1;u++)for(let c=0;c<=1;c++){let p=u*2+c;i+=`
          localCoords = coords;
          if(localCoords[2] + ${c} < ${e[2]}) {
            localCoords[2] += ${c};
            if(localCoords[1] + ${u} < ${e[1]}) {
              localCoords[1] += ${u};

              flatIndex = getFlatIndex(localCoords);
              offset = imod(flatIndex, 4);

              flatIndex = idiv(flatIndex, 4, 1.);

              r = flatIndex / ${a};
              c = imod(flatIndex, ${a});
              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);
              values = ${n.texture2D}(A, uv);

              if(offset == 0) {
                result[${p}] = values[0];
              } else if(offset == 1) {
                result[${p}] = values[1];
              } else if(offset == 2) {
                result[${p}] = values[2];
              } else {
                result[${p}] = values[3];
              }
            }
          }
        `}this.userCode=`
      ${zp(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        vec4 result = vec4(0.);
        int flatIndex, r, c, offset;
        ivec3 localCoords;
        vec2 uv;
        vec4 values;

        ${i}

        ${n.output} = ${l};
      }
    `}};function k$(r){let e=Ot(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return o$(r,t)}function v$(r){let e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return a$(r,e)}function C$(r){let e=new Uint16Array([0,1,2,2,1,3]);return l$(r,e)}function Zd(r,e,t,o,n,s){c$(e,t);let a=u$(r),i=r.TEXTURE_2D;return Ae(r,()=>r.bindTexture(i,a)),Ae(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),Ae(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),Ae(r,()=>r.texParameteri(i,r.TEXTURE_MIN_FILTER,r.NEAREST)),Ae(r,()=>r.texParameteri(i,r.TEXTURE_MAG_FILTER,r.NEAREST)),Ae(r,()=>r.texImage2D(i,0,o,e,t,0,n,s,null)),Ae(r,()=>r.bindTexture(r.TEXTURE_2D,null)),a}function fv(r){return r.internalFormatFloat}function I$(r,e,t,o){let[n,s]=oc(e,t);return Zd(r,n,s,fv(o),o.textureFormatFloat,r.FLOAT)}function dv(r){return r.internalFormatHalfFloat}function N$(r,e,t,o){let[n,s]=oc(e,t);return Zd(r,n,s,dv(o),o.textureFormatFloat,o.textureTypeHalfFloat)}function hv(r){return r.downloadTextureFormat}function S$(r,e,t,o){let[n,s]=oc(e,t);return Zd(r,n,s,hv(o),r.RGBA,r.UNSIGNED_BYTE)}function gv(r){return r.internalFormatPackedFloat}function T$(r,e,t,o){let[n,s]=Hi(e,t);return Zd(r,n,s,gv(o),r.RGBA,r.FLOAT)}function xv(r){return r.internalFormatPackedHalfFloat}function A$(r,e,t,o){let[n,s]=Hi(e,t);return Zd(r,n,s,xv(o),r.RGBA,o.textureTypeHalfFloat)}function E$(r,e,t){let o=0,n=3*4,s=3*4+2*4;return Ae(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),tv(r,e,"clipSpacePos",t,3,s,o)&&tv(r,e,"uv",t,2,s,n)}function D$(r,e,t,o,n,s){Ae(r,()=>r.bindTexture(r.TEXTURE_2D,e));let a,i,l;n instanceof Uint8Array?(a=new Uint8Array(t*o*4),i=r.UNSIGNED_BYTE,l=r.RGBA):(a=new Float32Array(t*o*4),i=r.FLOAT,l=s.internalFormatPackedFloat),a.set(n),Ae(r,()=>r.texImage2D(r.TEXTURE_2D,0,l,t,o,0,r.RGBA,i,a)),Ae(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function $$(r,e,t){Ae(r,()=>r.bindTexture(r.TEXTURE_2D,e)),t.data instanceof Uint8Array?Ae(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t.width,t.height,0,r.RGBA,r.UNSIGNED_BYTE,t.data)):Ae(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t)),Ae(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function R$(r,e,t,o){let n=r.createBuffer();Ae(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,n));let i=4*4*e*t;return Ae(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,i,r.STREAM_READ)),Ae(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,0)),Ae(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),n}function F$(r,e,t){let o=r,n=new Float32Array(t);return o.bindBuffer(o.PIXEL_PACK_BUFFER,e),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,n),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),n}function O$(r,e,t,o){let[n,s]=oc(e,t),a=4,i=new Uint8Array(e$(e*t,a));return Ae(r,()=>r.readPixels(0,0,n,s,o.downloadTextureFormat,r.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function P$(r,e,t,o,n,s,a,i){let l=r,u=new Float32Array(t$(s,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function M$(r,e,t){let o=new Float32Array(e*t*4);return Ae(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,o)),o}var yv=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=W().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,QD(t,e)):this.gl=Go(t);let o="WEBGL_color_buffer_float",n="EXT_color_buffer_half_float";if(W().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Xd(this.gl,s),Wo(this.gl,a))this.textureHalfFloatExtension=Xd(this.gl,a);else if(W().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(o),Wo(this.gl,n))this.colorBufferHalfFloatExtension=Xd(this.gl,n);else if(W().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(o="EXT_color_buffer_float",Wo(this.gl,o))this.colorBufferFloatExtension=this.gl.getExtension(o);else if(Wo(this.gl,n))this.colorBufferHalfFloatExtension=this.gl.getExtension(n);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=v$(this.gl),this.indexBuffer=C$(this.gl),this.framebuffer=p$(this.gl),this.textureConfig=Kd(this.gl,this.textureHalfFloatExtension)}get debug(){return W().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;Ae(e,()=>e.finish()),Ae(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Ae(e,()=>e.deleteFramebuffer(this.framebuffer)),Ae(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Ae(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Ae(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),I$(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),N$(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),S$(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),$$(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,o,n){this.throwIfDisposed(),D$(this.gl,e,t,o,n,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),A$(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),T$(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(rv(this.gl,this.framebuffer),this.outputTexture=null),Ae(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,o){return this.downloadMatrixDriver(e,()=>O$(this.gl,t,o,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,o,n,s,a){return P$(this.gl,e,t,o,n,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return F$(this.gl,e,t)}createBufferFromTexture(e,t,o){this.bindTextureToFrameBuffer(e);let n=R$(this.gl,t,o,this.textureConfig);return this.unbindTextureToFrameBuffer(),n}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,o;if(W().getBool("WEBGL_FENCE_API_ENABLED")){let n=e,s=n.fenceSync(n.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),o=()=>{let a=n.clientWaitSync(s,0,0);return a===n.ALREADY_SIGNALED||a===n.CONDITION_SATISFIED},t=s}else W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),o=()=>this.isQueryAvailable(t,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):o=()=>!0;return{query:t,isFencePassed:o}}downloadMatrixFromPackedTexture(e,t,o){return this.downloadMatrixDriver(e,()=>M$(this.gl,t,o))}createProgram(e){this.throwIfDisposed();let t=this.gl,o=n$(t,e),n=k$(t),s=s$(t);return Ae(t,()=>t.attachShader(s,n)),Ae(t,()=>t.attachShader(s,o)),i$(t,s),this.debug&&vx(t,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=E$(t,this.program,this.vertexBuffer)),s}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&Ae(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&vx(this.gl,this.program),Ae(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,o=!0){return this.throwIfDisposed(),o?m$(this.gl,e,t):f$(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Ae(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,o){this.throwIfDisposed(),this.throwIfNoProgram(),d$(this.gl,e,t,o)}setOutputMatrixTexture(e,t,o){this.setOutputMatrixTextureDriver(e,o,t)}setOutputPackedMatrixTexture(e,t,o){this.throwIfDisposed();let[n,s]=Hi(t,o);this.setOutputMatrixTextureDriver(e,n,s)}setOutputMatrixWriteRegion(e,t,o,n){this.setOutputMatrixWriteRegionDriver(o,e,n,t)}setOutputPackedMatrixWriteRegion(e,t,o,n){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&vx(this.gl,this.program),Yd(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),Ae(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ae(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Xd(this.gl,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let o=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=o.createQuery();return o.beginQuery(n.TIME_ELAPSED_EXT,s),s}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,o=this.getQueryTimerExtensionWebGL2();t.endQuery(o.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await x.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let o=this.gl;return o.getQueryParameter(e,o.QUERY_RESULT)/1e6}else{let o=this.getQueryTimerExtensionWebGL1();return o.getQueryObjectEXT(e,o.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let o=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=o.getQueryParameter(e,o.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let o=this.getQueryTimerExtensionWebGL1(),n=o.getQueryObjectEXT(e,o.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=p8(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:o}=this.itemsToPoll[t];o()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&x.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Cx(this.gl,e,this.framebuffer),this.debug&&Yd(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Cx(this.gl,this.outputTexture,this.framebuffer),this.debug&&Yd(this.gl)):rv(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let o=t();return this.unbindTextureToFrameBuffer(),o}setOutputMatrixTextureDriver(e,t,o){this.throwIfDisposed();let n=this.gl;Cx(n,e,this.framebuffer),this.debug&&Yd(n),this.outputTexture=e,Ae(n,()=>n.viewport(0,0,t,o)),Ae(n,()=>n.scissor(0,0,t,o))}setOutputMatrixWriteRegionDriver(e,t,o,n){this.throwIfDisposed(),Ae(this.gl,()=>this.gl.scissor(e,t,o,n))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function p8(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var{getBroadcastDims:L$}=N;function z$(r,e,t,o){let n=[];r.forEach(d=>{let h=x.sizeFromShape(d.shapeInfo.logicalShape);d.shapeInfo.isUniform?n.push(`uniform float ${d.name}${h>1?`[${h}]`:""};`):(n.push(`uniform sampler2D ${d.name};`),n.push(`uniform int offset${d.name};`))});let s=n.join(`
`),a=r.map(d=>m8(d,e,o)).join(`
`),i=e.texShape,l=Ot(),u=h8(l),c,p,m=y8(l);return e.isPacked?(c=f8(e.logicalShape,i),p=x8(l)):(c=d8(e.logicalShape,i),p=g8(l)),o&&(m+=b8),[m,u,p,s,c,a,t].join(`
`)}function Bp(r){let e=r.shapeInfo.logicalShape;switch(e.length){case 0:return w8(r);case 1:return _8(r);case 2:return k8(r);case 3:return v8(r);case 4:return C8(r);case 5:return I8(r);case 6:return N8(r);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function B$(r){switch(r.shapeInfo.logicalShape.length){case 0:return S8(r);case 1:return T8(r);case 2:return A8(r);case 3:return E8(r);default:return D8(r)}}function m8(r,e,t=!1){let o="";t?o+=B$(r):o+=Bp(r);let n=r.shapeInfo.logicalShape,s=e.logicalShape;return n.length<=s.length&&(t?o+=$8(r,e):o+=R8(r,e)),o}function f8(r,e){switch(r.length){case 0:return V$();case 1:return F8(r,e);case 2:return M8(r,e);case 3:return O8(r,e);default:return P8(r,e)}}function d8(r,e){switch(r.length){case 0:return V$();case 1:return L8(r,e);case 2:return W8(r,e);case 3:return z8(r,e);case 4:return B8(r,e);case 5:return V8(r,e);case 6:return G8(r,e);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function h8(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function g8(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function x8(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function y8(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${U8}
    ${j8}
    ${H8}
  `}var U8=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,j8=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,H8=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,b8=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function V$(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function F8(r,e){let t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return t[0]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${t[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return 2 * (resTexRC.x * ${t[1]} + resTexRC.y);
    }
  `}function L8(r,e){return e[0]===1?`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function O8(r,e){let t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[2]/2),n=o*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      int b = index / ${n};
      index -= b * ${n};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function z8(r,e){let t=zs(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${t}
      return ivec3(r, c, d);
    }
  `}function P8(r,e){let t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[r.length-1]/2),n=o*Math.ceil(r[r.length-2]/2),s=n,a="",i="b, r, c";for(let l=2;l<r.length-1;l++)s*=r[r.length-l-1],a=`
      int b${l} = index / ${s};
      index -= b${l} * ${s};
    `+a,i=`b${l}, `+i;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${a}

      int b = index / ${n};
      index -= b * ${n};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${r.length}(${i});
    }
  `}function B8(r,e){let t=zs(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${t}
      return ivec4(r, c, d, d2);
    }
  `}function V8(r,e){let t=zs(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function G8(r,e){let t=zs(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function M8(r,e){let t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(x.arraysEqual(r,e))return`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `;let o=Math.ceil(r[1]/2);return`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function W8(r,e){return x.arraysEqual(r,e)?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:r[1]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function sc(r){return`offset${r}`}function S8(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),o=Ot();return`
    vec4 ${t}() {
      return ${o.texture2D}(${e}, halfCR);
    }
  `}function w8(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`float ${t}() {return ${e};}`;let[o,n]=r.shapeInfo.texShape;if(o===1&&n===1)return`
      float ${t}() {
        return sampleTexture(${e}, halfCR);
      }
    `;let[s,a]=r.shapeInfo.texShape,i=sc(e);return`
    float ${t}() {
      vec2 uv = uvFromFlat(${s}, ${a}, ${i});
      return sampleTexture(${e}, uv);
    }
  `}function T8(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),o=r.shapeInfo.texShape,n=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],s=Ot();return`
    vec4 ${t}(int index) {
      vec2 uv = packedUVfrom1D(
        ${n[0]}, ${n[1]}, index);
      return ${s.texture2D}(${e}, uv);
    }
  `}function _8(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`
      float ${t}(int index) {
        ${Vp(r)}
      }
    `;let o=r.shapeInfo.texShape,n=o[0],s=o[1];if(s===1&&n===1)return`
      float ${t}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;let a=sc(e);return s===1?`
      float ${t}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${n}.0);
        return sampleTexture(${e}, uv);
      }
    `:n===1?`
      float ${t}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${s}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
    float ${t}(int index) {
      vec2 uv = uvFromFlat(${n}, ${s}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function A8(r){let e=r.shapeInfo.logicalShape,t=r.name,o="get"+t.charAt(0).toUpperCase()+t.slice(1),n=r.shapeInfo.texShape,s=n[0],a=n[1],i=Ot();if(n!=null&&x.arraysEqual(e,n))return`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${s}.0);

        return ${i.texture2D}(${t}, uv);
      }
    `;let l=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)],u=Math.ceil(e[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${l[0]}, ${l[1]}, row, col);
      return ${i.texture2D}(${t}, uv);
    }
  `}function k8(r){let e=r.shapeInfo.logicalShape,t=r.name,o="get"+t.charAt(0).toUpperCase()+t.slice(1),n=r.shapeInfo.texShape;if(n!=null&&x.arraysEqual(e,n)){let p=n[0],m=n[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${m}.0, ${p}.0);
      return sampleTexture(${t}, uv);
    }
  `}let{newShape:s,keptDims:a}=x.squeezeShape(e),i=s;if(i.length<e.length){let p=Gp(r,i),m=["row","col"];return`
      ${Bp(p)}
      float ${o}(int row, int col) {
        return ${o}(${Wp(m,a)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${Vp(r)}
      }
    `;let l=n[0],u=n[1],c=sc(t);return u===1?`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${t}, uv);
    }
  `:l===1?`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${t}, uv);
    }
  `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${c};
    vec2 uv = uvFromFlat(${l}, ${u}, index);
    return sampleTexture(${t}, uv);
  }
`}function E8(r){let e=r.shapeInfo.logicalShape,t=r.name,o="get"+t.charAt(0).toUpperCase()+t.slice(1),n=r.shapeInfo.texShape,s=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)];if(e[0]===1){let p=e.slice(1),m=[1,2],f=Gp(r,p),d=["b","row","col"];return`
        ${B$(f)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${Wp(d,m)});
        }
      `}let a=s[0],i=s[1],l=Math.ceil(e[2]/2),u=l*Math.ceil(e[1]/2),c=Ot();return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${a}, ${i}, ${u}, ${l}, b, row, col);
      return ${c.texture2D}(${t}, uv);
    }
  `}function v8(r){let e=r.shapeInfo.logicalShape,t=r.name,o="get"+t.charAt(0).toUpperCase()+t.slice(1),n=e[1]*e[2],s=e[2],{newShape:a,keptDims:i}=x.squeezeShape(e),l=a;if(l.length<e.length){let d=Gp(r,l),h=["row","col","depth"];return`
        ${Bp(d)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${Wp(h,i)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${n}, ${s}, 1)));
        ${Vp(r)}
      }
    `;let u=r.shapeInfo.texShape,c=u[0],p=u[1],m=r.shapeInfo.flatOffset;if(p===n&&m==null)return`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${s}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${c}.0);
          return sampleTexture(${t}, uv);
        }
      `;if(p===s&&m==null)return`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${c}.0);
      return sampleTexture(${t}, uv);
    }
  `;let f=sc(t);return`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n} + col * ${s} + depth + ${f};
        vec2 uv = uvFromFlat(${c}, ${p}, index);
        return sampleTexture(${t}, uv);
      }
  `}function D8(r){let e=r.shapeInfo.logicalShape,t=e.length,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),s=r.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],i=a[0],l=a[1],u=Math.ceil(e[t-1]/2),c=u*Math.ceil(e[t-2]/2),p="int b, int row, int col",m=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let d=2;d<t-1;d++)p=`int b${d}, `+p,c*=e[t-d-1],m=`b${d} * ${c} + `+m;let f=Ot();return`
    vec4 ${n}(${p}) {
      int index = ${m};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${i});
      return ${f.texture2D}(${o}, uv);
    }
  `}function C8(r){let e=r.shapeInfo.logicalShape,t=r.name,o="get"+t.charAt(0).toUpperCase()+t.slice(1),n=e[3],s=e[2]*n,a=e[1]*s,{newShape:i,keptDims:l}=x.squeezeShape(e);if(i.length<e.length){let d=Gp(r,i),h=["row","col","depth","depth2"];return`
      ${Bp(d)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${Wp(h,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${s}, ${n}, 1)));
        ${Vp(r)}
      }
    `;let u=r.shapeInfo.flatOffset,c=r.shapeInfo.texShape,p=c[0],m=c[1];if(m===a&&u==null)return`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${s}, ${n}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(m===n&&u==null)return`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;let f=sc(t);return`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${s} +
          depth * ${n} + depth2;
      vec2 uv = uvFromFlat(${p}, ${m}, index + ${f});
      return sampleTexture(${t}, uv);
    }
  `}function I8(r){let e=r.shapeInfo.logicalShape,t=r.name,o="get"+t.charAt(0).toUpperCase()+t.slice(1),n=e[4],s=e[3]*n,a=e[2]*s,i=e[1]*a,{newShape:l,keptDims:u}=x.squeezeShape(e);if(l.length<e.length){let h=Gp(r,l),g=["row","col","depth","depth2","depth3"];return`
      ${Bp(h)}
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        return ${o}(${Wp(g,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${s}, ${n})) +
          depth3;
        ${Vp(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,m=p[0],f=p[1];if(f===i&&c==null)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${s}, ${n}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===n&&c==null)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;let d=sc(t);return`
    float ${o}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${s} +
          depth2 * ${n} + depth3 + ${d};
      vec2 uv = uvFromFlat(${m}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function N8(r){let e=r.shapeInfo.logicalShape,t=r.name,o="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:n,keptDims:s}=x.squeezeShape(e);if(n.length<e.length){let g=Gp(r,n),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Bp(g)}
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${o}(${Wp(y,s)});
      }
    `}let a=e[5],i=e[4]*a,l=e[3]*i,u=e[2]*l,c=e[1]*u;if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${Vp(r)}
      }
    `;let p=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,f=m[0],d=m[1];if(d===c&&p==null)return`
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(d===a&&p==null)return`
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;let h=sc(t);return`
    float ${o}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${h};
      vec2 uv = uvFromFlat(${f}, ${d}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Vp(r){let e=r.name,t=x.sizeFromShape(r.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function $8(r,e){let t=r.name,o=t.charAt(0).toUpperCase()+t.slice(1),n="get"+o+"AtOutCoords",s=r.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=L$(r.shapeInfo.logicalShape,e.logicalShape),l=Le(a),u=a-s,c,p=["x","y","z","w","u","v"];s===0?c="":a<2&&i.length>=1?c="coords = 0;":c=i.map(b=>`coords.${p[b+u]} = 0;`).join(`
`);let m="";a<2&&s>0?m="coords":m=r.shapeInfo.logicalShape.map((b,w)=>`coords.${p[w+u]}`).join(", ");let f="return outputValue;",h=x.sizeFromShape(r.shapeInfo.logicalShape)===1,y=x.sizeFromShape(e.logicalShape)===1;if(s===1&&!h&&!y)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(h&&!y)a===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(i.length){let b=s-2,w=s-1;i.indexOf(b)>-1&&i.indexOf(w)>-1?f="return vec4(outputValue.x);":i.indexOf(b)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(w)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${n}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${o}(${m});
      ${f}
    }
  `}function R8(r,e){let t=r.name,o=t.charAt(0).toUpperCase()+t.slice(1),n="get"+o+"AtOutCoords",s=e.texShape,a=r.shapeInfo.texShape,i=r.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!r.shapeInfo.isUniform&&i===l&&r.shapeInfo.flatOffset==null&&x.arraysEqual(a,s))return`
      float ${n}() {
        return sampleTexture(${t}, resultUV);
      }
    `;let u=Le(l),c=L$(r.shapeInfo.logicalShape,e.logicalShape),p=l-i,m,f=["x","y","z","w","u","v"];i===0?m="":l<2&&c.length>=1?m="coords = 0;":m=c.map(h=>`coords.${f[h+p]} = 0;`).join(`
`);let d="";return l<2&&i>0?d="coords":d=r.shapeInfo.logicalShape.map((h,g)=>`coords.${f[g+p]}`).join(", "),`
    float ${n}() {
      ${u} coords = getOutputCoords();
      ${m}
      return get${o}(${d});
    }
  `}function Le(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function Gp(r,e){let t=JSON.parse(JSON.stringify(r));return t.shapeInfo.logicalShape=e,t}function Wp(r,e){return e.map(t=>r[t]).join(", ")}function G$(r,e,t,o){let n=e.userCode,s=t.map((f,d)=>{let h={logicalShape:f.shape,texShape:f.isUniform?null:f.texData.texShape,isUniform:f.isUniform,isPacked:f.isUniform?!1:f.texData.isPacked,flatOffset:null};return f.texData!=null&&f.texData.slice!=null&&f.texData.slice.flatOffset>0&&(h.flatOffset=f.texData.slice.flatOffset),{name:e.variableNames[d],shapeInfo:h}}),a=s.map(f=>f.shapeInfo),i={logicalShape:o.shape,texShape:o.texData.texShape,isUniform:!1,isPacked:o.texData.isPacked,flatOffset:null},l=z$(s,i,n,e.packedInputs),u=r.createProgram(l),c=null,p=r.getUniformLocation(u,"NAN",!1);W().getNumber("WEBGL_VERSION")===1&&(c=r.getUniformLocation(u,"INFINITY",!1));let m={};for(let f=0;f<e.variableNames.length;f++){let d=e.variableNames[f],h=!1;m[d]=r.getUniformLocation(u,d,h),m[`offset${d}`]=r.getUniformLocation(u,`offset${d}`,h)}return{program:e,source:l,webGLProgram:u,uniformLocations:m,inShapeInfos:a,outShapeInfo:i,infLoc:c,nanLoc:p}}function W$(r,e){if(r.length!==e.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${e.length} inputs`);r.forEach((t,o)=>{let n=t.logicalShape,s=e[o],a=s.shape;if(!x.arraysEqual(n,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${n} and ${a} must match`);if(t.isUniform&&s.isUniform)return;let i=t.texShape,l=s.isUniform?null:s.texData.texShape;if(!x.arraysEqual(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function U$(r,e,t,o,n){W$(e.inShapeInfos,t),W$([e.outShapeInfo],[o]);let s=o.texData.texture,a=o.texData.texShape;o.texData.isPacked?r.setOutputPackedMatrixTexture(s,a[0],a[1]):r.setOutputMatrixTexture(s,a[0],a[1]),r.setProgram(e.webGLProgram),W().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&r.gl.uniform1f(e.infLoc,Infinity),e.nanLoc!==null&&r.gl.uniform1f(e.nanLoc,NaN),t.forEach((i,l)=>{let u=e.program.variableNames[l],c=e.uniformLocations[u],p=e.uniformLocations[`offset${u}`];if(c!=null){if(i.isUniform){if(x.sizeFromShape(i.shape)<2)r.gl.uniform1f(c,i.uniformValues[0]);else{let m=i.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),r.gl.uniform1fv(c,m)}return}i.texData.slice!=null&&p!=null&&r.gl.uniform1i(p,i.texData.slice.flatOffset),r.setInputMatrixTexture(i.texData.texture,c,l)}}),n!=null&&n(r,e.webGLProgram),r.executeProgram()}function j$(r,e,t){let o="";e.concat(t).forEach(a=>{let i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0,l=a.isUniform?"uniform":a.texData.texShape;o+=`${a.shape}_${l}_${i}`});let n=r.userCode,s=r.constructor.name;return s+="_"+o+"_"+n,s}var{addImpl:H$,bincountImpl:Tx,bincountReduceImpl:q$,ceilImpl:K$,concatImpl:X$,expImpl:Y$,expm1Impl:Z$,floorImpl:J$,gatherV2Impl:Q$,greaterImpl:eR,lessImpl:tR,linSpaceImpl:rR,logImpl:oR,maxImpl:nR,maximumImpl:sR,minimumImpl:iR,multiplyImpl:aR,negImpl:lR,prodImpl:uR,rangeImpl:cR,rsqrtImpl:pR,simpleAbsImpl:Ax,sliceImpl:mR,stridedSliceImpl:fR,subImpl:dR,tileImpl:hR,topKImpl:gR,transposeImpl:Up,uniqueImpl:xR}=Bk;function bv(r,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${r}.${t}`)}function Ut(r,e){return e===1?[r]:bv(r,e)}function yR(r,e){if(r===1)return"rc";let t="";for(let o=0;o<r;o++)t+=e[o],o<r-1&&(t+=",");return t}var wv=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;let t=e.length;if(t===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let o=Ut("rc",t),n=Le(t),s=q8(t,e,o),a=K8(t,e[e.length-1],e[e.length-2],o),i=X8(e,o);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${i}));
          }
        }
      `}}};function Y8(r,e){let t=[];for(let o=0;o<=1;o++)for(let n=0;n<=1;n++){let s=`${o===0?"r":"rp1"}, ${n===0?"c":"cp1"}`;for(let a=2;a<r;a++)s=`${e[e.length-1-a]},`+s;t.push(s)}return t}function q8(r,e,t){if(r===1)return`rc > ${e[0]}`;let o="";for(let n=r-2;n<r;n++)o+=`${t[n]} >= ${e[n]}`,n<r-1&&(o+="||");return o}function K8(r,e,t,o){if(r===1)return"";let n=o.slice(-2);return`
    int r = ${n[0]};
    int c = ${n[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${e};
    bool rEdge = rp1 >= ${t};
  `}function X8(r,e){let t=r.length,o=Y8(t,e);return t===1?`getA(rc),
            rc + 1 >= ${r[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${o[0]}),
          cEdge ? 0. : getA(${o[1]}),
          rEdge ? 0. : getA(${o[2]}),
          rEdge || cEdge ? 0. : getA(${o[3]})`}var Jd=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let o="";for(let n=0;n<4;n++){let s="thisRC = rc;";n%2==1&&(s+="thisRC.z += 1;"),n>1&&(s+="thisRC.y += 1;"),o+=`
        ${s}
        ${n>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${n}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${n>0?"}":""}
      `}this.userCode=`
      ${Z8(t)}
      ${zp(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${e[1]};
        int cols = ${e[2]};

        ${o}

        setOutput(result);
      }
    `}};function Z8(r){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${zs(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var _v=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,o){let n=wR(t,o),s=_R(e,n,o);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let a=bR(e,n,this.gpgpu.gl,this.gpgpu.textureConfig,o);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let l=this.freeTextures[s].shift();return this.usedTextures[s].push(l),l}let i;return n===_r.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):n===_r.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):n===_r.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):n===_r.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):n===_r.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,o,n){if(this.freeTextures==null)return;let s=wR(o,n),a=_R(t,s,n);a in this.freeTextures||(this.freeTextures[a]=[]);let i=bR(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,n),l=W().get("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let u=this.usedTextures[a],c=u.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function J8(r,e){let t=r;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===r.RGBA)return 16;if(e===t.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}function bR(r,e,t,o,n){let s=Q8(e,o),a;if(n){let[l,u]=Hi(r[0],r[1]);a=l*u}else{let[l,u]=oc(r[0],r[1]);a=l*u}let i=J8(t,s);return a*i}function Q8(r,e){switch(r){case _r.PACKED_2X2_FLOAT32:return gv(e);case _r.PACKED_2X2_FLOAT16:return xv(e);case _r.UNPACKED_FLOAT32:return fv(e);case _r.UNPACKED_FLOAT16:return dv(e);case _r.PACKED_4X1_UNSIGNED_BYTE:return hv(e);default:throw new Error(`Unknown physical texture type ${r}`)}}function eY(r){return W().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?_r.PACKED_2X2_FLOAT32:_r.UNPACKED_FLOAT32:r?_r.PACKED_2X2_FLOAT16:_r.UNPACKED_FLOAT16}function wR(r,e){if(r===Er.UPLOAD)return _r.PACKED_2X2_FLOAT32;if(r===Er.RENDER||r==null)return eY(e);if(r===Er.DOWNLOAD||r===Er.PIXELS)return _r.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${r}`)}function _R(r,e,t){return`${r[0]}_${r[1]}_${e}_${t}`}var ho=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},xr="if (isnan(x)) return x;",kR="return x;",kv="return abs(x);";var vR="return (x >= 0.0) ? x : (exp(x) - 1.0);",CR=xr+`
  return (x < 0.0) ? 0.0 : x;
`,IR=xr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Qd="return x;";var NR="return x;",SR=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,TR=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,AR=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Bs=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var vv=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;let t=e.length,o=Ut("rc",t),n=Le(t),s=yR(t,o),a=o.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${n} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}};var tY=Tr.whereImpl,rY=1e-7,oY=1e-4,Ex={};function nY(r){return r in Ex||(Ex[r]={}),Ex[r]}var sY=128,iY=600;function aY(){return W().global.screen==null?1024:W().global.screen.height*W().global.screen.width*window.devicePixelRatio*iY/1024/1024}var jp=class extends Gs{constructor(e){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!W().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(e==null){let t=Go(W().getNumber("WEBGL_VERSION"));this.binaryCache=nY(W().getNumber("WEBGL_VERSION")),this.gpgpu=new yv(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new _v(this.gpgpu),this.numMBBeforeWarning=aY(),this.texData=new Xa(this,Po())}nextDataId(){return jp.nextDataId++}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,o){if((W().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||W().getBool("DEBUG"))&&this.checkNumericalProblems(e),o==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let n={id:this.nextDataId()};return this.texData.set(n,{shape:t,dtype:o,values:e,usage:Er.UPLOAD,refCount:1}),n}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,o,n,s){if(W().getBool("DEBUG")&&this.checkNumericalProblems(t),n==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:o,dtype:n,values:t,usage:Er.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:o,dtype:n,complexTensorInfos:s,slice:a,shape:i,isPacked:l}=t;if(a!=null){let m;l?m=new Bs(i,Qd):m=new ho(i,Qd);let f=this.runWebGLProgram(m,[{dataId:e,shape:i,dtype:n}],n),d=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),d}if(o!=null)return this.convertAndCacheOnCPU(e);if(n==="string")return o;let u=this.activeTimers!=null,c;u&&(c=x.now());let p;if(n==="complex64"){let m=this.readSync(s.real.dataId),f=this.readSync(s.imag.dataId);p=N.mergeRealAndImagArrays(m,f)}else p=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=x.now()-c),this.convertAndCacheOnCPU(e,p)}async read(e){if(this.pendingRead.has(e)){let d=this.pendingRead.get(e);return new Promise(h=>d.push(h))}let t=this.texData.get(e),{values:o,shape:n,slice:s,dtype:a,complexTensorInfos:i,isPacked:l}=t;if(s!=null){let d;l?d=new Bs(n,Qd):d=new ho(n,Qd);let h=this.runWebGLProgram(d,[{dataId:e,shape:n,dtype:a}],a),g=this.read(h.dataId);return this.disposeIntermediateTensorInfo(h),g}if(o!=null)return this.convertAndCacheOnCPU(e);if(!W().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&W().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,c;if(a!=="complex64"&&W().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);let d=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(d.texture,...Cl(n))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let p;if(a==="complex64"){let d=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),h=d[0],g=d[1];p=N.mergeRealAndImagArrays(h,g)}else if(u==null)p=this.getValuesFromTexture(e);else{let d=x.sizeFromShape(n);p=this.gpgpu.downloadFloat32MatrixFromBuffer(u,d)}c!=null&&this.disposeIntermediateTensorInfo(c);let m=this.convertAndCacheOnCPU(e,p),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(d=>d(m)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Po().removeDataId(e,this),this.pendingDeletes--),m}bufferSync(e){let t=this.readSync(e.dataId),o=t;if(e.dtype==="string")try{o=t.map(n=>x.decodeString(n))}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return ve(e.shape,e.dtype,o)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let o=e[t];if(!r$(o))throw W().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${o} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${o} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:o,isPacked:n}=this.texData.get(e),s=x.sizeFromShape(t);if(W().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let m=this.decode(e),f=this.texData.get(m.dataId),d=this.gpgpu.downloadMatrixFromPackedTexture(f.texture,...Cl(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(m),d}let a=W().getBool("WEBGL_PACK")&&n===!0,i=a?Ix(t):t,l=a?new cv(i):new uv(i),u=this.runWebGLProgram(l,[{shape:i,dtype:o,dataId:e}],"float32"),c=this.texData.get(u.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),p}timerAvailable(){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){let t=this.activeTimers,o=[],n=!1;this.programTimersStack==null?(this.programTimersStack=o,n=!0):this.activeTimers.push(o),this.activeTimers=o,e();let s=x.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=x.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,n&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let l=await Promise.all(s);i.kernelMs=x.sum(l),i.getExtraProfileInfo=()=>l.map((u,c)=>({name:a[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:x.now(),endMs:null}}endTimer(e){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=x.now(),e)}async getQueryTime(e){if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:o}=this.texData.get(e);return o!=null&&(this.disposeData(o.real.dataId,t),this.disposeData(o.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:o,texShape:n,usage:s,isPacked:a,slice:i}=this.texData.get(e),l=i&&i.origDataId||e,u=this.dataRefCount.get(l);u>1?this.dataRefCount.set(l,u-1):(this.dataRefCount.delete(l),t!=null&&(this.numBytesInGPU-=this.computeBytes(n,o),this.textureManager.releaseTexture(t,n,s,a)));let c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return W().getBool("WEBGL_CPU_FORWARD")?(this.cpuBackend==null&&(this.cpuBackend=Po().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=sY){let o=this.getCPUBackend();return!W().getBool("IS_TEST")&&!this.warnedAboutCPUBackend&&o==null&&(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),o!=null&&e.every(n=>this.texData.get(n.dataId).texture==null&&x.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){N.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return tY(e.shape,t)}packedUnaryOp(e,t,o){let n=new Bs(e.shape,t),s=this.compileAndRun(n,[e],o);return Po().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let n=Ax(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,n)}if(W().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,kv,e.dtype);let t=new ho(e.shape,kv),o=this.compileAndRun(t,[e]);return Po().makeTensorFromDataId(o.dataId,o.shape,o.dtype)}makeTensorInfo(e,t,o){let n;if(t==="string"&&o!=null&&o.length>0&&x.isString(o[0])){let s=o.map(a=>x.encodeString(a));n=this.write(s,e,t)}else n=this.write(o,e,t);return this.texData.get(n).usage=null,{dataId:n,shape:e,dtype:t}}makeOutput(e,t,o){let{dataId:n}=this.makeTensorInfo(e,t,o);return Po().makeTensorFromDataId(n,e,t,this)}unpackTensor(e){let t=new vv(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new wv(e.shape),o=!0;return this.runWebGLProgram(t,[e],e.dtype,null,o)}packedReshape(e,t){let o=[Il(e.shape),...Nl(e.shape)],n={dtype:e.dtype,shape:o,dataId:e.dataId},s=[Il(t),...Nl(t)],a=new Jd(s,o),i=!0,l=this.runWebGLProgram(a,[n],e.dtype,null,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e){let t=this.texData.get(e),{isPacked:o,shape:n,dtype:s}=t,a=Ix(n),i;o?i=new lv(a):i=new av(a);let l=!0,u=this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:e}],s,null,l);return{dtype:s,shape:n,dataId:u.dataId}}runWebGLProgram(e,t,o,n,s=!1){let a=this.makeTensorInfo(e.outputShape,o),i=this.texData.get(a.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===vl.DENSE){let g=Cl(e.outputShape);i.texShape=g.map(y=>y*2)}if(e.outTexUsage!=null&&(i.usage=e.outTexUsage),x.sizeFromShape(a.shape)===0)return i.values=x.getTypedArrayFromDType(a.dtype,0),a;let l=[],u=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(g.dataId);if(y.texture==null){if(!e.packedInputs&&x.sizeFromShape(g.shape)<=W().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=g.shape)}else if(!!y.isPacked!=!!e.packedInputs)g=y.isPacked?this.unpackTensor(g):this.packTensor(g),l.push(g),y=this.texData.get(g.dataId);else if(y.isPacked&&!nc(y.shape,g.shape)){let b=g,w=g.shape;g.shape=y.shape,g=this.packedReshape(g,w),l.push(g),y=this.texData.get(g.dataId),b.shape=w}return this.uploadToGPU(g.dataId),{shape:g.shape,texData:y,isUniform:!1}});this.uploadToGPU(a.dataId);let c={shape:a.shape,texData:i,isUniform:!1},p=j$(e,u,c),m=this.getAndSaveBinary(p,()=>G$(this.gpgpu,e,u,c)),f=this.activeTimers!=null,d;f&&(d=this.startTimer()),U$(this.gpgpu,m,u,c,n),l.forEach(g=>this.disposeIntermediateTensorInfo(g)),f&&(d=this.endTimer(d),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(d)}));let h=W().get("WEBGL_FLUSH_THRESHOLD");if(h>0){let g=x.now();g-this.lastGlFlushTime>h&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!W().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&s===!1){let g=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),g}return a}compileAndRun(e,t,o,n,s=!1){return o=o||t[0].dtype,this.runWebGLProgram(e,t,o,n,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(W().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=V(()=>{if(!W().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=W().getBool("DEBUG");W().set("DEBUG",!1);let t=this.abs(ue(1e-8)).dataSync()[0];if(W().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?rY:oY}uploadToGPU(e){let t=this.texData.get(e),{shape:o,dtype:n,values:s,texture:a,usage:i,isPacked:l}=t;if(a!=null)return;let u=this.activeTimers!=null,c;u&&(c=x.now());let p=t.texShape;if(p==null&&(p=h$(o,l),t.texShape=p),s!=null){let m=Ix(o),f,d=p[1],h=p[0],g=s instanceof Uint8Array;l?([d,h]=Hi(p[0],p[1]),f=new mv(m,[h,d],g)):f=new pv(m,[h,d],g);let y=this.makeTensorInfo([h,d],n);g?this.texData.get(y.dataId).usage=Er.PIXELS:this.texData.get(y.dataId).usage=Er.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),d,h,s);let b=!0,w=this.runWebGLProgram(f,[y],n,null,b),_=this.texData.get(w.dataId);t.texture=_.texture,t.texShape=_.texShape,t.isPacked=_.isPacked,t.usage=_.usage,this.disposeIntermediateTensorInfo(y),this.texData.delete(w.dataId),t.values=null,u&&(this.uploadWaitMs+=x.now()-c)}else{let m=this.acquireTexture(p,i,n,l);t.texture=m}}convertAndCacheOnCPU(e,t){let o=this.texData.get(e),{dtype:n}=o;return this.releaseGPUData(e),t!=null&&(o.values=lY(t,n)),o.values}acquireTexture(e,t,o,n){if(this.numBytesInGPU+=this.computeBytes(e,o),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,n)}computeBytes(e,t){return e[0]*e[1]*x.bytesPerElement(t)}};jp.nextDataId=0;function lY(r,e){if(e==="float32"||e==="complex64")return r;if(e==="int32"||e==="bool"){let t=e==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let o=0;o<t.length;++o)t[o]=Math.round(r[o]);return t}else throw new Error(`Unknown dtype ${e}`)}var ER="3.2.0";Lc.isBrowser()&&hu("webgl",()=>new jp,2);var Dx=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var rs=class{constructor(e,t,o){this.variableNames=["A","B"],this.outputShape=N.assertAndGetBroadcastShape(t,o),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var Sl=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;var Vs=class{constructor(e,t,o,n=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=N.assertAndGetBroadcastShape(t,o);let s=this.outputShape.length,a="";if(n)if(s===0||x.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Le(s)} coords = getOutputCoords();
        `,s===1)a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let l=Ut("coords",s);a+=`
            bool nextRowOutOfBounds =
              (${l[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${l[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function jt(r){let{inputs:e,backend:t}=r,{x:o}=e;return t.incRef(o.dataId),{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}var DR={kernelName:Ro,backendName:"webgl",kernelFunc:jt};function go(r){let{inputs:e,backend:t}=r,{real:o,imag:n}=e,s=t.makeTensorInfo(o.shape,"complex64"),a=t.texData.get(s.dataId),i=jt({inputs:{x:o},backend:t}),l=jt({inputs:{x:n},backend:t});return a.complexTensorInfos={real:i,imag:l},s}var $R={kernelName:Gl,backendName:"webgl",kernelFunc:go};var Cv="return (a < 0.) ? b * a : a;",Iv=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function uY(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{alpha:s}=o,a=t.makeTensorInfo([],"float32",x.createScalarValue(s,"float32")),i=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vs(Iv,n.shape,a.shape):new rs(Cv,n.shape,a.shape),l=t.runWebGLProgram(i,[n,a],n.dtype);return t.disposeIntermediateTensorInfo(a),l}var RR={kernelName:un,backendName:"webgl",kernelFunc:uY};var Nv="return (a < 0.) ? b * a : a;",Sv=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function cY(r){let{inputs:e,backend:t}=r,{x:o,alpha:n}=e,s=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vs(Sv,o.shape,n.shape):new rs(Nv,o.shape,n.shape);return t.runWebGLProgram(s,[o,n],o.dtype)}var FR={kernelName:_n,backendName:"webgl",kernelFunc:cY};var $x="if (isnan(x)) return x;",OR=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,PR=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function _e({opSnippet:r,packedOpSnippet:e,cpuKernelImpl:t,dtype:o}){return({inputs:n,backend:s})=>{let{x:a}=n,i=s,l=o||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){let p=i.texData.get(a.dataId),m=t(p.values,l);return i.makeTensorInfo(a.shape,l,m)}let u=W().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null,c;return u?c=new Bs(a.shape,e):c=new ho(a.shape,r),i.runWebGLProgram(c,[a],l)}}function nt({opSnippet:r,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:o=!1,cpuKernelImpl:n,dtype:s}){return({inputs:a,backend:i})=>{let{a:l,b:u}=a,c=i;if(o&&l.dtype==="complex64"){let d=c.texData.get(l.dataId),h=c.texData.get(u.dataId),[g,y]=[[d.complexTensorInfos.real,h.complexTensorInfos.real],[d.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(w=>{let[_,C]=w,D={dataId:_.dataId,dtype:_.dtype,shape:l.shape},T={dataId:C.dataId,dtype:C.dtype,shape:u.shape},R=new rs(r,l.shape,u.shape);return c.runWebGLProgram(R,[D,T],fr(_.dtype,C.dtype))}),b=go({inputs:{real:g,imag:y},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(y),b}let p=s||fr(l.dtype,u.dtype);if(c.shouldExecuteOnCPU([l,u])&&n!=null){let d=c.texData.get(l.dataId),h=c.texData.get(u.dataId),[g,y]=n(l.shape,u.shape,d.values,h.values,p),b=c.makeTensorInfo(y,p),w=c.texData.get(b.dataId);return w.values=g,b}let m=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null,f;return m?f=new Vs(e,l.shape,u.shape,t):f=new rs(r,l.shape,u.shape),c.runWebGLProgram(f,[l,u],p)}}function Tl(r,e=!1){if(r==="linear")return e?NR:kR;if(r==="relu")return e?TR:CR;if(r==="elu")return e?SR:vR;if(r==="relu6")return e?AR:IR;if(r==="prelu")return e?Sv:Nv;if(r==="leakyrelu")return e?Iv:Cv;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var eh=class{constructor(e,t,o,n=!1,s=!1,a=!1,i=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o;let c=n?e[1]:e[2],p=Math.ceil(c/2),m=n?"i * 2, rc.y":"rc.y, i * 2",f=s?"rc.z, i * 2":"i * 2, rc.z",d=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",y="";i&&(l?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:u?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,y="result = activation(result);");let b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let w="rc.x",_="rc.x";e[0]<t[0]?w=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(_=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${g}

      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${p}; i++) {
          int batchA = ${w};
          int batchB = ${_};
          vec4 a = getMatrixA(batchA, ${m});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${d[0]} * ${h[0]});
          result += (${d[1]} * ${h[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${y}

        setOutput(result);
      }
    `}};var Tv={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},Rx=class{constructor(e,t,o){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=N.assertAndGetBroadcastShape(t,o),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var MR="return a * b;";function Av(r){let{inputs:e,backend:t}=r,{a:o,b:n}=e,s=N.upcastType(o.dtype,n.dtype);if(o.dtype==="complex64"){let i=t.texData.get(o.dataId),l=t.texData.get(n.dataId),u=new Rx(Tv.REAL,o.shape,n.shape),c=new Rx(Tv.IMAG,o.shape,n.shape),p=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:o.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:n.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:n.shape}],m=t.runWebGLProgram(u,p,"float32"),f=t.runWebGLProgram(c,p,"float32"),d=go({inputs:{real:m,imag:f},backend:t});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),d}if(t.shouldExecuteOnCPU([o,n])){let i=t.texData.get(o.dataId),l=t.texData.get(n.dataId),[u,c]=aR(o.shape,n.shape,i.values,l.values,s),p=t.makeTensorInfo(c,s),m=t.texData.get(p.dataId);return m.values=u,p}let a;return W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new Vs(MR,o.shape,n.shape):a=new rs(MR,o.shape,n.shape),t.runWebGLProgram(a,[o,n],s)}var LR={kernelName:xn,backendName:"webgl",kernelFunc:Av};function zR(r,e,t){let o=[Il(r.shape),...Nl(r.shape)],n={dtype:r.dtype,shape:o,dataId:r.dataId},s=[Il(e),...Nl(e)],a=new Jd(s,o),i=!0,l=t.runWebGLProgram(a,[n],r.dtype,null,i);return{dataId:l.dataId,shape:e,dtype:l.dtype}}function pe(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{shape:s}=o,a=t,i=x.sizeFromShape(n.shape),l=x.inferFromImplicitShape(s,i),u=x.sizeFromShape(l);x.assert(i===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${n.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let c=a.texData.get(n.dataId);return c.isPacked&&!nc(n.shape,l)&&!(c.texture!==null&&nc(c.shape,l))?zR(n,l,a):(a.incRef(n.dataId),{dataId:n.dataId,shape:l,dtype:n.dtype})}var BR={kernelName:ds,backendName:"webgl",kernelFunc:pe};var Fx=class{constructor(e,t){this.variableNames=["x"];let{windowSize:o,batchSize:n,inSize:s,outSize:a}=e;this.outputShape=[n,a];let i=Math.floor(o/4)*4,l=o%4,u="sumValue += dot(values, ones);";if(t!=null){let p=1/t;u=`sumValue += dot(values * ${x.isInt(p)?p.toPrecision(2):p}, ones);`}let c="";s%o>0&&(c=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${i};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}};var Ev=class{constructor(e,t){this.variableNames=["x"];let{windowSize:o,batchSize:n,inSize:s,outSize:a}=e;this.outputShape=[n,a];let i="0.0",l="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",l="min"):t==="max"&&(i="-1.0 / 1e-20",l="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");let c=Math.floor(o/4)*4,p=o%4,m=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
      }
    `,f="vec4";t==="all"?(i="1.0",m=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):t==="any"&&(i="0.0",m=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let d="";s%o>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${m}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${m}
        }
        setOutput(${u});
      }
    `}};function pY(r){let e=[];for(;e.length===0||e[e.length-1].outSize!==1;){let t=e.length?e[e.length-1].outSize:r[1],o=N.computeOptimalWindowSize(t);e.push({inSize:t,windowSize:o,outSize:Math.ceil(t/o)})}return e}function To(r,e,t,o){let n=pY(r.shape),s=r;for(let a=0;a<n.length;a++){let{inSize:i,windowSize:l,outSize:u}=n[a],c,p;t==="mean"?c=a===0?new Fx({windowSize:l,inSize:i,batchSize:r.shape[0],outSize:u},i):new Fx({windowSize:l,inSize:i,batchSize:r.shape[0],outSize:u}):c=new Ev({windowSize:l,inSize:i,batchSize:r.shape[0],outSize:u},t),p=s,s=o.runWebGLProgram(c,[s],e),p.dataId!==r.dataId&&o.disposeIntermediateTensorInfo(p)}return s}var Dv=class{constructor(e,t){this.variableNames=["A"];let o=new Array(e.length);for(let a=0;a<o.length;a++)o[a]=e[t[a]];this.outputShape=o,this.rank=o.length;let n=Le(this.rank),s=mY(t);this.userCode=`
    void main() {
      ${n} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function mY(r){let e=r.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],o=new Array(e);for(let n=0;n<r.length;n++)o[r[n]]=t[n];return o.join()}var $v=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let o=new Array(e.length);for(let c=0;c<o.length;c++)o[c]=e[t[c]];if(this.outputShape=o,this.rank=o.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let n=Le(this.rank),s=bv("rc",this.rank),a=new Array(this.rank);for(let c=0;c<t.length;c++)a[t[c]]=s[c];let i=`vec2(${a.slice(-2).join()})`,l=`++${s[this.rank-1]} < ${o[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${n} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${o[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function Al(r,e,t){let o=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $v(r.shape,e):new Dv(r.shape,e);return t.runWebGLProgram(o,[r],r.dtype)}function VR(r,e,t,o){let n=e,s=r.shape.length,a=x.parseAxisParam(n,r.shape),i=a,l=N.getAxesPermutation(i,s),u=l!=null,c=r;u&&(c=Al(r,l,o),i=N.getInnerMostAxes(i.length,s)),N.assertAxesAreInnerMostDims("sum",i,s);let[p,m]=N.computeOutAndReduceShapes(c.shape,i),f=p;t&&(f=N.expandShapeToKeepDim(p,a));let d=x.sizeFromShape(m),g=x.sizeFromShape(r.shape)/d,y=pe({inputs:{x:c},attrs:{shape:[g,d]},backend:o}),b=mu(r.dtype),w=To(y,b,"sum",o),_=pe({inputs:{x:w},attrs:{shape:f},backend:o});return o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(w),u&&o.disposeIntermediateTensorInfo(c),_}function th(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:a}=o;return VR(n,s,a,t)}var GR={kernelName:Dn,backendName:"webgl",kernelFunc:th};function Mt(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{perm:s}=o,a=t,i=n.shape.length,l=new Array(i);for(let c=0;c<l.length;c++)l[c]=n.shape[s[c]];let u;if(a.shouldExecuteOnCPU([n])){let p=a.texData.get(n.dataId).values,m=Up(p,n.shape,n.dtype,s,l);u=a.makeTensorInfo(l,n.dtype);let f=a.texData.get(u.dataId);f.values=m}else u=Al(n,s,a);return u}var WR={kernelName:Pn,backendName:"webgl",kernelFunc:Mt};var Rv=1e3;function ic({a:r,b:e,transposeA:t,transposeB:o,backend:n,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:l=null}){let u=r.shape.length,c=e.shape.length,p=t?r.shape[u-2]:r.shape[u-1],m=o?e.shape[c-1]:e.shape[c-2],f=t?r.shape[u-1]:r.shape[u-2],d=o?e.shape[c-2]:e.shape[c-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),y=x.sizeFromShape(h),b=x.sizeFromShape(g),w=y===b||y===1||b===1;x.assert(u>=2&&c>=2&&w,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${h}) and (${g}).`);let C=(y>b?r.shape.slice(0,-2):e.shape.slice(0,-2)).concat([f,d]);x.assert(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${o} must match.`);let D=t?[y,p,f]:[y,f,p],T=o?[b,d,m]:[b,m,d],R=pe({inputs:{x:r},backend:n,attrs:{shape:D}}),P=pe({inputs:{x:e},backend:n,attrs:{shape:T}}),B=[R,P],G=Math.max(y,b),U=t?R.shape[1]:R.shape[2],j=s!=null,H=a!=null,K=l==="leakyrelu",X=l!=null?Tl(l,!0):null,oe=j||H||K||X!=null,Y;if((f===1||d===1)&&U>Rv&&oe===!1){let te=R,ie=P;t&&(te=Mt({inputs:{x:R},backend:n,attrs:{perm:[0,2,1]}}),B.push(te)),o&&(ie=Mt({inputs:{x:P},backend:n,attrs:{perm:[0,2,1]}}),B.push(ie));let le=d!==1,ae=d===1,fe=te;le&&(fe=pe({inputs:{x:te},backend:n,attrs:{shape:[G,U,1]}}),B.push(fe));let de=d===1?2:1,xe=ie;ae&&(xe=pe({inputs:{x:ie},backend:n,attrs:{shape:[G,1,U]}}),B.push(xe));let we=Av({inputs:{a:fe,b:xe},backend:n});Y=th({inputs:{x:we},backend:n,attrs:{axis:de,keepDims:!0}}),B.push(we)}else{let te=fr(r.dtype,e.dtype),ie=new eh(D,T,[G,f,d],t,o,j,X,H,K),le=[R,P];if(s!=null&&le.push(s),H&&le.push(a),K){let ae=n.makeTensorInfo([],"float32",x.createScalarValue(i,"float32"));le.push(ae),B.push(ae)}Y=n.runWebGLProgram(ie,le,te)}let re=pe({inputs:{x:Y},backend:n,attrs:{shape:C}});B.push(Y);for(let te of B)n.disposeIntermediateTensorInfo(te);return re}function fY(r){let{inputs:e,backend:t,attrs:o}=r,{a:n,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=o;return ic({a:n,b:s,transposeA:l,transposeB:u,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:p,activation:c})}var UR={kernelName:ws,backendName:"webgl",kernelFunc:fY};var jR="return abs(x);";function dY(r){let{inputs:e,backend:t}=r,{x:o}=e;if(t.shouldExecuteOnCPU([o])&&o.dtype!=="complex64"){let s=t.texData.get(o.dataId),a=Ax(s.values);return t.makeTensorInfo(o.shape,o.dtype,a)}let n;return W().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new Bs(o.shape,jR):n=new ho(o.shape,jR),t.runWebGLProgram(n,[o],o.dtype)}var HR={kernelName:as,backendName:"webgl",kernelFunc:dY};var hY=xr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,gY=_e({opSnippet:hY}),qR={kernelName:js,backendName:"webgl",kernelFunc:gY};var xY=xr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,yY=_e({opSnippet:xY}),KR={kernelName:Hs,backendName:"webgl",kernelFunc:yY};var XR="return a + b;",bY=nt({opSnippet:XR,packedOpSnippet:XR,supportsComplex:!0,cpuKernelImpl:H$}),YR={kernelName:wo,backendName:"webgl",kernelFunc:bY};var Fv=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let o=[];this.variableNames.forEach(s=>{o.push(`float v${s} = get${s}AtOutCoords();`)});let n=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${o.join(`
        `)}

        float result = ${n};
        setOutput(result);
      }
    `}};var Ov=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let o=[];this.variableNames.forEach(s=>{o.push(`vec4 v${s} = get${s}AtOutCoords();`)});let n=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${o.join(`
        `)}

        vec4 result = ${n};
        setOutput(result);
      }
    `}};function Ox(r){let{inputs:e,backend:t}=r,o=e;if(o.length===1)return jt({inputs:{x:o[0]},backend:t});if(o.length>W().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(o.length/2),u=Ox({inputs:o.slice(0,l),backend:t}),c=Ox({inputs:o.slice(l),backend:t});return Ox({inputs:[u,c],backend:t})}let n=o.map(l=>l.dtype).reduce((l,u)=>fr(l,u)),s=o.map(l=>l.shape),i=W().getBool("WEBGL_PACK")?new Ov(o[0].shape,s):new Fv(o[0].shape,s);return t.runWebGLProgram(i,o,n)}var ZR={kernelName:Ho,backendName:"webgl",kernelFunc:Ox};function wY(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:a}=o,i=n.shape.length,l=x.parseAxisParam(s,n.shape),u=l,c=N.getAxesPermutation(u,i),p=n;c!=null&&(p=Mt({inputs:{x:n},backend:t,attrs:{perm:c}}),u=N.getInnerMostAxes(u.length,i)),N.assertAxesAreInnerMostDims("all",u,i);let[m,f]=N.computeOutAndReduceShapes(p.shape,u),d=x.sizeFromShape(f),h=pe({inputs:{x:p},backend:t,attrs:{shape:[-1,d]}}),g=To(h,h.dtype,"all",t),y;if(a){let b=N.expandShapeToKeepDim(m,l);y=pe({inputs:{x:g},backend:t,attrs:{shape:b}})}else y=pe({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(p),y}var JR={kernelName:Ml,backendName:"webgl",kernelFunc:wY};function _Y(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:a}=o,i=n.shape.length,l=x.parseAxisParam(s,n.shape),u=l,c=N.getAxesPermutation(u,i),p=n;c!=null&&(p=Mt({inputs:{x:n},backend:t,attrs:{perm:c}}),u=N.getInnerMostAxes(u.length,i)),N.assertAxesAreInnerMostDims("any",u,i);let[m,f]=N.computeOutAndReduceShapes(p.shape,u),d=x.sizeFromShape(f),h=pe({inputs:{x:p},backend:t,attrs:{shape:[-1,d]}}),g=To(h,h.dtype,"any",t),y;if(a){let b=N.expandShapeToKeepDim(m,l);y=pe({inputs:{x:g},backend:t,attrs:{shape:b}})}else y=pe({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(p),y}var QR={kernelName:Ll,backendName:"webgl",kernelFunc:_Y};var Pv=class{constructor(e,t,o){this.variableNames=["A"];let{windowSize:n,batchSize:s,outSize:a}=e;o||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];let i=t==="max"?">":"<",l=o?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${n}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var Mv=class{constructor(e,t,o,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,x.assert(e.length>2,()=>`Packed arg${o.charAt(0).toUpperCase()+o.slice(1)} supports only inputs with rank above 2.`);let s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),n||this.variableNames.push("bestIndicesA");let i=this.outputShape,l=i.length,u=Le(l),c=Ut("coords",l),p,m;if(a===1){m=l+1;let R=Le(m);p=`
        ${R} sourceLocR = ${R}(${c.join()}, 0);
        ++${c[l-1]};
        ${R} sourceLocG = ${R}(${c.join()}, 0);
        ++${c[l-2]};
        ${R} sourceLocA = ${R}(${c.join()}, 0);
        --${c[l-1]};
        ${R} sourceLocB = ${R}(${c.join()}, 0);
        --${c[l-2]};`}else m=l,p=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;let f=["x","y","z","w","u","v"].slice(0,m),d="."+f[m-1],h=f.map(R=>"int "+R),g=Ut("sourceLocR",m-1).concat("inIdx.r"),y=Ut("sourceLocG",m-1).concat("inIdx.g"),b=Ut("sourceLocB",m-1).concat("inIdx.b"),w=Ut("sourceLocA",m-1).concat("inIdx.a"),_=o==="max"?"greaterThan":"lessThan",C=n?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${w.join()})));`,D=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,T=n?"":`
      float getBestIndicesAChannel(${h.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${h.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${T}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${i[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${i[l-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},
          sourceLocB${d}, sourceLocA${d}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${D};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${C}
          vec4 candidate = ${D};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${_}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function eF(r,e,t,o=null){let n=e.shape[0],s=e.shape[1];o!=null&&(n=o.shape[0],s=o.shape[1]);let a=N.computeOptimalWindowSize(s),i={windowSize:a,inSize:s,batchSize:n,outSize:Math.ceil(s/a)},l=new Pv(i,t,o==null),u=[e];o!=null&&u.push(o);let c=r.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;let p=eF(r,e,t,c);return r.disposeIntermediateTensorInfo(c),p}function tF(r,e,t,o=null){let n=o!=null?o.shape:e.shape,s=n[n.length-1],a=N.computeOptimalWindowSize(s),i=new Mv(n,a,t,o==null),l=o==null?[e]:[e,o],u=r.runWebGLProgram(i,l,"int32");if(u.shape.length===e.shape.length){let c=tF(r,e,t,u);return r.disposeIntermediateTensorInfo(u),c}return u}function Px(r,e,t,o){let n=[t];if(N.assertAxesAreInnerMostDims("arg"+o.charAt(0).toUpperCase()+o.slice(1),n,e.shape.length),!W().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){let s=[],[a,i]=N.computeOutAndReduceShapes(e.shape,n),l=x.sizeFromShape(i),u=pe({inputs:{x:e},backend:r,attrs:{shape:[-1,l]}});s.push(u);let c=eF(r,u,o);s.push(c);let p=pe({inputs:{x:c},backend:r,attrs:{shape:a}});return s.forEach(m=>r.disposeIntermediateTensorInfo(m)),p}return tF(r,e,o)}function kY(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s}=o,a=x.parseAxisParam(s,n.shape),i=N.getAxesPermutation(a,n.shape.length),l=n,u=[];i!=null&&(l=Mt({inputs:{x:n},backend:t,attrs:{perm:i}}),u.push(l),a=N.getInnerMostAxes(a.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMax",[a[0]],l.shape.length);let c=Px(t,l,a[0],"max");return u.forEach(p=>t.disposeIntermediateTensorInfo(p)),c}var rF={kernelName:qo,backendName:"webgl",kernelFunc:kY};function vY(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s}=o,a=x.parseAxisParam(s,n.shape),i=N.getAxesPermutation(a,n.shape.length),l=n,u=[];i!=null&&(l=Mt({inputs:{x:n},backend:t,attrs:{perm:i}}),u.push(l),a=N.getInnerMostAxes(a.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMin",[a[0]],l.shape.length);let c=Px(t,l,a[0],"min");return u.forEach(p=>t.disposeIntermediateTensorInfo(p)),c}var oF={kernelName:ea,backendName:"webgl",kernelFunc:vY};var CY=xr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,IY=_e({opSnippet:CY}),nF={kernelName:qs,backendName:"webgl",kernelFunc:IY};var NY=xr+"return log(x + sqrt(x * x + 1.0));",SY=_e({opSnippet:NY}),sF={kernelName:Ks,backendName:"webgl",kernelFunc:SY};var TY=xr+`
  return atan(x);
`,AY=_e({opSnippet:TY}),iF={kernelName:Xs,backendName:"webgl",kernelFunc:AY};var EY=OR+`
  return atan(a, b);
`,DY=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+PR+`
  return result;
`,$Y=nt({opSnippet:EY,packedOpSnippet:DY}),aF={kernelName:Zs,backendName:"webgl",kernelFunc:$Y};var RY=xr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,FY=_e({opSnippet:RY}),lF={kernelName:Ys,backendName:"webgl",kernelFunc:FY};var Ki=class{constructor(e,t,o,n=!1,s=!1){if(this.variableNames=["x"],t==="avg"&&o)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,p=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;let h=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,y=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,b="0.0";if(h||(b="-1.0 / 1e-20"),o){let R=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${l});
        const ivec2 pads = ivec2(${f}, ${d});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${R} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${n?s?g:y:`wR * ${m} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let w="max",_=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(_="avgValue / count");let C=Math.floor(a/4)*4,D=a%4,T=`
      if (${h}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${l});
      const ivec2 pads = ivec2(${f}, ${d});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${C}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${T}
          }

          int xC = xCCorner + ${C};
          if (${D===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${D===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${D===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${T}
          }
        }
        setOutput(${_});
      }
    `}},ac=class{constructor(e,t,o,n=!1,s=!1){if(this.variableNames=["x"],t==="avg"&&o)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideDepth,l=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,p=e.dilationHeight,m=e.dilationWidth,f=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,g=e.padInfo.front,y=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;let w=t==="avg",_="0.0";if(w||(_="-1.0 / 1e-20"),o){let B=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${l}, ${u});
        const ivec3 pads = ivec3(${g}, ${y}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${d};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${h};
                  wC += ${m}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${B} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${n?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${h} +
                      wR * ${h} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let C="max",D=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(D="avgValue / count");let T=Math.floor(a/4)*4,R=a%4,P=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${C}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${l}, ${u});
      const ivec3 pads = ivec3(${g}, ${y}, ${b});
      const float initializationValue = ${_};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${_});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${T}; wC += 4) {
              int xC = xCCorner + wC * ${m};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                getValue(batch, xD, xR, xC + 3 * ${m}, ch)
              );

              ${P}
            }

            int xC = xCCorner + ${T};
            if (${R===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${P}
            } else if (${R===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                initializationValue,
                initializationValue
              );

              ${P}
            } else if (${R===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                initializationValue
              );

              ${P}
            }
          }
          setOutput(${D});
        }
      }
    `}};function OY(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e;qi(n,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:l}=o,u=1;x.assert(N.eitherStridesOrDilationsAreOne(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let c=N.computePool2DInfo(n.shape,s,a,u,i,l);if(c.filterWidth===1&&c.filterHeight===1&&x.arraysEqual(c.inShape,c.outShape))return jt({inputs:{x:n},backend:t});let p=new Ki(c,"avg",!1);return t.runWebGLProgram(p,[n],"float32")}var uF={kernelName:Ko,backendName:"webgl",kernelFunc:OY};function PY(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:l,dataFormat:u}=o,c=[1,1,1],p=N.computePool3DInfo(n.shape,s,a,c,i,l,u),m=new ac(p,"avg",!1);return t.runWebGLProgram(m,[n],"float32")}var cF={kernelName:ta,backendName:"webgl",kernelFunc:PY};var Lv=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,o=e.filterWidth,n=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=l-1-e.padInfo.top,p=u-1-e.padInfo.left,m=1/(t*o);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${p});
      const float avgMultiplier = float(${m});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},zv=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,o=e.filterHeight,n=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,p=e.effectiveFilterDepth,m=e.effectiveFilterHeight,f=e.effectiveFilterWidth,d=p-1-e.padInfo.front,h=m-1-e.padInfo.top,g=f-1-e.padInfo.left,y=1/(t*o*n);this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${g});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${m};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function MY(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,input:s}=e,a=s,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=o,p=[1,1,1],m=N.computePool3DInfo(a.shape,i,l,p,u,c),f=new zv(m);return t.runWebGLProgram(f,[n],a.dtype)}var pF={kernelName:Bl,backendName:"webgl",kernelFunc:MY};function LY(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,input:s}=e,a=s;qi([n,s],"avgPoolGrad");let{filterSize:i,strides:l,pad:u}=o,c=N.computePool2DInfo(a.shape,i,l,1,u),p=new Lv(c);return t.runWebGLProgram(p,[n],a.dtype)}var mF={kernelName:zl,backendName:"webgl",kernelFunc:LY};function zY(r){let{inputs:e,backend:t,attrs:o}=r,{a:n,b:s}=e,{transposeA:a,transposeB:i}=o;return ic({a:n,b:s,transposeA:a,transposeB:i,backend:t})}var fF={kernelName:Xo,backendName:"webgl",kernelFunc:zY};var Bv=class{constructor(e,t,o,n,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,o);let i="0.0";n!=null&&(N.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="1.0";s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var Vv=class{constructor(e,t,o,n,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,o);let i="vec4(0.0)";n!=null&&(N.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="vec4(1.0)";s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var BY=({inputs:r,backend:e,attrs:t})=>{let{x:o,mean:n,variance:s,offset:a,scale:i}=r;x.assert(n.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),x.assert(a==null||n.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),x.assert(i==null||n.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);let u=[o,n,s],c=null;a!=null&&(c=a.shape,u.push(a));let p=null;i!=null&&(p=i.shape,u.push(i));let m=W().getBool("WEBGL_PACK_NORMALIZATION")?new Vv(o.shape,n.shape,s.shape,c,p,l):new Bv(o.shape,n.shape,s.shape,c,p,l);return e.runWebGLProgram(m,u,u[0].dtype)},dF={kernelName:an,backendName:"webgl",kernelFunc:BY};var Gv=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=Le(this.rank),o=`uniform int start[${this.rank}];`,n=VY(this.rank),s,a=e.map((i,l)=>`sourceLoc.${Wv[l]} = start[${l}] + coords.${Wv[l]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${a.join(`
`)}
      `,this.userCode=`
      ${o}
      void main() {
        ${s}
        setOutput(getSource(${n}));
      }
    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,o)=>{this.startLoc==null&&(this.startLoc=t.getUniformLocationNoThrow(o,"start"),this.startLoc==null)||t.gl.uniform1iv(this.startLoc,e)}}},Wv=["x","y","z","w","u","v"];function VY(r){if(r===1)return"sourceLoc";if(r<=6)return Wv.slice(0,r).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var Uv=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;let t=Le(this.rank),o=Ut("coords",this.rank),n=Ut("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${n.slice(-2).join()})`,a=`getChannel(getSource(${n.join()}), ${s})`,i=`
      result.x = ${a};
      if (++${o[this.rank-1]} < ${e[this.rank-1]}) {
        ++${n[this.rank-1]};
        result.y = ${a};
        --${n[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${o[this.rank-1]};
      if (++${o[this.rank-2]} < ${e[this.rank-2]}) {
        ++${n[this.rank-2]};
        result.z = ${a};
        if (++${o[this.rank-1]} < ${e[this.rank-1]}) {
          ++${n[this.rank-1]};
          result.w = ${a};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,p)=>`start[${p}]`).join()});`:e.map((c,p)=>`${n[p]} = ${o[p]} + start[${p}];`).join(`
`);this.userCode=`
      uniform int start[${this.rank}];
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${i}
        ${l}
        setOutput(result);
      }
    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,o)=>{this.startLoc==null&&(this.startLoc=t.getUniformLocationNoThrow(o,"start"),this.startLoc==null)||t.gl.uniform1iv(this.startLoc,e)}}};function GY(r,e,t,o){let n=o.texData.get(r.dataId),s=o.makeTensorInfo(t,r.dtype),a=o.texData.get(s.dataId);Object.assign(a,n),a.refCount=1,a.shape=t,a.dtype=r.dtype;let i=nr.computeFlatOffset(e,x.computeStrides(r.shape));n.slice&&(i+=n.slice.flatOffset),a.slice={flatOffset:i,origDataId:n.slice&&n.slice.origDataId||r.dataId};let l=o.dataRefCount.get(a.slice.origDataId)||1;return o.dataRefCount.set(a.slice.origDataId,l+1),s}function Va(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{begin:s,size:a}=o,[i,l]=nr.parseSliceParams(n,s,a);if(nr.assertParamsValid(n,i,l),x.sizeFromShape(l)===0)return t.makeTensorInfo(l,n.dtype,[]);if(t.shouldExecuteOnCPU([n])||n.dtype==="string"){let p=t.texData.get(n.dataId),m=mR(p.values,i,l,n.shape,n.dtype);return t.makeTensorInfo(l,n.dtype,m)}let{isPacked:u}=t.texData.get(n.dataId),c=nr.isSliceContinous(n.shape,i,l);if(u||!c){let p=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Uv(l):new Gv(l),m=p.getCustomSetupFunc(i);return t.runWebGLProgram(p,[n],n.dtype,m)}return t.uploadToGPU(n.dataId),GY(n,i,l,t)}var hF={kernelName:gs,backendName:"webgl",kernelFunc:Va};var WY=r=>{let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{blockShape:s,crops:a}=o;x.assert(n.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((b,w)=>b*w),l=N.getReshaped(n.shape,s,i),u=N.getPermuted(l.length,s.length),c=N.getReshapedPermuted(n.shape,s,i),p=N.getSliceBeginCoords(a,s.length),m=N.getSliceSize(c,a,s.length),f=[],d=pe({inputs:{x:n},backend:t,attrs:{shape:l}}),h=Mt({inputs:{x:d},backend:t,attrs:{perm:u}}),g=pe({inputs:{x:h},backend:t,attrs:{shape:c}}),y=Va({inputs:{x:g},backend:t,attrs:{begin:p,size:m}});return f.push(d),f.push(h),f.push(g),f.forEach(b=>t.disposeIntermediateTensorInfo(b)),y},gF={kernelName:ra,backendName:"webgl",kernelFunc:WY};function UY(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,weights:s}=e,{size:a}=o,i=t.readSync(n.dataId),l=t.readSync(s.dataId),u=Tx(i,l,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,u)}var xF={kernelName:Vl,backendName:"webgl",kernelFunc:UY};var jY="return float(a != b);",jv=nt({opSnippet:jY,dtype:"bool"}),yF={kernelName:gi,backendName:"webgl",kernelFunc:jv};function Ga(r){let{inputs:e,backend:t}=r,{input:o}=e,n=t.texData.get(o.dataId);return jt({inputs:{x:n.complexTensorInfos.real},backend:t})}var bF={kernelName:iu,backendName:"webgl",kernelFunc:Ga};var HY="return float(int(x));";function wF(r,e){let t=new ho(r.shape,HY),o=e.runWebGLProgram(t,[r],"int32");return{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}function Hv(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{dtype:s}=o;if(s==="complex64"){if(n.dtype==="complex64")return jt({inputs:{x:n},backend:t});let a=ht(n.shape),i=Hv({inputs:{x:n},backend:t,attrs:{dtype:"float32"}}),l=go({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(i),l}if(n.dtype==="complex64"){let a=Ga({inputs:{input:n},backend:t}),i=Hv({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),i}if(!x.hasEncodingLoss(n.dtype,s)){let a=jt({inputs:{x:n},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32")return wF(n,t);if(s==="bool"){let a=t.makeTensorInfo([],"bool",x.getTypedArrayFromDType("bool",1)),l=jv({inputs:{a:n,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),l}throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${s}`)}var _F={kernelName:Do,backendName:"webgl",kernelFunc:Hv};var kF="return ceil(x);",qY=_e({opSnippet:kF,packedOpSnippet:kF,cpuKernelImpl:K$}),vF={kernelName:Yo,backendName:"webgl",kernelFunc:qY};var qv=class{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}getCustomSetupFunc(e,t){return(o,n)=>{this.minLoc==null&&(this.minLoc=o.getUniformLocationNoThrow(n,"minVal"),this.maxLoc=o.getUniformLocationNoThrow(n,"maxVal")),o.gl.uniform1f(this.minLoc,e),o.gl.uniform1f(this.maxLoc,t)}}};var Kv=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}getCustomSetupFunc(e,t){return(o,n)=>{this.minLoc==null&&(this.minLoc=o.getUniformLocationNoThrow(n,"minVal"),this.maxLoc=o.getUniformLocationNoThrow(n,"maxVal")),o.gl.uniform1f(this.minLoc,e),o.gl.uniform1f(this.maxLoc,t)}}};function KY(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{clipValueMin:s,clipValueMax:a}=o,i;W().getBool("WEBGL_PACK_CLIP")?i=new Kv(n.shape):i=new qv(n.shape);let l=i.getCustomSetupFunc(s,a);return t.runWebGLProgram(i,[n],n.dtype,l)}var CF={kernelName:$o,backendName:"webgl",kernelFunc:KY};var Xv=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function IF(r,e){return{dataId:e.dataId,dtype:e.dtype,shape:r.shape}}function XY(r){let{inputs:e,backend:t}=r,{x:o}=e,n=t.texData.get(o.dataId),s=new Xv(o.shape),a=[IF(o,n.complexTensorInfos.real),IF(o,n.complexTensorInfos.imag)];return t.runWebGLProgram(s,a,a[0].dtype)}var NF={kernelName:oa,backendName:"webgl",kernelFunc:XY};var Yv=class{constructor(e){this.outputShape=[],this.outputShape=N.computeOutShape(e,1),this.variableNames=e.map((a,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let o=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let i=t[a-1];o.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}let n=t.length,s=t[t.length-1];o.push(`else setOutput(getT${n}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${o.join(`
        `)}
      }
    `}};var Zv=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=N.computeOutShape(e,t);let o=this.outputShape,n=o.length,s=Le(n),a=Ut("coords",n),i=["x","y","z","w","u","v"].slice(0,n);this.variableNames=e.map((h,g)=>`T${g}`);let l=new Array(e.length-1);l[0]=e[0][t];for(let h=1;h<l.length;h++)l[h]=l[h-1]+e[h][t];let u=i[t],c=i.slice(-2),p=i.join(),m=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${p}), vec2(${c.join()}));
        }`;for(let h=1;h<l.length;h++){let g=l[h-1];m+=`
        if (${u} < ${l[h]}  && ${u} >= ${l[h-1]}) {
          return getChannel(
            getT${h}(${Mx(i,u,g)}),
            vec2(${Mx(c,u,g)}));
        }`}let f=l.length,d=l[l.length-1];m+=`
        return getChannel(
          getT${f}(${Mx(i,u,d)}),
          vec2(${Mx(c,u,d)}));`,this.userCode=`
      float getValue(${i.map(h=>"int "+h)}) {
        ${m}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[n-1]} = ${a[n-1]} + 1;
        if (${a[n-1]} < ${o[n-1]}) {
          result.g = getValue(${a});
        }

        ${a[n-2]} = ${a[n-2]} + 1;
        if (${a[n-2]} < ${o[n-2]}) {
          result.a = getValue(${a});
        }

        ${a[n-1]} = ${a[n-1]} - 1;
        if (${a[n-2]} < ${o[n-2]} &&
            ${a[n-1]} < ${o[n-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function Mx(r,e,t){let o=r.indexOf(e);return r.map((s,a)=>a===o?`${s} - ${t}`:s).join()}function lc(r){let{inputs:e,backend:t}=r,{input:o}=e,n=t.texData.get(o.dataId);return jt({inputs:{x:n.complexTensorInfos.imag},backend:t})}var SF={kernelName:Ql,backendName:"webgl",kernelFunc:lc};function uc(r,e,t){let o=r[0].dtype;if(o==="complex64"){let u=r.map(d=>Ga({inputs:{input:d},backend:t})),c=r.map(d=>lc({inputs:{input:d},backend:t})),p=uc(u,e,t),m=uc(c,e,t),f=go({inputs:{real:p,imag:m},backend:t});return u.forEach(d=>t.disposeIntermediateTensorInfo(d)),c.forEach(d=>t.disposeIntermediateTensorInfo(d)),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),f}if(o==="string"){let{tensors2D:u,outShape:c}=TF(r,e,t),p=u.map(g=>({vals:t.readSync(g.dataId),shape:g.shape})),m=u[0].shape[0]===1,f=X$(p,c,o,m),d=N.computeOutShape(r.map(g=>g.shape),e),h=t.makeTensorInfo(d,o,f);return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}if(r.length>W().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(r.length/2),c=uc(r.slice(0,u),e,t),p=uc(r.slice(u),e,t),m=uc([c,p],e,t);return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),m}if(W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1){let u=new Zv(r.map(c=>c.shape),e);return t.runWebGLProgram(u,r,o)}let{tensors2D:n,outShape:s}=TF(r,e,t),a=new Yv(n.map(u=>u.shape)),i=t.runWebGLProgram(a,n,o);n.forEach(u=>t.disposeIntermediateTensorInfo(u));let l=pe({inputs:{x:i},attrs:{shape:s},backend:t});return t.disposeIntermediateTensorInfo(i),l}function TF(r,e,t){let o=N.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>pe({inputs:{x:s},attrs:{shape:[-1,x.sizeFromShape(s.shape.slice(e))]},backend:t})),outShape:o}}function Jv(r){let{inputs:e,backend:t,attrs:o}=r,{axis:n}=o,s=x.parseAxisParam(n,e[0].shape)[0],a=N.computeOutShape(e.map(u=>u.shape),s);if(x.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(u=>x.sizeFromShape(u.shape)>0);if(i.length===1)return jt({inputs:{x:i[0]},backend:t});let l=i.map(u=>u.shape);return N.assertParamsConsistent(l,s),uc(i,s,t)}var AF={kernelName:ls,backendName:"webgl",kernelFunc:Jv};var rh=class{constructor(e,t=!1,o=null,n=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,i=e.padInfo.left,l=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,p=e.dilationWidth,m=e.filterHeight,f=e.filterWidth,d=Math.floor(e.inChannels/4)*4,h=e.inChannels%4,g=e.dataFormat==="channelsLast",y=g?1:2,b=g?2:3,w=g?3:1,_="",C="";o&&(n?_=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:s?_=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:_=`
          float activation(float x) {
            ${o}
          }
        `,C="result = activation(result);");let D=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${_}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${m}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${d}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${h===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${d}) *
                    getW(wR, wC, ${d}, d2);
              } else {
                dotProd +=
                    getX(batch, ${d}, xR, xC) *
                    getW(wR, wC, ${d}, d2);
              }

            } else if (${h===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${h===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2),
                getW(wR, wC, ${d} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1),
                  getX(batch, xR, xC, ${d} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC),
                  getX(batch, ${d} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${D}
        ${C}
        setOutput(result);
      }
    `}},Qv=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,o=e.padInfo.top,n=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,p=e.filterDepth,m=e.filterHeight,f=e.filterWidth,d=Math.floor(e.inChannels/4)*4,h=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${o}, ${n});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${d}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${h===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${d}) *
                  getW(wF, wR, wC, ${d}, d2);
              } else if (${h===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${h===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1),
                  getX(batch, xF, xR, xC, ${d} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2),
                  getW(wF, wR, wC, ${d} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var eC=class{constructor(e,t,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let{filterWidth:n,inChannels:s,strideWidth:a,strideHeight:i,padInfo:l,outWidth:u,dilationWidth:c,dilationHeight:p,dataFormat:m}=o,{left:f,top:d}=l,h=s*n,g=Ot(),y=m==="channelsLast",b=y?0:1,w=y?1:2,_="";for(let C=0;C<=1;C++)for(let D=0;D<=1;D++)_+=`
          blockIndex = rc.y + ${D};
          pos = rc.x + ${C};

          if(blockIndex < ${e[1]} && pos < ${e[0]}) {
            offsetY = int(blockIndex / (${u})) * ${i} - ${d};
            d0 = offsetY + ${p} * (pos / ${h});

            if(d0 < ${t[b]} && d0 >= 0) {

              offsetX = int(mod(float(blockIndex), ${u}.) * ${a}. - ${f}.);
              d1 = offsetX + ${c} * (int(mod(float(pos), ${h}.) / ${s}.));

              if(d1 < ${t[w]} && d1 >= 0) {

                ch = int(mod(float(pos), ${s}.));

                if (${y}) {
                  innerDims = vec2(d1, ch);
                  result[${C*2+D}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${C*2+D}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${_}

        ${g.output} = result;
      }
    `}};function Lx({x:r,filter:e,convInfo:t,backend:o,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let l=r.shape,u=o.texData.get(r.dataId),c=t.inChannels,p=l[0]*l[1]*l[2],m=t.outChannels,f=t.dataFormat==="channelsLast",d=!1,h=!1,g,y=[],b=(p===1||m===1)&&c>Rv,w=l[2]%2!=0&&!!u.isPacked;if(b||!W().getBool("WEBGL_LAZILY_UNPACK")||!W().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!w){let _=f?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],C=pe({inputs:{x:r},backend:o,attrs:{shape:[1,_,t.inChannels]}}),D=pe({inputs:{x:e},backend:o,attrs:{shape:[1,t.inChannels,t.outChannels]}}),T=ic({a:C,b:D,transposeA:d,transposeB:h,backend:o,bias:n,activation:i,preluActivationWeights:s,leakyreluAlpha:a});g=pe({inputs:{x:T},backend:o,attrs:{shape:t.outShape}}),y.push(C),y.push(D),y.push(T)}else{let _=f?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),C={dataId:r.dataId,shape:[1,_,t.inChannels],dtype:r.dtype},D=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,x.assert(nc(u.shape,C.shape),()=>`packed reshape ${u.shape} to ${C.shape} isn't free`);let T=pe({inputs:{x:e},backend:o,attrs:{shape:[1,t.inChannels,t.outChannels]}});y.push(T);let R=ic({a:C,b:T,backend:o,transposeA:d,transposeB:h,bias:n,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),P=o.texData.get(R.dataId);x.assert(P.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=D,P.shape=t.outShape,g=jt({inputs:{x:R},backend:o}),g.shape=t.outShape,y.push(R)}for(let _ of y)o.disposeIntermediateTensorInfo(_);return g}function zx({x:r,filter:e,convInfo:t,backend:o,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let{filterWidth:l,filterHeight:u,inChannels:c,outWidth:p,outHeight:m,dataFormat:f}=t,d=f==="channelsLast",h=l*u*c,g=m*p,y=[h,g],b=!0,w=!1,_=[],C=pe({inputs:{x:r},backend:o,attrs:{shape:r.shape.slice(1)}}),D=pe({inputs:{x:e},backend:o,attrs:{shape:[1,h,x.sizeFromShape(e.shape)/h]}});_.push(C),_.push(D);let T=new eC(y,C.shape,t),R=o.runWebGLProgram(T,[C],"float32"),P=pe({inputs:{x:R},backend:o,attrs:{shape:[1,y[0],y[1]]}});_.push(R),_.push(P);let B=n!=null,G=s!=null,U=i==="leakyrelu",j=i?Tl(i,!0):null,H=new eh(P.shape,D.shape,[1,g,t.outChannels],b,w,B,j,G,U),K=[P,D];if(n&&K.push(n),G&&K.push(s),U){let re=o.makeTensorInfo([],"float32",x.createScalarValue(a,"float32"));K.push(re),_.push(re)}let X=o.runWebGLProgram(H,K,"float32"),oe=d?[1,m,p,t.outChannels]:[1,t.outChannels,m,p],Y=pe({inputs:{x:X},backend:o,attrs:{shape:oe}});_.push(X);for(let re of _)o.disposeIntermediateTensorInfo(re);return Y}function YY(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s}=e,{strides:a,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=o,p=N.convertConv2DDataFormat(l),m=N.computeConv2DInfo(n.shape,s.shape,a,u,i,c,!1,p),f;if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))f=Lx({x:n,filter:s,convInfo:m,backend:t});else if(W().getBool("WEBGL_CONV_IM2COL")&&n.shape[0]===1)f=zx({x:n,filter:s,convInfo:m,backend:t});else{let h=new rh(m);f=t.runWebGLProgram(h,[n,s],"float32")}let d=pe({inputs:{x:f},backend:t,attrs:{shape:m.outShape}});return t.disposeIntermediateTensorInfo(f),d}var EF={kernelName:Zo,backendName:"webgl",kernelFunc:YY};var tC=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,o=e.strideWidth,n=e.padInfo.top,s=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${n};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${o} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},rC=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,o=e.filterWidth,n=e.strideHeight,s=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,l=o-1-e.padInfo.left,u=a?1:2,c=a?2:3,p=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${o} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},oC=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,o=e.strideHeight,n=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${s};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${o} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${n} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},nC=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,o=e.filterHeight,n=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,l=t-1-e.padInfo.front,u=o-1-e.padInfo.top,c=n-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${o}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${o} - 1 - wR;

            for (int wC = 0; wC < ${n}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${n} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function ZY(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,dy:s}=e,{strides:a,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=o,p=N.convertConv2DDataFormat(l),m=N.computeConv2DInfo(n.shape,c,a,1,i,u,!1,p),f=new tC(m);return t.runWebGLProgram(f,[n,s],"float32")}var DF={kernelName:Wl,backendName:"webgl",kernelFunc:ZY};function JY(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,filter:s}=e,{inputShape:a,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=o,p=N.convertConv2DDataFormat(u),m=N.computeConv2DInfo(a,s.shape,i,1,l,c,!1,p),f=new rC(m);return t.runWebGLProgram(f,[n,s],"float32")}var $F={kernelName:Jo,backendName:"webgl",kernelFunc:JY};function QY(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s}=e,{strides:a,pad:i,dilations:l}=o,u=N.computeConv3DInfo(n.shape,s.shape,a,l,i),c=new Qv(u);return t.runWebGLProgram(c,[n,s],"float32")}var RF={kernelName:na,backendName:"webgl",kernelFunc:QY};function e7(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,dy:s}=e,{strides:a,pad:i,filterShape:l}=o,u=N.computeConv3DInfo(n.shape,l,a,1,i),c=new oC(u);return t.runWebGLProgram(c,[n,s],"float32")}var FF={kernelName:Ul,backendName:"webgl",kernelFunc:e7};function t7(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,filter:s}=e,{pad:a,strides:i,inputShape:l}=o,u=N.computeConv3DInfo(l,s.shape,i,1,a),c=new nC(u);return t.runWebGLProgram(c,[n,s],"float32")}var OF={kernelName:jl,backendName:"webgl",kernelFunc:t7};var r7=$x+`
  return cos(x);
`,o7=_e({opSnippet:r7}),PF={kernelName:Qo,backendName:"webgl",kernelFunc:o7};var n7=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,s7=_e({opSnippet:n7}),MF={kernelName:Js,backendName:"webgl",kernelFunc:s7};var sC=class{constructor(e,t,o,n,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,i,l,u]=e,[c]=t,[p,m]=o;this.outputShape=[c,p,m,u];let f=n==="bilinear"?1:0,[d,h]=[`${i-1}.0`,`${l-1}.0`],[g,y,b]=p>1?[`${(i-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[w,_,C]=m>1?[`${(l-1)/(m-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${_};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${d} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${C};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var i7=r=>{let{inputs:e,backend:t,attrs:o}=r,{image:n,boxes:s,boxInd:a}=e,{cropSize:i,method:l,extrapolationValue:u}=o,c=new sC(n.shape,s.shape,i,l,u);return t.runWebGLProgram(c,[n,s,a],"float32")},LF={kernelName:Qs,backendName:"webgl",kernelFunc:i7};var Bx=class{constructor(e,t,o){this.variableNames=["x"],this.outputShape=e;let n=e.length,s=t?"0.0":`getX(${zF(n,"coords")})`,a=e[e.length-1],i="",l="";t?(i=o?`end != ${a-1}`:"end != 0",l=o?"end + 1":"end - 1"):(i=o?`end + pow2 < ${a}`:"end >= pow2",l=o?"end + pow2":"end - pow2"),this.userCode=`
      uniform float index;
      void main() {
        ${Le(n)} coords = getOutputCoords();
        int end = ${BF(n,"coords")};
        float val = ${s};
        int pow2 = int(pow(2.0, index));
        if (${i}) {
          int idx = ${l};
          ${BF(n,"coords")} = idx;
          val += getX(${zF(n,"coords")});
        }
        setOutput(val);
      }
    `}getCustomSetupFunc(e){return(t,o)=>{this.index==null&&(this.index=t.getUniformLocation(o,"index")),t.gl.uniform1f(this.index,e)}}};function zF(r,e){if(r===1)return`${e}`;if(r===2)return`${e}.x, ${e}.y`;if(r===3)return`${e}.x, ${e}.y, ${e}.z`;if(r===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${r} is not yet supported`)}function BF(r,e){if(r===1)return`${e}`;if(r===2)return`${e}.y`;if(r===3)return`${e}.z`;if(r===4)return`${e}.w`;throw Error(`Cumulative sum for rank ${r} is not yet supported`)}function a7(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,exclusive:a,reverse:i}=o,l=n.shape.length,u=N.getAxesPermutation([s],l),c=n;u!=null&&(c=Mt({inputs:{x:n},backend:t,attrs:{perm:u}}));let p=N.getInnerMostAxes(1,l)[0];if(p!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${n.shape.length-1} but got axis=${s}`);let m=c.shape[p],f=jt({inputs:{x:c},backend:t});for(let d=0;d<=Math.ceil(Math.log2(m))-1;d++){let h=new Bx(c.shape,!1,i),g=h.getCustomSetupFunc(d),y=f;f=t.runWebGLProgram(h,[f],f.dtype,g),t.disposeIntermediateTensorInfo(y)}if(a){let d=new Bx(c.shape,a,i),h=f;f=t.runWebGLProgram(d,[f],f.dtype),t.disposeIntermediateTensorInfo(h)}if(u!=null){let d=N.getUndoAxesPermutation(u),h=Mt({inputs:{x:f},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(c),h}return f}var VF={kernelName:en,backendName:"webgl",kernelFunc:a7};function l7(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,weights:s}=e,{size:a,binaryOutput:i}=o;if(n.shape.length===1){let l=t.readSync(n.dataId),u=t.readSync(s.dataId),c=Tx(l,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,c)}else if(n.shape.length===2){let l=t.bufferSync(n),u=t.bufferSync(s),c=q$(l,u,a,i);return t.makeTensorInfo(c.shape,s.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${n.shape.length}.`)}var GF={kernelName:Hl,backendName:"webgl",kernelFunc:l7};var iC=class{constructor(e,t,o){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=o,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function u7(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{blockSize:s,dataFormat:a}=o;x.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);let i=n.shape[0],l=a==="NHWC"?n.shape[1]:n.shape[2],u=a==="NHWC"?n.shape[2]:n.shape[3],c=a==="NHWC"?n.shape[3]:n.shape[1],p=l*s,m=u*s,f=c/(s*s),d=a==="NHWC"?[i,p,m,f]:[i,f,p,m],h=new iC(d,s,a);return t.runWebGLProgram(h,[n],n.dtype)}var WF={kernelName:ei,backendName:"webgl",kernelFunc:u7};var oh=class{constructor(e,t=!1,o=null,n=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.inHeight,i=e.inWidth,l=e.padInfo.top,u=e.padInfo.left,c=e.strideHeight,p=e.strideWidth,m=e.dilationHeight,f=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,g=e.outChannels/e.inChannels,y="",b="";o&&(n?y=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:s?y=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:y=`
          float activation(float x) {
            ${o}
          }
        `,b="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      const ivec2 strides = ivec2(${c}, ${p});
      const ivec2 pads = ivec2(${l}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${g};
        int q = d2 - d1 * ${g};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${m};

          if (xR < 0 || xR >= ${a}) {
            continue;
          }

          for (int wC = 0; wC < ${h}; wC++) {
            int xC = xCCorner + wC * ${f};

            if (xC < 0 || xC >= ${i}) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${w}
        ${b}
        setOutput(result);
      }
    `}};var nh=class{constructor(e,t=!1,o=null,n=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;let a=e.inHeight,i=e.inWidth,l=e.padInfo.top,u=e.padInfo.left,c=e.strideHeight,p=e.strideWidth,m=e.dilationHeight,f=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,g=h,y="int xR; int xC; int xCOffset;";for(let C=0;C<d;C++)for(let D=0;D<h;D++)y+=`
          vec4 xTexelR${C}C${D*2} = vec4(0.);
          vec4 wR${C}C${D} = vec4(0.);
          vec4 xR${C}C${D} = vec4(0.);`;for(let C=0;C<d;C++)for(let D=0;D<g;D++){let T=D*2;if(y+=`
          xR = xRCorner + ${C*m};
          xC = xCCorner + ${T*f};
        `,p===1){if(T<h&&(u%2==1?y+=`
                xCOffset = xC + 1;
                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${C}C${T} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${i}) {
                    xTexelR${C}C${T}.zw = vec2(0.);
                  }
                } else {
                  xTexelR${C}C${T} = vec4(0.);
                }

                xCOffset = xC + 1 - 2;
                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {
                  vec4 previous = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${i}) {
                    previous.zw = vec2(0.);
                  }

                  xR${C}C${T} = vec4(previous.zw, xTexelR${C}C${T}.xy);
                } else {
                  xR${C}C${T} = vec4(0, 0, xTexelR${C}C${T}.xy);
                }
              `:y+=`
                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${i}) {
                  xTexelR${C}C${T} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${C}C${T} = vec4(0.);
                }

                xR${C}C${T} = xTexelR${C}C${T};
              `,T+1<h)){let R=u%2==0?x.nearestLargerEven(f):f;f%2==0&&u%2==1||f%2!=0&&u%2!=1?(y+=`
                  xCOffset = xC + ${u%2} + ${R};

                  if(xR >= 0 && xR < ${a} &&
                    xCOffset >= 0 && xCOffset < ${i}) {
                    xTexelR${C}C${T+2} = getX(batch, xR, xCOffset, d1);
                  }
                `,f>1&&(y+=`
                    xCOffset -= 2;
                    if(xR >= 0 && xR < ${a} &&
                      xCOffset >= 0 && xCOffset < ${i}) {
                      xTexelR${C}C${T} = getX(batch, xR, xCOffset, d1);
                    } else {
                      xTexelR${C}C${T} = vec4(0.);
                    }
                  `),y+=`
                  xR${C}C${T+1} = vec4(
                    xTexelR${C}C${T}.zw, xTexelR${C}C${T+2}.xy);
                `):y+=`
                  xCOffset = xC + ${R};

                  if(xR >= 0 && xR < ${a} &&
                    xCOffset >= 0 && xCOffset < ${i}) {
                    xTexelR${C}C${T+2} = getX(batch, xR, xCOffset, d1);
                  }

                  xR${C}C${T+1} = xTexelR${C}C${T+2};
                `}}else T<h&&(y+=`
              if(xR >= 0 && xR < ${a}) {
            `,u%2==1?(y+=`
                xCOffset = xC + 1 - ${p};
                if(xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${C}C${T} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${C}C${T} = vec4(0.);
                }

                if(xC + 1 >= 0 && xC + 1 < ${i}) {
                  xTexelR${C}C${T+2} = getX(batch, xR, xC + 1, d1);
                } else {
                  xTexelR${C}C${T+2} = vec4(0.);
                }

                xR${C}C${T} = vec4(
                  xTexelR${C}C${T}.zw, xTexelR${C}C${T+2}.zw);
              `,T+1<h&&(y+=`
                  vec4 final = vec4(0.);
                  xCOffset = xC + 1 + ${p};
                  if(xCOffset >= 0 && xCOffset < ${i}) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xR${C}C${T+1} = vec4(xTexelR${C}C${T+2}.xy, final.xy);
                `)):(y+=`
                if(xC >= 0 && xC < ${i}) {
                  xTexelR${C}C${T} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${C}C${T} = vec4(0.);
                }

                xCOffset = xC + ${p};
                if(xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${C}C${T+2} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${C}C${T+2} = vec4(0.);
                }

                xR${C}C${T} = vec4(
                  xTexelR${C}C${T}.xy, xTexelR${C}C${T+2}.xy);
              `,T+1<h&&(y+=`
                  xR${C}C${T+1} = vec4(
                    xTexelR${C}C${T}.zw, xTexelR${C}C${T+2}.zw);
                `)),y+="}");T<h&&(y+=`
            vec4 wTexelR${C}C${T} = getW(${C}, ${T}, d1, q);
            wR${C}C${T} = vec4(wTexelR${C}C${T}.xz, wTexelR${C}C${T}.xz);
          `,T+1<h&&(y+=`
              vec4 wTexelR${C}C${T+1} = getW(${C}, ${T+1}, d1, q);
              wR${C}C${T+1} =
                vec4(wTexelR${C}C${T+1}.xz, wTexelR${C}C${T+1}.xz);`))}for(let C=0;C<d;C++)for(let D=0;D<h;D++)y+=`dotProd += xR${C}C${D} * wR${C}C${D};`;let b="",w="";o&&(n?b=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:s?b=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:b=`vec4 activation(vec4 x) {
          ${o}
        }`,w="result = activation(result);");let _=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      const ivec2 strides = ivec2(${c}, ${p});
      const ivec2 pads = ivec2(${l}, ${u});

      void main() {

        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2;
        int q = 0;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        vec4 dotProd = vec4(0.);

        ${y}

        vec4 result = dotProd;
        ${_}
        ${w}
        setOutput(result);
      }
    `}};function c7(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s}=e,{strides:a,pad:i,dilations:l,dimRoundingMode:u}=o,c=l;c==null&&(c=[1,1]),x.assert(N.eitherStridesOrDilationsAreOne(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let p=N.computeConv2DInfo(n.shape,s.shape,a,c,i,u,!0),m;return W().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?m=new nh(p):m=new oh(p),t.runWebGLProgram(m,[n,s],"float32")}var UF={kernelName:tn,backendName:"webgl",kernelFunc:c7};var aC=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,o=e.strideWidth,n=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${n};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${o} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},lC=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,o=e.filterWidth,n=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=o-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${o} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function p7(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,dy:s}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=o,p=N.computeConv2DInfo(n.shape,c,a,i,l,u,!0),m=new aC(p);return t.runWebGLProgram(m,[n,s],"float32")}var jF={kernelName:ql,backendName:"webgl",kernelFunc:p7};function m7(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,filter:s}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=o,p=N.computeConv2DInfo(c,s.shape,a,i,l,u,!0),m=new lC(p);return t.runWebGLProgram(m,[n,s],"float32")}var HF={kernelName:Kl,backendName:"webgl",kernelFunc:m7};var uC=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function f7(r){let{inputs:e,backend:t}=r,{x:o}=e,n=[...o.shape,...o.shape],s=x.sizeFromShape(o.shape),a=pe({inputs:{x:o},backend:t,attrs:{shape:[s]}}),i=new uC(s),l=t.runWebGLProgram(i,[a],a.dtype),u=pe({inputs:{x:l},backend:t,attrs:{shape:n}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}var qF={kernelName:Xl,backendName:"webgl",kernelFunc:f7};var cC=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:o,padInfo:n,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:l,dilationHeight:u,dilationWidth:c}=e,{top:p,left:m}=n;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${a});
      const ivec2 pads = ivec2(${p}, ${m});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${o}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function d7(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s}=e,{strides:a,pad:i,dilations:l}=o,u=N.computeDilation2DInfo(n.shape,s.shape,a,i,"NHWC",l),c,p=new cC(u);c=t.runWebGLProgram(p,[n,s],"float32");let m=pe({inputs:{x:c},backend:t,attrs:{shape:u.outShape}});return t.disposeIntermediateTensorInfo(c),m}var KF={kernelName:sa,backendName:"webgl",kernelFunc:d7};var h7="return (x >= 0.0) ? x : (exp(x) - 1.0);",g7=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,x7=_e({opSnippet:h7,packedOpSnippet:g7}),XF={kernelName:ti,backendName:"webgl",kernelFunc:x7};var y7="return (b >= 1.0) ? a : a * (b + 1.0);",b7=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,w7=r=>{let{inputs:e,backend:t}=r,{dy:o,y:n}=e,s=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vs(b7,o.shape,n.shape):new rs(y7,o.shape,n.shape);return t.runWebGLProgram(s,[o,n],o.dtype)},YF={kernelName:Yl,backendName:"webgl",kernelFunc:w7};var _7=`
  return vec4(equal(a, b));
`,k7="return float(a == b);",v7=nt({opSnippet:k7,packedOpSnippet:_7,dtype:"bool"}),ZF={kernelName:oi,backendName:"webgl",kernelFunc:v7};var C7=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${N.ERF_P};
  float a1 = ${N.ERF_A1};
  float a2 = ${N.ERF_A2};
  float a3 = ${N.ERF_A3};
  float a4 = ${N.ERF_A4};
  float a5 = ${N.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,I7=_e({opSnippet:C7}),JF={kernelName:ri,backendName:"webgl",kernelFunc:I7};var QF="return exp(x);",pC=_e({opSnippet:QF,packedOpSnippet:QF,cpuKernelImpl:Y$}),eO={kernelName:on,backendName:"webgl",kernelFunc:pC};function Vx(r){let{inputs:e,attrs:t,backend:o}=r,{dim:n}=t,{input:s}=e,a=s.shape.length,i=s.shape.slice(),l=n;return n<0&&(x.assert(-(a+1)<=n,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+n+1),i.splice(l,0,1),pe({inputs:{x:s},backend:o,attrs:{shape:i}})}var tO={kernelName:us,backendName:"webgl",kernelFunc:Vx};var rO="return exp(x) - 1.0;",N7=_e({opSnippet:rO,packedOpSnippet:rO,cpuKernelImpl:Z$}),oO={kernelName:ni,backendName:"webgl",kernelFunc:N7};var Gx=class{constructor(e,t,o){this.variableNames=["real","imag"];let n=t[1];this.outputShape=t;let s=o?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=o?`${n}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${n});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${n}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function Wx(r,e,t){let o=t.texData.get(r.dataId),n=x.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],a=n/s,i=pe({inputs:{x:r},backend:t,attrs:{shape:[a,s]}}),l=i.shape,u=new Gx("real",l,e),c=new Gx("imag",l,e),p=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:l},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:l}],m=t.runWebGLProgram(u,p,"float32"),f=t.runWebGLProgram(c,p,"float32"),d=go({inputs:{real:m,imag:f},backend:t});t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f);let h=pe({inputs:{x:d},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(d),h}function S7(r){let{inputs:e,backend:t}=r,{input:o}=e;return Wx(o,!1,t)}var nO={kernelName:Zl,backendName:"webgl",kernelFunc:S7};var mC=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      uniform float value;
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}getCustomSetupFunc(e){return(t,o)=>{this.valueLoc==null&&(this.valueLoc=t.getUniformLocationNoThrow(o,"value")),t.gl.uniform1f(this.valueLoc,e)}}};function sh(r){let{backend:e,attrs:t}=r,{shape:o,value:n}=t,{dtype:s}=t;if(s=s||x.inferDtype(n),s==="string"){let a=x.getArrayFromDType(s,x.sizeFromShape(o));return a.fill(n),e.makeTensorInfo(o,s,a)}else{let a=new mC(o,n),i=a.getCustomSetupFunc(n);return e.runWebGLProgram(a,[],s,i)}}var sO={kernelName:ia,backendName:"webgl",kernelFunc:sh};var fC=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var iO={kernelName:si,backendName:"webgl",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,o=e,n=new fC(t.shape);return o.runWebGLProgram(n,[t],t.dtype)}};var aO="return floor(x);",T7=_e({opSnippet:aO,packedOpSnippet:aO,cpuKernelImpl:J$}),lO={kernelName:nn,backendName:"webgl",kernelFunc:T7};var A7=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,E7=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,D7=nt({opSnippet:A7,packedOpSnippet:E7,dtype:"int32"}),uO={kernelName:sn,backendName:"webgl",kernelFunc:D7};var dC=class{constructor(e){this.variableNames=["A"];let t=Ot(),[o,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}.0, ${o}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var hC=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=Ot(),[o,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${n}.0, ${o}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}};var cO={kernelName:$c,backendName:"webgl",kernelFunc:$7},Hp;function $7(r){let{inputs:e,backend:t,attrs:o}=r,{pixels:n}=e,{numChannels:s}=o,a=typeof HTMLVideoElement!="undefined"&&n instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&n instanceof HTMLImageElement,l=typeof ImageBitmap!="undefined"&&n instanceof ImageBitmap,[u,c]=a?[n.videoWidth,n.videoHeight]:[n.width,n.height],p=[c,u],m=[c,u,s];(i||a||l)&&(Hp==null&&(Hp=document.createElement("canvas").getContext("2d")),Hp.canvas.width=u,Hp.canvas.height=c,Hp.drawImage(n,0,0,u,c),n=Hp.canvas);let f=t.makeTensorInfo(p,"int32");t.texData.get(f.dataId).usage=Er.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(f.dataId),n);let d=W().getBool("WEBGL_PACK")?new hC(m):new dC(m),h=t.runWebGLProgram(d,[f],"int32");return t.disposeData(f.dataId),h}function R7(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=o,h=N.convertConv2DDataFormat(c),g=N.computeConv2DInfo(n.shape,s.shape,l,p,u,m,!1,h),y,b=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=Lx({x:n,filter:s,convInfo:g,backend:t,bias:a,activation:f,preluActivationWeights:i,leakyreluAlpha:d});else if(W().getBool("WEBGL_CONV_IM2COL")&&n.shape[0]===1)y=zx({x:n,filter:s,convInfo:g,backend:t,bias:a,activation:f,preluActivationWeights:i,leakyreluAlpha:d});else{let _=a!=null,C=i!=null,D=f==="leakyrelu",T=f?Tl(f,!1):null,R=new rh(g,_,T,C,D),P=[n,s];if(a&&P.push(a),i&&P.push(i),D){let B=t.makeTensorInfo([],"float32",x.createScalarValue(d,"float32"));P.push(B),b.push(B)}y=t.runWebGLProgram(R,P,"float32")}let w=pe({inputs:{x:y},backend:t,attrs:{shape:g.outShape}});return b.push(y),b.forEach(_=>t.disposeIntermediateTensorInfo(_)),w}var pO={kernelName:_s,backendName:"webgl",kernelFunc:R7};function F7(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:m,leakyreluAlpha:f}=o,d=[],h=c;h==null&&(h=[1,1]),x.assert(N.eitherStridesOrDilationsAreOne(l,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${h}'`);let g=N.computeConv2DInfo(n.shape,s.shape,l,h,u,p,!0),y=W().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=m?Tl(m,y):null,w=[n,s],_=a!=null,C=i!=null,D=m==="leakyrelu";if(_&&w.push(a),C&&w.push(i),D){let P=t.makeTensorInfo([],"float32",x.createScalarValue(f,"float32"));w.push(P),d.push(P)}let T;y?T=new nh(g,_,b,C,D):T=new oh(g,_,b,C,D);let R=t.runWebGLProgram(T,w,"float32");return d.forEach(P=>t.disposeIntermediateTensorInfo(P)),R}var mO={kernelName:ks,backendName:"webgl",kernelFunc:F7};var gC=class{constructor(e,t,o){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=o;let n=Le(t.length),s=Le(o.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${n} strides = ${n}(${this.strides});
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function O7(r){let{inputs:e,backend:t}=r,{params:o,indices:n}=e,s=n.shape,a=s[s.length-1],[i,l,u,c]=N.prepareAndValidate(o,n),p=pe({inputs:{x:n},backend:t,attrs:{shape:[l,a]}}),m=pe({inputs:{x:o},backend:t,attrs:{shape:[x.sizeFromShape(o.shape)/u,u]}}),f=new gC(a,c,[l,u]),d=t.runWebGLProgram(f,[m,p],m.dtype),h=pe({inputs:{x:d},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(d),h}var fO={kernelName:ii,backendName:"webgl",kernelFunc:O7};var xC=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let o=Le(this.rank),n=P7(e,2);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${n}));
      }
    `}};function P7(r,e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[];for(let n=0;n<r.length;n++)n===2?o.push("int(getIndices(resRC.x, resRC.z))"):o.push(`${t[n]}`);return o.join()}function M7(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,indices:s}=e,{axis:a,batchDims:i}=o,l=x.parseAxisParam(a,n.shape)[0],u=N.segment_util.collectGatherOpShapeInfo(n,s,l,i),c=x.sizeFromShape(s.shape),p=[],m=pe({inputs:{x:n},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=pe({inputs:{x:s},backend:t,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(m),p.push(f);let d=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([n,s])||n.dtype==="string"){let b=t.bufferSync(f),w=t.bufferSync(m),_=Q$(w,b,d);return p.forEach(C=>t.disposeIntermediateTensorInfo(C)),t.makeTensorInfo(u.outputShape,_.dtype,_.values)}let h=new xC(m.shape,d),g=t.runWebGLProgram(h,[m,f],m.dtype);p.push(g);let y=pe({inputs:{x:g},backend:t,attrs:{shape:u.outputShape}});return p.forEach(b=>t.disposeIntermediateTensorInfo(b)),y}var dO={kernelName:cs,backendName:"webgl",kernelFunc:M7};var L7="return float(a > b);",z7=`
  return vec4(greaterThan(a, b));
`,B7=nt({opSnippet:L7,packedOpSnippet:z7,cpuKernelImpl:eR,dtype:"bool"}),hO={kernelName:ai,backendName:"webgl",kernelFunc:B7};var V7="return float(a >= b);",G7=`
  return vec4(greaterThanEqual(a, b));
`,W7=nt({opSnippet:V7,packedOpSnippet:G7,dtype:"bool"}),gO={kernelName:ln,backendName:"webgl",kernelFunc:W7};function U7(r){let{inputs:e,backend:t}=r,{input:o}=e;return Wx(o,!0,t)}var xO={kernelName:Jl,backendName:"webgl",kernelFunc:U7};var j7="return float(!isnan(x) && !isinf(x));",H7=_e({opSnippet:j7,dtype:"bool"}),yO={kernelName:li,backendName:"webgl",kernelFunc:H7};var q7="return float(isinf(x));",K7=_e({opSnippet:q7,dtype:"bool"}),bO={kernelName:ui,backendName:"webgl",kernelFunc:K7};var X7="return float(isnan(x));",Y7=_e({opSnippet:X7,dtype:"bool"}),wO={kernelName:ci,backendName:"webgl",kernelFunc:Y7};var Z7="return float(a < b);",J7=`
  return vec4(lessThan(a, b));
`,Q7=nt({opSnippet:Z7,packedOpSnippet:J7,cpuKernelImpl:tR,dtype:"bool"}),_O={kernelName:pi,backendName:"webgl",kernelFunc:Q7};var eZ="return float(a <= b);",tZ=`
  return vec4(lessThanEqual(a, b));
`,rZ=nt({opSnippet:eZ,packedOpSnippet:tZ,dtype:"bool"}),kO={kernelName:mi,backendName:"webgl",kernelFunc:rZ};function oZ(r){let{backend:e,attrs:t}=r,{start:o,stop:n,num:s}=t,a=rR(o,n,s);return e.makeTensorInfo([a.length],"float32",a)}var vO={kernelName:eu,backendName:"webgl",kernelFunc:oZ};var nZ=`if (x < 0.0) return NAN;
  return log(x);`,sZ=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,iZ=_e({opSnippet:nZ,packedOpSnippet:sZ,cpuKernelImpl:oR}),CO={kernelName:cn,backendName:"webgl",kernelFunc:iZ};var aZ="return log(1.0 + x);",lZ=_e({opSnippet:aZ}),IO={kernelName:fi,backendName:"webgl",kernelFunc:lZ};var uZ="return float(a >= 1.0 && b >= 1.0);",cZ=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,pZ=nt({opSnippet:uZ,packedOpSnippet:cZ,dtype:"bool"}),NO={kernelName:di,backendName:"webgl",kernelFunc:pZ};var mZ="return float(!(x >= 1.0));",fZ=_e({opSnippet:mZ}),SO={kernelName:Ya,backendName:"webgl",kernelFunc:fZ};var dZ="return float(a >= 1.0 || b >= 1.0);",hZ=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,gZ=nt({opSnippet:dZ,packedOpSnippet:hZ,dtype:"bool"}),TO={kernelName:Za,backendName:"webgl",kernelFunc:gZ};var yC=class{constructor(e,t,o,n,s){this.variableNames=["x"],this.outputShape=[];let a=t,i=e[3]-1;this.outputShape=e;let l,u=`float(${o}) + float(${n}) * sum`;s===.5?l=`inversesqrt(${u})`:s===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}};var bC=class{constructor(e,t,o,n,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,i=e[3]-1;this.outputShape=e;let l,u=`float(${o}) + float(${n}) * sum`;s===.5?l=`inversesqrt(${u})`:s===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}};var xZ=r=>{let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{depthRadius:s,bias:a,alpha:i,beta:l}=o,u=W().getBool("WEBGL_PACK_NORMALIZATION")?new bC(n.shape,s,a,i,l):new yC(n.shape,s,a,i,l);return t.runWebGLProgram(u,[n],n.dtype)},AO={kernelName:aa,backendName:"webgl",kernelFunc:xZ};var wC=class{constructor(e,t,o,n,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=o,this.alpha=n,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${n}) * norm + float(${o});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${n})
                * float(${s})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var yZ=r=>{let{inputs:e,backend:t,attrs:o}=r,{x:n,y:s,dy:a}=e,{depthRadius:i,bias:l,alpha:u,beta:c}=o,p=new wC(n.shape,i,l,u,c);return t.runWebGLProgram(p,[n,s,a],n.dtype)},EO={kernelName:tu,backendName:"webgl",kernelFunc:yZ};function DO(r,e,t,o){let n=x.sizeFromShape(e),a=x.sizeFromShape(r.shape)/n,i=pe({inputs:{x:r},attrs:{shape:[a,n]},backend:o}),l=To(i,r.dtype,"max",o),u=pe({inputs:{x:l},attrs:{shape:t},backend:o});return o.disposeIntermediateTensorInfo(i),o.disposeIntermediateTensorInfo(l),u}function _C(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{reductionIndices:s,keepDims:a}=o,i=n.shape.length,l=x.parseAxisParam(s,n.shape),u=l,c=N.getAxesPermutation(u,i),p=c!=null,m=t.shouldExecuteOnCPU([n]),f=n;if(p){if(m){let w=t.texData.get(f.dataId).values,_=new Array(i);for(let T=0;T<_.length;T++)_[T]=n.shape[c[T]];let C=Up(w,n.shape,n.dtype,c,_);f=t.makeTensorInfo(_,n.dtype);let D=t.texData.get(f.dataId);D.values=C}else f=Al(n,c,t);u=N.getInnerMostAxes(u.length,i)}N.assertAxesAreInnerMostDims("max",u,i);let[d,h]=N.computeOutAndReduceShapes(f.shape,u),g=d;a&&(g=N.expandShapeToKeepDim(d,l));let y;if(m){let w=t.texData.get(f.dataId).values,_=nR(w,x.sizeFromShape(h),g,n.dtype);y=t.makeTensorInfo(g,n.dtype);let C=t.texData.get(y.dataId);C.values=_}else y=DO(f,h,g,t);return p&&t.disposeIntermediateTensorInfo(f),y}var $O={kernelName:pn,backendName:"webgl",kernelFunc:_C};var bZ=Dx+`
  return max(a, b);
`,wZ=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Sl+`
  return result;
`,_Z=nt({opSnippet:bZ,packedOpSnippet:wZ,cpuKernelImpl:sR}),RO={kernelName:mn,backendName:"webgl",kernelFunc:_Z};function kZ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e;qi(n,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:l}=o,u=1;x.assert(N.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let c=N.computePool2DInfo(n.shape,s,a,u,i,l);if(c.filterWidth===1&&c.filterHeight===1&&x.arraysEqual(c.inShape,c.outShape))return jt({inputs:{x:n},backend:t});let p=new Ki(c,"max",!1);return t.runWebGLProgram(p,[n],n.dtype)}var FO={kernelName:fn,backendName:"webgl",kernelFunc:kZ};function vZ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{filterSize:s,strides:a,pad:i,dataFormat:l,dimRoundingMode:u}=o,c=[1,1,1],p=N.computePool3DInfo(n.shape,s,a,c,i,u,l),m=new ac(p,"max",!1);return t.runWebGLProgram(m,[n],n.dtype)}var OO={kernelName:la,backendName:"webgl",kernelFunc:vZ};var kC=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,o=e.strideWidth,n=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,l=a-1-e.padInfo.left,u=s*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${n}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},vC=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,o=e.strideHeight,n=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,p=l-1-e.padInfo.front,m=u-1-e.padInfo.top,f=c-1-e.padInfo.left,d=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${m}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${n}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${d} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function CZ(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,input:s}=e,a=s,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=o,p=[1,1,1],m=N.computePool3DInfo(a.shape,i,l,p,u,c),f=new ac(m,"max",!0),d=t.runWebGLProgram(f,[a],a.dtype),h=new vC(m),g=t.runWebGLProgram(h,[n,d],a.dtype);return t.disposeIntermediateTensorInfo(d),g}var PO={kernelName:ou,backendName:"webgl",kernelFunc:CZ};function IZ(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,input:s,output:a}=e,i=s;qi([s,a],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=o,m=N.computePool2DInfo(i.shape,l,u,1,c,p),f=!0,d=new Ki(m,"max",f),h=t.runWebGLProgram(d,[i],i.dtype),g=new kC(m),y=t.runWebGLProgram(g,[n,h],i.dtype);return t.disposeIntermediateTensorInfo(h),y}var MO={kernelName:ru,backendName:"webgl",kernelFunc:IZ};function LO(r,e,t,o){let n=new Ki(t,"max",!1),s=o.runWebGLProgram(n,[r],"float32");n=new Ki(t,"max",!0,!0,e);let a=o.runWebGLProgram(n,[r],"float32");return[s,a]}var zO={kernelName:nu,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:o}=r,{filterSize:n,strides:s,pad:a,includeBatchInIndex:i}=e,l=t;x.assert(o.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.shape.length}.`);let u=[1,1];x.assert(N.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let c=N.computePool2DInfo(o.shape,n,s,u,a),[p,m]=LO(o,i,c,l);return[p,m]}};function BO(r,e,t,o){let n=x.sizeFromShape(e),a=x.sizeFromShape(r.shape)/n,i=pe({inputs:{x:r},attrs:{shape:[a,n]},backend:o}),l=To(i,"float32","mean",o),u=pe({inputs:{x:l},attrs:{shape:t},backend:o});return o.disposeIntermediateTensorInfo(i),o.disposeIntermediateTensorInfo(l),u}var VO={kernelName:dn,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:o}=r,{keepDims:n,axis:s}=e,a=t,i=o.shape.length,l=x.parseAxisParam(s,o.shape),u=l,c=N.getAxesPermutation(u,i),p=c!=null,m=a.shouldExecuteOnCPU([o]),f=[],d=o;if(p){if(m){let _=a.texData.get(d.dataId).values,C=new Array(i);for(let R=0;R<C.length;R++)C[R]=o.shape[c[R]];let D=Up(_,o.shape,o.dtype,c,C);d=a.makeTensorInfo(C,o.dtype);let T=a.texData.get(d.dataId);T.values=D}else d=Al(o,c,a);f.push(d),u=N.getInnerMostAxes(u.length,i)}N.assertAxesAreInnerMostDims("sum",u,i);let[h,g]=N.computeOutAndReduceShapes(d.shape,u),y=h;n&&(y=N.expandShapeToKeepDim(h,l));let b=BO(d,g,y,a);for(let w of f)a.disposeIntermediateTensorInfo(w);return b}};function NZ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:a}=o,i=n.shape.length,l=x.parseAxisParam(s,n.shape),u=l,c=N.getAxesPermutation(u,i),p=n;c!=null&&(p=Mt({inputs:{x:n},backend:t,attrs:{perm:c}}),u=N.getInnerMostAxes(u.length,n.shape.length)),N.assertAxesAreInnerMostDims("min",u,i);let[m,f]=N.computeOutAndReduceShapes(p.shape,u),d=x.sizeFromShape(f),h=pe({inputs:{x:p},backend:t,attrs:{shape:[-1,d]}}),g=To(h,h.dtype,"min",t),y;if(a){let b=N.expandShapeToKeepDim(m,l);y=pe({inputs:{x:g},backend:t,attrs:{shape:b}})}else y=pe({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(p),y}var GO={kernelName:hn,backendName:"webgl",kernelFunc:NZ};var SZ=Dx+`
  return min(a, b);
`,TZ=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Sl+`
  return result;
`,AZ=nt({opSnippet:SZ,packedOpSnippet:TZ,cpuKernelImpl:iR}),WO={kernelName:gn,backendName:"webgl",kernelFunc:AZ};var CC=class{constructor(e,t,o){this.variableNames=["x"],this.outputShape=t.map((c,p)=>c[0]+e[p]+c[1]);let n=e.length,s=Le(n),a=t.map(c=>c[0]).join(","),i=t.map((c,p)=>c[0]+e[p]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n),u=o==="reflect"?0:1;if(n===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${n}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}};var IC=class{constructor(e,t,o){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((d,h)=>d[0]+e[h]+d[1]);let n=e.length,s=Le(n),a=t.map(d=>d[0]).join(","),i=t.map((d,h)=>d[0]+e[h]).join(","),l=Ut("rc",n),u=Ut("source",n),c=`${l[n-1]} < ${this.outputShape[n-1]}`,p=n===1?"source":`vec2(${u.slice(-2).join()})`,m=o==="reflect"?0:1,f="";if(n===1){let d=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${m};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${m};
        }
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${d}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[n-1]} += 1;
        if(${c}) {
          ${d}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
      `}else{let d=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${m}) +
                gte * ((end - 1) * 2 - source + ${m});
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${d}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[n-1]} += 1;
        if(${c}) {
          ${d}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
        rc = outputLoc;
        ${l[n-2]} += 1;
        if(${l[n-2]} < ${this.outputShape[n-2]}) {
          ${d}
          result[2] = getChannel(getX(${u.join()}), ${p});
          ${l[n-1]} += 1;
          if(${c}) {
            ${d}
            result[3] = getChannel(getX(${u.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var EZ=({inputs:r,backend:e,attrs:t})=>{let{x:o}=r,{paddings:n,mode:s}=t,a=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new IC(o.shape,n,s):new CC(o.shape,n,s);return e.runWebGLProgram(a,[o],o.dtype)},UO={kernelName:ua,backendName:"webgl",kernelFunc:EZ};var DZ=`if (b == 0.0) return NAN;
  return mod(a, b);`,$Z=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+Sl+`
  return result;
`,RZ=nt({opSnippet:DZ,packedOpSnippet:$Z}),jO={kernelName:hi,backendName:"webgl",kernelFunc:RZ};var NC=class{constructor(e,t,o){this.variableNames=["probs"],this.outputShape=[e,o],this.userCode=`
      uniform float seed;

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}getCustomSetupFunc(e){return(t,o)=>{this.seedLoc==null&&(this.seedLoc=t.getUniformLocation(o,"seed")),t.gl.uniform1f(this.seedLoc,e)}}};var FZ=`
if (a == b) {
  return 1.0;
};
return a / b;`,OZ=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,SC=nt({opSnippet:FZ,packedOpSnippet:OZ,checkOutOfBounds:!0}),HO={kernelName:rn,backendName:"webgl",kernelFunc:SC};var qO="return a - b;",TC=nt({opSnippet:qO,packedOpSnippet:qO,supportsComplex:!0,cpuKernelImpl:dR}),KO={kernelName:Fn,backendName:"webgl",kernelFunc:TC};function AC(r){let{inputs:e,backend:t,attrs:o}=r,{logits:n}=e,{dim:s}=o,a=x.parseAxisParam([s],n.shape),i=_C({inputs:{x:n},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),l=N.expandShapeToKeepDim(i.shape,a),u=pe({inputs:{x:i},backend:t,attrs:{shape:l}}),c=TC({inputs:{a:n,b:u},backend:t}),p=pC({inputs:{x:c},backend:t}),m=th({inputs:{x:p},backend:t,attrs:{axis:a,keepDims:!1}}),f=pe({inputs:{x:m},backend:t,attrs:{shape:l}}),d=SC({inputs:{a:p,b:f},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),d}var XO={kernelName:$n,backendName:"webgl",kernelFunc:AC};function PZ(r){let{inputs:e,backend:t,attrs:o}=r,{logits:n}=e,{numSamples:s,seed:a,normalized:i}=o,l=i?n:AC({inputs:{logits:n},backend:t,attrs:{dim:n.shape.length-1}}),u=l.shape[0],c=l.shape[1],p=new NC(u,c,s),m=p.getCustomSetupFunc(a),f=t.runWebGLProgram(p,[l],"int32",m);return i||t.disposeIntermediateTensorInfo(l),f}var YO={kernelName:su,backendName:"webgl",kernelFunc:PZ};var ZO="return -x;";function MZ(r){let{inputs:e,backend:t}=r,{x:o}=e;if(t.shouldExecuteOnCPU([o])){let s=t.texData.get(o.dataId),[a,i]=lR(s.values,o.shape,o.dtype);return t.makeTensorInfo(i,o.dtype,a)}let n;return W().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new Bs(o.shape,ZO):n=new ho(o.shape,ZO),t.runWebGLProgram(n,[o],o.dtype)}var JO={kernelName:ps,backendName:"webgl",kernelFunc:MZ};var LZ=Tr.nonMaxSuppressionV3Impl;function zZ(r){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:o}=r,{boxes:n,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=o,u=t.readSync(n.dataId),c=t.readSync(s.dataId),{selectedIndices:p}=LZ(u,c,a,i,l);return t.makeTensorInfo([p.length],"int32",new Int32Array(p))}var QO={kernelName:xi,backendName:"webgl",kernelFunc:zZ};var BZ=Tr.nonMaxSuppressionV4Impl;function VZ(r){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:o}=r,{boxes:n,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=o,c=t.readSync(n.dataId),p=t.readSync(s.dataId),{selectedIndices:m,validOutputs:f}=BZ(c,p,a,i,l,u);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}var eP={kernelName:yi,backendName:"webgl",kernelFunc:VZ};var GZ=Tr.nonMaxSuppressionV5Impl;function WZ(r){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:o}=r,{boxes:n,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=o,c=t.readSync(n.dataId),p=t.readSync(s.dataId),m=a,f=i,d=l,h=u,{selectedIndices:g,selectedScores:y}=GZ(c,p,m,f,d,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var tP={kernelName:bi,backendName:"webgl",kernelFunc:WZ};var EC=class{constructor(e,t,o,n){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${n}), float(${o}),
                      float(index == coords.y)));
      }
    `}};var UZ=r=>{let{inputs:e,backend:t,attrs:o}=r,{indices:n}=e,{depth:s,onValue:a,offValue:i}=o,l=x.sizeFromShape(n.shape),u=new EC(l,s,a,i),c=pe({inputs:{x:n},backend:t,attrs:{shape:[l]}}),p=t.runWebGLProgram(u,[c],n.dtype);t.disposeIntermediateTensorInfo(c);let m=[...n.shape,s],f=pe({inputs:{x:p},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(p),f},rP={kernelName:yn,backendName:"webgl",kernelFunc:UZ};function ih(r){let{inputs:e,backend:t}=r,{x:o}=e;if(o.dtype==="complex64"){let n=Ga({inputs:{input:o},backend:t}),s=ih({inputs:{x:n},backend:t}),a=lc({inputs:{input:o},backend:t}),i=ih({inputs:{x:a},backend:t}),l=go({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(n),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}else return sh({attrs:{shape:o.shape,dtype:o.dtype,value:o.dtype==="string"?"":0},backend:t})}var oP={kernelName:bs,backendName:"webgl",kernelFunc:ih};function nP(r){let{inputs:e,backend:t}=r,{x:o}=e;if(o.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(o.dtype==="complex64"){let n=Ga({inputs:{input:o},backend:t}),s=nP({inputs:{x:n},backend:t}),a=lc({inputs:{input:o},backend:t}),i=ih({inputs:{x:a},backend:t}),l=go({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(n),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}else return sh({attrs:{shape:o.shape,dtype:o.dtype,value:1},backend:t})}var sP={kernelName:ms,backendName:"webgl",kernelFunc:nP};function jZ(r){let{inputs:e,backend:t,attrs:o}=r,{axis:n}=o;if(e.length===1)return Vx({inputs:{input:e[0]},backend:t,attrs:{dim:n}});let s=e[0].shape,a=e[0].dtype;e.forEach(c=>{x.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),x.assert(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=e.map(c=>{let p=Vx({inputs:{input:c},backend:t,attrs:{dim:n}});return i.push(p),p}),u=Jv({inputs:l,backend:t,attrs:{axis:n}});return i.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}var iP={kernelName:fs,backendName:"webgl",kernelFunc:jZ};var DC=class{constructor(e,t,o){this.variableNames=["x"],this.outputShape=t.map((u,c)=>u[0]+e[c]+u[1]);let n=e.length,s=Le(n),a=t.map(u=>u[0]).join(","),i=t.map((u,c)=>u[0]+e[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n);if(n===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(float(${o}));
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(float(${o}));
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}};var $C=class{constructor(e,t,o){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,g)=>h[0]+e[g]+h[1]);let n=e.length,s=Le(n),a=t.map(h=>h[0]).join(","),i=t.map((h,g)=>h[0]+e[g]).join(","),l=Ut("rc",n),u=Ut("source",n),c=`${l[n-1]} < ${this.outputShape[n-1]}`,p=n===1?"source":`vec2(${u.slice(-2).join()})`,m=[`${s} rc = outputLoc;`,`${l[n-1]} += 1;
       if(${c}) {
      `,n===1?"":`}
       rc = outputLoc;
       ${l[n-2]} += 1;
       if(${l[n-2]} < ${this.outputShape[n-2]}) {`,n===1?"":`  ${l[n-1]} += 1;
         if(${c}) {`],f=n===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",d="";for(let h=0,g=n===1?2:4;h<g;h++)d+=`
        ${m[h]}
        if (${f}) {
          result[${h}] = float(${o});
        } else {
          ${s} source = rc - start;
          result[${h}] = getChannel(getX(${u.join()}), ${p});
        }
      `;d+=n===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}};var RC=r=>{let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{paddings:s,constantValue:a}=o,i=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $C(n.shape,s,a):new DC(n.shape,s,a);return t.runWebGLProgram(i,[n],n.dtype)},aP={kernelName:bn,backendName:"webgl",kernelFunc:RC};var HZ=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,qZ=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+Sl+`
  return result;
`,KZ=nt({opSnippet:HZ,packedOpSnippet:qZ}),lP={kernelName:wn,backendName:"webgl",kernelFunc:KZ};function XZ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:a}=o,i=n.shape.length,l=[],u=x.parseAxisParam(s,n.shape),c=u,p=N.getAxesPermutation(c,i),m=n;p!=null&&(m=Mt({inputs:{x:n},backend:t,attrs:{perm:p}}),c=N.getInnerMostAxes(c.length,i),l.push(m)),N.assertAxesAreInnerMostDims("prod",c,i);let f;if(t.shouldExecuteOnCPU([m])){let d=t.texData.get(m.dataId).values,{outVals:h,outShape:g,outDtype:y}=uR(m.shape,m.dtype,d,c);f=t.makeTensorInfo(g,y,h)}else{let[d,h]=N.computeOutAndReduceShapes(m.shape,c),g=x.sizeFromShape(h),y=pe({inputs:{x:m},backend:t,attrs:{shape:[-1,g]}}),b=mu(n.dtype),w=To(y,b,"prod",t);f=pe({inputs:{x:w},backend:t,attrs:{shape:d}}),l.push(y),l.push(w)}if(a){l.push(f);let d=N.expandShapeToKeepDim(f.shape,u);f=pe({inputs:{x:f},backend:t,attrs:{shape:d}})}return l.forEach(d=>t.disposeIntermediateTensorInfo(d)),f}var uP={kernelName:wi,backendName:"webgl",kernelFunc:XZ};var FC=r=>{let{backend:e,attrs:t}=r,{start:o,stop:n,step:s,dtype:a}=t,i=cR(o,n,s,a);return e.makeTensorInfo([i.length],a,i)},cP={kernelName:ca,backendName:"webgl",kernelFunc:FC};var YZ="return 1.0 / x;",ZZ=_e({opSnippet:YZ}),pP={kernelName:_i,backendName:"webgl",kernelFunc:ZZ};var JZ=xr+`
  return (x < 0.0) ? 0.0 : x;
`,QZ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,eJ=_e({opSnippet:JZ,packedOpSnippet:QZ}),mP={kernelName:kn,backendName:"webgl",kernelFunc:eJ};var tJ=xr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,rJ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,oJ=_e({opSnippet:tJ,packedOpSnippet:rJ}),fP={kernelName:Cn,backendName:"webgl",kernelFunc:oJ};var OC=class{constructor(e,t,o,n,s){this.variableNames=["A"],this.outputShape=[];let[a,i,l,u]=e;this.outputShape=[a,t,o,u];let c=[n&&t>1?i-1:i,n&&o>1?l-1:l],p=[n&&t>1?t-1:t,n&&o>1?o-1:o],m;s?m="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var PC=class{constructor(e,t,o,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,i,l,u]=e;this.outputShape=[a,t,o,u];let c=[n&&t>1?i-1:i,n&&o>1?l-1:l],p=[n&&t>1?t-1:t,n&&o>1?o-1:o],m;s?m="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${o-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function nJ(r){let{inputs:e,backend:t,attrs:o}=r,{images:n}=e,{alignCorners:s,halfPixelCenters:a,size:i}=o,[l,u]=i,c=W().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new PC(n.shape,l,u,s,a):new OC(n.shape,l,u,s,a);return t.runWebGLProgram(c,[n],"float32")}var dP={kernelName:vn,backendName:"webgl",kernelFunc:nJ};var MC=class{constructor(e,t,o){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,n,s]=t,[,a,i]=e,l=[o&&a>1?n-1:n,o&&i>1?s-1:s],u=[o&&a>1?a-1:a,o&&i>1?i-1:i],c=l[0]/u[0],p=l[1]/u[1],m=1/c,f=1/p,d=Math.ceil(m)*2+2,h=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${d});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${n-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function sJ(r){let{inputs:e,backend:t,attrs:o}=r,{images:n,dy:s}=e,{alignCorners:a}=o,i=new MC(s.shape,n.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var hP={kernelName:lu,backendName:"webgl",kernelFunc:sJ};var LC=class{constructor(e,t,o,n,s){this.variableNames=["A"],this.outputShape=[];let[a,i,l,u]=e;this.outputShape=[a,t,o,u];let c=[n&&t>1?i-1:i,n&&o>1?l-1:l],p=[n&&t>1?t-1:t,n&&o>1?o-1:o],m=n?"0.5":"0.0",f;s?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};function iJ(r){let{inputs:e,backend:t,attrs:o}=r,{images:n}=e,{alignCorners:s,halfPixelCenters:a,size:i}=o,[l,u]=i,c=new LC(n.shape,l,u,s,a);return t.runWebGLProgram(c,[n],n.dtype)}var gP={kernelName:pa,backendName:"webgl",kernelFunc:iJ};var zC=class{constructor(e,t,o){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,n,s]=t,[,a,i]=e,l=[o&&a>1?n-1:n,o&&i>1?s-1:s],u=[o&&a>1?a-1:a,o&&i>1?i-1:i],c=l[0]/u[0],p=l[1]/u[1],m=1/c,f=1/p,d=Math.ceil(m)*2+2,h=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${d});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${n}) - 1),
                ${o} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${o} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function aJ(r){let{inputs:e,backend:t,attrs:o}=r,{images:n,dy:s}=e,{alignCorners:a}=o,i=new zC(s.shape,n.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var xP={kernelName:au,backendName:"webgl",kernelFunc:aJ};var BC=class{constructor(e,t){this.variableNames=["x"];let o=e.length;if(o>4)throw new Error(`WebGL backend: Reverse of rank-${o} tensor is not yet supported`);if(this.outputShape=e,o===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let n=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,s=e.map((i,l)=>n(l)).join(","),a=Le(o);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var VC=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let o=e.length;if(o>4)throw new Error(`WebGL backend: Reverse of rank-${o} tensor is not yet supported`);this.outputShape=e;let n=Ut("rc",o),s=`${n[o-1]} + 1 < ${this.outputShape[o-1]}`,a=`${n[o-2]} + 1 < ${this.outputShape[o-2]}`,i=Le(o);o===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(n.slice())};
          if(${s}){
            result.g = ${u(n.slice())};
          }
          if(${a}) {
            result.b = ${c(n.slice())};
            if(${s}) {
              result.a = ${p(n.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(d){return m(d)}function u(d){return d[o-1]="("+d[o-1]+" + 1)",m(d)}function c(d){return d[o-2]="("+d[o-2]+" + 1)",m(d)}function p(d){return d[o-1]="("+d[o-1]+" + 1)",d[o-2]="("+d[o-2]+" + 1)",m(d)}function m(d){let h=e.map((b,w)=>f(w,d)),g=h.join(","),y=h.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${y}))`}function f(d,h){return t.indexOf(d)!==-1&&e[d]!==1?`${e[d]} - ${h[d]} - 1`:`${h[d]}`}}};function lJ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{dims:s}=o,a=n.shape.length,i=x.parseAxisParam(s,n.shape);if(a===0)return jt({inputs:{x:n},backend:t});let l=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new VC(n.shape,i):new BC(n.shape,i);return t.runWebGLProgram(l,[n],n.dtype)}var yP={kernelName:In,backendName:"webgl",kernelFunc:lJ};var GC=class{constructor(e,t,o,n){this.variableNames=["Image"],this.outputShape=[];let s=e[1],a=e[2],i=Math.sin(t).toFixed(3),l=Math.cos(t).toFixed(3);this.outputShape=e;let[u,c]=N.getImageCenter(n,s,a),p=u.toFixed(3),m=c.toFixed(3),f="";typeof o=="number"?f=`float outputValue = ${o.toFixed(2)};`:f=`
        vec3 fill = vec3(${o.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - ${p}) * ${l} - (float(y) - ${m}) * ${i};
          float coordYFloat = (float(x) - ${p}) * ${i} + (float(y) - ${m}) * ${l};
          int coordX = int(round(coordXFloat + ${p}));
          int coordY = int(round(coordYFloat + ${m}));
          ${f}
          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var bP={kernelName:Ei,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:o}=r,{radians:n,fillValue:s,center:a}=e,i=t,l=new GC(o.shape,n,s,a);return i.runWebGLProgram(l,[o],o.dtype)}};var uJ=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,cJ=_e({opSnippet:uJ}),wP={kernelName:Nn,backendName:"webgl",kernelFunc:cJ};var pJ="return inversesqrt(x);",mJ=_e({opSnippet:pJ,cpuKernelImpl:pR}),_P={kernelName:Sn,backendName:"webgl",kernelFunc:mJ};var ah=class{constructor(e,t,o,n,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let l=Le(s.length),u=Le(a.length),c="";o===1?c="i":o===2&&(c="i, j");let p=`getIndices(${c})`,m="";n===1?m="i":n===2&&(m="i, coords[1]");let f=`getUpdates(${m})`,d=t>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${s});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${p});
              flattenedIndex += index * ${d};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function fJ(r){let{inputs:e,backend:t,attrs:o}=r,{indices:n,updates:s}=e,{shape:a}=o,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=N.calculateShapes(s,n,a),m=[p/u,u];if(p===0)return t.makeTensorInfo(a,n.dtype);let f=pe({inputs:{x:n},backend:t,attrs:{shape:[l,i]}}),d=pe({inputs:{x:s},backend:t,attrs:{shape:[l,u]}}),h=t.makeTensorInfo([],"float32",new Float32Array([0])),g=new ah(l,i,f.shape.length,d.shape.length,c,m),y=t.runWebGLProgram(g,[d,f,h],d.dtype),b=pe({inputs:{x:y},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(h),b}var kP={kernelName:ki,backendName:"webgl",kernelFunc:fJ};var WC=class{constructor(e,t,o){this.variableNames=["c","a","b"],this.outputShape=t;let n,s;if(o>4)throw Error(`Where for rank ${o} is not yet supported`);if(o===1)s="resRC",n="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<t.length;c++)u.push(`${i[c]}`),c<e&&l.push(`${i[c]}`);n=l.join(),s=u.join()}let a=Le(o);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${n});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function dJ(r){let{inputs:e,backend:t}=r,{condition:o,t:n,e:s}=e,a=new WC(o.shape.length,n.shape,n.shape.length);return t.runWebGLProgram(a,[o,n,s],fr(n.dtype,s.dtype))}var vP={kernelName:hs,backendName:"webgl",kernelFunc:dJ};var hJ=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${N.SELU_SCALEALPHA};
  float scale = ${N.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,gJ=_e({opSnippet:hJ}),CP={kernelName:vi,backendName:"webgl",kernelFunc:gJ};var xJ="return 1.0 / (1.0 + exp(-1.0 * x));",yJ=_e({opSnippet:xJ}),IP={kernelName:An,backendName:"webgl",kernelFunc:yJ};var bJ=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,wJ=_e({opSnippet:bJ}),NP={kernelName:Ii,backendName:"webgl",kernelFunc:wJ};var _J=$x+`
  return sin(x);
`,kJ=_e({opSnippet:_J}),SP={kernelName:Tn,backendName:"webgl",kernelFunc:kJ};var vJ=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,CJ=_e({opSnippet:vJ}),TP={kernelName:Ci,backendName:"webgl",kernelFunc:CJ};var IJ=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,NJ=_e({opSnippet:IJ}),AP={kernelName:Ni,backendName:"webgl",kernelFunc:NJ};var SJ=r=>{let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{blockShape:s,paddings:a}=o;x.assert(n.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((y,b)=>y*b),l=[[0,0]];l.push(...a);for(let y=1+s.length;y<n.shape.length;++y)l.push([0,0]);let u=[],c=RC({inputs:{x:n},backend:t,attrs:{paddings:l,constantValue:0}}),p=N.getReshaped(c.shape,s,i,!1),m=N.getPermuted(p.length,s.length,!1),f=N.getReshapedPermuted(c.shape,s,i,!1),d=pe({inputs:{x:c},backend:t,attrs:{shape:p}}),h=Mt({inputs:{x:d},backend:t,attrs:{perm:m}}),g=pe({inputs:{x:h},backend:t,attrs:{shape:f}});return u.push(c),u.push(d),u.push(h),u.forEach(y=>t.disposeIntermediateTensorInfo(y)),g},EP={kernelName:ma,backendName:"webgl",kernelFunc:SJ};function TJ(r){let{inputs:e,backend:t,attrs:o}=r,{sparseIndices:n,sparseValues:s,defaultValue:a}=e,{outputShape:i}=o,{sliceRank:l,numUpdates:u,strides:c,outputSize:p}=N.calculateShapes(s,n,i),m=!1,f=new ah(u,l,n.shape.length,s.shape.length,c,[p,1],m),d=t.runWebGLProgram(f,[s,n,a],s.dtype),h=pe({inputs:{x:d},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(d),h}var DP={kernelName:uu,backendName:"webgl",kernelFunc:TJ};function AJ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{numOrSizeSplits:s,axis:a}=o,i=x.parseAxisParam(a,n.shape)[0],l=N.prepareSplitSize(n,s,i),u=n.shape.length,c=new Array(u).fill(0),p=n.shape.slice();return l.map(m=>{let f=[...p];f[i]=m;let d=Va({inputs:{x:n},backend:t,attrs:{begin:c,size:f}});return c[i]+=m,d})}var $P={kernelName:xs,backendName:"webgl",kernelFunc:AJ};var EJ="return sqrt(x);",DJ=_e({opSnippet:EJ}),RP={kernelName:En,backendName:"webgl",kernelFunc:DJ};var $J="return x * x;",RJ=_e({opSnippet:$J}),FP={kernelName:fa,backendName:"webgl",kernelFunc:RJ};var OP="return (a - b) * (a - b);",FJ=nt({opSnippet:OP,packedOpSnippet:OP}),PP={kernelName:Rn,backendName:"webgl",kernelFunc:FJ};function OJ({inputs:r,attrs:e,backend:t}){let{x:o}=r,n=xr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,s=new ho(o.shape,n);return t.runWebGLProgram(s,[o],o.dtype)}var MP={kernelName:Fo,backendName:"webgl",kernelFunc:OJ};var UC=class{constructor(e,t,o){this.variableNames=["x"],this.outputShape=o;let n=o.length,s=Le(o.length),a=Le(o.length),i="";if(n===1)i="coords * strides + begin";else{let l=0;i=o.map((u,c)=>(l++,o.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${e});
      ${s} strides = ${s}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function PJ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{begin:s,end:a,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=o,{nonStrided:f,$begin:d,$strides:h,size:g,newShape:y,outShape:b}=nr.sliceInfo(n.shape,s,a,i,l,u,c,p,m),w=pe({inputs:{x:n},backend:t,attrs:{shape:y}}),_;if(f){let D=Va({inputs:{x:w},backend:t,attrs:{begin:d,size:g}});_=pe({inputs:{x:D},backend:t,attrs:{shape:b}}),t.disposeIntermediateTensorInfo(D)}else if(b.some(D=>D===0))_=t.makeTensorInfo(b,n.dtype,[]);else if(t.shouldExecuteOnCPU([w])){let R=t.texData.get(w.dataId).values,P=ve(w.shape,w.dtype,R),B=fR(b,P,h,d);_=t.makeTensorInfo(b,w.dtype,B.values)}else{let T=new UC(d,h,b);_=t.runWebGLProgram(T,[w],w.dtype)}let C=pe({inputs:{x:_},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(_),C}var LP={kernelName:Si,backendName:"webgl",kernelFunc:PJ};var MJ="return tan(x);",LJ=_e({opSnippet:MJ}),zP={kernelName:Ti,backendName:"webgl",kernelFunc:LJ};var zJ=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,BJ=_e({opSnippet:zJ}),BP={kernelName:On,backendName:"webgl",kernelFunc:BJ};var jC=class{constructor(e,t){this.variableNames=["A"];let o=new Array(e.length);for(let a=0;a<o.length;a++)o[a]=e[a]*t[a];this.outputShape=o,this.rank=o.length;let n=Le(this.rank),s=VJ(e);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function VJ(r){let e=r.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${r[0]})`;let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],o=[];for(let n=0;n<r.length;n++)o.push(`imod(${t[n]}, ${r[n]})`);return o.join()}function HC(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{reps:s}=o;if(n.dtype==="string"){let u=t.readSync(n.dataId).map(m=>x.decodeString(m)),c=ve(n.shape,n.dtype,u),p=hR(c,s);return t.makeTensorInfo(p.shape,p.dtype,p.values)}let a=new jC(n.shape,s);return t.runWebGLProgram(a,[n],n.dtype)}var VP={kernelName:_o,backendName:"webgl",kernelFunc:HC};function GJ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{k:s,sorted:a}=o,i=t.readSync(n.dataId),[l,u]=gR(i,n.shape,n.dtype,s,a);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}var GP={kernelName:Ai,backendName:"webgl",kernelFunc:GJ};function WJ(r){let{inputs:e,attrs:t,backend:o}=r,{axis:n}=t,{x:s}=e;qi(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let a=o.readSync(s.dataId),{outputValues:i,outputShape:l,indices:u}=xR(a,n,s.shape,s.dtype);return[o.makeTensorInfo(l,s.dtype,i),o.makeTensorInfo([u.length],"int32",u)]}var WP={kernelName:cu,backendName:"webgl",kernelFunc:WJ};function UJ(r){let{inputs:e,backend:t,attrs:o}=r,{value:n}=e,{axis:s}=o;s<0&&(s+=n.shape.length);let a=n,i=a.shape.length,l=n.shape[s],u=new Array(i-1),c=0;for(let h=0;h<i;h++)h!==s&&(u[c++]=a.shape[h]);let p=[],m=new Array(i).fill(0),f=a.shape.slice();f[s]=1;let d=new Array(l);for(let h=0;h<d.length;h++){m[s]=h;let g=Va({inputs:{x:a},backend:t,attrs:{begin:m,size:f}}),y=pe({inputs:{x:g},backend:t,attrs:{shape:u}});d[h]=y,p.push(g)}return p.forEach(h=>t.disposeIntermediateTensorInfo(h)),d}var UP={kernelName:ys,backendName:"webgl",kernelFunc:UJ};var qC=class{constructor(e,t){this.variableNames=["x","segmentIds"];let o=e.windowSize,n=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/o);this.outputShape=[n,i];let l="0.0",u="sumValue",c=Math.floor(o/4)*4,p=o%4,m=`
        sumValue += dot(values, segFilter);
    `,f="";s%o>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let d="";s%o>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${d}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${o}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${m}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${m}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${m}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${m}
        }
        setOutput(${u});
      }
    `}};function jJ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,segmentIds:s}=e,{numSegments:a}=o,i=n.shape.length,l=[],u=0,c=N.getAxesPermutation([u],i),p=n;c!=null&&(p=Mt({inputs:{x:n},backend:t,attrs:{perm:c}}),l.push(p),u=N.getInnerMostAxes(1,i)[0]);let m=N.segment_util.computeOutShape(p.shape,u,a),f=x.sizeFromShape([p.shape[u]]),d=pe({inputs:{x:p},backend:t,attrs:{shape:[-1,f]}});l.push(d);let h=mu(n.dtype),g=(_,C,D,T,R)=>{let P=_.shape[0],B=_.shape[1],G=N.segment_util.segOpComputeOptimalWindowSize(B,R),U={windowSize:G,inSize:B,batchSize:P,numSegments:R},j=new qC(U,C),H=t.compileAndRun(j,[_,D],T);if(l.push(H),H.shape[1]===R)return H;let K=FC({backend:t,attrs:{start:0,stop:R,step:1,dtype:"float32"}}),X=HC({inputs:{x:K},backend:t,attrs:{reps:[B/G]}});return l.push(K),l.push(X),g(H,C,X,T,R)},y=g(d,"unsortedSegmentSum",s,h,a),b=pe({inputs:{x:y},backend:t,attrs:{shape:m}}),w=b;if(c!=null){l.push(b);let _=N.getUndoAxesPermutation(c);w=Mt({inputs:{x:w},backend:t,attrs:{perm:_}})}return l.forEach(_=>t.disposeIntermediateTensorInfo(_)),w}var jP={kernelName:da,backendName:"webgl",kernelFunc:jJ};var HJ=[AO,EO,UR,HR,qR,KR,YR,ZR,JR,QR,rF,oF,nF,sF,aF,iF,lF,cF,uF,pF,mF,fF,dF,gF,xF,_F,vF,CF,NF,$R,AF,DF,$F,EF,FF,OF,RF,PF,MF,LF,VF,GF,WF,jF,HF,UF,qF,KF,XF,YF,ZF,JF,eO,tO,oO,nO,sO,iO,lO,uO,cO,pO,mO,fO,dO,hO,gO,DR,xO,SF,yO,bO,wO,RR,_O,kO,vO,IO,CO,NO,SO,TO,$O,OO,FO,PO,MO,zO,RO,VO,GO,WO,UO,jO,YO,LR,JO,QO,eP,tP,yF,rP,sP,iP,aP,lP,FR,uP,cP,bF,HO,pP,fP,mP,BR,dP,hP,gP,xP,yP,bP,wP,_P,kP,vP,CP,IP,NP,SP,TP,hF,XO,AP,EP,DP,$P,RP,FP,PP,MP,LP,KO,GR,zP,BP,VP,GP,WR,WP,UP,jP,oP];for(let r of HJ)Ja(r);var HP="3.2.0";var qJ={"tfjs-core":Jb,"tfjs-backend-cpu":TE,"tfjs-backend-webgl":ER,"tfjs-data":gx,"tfjs-layers":dl,"tfjs-converter":ux,tfjs:HP};var Lt;(function(r){r[r.float32=0]="float32",r[r.int32=1]="int32",r[r.bool=2]="bool",r[r.string=3]="string",r[r.complex64=4]="complex64"})(Lt||(Lt={}));var El;(function(r){r[r.linear=0]="linear",r[r.relu=1]="relu",r[r.relu6=2]="relu6",r[r.prelu=3]="prelu",r[r.leakyrelu=4]="leakyrelu"})(El||(El={}));var qP;function KJ(r){qP=r.wasm.cwrap(ws,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function XJ(r){let{inputs:e,backend:t,attrs:o}=r,{a:n,b:s,bias:a,preluActivationWeights:i}=e;if(n.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=o,m=t.dataIdMap.get(n.dataId).id,f=t.dataIdMap.get(s.dataId).id,d=0;if(a!=null){let R=t.dataIdMap.get(a.dataId);if(R.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${R.shape.length}.`);d=R.id}let h=i==null?0:t.dataIdMap.get(i.dataId).id,g=El[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?n.shape[2]:n.shape[1],b=u?s.shape[1]:s.shape[2],w=n.shape[0],_=t.makeOutput([w,y,b],n.dtype),C=t.dataIdMap.get(_.dataId).id,D=new Uint8Array(new Int32Array(n.shape).buffer),T=new Uint8Array(new Int32Array(s.shape).buffer);return qP(m,D,n.shape.length,f,T,s.shape.length,l,u,g,d,h,p||0,C),_}var KP={kernelName:ws,backendName:"wasm",setupFunc:KJ,kernelFunc:XJ};function St(r){let e;function t(n){e=n.wasm.cwrap(r,null,["number","number"])}function o(n){let{backend:s,inputs:{x:a}}=n,i=s.dataIdMap.get(a.dataId).id,l=s.makeOutput(a.shape,a.dtype),u=s.dataIdMap.get(l.dataId).id;return x.sizeFromShape(l.shape)===0||e(i,u),l}return{kernelName:r,backendName:"wasm",setupFunc:t,kernelFunc:o}}var XP=St(as);function bt(r,e,t){let o;function n(a){o=a.wasm.cwrap(r,null,["number","array","number","number","array","number","number","number"])}function s(a){let{backend:i,inputs:l}=a,{a:u,b:c}=l,p=i.dataIdMap.get(u.dataId).id,m=i.dataIdMap.get(c.dataId).id,f=t!=null?t:u.dtype,d=N.assertAndGetBroadcastShape(u.shape,c.shape),h=i.makeOutput(d,f);if(x.sizeFromShape(d)===0)return h;let g=new Uint8Array(new Int32Array(u.shape).buffer),y=new Uint8Array(new Int32Array(c.shape).buffer),b=i.dataIdMap.get(h.dataId).id,w=()=>o(p,g,u.shape.length,m,y,c.shape.length,Lt[u.dtype],b);if(e&&u.dtype==="float32")return w(),h;let _=N.getBroadcastDims(u.shape,d),C=N.getBroadcastDims(c.shape,d),D=_.every((R,P)=>R===P),T=C.every((R,P)=>R===P);if(D&&T)return w(),h;throw new Error(`Broadcasting along outer dims is not yet supported for ${u.dtype} ${r}.`)}return{kernelName:r,backendName:"wasm",setupFunc:n,kernelFunc:s}}var YJ=!0,YP=bt(wo,YJ);var ZP;function ZJ(r){ZP=r.wasm.cwrap(Ho,null,["array","number","number","number"])}function JJ(r){let{inputs:e,backend:t}=r,o=t.makeOutput(e[0].shape,e[0].dtype);if(x.sizeFromShape(o.shape)===0)return o;let n=e.map(i=>t.dataIdMap.get(i.dataId).id),s=new Uint8Array(new Int32Array(n).buffer),a=t.dataIdMap.get(o.dataId).id;return ZP(s,n.length,Lt[o.dtype],a),o}var JP={kernelName:Ho,backendName:"wasm",setupFunc:ZJ,kernelFunc:JJ};function cc(r){let{inputs:{x:e},backend:t}=r,o=t.makeOutput(e.shape,e.dtype),n=t.typedArrayFromHeap(e);return t.typedArrayFromHeap(o).set(n),o}var QP={kernelName:Ro,backendName:"wasm",kernelFunc:cc};var eM;function QJ(r){eM=r.wasm.cwrap(Pn,null,["number","array","number","number","number","array","number"])}function qp(r){let{inputs:e,backend:t,attrs:o}=r,[n,s]=t9(e.x.shape,o.perm),a=!0;for(let d=0;d<s.length;d++)s[d]!==d&&(a=!1);let i=e9(e.x.shape,o.perm),l={dataId:e.x.dataId,shape:n,dtype:e.x.dtype};if(a){let d=cc({inputs:e,backend:t});return d.shape=i,d}let u=t.makeOutput(i,l.dtype),c=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,m=new Uint8Array(new Int32Array(s).buffer),f=new Uint8Array(new Int32Array(l.shape).buffer);return eM(c,f,l.shape.length,Lt[l.dtype],p,m,s.length),u}function e9(r,e){let t=new Array(r.length);for(let o=0;o<t.length;o++)t[o]=r[e[o]];return t}function t9(r,e){let t=[],o=[];for(let n=0;n<r.length;++n)r[n]!==1&&t.push(r[n]),r[e[n]]!==1&&o.push(e[n]);for(let n=0;n<o.length;++n){let s=-1;for(let a=0;a<o.length;++a)o[a]>=n&&(s===-1||o[s]>o[a])&&(s=a);o[s]=n}return[t,o]}var tM={kernelName:Pn,backendName:"wasm",kernelFunc:qp,setupFunc:QJ};function os(r,e,t){let o=r.shape,n=r.shape.length,s=x.parseAxisParam(e,o),a=s,i=N.getAxesPermutation(a,n),l=null,u=!1;if(i!=null){let c=new Array(n);for(let f=0;f<c.length;f++)c[f]=o[i[f]];a=N.getInnerMostAxes(a.length,n),l=qp({inputs:{x:r},attrs:{perm:i},backend:t});let p=t.dataIdMap.get(r.dataId).id;t.dataIdMap.get(l.dataId).id!==p&&(u=!0)}return{transposed:l,originalAxes:s,axes:a,inputWasTransposed:u}}var rM;function r9(r){rM=r.wasm.cwrap(qo,null,["number","number","number","number","number"])}function o9(r){let{backend:e,inputs:t,attrs:o}=r,{axis:n}=o,{x:s}=t,a=e.dataIdMap.get(s.dataId).id,i=a,l=s,{transposed:u,axes:c,inputWasTransposed:p}=os(s,n,e);if(p){let y=e.dataIdMap.get(u.dataId).id;y!==a&&(l=u,i=y)}let m=l.shape.slice(0,-1),f=e.makeOutput(m,"int32"),d=e.dataIdMap.get(f.dataId).id,h=x.sizeFromShape(f.shape),g=l.shape[c[0]];return rM(i,Lt[l.dtype],h,g,d),p&&e.disposeData(u.dataId),f}var oM={kernelName:qo,backendName:"wasm",kernelFunc:o9,setupFunc:r9};var nM;function n9(r){nM=r.wasm.cwrap(Ko,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function s9(r){let{inputs:e,attrs:t,backend:o}=r,n=e.x,s=o.dataIdMap.get(n.dataId).id,{filterSize:a,strides:i,pad:l,dimRoundingMode:u}=t,c=N.computePool2DInfo(n.shape,a,i,1,l,u),p=c.filterHeight,m=c.filterWidth,f=c.padInfo.top,d=c.padInfo.right,h=c.padInfo.bottom,g=c.padInfo.left,y=c.strideHeight,b=c.strideWidth,w=c.inChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(c.dilationWidth!==1||c.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);let _=o.makeOutput(c.outShape,"float32"),C=o.dataIdMap.get(_.dataId).id;return nM(s,n.shape[0],n.shape[1],n.shape[2],p,m,f,d,h,g,y,b,w,C),_}var sM={kernelName:Ko,backendName:"wasm",setupFunc:n9,kernelFunc:s9};function Br(r){let{inputs:e,attrs:t}=r,{x:o}=e,{shape:n}=t,s=x.sizeFromShape(o.shape),a=x.inferFromImplicitShape(n,s);return x.assert(s===x.sizeFromShape(a),()=>`new shape: ${a}, old shape: ${o.shape}. New shape and old shape must have the same number of elements.`),r.backend.incRef(o.dataId),{dataId:o.dataId,shape:a,dtype:o.dtype}}var iM={kernelName:ds,backendName:"wasm",kernelFunc:Br};var aM;function i9(r){aM=r.wasm.cwrap(Xo,null,["number","array","number","number","array","number","number","number","number"])}function a9(r){let{inputs:e,backend:t,attrs:o}=r,{a:n,b:s}=e,{transposeA:a,transposeB:i}=o;if(n.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=n.shape.length,u=s.shape.length,c=a?n.shape[l-2]:n.shape[l-1],p=i?s.shape[u-1]:s.shape[u-2],m=a?n.shape[l-1]:n.shape[l-2],f=i?s.shape[u-2]:s.shape[u-1],d=n.shape.slice(0,-2),h=s.shape.slice(0,-2),g=x.sizeFromShape(d),y=x.sizeFromShape(h),b=g===y||g===1||y===1;x.assert(l>=2&&u>=2&&b,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${d}) and (${h}).`);let _=(g>y?n.shape.slice(0,-2):s.shape.slice(0,-2)).concat([m,f]);x.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${n.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let C=a?[g,c,m]:[g,m,c],D=i?[y,f,p]:[y,p,f],T=Br({inputs:{x:n},backend:t,attrs:{shape:C}}),R=Br({inputs:{x:s},backend:t,attrs:{shape:D}}),P=t.dataIdMap.get(T.dataId).id,B=t.dataIdMap.get(R.dataId).id,G=a?T.shape[2]:T.shape[1],U=i?R.shape[1]:R.shape[2],j=Math.max(g,y),H=t.makeOutput([j,G,U],T.dtype),K=t.dataIdMap.get(H.dataId).id,X=new Uint8Array(new Int32Array(T.shape).buffer),oe=new Uint8Array(new Int32Array(R.shape).buffer);return aM(P,X,T.shape.length,B,oe,R.shape.length,a,i,K),t.disposeData(T.dataId),t.disposeData(R.dataId),H.shape=_,H}var lM={kernelName:Xo,backendName:"wasm",setupFunc:i9,kernelFunc:a9};function pc(r){let{inputs:{x:e},attrs:{dtype:t},backend:o}=r,n=o.makeOutput(e.shape,t),s=o.typedArrayFromHeap(e);return o.typedArrayFromHeap(n).set(s),n}var uM={kernelName:Do,backendName:"wasm",kernelFunc:pc};var cM=St(Yo);var pM;function l9(r){pM=r.wasm.cwrap($o,null,["number","number","number","number"])}function u9(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{clipValueMin:s,clipValueMax:a}=o,i=t.dataIdMap.get(n.dataId).id,l=t.makeOutput(n.shape,n.dtype),u=t.dataIdMap.get(l.dataId).id;return pM(i,s,a,u),l}var mM={kernelName:$o,backendName:"wasm",setupFunc:l9,kernelFunc:u9};function KC(r){let{inputs:e,backend:t}=r,o=x.parseAxisParam(r.attrs.axis,e[0].shape)[0],n=N.computeOutShape(e.map(f=>f.shape),o),s=e.filter(f=>x.sizeFromShape(f.shape)>0);if(s.length===1)return cc({inputs:{x:s[0]},backend:t});let a=t.makeOutput(n,e[0].dtype);if(x.sizeFromShape(n)===0)return a;let i=s.map(f=>f.shape);if(N.assertParamsConsistent(i,o),s[0].dtype==="string"){let f=s.map(w=>{let _=x.sizeFromShape(w.shape.slice(o));return Br({inputs:{x:w},backend:t,attrs:{shape:[-1,_]}})}),d=f.map(w=>({vals:t.readSync(w.dataId),shape:w.shape}));n=N.computeOutShape(f.map(w=>w.shape),1);let h=f[0].shape[0]===1,g=Ld(d,n,e[0].dtype,h),y=N.computeOutShape(s.map(w=>w.shape),o);a.shape=y;let b=t.dataIdMap.get(a.dataId);return b.stringBytes=N.fromStringArrayToUint8(g),f.forEach(w=>t.disposeData(w.dataId)),a}let l=x.sizeFromShape(s[0].shape.slice(0,o)),u=0,c=s.map(f=>{let d=x.sizeFromShape(f.shape.slice(o));return u+=d,d}),p=s.map(f=>t.typedArrayFromHeap(f)),m=t.typedArrayFromHeap(a);for(let f=0;f<l;f++){let d=f*u;for(let h=0;h<p.length;h++){let g=c[h],y=f*g,b=p[h].subarray(y,y+g);m.set(b,d),d+=g}}return a}var fM={kernelName:ls,backendName:"wasm",kernelFunc:KC};var dM;function c9(r){dM=r.wasm.cwrap(Zo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function p9(r){let{inputs:e,attrs:t,backend:o}=r,{x:n,filter:s}=e,a=o.dataIdMap.get(n.dataId).id,i=o.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:p,dataFormat:m}=t,f=N.convertConv2DDataFormat(m),d=N.computeConv2DInfo(n.shape,s.shape,l,u,c,p,!1,f),h=d.filterHeight,g=d.filterWidth,y=d.padInfo.top,b=d.padInfo.right,w=d.padInfo.bottom,_=d.padInfo.left,C=d.dilationHeight,D=d.dilationWidth,T=d.strideHeight,R=d.strideWidth,P=d.inChannels,B=d.outChannels,G=d.padInfo.type==="SAME"?1:0;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let U=o.makeOutput(d.outShape,"float32"),j=o.dataIdMap.get(U.dataId).id;return dM(a,n.shape[0],n.shape[1],n.shape[2],i,h,g,y,b,w,_,G,C,D,T,R,P,B,j),U}var hM={kernelName:Zo,backendName:"wasm",setupFunc:c9,kernelFunc:p9};var gM;function m9(r){gM=r.wasm.cwrap(Jo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function f9(r){let{backend:e,inputs:t,attrs:o}=r,{dy:n,filter:s}=t,{strides:a,pad:i,dataFormat:l,dimRoundingMode:u,inputShape:c}=o,p=1,m=N.convertConv2DDataFormat(l),f=N.computeConv2DInfo(c,s.shape,a,p,i,u,!1,m),{batchSize:d,filterHeight:h,filterWidth:g,inChannels:y,inHeight:b,inWidth:w,outChannels:_,outHeight:C,outWidth:D,strideHeight:T,strideWidth:R}=f,P=h-1-f.padInfo.top,B=g-1-f.padInfo.left,G=f.dataFormat==="channelsLast",U=x.computeStrides(f.inShape),j=x.computeStrides(n.shape),[H,K,X]=x.computeStrides(s.shape),oe=U[0],Y=G?U[1]:U[2],re=G?U[2]:1,te=G?1:U[1],ie=j[0],le=G?j[1]:j[2],ae=G?j[2]:1,fe=G?1:j[1],de=e.makeOutput(f.inShape,"float32"),xe=e.dataIdMap.get(de.dataId).id,we=e.dataIdMap.get(n.dataId).id,De=e.dataIdMap.get(s.dataId).id;return gM(we,De,d,h,g,b,w,y,C,D,_,T,R,P,B,H,K,X,oe,Y,re,te,ie,le,ae,fe,xe),de}var xM={kernelName:Jo,backendName:"wasm",setupFunc:m9,kernelFunc:f9};var yM=St(Qo);var XC;(function(r){r[r.bilinear=0]="bilinear",r[r.nearest=1]="nearest"})(XC||(XC={}));var bM;function d9(r){bM=r.wasm.cwrap(Qs,null,["number","number","number","number","array","number","number","number","number","number"])}function h9(r){let{backend:e,inputs:t,attrs:o}=r,{method:n,extrapolationValue:s,cropSize:a}=o,{image:i,boxes:l,boxInd:u}=t,c=l.shape[0],[p,m]=a,f=[c,p,m,i.shape[3]],d=e.dataIdMap.get(i.dataId),h;i.dtype!=="float32"&&(h=pc({backend:e,inputs:{x:i},attrs:{dtype:"float32"}}),d=e.dataIdMap.get(h.dataId));let g=d.id,y=e.dataIdMap.get(l.dataId).id,b=e.dataIdMap.get(u.dataId).id,w=e.makeOutput(f,"float32"),_=e.dataIdMap.get(w.dataId).id,C=new Uint8Array(new Int32Array(i.shape).buffer);return bM(g,y,b,c,C,p,m,XC[n],s,_),h!=null&&e.disposeData(h.dataId),w}var wM={kernelName:Qs,backendName:"wasm",setupFunc:d9,kernelFunc:h9};var _M;function g9(r){_M=r.wasm.cwrap(en,null,["number","number","number","number","number","number"])}function x9(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,exclusive:a,reverse:i}=o,l=n.shape.length;x.assert(n.dtype==="float32"||n.dtype==="int32",()=>`cumsum does not support ${n.dtype} tensors in the WASM backend`);let u=N.getAxesPermutation([s],l),c=n;u!==null&&(c=qp({inputs:{x:n},attrs:{perm:u},backend:t}));let p=N.getInnerMostAxes(1,l)[0];N.assertAxesAreInnerMostDims("cumsum",[p],l);let m=t.makeOutput(c.shape,c.dtype),f=c.shape[p],d=t.dataIdMap.get(c.dataId).id,h=t.dataIdMap.get(m.dataId).id;_M(d,a?1:0,i?1:0,f,h,Lt[n.dtype]);let g=m;if(u!==null){let y=N.getUndoAxesPermutation(u);g=qp({inputs:{x:m},attrs:{perm:y},backend:t}),t.disposeData(c.dataId),t.disposeData(m.dataId)}return g}var kM={kernelName:en,backendName:"wasm",setupFunc:g9,kernelFunc:x9};var vM;function y9(r){vM=r.wasm.cwrap(ei,null,["number","number","number","array","number","array","array","number","number"])}function b9(r){let{backend:e,inputs:t,attrs:o}=r,{x:n}=t,{blockSize:s,dataFormat:a}=o;x.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);let i=n.shape[0],l=a==="NHWC"?n.shape[1]:n.shape[2],u=a==="NHWC"?n.shape[2]:n.shape[3],c=a==="NHWC"?n.shape[3]:n.shape[1],p=l*s,m=u*s,f=c/(s*s),d=a==="NHWC"?[i,p,m,f]:[i,f,p,m],h=e.makeOutput(d,"float32"),y=e.dataIdMap.get(n.dataId).id,b=new Uint8Array(new Int32Array(x.computeStrides(n.shape)).buffer),w=new Uint8Array(new Int32Array(d).buffer),_=new Uint8Array(new Int32Array(x.computeStrides(d)).buffer),C=e.dataIdMap.get(h.dataId).id;return vM(y,s,a==="NHWC"?1:0,b,n.shape.length-1,w,_,d.length,C),h}var CM={kernelName:ei,backendName:"wasm",setupFunc:y9,kernelFunc:b9};var IM;function w9(r){IM=r.wasm.cwrap(tn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function _9(r){let{inputs:e,attrs:t,backend:o}=r,{x:n,filter:s}=e,a=o.dataIdMap.get(n.dataId).id,i=o.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:p}=t,m=u==null?[1,1]:u,f=N.computeConv2DInfo(n.shape,s.shape,l,m,c,p,!0),d=f.filterHeight,h=f.filterWidth,g=f.padInfo.top,y=f.padInfo.right,b=f.padInfo.bottom,w=f.padInfo.left,_=f.dilationHeight,C=f.dilationWidth,D=f.strideHeight,T=f.strideWidth,R=f.inChannels,P=f.outChannels,B=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let G=o.makeOutput(f.outShape,"float32"),U=o.dataIdMap.get(G.dataId).id;return IM(a,n.shape[0],n.shape[1],n.shape[2],i,d,h,g,y,b,w,B,_,C,D,T,R,P,U),G}var NM={kernelName:tn,backendName:"wasm",setupFunc:w9,kernelFunc:_9};var k9=!1,SM=bt(oi,k9,"bool");var TM=St(on);function Ux(r){let{inputs:e,attrs:t,backend:o}=r,{input:n}=e,{dim:s}=t,a=n.shape.length,i=n.shape.slice(),l=s;return s<0&&(x.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+s+1),i.splice(l,0,1),Br({inputs:{x:n},backend:o,attrs:{shape:i}})}var AM={kernelName:us,backendName:"wasm",kernelFunc:Ux};function v9(r){let{attrs:{shape:e,value:t,dtype:o},backend:n}=r,s=n.makeOutput(e,o);return n.typedArrayFromHeap(s).fill(t),s}var EM={kernelName:ia,backendName:"wasm",kernelFunc:v9};var DM;function C9(r){DM=r.wasm.cwrap(si,null,["number","number","number","number","number","number"])}function I9(r){let{inputs:e,backend:t}=r,{image:o}=e,n=t.makeOutput(o.shape,o.dtype),s=t.dataIdMap.get(o.dataId).id,a=t.dataIdMap.get(n.dataId).id,[i,l,u,c]=o.shape;return DM(s,i,l,u,c,a),n}var $M={kernelName:si,backendName:"wasm",kernelFunc:I9,setupFunc:C9};var RM=St(nn);var N9=!1,FM=bt(sn,N9);var OM;function S9(r){OM=r.wasm.cwrap(an,null,["number","number","number","number","number","number","number"])}function T9(r){let{backend:e,inputs:t,attrs:o}=r,{varianceEpsilon:n}=o,{x:s,mean:a,variance:i,offset:l,scale:u}=t,c=e.dataIdMap.get(s.dataId).id,p=e.dataIdMap.get(a.dataId).id,m=e.dataIdMap.get(i.dataId).id,f=l!=null?e.dataIdMap.get(l.dataId).id:0,d=u!=null?e.dataIdMap.get(u.dataId).id:0,h=e.makeOutput(s.shape,s.dtype);if(x.sizeFromShape(s.shape)===0)return h;let g=e.dataIdMap.get(h.dataId).id;return OM(c,p,m,f,d,n,g),h}var PM={kernelName:an,backendName:"wasm",setupFunc:S9,kernelFunc:T9};var MM;function A9(r){MM=r.wasm.cwrap(_s,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function E9(r){let{inputs:e,attrs:t,backend:o}=r,{x:n,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dilations:c,dataFormat:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=t,h=N.computeConv2DInfo(n.shape,s.shape,l,c,u,m),g=El[f];if(g==null)throw new Error(`${f} activation not yet supported for FusedConv2D in the wasm backend.`);let y=o.dataIdMap.get(n.dataId).id,b=o.dataIdMap.get(s.dataId).id,w=h.outChannels,_=0;if(a!=null){let ae=o.dataIdMap.get(a.dataId);if(ae.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${ae.shape.length}.`);if(ae.shape[0]!==w)throw new Error(`FusedConv2D bias shape (${ae.shape}) does not match the number of output channels (${w})`);_=ae.id}let C=h.filterHeight,D=h.filterWidth,T=h.padInfo.top,R=h.padInfo.right,P=h.padInfo.bottom,B=h.padInfo.left,G=h.dilationHeight,U=h.dilationWidth,j=h.strideHeight,H=h.strideWidth,K=h.inChannels,X=h.padInfo.type==="SAME"?1:0,oe=h.batchSize,Y=h.inHeight,re=h.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let te=o.makeOutput(h.outShape,"float32"),ie=o.dataIdMap.get(te.dataId).id,le=i==null?0:o.dataIdMap.get(i.dataId).id;return MM(y,oe,Y,re,b,C,D,_,T,R,P,B,X,G,U,j,H,K,w,g,le,d||0,ie),te}var LM={kernelName:_s,backendName:"wasm",setupFunc:A9,kernelFunc:E9};var zM;function D9(r){zM=r.wasm.cwrap(ks,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function $9(r){let{inputs:e,attrs:t,backend:o}=r,{x:n,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dilations:c,dataFormat:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=t,h=N.computeConv2DInfo(n.shape,s.shape,l,c,u,m,!0),g=El[f];if(g==null)throw new Error(`${f} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=o.dataIdMap.get(n.dataId).id,b=o.dataIdMap.get(s.dataId).id,w=h.outChannels,_=0;if(a!=null){let ae=o.dataIdMap.get(a.dataId);if(ae.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${ae.shape.length}.`);if(ae.shape[0]!==w)throw new Error(`FusedDepthwiseConv2D bias shape (${ae.shape}) does not match the number of output channels (${w})`);_=ae.id}let C=h.filterHeight,D=h.filterWidth,T=h.padInfo.top,R=h.padInfo.right,P=h.padInfo.bottom,B=h.padInfo.left,G=h.dilationHeight,U=h.dilationWidth,j=h.strideHeight,H=h.strideWidth,K=h.inChannels,X=h.padInfo.type==="SAME"?1:0,oe=h.batchSize,Y=h.inHeight,re=h.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let te=o.makeOutput(h.outShape,"float32"),ie=o.dataIdMap.get(te.dataId).id,le=i==null?0:o.dataIdMap.get(i.dataId).id;return zM(y,oe,Y,re,b,C,D,_,T,R,P,B,X,G,U,j,H,K,w,g,le,d||0,ie),te}var BM={kernelName:ks,backendName:"wasm",setupFunc:D9,kernelFunc:$9};var VM;function R9(r){VM=r.wasm.cwrap(ii,null,["number","number","number","number","number","number","array","number"])}function F9(r){let{backend:e,inputs:t}=r,{params:o,indices:n}=t,[s,a,i,l]=jh.prepareAndValidate(o,n),u=e.makeOutput(s,o.dtype);if(a===0)return u;let c=n.shape,p=c[c.length-1],f=e.dataIdMap.get(o.dataId).id,h=e.dataIdMap.get(n.dataId).id,g=new Uint8Array(new Int32Array(l).buffer),y=e.dataIdMap.get(u.dataId).id;return VM(f,Lt[o.dtype],h,a,p,i,g,y),u}var GM={kernelName:ii,backendName:"wasm",setupFunc:R9,kernelFunc:F9};var WM;function O9(r){WM=r.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function P9(r){let{backend:e,inputs:t,attrs:o}=r,{x:n,indices:s}=t,{axis:a,batchDims:i}=o,l=x.parseAxisParam(a,n.shape)[0],u=N.segment_util.collectGatherOpShapeInfo(n,s,l,i),c=Br({inputs:{x:n},attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]},backend:e}),p=x.sizeFromShape(s.shape),m=Br({inputs:{x:s},attrs:{shape:[u.batchSize,p/u.batchSize]},backend:e}),f=[u.batchSize,u.outerSize,p/u.batchSize,u.sliceSize],d=e.makeOutput(f,n.dtype);if(x.sizeFromShape(n.shape)===0)return d;let h=c.shape.length-1,y=e.dataIdMap.get(c.dataId).id,w=e.dataIdMap.get(m.dataId).id,_=e.dataIdMap.get(d.dataId).id,C=new Uint8Array(new Int32Array(x.computeStrides(c.shape)).buffer),D=new Uint8Array(new Int32Array(x.computeStrides(f)).buffer);return WM(y,Lt[n.dtype],C,h,w,u.batchSize,D,_),e.disposeData(c.dataId),e.disposeData(m.dataId),d.shape=u.outputShape,d}var UM={kernelName:cs,backendName:"wasm",setupFunc:O9,kernelFunc:P9};var M9=!1,jM=bt(ai,M9,"bool");var L9=!1,HM=bt(ln,L9,"bool");var qM;function z9(r){qM=r.wasm.cwrap(un,null,["number","number","number"])}function B9(r){let{inputs:{x:e},attrs:{alpha:t},backend:o}=r,n=o.dataIdMap.get(e.dataId).id,s=o.makeOutput(e.shape,e.dtype);if(x.sizeFromShape(e.shape)!==0){let a=o.dataIdMap.get(s.dataId).id;qM(n,t,a)}return s}var KM={kernelName:un,backendName:"wasm",setupFunc:z9,kernelFunc:B9};var V9=!1,XM=bt(pi,V9,"bool");var G9=!1,YM=bt(mi,G9,"bool");var ZM=St(cn);var W9=!1,JM=bt(di,W9,"bool");var QM;function U9(r){QM=r.wasm.cwrap(pn,null,["number, number, number"])}function j9(r){let{backend:e,inputs:t,attrs:o}=r,{reductionIndices:n,keepDims:s}=o,{x:a}=t,l=e.dataIdMap.get(a.dataId).id,u=a,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=os(a,n,e);if(f){let w=e.dataIdMap.get(c.dataId).id;u=c,l=w}let d=u.shape.length;N.assertAxesAreInnerMostDims("max",p,d);let[h,g]=N.computeOutAndReduceShapes(u.shape,p),y=x.sizeFromShape(g),b=e.makeOutput(h,a.dtype);if(x.sizeFromShape(u.shape)!==0){let w=e.dataIdMap.get(b.dataId).id;QM(l,y,w)}if(f&&e.disposeData(c.dataId),s){let w=N.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var eL={kernelName:pn,backendName:"wasm",setupFunc:U9,kernelFunc:j9};var H9=!1,tL=bt(mn,H9);var rL;function q9(r){rL=r.wasm.cwrap(fn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function K9(r){let{inputs:e,attrs:t,backend:o}=r,n=e.x,s=o.dataIdMap.get(n.dataId).id,{filterSize:a,strides:i,pad:l,dimRoundingMode:u}=t,c=N.computePool2DInfo(n.shape,a,i,1,l,u),p=c.filterHeight,m=c.filterWidth,f=c.padInfo.top,d=c.padInfo.right,h=c.padInfo.bottom,g=c.padInfo.left,y=c.dilationHeight,b=c.dilationWidth,w=c.strideHeight,_=c.strideWidth,C=c.inChannels,D=c.outChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let T=o.makeOutput(c.outShape,"float32"),R=o.dataIdMap.get(T.dataId).id;return rL(s,n.shape[0],n.shape[1],n.shape[2],p,m,f,d,h,g,y,b,w,_,C,D,R),T}var oL={kernelName:fn,backendName:"wasm",setupFunc:q9,kernelFunc:K9};var nL;function X9(r){nL=r.wasm.cwrap(dn,null,["number, number, number"])}function Y9(r){let{backend:e,inputs:t,attrs:o}=r,{axis:n,keepDims:s}=o,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,l=i,u=a,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=os(a,n,e),d=p;if(f){let _=e.dataIdMap.get(c.dataId).id;_!==i&&(u=c,l=_,d=N.getInnerMostAxes(d.length,u.shape.length))}N.assertAxesAreInnerMostDims("mean",d,u.shape.length);let[h,g]=N.computeOutAndReduceShapes(u.shape,d),y=x.sizeFromShape(g),b=u;u.dtype!=="float32"&&(b=pc({backend:e,inputs:{x:u},attrs:{dtype:"float32"}}),l=e.dataIdMap.get(b.dataId).id);let w=e.makeOutput(h,"float32");if(x.sizeFromShape(u.shape)!==0){let _=e.dataIdMap.get(w.dataId).id;nL(l,y,_)}if(f&&e.disposeData(c.dataId),s){let _=N.expandShapeToKeepDim(w.shape,m);w.shape=_}return u.dtype!=="float32"&&e.disposeData(b.dataId),w}var sL={kernelName:dn,backendName:"wasm",setupFunc:X9,kernelFunc:Y9};var iL;function Z9(r){iL=r.wasm.cwrap(hn,null,["number, number, number"])}function J9(r){let{backend:e,inputs:t,attrs:o}=r,{axis:n,keepDims:s}=o,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,l=i,u=a,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=os(a,n,e);if(f){let w=e.dataIdMap.get(c.dataId).id;w!==i&&(u=c,l=w)}let d=u.shape.length;N.assertAxesAreInnerMostDims("min",p,d);let[h,g]=N.computeOutAndReduceShapes(u.shape,p),y=x.sizeFromShape(g),b=e.makeOutput(h,u.dtype);if(x.sizeFromShape(u.shape)!==0){let w=e.dataIdMap.get(b.dataId).id;iL(l,y,w)}if(f&&e.disposeData(c.dataId),s){let w=N.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var aL={kernelName:hn,backendName:"wasm",setupFunc:Z9,kernelFunc:J9};var Q9=!1,lL=bt(gn,Q9);var eQ=!0,uL=bt(xn,eQ);var cL=St(ps);function Kp(r,e){let t=new Int32Array(r.wasm.HEAPU8.buffer,e,4),o=t[0],n=t[1],s=t[2],a=t[3];return r.wasm._free(e),{pSelectedIndices:o,selectedSize:n,pSelectedScores:s,pValidOutputs:a}}var pL;function tQ(r){pL=r.wasm.cwrap(xi,"number",["number","number","number","number","number"])}function rQ(r){let{backend:e,inputs:t,attrs:o}=r,{iouThreshold:n,maxOutputSize:s,scoreThreshold:a}=o,{boxes:i,scores:l}=t,u=e.dataIdMap.get(i.dataId).id,c=e.dataIdMap.get(l.dataId).id,p=pL(u,c,s,n,a),{pSelectedIndices:m,selectedSize:f,pSelectedScores:d,pValidOutputs:h}=Kp(e,p);return e.wasm._free(d),e.wasm._free(h),e.makeOutput([f],"int32",m)}var mL={kernelName:xi,backendName:"wasm",setupFunc:tQ,kernelFunc:rQ};var fL;function oQ(r){fL=r.wasm.cwrap(yi,"number",["number","number","number","number","number","bool"])}function nQ(r){let{backend:e,inputs:t,attrs:o}=r,{iouThreshold:n,maxOutputSize:s,scoreThreshold:a,padToMaxOutputSize:i}=o,{boxes:l,scores:u}=t,c=e.dataIdMap.get(l.dataId).id,p=e.dataIdMap.get(u.dataId).id,m=fL(c,p,s,n,a,i),{pSelectedIndices:f,selectedSize:d,pSelectedScores:h,pValidOutputs:g}=Kp(e,m);e.wasm._free(h);let y=e.makeOutput([d],"int32",f),b=e.makeOutput([],"int32",g);return[y,b]}var dL={kernelName:yi,backendName:"wasm",setupFunc:oQ,kernelFunc:nQ};var hL;function sQ(r){hL=r.wasm.cwrap(bi,"number",["number","number","number","number","number","number"])}function iQ(r){let{backend:e,inputs:t,attrs:o}=r,{iouThreshold:n,maxOutputSize:s,scoreThreshold:a,softNmsSigma:i}=o,{boxes:l,scores:u}=t,c=e.dataIdMap.get(l.dataId).id,p=e.dataIdMap.get(u.dataId).id,m=hL(c,p,s,n,a,i),{pSelectedIndices:f,selectedSize:d,pSelectedScores:h,pValidOutputs:g}=Kp(e,m);e.wasm._free(g);let y=e.makeOutput([d],"int32",f),b=e.makeOutput([d],"float32",h);return[y,b]}var gL={kernelName:bi,backendName:"wasm",setupFunc:sQ,kernelFunc:iQ};var aQ=!1,xL=bt(gi,aQ,"bool");var yL;function lQ(r){yL=r.wasm.cwrap(yn,null,["number","number","number","number","number"])}function uQ(r){let{inputs:e,backend:t,attrs:o}=r,{indices:n}=e,{depth:s,onValue:a,offValue:i}=o,l=t.makeOutput([...n.shape,s],"int32"),u=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(n.dataId).id;return yL(p,s,a,i,u),l}var bL={kernelName:yn,backendName:"wasm",setupFunc:lQ,kernelFunc:uQ};function cQ(r){let{inputs:{x:e},backend:t}=r,o=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(o).fill(1),o}var wL={kernelName:ms,backendName:"wasm",kernelFunc:cQ};function pQ(r){let{inputs:e,backend:t,attrs:o}=r,{axis:n}=o;if(e.length===1)return Ux({inputs:{input:e[0]},backend:t,attrs:{dim:n}});let s=e[0].shape,a=e[0].dtype;e.forEach(c=>{x.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),x.assert(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=e.map(c=>{let p=Ux({inputs:{input:c},backend:t,attrs:{dim:n}});return i.push(p),p}),u=KC({inputs:l,backend:t,attrs:{axis:n}});return i.forEach(c=>t.disposeData(c.dataId)),u}var _L={kernelName:fs,backendName:"wasm",kernelFunc:pQ};var kL;function mQ(r){kL=r.wasm.cwrap(bn,null,["number","array","number","number","array","array","number","number"])}function fQ(r){let{inputs:{x:e},backend:t,attrs:{paddings:o,constantValue:n}}=r,s=o.map((d,h)=>d[0]+e.shape[h]+d[1]),a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(s,e.dtype),l=t.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(e.shape).buffer),c=o.map(d=>d[0]),p=o.map(d=>d[1]),m=new Uint8Array(new Int32Array(c).buffer),f=new Uint8Array(new Int32Array(p).buffer);return kL(a,u,e.shape.length,Lt[e.dtype],m,f,n,l),i}var vL={kernelName:bn,backendName:"wasm",kernelFunc:fQ,setupFunc:mQ};var dQ=!1,CL=bt(wn,dQ);var IL;function hQ(r){IL=r.wasm.cwrap(_n,null,["number","number","number"])}function gQ(r){let{inputs:e,backend:t}=r,{x:o,alpha:n}=e,s=t.dataIdMap.get(o.dataId).id,a=t.dataIdMap.get(n.dataId).id,i=t.makeOutput(o.shape,"float32"),l=t.dataIdMap.get(i.dataId).id;return IL(s,a,l),i}var NL={kernelName:_n,backendName:"wasm",setupFunc:hQ,kernelFunc:gQ};var SL;function xQ(r){SL=r.wasm.cwrap(wi,null,["number","number","number","number"])}function yQ(r){let{backend:e,inputs:t,attrs:o}=r,{axis:n,keepDims:s}=o,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,l=i,u=a,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=os(a,n,e),d=p;if(f){let w=e.dataIdMap.get(c.dataId).id;w!==i&&(u=c,l=w,d=N.getInnerMostAxes(d.length,u.shape.length))}N.assertAxesAreInnerMostDims("prod",d,u.shape.length);let[h,g]=N.computeOutAndReduceShapes(u.shape,d),y=x.sizeFromShape(g),b=e.makeOutput(h,u.dtype);if(x.sizeFromShape(u.shape)!==0){let w=e.dataIdMap.get(b.dataId).id;SL(l,y,Lt[b.dtype],w)}if(f&&e.disposeData(c.dataId),s){let w=N.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var TL={kernelName:wi,backendName:"wasm",setupFunc:xQ,kernelFunc:yQ};var bQ=r=>{let{backend:e,attrs:t}=r,{start:o,stop:n,step:s,dtype:a}=t,i=Vd(o,n,s,a),l=e.makeOutput([i.length],a);return e.typedArrayFromHeap(l).set(i),l},AL={kernelName:ca,backendName:"wasm",kernelFunc:bQ};var wQ=!0,EL=bt(rn,wQ);var DL=St(kn);var $L=St(Cn);var RL;function _Q(r){RL=r.wasm.cwrap(vn,null,["number","number","number","number","number","number","number","number","number","number"])}function kQ(r){let{backend:e,inputs:t,attrs:o}=r,{images:n}=t,{alignCorners:s,halfPixelCenters:a,size:i}=o,[l,u]=i,[c,p,m,f]=n.shape,d=[c,l,u,f],h=e.dataIdMap.get(n.dataId),g;h.dtype!=="float32"&&(g=pc({backend:e,inputs:{x:n},attrs:{dtype:"float32"}}),h=e.dataIdMap.get(g.dataId));let y=h.id,b=e.makeOutput(d,"float32");if(x.sizeFromShape(n.shape)===0)return b;let w=e.dataIdMap.get(b.dataId).id;return RL(y,c,p,m,f,l,u,s?1:0,a?1:0,w),g!=null&&e.disposeData(g.dataId),b}var FL={kernelName:vn,backendName:"wasm",setupFunc:_Q,kernelFunc:kQ};var OL;function vQ(r){OL=r.wasm.cwrap(In,null,["number","array","number","array","number","number"])}function CQ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{dims:s}=o,a=x.parseAxisParam(s,n.shape);if(n.shape.length===0)return cc({inputs:{x:n},backend:t});let i=t.makeOutput(n.shape,n.dtype),l=t.dataIdMap.get(n.dataId).id,u=t.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(a).buffer),p=new Uint8Array(new Int32Array(n.shape).buffer);OL(l,c,a.length,p,n.shape.length,u);let m=Br({inputs:{x:i},attrs:{shape:n.shape},backend:t});return t.disposeData(i.dataId),m}var PL={kernelName:In,backendName:"wasm",kernelFunc:CQ,setupFunc:vQ};var ML;function IQ(r){ML=r.wasm.cwrap(Ei,null,["number","number","number","number","number","number","number","number","array","number","number"])}function NQ(r){let{inputs:e,backend:t,attrs:o}=r,{image:n}=e,{radians:s,fillValue:a,center:i}=o,l=t.makeOutput(n.shape,n.dtype),u=t.dataIdMap.get(n.dataId).id,c=t.dataIdMap.get(l.dataId).id,[p,m,f,d]=n.shape,[h,g]=N.getImageCenter(i,m,f),y=a===0,b=255,w=typeof a=="number"?[a,a,a,y?0:b]:[...a,b],_=new Uint8Array(new Int32Array(w).buffer);return ML(u,p,m,f,d,s,h,g,_,w.length,c),l}var LL={kernelName:Ei,backendName:"wasm",kernelFunc:NQ,setupFunc:IQ};var zL=St(Nn);var BL=St(Sn);var VL;function SQ(r){VL=r.wasm.cwrap(ki,null,["number","number","number","number","number","number","array","number","number"])}function TQ(r){let{backend:e,inputs:t,attrs:o}=r,{indices:n,updates:s}=t,{shape:a}=o,i=e.makeOutput(a,s.dtype);if(x.sizeFromShape(a)===0)return i;let{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:m}=Hh.calculateShapes(s,n,a),d=e.dataIdMap.get(n.dataId).id,g=e.dataIdMap.get(s.dataId).id,y=new Uint8Array(new Int32Array(p).buffer),b=e.dataIdMap.get(i.dataId).id;return VL(d,g,Lt[s.dtype],l,u,c,y,m,b),i}var GL={kernelName:ki,backendName:"wasm",setupFunc:SQ,kernelFunc:TQ};var WL;function AQ(r){WL=r.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function EQ(r){let{inputs:e,backend:t}=r,{condition:o,t:n,e:s}=e,a=t.dataIdMap.get(o.dataId).id,i=t.dataIdMap.get(n.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=t.makeOutput(n.shape,n.dtype),c=t.dataIdMap.get(u.dataId).id,p=o.shape.length,m=n.shape.length,f=p===0||p>1||m===1?1:x.sizeFromShape(n.shape.slice(1));return WL(a,i,l,f,c),u}var UL={kernelName:hs,backendName:"wasm",kernelFunc:EQ,setupFunc:AQ};var jL;function DQ(r){jL=r.wasm.cwrap(An,null,["number","number"])}function $Q(r){let{backend:e,inputs:{x:t}}=r,o=e.dataIdMap.get(t.dataId).id,n=e.makeOutput(t.shape,t.dtype),s=e.dataIdMap.get(n.dataId).id;return x.sizeFromShape(n.shape)===0||jL(o,s),n}var HL={kernelName:"Sigmoid",backendName:"wasm",setupFunc:DQ,kernelFunc:$Q};var qL=St(Tn);function mc(r){let{inputs:{x:e},attrs:{begin:t,size:o},backend:n}=r,[s,a]=nr.parseSliceParams(e,t,o),i=nr.isSliceContinous(e.shape,s,a),l=n.readSync(e.dataId),u=n.makeOutput(a,e.dtype),c=x.computeStrides(e.shape),p=n.dataIdMap.get(u.dataId);if(i){let d=nr.computeFlatOffset(s,c);return e.dtype==="string"?p.stringBytes=l.slice(d,d+x.sizeFromShape(a)):n.typedArrayFromHeap(u).set(l.subarray(d,d+x.sizeFromShape(a))),u}if(e.dtype==="string"){let d=Gd(l,s,a,e.shape,e.dtype);return p.stringBytes=d,u}let m=n.typedArrayFromHeap(u),f=e.shape.length;if(f===2)RQ(l,c[0],m,s,a);else if(f===3)FQ(l,c[0],c[1],m,s,a);else if(f===4)OQ(l,c[0],c[1],c[2],m,s,a);else{let d=Gd(l,s,a,e.shape,e.dtype);m.set(d)}return u}function RQ(r,e,t,o,n){let s=0,a=o[0],i=o[1],l=a+n[0];for(let u=a;u<l;u++){let c=u*e+i;t.set(r.subarray(c,c+n[1]),s),s+=n[1]}}function FQ(r,e,t,o,n,s){let a=0,i=n[0],l=n[1],u=n[2],c=i+s[0],p=l+s[1];for(let m=i;m<c;m++)for(let f=l;f<p;f++){let d=m*e+f*t+u;o.set(r.subarray(d,d+s[2]),a),a+=s[2]}}function OQ(r,e,t,o,n,s,a){let i=0,l=s[0],u=s[1],c=s[2],p=l+a[0],m=u+a[1],f=c+a[2],d=s[3];for(let h=l;h<p;h++)for(let g=u;g<m;g++)for(let y=c;y<f;y++){let b=h*e+g*t+y*o+d;n.set(r.subarray(b,b+a[3]),i),i+=a[3]}}var KL={kernelName:gs,backendName:"wasm",kernelFunc:mc};var XL;function PQ(r){XL=r.wasm.cwrap($n,null,["number","number","number","number"])}function MQ(r){let{backend:e,inputs:{logits:t},attrs:{dim:o}}=r,n=e.dataIdMap.get(t.dataId).id,s=e.makeOutput(t.shape,t.dtype),a=e.dataIdMap.get(s.dataId).id,i=t.shape[o],l=x.sizeFromShape(t.shape)/i;return x.sizeFromShape(s.shape)===0||XL(n,a,i,l),s}var YL={kernelName:$n,backendName:"wasm",setupFunc:PQ,kernelFunc:MQ};function LQ(r){let{inputs:e,attrs:t,backend:o}=r,{x:n}=e,{numOrSizeSplits:s,axis:a}=t,i=x.parseAxisParam(a,n.shape)[0],l=N.prepareSplitSize(n,s,i),u=new Array(n.shape.length).fill(0),c=n.shape.slice();return l.map(p=>{let m=[...c];m[i]=p;let f=mc({inputs:{x:n},attrs:{begin:u,size:m},backend:o});return u[i]+=p,f})}var ZL={kernelName:xs,backendName:"wasm",kernelFunc:LQ};var JL=St(En);var QL=St(fa);var zQ=!0,ez=bt(Rn,zQ);var tz;function BQ(r){tz=r.wasm.cwrap(Fo,null,["number","number","number"])}function VQ(r){let{backend:e,inputs:t,attrs:o}=r,{alpha:n}=o,{x:s}=t,a=e.dataIdMap.get(s.dataId).id,i=e.makeOutput(s.shape,s.dtype),l=e.dataIdMap.get(i.dataId).id;return tz(a,n,l),i}var rz={kernelName:Fo,backendName:"wasm",setupFunc:BQ,kernelFunc:VQ};var oz;function GQ(r){oz=r.wasm.cwrap(Si,null,["number","array","number","array","array","array","array","array","number","number"])}function WQ(r){let{backend:e,inputs:t,attrs:o}=r,{x:n}=t,{begin:s,end:a,strides:i}=o;i==null&&(i=new Array(s.length));let{beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=o,f=N.slice_util.maskToAxes(c);if(f.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(c!==0&&p!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(c!==0&&m!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let d=n.shape.length-s.length,h=N.slice_util.maskToAxes(p),g=n.shape.slice();h.forEach(G=>{s[G]=0,a[G]=1,g.splice(G,0,1)});let y=Br({inputs:{x:n},attrs:{shape:g},backend:e}),{begin:b,end:w,strides:_}=N.slice_util.getNormalizedAxes(y.shape,f,d,s,a,i,l,u,c);s=b,a=w,i=_;let C=N.slice_util.maskToAxes(m);C.forEach(G=>{a[G]=s[G]+1,i[G]=1});let D=N.slice_util.computeOutShape(s,a,i),T=D.filter((G,U)=>C.indexOf(U)===-1);if(i.every(G=>G===1)){let G=mc({inputs:{x:n},attrs:{begin:s,size:D},backend:e});e.disposeData(y.dataId);let U=Br({inputs:{x:G},attrs:{shape:T},backend:e});return e.disposeData(G.dataId),U}let P=e.makeOutput(T,"float32");if(!T.some(G=>G===0)){let G=e.dataIdMap.get(y.dataId).id,U=new Uint8Array(new Int32Array(x.computeStrides(y.shape)).buffer),j=new Uint8Array(new Int32Array(s).buffer),H=new Uint8Array(new Int32Array(a).buffer),K=new Uint8Array(new Int32Array(i).buffer),X=new Uint8Array(new Int32Array(T).buffer),oe=new Uint8Array(new Int32Array(x.computeStrides(T)).buffer),Y=e.dataIdMap.get(P.dataId).id;oz(G,U,y.shape.length,j,H,K,X,oe,T.length,Y)}e.disposeData(y.dataId);let B=Br({inputs:{x:P},attrs:{shape:T},backend:e});return e.disposeData(P.dataId),B}var nz={kernelName:Si,backendName:"wasm",setupFunc:GQ,kernelFunc:WQ};var UQ=!0,sz=bt(Fn,UQ);var iz;function jQ(r){iz=r.wasm.cwrap(Dn,null,["number, number, number"])}function HQ(r){let{backend:e,inputs:t,attrs:o}=r,{axis:n,keepDims:s}=o,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,l=i,u=a,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=os(a,n,e),d=p;if(f){let w=e.dataIdMap.get(c.dataId).id;w!==i&&(u=c,l=w,d=N.getInnerMostAxes(d.length,u.shape.length))}N.assertAxesAreInnerMostDims("sum",d,u.shape.length);let[h,g]=N.computeOutAndReduceShapes(u.shape,d),y=x.sizeFromShape(g),b=e.makeOutput(h,u.dtype);if(x.sizeFromShape(u.shape)!==0){let w=e.dataIdMap.get(b.dataId).id;iz(l,y,w)}if(f&&e.disposeData(c.dataId),s){let w=N.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var az={kernelName:Dn,backendName:"wasm",setupFunc:jQ,kernelFunc:HQ};var lz=St(On);var uz;function qQ(r){uz=r.wasm.cwrap(_o,null,["number","array","number","array","number","number"])}function KQ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,s=t.dataIdMap.get(n.dataId).id,{reps:a}=o,i=new Array(n.shape.length);for(let m=0;m<i.length;m++)i[m]=n.shape[m]*a[m];let l=new Uint8Array(new Int32Array(n.shape).buffer),u=new Uint8Array(new Int32Array(i).buffer),c=t.makeOutput(i,n.dtype),p=t.dataIdMap.get(c.dataId).id;return uz(s,l,n.shape.length,u,i.length,Lt[c.dtype],p),c}var cz={kernelName:_o,backendName:"wasm",setupFunc:qQ,kernelFunc:KQ};var pz;function XQ(r){pz=r.wasm.cwrap(Ai,null,["number","array","number","number","number","bool","number","number"])}var YQ=({inputs:r,backend:e,attrs:t})=>{let{x:o}=r,{k:n,sorted:s}=t,a=e.dataIdMap.get(o.dataId).id,i=new Uint8Array(new Int32Array(o.shape).buffer),l=o.shape.slice();l[l.length-1]=n;let u=e.makeOutput(l,o.dtype),c=e.dataIdMap.get(u.dataId).id,p=e.makeOutput(l,"int32"),m=e.dataIdMap.get(p.dataId).id;return pz(a,i,o.shape.length,Lt[o.dtype],n,s,c,m),[u,p]},mz={kernelName:Ai,backendName:"wasm",setupFunc:XQ,kernelFunc:YQ};function ZQ(r){let{inputs:e,backend:t,attrs:o}=r,{value:n}=e,{axis:s}=o;s<0&&(s+=n.shape.length);let a=n.shape[s],i=n.shape.length,l=new Array(i-1),u=0;for(let f=0;f<i;f++)f!==s&&(l[u++]=n.shape[f]);let c=new Array(a),p=new Array(i).fill(0),m=n.shape.slice();m[s]=1;for(let f=0;f<c.length;f++)p[s]=f,c[f]=mc({inputs:{x:n},attrs:{begin:p,size:m},backend:t});return c.map(({dataId:f,dtype:d})=>({dataId:f,dtype:d,shape:l}))}var fz={kernelName:ys,backendName:"wasm",kernelFunc:ZQ};function JQ(r){let{inputs:{x:e},backend:t}=r,o=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(o).fill(0),o}var dz={kernelName:bs,backendName:"wasm",kernelFunc:JQ};var QQ=[XP,YP,JP,oM,sM,lM,uM,cM,mM,fM,hM,xM,yM,wM,kM,CM,NM,SM,TM,AM,EM,$M,RM,FM,KP,PM,LM,BM,GM,UM,jM,HM,QP,KM,XM,YM,ZM,JM,eL,tL,oL,sL,aL,lL,uL,cL,mL,dL,gL,xL,bL,wL,_L,vL,CL,NL,TL,AL,EL,DL,$L,iM,FL,PL,LL,BL,zL,GL,UL,HL,qL,KL,YL,ZL,JL,QL,ez,rz,nz,sz,az,lz,cz,mz,tM,fz,dz];for(let r of QQ)Ja(r);var YC=W();YC.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));YC.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(YC.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(r){return!1}});var tI=Ic(xz());var yz='var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}';var wz=Ic(bz());var qx=class extends Gs{constructor(e){super();this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new Xa(this,Po())}write(e,t,o){let n={id:this.dataIdNextNumber++};return this.move(n,e,t,o,1),n}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=x.now();return e(),{kernelMs:x.now()-t}}move(e,t,o,n,s){let a=this.dataIdNextNumber++;if(n==="string"){let c=t;this.dataIdMap.set(e,{id:a,stringBytes:c,shape:o,dtype:n,memoryOffset:null,refCount:s});return}let i=x.sizeFromShape(o),l=i*x.bytesPerElement(n),u=this.wasm._malloc(l);this.dataIdMap.set(e,{id:a,memoryOffset:u,shape:o,dtype:n,refCount:s}),this.wasm.tfjs.registerTensor(a,i,u),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,l),u)}async read(e){return this.readSync(e)}readSync(e){let{memoryOffset:t,dtype:o,shape:n,stringBytes:s}=this.dataIdMap.get(e);if(o==="string")return s;let a=this.wasm.HEAPU8.slice(t,t+x.sizeFromShape(n)*x.bytesPerElement(o));return eee(a.buffer,o)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let o=this.dataIdMap.get(e);if(o.refCount--,!t&&o.refCount>0)return!1;this.wasm._free(o.memoryOffset),this.wasm.tfjs.disposeData(o.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,o){let n;if(o==null)n=this.write(null,e,t);else{let s=this.dataIdNextNumber++;n={id:s},this.dataIdMap.set(n,{id:s,memoryOffset:o,shape:e,dtype:t,refCount:1});let a=x.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,a,o)}return{dataId:n,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:o}){let n=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(o),a=x.sizeFromShape(e);switch(t){case"float32":return new Float32Array(n,s,a);case"int32":return new Int32Array(n,s,a);case"bool":return new Uint8Array(n,s,a);default:throw new Error(`Unknown dtype ${t}`)}}};function tee(r){return(e,t)=>(x.fetch(r,{credentials:"same-origin"}).then(o=>{o.ok||e.env.a(`failed to load wasm binary file at '${r}'`),o.arrayBuffer().then(n=>{WebAssembly.instantiate(n,e).then(s=>{t(s.instance)})})}),{})}function _z(r,e,t){if(Kx!=null)return Kx;let o="tfjs-backend-wasm.wasm";return r&&e?o="tfjs-backend-wasm-threaded-simd.wasm":r&&(o="tfjs-backend-wasm-simd.wasm"),lh!=null&&lh[o]!=null?lh[o]:t+o}async function kz(){let[r,e]=await Promise.all([W().getAsync("WASM_HAS_SIMD_SUPPORT"),W().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((t,o)=>{let n={};n.locateFile=(i,l)=>{if(i.endsWith(".worker.js")){let u=yz,c=new Blob([u],{type:"application/javascript"});return URL.createObjectURL(c)}return i.endsWith(".wasm")?_z(r,e,uh!=null?uh:l):l+i},rI&&(n.instantiateWasm=tee(_z(r,e,uh!=null?uh:"")));let s=!1;n.onAbort=()=>{if(s||ch)return;ch=!0,o({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let a;e&&r&&Kx==null?(n.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+tI.default.toString()],{type:"text/javascript"}),a=(0,tI.default)(n)):a=(0,wz.default)(n),a.then(i=>{s=!0,ch=!1;let l=null;i.tfjs={init:i.cwrap("init",null,[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",l,["number"]),dispose:i.cwrap("dispose",l,[])},t({wasm:i})})})}function eee(r,e){switch(e){case"float32":return new Float32Array(r);case"int32":return new Int32Array(r);case"bool":return new Uint8Array(r);default:throw new Error(`Unknown dtype ${e}`)}}var ree=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Kx=null,uh=null,lh={},ch=!1,rI=!1;function oee(r,e=!1){if(Yh("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),ch)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Kx=r,rI=e}function nee(r,e=!1){if(ch)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof r=="string")uh=r;else{lh=r;let t=ree.filter(o=>lh[o]==null);if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}rI=e}var see="3.2.0";var iee=2;hu("wasm",async()=>{let{wasm:r}=await kz();return new qx(r)},iee);export{as as Abs,js as Acos,Hs as Acosh,Qc as AdadeltaOptimizer,ep as AdagradOptimizer,tp as AdamOptimizer,rp as AdamaxOptimizer,wo as Add,Ho as AddN,Ml as All,Ll as Any,qo as ArgMax,ea as ArgMin,qs as Asin,Ks as Asinh,Xs as Atan,Zs as Atan2,Ys as Atanh,Ko as AvgPool,ta as AvgPool3D,Bl as AvgPool3DGrad,zl as AvgPoolGrad,qx as BackendWasm,Xo as BatchMatMul,ra as BatchToSpaceND,Vl as Bincount,yb as BroadcastTo,Ug as Callback,Ng as CallbackList,Do as Cast,Yo as Ceil,$o as ClipByValue,Gl as Complex,oa as ComplexAbs,ls as Concat,Zo as Conv2D,Wl as Conv2DBackpropFilter,Jo as Conv2DBackpropInput,na as Conv3D,Ul as Conv3DBackpropFilterV2,jl as Conv3DBackpropInputV2,Qo as Cos,Js as Cosh,Qs as CropAndResize,en as Cumsum,Tg as CustomCallback,Xa as DataStorage,Hl as DenseBincount,ei as DepthToSpace,tn as DepthwiseConv2dNative,ql as DepthwiseConv2dNativeBackpropFilter,Kl as DepthwiseConv2dNativeBackpropInput,Xl as Diag,sa as Dilation2D,Dc as Dilation2DBackpropFilter,Ec as Dilation2DBackpropInput,hb as ENV,Hg as EarlyStopping,ti as Elu,Yl as EluGrad,Fh as Environment,oi as Equal,ri as Erf,on as Exp,us as ExpandDims,ni as Expm1,Zl as FFT,ia as Fill,si as FlipLeftRight,nn as Floor,sn as FloorDiv,$c as FromPixels,an as FusedBatchNorm,_s as FusedConv2D,ks as FusedDepthwiseConv2D,ii as GatherNd,cs as GatherV2,lx as GraphModel,ai as Greater,ln as GreaterEqual,Sg as History,Jl as IFFT,Ro as Identity,Ql as Imag,Nt as InputSpec,li as IsFinite,ui as IsInf,ci as IsNan,Gs as KernelBackend,aa as LRN,tu as LRNGrad,gf as LayerVariable,No as LayersModel,un as LeakyRelu,pi as Less,mi as LessEqual,eu as LinSpace,cn as Log,fi as Log1p,bb as LogSoftmax,di as LogicalAnd,Ya as LogicalNot,Za as LogicalOr,pn as Max,fn as MaxPool,la as MaxPool3D,ou as MaxPool3DGrad,ru as MaxPoolGrad,nu as MaxPoolWithArgmax,mn as Maximum,dn as Mean,hn as Min,gn as Minimum,ua as MirrorPad,hi as Mod,op as MomentumOptimizer,su as Multinomial,xn as Multiply,ps as Neg,xi as NonMaxSuppressionV3,yi as NonMaxSuppressionV4,bi as NonMaxSuppressionV5,gi as NotEqual,RI as OP_SCOPE_SUFFIX,yn as OneHot,ms as OnesLike,Or as Optimizer,fs as Pack,bn as PadV2,WB as Pool,wn as Pow,_n as Prelu,wi as Prod,np as RMSPropOptimizer,mo as RNN,ca as Range,Cb as Rank,iu as Real,rn as RealDiv,_i as Reciprocal,Gt as Reduction,kn as Relu,Cn as Relu6,ds as Reshape,vn as ResizeBilinear,lu as ResizeBilinearGrad,pa as ResizeNearestNeighbor,au as ResizeNearestNeighborGrad,In as Reverse,Ei as RotateWithOffset,Nn as Round,Sn as Rsqrt,al as SGDOptimizer,ki as ScatterNd,hs as Select,vi as Selu,Wi as Sequential,An as Sigmoid,Ii as Sign,Tn as Sin,Ci as Sinh,gs as Slice,$n as Softmax,Ni as Softplus,ma as SpaceToBatchND,uu as SparseToDense,xs as SplitV,En as Sqrt,fa as Square,Rn as SquaredDifference,Fo as Step,Si as StridedSlice,Fn as Sub,Dn as Sum,zr as SymbolicTensor,Ti as Tan,On as Tanh,Ve as Tensor,lt as TensorBuffer,_o as Tile,Ai as TopK,Pn as Transpose,cu as Unique,ys as Unpack,da as UnsortedSegmentSum,el as Variable,bs as ZerosLike,ws as _FusedMatMul,It as abs,xm as acos,ym as acosh,Q as add,ew as addN,xu as all,ol as any,nl as argMax,bm as argMin,wm as asin,_m as asinh,km as atan,vm as atan2,Cm as atanh,wa as avgPool,Im as avgPool3d,Qb as backend,N as backend_util,VV as basicLSTMCell,Ln as batchNorm,nw as batchNorm2d,sw as batchNorm3d,iw as batchNorm4d,_a as batchToSpaceND,aw as bincount,XU as booleanMaskAsync,sl as broadcastTo,Uh as browser,ve as buffer,N1 as callbacks,ne as cast,Nm as ceil,sr as clipByValue,Oo as clone,ko as complex,Ye as concat,lw as concat1d,uw as concat2d,cw as concat3d,pw as concat4d,r_ as constraints,wu as conv1d,Kr as conv2d,_u as conv2dTranspose,Sm as conv3d,lG as conv3dTranspose,HB as copyRegisteredKernels,ka as cos,ku as cosh,Jm as cosineWindow,vu as cumsum,Xr as customGrad,Ek as data,mw as denseBincount,Yh as deprecationWarn,Tm as depthToSpace,Cs as depthwiseConv2d,A1 as deregisterOp,Lc as device_util,gG as diag,Am as dilation2d,eV as disableDeprecationWarnings,Te as dispose,tV as disposeVariables,me as div,Em as divNoNan,fw as dot,zw as dropout,Is as elu,Q3 as enableDebugMode,J3 as enableProdMode,Bw as enclosingPowerOfTwo,Po as engine,W as env,vo as equal,Dm as erf,Yt as exp,ir as expandDims,$m as expm1,Hc as eye,Ea as fft,va as fill,aV as findBackend,lV as findBackendFactory,Ns as floor,gu as floorDiv,Gn as fused,zn as gather,Lw as gatherND,jh as gather_util,sV as getBackend,Oh as getGradient,Fc as getKernel,pm as getKernelsForBackend,jG as grad,HG as grads,Qt as greater,io as greaterEqual,Pi as ifft,Cu as imag,Ds as image,n4 as inTopKAsync,a_ as initializers,Gg as input,Cr as io,Pu as irfft,dw as isFinite,hw as isInf,gw as isNaN,Et as keep,Tr as kernel_impls,W_ as layers,Ca as leakyRelu,Iu as less,zo as lessEqual,jw as linalg,xw as linspace,nA as loadGraphModel,f1 as loadLayersModel,Rm as localResponseNormalization,ar as log,Nu as log1p,yw as logSigmoid,Su as logSoftmax,Om as logSumExp,dr as logicalAnd,Ia as logicalNot,Tu as logicalOr,kw as logicalXor,Y4 as losses,We as matMul,cN as math,lr as max,Na as maxPool,Pm as maxPool3d,vw as maxPoolWithArgmax,Yr as maximum,dt as mean,Wc as memory,q_ as metrics,Oi as min,Ts as minimum,Mm as mirrorPad,Lm as mod,p1 as model,K_ as models,qc as moments,JU as movingAverage,O as mul,_W as multiRNNCell,Cw as multinomial,He as neg,Qm as nextFrame,zu as norm,Vn as notEqual,vs as oneHot,Ir as ones,er as onesLike,S as op,NW as outerProduct,Rr as pad,AW as pad1d,DW as pad2d,RW as pad3d,OW as pad4d,Iw as pool,Fr as pow,Ta as prelu,Gb as print,Au as prod,rV as profile,UW as rand,JW as randomGamma,og as randomNormal,As as randomUniform,Xc as range,nV as ready,il as real,Bm as reciprocal,hu as registerBackend,d1 as registerCallbackConstructor,_b as registerGradient,Ja as registerKernel,T1 as registerOp,X_ as regularizers,Nr as relu,Du as relu6,iV as removeBackend,M as reshape,Ht as reverse,aU as reverse1d,uU as reverse2d,pU as reverse3d,fU as reverse4d,Da as rfft,Vm as round,$u as rsqrt,ue as scalar,Mw as scatterND,Hh as scatter_util,Ru as selu,Gm as separableConv2d,m1 as sequential,J as serialization,NN as setBackend,uV as setPlatform,oee as setWasmPath,nee as setWasmPaths,Fw as setdiff1dAsync,qr as sigmoid,Wm as sign,X4 as signal,Fu as sin,Ou as sinh,Re as slice,Um as slice1d,ng as slice2d,jm as slice3d,Yc as slice4d,nr as slice_util,Aa as softmax,Ss as softplus,Sa as spaceToBatchND,Zm as sparseToDense,K4 as spectral,ur as split,gt as sqrt,Oe as square,Mu as squaredDifference,Co as squeeze,Bt as stack,Es as step,Hm as stridedSlice,ce as sub,ge as sum,mu as sumOutType,qm as tan,Fi as tanh,$r as tensor,Vt as tensor1d,Mi as tensor2d,Hb as tensor3d,zU as tensor4d,BU as tensor5d,VU as tensor6d,Mn as tensor_util,vN as test_util,V as tidy,Lo as tile,oV as time,Km as topk,ll as train,je as transpose,Lu as truncatedNormal,Zc as unique,jB as unregisterGradient,UB as unregisterKernel,Xm as unsortedSegmentSum,cr as unstack,fr as upcastType,x as util,qG as valueAndGrad,KG as valueAndGrads,Ow as variable,eg as variableGrads,qJ as version,ux as version_converter,Jb as version_core,dl as version_layers,see as version_wasm,Dt as where,Ym as whereAsync,ht as zeros,Ce as zerosLike};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/** @license See the LICENSE file. */
//# sourceMappingURL=tfjs.esm.js.map
