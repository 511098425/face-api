var F9=Object.create,qm=Object.defineProperty,R9=Object.getPrototypeOf,P9=Object.prototype.hasOwnProperty,O9=Object.getOwnPropertyNames,L9=Object.getOwnPropertyDescriptor,xE=i=>qm(i,"__esModule",{value:!0}),Hm=(i,a)=>()=>(a||(a={exports:{}},i(a.exports,a)),a.exports),jm=(i,a)=>{xE(i);for(var u in a)qm(i,u,{get:a[u],enumerable:!0})},M9=(i,a,u)=>{if(xE(i),a&&typeof a=="object"||typeof a=="function")for(let h of O9(a))!P9.call(i,h)&&h!=="default"&&qm(i,h,{get:()=>a[h],enumerable:!(u=L9(a,h))||u.enumerable});return i},te=i=>i&&i.__esModule?i:M9(qm(i!=null?F9(R9(i)):{},"default",{value:i,enumerable:!0}),i),vE=Hm((dl,wE)=>{"use strict";var B9=function(){if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof Is!="undefined")return Is;throw new Error("unable to locate global object")},Is=B9();wE.exports=dl=Is.fetch;Is.fetch&&(dl.default=Is.fetch.bind(Is));dl.Headers=Is.Headers;dl.Request=Is.Request;dl.Response=Is.Response}),ee=Hm((Km,TE)=>{(function(i,a){typeof Km=="object"&&typeof TE!="undefined"?a(Km):typeof define=="function"&&define.amd?define(["exports"],a):(i=i||self,a(i.tf=i.tf||{}))})(Km,function(i){"use strict";let a=1e-7,u=1e-4;class h{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class d{time(t){return g("time")}read(t){return g("read")}readSync(t){return g("readSync")}numDataIds(){return g("numDataIds")}disposeData(t){return g("disposeData")}write(t,e,r){return g("write")}move(t,e,r,o){return g("move")}memory(){return g("memory")}floatPrecision(){return g("floatPrecision")}epsilon(){return this.floatPrecision()===32?a:u}batchMatMul(t,e,r,o){return g("batchMatMul")}fusedBatchMatMul({a:t,b:e,transposeA:r,transposeB:o,bias:s,activation:c,preluActivationWeights:l}){return g("fusedBatchMatMul")}slice(t,e,r){return g("slice")}stridedSlice(t,e,r,o){return g("stridedSlice")}unstack(t,e){return g("unstack")}reverse(t,e){return g("reverse")}concat(t,e){return g("concat")}neg(t){return g("neg")}add(t,e){return g("add")}addN(t){return g("addN")}subtract(t,e){return g("subtract")}multiply(t,e){return g("multiply")}realDivide(t,e){return g("realDivide")}floorDiv(t,e){return g("floorDiv")}sum(t,e){return g("sum")}prod(t,e){return g("prod")}unsortedSegmentSum(t,e,r){return g("unsortedSegmentSum")}argMin(t,e){return g("argMin")}argMax(t,e){return g("argMax")}equal(t,e){return g("equal")}notEqual(t,e){return g("notEqual")}less(t,e){return g("less")}lessEqual(t,e){return g("lessEqual")}greater(t,e){return g("greater")}greaterEqual(t,e){return g("greaterEqual")}logicalNot(t){return g("logicalNot")}logicalAnd(t,e){return g("logicalAnd")}logicalOr(t,e){return g("logicalOr")}where(t){return g("where")}select(t,e,r){return g("select")}topk(t,e,r){return g("topk")}min(t,e){return g("min")}minimum(t,e){return g("minimum")}mod(t,e){return g("mod")}max(t,e){return g("max")}maximum(t,e){return g("maximum")}all(t,e){return g("all")}any(t,e){return g("any")}squaredDifference(t,e){return g("squaredDifference")}ceil(t){return g("ceil")}floor(t){return g("floor")}round(t){return g("round")}sign(t){return g("sign")}isNaN(t){return g("isNaN")}isInf(t){return g("isInf")}isFinite(t){return g("isFinite")}pow(t,e){return g("pow")}exp(t){return g("exp")}expm1(t){return g("expm1")}softmax(t,e){return g("softmax")}log(t){return g("log")}log1p(t){return g("log1p")}sqrt(t){return g("sqrt")}rsqrt(t){return g("rsqrt")}square(t){return g("square")}reciprocal(t){return g("reciprocal")}relu(t){return g("relu")}relu6(t){return g("relu6")}prelu(t,e){return g("prelu")}elu(t){return g("elu")}eluDer(t,e){return g("eluDer")}selu(t){return g("selu")}int(t){return g("int")}clip(t,e,r){return g("clip")}abs(t){return g("abs")}complexAbs(t){return g("complexAbs")}sigmoid(t){return g("sigmoid")}softplus(t){return g("softplus")}sin(t){return g("sin")}cos(t){return g("cos")}tan(t){return g("tan")}asin(t){return g("asin")}acos(t){return g("acos")}atan(t){return g("atan")}atan2(t,e){return g("atan2")}sinh(t){return g("sinh")}cosh(t){return g("cosh")}tanh(t){return g("tanh")}asinh(t){return g("asinh")}acosh(t){return g("acosh")}atanh(t){return g("atanh")}erf(t){return g("erf")}step(t,e){return g("step")}fusedConv2d({input:t,filter:e,convInfo:r,bias:o,activation:s,preluActivationWeights:c}){return g("fusedConv2d")}conv2d(t,e,r){return g("conv2d")}conv2dDerInput(t,e,r){return g("conv2dDerInput")}conv2dDerFilter(t,e,r){return g("conv2dDerFilter")}fusedDepthwiseConv2D({input:t,filter:e,convInfo:r,bias:o,activation:s,preluActivationWeights:c}){return g("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,r){return g("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,r){return g("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,r){return g("depthwiseConv2DDerFilter")}conv3d(t,e,r){return g("conv3d")}conv3dDerInput(t,e,r){return g("conv3dDerInput")}conv3dDerFilter(t,e,r){return g("conv3dDerFilter")}maxPool(t,e){return g("maxPool")}maxPoolBackprop(t,e,r,o){return g("maxPoolBackprop")}avgPool(t,e){return g("avgPool")}avgPoolBackprop(t,e,r){return g("avgPoolBackprop")}avgPool3d(t,e){return g("avgPool3d")}avgPool3dBackprop(t,e,r){return g("avgPool3dBackprop")}maxPool3d(t,e){return g("maxPool3d")}maxPool3dBackprop(t,e,r,o){return g("maxPool3dBackprop")}reshape(t,e){return g("reshape")}cast(t,e){return g("cast")}tile(t,e){return g("tile")}pad(t,e,r){return g("pad")}transpose(t,e){return g("transpose")}gather(t,e,r){return g("gather")}gatherND(t,e){return g("gatherND")}scatterND(t,e,r){return g("scatterND")}batchToSpaceND(t,e,r){return g("batchToSpaceND")}spaceToBatchND(t,e,r){return g("spaceToBatchND")}resizeBilinear(t,e,r,o){return g("resizeBilinear")}resizeBilinearBackprop(t,e,r){return g("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,r,o){return g("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,r){return g("resizeNearestNeighborBackprop")}batchNorm(t,e,r,o,s,c){return g("batchNorm")}localResponseNormalization4D(t,e,r,o,s){return g("localResponseNormalization4D")}LRNGrad(t,e,r,o,s,c,l){return g("LRNGrad")}multinomial(t,e,r,o){return g("multinomial")}oneHot(t,e,r,o){return g("oneHot")}cumsum(t,e,r,o){return g("cumsum")}nonMaxSuppression(t,e,r,o,s){return g("nonMaxSuppression")}fft(t){return g("fft")}ifft(t){return g("ifft")}complex(t,e){return g("complex")}real(t){return g("real")}imag(t){return g("imag")}cropAndResize(t,e,r,o,s,c){return g("cropAndResize")}depthToSpace(t,e,r){return g("depthToSpace")}split(t,e,r){return g("split")}sparseToDense(t,e,r,o){return g("sparseToDense")}diag(t){return g("diag")}fill(t,e,r){return g("fill")}onesLike(t){return g("onesLike")}zerosLike(t){return g("zerosLike")}linspace(t,e,r){return g("linspace")}dispose(){return g("dispose")}}function g(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function x(n){let t=n.length,e=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,e=n[t],n[t]=n[r],n[r]=e}function w(n,t,e){return Math.max(n,Math.min(t,e))}function k(n){return n%2===0?n:n+1}function C(n){let t=0;for(let e=0;e<n.length;e++)t+=n[e];return t}function $(n,t){let e=Math.random();return t*e+(1-e)*n}function F(n,t){let e=0;for(let r=0;r<n.length;r++){let o=Number(n[r])-Number(t[r]);e+=o*o}return e}function _(n,t){if(!n)throw new Error(typeof t=="string"?t:t())}function W(n,t,e=""){_(lt(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function et(n){_(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function tt(n,t=[],e=!1){if(t==null&&(t=[]),Array.isArray(n)||gn(n)&&!e)for(let r=0;r<n.length;++r)tt(n[r],t,e);else t.push(n);return t}function G(n){if(n.length===0)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function mt(n){return n.length===0}function lt(n,t){if(n===t)return!0;if(n==null||t==null)return!1;if(n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function gt(n){return n%1===0}function _t(n){if(Math.tanh!=null)return Math.tanh(n);if(n===Infinity)return 1;if(n===-Infinity)return-1;{let t=Math.exp(2*n);return(t-1)/(t+1)}}function Gt(n){let t=Math.ceil(Math.sqrt(n));return[t,Math.ceil(n/t)]}function se(n){let t=new Uint32Array(n);for(let e=0;e<n;++e)t[e]=e;return x(t),t}function fe(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function _e(n,t=r=>0,e){return new Promise((r,o)=>{let s=0,c=()=>{if(n()){r();return}s++;let l=t(s);if(e!=null&&s>=e){o();return}setTimeout(c,l)};c()})}function Ge(n,t){let e=1,r=-1;for(let s=0;s<n.length;++s)if(n[s]>=0)e*=n[s];else if(n[s]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(n[s]<0)throw Error(`Shapes can not be < 0. Found ${n[s]} at dim ${s}`);if(r===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${n}`);return n}if(e===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);let o=n.slice();return o[r]=t/e,o}function Vt(n,t){let e=t.length;return n=n==null?t.map((r,o)=>o):[].concat(n),_(n.every(r=>r>=-e&&r<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),_(n.every(r=>gt(r)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(r=>r<0?e+r:r)}function ln(n,t){let e=[],r=[],o=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||o?null:Vt(t,n).sort(),c=0;for(let l=0;l<n.length;++l){if(s!=null){if(s[c]===l&&n[l]!==1)throw new Error(`Can't squeeze axis ${l} since its dim '${n[l]}' is not 1`);(s[c]==null||s[c]>l)&&n[l]===1&&(e.push(n[l]),r.push(l)),s[c]<=l&&c++}n[l]!==1&&(e.push(n[l]),r.push(l))}return{newShape:e,keptDims:r}}function Ce(n,t){let e=null;if(n==null||n==="float32")e=new Float32Array(t);else if(n==="int32")e=new Int32Array(t);else if(n==="bool")e=new Uint8Array(t);else throw new Error(`Unknown data type ${n}`);return e}function rr(n,t){let e=null;if(n==null||n==="float32")e=new Float32Array(t);else if(n==="int32")e=new Int32Array(t);else if(n==="bool")e=new Uint8Array(t);else if(n==="string")e=new Array(t);else throw new Error(`Unknown data type ${n}`);return e}function Ys(n,t){for(let e=0;e<n.length;e++){let r=n[e];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function Js(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function sc(n,t){return t==="complex64"||(t==="float32"&&n!=="complex64"||t==="int32"&&n!=="float32"&&n!=="complex64")?!1:!(t==="bool"&&n==="bool")}function gn(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array}function Pb(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function jk(n){if(n==null)return 0;let t=0;return n.forEach(e=>t+=e.length),t}function as(n){return typeof n=="string"||n instanceof String}function Kk(n){return typeof n=="boolean"}function nf(n){return typeof n=="number"}function ic(n){return Array.isArray(n)?ic(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array?"int32":nf(n)?"float32":as(n)?"string":Kk(n)?"bool":"float32"}function Zs(n){return!!(n&&n.constructor&&n.call&&n.apply)}function rf(n,t){for(let e=t;e<n;++e)if(n%e===0)return e;return n}function Yt(n){let t=n.length;if(t<2)return[];let e=new Array(t-1);e[t-2]=n[t-1];for(let r=t-3;r>=0;--r)e[r]=e[r+1]*n[r+1];return e}function Xk(n,t,e){let r=new Array;if(t.length===1){let o=t[0];for(let s=0;s<o;s++)r[s]=e[n+s]}else{let o=t[0],s=t.slice(1),c=s.reduce((l,p)=>l*p);for(let l=0;l<o;l++)r[l]=Xk(n+l*c,s,e)}return r}function Er(n,t){if(n.length===0)return t[0];let e=n.reduce((r,o)=>r*o);if(e===0)return[];if(e!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}.`);return Xk(0,n,t)}function Ob(n,t){let e=ac(n,t);for(let r=0;r<e.length;r++)e[r]=1;return e}function ac(n,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function Lb(n,t){let e=n.reduce((r,o)=>r*o,1);if(t==null||t==="float32")return Er(n,new Float32Array(e));if(t==="int32")return Er(n,new Int32Array(e));if(t==="bool")return Er(n,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function Mb(n){n.forEach(t=>{_(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Kr(n,t,e){if(t===0)return 0;if(t===1)return n[0];let r=n[n.length-1];for(let o=0;o<n.length-1;++o)r+=e[o]*n[o];return r}function Ui(n,t,e){if(t===0)return[];if(t===1)return[n];let r=new Array(t);for(let o=0;o<r.length-1;++o)r[o]=Math.floor(n/e[o]),n-=r[o]*e[o];return r[r.length-1]=n,r}function qi(n){return n&&n.then&&typeof n.then=="function"}let Yk="tfjsflags";class Jk{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,r){if(this.flagRegistry[t]={evaluationFn:e,setHook:r},this.urlFlags[t]!=null){let o=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${o}.`),this.set(t,o)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];let e=this.evaluateFlag(t);if(qi(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let t=nP(this.global.location.search);if(Yk in t){let e=t[Yk].split(",");e.forEach(r=>{let[o,s]=r.split(":");this.urlFlags[o]=oP(o,s)})}}}function nP(n){let t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...r)=>(rP(t,r[0],r[1]),r.join("="))),t}function rP(n,t,e){n[decodeURIComponent(t)]=decodeURIComponent(e||"")}function oP(n,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${n}.`)}function ct(){return i.ENV}i.ENV=null;function sP(n){i.ENV=n}let Bb;function Zk(){if(Bb==null){let n;if(typeof window!="undefined")n=window;else if(typeof global!="undefined")n=global;else if(typeof process!="undefined")n=process;else if(typeof self!="undefined")n=self;else throw new Error("Could not find a global object");Bb=n}return Bb}function iP(){let n=Zk();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Qk(n,t){let e=iP();if(e.has(n))return e.get(n);{let r=t();return e.set(n,r),e.get(n)}}let of="Abs",eu="Acos",nu="Acosh",Hi="Add",zb="AddN",tN="All",eN="Any",Wb="ArgMax",Vb="ArgMin",ru="Asin",ou="Asinh",su="Atan",iu="Atanh",sf="Atan2",au="AvgPool",af="AvgPoolBackprop",Gb="AvgPool3D",nN="AvgPool3DBackprop",cf="BatchMatMul",Ub="BatchToSpaceND",qb="BroadcastTo",cc="Cast",cu="Ceil",lu="ClipByValue",lf="Complex",uu="Concat",uf="Conv2D",Hb="Conv2DBackpropFilter",pf="Conv2DBackpropInput",hf="Conv3D",jb="Conv3DBackpropFilterV2",Kb="Conv3DBackpropInputV2",lc="Cos",pu="Cosh",Xb="Cumsum",rN="CropAndResize",oN="DepthToSpace",ff="DepthwiseConv2dNative",Yb="DepthwiseConv2dNativeBackpropFilter",Jb="DepthwiseConv2dNativeBackpropInput",sN="Diag",df="Dilation2D",mf="Dilation2DBackpropInput",gf="Dilation2DBackpropFilter",uc="Div",hu="Elu",iN="EluGrad",fu="Erf",aN="Equal",du="Exp",mu="Expm1",yf="FFT",Zb="Fill",bf="FlipLeftRight",gu="Floor",Qb="FloorDiv",yu="FusedBatchNorm",tx="GatherV2",cN="GatherNd",lN="Greater",ex="GreaterEqual",bu="Identity",xf="IFFT",wf="Imag",xu="IsFinite",wu="IsInf",vu="IsNan",uN="Less",pN="LessEqual",hN="LinSpace",Tu="Log",ku="Log1p",fN="LogicalAnd",vf="LogicalNot",dN="LogicalOr",nx="LogSoftmax",rx="LRN",mN="LRNBackprop",Nu="Max",ox="Maximum",_u="MaxPool",Tf="MaxPoolBackprop",sx="MaxPool3D",gN="MaxPool3DBackprop",kf="MaxPoolWithArgmax",ix="Mean",ax="Min",cx="Minimum",Cu="MirrorPad",lx="Mod",pc="Multiply",ux="Negate",Su="NotEqual",px="NonMaxSuppressionV3",Nf="NonMaxSuppressionV4",_f="NonMaxSuppressionV5",hx="OnesLike",fx="OneHot",Cf="PadV2",aP="Pool",dx="Pow",Sf="Prelu",yN="Prod",bN="Range",$f="Real",$u="Reciprocal",Iu="Relu",Eu="Reshape",mx="ResizeNearestNeighbor",xN="ResizeNearestNeighborGrad",gx="ResizeBilinear",wN="ResizeBilinearGrad",Du="Relu6",yx="Reverse",Au="Round",Fu="Rsqrt",vN="ScatterNd",bx="SelectV2",Ru="Selu",If="Slice",hc="Sin",Pu="Sinh",Ou="Sign",Lu="Sigmoid",Mu="Softplus",Bu="Sqrt",xx="Sum",Ef="SpaceToBatchND",wx="SplitV",vx="Softmax",fc="SquaredDifference",Df="Square",dc="Sub",TN="SparseToDense",kN="StridedSlice",mc="Tan",zu="Tanh",Tx="Tile",NN="TopK",Wu="Transpose",Af="Unique",kx="Unpack",Nx="UnsortedSegmentSum",_x="ZerosLike",Vu="Step",Ff="FromPixels",Rf="RotateWithOffset",Pf="_FusedMatMul",Of="FusedConv2D",Lf="FusedDepthwiseConv2D";let gc=Qk("kernelRegistry",()=>new Map),Gu=Qk("gradRegistry",()=>new Map);function Cx(n,t){let e=$x(n,t);return gc.get(e)}function Sx(n){return Gu.get(n)}function Mf(n){let t=gc.entries(),e=[];for(;;){let{done:r,value:o}=t.next();if(r)break;let[s,c]=o,[l]=s.split("_");l===n&&e.push(c)}return e}function Bf(n){let{kernelName:t,backendName:e}=n,r=$x(t,e);gc.has(r)&&console.warn(`The kernel '${t}' for backend '${e}' is already registered`),gc.set(r,n)}function _N(n){let{kernelName:t}=n;Gu.has(t)&&(ct().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`)),Gu.set(t,n)}function cP(n,t){let e=$x(n,t);if(!gc.has(e))throw new Error(`The kernel '${n}' for backend '${t}' is not registered`);gc.delete(e)}function lP(n){if(!Gu.has(n))throw new Error(`The gradient '${n}' for backend is not registered`);Gu.delete(n)}function uP(n,t){let e=Mf(n);e.forEach(r=>{let o=Object.assign({},r,{backendName:t});Bf(o)})}function $x(n,t){return`${t}_${n}`}function CN(n,t){return t==="string"?zf(n):Qs([n],t)}function pP(n,t){return n instanceof Float32Array&&t==="float32"||n instanceof Int32Array&&t==="int32"||n instanceof Uint8Array&&t==="bool"}function Qs(n,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=tt(n)),ct().getBool("DEBUG")&&Ys(n,t),pP(n,t))return n;if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool"){let e=new Uint8Array(n.length);for(let r=0;r<e.length;++r)Math.round(n[r])!==0&&(e[r]=1);return e}else throw new Error(`Unknown data type ${t}`)}function or(){return ct().platform.now()}function SN(n,t){return ct().platform.fetch(n,t)}function zf(n,t="utf-8"){return t=t||"utf-8",ct().platform.encode(n,t)}function Uu(n,t="utf-8"){return t=t||"utf-8",ct().platform.decode(n,t)}var hP=Object.freeze({__proto__:null,createScalarValue:CN,toTypedArray:Qs,now:or,fetch:SN,encodeString:zf,decodeString:Uu,shuffle:x,clamp:w,nearestLargerEven:k,sum:C,randUniform:$,distSquared:F,assert:_,assertShapesMatch:W,assertNonNull:et,flatten:tt,sizeFromShape:G,isScalarShape:mt,arraysEqual:lt,isInt:gt,tanh:_t,sizeToSquarishShape:Gt,createShuffledIndices:se,rightPad:fe,repeatedTry:_e,inferFromImplicitShape:Ge,parseAxisParam:Vt,squeezeShape:ln,getTypedArrayFromDType:Ce,getArrayFromDType:rr,checkConversionForErrors:Ys,isValidDtype:Js,hasEncodingLoss:sc,isTypedArray:gn,bytesPerElement:Pb,bytesFromStringArray:jk,isString:as,isBoolean:Kk,isNumber:nf,inferDtype:ic,isFunction:Zs,nearestDivisor:rf,computeStrides:Yt,toNestedArray:Er,makeOnesTypedArray:Ob,makeZerosTypedArray:ac,makeZerosNestedTypedArray:Lb,assertNonNegativeIntegerDimensions:Mb,locToIndex:Kr,indexToLoc:Ui,isPromise:qi});class fP{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new mP)}profileKernel(t,e,r){let o,s=()=>{o=r()},c=this.backendTimer.time(s);for(let p=0;p<o.length;p++){let f=o[p];f.data().then(m=>{dP(m,f.dtype,t)})}let l={kernelName:t,outputs:o,inputs:e,timeMs:c.then(p=>p.kernelMs),extraInfo:c.then(p=>p.getExtraProfileInfo!=null?p.getExtraProfileInfo():"")};return l}logKernelProfile(t){let{kernelName:e,outputs:r,timeMs:o,inputs:s,extraInfo:c}=t;r.forEach(l=>{Promise.all([l.data(),o,c]).then(p=>{this.logger.logKernelProfile(e,l,p[0],p[1],s,p[2])})})}}function dP(n,t,e){if(t!=="float32")return!1;for(let r=0;r<n.length;r++){let o=n[r];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${e}'`),!0}return!1}class mP{logKernelProfile(t,e,r,o,s,c){let l=typeof o=="number"?fe(`${o}ms`,9):o.error,p=fe(t,25),f=e.rank,m=e.size,y=fe(e.shape.toString(),14),b="";for(let v in s){let T=s[v];if(T!=null){let N=T.shape||e.shape,S=N.length;b+=`${v}: ${S}D ${S>0?N:""} `}}console.log(`%c${p}	%c${l}	%c${f}D ${y}	%c${m}	%c${b}	%c${c}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function gP(n,t,e){let r={},o={};for(let p=0;p<t.length;p++)r[t[p].id]=!0;for(let p=0;p<n.length;p++){let f=n[p],m=f.inputs;for(let y in m){let b=m[y],v=!1;for(let T=0;T<t.length;T++)if(r[b.id]){f.outputs.forEach(N=>r[N.id]=!0),v=!0,o[f.id]=!0;break}if(v)break}}let s={};s[e.id]=!0;let c={};for(let p=n.length-1;p>=0;p--){let f=n[p],m=f.inputs;for(let y=0;y<f.outputs.length;y++)if(s[f.outputs[y].id]){for(let b in m)s[m[b].id]=!0,c[f.id]=!0;break}}let l=[];for(let p=0;p<n.length;p++){let f=n[p];if(o[f.id]&&c[f.id]){let m={};for(let b in f.inputs){let v=f.inputs[b];r[v.id]&&(m[b]=v)}let y=Object.assign({},f);y.inputs=m,y.outputs=f.outputs,l.push(y)}}return l}function yP(n,t,e,r){for(let o=t.length-1;o>=0;o--){let s=t[o],c=[];if(s.outputs.forEach(p=>{let f=n[p.id];f!=null?c.push(f):c.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let l=s.gradient(c);for(let p in s.inputs){if(!(p in l))throw new Error(`Cannot backprop through input ${p}. Available gradients found: ${Object.keys(l)}.`);let f=e(()=>l[p]());if(f.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${p} must have 'float32' dtype, but has '${f.dtype}'`);let m=s.inputs[p];if(!lt(f.shape,m.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${p}' has shape '${f.shape}', which does not match the shape of the input '${m.shape}'`);if(n[m.id]==null)n[m.id]=f;else{let y=n[m.id];n[m.id]=r(y,f),y.dispose()}}}}let $N=20,qu=3,Ix=7;function bP(n,t,e,r){let o=Yt(t),s=xP(n,t,e,o),c=t.length,l=Wf(n,t,e,o,s),p=["Tensor"];return r&&(p.push(`  dtype: ${e}`),p.push(`  rank: ${c}`),p.push(`  shape: [${t}]`),p.push("  values:")),p.push(l.map(f=>"    "+f).join(`
`)),p.join(`
`)}function xP(n,t,e,r){let o=G(t),s=r[r.length-1],c=new Array(s).fill(0),l=t.length,p=e==="complex64"?ju(n):n;if(l>1)for(let f=0;f<o/s;f++){let m=f*s;for(let y=0;y<s;y++)c[y]=Math.max(c[y],Hu(p[m+y],0,e).length)}return c}function Hu(n,t,e){let r;return Array.isArray(n)?r=`${parseFloat(n[0].toFixed(Ix))} + ${parseFloat(n[1].toFixed(Ix))}j`:as(n)?r=`'${n}'`:e==="bool"?r=IN(n):r=parseFloat(n.toFixed(Ix)).toString(),fe(r,t)}function IN(n){return n===0?"false":"true"}function Wf(n,t,e,r,o,s=!0){let c=e==="complex64"?2:1,l=t[0],p=t.length;if(p===0){if(e==="complex64"){let N=ju(n);return[Hu(N[0],0,e)]}return e==="bool"?[IN(n[0])]:[n[0].toString()]}if(p===1){if(l>$N){let S=qu*c,D=Array.from(n.slice(0,S)),I=Array.from(n.slice((l-qu)*c,l*c));return e==="complex64"&&(D=ju(D),I=ju(I)),["["+D.map((P,E)=>Hu(P,o[E],e)).join(", ")+", ..., "+I.map((P,E)=>Hu(P,o[l-qu+E],e)).join(", ")+"]"]}let N=e==="complex64"?ju(n):Array.from(n);return["["+N.map((S,D)=>Hu(S,o[D],e)).join(", ")+"]"]}let f=t.slice(1),m=r.slice(1),y=r[0]*c,b=[];if(l>$N){for(let N=0;N<qu;N++){let S=N*y,D=S+y;b.push(...Wf(n.slice(S,D),f,e,m,o,!1))}b.push("...");for(let N=l-qu;N<l;N++){let S=N*y,D=S+y;b.push(...Wf(n.slice(S,D),f,e,m,o,N===l-1))}}else for(let N=0;N<l;N++){let S=N*y,D=S+y;b.push(...Wf(n.slice(S,D),f,e,m,o,N===l-1))}let v=p===2?",":"";b[0]="["+b[0]+v;for(let N=1;N<b.length-1;N++)b[N]=" "+b[N]+v;let T=`,
`;for(let N=2;N<p;N++)T+=`
`;return b[b.length-1]=" "+b[b.length-1]+"]"+(s?"":T),b}function ju(n){let t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}class hn{constructor(t,e,r){if(this.dtype=e,this.shape=t.slice(),this.size=G(t),r!=null){let o=r.length;_(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||rr(e,this.size),this.strides=Yt(t)}set(t,...e){e.length===0&&(e=[0]),_(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);let r=this.locToIndex(e);this.values[r]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(let o of t){if(o<0||o>=this.shape[e]){let s=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(s)}e++}let r=t[t.length-1];for(let o=0;o<t.length-1;++o)r+=this.strides[o]*t[o];return this.values[r]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let r=0;r<t.length-1;++r)e+=this.strides[r]*t[r];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];let e=new Array(this.shape.length);for(let r=0;r<e.length-1;++r)e[r]=Math.floor(t/this.strides[r]),t-=e[r]*this.strides[r];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Oo().makeTensor(this.values,this.shape,this.dtype)}}let Oo=null,yc=null,EN=null;function wP(n){Oo=n}function vP(n){yc=n}function TP(n){EN=n}class ot{constructor(t,e,r,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=G(t),this.strides=Yt(t),this.dataId=r,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let t=await this.data();return yc.buffer(this.shape,this.dtype,t)}bufferSync(){return yc.buffer(this.shape,this.dtype,this.dataSync())}async array(){let t=await this.data();return Er(this.shape,t)}arraySync(){return Er(this.shape,this.dataSync())}async data(){this.throwIfDisposed();let t=Oo().read(this.dataId);if(this.dtype==="string"){let e=await t;try{return e.map(r=>Uu(r))}catch(r){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();let t=Oo().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>Uu(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();let t=await Oo().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){if(this.isDisposed)return;Oo().disposeTensor(this),this.isDisposedInternal=!0}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return yc.print(this,t)}clone(){return this.throwIfDisposed(),yc.clone(this)}toString(t=!1){let e=this.dataSync();return bP(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),yc.cast(this,t)}variable(t=!0,e,r){return this.throwIfDisposed(),Oo().makeVariable(this,t,e,r)}}Object.defineProperty(ot,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});class Ku extends ot{constructor(t,e,r,o){super(t.shape,t.dtype,t.dataId,o);this.trainable=e,this.name=r}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!lt(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Oo().disposeTensor(this),this.dataId=t.dataId,Oo().incRef(this,null)}dispose(){Oo().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Ku,Symbol.hasInstance,{value:n=>n instanceof ot&&n.assign!=null&&n.assign instanceof Function});(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(i.Rank||(i.Rank={}));var Ex;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(Ex||(Ex={}));var Dx;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(Dx||(Dx={}));var Ax;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(Ax||(Ax={}));var Fx;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(Fx||(Fx={}));let kP={float32:Ax,int32:Ex,bool:Dx,complex64:Fx};function jn(n,t){if(n==="string"||t==="string"){if(n==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return kP[n][t]}function Vf(n){return jn(n,"int32")}function Je(n,t){if(n.dtype===t.dtype)return[n,t];let e=jn(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function DN(n,t){_(n.dtype===t.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${t.dtype}) input must match`)}function Gf(n,t){return t.some(e=>e.id===n.id)}function cs(n){let t=[],e=new Set;return AN(n,t,e),t}function AN(n,t,e){if(n==null)return;if(n instanceof ot){t.push(n);return}if(!NP(n))return;let r=n;for(let o in r){let s=r[o];e.has(s)||(e.add(s),AN(s,t,e))}}function NP(n){return Array.isArray(n)||typeof n=="object"}var _P=Object.freeze({__proto__:null,makeTypesMatch:Je,assertTypesMatch:DN,isTensorInList:Gf,getTensorsInContainer:cs});class FN{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(let t in this.registeredVariables)this.registeredVariables[t].dispose()}}class bc{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new FN}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let t=this.getSortedBackends();for(let e=0;e<t.length;e++){let r=t[e],o=await this.initializeBackend(r).success;if(o){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){let{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,r=1){return t in this.registryFactory?(console.warn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:r},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;let{success:e,asyncInit:r}=this.initializeBackend(t),o=r?await e:e;if(!o)return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new fP(this.backendInstance),!0}setupRegisteredKernels(){let t=Mf(this.backendName);t.forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){let e=Mf(t);e.forEach(r=>{r.disposeFunc!=null&&r.disposeFunc(this.registry[t])})}initializeBackend(t){let e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{let r=e.factory();if(r&&!(r instanceof d)&&typeof r.then=="function"){let o=++this.pendingBackendInitId,s=r.then(c=>o<this.pendingBackendInitId?!1:(this.registry[t]=c,this.pendingBackendInit=null,!0)).catch(c=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(c.stack||c.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[t]=r,{success:!0,asyncInit:!1}}catch(r){return console.warn(`Initialization of backend ${t} failed`),console.warn(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){let t=this.getSortedBackends();for(let e=0;e<t.length;e++){let r=t[e],{success:o,asyncInit:s}=this.initializeBackend(r);if(s||o)return{name:r,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){let r=this.state.tensorInfo.get(e),o=r.backend,s=this.readSync(e);o.disposeData(e),r.backend=t,t.move(e,s,r.shape,r.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let r=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}let o;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(o),()=>(o=e(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(t,e,r){t();try{let o=r();return e(),o}catch(o){throw e(),o}}nextTensorId(){return bc.nextTensorId++}nextVariableId(){return bc.nextVariableId++}clone(t){let e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),r={x:t},o=c=>({x:()=>{let l="float32",p={x:c},f={dtype:l};return X.runKernelFunc(m=>m.cast(c,l),p,null,cc,f)}}),s=[];return this.addTapeNode(this.state.activeScope.name,r,[e],o,s,{}),e}runKernel(t,e,r,o,s){let c=null,l=null;return this.runKernelFunc(c,e,l,t,r,o,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,r){let o=this.backend.numDataIds(),s=0;r.forEach(p=>{s+=p.dtype==="complex64"?3:1});let c=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],l=o-e-s-c;if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${t}'`)}runKernelFunc(t,e,r,o,s,c,l){let p,f=[],m=this.isTapeOn();o==null&&(o=this.state.activeScope!=null?this.state.activeScope.name:"");let y=this.state.numBytes,b=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let v,T=Cx(o,this.backendName),N;if(T!=null)v=()=>{let D=this.backend.numDataIds();N=T.kernelFunc({inputs:e,attrs:s,backend:this.backend});let I=Array.isArray(N)?N:[N];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(o,D,I);let P=I.map(({dataId:E,shape:L,dtype:B})=>this.makeTensorFromDataId(E,L,B));if(m){let E=this.getTensorsForGradient(o,e,P);if(E==null){l==null&&(l=[]);let L=P.filter((B,q)=>l[q]);E=(c||[]).slice().concat(L)}f=this.saveTensorsForBackwardMode(E)}return P};else{let D=I=>{if(!m)return;f=I.map(P=>this.keep(this.clone(P)))};v=()=>{let I=this.backend.numDataIds();N=this.tidy(()=>t(this.backend,D));let P=Array.isArray(N)?N:[N];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(o,I,P),P}}let S;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?p=v():(S=this.profiler.profileKernel(o,e,()=>v()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(S),p=S.outputs)}),m&&this.addTapeNode(o,e,p,r,f,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:o,bytesAdded:this.state.numBytes-y,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-b,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map(D=>e[D]!=null?e[D].shape:null),outputShapes:p.map(D=>D.shape),kernelTimeMs:S.timeMs,extraInfo:S.extraInfo}),Array.isArray(N)?p:p[0]}saveTensorsForBackwardMode(t){let e=t.map(r=>this.keep(this.clone(r)));return e}getTensorsForGradient(t,e,r){let o=Sx(t);if(o!=null){let s=o.inputsToSave||[],c=o.outputsToSave||[],l;o.saveAllInputs?(_(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(e).map(f=>e[f])):l=s.map(f=>e[f]);let p=r.filter((f,m)=>c[m]);return l.concat(p)}return null}makeTensor(t,e,r,o){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",o=o||this.backend;let s=t;r==="string"&&as(t[0])&&(s=t.map(p=>zf(p)));let c=o.write(s,e,r),l=new ot(e,r,c,this.nextTensorId());if(this.incRef(l,o),r==="string"){let p=this.state.tensorInfo.get(c),f=jk(s);this.state.numBytes+=f-p.bytes,p.bytes=f}return l}makeTensorFromDataId(t,e,r,o){r=r||"float32";let s=new ot(e,r,t,this.nextTensorId());return this.incRef(s,o),s}makeVariable(t,e=!0,r,o){r=r||this.nextVariableId().toString(),o!=null&&o!==t.dtype&&(t=t.cast(o));let s=new Ku(t,e,r,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(t,e){let r=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++,r===0){this.state.numDataBuffers++;let o=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(o=t.size*Pb(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:o,refCount:0}),this.state.numBytes+=o}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof Ku||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,t.dtype==="string"&&this.state.numStringTensors--;let e=this.state.tensorInfo.get(t.dataId),r=e.refCount;r<=1?(t.dtype!=="complex64"&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}disposeVariables(){for(let t in this.state.registeredVariables){let e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){let t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;let e=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-r;for(let o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,r,o,s,c){let l={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:r,saved:s},p=Sx(t);p!=null&&(o=p.gradFunc),o!=null&&(l.gradient=f=>(f=f.map((m,y)=>{if(m==null){let b=r[y],v=ac(b.size,b.dtype);return this.makeTensor(v,b.shape,b.dtype)}return m}),o(f.length>1?f:f[0],s,c))),this.state.activeTape.push(l)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){let e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){let e=cs(t),r=new Set(e.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let c=this.state.activeScope.track[s];!c.kept&&!r.has(c.id)&&c.dispose()}let o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(s=>{!s.kept&&s.scopeId===o.id&&this.track(s)})}gradients(t,e,r,o=!1){if(_(e.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));_(s instanceof ot,()=>"The result y returned by f() must be a tensor.");let c=gP(this.state.activeTape,e,s);if(!o&&c.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let l={};l[s.id]=r==null?CP(s.shape):r,yP(l,c,f=>this.tidy(f),SP);let p=e.map(f=>l[f.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(f=>{for(let m of f.saved)m.dispose()}),this.state.activeTape=null),{value:s,grads:p}})}customGrad(t){return _(Zs(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{_(e.every(s=>s instanceof ot),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r,o={};return e.forEach((s,c)=>{o[c]=s}),this.runKernelFunc((s,c)=>(r=t(...e,c),_(r.value instanceof ot,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),_(Zs(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),o,(s,c)=>{let l=r.gradFunc(s,c),p=Array.isArray(l)?l:[l];_(p.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),_(p.every(m=>m instanceof ot),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let f={};return p.forEach((m,y)=>{f[y]=()=>m}),f})}}readSync(t){let e=this.state.tensorInfo.get(t);return e.backend.readSync(t)}read(t){let e=this.state.tensorInfo.get(t);return e.backend.read(t)}async time(t){let e=or(),r=await this.backend.time(t);return r.wallMs=or()-e,r}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new FN;for(let t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}bc.nextTensorId=0,bc.nextVariableId=0;function CP(n){let t=Ob(G(n),"float32");return X.makeTensor(t,n,"float32")}function RN(){let n=Zk();if(n._tfengine==null){let t=new Jk(n);n._tfengine=new bc(t)}return sP(n._tfengine.ENV),wP(()=>n._tfengine),n._tfengine}let X=RN();function SP(n,t){let e={a:n,b:t};return X.runKernelFunc((r,o)=>{let s=r.add(n,t);return o([n,t]),s},e,null,Hi)}function $P(){return typeof navigator!="undefined"&&navigator!=null}function PN(){if($P()){let n=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(n)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(n.substr(0,4))}return!1}function Rx(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var IP=Object.freeze({__proto__:null,isMobile:PN,isBrowser:Rx});let ls=ct();ls.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),ls.registerFlag("IS_BROWSER",()=>Rx()),ls.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined"),ls.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),ls.registerFlag("PROD",()=>!1),ls.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ls.getBool("DEBUG")),ls.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),ls.registerFlag("IS_TEST",()=>!1);function Lo(n,t){let e=n;if(gn(n))return t==="string"?[]:[n.length];if(!Array.isArray(n))return[];let r=[];for(;Array.isArray(e)||gn(e)&&t!=="string";)r.push(e.length),e=e[0];return Array.isArray(n)&&ct().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ON(n,r,[]),r}function ON(n,t,e){if(e=e||[],!Array.isArray(n)&&!gn(n)){_(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}_(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),_(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);let r=t.slice(1);for(let o=0;o<n.length;++o)ON(n[o],r,e.concat(o))}function LN(n,t,e,r){if(n==null)return;if(n!=="numeric"&&n!==t||n==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${r}' must be ${n} tensor, but got ${t} tensor`)}function M(n,t,e,r="numeric"){if(n instanceof ot)return LN(r,n.dtype,t,e),n;let o=ic(n);if(o!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(o=r),LN(r,o,t,e),n==null||!gn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){let p=n==null?"null":n.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${p}'`)}let s=Lo(n,o);!gn(n)&&!Array.isArray(n)&&(n=[n]);let c=!0,l=o!=="string"?Qs(n,o):tt(n,[],c);return X.makeTensor(l,s,o)}function Xu(n,t,e,r="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);let o=n;return o.map((s,c)=>M(s,`${t}[${c}]`,e),r)}let MN="__op";function j(n){let t=Object.keys(n);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0],r=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+MN;let o=(...s)=>{X.startScope(e);try{let c=r(...s);return qi(c)&&console.error("Cannot return a Promise inside of tidy."),X.endScope(c),c}catch(c){throw X.endScope(null),c}};return Object.defineProperty(o,"name",{value:e,configurable:!0}),o}function EP(n,t){let e=M(n,"real","complex"),r=M(t,"imag","complex");W(e.shape,r.shape,`real and imag shapes, ${e.shape} and ${r.shape}, must match in call to tf.complex().`);let o=c=>c.complex(e,r),s={real:e,imag:r};return X.runKernelFunc(o,s,null,lf)}let us=j({complex_:EP});function ti(n,t,e,r){if(r==null&&(r=ic(n)),r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!gn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Mb(t);let o=G(t),s=G(e);_(o===s,()=>`Based on the provided shape, [${t}], the tensor should have ${o} values but has ${s}`);for(let c=0;c<e.length;++c){let l=e[c],p=c===e.length-1?l!==G(t.slice(c)):!0;_(e[c]===t[c]||!p,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!gn(n)&&!Array.isArray(n)&&(n=[n]),t=t||e,n=r!=="string"?Qs(n,r):tt(n,[],!0),X.makeTensor(n,t,r)}function un(n,t,e){let r=Lo(n,e);return ti(n,t,r,e)}let Px={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};let Uf=4;async function Ox(n,t){let e=[],r=[],o=Array.isArray(n)?n.map(c=>c.name):Object.keys(n);for(let c=0;c<o.length;++c){let l=o[c],p=Array.isArray(n)?n[c].tensor:n[l];if(p.dtype!=="float32"&&p.dtype!=="int32"&&p.dtype!=="bool"&&p.dtype!=="string"&&p.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${l}': ${p.dtype}`);let f={name:l,shape:p.shape,dtype:p.dtype};if(p.dtype==="string"){let m=new Promise(async y=>{let b=await p.bytes(),v=b.reduce((S,D)=>S+D.length,0)+Uf*b.length,T=new Uint8Array(v),N=0;for(let S=0;S<b.length;S++){let D=b[S],I=new Uint8Array(new Uint32Array([D.length]).buffer);T.set(I,N),N+=Uf,T.set(D,N),N+=D.length}y(T)});r.push(m)}else r.push(p.data());t!=null&&(f.group=t),e.push(f)}let s=await Promise.all(r);return{data:DP(s),specs:e}}function qf(n,t){let e={},r,o=0;for(let s of t){let c=s.name,l=s.dtype,p=s.shape,f=G(p),m;if("quantization"in s){let y=s.quantization;if(y.dtype==="uint8"||y.dtype==="uint16"){if(!("min"in y&&"scale"in y))throw new Error(`Weight ${s.name} with quantization ${y.dtype} doesn't have corresponding metadata min and scale.`)}else if(y.dtype==="float16"){if(l!=="float32")throw new Error(`Weight ${s.name} is quantized with ${y.dtype} which only supports weights of type float32 not ${l}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${y.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let b=Px[y.dtype],v=n.slice(o,o+f*b),T=y.dtype==="uint8"?new Uint8Array(v):new Uint16Array(v);if(l==="float32")if(y.dtype==="uint8"||y.dtype==="uint16"){m=new Float32Array(T.length);for(let N=0;N<T.length;N++){let S=T[N];m[N]=S*y.scale+y.min}}else if(y.dtype==="float16")r===void 0&&(r=LP()),m=r(T);else throw new Error(`Unsupported quantization type ${y.dtype} for weight type float32.`);else if(l==="int32"){if(y.dtype!=="uint8"&&y.dtype!=="uint16")throw new Error(`Unsupported quantization type ${y.dtype} for weight type int32.`);m=new Int32Array(T.length);for(let N=0;N<T.length;N++){let S=T[N];m[N]=Math.round(S*y.scale+y.min)}}else throw new Error(`Unsupported dtype in weight '${c}': ${l}`);o+=f*b}else if(l==="string"){let y=G(s.shape);m=[];for(let b=0;b<y;b++){let v=new Uint32Array(n.slice(o,o+Uf))[0];o+=Uf;let T=new Uint8Array(n.slice(o,o+v));m.push(T),o+=v}}else{let y=Px[l],b=n.slice(o,o+f*y);if(l==="float32")m=new Float32Array(b);else if(l==="int32")m=new Int32Array(b);else if(l==="bool")m=new Uint8Array(b);else if(l==="complex64"){m=new Float32Array(b);let v=new Float32Array(m.length/2),T=new Float32Array(m.length/2);for(let D=0;D<v.length;D++)v[D]=m[D*2],T[D]=m[D*2+1];let N=un(v,p,"float32"),S=un(T,p,"float32");e[c]=us(N,S),N.dispose(),S.dispose()}else throw new Error(`Unsupported dtype in weight '${c}': ${l}`);o+=f*y}l!=="complex64"&&(e[c]=un(m,p,l))}return e}function DP(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0,e=[];n.forEach(s=>{if(t+=s.byteLength,e.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let r=new Uint8Array(t),o=0;return e.forEach(s=>{r.set(new Uint8Array(s.buffer),o),o+=s.byteLength}),r.buffer}let Lx=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function BN(n){return Lx?Buffer.byteLength(n):new Blob([n]).size}function AP(n){if(Lx)return Buffer.from(n).toString("base64");let t=new Uint8Array(n),e="";for(let r=0,o=t.length;r<o;r++)e+=String.fromCharCode(t[r]);return btoa(e)}function FP(n){if(Lx){let r=Buffer.from(n,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}let t=atob(n),e=new Uint8Array(t.length);for(let r=0;r<t.length;++r)e.set([t.charCodeAt(r)],r);return e.buffer}function Hf(n){if(n.length===1)return n[0];let t=0;n.forEach(o=>{t+=o.byteLength});let e=new Uint8Array(t),r=0;return n.forEach(o=>{e.set(new Uint8Array(o),r),r+=o.byteLength}),e.buffer}function zN(n){let t="/";for(n=n.trim();n.endsWith(t);)n=n.slice(0,n.length-1);let e=n.split(t);return e[e.length-1]}function Yu(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:BN(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:BN(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:n.weightData.byteLength}}function RP(){let n=e=>{let r=e<<13,o=0;for(;(r&8388608)===0;)o-=8388608,r<<=1;return r&=~8388608,o+=947912704,r|o},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=n(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function PP(){let n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let t=1;t<31;t++)n[t]=t<<23;for(let t=33;t<63;t++)n[t]=2147483648+(t-32<<23);return n}function OP(){let n=new Uint32Array(64);for(let t=0;t<64;t++)n[t]=1024;return n[0]=n[32]=0,n}function LP(){let n=RP(),t=PP(),e=OP();return r=>{let o=new ArrayBuffer(4*r.length),s=new Uint32Array(o);for(let c=0;c<r.length;c++){let l=r[c],p=n[e[l>>10]+(l&1023)]+t[l>>10];s[c]=p}return new Float32Array(o)}}class Ze{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Ze.instance==null&&(Ze.instance=new Ze),Ze.instance}static registerSaveRouter(t){Ze.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Ze.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Ze.getHandlers(t,"save")}static getLoadHandlers(t,e){return Ze.getHandlers(t,"load",e)}static getHandlers(t,e,r){let o=[],s=e==="load"?Ze.getInstance().loadRouters:Ze.getInstance().saveRouters;return s.forEach(c=>{let l=c(t,r);l!==null&&o.push(l)}),o}}let MP=n=>Ze.registerSaveRouter(n),BP=n=>Ze.registerLoadRouter(n),Mx=n=>Ze.getSaveHandlers(n),Bx=(n,t)=>Ze.getLoadHandlers(n,t);let jf="tensorflowjs",zx=1,ji="models_store",ei="model_info_store";async function pot(){let n=Wx();return new Promise((t,e)=>{let r=n.deleteDatabase(jf);r.onsuccess=()=>t(),r.onerror=o=>e(o)})}function Wx(){if(!ct().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let n=typeof window=="undefined"?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Vx(n){let t=n.result;t.createObjectStore(ji,{keyPath:"modelPath"}),t.createObjectStore(ei,{keyPath:"modelPath"})}class Ki{constructor(t){if(this.indexedDB=Wx(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((r,o)=>{let s=this.indexedDB.open(jf,zx);s.onupgradeneeded=()=>Vx(s),s.onsuccess=()=>{let c=s.result;if(e==null){let l=c.transaction(ji,"readonly"),p=l.objectStore(ji),f=p.get(this.modelPath);f.onsuccess=()=>{if(f.result==null)return c.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(f.result.modelArtifacts)},f.onerror=m=>(c.close(),o(f.error)),l.oncomplete=()=>c.close()}else{let l=Yu(e),p=c.transaction(ei,"readwrite"),f=p.objectStore(ei),m=f.put({modelPath:this.modelPath,modelArtifactsInfo:l}),y;m.onsuccess=()=>{y=c.transaction(ji,"readwrite");let b=y.objectStore(ji),v=b.put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:l});v.onsuccess=()=>r({modelArtifactsInfo:l}),v.onerror=T=>{f=p.objectStore(ei);let N=f.delete(this.modelPath);N.onsuccess=()=>(c.close(),o(v.error)),N.onerror=S=>(c.close(),o(v.error))}},m.onerror=b=>(c.close(),o(m.error)),p.oncomplete=()=>{y==null?c.close():y.oncomplete=()=>c.close()}}},s.onerror=c=>o(s.error)})}}Ki.URL_SCHEME="indexeddb://";let WN=n=>ct().getBool("IS_BROWSER")&&(!Array.isArray(n)&&n.startsWith(Ki.URL_SCHEME))?zP(n.slice(Ki.URL_SCHEME.length)):null;Ze.registerSaveRouter(WN),Ze.registerLoadRouter(WN);function zP(n){return new Ki(n)}function WP(n){return n.startsWith(Ki.URL_SCHEME)?n.slice(Ki.URL_SCHEME.length):n}class VP{constructor(){this.indexedDB=Wx()}async listModels(){return new Promise((t,e)=>{let r=this.indexedDB.open(jf,zx);r.onupgradeneeded=()=>Vx(r),r.onsuccess=()=>{let o=r.result,s=o.transaction(ei,"readonly"),c=s.objectStore(ei),l=c.getAll();l.onsuccess=()=>{let p={};for(let f of l.result)p[f.modelPath]=f.modelArtifactsInfo;t(p)},l.onerror=p=>(o.close(),e(l.error)),s.oncomplete=()=>o.close()},r.onerror=o=>e(r.error)})}async removeModel(t){return t=WP(t),new Promise((e,r)=>{let o=this.indexedDB.open(jf,zx);o.onupgradeneeded=()=>Vx(o),o.onsuccess=()=>{let s=o.result,c=s.transaction(ei,"readwrite"),l=c.objectStore(ei),p=l.get(t),f;p.onsuccess=()=>{if(p.result==null)return s.close(),r(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{let m=l.delete(t),y=()=>{f=s.transaction(ji,"readwrite");let b=f.objectStore(ji),v=b.delete(t);v.onsuccess=()=>e(p.result.modelArtifactsInfo),v.onerror=T=>r(p.error)};m.onsuccess=y,m.onerror=b=>(y(),s.close(),r(p.error))}},p.onerror=m=>(s.close(),r(p.error)),c.oncomplete=()=>{f==null?s.close():f.oncomplete=()=>s.close()}},o.onerror=s=>r(o.error)})}}let Mo="/",Xi="tensorflowjs_models",VN="info",GP="model_topology",UP="weight_specs",qP="weight_data",HP="model_metadata";function hot(){if(!ct().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("purgeLocalStorageModels() cannot proceed because local storage is unavailable in the current environment.");let n=window.localStorage,t=[];for(let e=0;e<n.length;++e){let r=n.key(e),o=Xi+Mo;if(r.startsWith(o)&&r.length>o.length){n.removeItem(r);let s=UN(r);t.indexOf(s)===-1&&t.push(s)}}return t}function GN(n){return{info:[Xi,n,VN].join(Mo),topology:[Xi,n,GP].join(Mo),weightSpecs:[Xi,n,UP].join(Mo),weightData:[Xi,n,qP].join(Mo),modelMetadata:[Xi,n,HP].join(Mo)}}function UN(n){let t=n.split(Mo);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(Mo)}function jP(n){return n.startsWith(Yi.URL_SCHEME)?n.slice(Yi.URL_SCHEME.length):n}class Yi{constructor(t){if(!ct().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=GN(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let e=JSON.stringify(t.modelTopology),r=JSON.stringify(t.weightSpecs),o=Yu(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,AP(t.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata})),{modelArtifactsInfo:o}}catch(s){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){let t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let e={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=r;let o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=o;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let l=JSON.parse(s);e.format=l.format,e.generatedBy=l.generatedBy,e.convertedBy=l.convertedBy,e.userDefinedMetadata=l.userDefinedMetadata}let c=this.LS.getItem(this.keys.weightData);if(c==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=FP(c),e}}Yi.URL_SCHEME="localstorage://";let qN=n=>ct().getBool("IS_BROWSER")&&(!Array.isArray(n)&&n.startsWith(Yi.URL_SCHEME))?KP(n.slice(Yi.URL_SCHEME.length)):null;Ze.registerSaveRouter(qN),Ze.registerLoadRouter(qN);function KP(n){return new Yi(n)}class XP{constructor(){_(ct().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),_(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let t={},e=Xi+Mo,r=Mo+VN;for(let o=0;o<this.LS.length;++o){let s=this.LS.key(o);if(s.startsWith(e)&&s.endsWith(r)){let c=UN(s);t[c]=JSON.parse(this.LS.getItem(s))}}return t}async removeModel(t){t=jP(t);let e=GN(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);let r=JSON.parse(this.LS.getItem(e.info));return this.LS.removeItem(e.info),this.LS.removeItem(e.topology),this.LS.removeItem(e.weightSpecs),this.LS.removeItem(e.weightData),r}}let xc="://";class br{constructor(){this.managers={}}static getInstance(){return br.instance==null&&(br.instance=new br),br.instance}static registerManager(t,e){_(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(xc)&&(t=t.slice(0,t.indexOf(xc))),_(t.length>0,()=>"scheme must not be an empty string.");let r=br.getInstance();_(r.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),r.managers[t]=e}static getManager(t){let e=this.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}function Kf(n){if(n.indexOf(xc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${br.getSchemes().join(",")}`);return{scheme:n.split(xc)[0],path:n.split(xc)[1]}}async function HN(n,t,e=!1){_(n!==t,()=>`Old path and new path are the same: '${n}'`);let r=Ze.getLoadHandlers(n);_(r.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),_(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${n}.`);let o=r[0],s=Ze.getSaveHandlers(t);_(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),_(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);let c=s[0],l=Kf(n).scheme,p=Kf(n).path,f=l===Kf(n).scheme,m=await o.load();e&&f&&await br.getManager(l).removeModel(p);let y=await c.save(m);return e&&!f&&await br.getManager(l).removeModel(p),y.modelArtifactsInfo}async function YP(){let n=br.getSchemes(),t={};for(let e of n){let r=await br.getManager(e).listModels();for(let o in r){let s=e+xc+o;t[s]=r[o]}}return t}async function JP(n){let t=Kf(n),e=br.getManager(t.scheme);return e.removeModel(t.path)}async function ZP(n,t){let e=!1;return HN(n,t,e)}async function QP(n,t){let e=!0;return HN(n,t,e)}class tO{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(ct().get("IS_BROWSER")){ct().setPlatform("browser",new tO);try{br.registerManager(Yi.URL_SCHEME,new XP)}catch(n){}try{br.registerManager(Ki.URL_SCHEME,new VP)}catch(n){}}let eO={importFetch:()=>vE()},wc;function fot(){wc=null}function dot(n){wc=n}function mot(){return wc}class nO{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return ct().global.fetch!=null?ct().global.fetch(t,e):(wc==null&&(wc=eO.importFetch()),wc(t,e))}now(){let t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}}ct().get("IS_NODE")&&ct().setPlatform("node",new nO);function Se(n,t="float32",e){return t=t||"float32",Mb(n),new hn(n,t,e)}function rO(n,t){let e=M(n,"x","cast");if(!Js(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");let r={x:e},o={dtype:t};return X.runKernelFunc(s=>s.cast(e,t),r,null,cc,o)}let $t=j({cast_:rO});function oO(n){let t=M(n,"x","clone",null),e=()=>X.makeTensorFromDataId(t.dataId,t.shape,t.dtype),r={x:t};return X.runKernelFunc(e,r,null,bu)}let ni=j({clone_:oO});function jN(n,t=!1){console.log(n.toString(t))}RN();let sO={buffer:Se,cast:$t,clone:ni,print:jN};vP(sO);let iO="model",aO=".json",cO=".weights.bin";function KN(n){return new Promise(t=>setTimeout(t)).then(n)}class Ji{constructor(t){if(!ct().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Ji.URL_SCHEME)&&(t=t.slice(Ji.URL_SCHEME.length)),(t==null||t.length===0)&&(t=iO),this.modelTopologyFileName=t+aO,this.weightDataFileName=t+cO}async save(t){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let r=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],o={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:r},s=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),c=this.jsonAnchor==null?document.createElement("a"):this.jsonAnchor;if(c.download=this.modelTopologyFileName,c.href=s,await KN(()=>c.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){let l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=e,await KN(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Yu(t)}}}}Ji.URL_SCHEME="downloads://";class lO{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.files=t}async load(){let t=this.files[0],e=this.files.slice(1);return new Promise((r,o)=>{let s=new FileReader;s.onload=c=>{let l=JSON.parse(c.target.result),p=l.modelTopology;if(p==null){o(new Error(`modelTopology field is missing from file ${t.name}`));return}e.length===0&&r({modelTopology:p});let f=l.weightsManifest;if(f==null){o(new Error(`weightManifest field is missing from file ${t.name}`));return}let m;try{m=this.checkManifestAndWeightFiles(f,e)}catch(T){o(T);return}let y=[],b=[],v=[];f.forEach(T=>{T.paths.forEach(N=>{b.push(N),v.push(null)}),y.push(...T.weights)}),f.forEach(T=>{T.paths.forEach(N=>{let S=new FileReader;S.onload=D=>{let I=D.target.result,P=b.indexOf(N);v[P]=I,v.indexOf(null)===-1&&r({modelTopology:p,weightSpecs:y,weightData:Hf(v),format:l.format,generatedBy:l.generatedBy,convertedBy:l.convertedBy,userDefinedMetadata:l.userDefinedMetadata})},S.onerror=D=>o(`Failed to weights data from file of path '${N}'.`),S.readAsArrayBuffer(m[N])})})},s.onerror=c=>o(`Failed to read model topology and weights manifest JSON from file '${t.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(t)})}checkManifestAndWeightFiles(t,e){let r=[],o=e.map(c=>zN(c.name)),s={};for(let c of t)c.paths.forEach(l=>{let p=zN(l);if(r.indexOf(p)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${p}'`);if(r.push(p),o.indexOf(p)===-1)throw new Error(`Weight file with basename '${p}' is not provided.`);s[l]=e[o.indexOf(p)]});if(r.length!==e.length)throw new Error(`Mismatch in the number of files in weights manifest (${r.length}) and the number of weight files provided (${e.length}).`);return s}}let uO=n=>ct().getBool("IS_BROWSER")&&(!Array.isArray(n)&&n.startsWith(Ji.URL_SCHEME))?pO(n.slice(Ji.URL_SCHEME.length)):null;Ze.registerSaveRouter(uO);function pO(n="model"){return new Ji(n)}function hO(n){return new lO(n)}function XN(n,t,e,r){c(n),e=e==null?0:e,r=r==null?1:r,l(e,r);let o=0,s=p=>(p.then(f=>{let m=e+ ++o/n.length*(r-e);return t(m),f}),p);function c(p){_(p!=null&&Array.isArray(p)&&p.length>0,()=>"promises must be a none empty array")}function l(p,f){_(p>=0&&p<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${p}`),_(f>=0&&f<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${f}`),_(f>=p,()=>`startFraction must be no more than endFraction, but got startFraction ${p} and endFraction ${f}`)}return Promise.all(n.map(s))}async function YN(n,t){t==null&&(t={});let e=t.fetchFunc==null?ct().platform.fetch:t.fetchFunc,r=n.map(y=>e(y,t.requestInit,{isBinary:!0})),o=0,s=.5,c=t.onProgress==null?await Promise.all(r):await XN(r,t.onProgress,o,s),l=c.map(y=>y.arrayBuffer()),p=.5,f=1,m=t.onProgress==null?await Promise.all(l):await XN(l,t.onProgress,p,f);return m}async function JN(n,t="",e,r){let o=c=>YN(c,{requestInit:r}),s=ZN(o);return s(n,t,e)}function ZN(n){return async(t,e="",r)=>{let o=t.map(()=>!1),s={},c=r!=null?r.map(()=>!1):[],l=[];if(t.forEach((v,T)=>{let N=0;v.weights.forEach(S=>{let D="quantization"in S?S.quantization.dtype:S.dtype,I=Px[D]*G(S.shape),P=()=>{o[T]=!0,s[T]==null&&(s[T]=[]),s[T].push({manifestEntry:S,groupOffset:N,sizeBytes:I})};r!=null?r.forEach((E,L)=>{E===S.name&&(P(),c[L]=!0)}):P(),l.push(S.name),N+=I})}),!c.every(v=>v)){let v=r.filter((T,N)=>!c[N]);throw new Error(`Could not find weights in manifest with names: ${v.join(", ")}. 
Manifest JSON has weights with names: ${l.join(", ")}.`)}let p=o.reduce((v,T,N)=>(T&&v.push(N),v),[]),f=[];p.forEach(v=>{t[v].paths.forEach(T=>{let N=e+(e.endsWith("/")?"":"/")+T;f.push(N)})});let m=await n(f),y={},b=0;return p.forEach(v=>{let T=t[v].paths.length,N=0;for(let E=0;E<T;E++)N+=m[b+E].byteLength;let S=new ArrayBuffer(N),D=new Uint8Array(S),I=0;for(let E=0;E<T;E++){let L=new Uint8Array(m[b+E]);D.set(L,I),I+=L.byteLength}let P=s[v];P.forEach(E=>{let L=S.slice(E.groupOffset,E.groupOffset+E.sizeBytes),B=qf(L,[E.manifestEntry]);for(let q in B)y[q]=B[q]}),b+=T}),y}}let fO="application/octet-stream",dO="application/json";class Gx{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(_(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=ct().platform.fetch,_(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&_(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;let r=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],o={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata,weightsManifest:r};e.body.append("model.json",new Blob([JSON.stringify(o)],{type:dO}),"model.json"),t.weightData!=null&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:fO}),"model.weights.bin");let s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:Yu(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(v){let T=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?T+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":T+=" Please make sure the server is serving valid JSON for this request.",new Error(T)}let r=e.modelTopology,o=e.weightsManifest,s=e.generatedBy,c=e.convertedBy,l=e.format,p=e.userDefinedMetadata;if(r==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let f,m;if(o!=null){let v=await this.loadWeights(o);[f,m]=v}let y={modelTopology:r,weightSpecs:f,weightData:m,userDefinedMetadata:p,generatedBy:s,convertedBy:c,format:l},b=e.modelInitializer;return b&&(y.modelInitializer=b),y}async loadWeights(t){let e=Array.isArray(this.path)?this.path[1]:this.path,[r,o]=mO(e),s=this.weightPathPrefix||r,c=[];for(let m of t)c.push(...m.weights);let l=[],p=[];for(let m of t)for(let y of m.paths)this.weightUrlConverter!=null?p.push(this.weightUrlConverter(y)):l.push(s+y+o);this.weightUrlConverter&&l.push(...await Promise.all(p));let f=await YN(l,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[c,Hf(f)]}}Gx.URL_SCHEME_REGEX=/^https?:\/\//;function mO(n){let t=n.lastIndexOf("/"),e=n.lastIndexOf("?"),r=n.substring(0,t),o=e>t?n.substring(e):"";return[r+"/",o]}function Ux(n){return n.match(Gx.URL_SCHEME_REGEX)!=null}let QN=(n,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(n)?e=n.every(r=>Ux(r)):e=Ux(n),e)return qx(n,t)}return null};Ze.registerSaveRouter(QN),Ze.registerLoadRouter(QN);function qx(n,t){return new Gx(n,t)}function Xf(n,t){return qx(n,t)}class Hx{constructor(t){this.modelArtifacts=t}async load(){return this.modelArtifacts}}class gO{constructor(t){this.saveHandler=t}async save(t){return this.saveHandler(t)}}function yO(n,t,e,r){if(arguments.length===1){let o=n.modelTopology!=null||n.weightSpecs!=null;return o?new Hx(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Hx({modelTopology:n}))}else return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Hx({modelTopology:n,weightSpecs:t,weightData:e,trainingConfig:r})}function bO(n){return new gO(n)}var xO=Object.freeze({__proto__:null,browserFiles:hO,browserHTTPRequest:Xf,concatenateArrayBuffers:Hf,decodeWeights:qf,encodeWeights:Ox,fromMemory:yO,getLoadHandlers:Bx,getModelArtifactsInfoForJSON:Yu,getSaveHandlers:Mx,http:qx,isHTTPScheme:Ux,loadWeights:JN,registerLoadRouter:BP,registerSaveRouter:MP,weightsLoaderFactory:ZN,withSaveHandler:bO,copyModel:ZP,listModels:YP,moveModel:QP,removeModel:JP});function wO(n,t){let e=M(n,"x","reshape",null),r={x:e},o={shape:t},s=(c,l)=>(t=Ge(t,e.size),_(e.size===G(t),()=>"new shape and old shape must have the same number of elements."),l([e]),c.reshape(e,t));return X.runKernelFunc(s,r,null,Eu,o)}let Q=j({reshape_:wO});function vO(n,t,e=!1,r=!1){let o=M(n,"a","matMul"),s=M(t,"b","matMul");[o,s]=Je(o,s);let c=(f,m)=>{m([o,s]);let y=e?o.shape[o.rank-2]:o.shape[o.rank-1],b=r?s.shape[s.rank-1]:s.shape[s.rank-2],v=e?o.shape[o.rank-1]:o.shape[o.rank-2],T=r?s.shape[s.rank-2]:s.shape[s.rank-1],N=o.shape.slice(0,-2),S=s.shape.slice(0,-2),D=G(N),I=G(S),P=D===I||D===1||I===1;_(o.rank>=2&&s.rank>=2&&P,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${N}) and (${S}).`),_(y===b,()=>`Error in matMul: inner shapes (${y}) and (${b}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${e} and transposeB=${r} must match.`);let E=D>I?N:S,L=E.concat([v,T]),B=e?Q(o,[D,y,v]):Q(o,[D,v,y]),q=r?Q(s,[I,T,b]):Q(s,[I,b,T]),H=f.batchMatMul(B,q,e,r);return Q(H,L)},l={a:o,b:s},p={transposeA:e,transposeB:r};return X.runKernelFunc(c,l,null,cf,p)}let ge=j({matMul_:vO});function TO(n,t,e=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let o=M(n,"indices","oneHot","int32"),s=[...o.shape,t],c=(f,m)=>(m([o]),Q(f.oneHot(Q(o,[o.size]),t,e,r),s)),l={indices:o},p={depth:t,onValue:e,offValue:r};return X.runKernelFunc(c,l,null,fx,p)}let Zi=j({oneHot_:TO});function kO(n,t){let e=M(n,"x","transpose");if(t==null&&(t=e.shape.map((s,c)=>c).reverse()),_(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of perm ${t}.`),t.forEach(s=>{_(s>=0&&s<e.rank,()=>`All entries in 'perm' must be between 0 and ${e.rank-1} but got ${t}`)}),e.rank<=1)return e.clone();let r={x:e},o={perm:t};return X.runKernelFunc(s=>s.transpose(e,t),r,null,Wu,o)}let Kt=j({transpose_:kO});function NO(n,t,e){let r=M(n,"labels","confusionMatrix"),o=M(t,"predictions","confusionMatrix");_(e==null||e>0&&Number.isInteger(e),()=>`If provided, numClasses must be a positive integer, but got ${e}`),_(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),_(o.rank===1,()=>`Expected the rank of predictions to be 1, but got ${o.rank}`),_(r.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),_(e>0&&Number.isInteger(e),()=>`numClasses is required to be a positive integer, but got ${e}`);let s=Zi($t(r,"int32"),e),c=Zi($t(o,"int32"),e),l=Kt(s),p=ge(l,c);return $t(p,"int32")}let _O=j({confusionMatrix_:NO});var CO=Object.freeze({__proto__:null,confusionMatrix:_O});function t_(n,t,e){if(et(n),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let r=Lo(n,e);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ti(n,t,r,e)}let vc;function SO(n,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,r=!1,o=!1,s=!1,c=!1;if(n.data instanceof Uint8Array)e=!0;else if(typeof ImageData!="undefined"&&n instanceof ImageData)r=!0;else if(typeof HTMLVideoElement!="undefined"&&n instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement!="undefined"&&n instanceof HTMLImageElement)s=!0;else if(n.getContext!=null)c=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(o){let v=2;if(o&&n.readyState<v)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}let l=Cx(Ff,X.backendName);if(l!=null){let v={pixels:n},T={numChannels:t};return X.runKernel(Ff,v,T)}let[p,f]=o?[n.videoWidth,n.videoHeight]:[n.width,n.height],m;c?m=n.getContext("2d").getImageData(0,0,p,f).data:r||e?m=n.data:(s||o)&&(vc==null&&(vc=document.createElement("canvas").getContext("2d")),vc.canvas.width=p,vc.canvas.height=f,vc.drawImage(n,0,0,p,f),m=vc.getImageData(0,0,p,f).data);let y;if(t===4)y=new Int32Array(m);else{let v=p*f;y=new Int32Array(v*t);for(let T=0;T<v;T++)for(let N=0;N<t;++N)y[T*t+N]=m[T*4+N]}let b=[f,p,t];return t_(y,b,"int32")}async function $O(n,t){let e=M(n,"img","toPixels");if(!(n instanceof ot)){let f=e;e=$t(f,"int32"),f.dispose()}if(e.rank!==2&&e.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let[r,o]=e.shape.slice(0,2),s=e.rank===2?1:e.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(e.dtype!=="float32"&&e.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`);let c=await e.data(),l=e.dtype==="float32"?255:1,p=new Uint8ClampedArray(o*r*4);for(let f=0;f<r*o;++f){let m=[0,0,0,255];for(let b=0;b<s;b++){let v=c[f*s+b];if(e.dtype==="float32"){if(v<0||v>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${v}.`)}else if(e.dtype==="int32"&&(v<0||v>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${v}.`);s===1?(m[0]=v*l,m[1]=v*l,m[2]=v*l):m[b]=v*l}let y=f*4;p[y+0]=Math.round(m[0]),p[y+1]=Math.round(m[1]),p[y+2]=Math.round(m[2]),p[y+3]=Math.round(m[3])}if(t!=null){t.width=o,t.height=r;let f=t.getContext("2d"),m=new ImageData(p,o,r);f.putImageData(m,0,0)}return e!==n&&e.dispose(),p}let e_=j({fromPixels_:SO});var IO=Object.freeze({__proto__:null,toPixels:$O,fromPixels:e_});function Yf(n,t){if(n.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n.rank}.`);if(t.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[t.rank-1]>n.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[t.rank-1]} vs. ${n.rank}`);if(n.size===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);let e=t.shape,r=e[e.length-1],o=1;for(let f=0;f<e.length-1;++f)o*=e[f];let s=n.shape,c=e.slice();c.pop();let l=1;for(let f=r;f<n.rank;++f)l*=s[f],c.push(s[f]);let p=[...Yt(n.shape).map(f=>f/l),1].slice(0,r);return[c,o,l,p]}var EO=Object.freeze({__proto__:null,prepareAndValidate:Yf});function jx(n,t,e){let r=t.rank>1?t.shape[t.rank-1]:1,o=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${r}, and batchDim: ${o}.`;if(e.rank<o)throw new Error(s+` update.rank < ${o}. `);if(n.length<r+(e.rank-o))throw new Error(s+` Output shape length < ${r+(e.rank-o)}`);if(e.rank!==o+n.length-r)throw new Error(s+` update.rank != ${o+n.length-r}`);for(let c=0;c<o;++c)if(e.shape[c]!==t.shape[c])throw new Error(s+` updates.shape[${c}] (${e.shape[c]}) != indices.shape[${c}] (${t.shape[c]}).`);for(let c=0;c<e.rank-o;++c)if(e.shape[c+o]!==n[c+r])throw new Error(s+` updates.shape[${c+o}] (${e.shape[c+o]}) != shape[${c+o}] (${n[c+o]})`)}function Kx(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}jx(e,t,n)}function Tc(n,t,e){let r=t.shape.length,o=r>1?t.shape[r-1]:1,s=e.length,c=1;for(let y=o;y<s;++y)c*=e[y];let l=o<1?1:o,p=G(t.shape)/l,f=[...Yt(e.slice(0,o)),1],m=G(e);return{sliceRank:o,numUpdates:p,sliceSize:c,strides:f,outputSize:m}}var DO=Object.freeze({__proto__:null,validateUpdateShape:jx,validateInput:Kx,calculateShapes:Tc});function Xx(n,t,e){let r=n.shape.length;_(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),_(r===e.length,()=>`Error in slice${r}D: Length of size ${e} must match the rank of the array (${r}).`);for(let o=0;o<r;++o)_(t[o]+e[o]<=n.shape[o],()=>`Error in slice${r}D: begin[${o}] + size[${o}] (${t[o]+e[o]}) would overflow input.shape[${o}] (${n.shape[o]})`)}function Jf(n){let t=[],e=0;for(;n>0;)n&1&&t.push(e),n/=2,e++;return t}function Zf(n,t,e){let r=[];for(let o=0;o<n.length;o++)r[o]=Math.ceil((t[o]-n[o])/e[o]);return r}function n_(n,t,e,r){let o=[...n];for(let s=o.length;s<r.length;s++)o.push(1);for(let s=0;s<e;s++)s===0?o[t]=1:(o.splice(t,0,1),o.pop());return o}function r_(n,t,e){return e<=n?e:e-(t-1)}function o_(n,t){let e=[];for(let r=0;r<n;r++)e.push(t+r);return e}function s_(n,t,e,r,o,s,c,l,p){let f=n.length,m=new Array(f),y=new Array(f),b=new Array(f);if(t.length&&e>0){let v=t[0],T=e+1;m=i_(c,v,T,r,n),y=a_(l,v,T,o,n),b=n_(s,v,T,n)}else for(let v=0;v<f;v++)m[v]=l_(c,r,s,n,v,p),y[v]=u_(l,o,s,n,v,p),b[v]=c_(s,v,p);return{begin:m,end:y,strides:b}}function i_(n,t,e,r,o){let s=[...o],c=o_(e,t);for(let l=0;l<s.length;l++)if(c.indexOf(l)>-1)s[l]=0;else{let p=r_(t,e,l),f=r[p];n&1<<p&&(f=0),s[l]=f}return s}function a_(n,t,e,r,o){let s=[...o],c=o_(e,t);for(let l=0;l<s.length;l++)if(c.indexOf(l)>-1)s[l]=Number.MAX_SAFE_INTEGER;else{let p=r_(t,e,l),f=r[p];n&1<<p&&(f=Number.MAX_SAFE_INTEGER),s[l]=f}for(let l=0;l<s.length;l++){let p=o[l];s[l]<0&&(s[l]+=p),s[l]=w(0,s[l],o[l])}return s}function c_(n,t,e){let r=n[t];return(e&1<<t||r==null)&&(r=1),r}function l_(n,t,e,r,o,s){let c=t[o],l=e[o]||1;(n&1<<o||s&1<<o||c==null)&&(l>0?c=Number.MIN_SAFE_INTEGER:c=Number.MAX_SAFE_INTEGER);let p=r[o];return c<0&&(c+=p),c=w(0,c,p-1),c}function u_(n,t,e,r,o,s){let c=t[o],l=e[o]||1;(n&1<<o||s&1<<o||c==null)&&(l>0?c=Number.MAX_SAFE_INTEGER:c=Number.MIN_SAFE_INTEGER);let p=r[o];return c<0&&(c+=p),l>0?c=w(0,c,p):c=w(-1,c,p-1),c}function Yx(n,t,e){let r=e.length;for(let o=0;o<e.length;o++)if(e[o]>1){r=o;break}for(let o=r+1;o<e.length;o++)if(t[o]>0||e[o]!==n[o])return!1;return!0}function Jx(n,t){let e=n.length>0?n[n.length-1]:1;for(let r=0;r<n.length-1;r++)e+=n[r]*t[r];return e}function Qf(n,t,e){let r,o=n.shape.length;typeof t=="number"?r=[t,...new Array(o-1).fill(0)]:t.length<o?r=t.concat(new Array(o-t.length).fill(0)):r=t.slice(),r.forEach(c=>{_(c!==-1,()=>"slice() does not support negative begin indexing.")});let s;return e==null?s=new Array(o).fill(-1):typeof e=="number"?s=[e,...new Array(o-1).fill(-1)]:e.length<o?s=e.concat(new Array(o-e.length).fill(-1)):s=e,s=s.map((c,l)=>c>=0?c:(_(c===-1,()=>`Negative size values should be exactly -1 but got ${c} for the slice() size at index ${l}.`),n.shape[l]-r[l])),[r,s]}var p_=Object.freeze({__proto__:null,assertParamsValid:Xx,maskToAxes:Jf,computeOutShape:Zf,stridesWithElidedDims:n_,getNormalizedAxes:s_,startIndicesWithElidedDims:i_,stopIndicesWithElidedDims:a_,stridesForAxis:c_,startForAxis:l_,stopForAxis:u_,isSliceContinous:Yx,computeFlatOffset:Jx,parseSliceParams:Qf});class Qi{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Dr{constructor(){this.classNameMap={}}static getMap(){return Dr.instance==null&&(Dr.instance=new Dr),Dr.instance}static register(t){Dr.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function vt(n){_(n.className!=null,()=>"Class being registered does not have the static className property defined."),_(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),_(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Dr.register(n)}var AO=Object.freeze({__proto__:null,Serializable:Qi,SerializationMap:Dr,registerClass:vt});let FO=.001,h_=.1;function RO(n,t,e){return e==null&&(e=td()),Zx(n,t,(r,o)=>tw(r,o,e))}function td(){return X.backend.floatPrecision()===32?FO:h_}function Zx(n,t,e){let r=!0;if((gn(n)||gn(t))&&(r=!1),gn(n)&&gn(t)&&(r=!0),r){let c=n.constructor.name,l=t.constructor.name;if(c!==l)throw new Error(`Arrays are of different type. Actual: ${c}. Expected: ${l}`)}if(Array.isArray(n)&&Array.isArray(t)){let c=Lo(n),l=Lo(t);if(!lt(c,l))throw new Error(`Arrays have different shapes. Actual: [${c}]. Expected: [${l}]`)}let o=gn(n)?n:tt(n),s=gn(t)?t:tt(t);if(o.length!==s.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${s.length}.
Actual:   ${o}.
Expected: ${s}.`);for(let c=0;c<s.length;++c){let l=o[c],p=s[c];if(!e(l,p))throw new Error(`Arrays differ: actual[${c}] = ${l}, expected[${c}] = ${p}.
Actual:   ${o}.
Expected: ${s}.`)}}function PO(n,t){n().then(()=>t.fail(),()=>t())}function OO(n,t){let e=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return as(n)||as(n[0])||as(t)||as(t[0])?Zx(n,e,(r,o)=>r==o):Zx(n,t,(r,o)=>tw(r,o,0))}function Qx(n,t,e){if(e==null&&(e=td()),!tw(n,t,e))throw new Error(`Numbers differ: actual === ${n}, expected === ${t}`)}function tw(n,t,e){return!isFinite(n)&&!isFinite(t)?!0:!(isNaN(n)||isNaN(t)||Math.abs(n-t)>e)}function LO(n,t,e){for(let r=0;r<n.length;r++)if(n[r]<t||n[r]>e)throw new Error(`Value out of range:${n[r]} low: ${t}, high: ${e}`)}function MO(n,t){expect(new Float32Array(n)).toEqual(new Float32Array(t))}var BO=Object.freeze({__proto__:null,TEST_EPSILON_FLOAT16:h_,expectArraysClose:RO,testEpsilon:td,expectPromiseToFail:PO,expectArraysEqual:OO,expectNumbersClose:Qx,expectValuesInRange:LO,expectArrayBuffersEqual:MO});let f_="2.7.0";function zO(){ct().set("PROD",!0)}function WO(){ct().set("DEBUG",!0)}function VO(){ct().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function yn(n){ct().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}TP(yn);function GO(){X.disposeVariables()}function ps(){return X}function ed(){return X.memory()}function UO(n){return X.profile(n)}function rt(n,t){return X.tidy(n,t)}function Xt(n){let t=cs(n);t.forEach(e=>e.dispose())}function Sn(n){return X.keep(n)}function qO(n){return X.time(n)}function d_(n){return X.setBackend(n)}function HO(){return X.ready()}function jO(){return X.backendName}function KO(n){X.removeBackend(n)}function XO(n){return X.findBackend(n)}function YO(n){return X.findBackendFactory(n)}function ew(n,t,e=1){return X.registerBackend(n,t,e)}function m_(){return X.backend}function JO(n,t){ct().setPlatform(n,t)}function ZO(n,t){let e=M(n,"a","add"),r=M(t,"b","add");[e,r]=Je(e,r);let o=(c,l)=>{let p=c.add(e,r);return l([e,r]),p},s={a:e,b:r};return X.runKernelFunc(o,s,null,Hi)}let Tt=j({add_:ZO});function QO(n,t){let e=M(n,"a","floorDiv"),r=M(t,"b","floorDiv");[e,r]=Je(e,r);let o=(c,l)=>{let p=c.floorDiv(e,r);return l([e,r]),p},s={a:e,b:r};return X.runKernelFunc(o,s,null,Qb)}let nd=j({floorDiv_:QO});function tL(n,t){let e=M(n,"a","div"),r=M(t,"b","div");if([e,r]=Je(e,r),e.dtype==="int32"&&r.dtype==="int32")return nd(e,r);let o=(l,p)=>{let f=l.realDivide(e,r);return p([e,r]),f},s={a:e,b:r},c={};return X.runKernelFunc(o,s,null,uc,c)}let Bt=j({div_:tL});function eL(n,t){let e=M(n,"a","mul"),r=M(t,"b","mul");[e,r]=Je(e,r);let o=(c,l)=>{let p=c.multiply(e,r);return l([e,r]),p},s={a:e,b:r};return X.runKernelFunc(o,s,null,pc)}let nt=j({mul_:eL});function nL(n){let t=M(n,"x","abs"),e={x:t};return X.runKernelFunc((r,o)=>(o([t]),t.dtype==="complex64"?r.complexAbs(t):r.abs(t)),e,null,of)}let bn=j({abs_:nL});function rL(n){let t=M(n,"x","acos"),e={x:t};return X.runKernelFunc((r,o)=>{let s=r.acos(t);return o([t]),s},e,null,eu)}let nw=j({acos_:rL});function oL(n){let t=M(n,"x","acosh"),e={x:t};return X.runKernelFunc((r,o)=>{let s=r.acosh(t);return o([t]),s},e,null,nu)}let rw=j({acosh_:oL});function sL(n){_(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),_(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);let t=n.map((s,c)=>M(s,`tensors${c}`,"addN")),e=t[0];t.forEach(s=>{if(s.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(s=>{if(!lt(s.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let r=(s,c)=>{let l=s.addN(t);return c(t),l},o=t;return X.runKernelFunc(r,o,null,zb)}let g_=j({addN_:sL});function ow(n,t){for(let e=0;e<n.length;++e)if(n[n.length-e-1]!==t-1-e)return!1;return!0}function y_(n,t,e){let r=n.length+t.length,o=[],s=0,c=0;for(let l=0;l<r;l++)e.indexOf(l)===-1?o.push(n[s++]):o.push(t[c++]);return o}function Fn(n,t){let e=[],r=n.length;for(let s=0;s<r;s++)t.indexOf(s)===-1&&e.push(n[s]);let o=t.map(s=>n[s]);return[e,o]}function Rn(n,t){let e=t.map(r=>1);return y_(n,e,t)}function sr(n,t,e){_(ow(t,e),()=>`${n} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function ir(n,t){if(ow(n,t))return null;let e=[];for(let r=0;r<t;++r)n.indexOf(r)===-1&&e.push(r);return n.forEach(r=>e.push(r)),e}function Ju(n){return n.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function xr(n,t){let e=[];for(let r=t-n;r<t;++r)e.push(r);return e}function iL(n,t=null,e=!1){let r=M(n,"x","all","bool"),o=l=>{let p=Vt(t,r.shape),f=p,m=ir(f,r.rank);m!=null&&(r=Kt(r,m),f=xr(f.length,r.rank));let y=l.all(r,f);if(e){let b=Rn(y.shape,p);return Q(y,b)}return y},s={x:r},c={axis:t,keepDims:e};return X.runKernelFunc(o,s,null,tN,c)}let rd=j({all_:iL});function aL(n,t=null,e=!1){let r=M(n,"x","any","bool"),o=l=>{let p=Vt(t,r.shape),f=p,m=ir(f,r.rank);m!=null&&(r=Kt(r,m),f=xr(f.length,r.rank));let y=l.any(r,f);if(e){let b=Rn(y.shape,p);return Q(y,b)}return y},s={x:r},c={axis:t,keepDims:e};return X.runKernelFunc(o,s,null,eN,c)}let Zu=j({any_:aL});function cL(n,t=0){let e=M(n,"x","argMax"),r=(c,l)=>{l([e]);let p=Vt(t,e.shape),f=ir(p,e.rank);return f!=null&&(e=Kt(e,f),p=xr(p.length,e.rank)),c.argMax(e,p[0])},o={x:e},s={axis:t};return X.runKernelFunc(r,o,null,Wb,s)}let Qu=j({argMax_:cL});function lL(n,t=0){let e=M(n,"x","argMin"),r=(c,l)=>{l([e]),t==null&&(t=0);let p=Vt(t,e.shape),f=ir(p,e.rank);return f!=null&&(e=Kt(e,f),p=xr(p.length,e.rank)),c.argMin(e,p[0])},o={x:e},s={axis:t};return X.runKernelFunc(r,o,null,Vb,s)}let sw=j({argMin_:lL});function uL(n){let t=M(n,"x","asin"),e={x:t};return X.runKernelFunc((r,o)=>{let s=r.asin(t);return o([t]),s},e,null,ru)}let iw=j({asin_:uL});function pL(n){let t=M(n,"x","asinh"),e={x:t};return X.runKernelFunc((r,o)=>{let s=r.asinh(t);return o([t]),s},e,null,ou)}let aw=j({asinh_:pL});function hL(n){let t=M(n,"x","atan"),e={x:t};return X.runKernelFunc((r,o)=>{let s=r.atan(t);return o([t]),s},e,null,su)}let cw=j({atan_:hL});function fL(n,t){let e=M(n,"a","atan2"),r=M(t,"b","atan2");[e,r]=Je(e,r);let o=(c,l)=>{let p=c.atan2(e,r);return l([e,r]),p},s={a:e,b:r};return X.runKernelFunc(o,s,null,sf)}let lw=j({atan2_:fL});function dL(n){let t=M(n,"x","atanh"),e={x:t};return X.runKernelFunc((r,o)=>{let s=r.atanh(t);return o([t]),s},e,null,iu)}let uw=j({atanh_:dL});function od(n,t,e,r,o="NHWC",s){let c=n[3],l=[...t,c],p=si(o);return Un(n,l,e,s,r,null,null,p)}function Kn(n,t,e,r,o,s,c="channelsLast"){let[l,p]=sd(t),f;if(c==="channelsLast")f=[l,p,n[3],n[3]];else if(c==="channelsFirst")f=[l,p,n[1],n[1]];else throw new Error(`Unknown dataFormat ${c}`);return Un(n,f,e,r,o,s,!1,c)}function tp(n,t,e,r,o,s,c="NDHWC"){let[l,p,f]=hw(t),m,y;if(c==="NDHWC")y="channelsLast",m=[l,p,f,n[4],n[4]];else if(c==="NCDHW")y="channelsFirst",m=[l,p,f,n[1],n[1]];else throw new Error(`Unknown dataFormat ${c}`);return ri(n,m,e,r,o,!1,y,s)}function Un(n,t,e,r,o,s,c=!1,l="channelsLast"){let[p,f,m,y]=[-1,-1,-1,-1];if(l==="channelsLast")[p,f,m,y]=n;else if(l==="channelsFirst")[p,y,f,m]=n;else throw new Error(`Unknown dataFormat ${l}`);let[b,v,,T]=t,[N,S]=sd(e),[D,I]=sd(r),P=kc(b,D),E=kc(v,I),{padInfo:L,outHeight:B,outWidth:q}=yL(o,f,m,N,S,P,E,s,l),H=c?T*y:T,Z;return l==="channelsFirst"?Z=[p,H,B,q]:l==="channelsLast"&&(Z=[p,B,q,H]),{batchSize:p,dataFormat:l,inHeight:f,inWidth:m,inChannels:y,outHeight:B,outWidth:q,outChannels:H,padInfo:L,strideHeight:N,strideWidth:S,filterHeight:b,filterWidth:v,effectiveFilterHeight:P,effectiveFilterWidth:E,dilationHeight:D,dilationWidth:I,inShape:n,outShape:Z,filterShape:t}}function ri(n,t,e,r,o,s=!1,c="channelsLast",l){let[p,f,m,y,b]=[-1,-1,-1,-1,-1];if(c==="channelsLast")[p,f,m,y,b]=n;else if(c==="channelsFirst")[p,b,f,m,y]=n;else throw new Error(`Unknown dataFormat ${c}`);let[v,T,N,,S]=t,[D,I,P]=hw(e),[E,L,B]=hw(r),q=kc(v,E),H=kc(T,L),Z=kc(N,B),{padInfo:J,outDepth:it,outHeight:pt,outWidth:ht}=bL(o,f,m,y,D,I,P,q,H,Z,l),dt=s?S*b:S,ft;return c==="channelsFirst"?ft=[p,dt,it,pt,ht]:c==="channelsLast"&&(ft=[p,it,pt,ht,dt]),{batchSize:p,dataFormat:c,inDepth:f,inHeight:m,inWidth:y,inChannels:b,outDepth:it,outHeight:pt,outWidth:ht,outChannels:dt,padInfo:J,strideDepth:D,strideHeight:I,strideWidth:P,filterDepth:v,filterHeight:T,filterWidth:N,effectiveFilterDepth:q,effectiveFilterHeight:H,effectiveFilterWidth:Z,dilationDepth:E,dilationHeight:L,dilationWidth:B,inShape:n,outShape:ft,filterShape:t}}function mL(n,t,e,r,o){r==null&&(r=pw(n,t,e));let s=n[0],c=n[1],l=ta((s-t+2*r)/e+1,o);_(gt(l),()=>`The output # of rows (${l}) must be an integer. Change the stride and/or zero pad parameters`);let p=ta((c-t+2*r)/e+1,o);return _(gt(p),()=>`The output # of columns (${p}) must be an integer. Change the stride and/or zero pad parameters`),[l,p]}function gL(n,t,e,r,o,s){o==null&&(o=pw(n,t,r));let c=n[0],l=n[1],p=n[2],f=ta((c-t+2*o)/r+1,s);_(gt(f),()=>`The output # of depths (${f}) must be an integer. Change the stride and/or zero pad parameters`);let m=ta((l-t+2*o)/r+1,s);_(gt(m),()=>`The output # of rows (${m}) must be an integer. Change the stride and/or zero pad parameters`);let y=ta((p-t+2*o)/r+1,s);return _(gt(y),()=>`The output # of columns (${y}) must be an integer. Change the stride and/or zero pad parameters`),[f,m,y,e]}function pw(n,t,e,r=1){let o=kc(t,r);return Math.floor((n[0]*(e-1)-e+o)/2)}function sd(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function hw(n){return typeof n=="number"?[n,n,n]:n}function kc(n,t){return t<=1?n:n+(n-1)*(t-1)}function yL(n,t,e,r,o,s,c,l,p){let f,m,y;if(typeof n=="number"){let b=n===0?"VALID":"NUMBER";f={top:n,bottom:n,left:n,right:n,type:b};let v=mL([t,e],s,r,n,l);m=v[0],y=v[1]}else if(n==="same"){m=Math.ceil(t/r),y=Math.ceil(e/o);let b=Math.max(0,(m-1)*r+s-t),v=Math.max(0,(y-1)*o+c-e),T=Math.floor(b/2),N=b-T,S=Math.floor(v/2),D=v-S;f={top:T,bottom:N,left:S,right:D,type:"SAME"}}else if(n==="valid")f={top:0,bottom:0,left:0,right:0,type:"VALID"},m=Math.ceil((t-s+1)/r),y=Math.ceil((e-c+1)/o);else if(typeof n=="object"){let b=p==="channelsLast"?n[1][0]:n[2][0],v=p==="channelsLast"?n[1][1]:n[2][1],T=p==="channelsLast"?n[2][0]:n[3][0],N=p==="channelsLast"?n[2][1]:n[3][1],S=b===0&&v===0&&T===0&&N===0?"VALID":"EXPLICIT";f={top:b,bottom:v,left:T,right:N,type:S},m=ta((t-s+b+v)/r+1,l),y=ta((e-c+T+N)/o+1,l)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:f,outHeight:m,outWidth:y}}function bL(n,t,e,r,o,s,c,l,p,f,m){let y,b,v,T;if(typeof n=="number"){let N=n===0?"VALID":"NUMBER";y={top:n,bottom:n,left:n,right:n,front:n,back:n,type:N};let S=gL([t,e,r,1],l,1,o,n,m);b=S[0],v=S[1],T=S[2]}else if(n==="same"){b=Math.ceil(t/o),v=Math.ceil(e/s),T=Math.ceil(r/c);let N=(b-1)*o+l-t,S=(v-1)*s+p-e,D=(T-1)*c+f-r,I=Math.floor(N/2),P=N-I,E=Math.floor(S/2),L=S-E,B=Math.floor(D/2),q=D-B;y={top:E,bottom:L,left:B,right:q,front:I,back:P,type:"SAME"}}else if(n==="valid")y={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},b=Math.ceil((t-l+1)/o),v=Math.ceil((e-p+1)/s),T=Math.ceil((r-f+1)/c);else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:y,outDepth:b,outHeight:v,outWidth:T}}function ta(n,t){if(!t)return n;switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function oi(n){let[t,e,r]=sd(n);return t===1&&e===1&&r===1}function fn(n,t){return oi(n)||oi(t)}function si(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function xL(n,t,e,r,o){let s=M(n,"x","avgPool","float32"),c=1;_(fn(e,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${c}'`);let l=s,p=!1;s.rank===3&&(p=!0,l=Q(s,[1,s.shape[0],s.shape[1],s.shape[2]])),_(l.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${l.rank}.`),o!=null&&_(gt(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);let f=(v,T)=>{let N=Kn(l.shape,t,e,1,r,o);return T([l]),N.filterWidth===1&&N.filterHeight===1&&lt(N.inShape,N.outShape)?l.clone():v.avgPool(l,N)},m={x:l},y={filterSize:t,strides:e,pad:r,dimRoundingMode:o},b=X.runKernelFunc(f,m,null,au,y);return b=$t(b,s.dtype),p?Q(b,[b.shape[1],b.shape[2],b.shape[3]]):b}let ep=j({avgPool_:xL});function wL(n,t,e,r,o,s="NDHWC",c){c==null?c=[1,1,1]:yn("dilations is deprecated, this field will be gone in v3.0.0.");let l=M(n,"x","avgPool3d","float32"),p=l,f=!1;l.rank===4&&(f=!0,p=Q(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),_(p.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${p.rank}.`),_(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),_(fn(e,c),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${e} and dilations '${c}'`),o!=null&&_(gt(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);let m=(T,N)=>{c==null&&(c=[1,1,1]);let S=tp(p.shape,t,e,c,r,o,s);return N([p]),T.avgPool3d(p,S)},y={x:p},b={filterSize:t,strides:e,pad:r,dimRoundingMode:o,dataFormat:s,dilations:c},v=X.runKernelFunc(m,y,null,Gb,b);return v=$t(v,p.dtype),f?Q(v,[v.shape[1],v.shape[2],v.shape[3],v.shape[4]]):v}let fw=j({avgPool3d_:wL});function id(n,t){let e=n[0].length;n.forEach((o,s)=>{_(o.length===e,()=>`Error in concat${e}D: rank of tensors[${s}] must be the same as the rank of the rest (${e})`)}),_(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);let r=n[0];n.forEach((o,s)=>{for(let c=0;c<e;c++)_(c===t||o[c]===r[c],()=>`Error in concat${e}D: Shape of tensors[${s}] (${o}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function hs(n,t){let e=n[0].slice();for(let r=1;r<n.length;r++)e[t]+=n[r][t];return e}function vL(n,t=0){_(n.length>=1,()=>"Pass at least one tensor to concat");let e=Xu(n,"tensors","concat");e[0].dtype==="complex64"&&e.forEach(c=>{if(c.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${c.dtype}. `)});let r=(c,l)=>{let p=Vt(t,e[0].shape)[0],f=hs(e.map(b=>b.shape),p);if(G(f)===0)return un([],f);if(e=e.filter(b=>b.size>0),e.length===1)return e[0];let m=e.map(b=>b.shape);id(m,p);let y=c.concat(e,p);return l(e),y},o=e,s={axis:t};return X.runKernelFunc(r,o,null,uu,s)}let Qe=j({concat_:vL});function TL(n){let t=M(n,"x","sigmoid"),e={x:t};return X.runKernelFunc((r,o)=>{let s=r.sigmoid(t);return o([s]),s},e,null,Lu)}let Bo=j({sigmoid_:TL});function kL(n,t,e){let r=M(n,"x","slice");if(r.rank===0)throw new Error("Slicing scalar is not possible");let o=(l,p)=>{let[f,m]=Qf(r,t,e);return Xx(r,f,m),p([r]),l.slice(r,f,m)},s={x:r},c={begin:t,size:e};return X.runKernelFunc(o,s,null,If,c)}let ce=j({slice_:kL});function NL(n){let t=M(n,"x","tanh"),e={x:t};return X.runKernelFunc((r,o)=>{let s=r.tanh(t);return o([s]),s},e,null,zu)}let Nc=j({tanh_:NL});function _L(n,t,e,r,o,s){let c=M(n,"forgetBias","basicLSTMCell"),l=M(t,"lstmKernel","basicLSTMCell"),p=M(e,"lstmBias","basicLSTMCell"),f=M(r,"data","basicLSTMCell"),m=M(o,"c","basicLSTMCell"),y=M(s,"h","basicLSTMCell"),b=Qe([f,y],1),v=ge(b,l),T=Tt(v,p),N=T.shape[0],S=T.shape[1]/4,D=[N,S],I=ce(T,[0,0],D),P=ce(T,[0,S],D),E=ce(T,[0,S*2],D),L=ce(T,[0,S*3],D),B=Tt(nt(Bo(I),Nc(P)),nt(m,Bo(Tt(c,E)))),q=nt(Nc(B),Bo(L));return[B,q]}let CL=j({basicLSTMCell_:_L});function SL(n,t,e){let r=M(n,"x","batchToSpaceND"),o=t.reduce((p,f)=>p*f);_(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),_(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),_(r.shape[0]%o===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${o}`);let s=p=>p.batchToSpaceND(r,t,e),c={x:r},l={blockShape:t,crops:e};return X.runKernelFunc(s,c,null,Ub,l)}let np=j({batchToSpaceND_:SL});function $L(n){let t;return n.rank===0||n.rank===1?t=Q(n,[1,1,1,n.size]):n.rank===2?t=Q(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?t=Q(n,[1,n.shape[0],n.shape[1],n.shape[2]]):t=n,t}function IL(n,t,e,r,o,s){s==null&&(s=.001);let c=M(n,"x","batchNorm"),l=M(t,"mean","batchNorm"),p=M(e,"variance","batchNorm"),f;o!=null&&(f=M(o,"scale","batchNorm"));let m;r!=null&&(m=M(r,"offset","batchNorm")),_(l.rank===p.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),_(m==null||l.rank===m.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),_(f==null||l.rank===f.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let y=$L(c),b=(S,D)=>(D([y,l,p,f]),S.batchNorm(y,ad(l),ad(p),ad(m),ad(f),s)),v={x:y,scale:f,offset:m,mean:l,variance:p},T={varianceEpsilon:s},N=X.runKernelFunc(b,v,null,yu,T);return Q(N,c.shape)}function ad(n){return n==null?null:n.rank===0?Q(n,[n.size]):n.rank===1?n:n.rank===2?Q(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?Q(n,[1,n.shape[0],n.shape[1],n.shape[2]]):n}let ea=j({batchNorm_:IL});function EL(n,t,e,r,o,s){let c=M(n,"x","batchNorm"),l=M(t,"mean","batchNorm"),p=M(e,"variance","batchNorm"),f;o!=null&&(f=M(o,"scale","batchNorm"));let m;return r!=null&&(m=M(r,"offset","batchNorm")),_(c.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${c.rank}.`),_(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${l.rank}.`),_(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${p.rank}.`),f!=null&&_(f.rank===2||f.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${f.rank}.`),m!=null&&_(m.rank===2||m.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${m.rank}.`),ea(c,l,p,m,f,s)}let b_=j({batchNorm2d_:EL});function DL(n,t,e,r,o,s){let c=M(n,"x","batchNorm"),l=M(t,"mean","batchNorm"),p=M(e,"variance","batchNorm"),f;o!=null&&(f=M(o,"scale","batchNorm"));let m;return r!=null&&(m=M(r,"offset","batchNorm")),_(c.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${c.rank}.`),_(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${l.rank}.`),_(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${p.rank}.`),f!=null&&_(f.rank===3||f.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${f.rank}.`),m!=null&&_(m.rank===3||m.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${m.rank}.`),ea(c,l,p,m,f,s)}let x_=j({batchNorm3d_:DL});function AL(n,t,e,r,o,s){let c=M(n,"x","batchNorm"),l=M(t,"mean","batchNorm"),p=M(e,"variance","batchNorm"),f;o!=null&&(f=M(o,"scale","batchNorm"));let m;return r!=null&&(m=M(r,"offset","batchNorm")),_(c.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${c.rank}.`),_(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${l.rank}.`),_(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${p.rank}.`),f!=null&&_(f.rank===4||f.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${f.rank}.`),m!=null&&_(m.rank===4||m.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${m.rank}.`),ea(c,l,p,m,f,s)}let w_=j({batchNorm4d_:AL});function FL(n,t){let e=M(n,"broadcastTo","x"),r=e.shape;if(t.some(m=>!(m>0)||m%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){let m=e.shape.slice();for(;m.length<t.length;)m.unshift(1);e=Q(e,m)}let o=e.shape,s=Array.from(t);for(let m=t.length-1;m>=0;m--)if(o[m]===t[m])s[m]=1;else if(e.shape[m]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);let c=s.map((m,y)=>m>1?y:-1).filter(m=>m>=0);if(c.length===0)return ni(e);let l=m=>m.tile(e,s),p={x:e},f={shape:t,inputShape:o};return X.runKernelFunc(l,p,null,qb,f)}let rp=j({broadcastTo_:FL});function RL(n){let t=M(n,"x","ceil"),e={x:t};return X.runKernelFunc(r=>r.ceil(t),e,null,cu)}let dw=j({ceil_:RL});function PL(n,t,e){let r=M(n,"x","clipByValue");_(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`);let o={x:r},s={clipValueMin:t,clipValueMax:e};return X.runKernelFunc((c,l)=>{let p=c.clip(r,t,e);return l([r]),p},o,null,lu,s)}let ar=j({clipByValue_:PL});function OL(n){return Qe(n,0)}let v_=j({concat1d_:OL});function LL(n,t){return Qe(n,t)}let T_=j({concat2d_:LL});function ML(n,t){return Qe(n,t)}let k_=j({concat3d_:ML});function BL(n,t){return Qe(n,t)}let N_=j({concat4d_:BL});function zL(n,t,e,r,o="NHWC",s=[1,1],c){let l=M(n,"x","conv2d"),p=M(t,"filter","conv2d"),f=l,m=!1;l.rank===3&&(m=!0,f=Q(l,[1,l.shape[0],l.shape[1],l.shape[2]])),_(f.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${f.rank}.`),_(p.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${p.rank}.`),c!=null&&_(gt(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${c} but got pad ${r}.`);let y=o==="NHWC"?f.shape[3]:f.shape[1];_(y===p.shape[2],()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${p.shape[2]}.`),_(fn(e,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`);let b=(S,D)=>{let I=si(o),P=Un(f.shape,p.shape,e,s,r,c,!1,I),E=S.conv2d(f,p,P);return D([f,p]),E},v={x:f,filter:p},T={strides:e,pad:r,dataFormat:o,dilations:s,dimRoundingMode:c},N=X.runKernelFunc(b,v,null,uf,T);return m?Q(N,[N.shape[1],N.shape[2],N.shape[3]]):N}let fs=j({conv2d_:zL});function WL(n,t,e,r,o="NWC",s=1,c){let l=M(n,"x","conv1d"),p=M(t,"filter","conv1d"),f=l,m=!1;l.rank===2&&(m=!0,f=Q(l,[1,l.shape[0],l.shape[1]])),_(f.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`),_(p.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${p.rank}.`),c!=null&&_(gt(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${c} but got pad ${r}.`),_(f.shape[2]===p.shape[1],()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${p.shape[1]}.`),_(fn(e,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${s}'`),_(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);let y=Q(p,[1,p.shape[0],p.shape[1],p.shape[2]]),b=Q(f,[f.shape[0],1,f.shape[1],f.shape[2]]),v=[1,e],T=[1,s],N="NHWC",S=fs(b,y,v,r,N,T,c);return m?Q(S,[S.shape[2],S.shape[3]]):Q(S,[S.shape[0],S.shape[2],S.shape[3]])}let cd=j({conv1d_:WL});function VL(n,t,e,r,o,s="NHWC",c){_(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let l=n,p=t,f=!1;t.rank===3&&(f=!0,p=Q(t,[1,t.shape[0],t.shape[1],t.shape[2]]),l=[1,n[0],n[1],n[2]]),_(l.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${l.length}.`),_(p.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${p.rank}`),_(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);let m=s==="NHWC"?l[3]:l[1],y=s==="NHWC"?p.shape[3]:p.shape[1];_(m===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${e.shape[2]}.`),_(y===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${y}) must match output depth for filter ${e.shape[3]}.`),c!=null&&_(gt(o),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${c} but got pad ${o}.`);let b=(S,D)=>{let I=1,P=si(s),E=Un(l,e.shape,r,I,o,c,!1,P),L=S.conv2dDerInput(p,e,E);return D([p,e]),L},v={dy:p,filter:e},T={strides:r,pad:o,dataFormat:s,dimRoundingMode:c,inputShape:l},N=X.runKernelFunc(b,v,null,pf,T);return f?Q(N,[N.shape[1],N.shape[2],N.shape[3]]):N}let mw=j({conv2DBackpropInput_:VL});function GL(n,t,e,r,o,s){let c=M(n,"x","conv2dTranspose"),l=M(t,"filter","conv2dTranspose");return mw(e,c,l,r,o,"NHWC",s)}let ld=j({conv2dTranspose_:GL});function UL(n,t,e,r,o="NDHWC",s=[1,1,1]){let c=M(n,"x","conv3d"),l=M(t,"filter","conv3d"),p=c,f=!1;c.rank===4&&(f=!0,p=Q(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),_(p.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${p.rank}.`),_(l.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${l.rank}.`),_(p.shape[4]===l.shape[3],()=>`Error in conv3d: depth of input (${p.shape[4]}) must match input depth for filter ${l.shape[3]}.`),_(fn(e,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),_(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);let m=(T,N)=>{let S=ri(p.shape,l.shape,e,s,r),D=T.conv3d(p,l,S);return N([p,l]),D},y={x:p,filter:l},b={strides:e,pad:r,dataFormat:o,dilations:s},v=X.runKernelFunc(m,y,null,hf,b);return f?Q(v,[v.shape[1],v.shape[2],v.shape[3],v.shape[4]]):v}let gw=j({conv3d_:UL});function qL(n,t,e,r,o){_(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let s=n,c=t,l=!1;t.rank===4&&(l=!0,c=Q(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,n[0],n[1],n[2],n[3]]);let p=s[4],f=c.shape[4];_(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),_(c.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${c.rank}`),_(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),_(p===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${p}) must match input depth for filter ${e.shape[3]}.`),_(f===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${f}) must match output depth for filter ${e.shape[4]}.`);let m=T=>{let N=1,S=ri(s,e.shape,r,N,o);return T.conv3dDerInput(c,e,S)},y={dy:c,filter:e},b={pad:o,strides:r,inputShape:s},v=X.runKernelFunc(m,y,null,Kb,b);return l?Q(v,[v.shape[1],v.shape[2],v.shape[3],v.shape[4]]):v}let __=j({conv3DBackpropInput_:qL});function HL(n,t,e,r,o){let s=M(n,"x","conv3dTranspose"),c=M(t,"filter","conv3dTranspose");return __(e,s,c,r,o)}let jL=j({conv3dTranspose_:HL});function KL(n){let t=M(n,"x","cos"),e={x:t};return X.runKernelFunc((r,o)=>{let s=r.cos(t);return o([t]),s},e,null,lc)}let op=j({cos_:KL});function XL(n){let t=M(n,"x","cosh"),e={x:t};return X.runKernelFunc((r,o)=>{let s=r.cosh(t);return o([t]),s},e,null,pu)}let ud=j({cosh_:XL});function YL(n,t=0,e=!1,r=!1){let o=M(n,"x","cumsum"),s=(p,f)=>{let m=ir([t],o.rank),y=o;m!=null&&(y=Kt(o,m));let b=xr(1,o.rank)[0],v=p.cumsum(y,b,e,r);if(f([o]),m!=null){let T=Ju(m);v=Kt(v,T)}return v},c={x:o},l={axis:t,exclusive:e,reverse:r};return X.runKernelFunc(s,c,null,Xb,l)}let pd=j({cumsum_:YL});function JL(n,t,e="NHWC"){let r=M(n,"x","depthToSpace"),o=e==="NHWC"?r.shape[1]:r.shape[2],s=e==="NHWC"?r.shape[2]:r.shape[3],c=e==="NHWC"?r.shape[3]:r.shape[1];_(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${t}  for depthToSpace with input shape
    ${r.shape}`),_(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${r.shape}`),_(c%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${c} for depthToSpace with input shape ${r.shape}`);let l=m=>m.depthToSpace(r,t,e),p={x:r},f={blockSize:t,dataFormat:e};return X.runKernelFunc(l,p,null,oN,f)}let yw=j({depthToSpace_:JL});function ZL(n,t,e,r,o="NHWC",s=[1,1],c){let l=M(n,"x","depthwiseConv2d"),p=M(t,"filter","depthwiseConv2d"),f=l,m=!1;l.rank===3&&(m=!0,f=Q(l,[1,l.shape[0],l.shape[1],l.shape[2]])),_(f.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),_(p.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),_(f.shape[3]===p.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),c!=null&&_(gt(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${c} but got pad ${r}.`);let y=(N,S)=>{s==null&&(s=[1,1]),_(fn(e,s),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`);let D=Un(f.shape,p.shape,e,s,r,c,!0),I=N.depthwiseConv2D(f,p,D);return S([f,p]),I},b={x:f,filter:p},v={strides:e,pad:r,dataFormat:o,dilations:s,dimRoundingMode:c},T=X.runKernelFunc(y,b,null,ff,v);return m?Q(T,[T.shape[1],T.shape[2],T.shape[3]]):T}let na=j({depthwiseConv2d_:ZL});function QL(n){let t=M(n,"x","diag"),e=o=>{let s=Q(t,[t.size]),c=o.diag(s),l=[...n.shape,...n.shape];return Q(c,l)},r={x:t};return X.runKernelFunc(e,r,null,sN)}let tM=j({diag_:QL});function eM(n,t,e,r,o=[1,1],s="NHWC"){let c=M(n,"x","dilation2d"),l=M(t,"filter","dilation2d");_(c.rank===3||c.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${c.rank}.`),_(l.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${l.rank}.`),_(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let p=c,f=!1;c.rank===3&&(p=Q(c,[1,c.shape[0],c.shape[1],c.shape[2]]),f=!0);let m={x:p,filter:l},y={strides:e,pad:r,dilations:o},b=X.runKernel(df,m,y);return f?Q(b,[b.shape[1],b.shape[2],b.shape[3]]):b}let bw=j({dilation2d_:eM});function ra(n,t){let e=n.length,r=[];for(let o=0;o<e;o++){let s=e-1-o,c=n[s]||1,l=t[t.length-1-o]||1;l>1&&c===1&&r.unshift(s)}return r}function xn(n,t){let e=[];for(let r=0;r<t.length;r++){let o=n[n.length-r-1],s=t.length-r-1,c=t[s];(o==null||o===1&&c>1)&&e.unshift(s)}return e}function le(n,t){let e=[],r=Math.max(n.length,t.length);for(let o=0;o<r;o++){let s=n[n.length-o-1];s==null&&(s=1);let c=t[t.length-o-1];if(c==null&&(c=1),s===1)e.unshift(c);else if(c===1)e.unshift(s);else if(s!==c){let l=`Operands could not be broadcast together with shapes ${n} and ${t}.`;throw Error(l)}else e.unshift(s)}return e}function nM(n,t){let e=M(n,"a","equal"),r=M(t,"b","equal");[e,r]=Je(e,r),le(e.shape,r.shape);let o=c=>c.equal(e,r),s={a:e,b:r};return X.runKernelFunc(o,s,null,aN)}let po=j({equal_:nM});function rM(n,t,e){let r=M(t,"a","where"),o=M(e,"b","where"),s=M(n,"condition","where","bool"),c=le(r.shape,o.shape),l=rp(r,c),p=rp(o,c);s.rank===1&&_(s.shape[0]===r.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),s.rank!==1&&W(s.shape,p.shape,"Error in where: ");let f=(y,b)=>{let v=y.select(s,l,p);return b([s]),v},m={condition:s,t:l,e:p};return X.runKernelFunc(f,m,null,bx)}let Xn=j({where_:rM});function oM(n){let t=M(n,"x","zerosLike"),e={x:t};return X.runKernelFunc(r=>r.zerosLike(t),e,null,_x)}let re=j({zerosLike_:oM});function sM(n,t){let e=M(n,"a","div"),r=M(t,"b","div");[e,r]=Je(e,r);let o=Bt(e,r),s=re(o),c=po(r,s);return Xn(c,s,o)}let xw=j({divNoNan_:sM});function iM(n,t){let e=M(n,"t1","dot"),r=M(t,"t2","dot");_((e.rank===1||e.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${r.rank}.`);let o=e.rank===1?e.size:e.shape[1],s=r.rank===1?r.size:r.shape[0];if(_(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),e.rank===1&&r.rank===1){let c=Q(e,[1,-1]),l=Q(r,[-1,1]),p=ge(c,l);return Q(p,[])}else if(e.rank===1&&r.rank===2){let c=Q(e,[1,-1]),l=Q(r,[r.shape[0],r.shape[1]]),p=ge(c,l);return Q(p,[p.size])}else if(e.rank===2&&r.rank===1){let c=Q(r,[-1,1]),l=ge(e,c);return Q(l,[l.size])}else{let c=Q(r,[r.shape[0],r.shape[1]]),l=ge(e,c);return l}}let C_=j({dot_:iM});function aM(n){let t=M(n,"x","elu"),e=(o,s)=>{let c=o.elu(t);return s([c]),c},r={x:t};return X.runKernelFunc(e,r,null,hu)}let _c=j({elu_:aM});function cM(n){let t=M(n,"x","erf");_(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=$t(t,"float32"));let e={x:t};return X.runKernelFunc((r,o)=>{let s=r.erf(t);return o([t]),s},e,null,fu)}let ww=j({erf_:cM});function lM(n){let t=M(n,"x","exp"),e={x:t};return X.runKernelFunc((r,o)=>{let s=r.exp(t);return o([s]),s},e,null,du)}let Ar=j({exp_:lM});function uM(n,t=0){let e=null,r=M(n,"x","expandDims",e);_(t<=r.rank,()=>"Axis must be <= rank of the tensor");let o=r.shape.slice();return t<0&&(_(-(r.rank+1)<=t,()=>`Axis must be in the interval [${-(r.rank+1)}, ${r.rank}]`),t=r.rank+t+1),o.splice(t,0,1),Q(r,o)}let cr=j({expandDims_:uM});function pM(n){let t=M(n,"x","expm1"),e={x:t};return X.runKernelFunc((r,o)=>{let s=r.expm1(t);return o([t]),s},e,null,mu)}let vw=j({expm1_:pM});function hM(n,t){let e=null,r=M(n,"x","tile",e);_(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of reps ${t}.`);let o=(p,f)=>{let m=p.tile(r,t);return f([r]),m},s=[r],c={x:r},l={reps:t};return X.runKernelFunc(o,c,null,Tx,l,s)}let ii=j({tile_:hM});function fM(n,t,e,r="float32"){t==null&&(t=n);let o=Se([n,t],r),s=n<=t?n:t;for(let l=0;l<s;++l)o.set(1,l,l);let c=Q(o.toTensor(),[n,t]);if(e==null)return c;if(e.length===1)return ii(cr(c,0),[e[0],1,1]);if(e.length===2)return ii(cr(cr(c,0),0),[e[0],e[1],1,1]);if(e.length===3)return ii(cr(cr(cr(c,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}let hd=j({eye_:fM});function Cc(n,t,e){let r={shape:n,value:t,dtype:e};return X.runKernelFunc(o=>o.fill(n,t,e),{},null,Zb,r)}function dM(n){let t=M(n,"x","floor"),e={x:t};return X.runKernelFunc(r=>r.floor(t),e,null,gu)}let Sc=j({floor_:dM});let Tw=30;function sp(n){return n<=Tw?n:rf(n,Math.floor(Math.sqrt(n)))}function mM(n,t){let e=!1,r;for(n<=Tw?(r=n,e=!0):r=rf(n,Math.floor(Math.sqrt(n)));!e;)r>t||r===n?e=!0:r=rf(n,r+1);return r}function gM(n,t,e){let r=[],o=n.length;for(let s=0;s<o;s++)s!==t?r.push(n[s]):r.push(e);return r}function S_(n,t,e){let r=n.shape[e],o=[],s=1,c=1;for(let l=0;l<e;l++)o.push(n.shape[l]),s*=n.shape[l];for(let l=0;l<t.rank;l++)o.push(t.shape[l]);for(let l=e+1;l<n.rank;l++)o.push(n.shape[l]),c*=n.shape[l];return{batchSize:s,sliceSize:c,dimSize:r,outputShape:o}}var yM=Object.freeze({__proto__:null,segOpComputeOptimalWindowSize:mM,computeOutShape:gM,collectGatherOpShapeInfo:S_});function bM(n,t,e=0){let r=M(n,"x","gather"),o=M(t,"indices","gather","int32"),s={x:r,indices:o},c={axis:e},l=(p,f)=>{let m=Vt(e,r.shape)[0],y=S_(r,o,m),b=p.gather(r,Q(o,[o.size]),m);return f([r,o]),Q(b,y.outputShape)};return X.runKernelFunc(l,s,null,tx,c)}let $c=j({gather_:bM});function xM(n,t){let e=M(n,"a","greater"),r=M(t,"b","greater");[e,r]=Je(e,r),le(e.shape,r.shape);let o=c=>c.greater(e,r),s={a:e,b:r};return X.runKernelFunc(o,s,null,lN)}let Fr=j({greater_:xM});function wM(n,t){let e=M(n,"a","greaterEqual"),r=M(t,"b","greaterEqual");[e,r]=Je(e,r),le(e.shape,r.shape);let o=(c,l)=>{let p=c.greaterEqual(e,r);return l([e,r]),p},s={a:e,b:r};return X.runKernelFunc(o,s,null,ex)}let ds=j({greaterEqual_:wM});function vM(n){let t=M(n,"input","imag"),e=o=>o.imag(t),r={input:t};return X.runKernelFunc(e,r,null,wf)}let ip=j({imag_:vM});function TM(n){let t=M(n,"x","isFinite"),e={x:t};return X.runKernelFunc(r=>r.isFinite(t),e,null,xu)}let $_=j({isFinite_:TM});function kM(n){let t=M(n,"x","isInf"),e={x:t};return X.runKernelFunc(r=>r.isInf(t),e,null,wu)}let I_=j({isInf_:kM});function NM(n){let t=M(n,"x","isNaN"),e={x:t};return X.runKernelFunc(r=>r.isNaN(t),e,null,vu)}let E_=j({isNaN_:NM});function _M(n,t){let e=M(n,"a","maximum"),r=M(t,"b","maximum");[e,r]=Je(e,r),e.dtype==="bool"&&(e=$t(e,"int32"),r=$t(r,"int32")),le(e.shape,r.shape);let o=(c,l)=>{let p=c.maximum(e,r);return l([e,r]),p},s={a:e,b:r};return X.runKernelFunc(o,s,null,ox)}let Xr=j({maximum_:_M});function Et(n,t){if((gn(n)&&t!=="string"||Array.isArray(n))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&gn(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");let e=[],r=[];return ti(n,e,r,t)}function CM(n,t=.2){let e=M(n,"x","leakyRelu");return Xr(nt(Et(t),e),e)}let fd=j({leakyRelu_:CM});function SM(n,t){let e=M(n,"a","less"),r=M(t,"b","less");[e,r]=Je(e,r),le(e.shape,r.shape);let o=c=>c.less(e,r),s={a:e,b:r};return X.runKernelFunc(o,s,null,uN)}let ap=j({less_:SM});function $M(n,t){let e=M(n,"a","lessEqual"),r=M(t,"b","lessEqual");[e,r]=Je(e,r),le(e.shape,r.shape);let o=(c,l)=>{let p=c.lessEqual(e,r);return l([e,r]),p},s={a:e,b:r};return X.runKernelFunc(o,s,null,pN)}let ai=j({lessEqual_:$M});function D_(n,t,e){if(e<=0)throw new Error("The number of values should be positive.");let r={start:n,stop:t,num:e};return X.runKernelFunc(o=>o.linspace(n,t,e),{},null,hN,r)}function IM(n,t=5,e=1,r=1,o=.5){let s=M(n,"x","localResponseNormalization");_(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),_(gt(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let c=s,l=!1;s.rank===3&&(l=!0,c=Q(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let p=(b,v)=>{let T=b.localResponseNormalization4D(c,t,e,r,o);return v([c,T]),T},f={x:c},m={depthRadius:t,bias:e,alpha:r,beta:o},y=X.runKernelFunc(p,f,null,rx,m);return l?Q(y,[y.shape[1],y.shape[2],y.shape[3]]):y}let kw=j({localResponseNormalization_:IM});function EM(n){let t=M(n,"x","log"),e={x:t};return X.runKernelFunc((r,o)=>{let s=r.log(t);return o([t]),s},e,null,Tu)}let wr=j({log_:EM});function DM(n){let t=M(n,"x","log1p"),e={x:t};return X.runKernelFunc((r,o)=>{let s=r.log1p(t);return o([t]),s},e,null,ku)}let dd=j({log1p_:DM});function AM(n){return _(Zs(n),()=>"The f passed in grad(f) must be a function"),(t,e)=>{let r=M(t,"x","tf.grad",null),o=e!=null?M(e,"dy","tf.grad"):null;return X.tidy(()=>{let{value:s,grads:c}=X.gradients(()=>n(r),[r],o);return o!=null&&W(s.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),md(c),c[0]})}}function FM(n){return _(Zs(n),()=>"The f passed in grads(f) must be a function"),(t,e)=>{_(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let r=Xu(t,"args","tf.grads",null),o=e!=null?M(e,"dy","tf.grads"):null;return X.tidy(()=>{let{value:s,grads:c}=X.gradients(()=>n(...r),r,o);return o!=null&&W(s.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),md(c),c})}}function RM(n){return _(Zs(n),()=>"The f passed in valueAndGrad(f) must be a function"),(t,e)=>{_(t instanceof ot,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),_(e==null||e instanceof ot,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:r,value:o}=X.gradients(()=>n(t),[t],e);return md(r),{grad:r[0],value:o}}}function PM(n){return _(Zs(n),()=>"The f passed in valueAndGrads(f) must be a function"),(t,e)=>{_(Array.isArray(t)&&t.every(o=>o instanceof ot),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),_(e==null||e instanceof ot,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let r=X.gradients(()=>n(...t),t,e);return e!=null&&W(r.value.shape,e.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),md(r.grads),r}}function Nw(n,t){_(Zs(n),()=>"The f passed in variableGrads(f) must be a function"),_(t==null||Array.isArray(t)&&t.every(f=>f instanceof Ku),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let e=t!=null;if(!e){t=[];for(let f in X.registeredVariables)t.push(X.registeredVariables[f])}let r=e?t.filter(f=>!f.trainable):null,o=t.length;t=t.filter(f=>f.trainable),_(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let s=!0,{value:c,grads:l}=X.gradients(n,t,null,s);_(l.some(f=>f!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),_(c.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${c.rank} tensor`);let p={};return t.forEach((f,m)=>{l[m]!=null&&(p[f.name]=l[m])}),r!=null&&r.forEach(f=>p[f.name]=null),{value:c,grads:p}}function zo(n){return X.customGrad(n)}function md(n){let t=n.filter(e=>e==null).length;if(t>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function OM(n){let t=M(n,"x","neg"),e={x:t};return X.runKernelFunc(r=>r.neg(t),e,null,ux)}let tn=j({neg_:OM});function LM(n){let t=M(n,"x","softplus"),e={x:t};return X.runKernelFunc((r,o)=>{let s=r.softplus(t);return o([t]),s},e,null,Mu)}let Ic=j({softplus_:LM});function MM(n){let t=M(n,"x","logSigmoid"),e=zo(r=>{let o=tn(Ic(tn(r))),s=c=>{let l=nt(c,Bo(tn(r)));return l};return{value:o,gradFunc:s}});return e(t)}let A_=j({logSigmoid_:MM});function BM(n,t=null,e=!1){let r=M(n,"x","max"),o=(l,p)=>{let f=Vt(t,r.shape),m=f,y=ir(m,r.rank),b=r;y!=null&&(b=Kt(r,y),m=xr(m.length,b.rank));let v=l.max(b,m);y!=null&&b.dispose();let T=v;if(e){let N=Rn(T.shape,Vt(t,r.shape));T=Q(T,N),v.dispose()}return p([r,T]),T},s={x:r},c={reductionIndices:t,keepDims:e};return X.runKernelFunc(o,s,null,Nu,c)}let lr=j({max_:BM});function zM(n,t){let e=M(n,"a","sub"),r=M(t,"b","sub");[e,r]=Je(e,r);let o=(c,l)=>{let p=c.subtract(e,r);return l([e,r]),p},s={a:e,b:r};return X.runKernelFunc(o,s,null,dc)}let Dt=j({sub_:zM});function WM(n,t=null,e=!1){let r=M(n,"x","sum");r.dtype==="bool"&&(r=$t(r,"int32"));let o=(l,p)=>{p([r]);let f=Vt(t,r.shape),m=ir(f,r.rank),y=f,b=r;m!=null&&(b=Kt(r,m),y=xr(y.length,r.rank));let v=l.sum(b,y);if(e){let T=Rn(v.shape,f);v=Q(v,T)}return v},s={x:r},c={axis:t,keepDims:e};return X.runKernelFunc(o,s,null,xx,c)}let zt=j({sum_:WM});function VM(n,t=-1){let e=M(n,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);let r=(c,l)=>{let p=!0,f=lr(n,t,!0),m=Dt(n,f),y=Dt($t(m,"float32"),wr(zt(Ar(m),t,p)));return l([y]),y},o={logits:e},s={axis:t};return X.runKernelFunc(r,o,null,nx,s)}let gd=j({logSoftmax_:VM});function GM(n,t=null,e=!1){let r=M(n,"x","logSumExp"),o=Vt(t,r.shape),s=lr(r,o,!0),c=Dt(r,s),l=Ar(c),p=zt(l,o),f=wr(p),m=Tt(Q(s,f.shape),f);if(e){let y=Rn(m.shape,o);return Q(m,y)}return m}let _w=j({logSumExp_:GM});function UM(n,t){let e=M(n,"a","logicalAnd","bool"),r=M(t,"b","logicalAnd","bool");le(e.shape,r.shape);let o={a:e,b:r};return X.runKernelFunc(s=>s.logicalAnd(e,r),o,null,fN)}let Yr=j({logicalAnd_:UM});function qM(n){let t=M(n,"x","logicalNot","bool"),e={x:t};return X.runKernelFunc(r=>r.logicalNot(t),e,null,vf)}let cp=j({logicalNot_:qM});function HM(n,t){let e=M(n,"a","logicalOr","bool"),r=M(t,"b","logicalOr","bool");le(e.shape,r.shape);let o={a:e,b:r};return X.runKernelFunc(s=>s.logicalOr(e,r),o,null,dN)}let yd=j({logicalOr_:HM});function jM(n,t){let e=M(n,"a","logicalXor","bool"),r=M(t,"b","logicalXor","bool");return le(e.shape,r.shape),Yr(yd(n,t),cp(Yr(n,t)))}let F_=j({logicalXor_:jM});function KM(n,t,e,r,o){let s=M(n,"x","maxPool"),c=1,l=s,p=!1;s.rank===3&&(p=!0,l=Q(s,[1,s.shape[0],s.shape[1],s.shape[2]])),_(l.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.rank}.`),_(fn(e,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${c}'`),o!=null&&_(gt(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);let f=(v,T)=>{let N=Kn(l.shape,t,e,1,r,o),S;return N.filterWidth===1&&N.filterHeight===1&&lt(N.inShape,N.outShape)?S=l.clone():S=v.maxPool(l,N),T([l,S]),S},m={x:l},y={filterSize:t,strides:e,pad:r,dimRoundingMode:o},b=X.runKernelFunc(f,m,null,_u,y);return p?Q(b,[b.shape[1],b.shape[2],b.shape[3]]):b}let lp=j({maxPool_:KM});function XM(n,t=[1,1,1],e,r,o,s="NDHWC",c){c==null?c=[1,1,1]:yn("dilations is deprecated, this field will be gone in v3.0.0.");let l=M(n,"x","maxPool3d"),p=l,f=!1;l.rank===4&&(f=!0,p=Q(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),_(p.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${p.rank}.`),_(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),_(fn(e,c),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${e} and dilations '${c}'`),o!=null&&_(gt(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);let m=(T,N)=>{c==null&&(c=[1,1,1]);let S=tp(p.shape,t,e,c,r,o,s),D=T.maxPool3d(p,S);return N([p,D]),D},y={x:p},b={filterSize:t,strides:e,pad:r,dimRoundingMode:o,dataFormat:s,dilations:c},v=X.runKernelFunc(m,y,null,sx,b);return f?Q(v,[v.shape[1],v.shape[2],v.shape[3],v.shape[4]]):v}let Cw=j({maxPool3d_:XM});function YM(n,t,e,r,o=!1){let s=M(n,"x","maxPoolWithArgmax"),c={x:s},l={filterSize:t,strides:e,pad:r,includeBatchInIndex:o},p=X.runKernel(kf,c,l);return{result:p[0],indexes:p[1]}}let R_=j({maxPoolWithArgmax_:YM});function xe(n,t="float32"){if(t==="complex64"){let r=xe(n,"float32"),o=xe(n,"float32");return us(r,o)}let e=ac(G(n),t);return X.makeTensor(e,n,t)}function ho(n,t="float32"){if(t==="complex64"){let r=ho(n,"float32"),o=xe(n,"float32");return us(r,o)}let e=Ob(G(n),t);return X.makeTensor(e,n,t)}function JM(n,t=null,e=!1){let r=M(n,"x","mean"),o=Vt(t,r.shape),s=Fn(r.shape,o),c=s[1],l=G(c),p={x:r},f={axis:t,keepDims:e},m=()=>{let b=Et(l),v=b.dtype===r.dtype?r:$t(r,b.dtype),T=Bt(v,b);return zt(T,t,e)},y=zo(b=>{let v=X.runKernelFunc(m,p,null,ix,f),T=N=>{let S=b.shape.slice();o.forEach(P=>{S[P]=1});let D=Q(N,S),I=Bt(nt(D,ho(b.shape,"float32")),l);return I};return{value:v,gradFunc:T}});return y(r)}let en=j({mean_:JM});function ZM(n,t=null,e=!1){let r=M(n,"x","min"),o=(l,p)=>{let f=Vt(t,r.shape),m=f,y=ir(m,r.rank),b=r;y!=null&&(b=Kt(r,y),m=xr(m.length,r.rank));let v=l.min(b,m);y!=null&&b.dispose();let T=v;if(e){let N=Rn(T.shape,f);T=Q(v,N),v.dispose()}return p([r,T]),T},s={x:r},c={axis:t,keepDims:e};return X.runKernelFunc(o,s,null,ax,c)}let Ec=j({min_:ZM});function QM(n,t){let e=M(n,"a","minimum"),r=M(t,"b","minimum");[e,r]=Je(e,r),e.dtype==="bool"&&(e=$t(e,"int32"),r=$t(r,"int32")),le(e.shape,r.shape);let o=(c,l)=>{let p=c.minimum(e,r);return l([e,r]),p},s={a:e,b:r};return X.runKernelFunc(o,s,null,cx)}let oa=j({minimum_:QM});function tB(n,t,e){_(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);let r=M(n,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");_(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);let o=e==="reflect"?1:0;for(let l=0;l<r.rank;l++)_(t[l].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),_(t[l][0]>=0&&t[l][0]<=r.shape[l]-o&&t[l][1]>=0&&t[l][1]<=r.shape[l]-o,()=>`Padding in dimension ${l} cannot be greater than or equal to ${r.shape[l]-o} or less than 0 for input of shape ${r.shape}`);let s={paddings:t,mode:e},c={x:r};return X.runKernel(Cu,c,s)}let Sw=j({mirrorPad_:tB});function eB(n,t){let e=M(n,"a","mod"),r=M(t,"b","mod");[e,r]=Je(e,r);let o=(c,l)=>{let p=c.mod(e,r);return l([e,r]),p},s={a:e,b:r};return X.runKernelFunc(o,s,null,lx)}let bd=j({mod_:eB});function nB(n){let t=M(n,"x","square"),e={},r=[t],o=[];return X.runKernelFunc((s,c)=>(c([t]),s.square(t)),{x:t},null,"Square",e,r,o)}let De=j({square_:nB});function rB(n,t=null,e=!1){n=M(n,"x","moments");let r=Vt(t,n.shape),o=en(n,r,e),s=o.shape;e||(s=Rn(o.shape,r));let c=De(Dt($t(n,"float32"),Q(o,s))),l=en(c,r,e);return{mean:o,variance:l}}let xd=j({moments_:rB});function oB(n,t,e,r){let o=M(t,"data","multiRNNCell"),s=Xu(e,"c","multiRNNCell"),c=Xu(r,"h","multiRNNCell"),l=o,p=[];for(let y=0;y<n.length;y++){let b=n[y](l,s[y],c[y]);p.push(b[0]),p.push(b[1]),l=b[1]}let f=[],m=[];for(let y=0;y<p.length;y+=2)f.push(p[y]),m.push(p[y+1]);return[f,m]}let sB=j({multiRNNCell_:oB});function iB(n,t,e,r=!1){let o=M(n,"logits","multinomial"),s=o.size,c=o.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(c>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${c}`);e=e||Math.random();let l=c===1?Q(o,[1,-1]):o,p=X.runKernelFunc(f=>f.multinomial(l,r,t,e),{logits2D:l});return c===1?Q(p,[p.size]):p}let P_=j({multinomial_:iB});function aB(n,t){let e=M(n,"a","notEqual"),r=M(t,"b","notEqual");[e,r]=Je(e,r),le(e.shape,r.shape);let o=c=>c.notEqual(e,r),s={a:e,b:r};return X.runKernelFunc(o,s,null,Su)}let ci=j({notEqual_:aB});function cB(n){let t=M(n,"input","real"),e=o=>o.real(t),r={input:t};return X.runKernelFunc(e,r,null,$f)}let Dc=j({real_:cB});function lB(n){let t=M(n,"x","onesLike"),e=(o,s)=>{if(t.dtype==="complex64"){let c=qn(Dc(t)),l=re(ip(t));return us(c,l)}return o.onesLike(t)},r={x:t};return X.runKernelFunc(e,r,null,hx)}let qn=j({onesLike_:lB});function uB(n,t){let e=M(n,"v1","outerProduct"),r=M(t,"v2","outerProduct");_(e.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${r.rank}.`);let o=Q(e,[-1,1]),s=Q(r,[1,-1]);return ge(o,s)}let pB=j({outerProduct_:uB});function hB(n,t,e=0){let r=M(n,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let o=(l,p)=>(p([r]),l.pad(r,t,e)),s={paddings:t,constantValue:e},c={x:r};return X.runKernelFunc(o,c,null,Cf,s)}let Wo=j({pad_:hB});function fB(n,t,e=0){return _(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Wo(n,[t],e)}let dB=j({pad1d_:fB});function mB(n,t,e=0){return _(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Wo(n,t,e)}let gB=j({pad2d_:mB});function yB(n,t,e=0){return _(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Wo(n,t,e)}let bB=j({pad3d_:yB});function xB(n,t,e=0){return _(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Wo(n,t,e)}let wB=j({pad4d_:xB});function vB(n,t,e){let r=M(n,"x","spaceToBatchND");_(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),_(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),_(r.shape.reduce((l,p,f)=>f>0&&f<=t.length?l&&(p+e[f-1][0]+e[f-1][1])%t[f-1]===0:l,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);let o=l=>l.spaceToBatchND(r,t,e),s={x:r},c={blockShape:t,paddings:e};return X.runKernelFunc(o,s,null,Ef,c)}let up=j({spaceToBatchND_:vB});function TB(n,t,e,r,o,s){o==null&&(o=[1,1]),s==null&&(s=1),r===0&&(r="valid");let c=M(n,"x","maxPool"),l=c,p=!1;c.rank===3&&(p=!0,l=Q(c,[1,c.shape[0],c.shape[1],c.shape[2]])),_(fn(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);let f=Kn(l.shape,t,s,o,r),m=[f.dilationHeight,f.dilationWidth],y;r==="same"?y=NB([f.filterHeight,f.filterWidth],m):y=[[0,0],[0,0]];let b=m[0]===1&&m[1]===1,[v,T]=kB([f.inHeight,f.inWidth],m,y),N=b?r:"valid",S=b?l:up(l,m,v),D=e==="avg"?()=>ep(S,t,s,N):()=>lp(S,t,s,N),I=D(),P=b?I:np(I,m,T);return p?Q(P,[P.shape[1],P.shape[2],P.shape[3]]):P}function kB(n,t,e){let r=e.map(m=>m[0]),o=e.map(m=>m[1]),s=n.concat(r,o),c=t.map((m,y)=>(m-s[y]%m)%m),l=o.map((m,y)=>m+c[y]),p=t.map((m,y)=>[r[y],l[y]]),f=t.map((m,y)=>[0,c[y]]);return[p,f]}function NB(n,t){let e=n.map((c,l)=>c+(c-1)*(t[l]-1)),r=e.map(c=>c-1),o=r.map(c=>Math.floor(c/2)),s=r.map((c,l)=>c-o[l]);return r.map((c,l)=>[o[l],s[l]])}let O_=j({pool_:TB});function _B(n,t){let e=M(n,"base","pow"),r=M(t,"exp","pow");[e,r]=Je(e,r);let o={a:e,b:r},s=(c,l)=>{let p=c.pow(e,r);return l([e,r,p]),p};return X.runKernelFunc(s,o,null,dx)}let fo=j({pow_:_B});function CB(n,t){let e=M(n,"x","prelu"),r=M(t,"alpha","prelu"),o=(c,l)=>{let p=c.prelu(e,r);return l([e,r]),p},s={x:e,alpha:r};return X.runKernelFunc(o,s,null,Sf)}let pp=j({prelu_:CB});function SB(n,t=null,e=!1){let r=M(n,"x","prod");r.dtype==="bool"&&(r=$t(r,"int32"));let o=l=>{let p=Vt(t,r.shape),f=ir(p,r.rank),m=p,y=r;f!=null&&(y=Kt(r,f),m=xr(m.length,r.rank));let b=l.prod(y,m);if(e){let v=Rn(b.shape,p);b=Q(b,v)}return b},s={x:r},c={axis:t,keepDims:e};return X.runKernelFunc(o,s,null,yN,c)}let wd=j({prod_:SB});function $B(n,t,e){let r=G(n),o=null;if(e==null||e==="float32")o=new Float32Array(r);else if(e==="int32")o=new Int32Array(r);else if(e==="bool")o=new Uint8Array(r);else throw new Error(`Unknown data type ${e}`);for(let s=0;s<r;s++)o[s]=t();return X.makeTensor(o,n,e)}let IB=j({rand_:$B});var Ac=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};function got(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function sa(n,t){return t={exports:{}},n(t,t.exports),t.exports}function yot(n){return n&&n.default||n}function bot(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}var EB=sa(function(n){(function(t,e,r){function o(p){var f=this,m=l();f.next=function(){var y=2091639*f.s0+f.c*23283064365386963e-26;return f.s0=f.s1,f.s1=f.s2,f.s2=y-(f.c=y|0)},f.c=1,f.s0=m(" "),f.s1=m(" "),f.s2=m(" "),f.s0-=m(p),f.s0<0&&(f.s0+=1),f.s1-=m(p),f.s1<0&&(f.s1+=1),f.s2-=m(p),f.s2<0&&(f.s2+=1),m=null}function s(p,f){return f.c=p.c,f.s0=p.s0,f.s1=p.s1,f.s2=p.s2,f}function c(p,f){var m=new o(p),y=f&&f.state,b=m.next;return b.int32=function(){return m.next()*4294967296|0},b.double=function(){return b()+(b()*2097152|0)*11102230246251565e-32},b.quick=b,y&&(typeof y=="object"&&s(y,m),b.state=function(){return s(m,{})}),b}function l(){var p=4022871197,f=function(m){m=m.toString();for(var y=0;y<m.length;y++){p+=m.charCodeAt(y);var b=.02519603282416938*p;p=b>>>0,b-=p,b*=p,p=b>>>0,b-=p,p+=b*4294967296}return(p>>>0)*23283064365386963e-26};return f}e&&e.exports?e.exports=c:r&&r.amd?r(function(){return c}):this.alea=c})(Ac,n,!1)}),DB=sa(function(n){(function(t,e,r){function o(l){var p=this,f="";p.x=0,p.y=0,p.z=0,p.w=0,p.next=function(){var y=p.x^p.x<<11;return p.x=p.y,p.y=p.z,p.z=p.w,p.w^=p.w>>>19^y^y>>>8},l===(l|0)?p.x=l:f+=l;for(var m=0;m<f.length+64;m++)p.x^=f.charCodeAt(m)|0,p.next()}function s(l,p){return p.x=l.x,p.y=l.y,p.z=l.z,p.w=l.w,p}function c(l,p){var f=new o(l),m=p&&p.state,y=function(){return(f.next()>>>0)/4294967296};return y.double=function(){do var b=f.next()>>>11,v=(f.next()>>>0)/4294967296,T=(b+v)/(1<<21);while(T===0);return T},y.int32=f.next,y.quick=y,m&&(typeof m=="object"&&s(m,f),y.state=function(){return s(f,{})}),y}e&&e.exports?e.exports=c:r&&r.amd?r(function(){return c}):this.xor128=c})(Ac,n,!1)}),AB=sa(function(n){(function(t,e,r){function o(l){var p=this,f="";p.next=function(){var y=p.x^p.x>>>2;return p.x=p.y,p.y=p.z,p.z=p.w,p.w=p.v,(p.d=p.d+362437|0)+(p.v=p.v^p.v<<4^(y^y<<1))|0},p.x=0,p.y=0,p.z=0,p.w=0,p.v=0,l===(l|0)?p.x=l:f+=l;for(var m=0;m<f.length+64;m++)p.x^=f.charCodeAt(m)|0,m==f.length&&(p.d=p.x<<10^p.x>>>4),p.next()}function s(l,p){return p.x=l.x,p.y=l.y,p.z=l.z,p.w=l.w,p.v=l.v,p.d=l.d,p}function c(l,p){var f=new o(l),m=p&&p.state,y=function(){return(f.next()>>>0)/4294967296};return y.double=function(){do var b=f.next()>>>11,v=(f.next()>>>0)/4294967296,T=(b+v)/(1<<21);while(T===0);return T},y.int32=f.next,y.quick=y,m&&(typeof m=="object"&&s(m,f),y.state=function(){return s(f,{})}),y}e&&e.exports?e.exports=c:r&&r.amd?r(function(){return c}):this.xorwow=c})(Ac,n,!1)}),FB=sa(function(n){(function(t,e,r){function o(l){var p=this;p.next=function(){var m=p.x,y=p.i,b,v,T;return b=m[y],b^=b>>>7,v=b^b<<24,b=m[y+1&7],v^=b^b>>>10,b=m[y+3&7],v^=b^b>>>3,b=m[y+4&7],v^=b^b<<7,b=m[y+7&7],b=b^b<<13,v^=b^b<<9,m[y]=v,p.i=y+1&7,v};function f(m,y){var b,v,T=[];if(y===(y|0))v=T[0]=y;else for(y=""+y,b=0;b<y.length;++b)T[b&7]=T[b&7]<<15^y.charCodeAt(b)+T[b+1&7]<<13;for(;T.length<8;)T.push(0);for(b=0;b<8&&T[b]===0;++b);for(b==8?v=T[7]=-1:v=T[b],m.x=T,m.i=0,b=256;b>0;--b)m.next()}f(p,l)}function s(l,p){return p.x=l.x.slice(),p.i=l.i,p}function c(l,p){l==null&&(l=+new Date);var f=new o(l),m=p&&p.state,y=function(){return(f.next()>>>0)/4294967296};return y.double=function(){do var b=f.next()>>>11,v=(f.next()>>>0)/4294967296,T=(b+v)/(1<<21);while(T===0);return T},y.int32=f.next,y.quick=y,m&&(m.x&&s(m,f),y.state=function(){return s(f,{})}),y}e&&e.exports?e.exports=c:r&&r.amd?r(function(){return c}):this.xorshift7=c})(Ac,n,!1)}),RB=sa(function(n){(function(t,e,r){function o(l){var p=this;p.next=function(){var m=p.w,y=p.X,b=p.i,v,T;return p.w=m=m+1640531527|0,T=y[b+34&127],v=y[b=b+1&127],T^=T<<13,v^=v<<17,T^=T>>>15,v^=v>>>12,T=y[b]=T^v,p.i=b,T+(m^m>>>16)|0};function f(m,y){var b,v,T,N,S,D=[],I=128;for(y===(y|0)?(v=y,y=null):(y=y+"\0",v=0,I=Math.max(I,y.length)),T=0,N=-32;N<I;++N)y&&(v^=y.charCodeAt((N+32)%y.length)),N===0&&(S=v),v^=v<<10,v^=v>>>15,v^=v<<4,v^=v>>>13,N>=0&&(S=S+1640531527|0,b=D[N&127]^=v+S,T=b==0?T+1:0);for(T>=128&&(D[(y&&y.length||0)&127]=-1),T=127,N=4*128;N>0;--N)v=D[T+34&127],b=D[T=T+1&127],v^=v<<13,b^=b<<17,v^=v>>>15,b^=b>>>12,D[T]=v^b;m.w=S,m.X=D,m.i=T}f(p,l)}function s(l,p){return p.i=l.i,p.w=l.w,p.X=l.X.slice(),p}function c(l,p){l==null&&(l=+new Date);var f=new o(l),m=p&&p.state,y=function(){return(f.next()>>>0)/4294967296};return y.double=function(){do var b=f.next()>>>11,v=(f.next()>>>0)/4294967296,T=(b+v)/(1<<21);while(T===0);return T},y.int32=f.next,y.quick=y,m&&(m.X&&s(m,f),y.state=function(){return s(f,{})}),y}e&&e.exports?e.exports=c:r&&r.amd?r(function(){return c}):this.xor4096=c})(Ac,n,!1)}),PB=sa(function(n){(function(t,e,r){function o(l){var p=this,f="";p.next=function(){var y=p.b,b=p.c,v=p.d,T=p.a;return y=y<<25^y>>>7^b,b=b-v|0,v=v<<24^v>>>8^T,T=T-y|0,p.b=y=y<<20^y>>>12^b,p.c=b=b-v|0,p.d=v<<16^b>>>16^T,p.a=T-y|0},p.a=0,p.b=0,p.c=2654435769|0,p.d=1367130551,l===Math.floor(l)?(p.a=l/4294967296|0,p.b=l|0):f+=l;for(var m=0;m<f.length+20;m++)p.b^=f.charCodeAt(m)|0,p.next()}function s(l,p){return p.a=l.a,p.b=l.b,p.c=l.c,p.d=l.d,p}function c(l,p){var f=new o(l),m=p&&p.state,y=function(){return(f.next()>>>0)/4294967296};return y.double=function(){do var b=f.next()>>>11,v=(f.next()>>>0)/4294967296,T=(b+v)/(1<<21);while(T===0);return T},y.int32=f.next,y.quick=y,m&&(typeof m=="object"&&s(m,f),y.state=function(){return s(f,{})}),y}e&&e.exports?e.exports=c:r&&r.amd?r(function(){return c}):this.tychei=c})(Ac,n,!1)}),ia=sa(function(n){(function(t,e){var r=this,o=256,s=6,c=52,l="random",p=e.pow(o,s),f=e.pow(2,c),m=f*2,y=o-1,b;function v(E,L,B){var q=[];L=L==!0?{entropy:!0}:L||{};var H=D(S(L.entropy?[E,P(t)]:E==null?I():E,3),q),Z=new T(q),J=function(){for(var it=Z.g(s),pt=p,ht=0;it<f;)it=(it+ht)*o,pt*=o,ht=Z.g(1);for(;it>=m;)it/=2,pt/=2,ht>>>=1;return(it+ht)/pt};return J.int32=function(){return Z.g(4)|0},J.quick=function(){return Z.g(4)/4294967296},J.double=J,D(P(Z.S),t),(L.pass||B||function(it,pt,ht,dt){return dt&&(dt.S&&N(dt,Z),it.state=function(){return N(Z,{})}),ht?(e[l]=it,pt):it})(J,H,"global"in L?L.global:this==e,L.state)}e["seed"+l]=v;function T(E){var L,B=E.length,q=this,H=0,Z=q.i=q.j=0,J=q.S=[];for(B||(E=[B++]);H<o;)J[H]=H++;for(H=0;H<o;H++)J[H]=J[Z=y&Z+E[H%B]+(L=J[H])],J[Z]=L;(q.g=function(it){for(var pt,ht=0,dt=q.i,ft=q.j,ut=q.S;it--;)pt=ut[dt=y&dt+1],ht=ht*o+ut[y&(ut[dt]=ut[ft=y&ft+pt])+(ut[ft]=pt)];return q.i=dt,q.j=ft,ht})(o)}function N(E,L){return L.i=E.i,L.j=E.j,L.S=E.S.slice(),L}function S(E,L){var B=[],q=typeof E,H;if(L&&q=="object")for(H in E)try{B.push(S(E[H],L-1))}catch(Z){}return B.length?B:q=="string"?E:E+"\0"}function D(E,L){for(var B=E+"",q,H=0;H<B.length;)L[y&H]=y&(q^=L[y&H]*19)+B.charCodeAt(H++);return P(L)}function I(){try{var E;return b&&(E=b.randomBytes)?E=E(o):(E=new Uint8Array(o),(r.crypto||r.msCrypto).getRandomValues(E)),P(E)}catch(q){var L=r.navigator,B=L&&L.plugins;return[+new Date,r,B,r.screen,P(t)]}}function P(E){return String.fromCharCode.apply(0,E)}if(D(e.random(),t),n.exports){n.exports=v;try{b=require("crypto")}catch(E){}}})([],Math)});ia.alea=EB,ia.xor128=DB,ia.xorwow=AB,ia.xorshift7=FB,ia.xor4096=RB,ia.tychei=PB;var OB=ia,Fc=OB.alea;class $w{constructor(t,e,r,o,s){this.mean=t,this.stdDev=e,this.dtype=r,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let c=s||Math.random();this.random=Fc(c.toString())}nextValue(){if(!isNaN(this.nextVal)){let o=this.nextVal;return this.nextVal=NaN,o}let t,e,r=!1;for(;!r;){let o,s,c;do o=2*this.random()-1,s=2*this.random()-1,c=o*o+s*s;while(c>=1||c===0);let l=Math.sqrt(-2*Math.log(c)/c);t=this.mean+this.stdDev*o*l,e=this.mean+this.stdDev*s*l,(!this.truncated||this.isValidTruncated(t))&&(r=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class LB{constructor(t,e,r,o){this.alpha=t,this.beta=1/e,this.dtype=r;let s=o||Math.random();this.randu=Fc(s.toString()),this.randn=new $w(0,1,r,!1,this.randu()),t<1?this.d=t+2/3:this.d=t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,r,o,s,c;for(;;){do o=this.randn.nextValue(),c=1+this.c*o;while(c<=0);if(c*=c*c,t=o*o,e=1-.331*t*t,r=.5*t+this.d*(1-c+Math.log(c)),s=this.randu(),s<e||Math.log(s)<r)break}return c=1/this.beta*this.d*c,this.alpha<1&&(c*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(c)}convertValue(t){return this.dtype==="float32"?t:Math.round(t)}}class MB{constructor(t=0,e=1,r,o){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=r,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Fc(o)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}function xot(n){let t=n.length,e=WB(n),r=zB(n),o=t/6*(Math.pow(e,2)+.25*Math.pow(r-3,2)),s=5.991;if(o>s)throw new Error(`Invalid p-value for JB: ${o}`)}function wot(n,t,e,r){r==null&&(r=td());let o=Iw(n);Qx(o,t,r),Qx(BB(n,o),e,r)}function Iw(n){let t=0;for(let e=0;e<n.length;e++)t+=n[e];return t/n.length}function BB(n,t){let e=0;for(let r=0;r<n.length;r++){let o=n[r]-t;e+=o*o}return Math.sqrt(e/n.length)}function zB(n){let t=Iw(n),e=n.length,r=0,o=0;for(let s=0;s<e;s++){let c=n[s]-t;r+=Math.pow(c,2),o+=Math.pow(c,4)}return 1/e*o/Math.pow(1/e*r,2)}function WB(n){let t=Iw(n),e=n.length,r=0,o=0;for(let s=0;s<e;s++){let c=n[s]-t;r+=Math.pow(c,2),o+=Math.pow(c,3)}return 1/e*o/Math.pow(1/(e-1)*r,3/2)}function VB(n,t,e=1,r="float32",o){if(e==null&&(e=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);let s=new LB(t,e,r,o),c=Se(n,r);for(let l=0;l<c.values.length;l++)c.values[l]=s.nextValue();return c.toTensor()}let GB=j({randomGamma_:VB});function UB(n,t=0,e=1,r,o){if(r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);let s=new $w(t,e,r,!1,o),c=Se(n,r);for(let l=0;l<c.values.length;l++)c.values[l]=s.nextValue();return c.toTensor()}let Ew=j({randomNormal_:UB});function qB(n,t=0,e=1,r="float32",o){let s=Se(n,r),c=new MB(t,e,null,o);for(let l=0;l<s.values.length;l++)s.values[l]=c.nextValue();return s.toTensor()}let aa=j({randomUniform_:qB});function vr(n,t){et(n);let e=Lo(n,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");let r=null;return ti(n,r,e,t)}function hp(n,t,e=1,r="float32"){if(e===0)throw new Error("Cannot have a step of zero");let o=()=>{let c=n===t,l=n<t&&e<0,p=t<n&&e>1;if(c||l||p)return xe([0],r);let f=Math.abs(Math.ceil((t-n)/e)),m=ac(f,r);t<n&&e===1&&(e=-1),m[0]=n;for(let y=1;y<m.length;y++)m[y]=m[y-1]+e;return vr(m,r)},s={start:n,stop:t,step:e,dtype:r};return X.runKernelFunc(o,{},null,bN,s)}function HB(n){let t=M(n,"x","reciprocal"),e={x:t};return X.runKernelFunc((r,o)=>{let s=r.reciprocal(t);return o([t]),s},e,null,$u)}let Dw=j({reciprocal_:HB});function jB(n){let t=M(n,"x","relu"),e=(o,s)=>(s([t]),t.dtype==="bool"?$t(t,"int32"):o.relu(t)),r={x:t};return X.runKernelFunc(e,r,null,Iu)}let Vo=j({relu_:jB});function KB(n){let t=M(n,"x","relu6"),e=(o,s)=>(s([t]),t.dtype==="bool"?$t(t,"int32"):o.relu6(t)),r={x:t};return X.runKernelFunc(e,r,null,Du)}let Aw=j({relu6_:KB});function XB(n,t){let e=M(n,"x","reverse"),r=c=>{let l=Vt(t,e.shape);if(e.rank===0)return ni(e);let p=c.reverse(e,l);return Q(p,e.shape)},o={x:e},s={dims:t};return X.runKernelFunc(r,o,null,yx,s)}let Rr=j({reverse_:XB});function YB(n){let t=M(n,"x","reverse");return _(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Rr(t,0)}let JB=j({reverse1d_:YB});function ZB(n,t){let e=M(n,"x","reverse");return _(e.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),Rr(e,t)}let QB=j({reverse2d_:ZB});function t3(n,t){let e=M(n,"x","reverse");return _(e.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),Rr(e,t)}let e3=j({reverse3d_:t3});function n3(n,t){let e=M(n,"x","reverse");return _(e.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),Rr(e,t)}let r3=j({reverse4d_:n3});function o3(n){let t=M(n,"x","round"),e={x:t};return X.runKernelFunc(r=>r.round(t),e,null,Au)}let Fw=j({round_:o3});function s3(n){let t=M(n,"x","rsqrt"),e={x:t};return X.runKernelFunc((r,o)=>{let s=r.rsqrt(t);return o([t]),s},e,null,Fu)}let vd=j({rsqrt_:s3});function i3(n){let t=M(n,"x","selu"),e=(o,s)=>{let c=o.selu(t);return s([t]),c},r={x:t};return X.runKernelFunc(e,r,null,Ru)}let Td=j({selu_:i3});function a3(n,t,e,r,o,s=[1,1],c="NHWC"){let l=M(n,"x","separableConv2d"),p=M(t,"depthwiseFilter","separableConv2d"),f=M(e,"pointwiseFilter","separableConv2d"),m=l,y=!1;if(l.rank===3&&(y=!0,m=Q(l,[1,l.shape[0],l.shape[1],l.shape[2]])),c==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");_(m.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`),_(p.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${p.rank}.`),_(f.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${p.rank}.`),_(f.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`),_(f.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`);let b=p.shape[2],v=p.shape[3];_(f.shape[2]===b*v,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${b*v}, but got ${f.shape[2]}.`);let T=na(m,p,r,o,c,s),N=1,S=fs(T,f,N,"valid",c);return y?Q(S,[S.shape[1],S.shape[2],S.shape[3]]):S}let Rw=j({separableConv2d_:a3});async function c3(n,t){let e=M(n,"x","setdiff1d"),r=M(t,"y","setdiff1d");_(e.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${r.dtype}).`),_(e.rank===1,()=>`x should be 1D tensor, but got x (${e.shape}).`),_(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);let o=await e.data(),s=await r.data(),c=new Set(s),l=0;for(let m=0;m<o.length;m++)c.has(o[m])||l++;let p=new hn([l],e.dtype),f=new hn([l],"int32");for(let m=0,y=0;m<o.length;m++)c.has(o[m])||(p.values[y]=o[m],f.values[y]=m,y++);return[p.toTensor(),f.toTensor()]}let L_=c3;function l3(n){let t=M(n,"x","sign"),e={x:t};return X.runKernelFunc(r=>r.sign(t),e,null,Ou)}let Pw=j({sign_:l3});function u3(n){let t=M(n,"x","sin"),e={x:t};return X.runKernelFunc((r,o)=>{let s=r.sin(t);return o([t]),s},e,null,hc)}let kd=j({sin_:u3});function p3(n){let t=M(n,"x","sinh"),e={x:t};return X.runKernelFunc((r,o)=>{let s=r.sinh(t);return o([t]),s},e,null,Pu)}let Nd=j({sinh_:p3});function h3(n,t,e){let r=M(n,"x","slice1d");return _(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),ce(r,[t],[e])}let _d=j({slice1d_:h3});function f3(n,t,e){let r=M(n,"x","slice2d");return _(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),ce(r,t,e)}let Ow=j({slice2d_:f3});function d3(n,t,e){let r=M(n,"x","slice3d");return _(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),ce(r,t,e)}let Cd=j({slice3d_:d3});function m3(n,t,e){let r=M(n,"x","slice4d");return _(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),ce(r,t,e)}let fp=j({slice4d_:m3});function g3(n,t=-1){let e=M(n,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);let r={logits:e},o={dim:t};return X.runKernelFunc((s,c)=>{let l=s.softmax(e,t);return c([l]),l},r,null,vx,o)}let ca=j({softmax_:g3});function y3(n){_(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);let t={input:n};return X.runKernelFunc(e=>{let r=n.shape[n.shape.length-1],o=n.size/r,s=n.as2D(o,r),c=e.fft(s);return c.reshape(n.shape)},t,null,yf)}let dp=j({fft_:y3});function b3(n){_(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);let t={input:n};return X.runKernelFunc(e=>{let r=n.shape[n.shape.length-1],o=n.size/r,s=Q(n,[o,r]),c=e.ifft(s);return Q(c,n.shape)},t,null,xf)}let Rc=j({ifft_:b3});function x3(n){let t=n.shape[n.shape.length-1],e=n.size/t,r;if(t<=2){let o=Q(n,[e,t]);r=Rc(o)}else{let o=[e,2*(t-1)],s=Q(Dc(n),[e,t]),c=Q(ip(n),[e,t]),l=Rr(ce(s,[0,1],[e,t-2]),1),p=nt(Rr(ce(c,[0,1],[e,t-2]),1),Et(-1)),f=Qe([s,l],1),m=Qe([c,p],1),y=Q(us(f,m),[o[0],o[1]]);r=Rc(y)}if(r=Dc(r),n.rank===3&&n.shape[0]!==0){let o=r,s=n.shape[0];r=Q(r,[s,r.shape[0]/s,r.shape[1]]),o.dispose()}return r}let Sd=j({irfft_:x3});function M_(n,t,e=0){let r=[];if(typeof t=="number")_(n.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(n.shape[e]/t);else{let o=t.reduce((c,l)=>(l===-1&&(c+=1),c),0);_(o<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let c=t.reduce((l,p)=>p>0?l+p:l);t[s]=n.shape[e]-c}_(n.shape[e]===t.reduce((c,l)=>c+l),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function w3(n,t,e=0){let r=M(n,"x","split"),o=(l,p)=>{let f=Vt(e,r.shape)[0],m=M_(r,t,f);return l.split(r,m,f)},s={x:r},c={numOrSizeSplits:t,axis:e};return X.runKernelFunc(o,s,null,wx,c)}let Tr=j({split_:w3});function v3(n,t){_(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1],r=n.size/e,o;if(t!=null&&t<e){let T=n.shape.map(S=>0),N=n.shape.map(S=>S);N[n.shape.length-1]=t,o=ce(n,T,N),e=t}else if(t!=null&&t>e){let T=n.shape.map(N=>N);T[n.shape.length-1]=t-e,o=Qe([n,xe(T)],n.shape.length-1),e=t}else o=n;let s=re(o),c=Q(us(o,s),[r,e]),l=dp(c),p=Math.floor(e/2)+1,f=Dc(l),m=ip(l),y=Tr(f,[p,e-p],f.shape.length-1),b=Tr(m,[p,e-p],m.shape.length-1),v=o.shape.slice();return v[o.shape.length-1]=p,Q(us(y[0],b[0]),v)}let mp=j({rfft_:v3});function T3(n){let t=M(n,"x","sqrt"),e={x:t};return X.runKernelFunc((r,o)=>{let s=r.sqrt(t);return o([t]),s},e,null,Bu)}let Pn=j({sqrt_:T3});function k3(n,t){let e=M(n,"a","squaredDifference"),r=M(t,"b","squaredDifference");[e,r]=Je(e,r),le(e.shape,r.shape);let o=(l,p)=>{let f=l.squaredDifference(e,r);return p([e,r]),f},s={a:e,b:r},c={};return X.runKernelFunc(o,s,null,fc,c)}let gp=j({squaredDifference_:k3});function N3(n,t){let e=M(n,"x","squeeze");return Q(e,ln(e.shape,t).newShape)}let li=j({squeeze_:N3});function _3(n,t=0){let e=Xu(n,"tensors","stack");if(_(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length===1)return cr(e[0],t);let r=e[0].rank,o=e[0].shape,s=e[0].dtype;_(t<=r,()=>"Axis must be <= rank of the tensor"),e.forEach(l=>{W(o,l.shape,"All tensors passed to stack must have matching shapes"),_(s===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let c=e.map(l=>cr(l,t));return Qe(c,t)}let ur=j({stack_:_3});function C3(n,t=0){let e=M(n,"x","step"),r={x:e},o={alpha:t};return X.runKernelFunc(s=>s.step(e,t),r,null,Vu,o)}let Pc=j({step_:C3});function S3(n,t,e,r,o=0,s=0,c=0,l=0,p=0){let f=M(n,"x","stridedSlice"),m=v=>{r==null&&(r=new Array(t.length));let T=Jf(c);if(T.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(c!==0&&l!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(c!==0&&p!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let N=f.rank-t.length,S=Jf(l),D=f.shape.slice();S.forEach(J=>{t[J]=0,e[J]=1,D.splice(J,0,1)}),f=Q(f,D);let{begin:I,end:P,strides:E}=s_(f.shape,T,N,t,e,r,o,s,c);t=I,e=P,r=E;let L=Jf(p);L.forEach(J=>{e[J]=t[J]+1,r[J]=1});let B=Zf(t,e,r),q=B.filter((J,it)=>L.indexOf(it)===-1),H=r.every(J=>J===1);if(H)return Q(ce(f,t,B),q);let Z=v.stridedSlice(f,t,e,r);return Q(Z,q)},y={x:f},b={begin:t,end:e,strides:r,beginMask:o,endMask:s,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:p};return X.runKernelFunc(m,y,null,kN,b)}let Lw=j({stridedSlice_:S3});function $3(n){let t=M(n,"x","tan"),e={x:t};return X.runKernelFunc((r,o)=>{let s=r.tan(t);return o([t]),s},e,null,mc)}let Mw=j({tan_:$3});function ui(n,t,e){if(et(n),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let r=Lo(n,e);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ti(n,t,r,e)}function Oc(n,t,e){if(et(n),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let r=Lo(n,e);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ti(n,t,r,e)}function I3(n,t,e){if(et(n),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let r=Lo(n,e);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ti(n,t,r,e)}function E3(n,t,e){if(et(n),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let r=Lo(n,e);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,ti(n,t,r,e)}function D3(n,t=1,e=!0){let r=M(n,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let o=r.shape[r.shape.length-1];if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);let s={x:r},c={k:t,sorted:e},[l,p]=X.runKernelFunc(f=>f.topk(r,t,e),s,null,NN,c);return{values:l,indices:p}}let Bw=j({topk_:D3});function A3(n,t=0,e=1,r,o){if(r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new $w(t,e,r,!0,o),c=Se(n,r);for(let l=0;l<c.values.length;l++)c.values[l]=s.nextValue();return c.toTensor()}let yp=j({truncatedNormal_:A3});function F3(n,t=0){let e=M(n,"x","unique",null);_(e.rank>0,()=>"The input tensor must be at least 1D");let r={x:e},o={axis:t},[s,c]=X.runKernel(Af,r,o);return{values:s,indices:c}}let $d=j({unique_:F3});function R3(n,t,e){let r=M(n,"x","unsortedSegmentSum"),o=M(t,"segmentIds","unsortedSegmentSum","int32");_(gt(e),()=>"numSegments must be of dtype int");let s={x:r,segmentIds:o},c={numSegments:e},l=(p,f)=>{let m=p.unsortedSegmentSum(r,o,e);return f([o]),m};return X.runKernelFunc(l,s,null,Nx,c)}let zw=j({unsortedSegmentSum_:R3});function P3(n,t=0){let e=M(n,"x","unstack");_(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`),t<0&&(t+=e.shape.length);let r={value:e},o={axis:t},s=c=>c.unstack(e,t);return X.runKernelFunc(s,r,null,kx,o)}let mo=j({unstack_:P3});function B_(n,t=!0,e,r){return X.makeVariable(n,t,e,r)}function Id(n,t){let e=[];for(let s=0;s<t.length;s++)t[s]&&e.push(s);let r=Se(n,"int32"),o=Se([e.length,n.length],"int32");for(let s=0;s<e.length;s++){let c=r.indexToLoc(e[s]),l=s*n.length;o.values.set(c,l)}return o.toTensor()}async function O3(n){let t=M(n,"condition","whereAsync","bool"),e=await t.data(),r=Id(t.shape,e);return n!==t&&t.dispose(),r}let Ww=O3;async function L3(n,t,e){let r=M(n,"tensor","boolMask"),o=M(t,"mask","boolMask","bool"),s=e==null?0:e,c=o.rank,l=r.shape;_(c>0,()=>"mask cannot be scalar"),W(l.slice(s,s+c),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let p=1;for(let N=s;N<s+c;N++)p*=l[N];let f=l.slice(0,s).concat([p],l.slice(s+c)),m=Q(r,f),y=Q(o,[-1]),b=await Ww(y),v=li(b,[1]),T=$c(m,v,s);return n!==r&&r.dispose(),t!==o&&o.dispose(),v.dispose(),m.dispose(),y.dispose(),b.dispose(),T}let M3=L3;function B3(n,t){yn("strict variants of ops have been deprecated and will be removed in future");let e=M(n,"a","notEqualStrict"),r=M(t,"b","notEqualStrict");return W(e.shape,r.shape,"Error in notEqualStrict: "),ci(e,r)}function z3(n,t){yn("strict variants of ops have been deprecated and will be removed in future");let e=M(n,"a","lessStrict"),r=M(t,"b","lessStrict");return W(e.shape,r.shape,"Error in lessStrict: "),ap(e,r)}function W3(n,t){yn("strict variants of ops have been deprecated and will be removed in future");let e=M(n,"a","equalStrict"),r=M(t,"b","equalStrict");return W(e.shape,r.shape,"Error in equalStrict: "),po(e,r)}function V3(n,t){yn("strict variants of ops have been deprecated and will be removed in future");let e=M(n,"a","lessEqualStrict"),r=M(t,"b","lessEqualStrict");return W(e.shape,r.shape,"Error in lessEqualStrict: "),ai(e,r)}function G3(n,t){yn("strict variants of ops have been deprecated and will be removed in future");let e=M(n,"a","greaterStrict"),r=M(t,"b","greaterStrict");return W(e.shape,r.shape,"Error in greaterStrict: "),Fr(e,r)}function U3(n,t){yn("strict variants of ops have been deprecated and will be removed in future");let e=M(n,"a","greaterEqualStrict"),r=M(t,"b","greaterEqualStrict");return W(e.shape,r.shape,"Error in greaterEqualStrict: "),ds(e,r)}let z_=j({equalStrict_:W3}),W_=j({greaterEqualStrict_:U3}),V_=j({greaterStrict_:G3}),G_=j({lessEqualStrict_:V3}),U_=j({lessStrict_:z3}),q_=j({notEqualStrict_:B3});function q3(n,t){yn("strict variants of ops have been deprecated and will be removed in future");let e=M(n,"a","addStrict"),r=M(t,"b","addStrict");return W(e.shape,r.shape,"Error in addStrict: "),Tt(e,r)}function H3(n,t){yn("strict variants of ops have been deprecated and will be removed in future");let e=M(n,"a","subStrict"),r=M(t,"b","subStrict");return W(e.shape,r.shape,"Error in subStrict: "),Dt(e,r)}function j3(n,t){return yn("strict variants of ops have been deprecated and will be removed in future"),W(n.shape,t.shape,"Error in powStrict: "),fo(n,t)}function K3(n,t){yn("strict variants of ops have been deprecated and will be removed in future");let e=M(n,"a","mul"),r=M(t,"b","mul");return W(e.shape,r.shape,"Error in multiplyStrict: "),nt(e,r)}function X3(n,t){yn("strict variants of ops have been deprecated and will be removed in future");let e=M(n,"a","div"),r=M(t,"b","div");return W(e.shape,r.shape,"Error in divideStrict: "),Bt(e,r)}function Y3(n,t){yn("strict variants of ops have been deprecated and will be removed in future");let e=M(n,"a","modStrict"),r=M(t,"b","modStrict");return W(e.shape,r.shape,"Error in modStrict: "),bd(e,r)}function J3(n,t){yn("strict variants of ops have been deprecated and will be removed in future");let e=M(n,"a","minimumStrict"),r=M(t,"b","minimumStrict");return W(e.shape,r.shape,"Error in minimumStrict: "),oa(e,r)}function Z3(n,t){yn("strict variants of ops have been deprecated and will be removed in future");let e=M(n,"a","maximumStrict"),r=M(t,"b","maximumStrict");return W(e.shape,r.shape,"Error in maximumStrict: "),Xr(e,r)}function Q3(n,t){yn("strict variants of ops have been deprecated and will be removed in future");let e=M(n,"a","squaredDifferenceStrict"),r=M(t,"b","squaredDifferenceStrict");return W(e.shape,r.shape,"Error in squaredDifferenceStrict: "),gp(e,r)}let H_=j({addStrict_:q3}),j_=j({divStrict_:X3}),K_=j({maximumStrict_:Z3}),X_=j({minimumStrict_:J3}),Y_=j({modStrict_:Y3}),J_=j({mulStrict_:K3}),Z_=j({powStrict_:j3}),Q_=j({squaredDifferenceStrict_:Q3}),tC=j({subStrict_:H3});function tz(n,t="euclidean",e=null,r=!1){n=M(n,"x","norm");let o=eC(n,t,e),s=o.shape;if(r){let c=Vt(e,n.shape);s=Rn(o.shape,c)}return Q(o,s)}function eC(n,t,e=null){if(n.rank===0)return bn(n);if(n.rank!==1&&e===null)return eC(Q(n,[-1]),t,e);if(n.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return zt(bn(n),e);if(t===Infinity)return lr(bn(n),e);if(t===-Infinity)return Ec(bn(n),e);if(t==="euclidean"||t===2)return Pn(zt(fo(bn(n),Et(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return lr(zt(bn(n),e[0]),e[1]-1);if(t===Infinity)return lr(zt(bn(n),e[1]),e[0]);if(t===-Infinity)return Ec(zt(bn(n),e[1]),e[0]);if(t==="fro"||t==="euclidean")return Pn(zt(De(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}let Ed=j({norm_:tz});function ez(n,t,e,r,o=!0){let s=M(n,"v","movingAverage"),c=M(t,"x","movingAverage"),l=M(e,"decay","movingAverage");DN(s,c),_(lt(s.shape,c.shape),()=>"Shape mismatch in v and x");let p=Et(1),f=Dt(p,l),m=nt(Dt(c,s),f);if(o){_(r!=null,()=>"When using zeroDebias: true, step is required.");let y=M(r,"step","movingAverage");m=Bt(m,Dt(p,fo(l,y)))}return Tt(s,m)}let nz=j({movingAverage_:ez});function rz(n,t,e){let r=M(n,"indices","scatterND","int32"),o=M(t,"updates","scatterND");Kx(o,r,e);let s=p=>p.scatterND(r,o,e),c={indices:r,updates:o},l={shape:e};return X.runKernelFunc(s,c,null,vN,l)}let nC=j({scatterND_:rz});function oz(n,t,e,r){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);let o=n.rank>0?n.shape[0]:1,s=n.rank>1?n.shape[1]:1;if(e.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${e.length}, should be: ${s}.`);let c=t.size;if(!(t.rank===0||t.rank===1&&c===o))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${o}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function sz(n,t,e,r=0){let o=M(n,"sparseIndices","sparseToDense","int32"),s=M(t,"sparseValues","sparseToDense"),c=M(r,"defaultValue","sparseToDense",s.dtype);oz(o,s,e,c);let l={sparseIndices:o,sparseValues:s,defaultValue:c},p={outputShape:e};return X.runKernelFunc(f=>f.sparseToDense(o,s,e,c),l,null,TN,p)}let Vw=j({sparseToDense_:sz});function iz(n,t){let e=M(t,"indices","gatherND","int32"),r=M(n,"x","gatherND"),o=c=>c.gatherND(r,e),s={params:r,indices:e};return X.runKernelFunc(o,s,null,cN)}let rC=j({gatherND_:iz});function az(n,t){if(t==null)return n.shape.slice();if(lt(n.shape,t))return t;if(n.shape.length===t.length){let e=[];for(let r=0;r<n.shape.length;r++)t[r]==null&&n.shape[r]!=null?e.push(n.shape[r]):e.push(t[r]);return e}return t}function cz(n,t,e,r){let o=M(n,"x","dropout");if(_(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),_(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return n instanceof ot?o.clone():o;let s=az(o,e),c=1-t,l=Bt(Sc(Tt(aa(s,0,1,"float32",r),c)),c);return nt(o,l)}let oC=j({dropout_:cz});function sC(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function Gw(n,t,e){let r=1-n%2,o=new Float32Array(n);for(let s=0;s<n;++s){let c=2*Math.PI*s/(n+r-1);o[s]=t-e*Math.cos(c)}return vr(o,"float32")}async function lz(n,t,e=1){let r=M(n,"predictions","inTopK"),o=M(t,"targets","inTopK");_(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),_(r.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${o.rank}`),W(r.shape.slice(0,r.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];_(e>0&&e<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${e}`);let c=await r.data(),l=await o.data(),[p,f]=[c.length/s,s],m=Ce("bool",p);for(let y=0;y<p;y++){let b=y*f,v=c.subarray(b,b+f),T=[];for(let N=0;N<v.length;N++)T.push({value:v[N],index:N});T.sort((N,S)=>S.value-N.value),m[y]=0;for(let N=0;N<e;N++)if(T[N].index===l[y]){m[y]=1;break}}return n!==r&&r.dispose(),t!==o&&o.dispose(),un(m,o.shape,"bool")}let uz=lz;function pz(n,t,e,r,o,s="NHWC",c){let l=n;n.rank===3&&(l=Q(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let p=t;p.rank===3&&(p=Q(t,[1,t.shape[0],t.shape[1],t.shape[2]])),_(l.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${l.shape}.`),_(p.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${p.shape}.`),_(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);let f=s==="NHWC"?l.shape[3]:l.shape[1],m=s==="NHWC"?p.shape[3]:p.shape[1];_(f===e[2],()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${e[2]}.`),_(m===e[3],()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${e[3]}).`),c!=null&&_(gt(o),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${c} but got pad ${o}.`);let y=T=>{let N=1,S=si(s),D=Un(l.shape,e,r,N,o,c,!1,S);return T.conv2dDerFilter(l,p,D)},b={x:l,dy:p},v={strides:r,pad:o,dataFormat:s,dimRoundingMode:c,filterShape:e};return X.runKernelFunc(y,b,null,Hb,v)}let Uw=j({conv2DBackpropFilter_:pz});function Dd(n,t,e){if(e==null||e==="linear")return n;if(e==="relu")return nt(n,Pc(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function Ad(n,t){let e=t,r=xn(n.shape,t.shape);return r.length>0&&(e=zt(e,r)),Q(e,n.shape)}function Fd(n,t,e){if(t==="linear")return n;if(t==="relu")return Vo(n);if(t==="elu")return _c(n);if(t==="relu6")return Aw(n);if(t==="prelu")return pp(n,e);throw new Error(`Unknown fused activation ${t}.`)}let Rd=(n,t)=>{let e=n>0;return!e||t==="linear"};function hz({x:n,filter:t,strides:e,pad:r,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:c,bias:l,activation:p="linear",preluActivationWeights:f}){if(p=p||"linear",Rd(X.state.gradientDepth,p)===!1){let L=fs(n,t,e,r,o,s,c);return l!=null&&(L=Tt(L,l)),Fd(L,p,f)}let m=M(n,"x","conv2d"),y=M(t,"filter","conv2d"),b=m,v=!1;m.rank===3&&(v=!0,b=Q(m,[1,m.shape[0],m.shape[1],m.shape[2]])),_(b.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${b.rank}.`),_(y.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${y.rank}.`),c!=null&&_(gt(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${c} but got pad ${r}.`),_(b.shape[3]===y.shape[2],()=>`Error in conv2d: depth of input (${b.shape[3]}) must match input depth for filter ${y.shape[2]}.`),_(fn(e,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),_(o==="NHWC",()=>`Error in conv2d: got dataFormat of ${o} but only NHWC is currently supported.`);let T=Un(b.shape,y.shape,e,s,r,c),N;l!=null&&(N=M(l,"bias","fused conv2d"),[N]=Je(N,m),le(T.outShape,N.shape));let S;f!=null&&(S=M(f,"prelu weights","fused conv2d"));let D=(L,B)=>{let[q,H,Z,J]=B,it=Dd(L,Z,p);_(oi(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let pt=mw(H.shape,it,q,e,r),ht=Uw(H,it,q.shape,e,r),dt=[pt,ht];if(J!=null){let ft=Ad(J,it);dt.push(ft)}return dt},I=L=>{let B=L.fusedConv2d({input:b,filter:y,convInfo:T,bias:N,activation:p,preluActivationWeights:S});return B},P={x:b,filter:y,bias:N,preluActivationWeights:S},E={strides:e,pad:r,dataFormat:o,dilations:s,dimRoundingMode:c,activation:p};if(l==null){let L=zo((B,q,H)=>{let Z=X.runKernelFunc(I,P,null,Of,E);return H([q,B,Z]),v&&(Z=Q(Z,[Z.shape[1],Z.shape[2],Z.shape[3]])),{value:Z,gradFunc:D}});return L(b,y)}else{let L=zo((B,q,H,Z)=>{let J=X.runKernelFunc(I,P,null,Of,E);return Z([q,B,J,H]),v&&(J=Q(J,[J.shape[1],J.shape[2],J.shape[3]])),{value:J,gradFunc:D}});return L(b,y,N)}}let qw=j({fusedConv2d_:hz});function fz(n,t,e,r,o,s=[1,1],c){let l=n;n.rank===3&&(l=Q(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let p=t;p.rank===3&&(p=Q(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let f=b=>{let v=Un(n.shape,e,r,s,o,c,!0);return b.depthwiseConv2DDerFilter(l,p,v)},m={x:l,dy:p},y={strides:r,pad:o,dimRoundingMode:c,dilations:s,filterShape:e};return X.runKernelFunc(f,m,null,Yb,y)}let iC=j({depthwiseConv2dNativeBackpropFilter_:fz});function dz(n,t,e,r,o,s=[1,1],c){let l=t,p=!1;t.rank===3&&(p=!0,l=Q(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let f=v=>{let T=Un(n,e.shape,r,s,o,c,!0);return v.depthwiseConv2DDerInput(l,e,T)},m={dy:l,filter:e},y={strides:r,pad:o,dimRoundingMode:c,dilations:s,inputShape:n},b=X.runKernelFunc(f,m,null,Jb,y);return p?Q(b,[b.shape[1],b.shape[2],b.shape[3]]):b}let aC=j({depthwiseConv2dNativeBackpropInput_:dz});function mz({x:n,filter:t,strides:e,pad:r,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:c,bias:l,activation:p="linear",preluActivationWeights:f}){if(Rd(X.state.gradientDepth,p)===!1){let L=na(n,t,e,r,o,s,c);return l!=null&&(L=Tt(L,l)),Fd(L,p,f)}let m=M(n,"x","depthwiseConv2d"),y=M(t,"filter","depthwiseConv2d"),b=m,v=!1;m.rank===3&&(v=!0,b=Q(m,[1,m.shape[0],m.shape[1],m.shape[2]])),_(b.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${b.rank}.`),_(y.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${y.rank}.`),_(b.shape[3]===y.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${b.shape[3]}) must match the inChannels dimension in filter ${y.shape[2]}.`),s==null&&(s=[1,1]),_(fn(e,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),c!=null&&_(gt(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${c} but got pad ${r}.`);let T=Un(b.shape,y.shape,e,s,r,c,!0),N;l!=null&&(N=M(l,"bias","fused conv2d"),[N]=Je(N,m),le(T.outShape,N.shape));let S;f!=null&&(S=M(f,"prelu weights","fused depthwiseConv2d"));let D=(L,B)=>{_(oi(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[q,H,Z,J]=B,it=Dd(L,Z,p),pt=aC(H.shape,it,q,e,r,s,c),ht=iC(H,it,q.shape,e,r,s,c);if(J!=null){let dt=Ad(N,it);return[pt,ht,dt]}return[pt,ht]},I=L=>{let B=L.fusedDepthwiseConv2D({input:b,filter:y,convInfo:T,bias:N,activation:p,preluActivationWeights:S});return B},P={x:b,filter:y,bias:N,preluActivationWeights:S},E={strides:e,pad:r,dataFormat:o,dilations:s,dimRoundingMode:c,activation:p};if(l==null){let L=zo((B,q,H)=>{let Z=X.runKernelFunc(I,P,null,Lf,E);return H([q,B,Z]),v&&(Z=Q(Z,[Z.shape[1],Z.shape[2],Z.shape[3]])),{value:Z,gradFunc:D}});return L(b,y)}else{let L=zo((B,q,H,Z)=>{let J=X.runKernelFunc(I,P,null,Lf,E);return Z([q,B,J,H]),v&&(J=Q(J,[J.shape[1],J.shape[2],J.shape[3]])),{value:J,gradFunc:D}});return L(b,y,N)}}let cC=j({fusedDepthwiseConv2d_:mz});function gz({a:n,b:t,transposeA:e=!1,transposeB:r=!1,bias:o,activation:s="linear",preluActivationWeights:c}){if(Rd(X.state.gradientDepth,s)===!1){let J=ge(n,t,e,r);return o!=null&&(J=Tt(J,o)),Fd(J,s,c)}let l=M(n,"a","fused matMul"),p=M(t,"b","fused matMul");[l,p]=Je(l,p);let f=e?l.shape[l.rank-2]:l.shape[l.rank-1],m=r?p.shape[p.rank-1]:p.shape[p.rank-2],y=e?l.shape[l.rank-1]:l.shape[l.rank-2],b=r?p.shape[p.rank-2]:p.shape[p.rank-1],v=l.shape.slice(0,-2),T=p.shape.slice(0,-2),N=G(v),S=G(T);_(l.rank>=2&&p.rank>=2&&l.rank===p.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${p.rank}.`),_(lt(v,T),()=>`Error in fused matMul: outer dimensions (${v}) and (${T}) of Tensors with shapes ${l.shape} and ${p.shape} must match.`),_(f===m,()=>`Error in fused matMul: inner shapes (${f}) and (${m}) of Tensors with shapes ${l.shape} and ${p.shape} and transposeA=${e} and transposeB=${r} must match.`);let D=l.shape.slice(0,-2).concat([y,b]),I=e?Q(l,[N,f,y]):Q(l,[N,y,f]),P=r?Q(p,[S,b,m]):Q(p,[S,m,b]),E;o!=null&&(E=M(o,"bias","fused matMul"),[E]=Je(E,l),le(D,E.shape));let L;c!=null&&(L=M(c,"prelu weights","fused matMul"));let B=(J,it)=>{let[pt,ht,dt,ft]=it,ut=Dd(Q(J,dt.shape),dt,s),bt,yt;if(!e&&!r?(bt=ge(ut,ht,!1,!0),yt=ge(pt,ut,!0,!1)):!e&&r?(bt=ge(ut,ht,!1,!1),yt=ge(ut,pt,!0,!1)):e&&!r?(bt=ge(ht,ut,!1,!0),yt=ge(pt,ut,!1,!1)):(bt=ge(ht,ut,!0,!0),yt=ge(ut,pt,!0,!0)),o!=null){let xt=Ad(ft,ut);return[bt,yt,xt]}else return[bt,yt]},q=J=>{let it=J.fusedBatchMatMul({a:I,b:P,transposeA:e,transposeB:r,bias:E,activation:s,preluActivationWeights:L});return it},H={a:I,b:P,bias:E,preluActivationWeights:L},Z={transposeA:e,transposeB:r,activation:s};if(o==null){let J=zo((it,pt,ht)=>{let dt=X.runKernelFunc(q,H,null,Pf,Z);return ht([it,pt,dt]),{value:Q(dt,D),gradFunc:B}});return J(I,P)}else{let J=zo((it,pt,ht,dt)=>{let ft=X.runKernelFunc(q,H,null,Pf,Z);return dt([it,pt,ft,ht]),{value:Q(ft,D),gradFunc:B}});return J(I,P,E)}}let Pd=j({fusedMatMul_:gz});var yz=Object.freeze({__proto__:null,conv2d:qw,depthwiseConv2d:cC,matMul:Pd});function bz(n){return Gw(n,.54,.46)}let xz=j({hammingWindow_:bz});function wz(n){return Gw(n,.5,.5)}let lC=j({hannWindow_:wz});function vz(n,t,e,r=!1,o=0){let s=0,c=[];for(;s+t<=n.size;)c.push(ce(n,s,t)),s+=e;if(r)for(;s<n.size;){let l=s+t-n.size,p=Qe([ce(n,s,t-l),Cc([l],o)]);c.push(p),s+=e}return c.length===0?ui([],[0,t]):Q(Qe(c),[c.length,t])}let uC=j({frame_:vz});function Tz(n,t,e,r,o=lC){r==null&&(r=sC(t));let s=uC(n,t,e),c=nt(s,o(t)),l=[];for(let p=0;p<s.shape[0];p++)l.push(mp(ce(c,[p,0],[1,t]),r));return Qe(l)}let kz=j({stft_:Tz});function Nz(n,t,e,r,o,s){let c=M(n,"image","cropAndResize"),l=M(t,"boxes","cropAndResize","float32"),p=M(e,"boxInd","cropAndResize","int32");o=o||"bilinear",s=s||0;let f=l.shape[0];_(c.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${c.rank}.`),_(l.rank===2&&l.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${f},4] but had shape ${l.shape}.`),_(p.rank===1&&p.shape[0]===f,()=>`Error in cropAndResize: boxInd must be have size [${f}] but had shape ${l.shape}.`),_(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),_(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),_(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);let m=T=>T.cropAndResize(c,l,p,r,o,s),y={image:c,boxes:l,boxInd:p},b={method:o,extrapolationValue:s,cropSize:r},v=X.runKernelFunc(m,y,null,rN,b);return v}let _z=j({cropAndResize_:Nz});function Cz(n){let t=M(n,"image","flipLeftRight","float32");_(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let e={image:t},r=X.runKernel(bf,e,{});return r}let Sz=j({flipLeftRight_:Cz});function $z(n,t,e=0,r=.5){let o=M(n,"image","rotateWithOffset","float32");_(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);let s={image:o},c={radians:t,fillValue:e,center:r},l=X.runKernel(Rf,s,c);return l}let Iz=j({rotateWithOffset_:$z});function Lc(n,t,e,r,o,s){r==null&&(r=.5),o==null&&(o=Number.NEGATIVE_INFINITY),s==null&&(s=0);let c=n.shape[0];return e=Math.min(e,c),_(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),_(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),_(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),_(t.rank===1,()=>"scores must be a 1D tensor"),_(t.shape[0]===c,()=>`scores has incompatible shape with boxes. Expected ${c}, but was ${t.shape[0]}`),_(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:e,iouThreshold:r,scoreThreshold:o,softNmsSigma:s}}function Ez(n,t,e,r=.5,o=Number.NEGATIVE_INFINITY){let s=M(n,"boxes","nonMaxSuppression"),c=M(t,"scores","nonMaxSuppression"),l=Lc(s,c,e,r,o);e=l.maxOutputSize,r=l.iouThreshold,o=l.scoreThreshold;let p={maxOutputSize:e,iouThreshold:r,scoreThreshold:o};return X.runKernelFunc(f=>f.nonMaxSuppression(s,c,e,r,o),{boxes:s,scores:c},null,px,p)}let Dz=j({nonMaxSuppression_:Ez});function Az(n,t,e){let r=Fz(n,t,e),o=r<0?-(r+1):r;n.splice(o,0,t)}function Fz(n,t,e){return Pz(n,t,e||Rz)}function Rz(n,t){return n>t?1:n<t?-1:0}function Pz(n,t,e){let r=0,o=n.length,s=0,c=!1;for(;r<o;){s=r+(o-r>>>1);let l=e(t,n[s]);l>0?r=s+1:(o=s,c=!l)}return c?r:-r-1}function Od(n,t,e,r,o){return Hw(n,t,e,r,o,0).selectedIndices}function Ld(n,t,e,r,o,s){return Hw(n,t,e,r,o,0,!1,s,!0)}function Md(n,t,e,r,o,s){return Hw(n,t,e,r,o,s,!0)}function Hw(n,t,e,r,o,s,c=!1,l=!1,p=!1){let f=[];for(let S=0;S<t.length;S++)t[S]>o&&f.push({score:t[S],boxIndex:S,suppressBeginIndex:0});f.sort(pC);let m=s>0?-.5/s:0,y=[],b=[];for(;y.length<e&&f.length>0;){let S=f.pop(),{score:D,boxIndex:I,suppressBeginIndex:P}=S;if(D<o)break;let E=!1;for(let L=y.length-1;L>=P;--L){let B=Oz(n,I,y[L]);if(B>=r){E=!0;break}if(S.score=S.score*Lz(r,m,B),S.score<=o)break}S.suppressBeginIndex=y.length,E||(S.score===D?(y.push(I),b.push(S.score)):S.score>o&&Az(f,S,pC))}let v=y.length,T=e-v;l&&T>0&&(y.push(...new Array(T).fill(0)),b.push(...new Array(T).fill(0)));let N={selectedIndices:vr(y,"int32")};return c&&(N.selectedScores=vr(b,"float32")),p&&(N.validOutputs=Et(v,"int32")),N}function Oz(n,t,e){let r=n.subarray(t*4,t*4+4),o=n.subarray(e*4,e*4+4),s=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),l=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),f=Math.min(o[0],o[2]),m=Math.min(o[1],o[3]),y=Math.max(o[0],o[2]),b=Math.max(o[1],o[3]),v=(l-s)*(p-c),T=(y-f)*(b-m);if(v<=0||T<=0)return 0;let N=Math.max(s,f),S=Math.max(c,m),D=Math.min(l,y),I=Math.min(p,b),P=Math.max(D-N,0)*Math.max(I-S,0);return P/(v+T-P)}function Lz(n,t,e){let r=Math.exp(t*e*e);return e<=n?r:0}function pC(n,t){return n.score-t.score||n.score===t.score&&t.boxIndex-n.boxIndex}async function Mz(n,t,e,r=.5,o=Number.NEGATIVE_INFINITY){let s=M(n,"boxes","nonMaxSuppressionAsync"),c=M(t,"scores","nonMaxSuppressionAsync"),l=Lc(s,c,e,r,o);e=l.maxOutputSize,r=l.iouThreshold,o=l.scoreThreshold;let p=await Promise.all([s.data(),c.data()]),f=p[0],m=p[1],y=Od(f,m,e,r,o);return s!==n&&s.dispose(),c!==t&&c.dispose(),y}let Bz=Mz;function zz(n,t,e,r=.5,o=Number.NEGATIVE_INFINITY,s=0){let c=M(n,"boxes","nonMaxSuppression"),l=M(t,"scores","nonMaxSuppression"),p=Lc(c,l,e,r,o,s);e=p.maxOutputSize,r=p.iouThreshold,o=p.scoreThreshold,s=p.softNmsSigma;let f={boxes:c,scores:l},m={maxOutputSize:e,iouThreshold:r,scoreThreshold:o,softNmsSigma:s},y=X.runKernel(_f,f,m);return{selectedIndices:y[0],selectedScores:y[1]}}let Wz=j({nonMaxSuppressionWithScore_:zz});async function Vz(n,t,e,r=.5,o=Number.NEGATIVE_INFINITY,s=0){let c=M(n,"boxes","nonMaxSuppressionAsync"),l=M(t,"scores","nonMaxSuppressionAsync"),p=Lc(c,l,e,r,o,s);e=p.maxOutputSize,r=p.iouThreshold,o=p.scoreThreshold,s=p.softNmsSigma;let f=await Promise.all([c.data(),l.data()]),m=f[0],y=f[1],b=Md(m,y,e,r,o,s);return c!==n&&c.dispose(),l!==t&&l.dispose(),b}let Gz=Vz;function Uz(n,t,e,r=.5,o=Number.NEGATIVE_INFINITY,s=!1){let c=M(n,"boxes","nonMaxSuppression"),l=M(t,"scores","nonMaxSuppression"),p=Lc(c,l,e,r,o,null),f=p.maxOutputSize,m=p.iouThreshold,y=p.scoreThreshold,b={boxes:c,scores:l},v={maxOutputSize:f,iouThreshold:m,scoreThreshold:y,padToMaxOutputSize:s},T=X.runKernel(Nf,b,v);return{selectedIndices:T[0],validOutputs:T[1]}}let qz=j({nonMaxSuppressionPadded_:Uz});async function Hz(n,t,e,r=.5,o=Number.NEGATIVE_INFINITY,s=!1){let c=M(n,"boxes","nonMaxSuppressionAsync"),l=M(t,"scores","nonMaxSuppressionAsync"),p=Lc(c,l,e,r,o,null),f=p.maxOutputSize,m=p.iouThreshold,y=p.scoreThreshold,[b,v]=await Promise.all([c.data(),l.data()]),T=Ld(b,v,f,m,y,s);return c!==n&&c.dispose(),l!==t&&l.dispose(),T}let jz=Hz;function Kz(n,t,e=!1){let r=M(n,"images","resizeBilinear");_(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),_(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`);let o=r,s=!1;r.rank===3&&(s=!0,o=Q(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[c,l]=t,p=(b,v)=>(v([o]),b.resizeBilinear(o,c,l,e)),f={images:o},m={alignCorners:e,size:t},y=X.runKernelFunc(p,f,null,gx,m);return s?Q(y,[y.shape[1],y.shape[2],y.shape[3]]):y}let hC=j({resizeBilinear_:Kz});function Xz(n,t,e=!1){let r=M(n,"images","resizeNearestNeighbor");_(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),_(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),_(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype");let o=r,s=!1;r.rank===3&&(s=!0,o=Q(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[c,l]=t,p={images:o},f={alignCorners:e,size:t},m=(b,v)=>(v([o]),b.resizeNearestNeighbor(o,c,l,e)),y=X.runKernelFunc(m,p,null,mx,f);return s?Q(y,[y.shape[1],y.shape[2],y.shape[3]]):y}let fC=j({resizeNearestNeighbor_:Xz});function Yz(n,t,e){_(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),_(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`);let r=M(n,"a","bandPart");_(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);let o=r.shape,[s,c]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(e<=c))throw new Error(`bandPart(): numUpper (${e}) must not be greater than the number of columns (${c}).`);t<0&&(t=s),e<0&&(e=c);let l=Q(hp(0,s,1,"int32"),[-1,1]),p=hp(0,c,1,"int32"),f=Dt(l,p),m=Yr(ai(f,Et(+t,"int32")),ds(f,Et(-e,"int32"))),y=xe([s,c],r.dtype);return Q(ur(mo(Q(r,[-1,s,c])).map(b=>Xn(m,b,y))),o)}let Jz=j({bandPart_:Yz});function Zz(n){let t;if(Array.isArray(n)){t=!1,_(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let o=n[0].shape[0];for(let s=1;s<n.length;++s)_(n[s].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[s].shape[0]} vs. ${o})`)}else t=!0,n=Tr(n,n.shape[0],0).map(o=>li(o,[0]));_(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);let e=[],r=n;for(let o=0;o<n.length;++o)e.push(X.tidy(()=>{let s=r[o];if(o>0)for(let c=0;c<o;++c){let l=nt(zt(nt(e[c],s)),e[c]);s=Dt(s,l)}return Bt(s,Ed(s,"euclidean"))}));return t?ur(e,0):e}let Qz=j({gramSchmidt_:Zz});function tW(n,t=!1){if(_(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return dC(n,t);{let e=n.shape.slice(0,n.shape.length-2).reduce((p,f)=>p*f),r=mo(Q(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),o=[],s=[];r.forEach(p=>{let[f,m]=dC(p,t);o.push(f),s.push(m)});let c=Q(ur(o,0),n.shape),l=Q(ur(s,0),n.shape);return[c,l]}}function dC(n,t=!1){return X.tidy(()=>{_(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);let e=n.shape[0],r=n.shape[1],o=hd(e),s=ni(n),c=ui([[1]],[1,1]),l=ni(c),p=e>=r?r:e;for(let f=0;f<p;++f){let m=s,y=l,b=o;[l,s,o]=X.tidy(()=>{let v=ce(s,[f,f],[e-f,1]),T=Ed(v),N=ce(s,[f,f],[1,1]),S=Xn(Fr(N,0),ui([[-1]]),ui([[1]])),D=Dt(N,nt(S,T)),I=Bt(v,D);I.shape[0]===1?l=ni(c):l=Qe([c,ce(I,[1,0],[I.shape[0]-1,I.shape[1]])],0);let P=tn(Bt(ge(S,D),T)),E=ce(s,[f,0],[e-f,r]),L=nt(P,l),B=Kt(l);if(f===0)s=Dt(E,ge(L,ge(B,E)));else{let Z=Dt(E,ge(L,ge(B,E)));s=Qe([ce(s,[0,0],[f,r]),Z],0)}let q=Kt(L),H=ce(o,[0,f],[e,o.shape[1]-f]);if(f===0)o=Dt(H,ge(ge(H,l),q));else{let Z=Dt(H,ge(ge(H,l),q));o=Qe([ce(o,[0,0],[e,f]),Z],1)}return[l,s,o]}),Xt([m,y,b])}return!t&&e>r&&(o=ce(o,[0,0],[e,r]),s=ce(s,[0,0],[r,r])),[o,s]})}let eW=j({qr_:tW});(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(i.Reduction||(i.Reduction={}));function nW(n,t,e=i.Reduction.SUM_BY_NONZERO_WEIGHTS){let r=M(n,"losses","computeWeightedLoss"),o=null;t!=null&&(o=M(t,"weights","computeWeightedLoss"));let s=o==null?r:nt(r,o);if(e===i.Reduction.NONE)return s;if(e===i.Reduction.SUM)return zt(s);if(e===i.Reduction.MEAN){if(o==null)return en(s);{let c=r.size/o.size,l=Bt(zt(s),zt(o));return c>1?Bt(l,Et(c)):l}}if(e===i.Reduction.SUM_BY_NONZERO_WEIGHTS){if(o==null)return Bt(zt(s),Et(r.size));{let c=nt(o,ho(r.shape)),l=$t(zt(ci(c,Et(0))),"float32");return Bt(zt(s),l)}}throw Error(`Unknown reduction: ${e}`)}let ms=j({computeWeightedLoss_:nW});function rW(n,t,e,r=i.Reduction.SUM_BY_NONZERO_WEIGHTS){let o=M(n,"labels","absoluteDifference"),s=M(t,"predictions","absoluteDifference"),c=null;e!=null&&(c=M(e,"weights","absoluteDifference")),W(o.shape,s.shape,"Error in absoluteDifference: ");let l=bn(Dt(o,s));return ms(l,c,r)}let oW=j({absoluteDifference_:rW});function sW(n,t,e,r,o=i.Reduction.SUM_BY_NONZERO_WEIGHTS){let s=M(n,"labels","cosineDistance"),c=M(t,"predictions","cosineDistance"),l=null;r!=null&&(l=M(r,"weights","cosineDistance")),W(s.shape,c.shape,"Error in cosineDistance: ");let p=Et(1),f=Dt(p,zt(nt(s,c),e,!0));return ms(f,l,o)}let iW=j({cosineDistance_:sW});function aW(n,t,e,r=i.Reduction.SUM_BY_NONZERO_WEIGHTS){let o=M(n,"labels","hingeLoss"),s=M(t,"predictions","hingeLoss"),c=null;e!=null&&(c=M(e,"weights","hingeLoss")),W(o.shape,s.shape,"Error in hingeLoss: ");let l=Et(1);o=Dt(nt(Et(2),o),l);let p=Vo(Dt(l,nt(o,s)));return ms(p,c,r)}let cW=j({hingeLoss_:aW});function lW(n,t,e,r=1,o=i.Reduction.SUM_BY_NONZERO_WEIGHTS){let s=M(n,"labels","huberLoss"),c=M(t,"predictions","huberLoss"),l=null;e!=null&&(l=M(e,"weights","huberLoss")),W(s.shape,c.shape,"Error in huberLoss: ");let p=Et(r),f=bn(Dt(c,s)),m=oa(f,p),y=Dt(f,m),b=Tt(nt(Et(.5),De(m)),nt(p,y));return ms(b,l,o)}let uW=j({huberLoss_:lW});function pW(n,t,e,r=1e-7,o=i.Reduction.SUM_BY_NONZERO_WEIGHTS){let s=M(n,"labels","logLoss"),c=M(t,"predictions","logLoss"),l=null;e!=null&&(l=M(e,"weights","logLoss")),W(s.shape,c.shape,"Error in logLoss: ");let p=Et(1),f=Et(r),m=tn(nt(s,wr(Tt(c,f)))),y=nt(Dt(p,s),wr(Tt(Dt(p,c),f))),b=Dt(m,y);return ms(b,l,o)}let hW=j({logLoss_:pW});function fW(n,t,e,r=i.Reduction.SUM_BY_NONZERO_WEIGHTS){let o=M(n,"labels","meanSquaredError"),s=M(t,"predictions","meanSquaredError"),c=null;e!=null&&(c=M(e,"weights","meanSquaredError")),W(o.shape,s.shape,"Error in meanSquaredError: ");let l=gp(o,s);return ms(l,c,r)}let dW=j({meanSquaredError_:fW});function mW(n,t){let e=M(n,"labels","sigmoidCrossEntropyWithLogits"),r=M(t,"logits","sigmoidCrossEntropyWithLogits");W(e.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let o=Vo(r),s=nt(r,e),c=dd(Ar(tn(bn(r))));return Tt(Dt(o,s),c)}function gW(n,t,e,r=0,o=i.Reduction.SUM_BY_NONZERO_WEIGHTS){let s=M(n,"multiClassLabels","sigmoidCrossEntropy"),c=M(t,"logits","sigmoidCrossEntropy"),l=null;if(e!=null&&(l=M(e,"weights","sigmoidCrossEntropy")),W(s.shape,c.shape,"Error in sigmoidCrossEntropy: "),r>0){let f=Et(r),m=Et(1),y=Et(.5);s=Tt(nt(s,Dt(m,f)),nt(y,f))}let p=mW(s,c);return ms(p,l,o)}let yW=j({sigmoidCrossEntropy_:gW});function bW(n,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);let r=zo((o,s,c)=>{let l=!0,p=_w(s,[e],l),f=Dt($t(s,"float32"),p);c([o,f]);let m=tn(nt(f,o)),y=zt(m,[e]),b=(v,T)=>{let[N,S]=T,D=Rn(v.shape,[e]);return[nt(Q(v,D),Dt($t(N,"float32"),Ar(S))),nt(Q(v,D),Dt(Ar(S),$t(N,"float32")))]};return{value:y,gradFunc:b}});return r(n,t)}function xW(n,t,e,r=0,o=i.Reduction.SUM_BY_NONZERO_WEIGHTS){let s=M(n,"onehotLabels","softmaxCrossEntropy"),c=M(t,"logits","softmaxCrossEntropy"),l=null;if(e!=null&&(l=M(e,"weights","softmaxCrossEntropy")),W(s.shape,c.shape,"Error in softmaxCrossEntropy: "),r>0){let f=Et(r),m=Et(1),y=Et(s.shape[1]);s=Tt(nt(s,Dt(m,f)),Bt(f,y))}let p=bW(s,c);return ms(p,l,o)}let wW=j({softmaxCrossEntropy_:xW});let vW={fft:dp,ifft:Rc,rfft:mp,irfft:Sd},TW={hammingWindow:xz,hannWindow:lC,frame:uC,stft:kz},pi={flipLeftRight:Sz,resizeNearestNeighbor:fC,resizeBilinear:hC,rotateWithOffset:Iz,cropAndResize:_z,nonMaxSuppression:Dz,nonMaxSuppressionAsync:Bz,nonMaxSuppressionWithScore:Wz,nonMaxSuppressionWithScoreAsync:Gz,nonMaxSuppressionPadded:qz,nonMaxSuppressionPaddedAsync:jz},mC={bandPart:Jz,gramSchmidt:Qz,qr:eW},kW={absoluteDifference:oW,computeWeightedLoss:ms,cosineDistance:iW,hingeLoss:cW,huberLoss:uW,logLoss:hW,meanSquaredError:dW,sigmoidCrossEntropy:yW,softmaxCrossEntropy:wW};class gs extends Qi{minimize(t,e=!1,r){let{value:o,grads:s}=this.computeGradients(t,r);if(r!=null){let c=r.map(l=>({name:l.name,tensor:s[l.name]}));this.applyGradients(c)}else this.applyGradients(s);return Xt(s),e?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return Nw(t,e)}dispose(){this.iterations_!=null&&Xt(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Et(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(gs,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});class bp extends gs{constructor(t,e,r=null){super();this.learningRate=t,this.rho=e,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],r==null&&(this.epsilon=X.backend.epsilon())}applyGradients(t){let e=Array.isArray(t)?t.map(r=>r.name):Object.keys(t);e.forEach((r,o)=>{let s=X.registeredVariables[r],c=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${r}/accum_grad`,variable:rt(()=>re(s).variable(c))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${r}/accum_var`,variable:rt(()=>re(s).variable(c))});let l=Array.isArray(t)?t[o].tensor:t[r];if(l==null)return;let p=this.accumulatedGrads[o].variable,f=this.accumulatedUpdates[o].variable;rt(()=>{let m=Tt(nt(p,this.rho),nt(De(l),1-this.rho)),y=nt(Bt(Pn(Tt(f,this.epsilon)),Pn(Tt(p,this.epsilon))),l),b=Tt(nt(f,this.rho),nt(De(y),1-this.rho));p.assign(m),f.assign(b);let v=Tt(nt(y,-this.learningRate),s);s.assign(v)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Xt(this.accumulatedGrads.map(t=>t.variable)),Xt(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){let t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);let e=t.length/2,r=!1;this.accumulatedGrads=t.slice(0,e).map(o=>({originalName:o.name,variable:o.tensor.variable(r)})),this.accumulatedUpdates=t.slice(e,e*2).map(o=>({originalName:o.name,variable:o.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}bp.className="Adadelta",vt(bp);class xp extends gs{constructor(t,e=.1){super();this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){let e=Array.isArray(t)?t.map(r=>r.name):Object.keys(t);e.forEach((r,o)=>{let s=X.registeredVariables[r];if(this.accumulatedGrads[o]==null){let p=!1;this.accumulatedGrads[o]={originalName:`${r}/accumulator`,variable:rt(()=>Cc(s.shape,this.initialAccumulatorValue).variable(p))}}let c=Array.isArray(t)?t[o].tensor:t[r];if(c==null)return;let l=this.accumulatedGrads[o].variable;rt(()=>{let p=Tt(l,De(c));l.assign(p);let f=Tt(nt(Bt(c,Pn(Tt(p,X.backend.epsilon()))),-this.learningRate),s);s.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Xt(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);let e=!1;this.accumulatedGrads=t.map(r=>({originalName:r.name,variable:r.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}xp.className="Adagrad",vt(xp);class wp extends gs{constructor(t,e,r,o=null){super();this.learningRate=t,this.beta1=e,this.beta2=r,this.epsilon=o,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],rt(()=>{this.accBeta1=Et(e).variable(),this.accBeta2=Et(r).variable()}),o==null&&(this.epsilon=X.backend.epsilon())}applyGradients(t){let e=Array.isArray(t)?t.map(r=>r.name):Object.keys(t);rt(()=>{let r=Dt(1,this.accBeta1),o=Dt(1,this.accBeta2);e.forEach((s,c)=>{let l=X.registeredVariables[s],p=!1;this.accumulatedFirstMoment[c]==null&&(this.accumulatedFirstMoment[c]={originalName:`${s}/m`,variable:rt(()=>re(l).variable(p))}),this.accumulatedSecondMoment[c]==null&&(this.accumulatedSecondMoment[c]={originalName:`${s}/v`,variable:rt(()=>re(l).variable(p))});let f=Array.isArray(t)?t[c].tensor:t[s];if(f==null)return;let m=this.accumulatedFirstMoment[c].variable,y=this.accumulatedSecondMoment[c].variable,b=Tt(nt(m,this.beta1),nt(f,1-this.beta1)),v=Tt(nt(y,this.beta2),nt(De(f),1-this.beta2)),T=Bt(b,r),N=Bt(v,o);m.assign(b),y.assign(v);let S=Tt(nt(Bt(T,Tt(Pn(N),this.epsilon)),-this.learningRate),l);l.assign(S)}),this.accBeta1.assign(nt(this.accBeta1,this.beta1)),this.accBeta2.assign(nt(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Xt(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&Xt(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){let t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),rt(()=>{this.accBeta1.assign(fo(this.beta1,this.iterations_+1)),this.accBeta2.assign(fo(this.beta2,this.iterations_+1))});let e=t.length/2,r=!1;this.accumulatedFirstMoment=t.slice(0,e).map(o=>({originalName:o.name,variable:o.tensor.variable(r)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(o=>({originalName:o.name,variable:o.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}wp.className="Adam",vt(wp);class vp extends gs{constructor(t,e,r,o=null,s=0){super();this.learningRate=t,this.beta1=e,this.beta2=r,this.epsilon=o,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],rt(()=>{this.iteration=Et(0).variable(),this.accBeta1=Et(e).variable()}),o==null&&(this.epsilon=X.backend.epsilon())}applyGradients(t){let e=Array.isArray(t)?t.map(r=>r.name):Object.keys(t);rt(()=>{let r=Dt(1,this.accBeta1),o=Bt(-this.learningRate,Tt(nt(this.iteration,this.decay),1));e.forEach((s,c)=>{let l=X.registeredVariables[s],p=!1;this.accumulatedFirstMoment[c]==null&&(this.accumulatedFirstMoment[c]={originalName:`${s}/m`,variable:re(l).variable(p)}),this.accumulatedWeightedInfNorm[c]==null&&(this.accumulatedWeightedInfNorm[c]={originalName:`${s}/v`,variable:re(l).variable(p)});let f=Array.isArray(t)?t[c].tensor:t[s];if(f==null)return;let m=this.accumulatedFirstMoment[c].variable,y=this.accumulatedWeightedInfNorm[c].variable,b=Tt(nt(m,this.beta1),nt(f,1-this.beta1)),v=nt(y,this.beta2),T=bn(f),N=Xr(v,T);m.assign(b),y.assign(N);let S=Tt(nt(Bt(o,r),Bt(b,Tt(N,this.epsilon))),l);l.assign(S)}),this.iteration.assign(Tt(this.iteration,1)),this.accBeta1.assign(nt(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Xt(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&Xt(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}vp.className="Adamax",vt(vp);class Mc extends gs{constructor(t){super();this.learningRate=t,this.setLearningRate(t)}applyGradients(t){let e=Array.isArray(t)?t.map(r=>r.name):Object.keys(t);e.forEach((r,o)=>{let s=Array.isArray(t)?t[o].tensor:t[r];if(s==null)return;let c=X.registeredVariables[r];rt(()=>{let l=Tt(nt(this.c,s),c);c.assign(l)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=Sn(Et(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Mc.className="SGD",vt(Mc);class Tp extends Mc{constructor(t,e,r=!1){super(t);this.learningRate=t,this.momentum=e,this.useNesterov=r,this.accumulations=[],this.m=Et(this.momentum)}applyGradients(t){let e=Array.isArray(t)?t.map(r=>r.name):Object.keys(t);e.forEach((r,o)=>{let s=X.registeredVariables[r];if(this.accumulations[o]==null){let p=!1;this.accumulations[o]={originalName:`${r}/momentum`,variable:rt(()=>re(s).variable(p))}}let c=this.accumulations[o].variable,l=Array.isArray(t)?t[o].tensor:t[r];if(l==null)return;rt(()=>{let p,f=Tt(nt(this.m,c),l);this.useNesterov?p=Tt(nt(this.c,Tt(l,nt(f,this.m))),s):p=Tt(nt(this.c,f),s),c.assign(f),s.assign(p)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Xt(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);let e=!1;this.accumulations=t.map(r=>({originalName:r.name,variable:r.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}Tp.className="Momentum",vt(Tp);class kp extends gs{constructor(t,e=.9,r=0,o=null,s=!1){super();if(this.learningRate=t,this.decay=e,this.momentum=r,this.epsilon=o,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,o==null&&(this.epsilon=X.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){let e=Array.isArray(t)?t.map(r=>r.name):Object.keys(t);e.forEach((r,o)=>{let s=X.registeredVariables[r],c=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${r}/rms`,variable:rt(()=>re(s).variable(c))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${r}/momentum`,variable:rt(()=>re(s).variable(c))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${r}/mg`,variable:rt(()=>re(s).variable(c))});let l=Array.isArray(t)?t[o].tensor:t[r];if(l==null)return;let p=this.accumulatedMeanSquares[o].variable,f=this.accumulatedMoments[o].variable;rt(()=>{let m=Tt(nt(p,this.decay),nt(De(l),1-this.decay));if(this.centered){let y=this.accumulatedMeanGrads[o].variable,b=Tt(nt(y,this.decay),nt(l,1-this.decay)),v=Bt(nt(l,this.learningRate),Pn(Dt(m,Tt(De(b),this.epsilon)))),T=Tt(nt(f,this.momentum),v);p.assign(m),y.assign(b),f.assign(T);let N=Dt(s,T);s.assign(N)}else{let y=Tt(nt(p,this.decay),nt(De(l),1-this.decay)),b=Tt(nt(f,this.momentum),Bt(nt(l,this.learningRate),Pn(Tt(y,this.epsilon))));p.assign(y),f.assign(b);let v=Dt(s,b);s.assign(v)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Xt(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Xt(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&Xt(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){let t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);let e=this.centered?t.length/3:t.length/2,r=!1;this.accumulatedMeanSquares=t.slice(0,e).map(o=>({originalName:o.name,variable:o.tensor.variable(r)})),this.accumulatedMoments=t.slice(e,e*2).map(o=>({originalName:o.name,variable:o.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(o=>({originalName:o.name,variable:o.tensor.variable(r)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}kp.className="RMSProp",vt(kp);class la{static sgd(t){return new Mc(t)}static momentum(t,e,r=!1){return new Tp(t,e,r)}static rmsprop(t,e=.9,r=0,o=null,s=!1){return new kp(t,e,r,o,s)}static adam(t=.001,e=.9,r=.999,o=null){return new wp(t,e,r,o)}static adadelta(t=.001,e=.95,r=null){return new bp(t,e,r)}static adamax(t=.002,e=.9,r=.999,o=null,s=0){return new vp(t,e,r,o,s)}static adagrad(t,e=.1){return new xp(t,e)}}let ua={sgd:la.sgd,momentum:la.momentum,adadelta:la.adadelta,adagrad:la.adagrad,rmsprop:la.rmsprop,adamax:la.adamax,adam:la.adam};let NW=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:n=>n())();function Bd(){return new Promise(n=>NW(()=>n()))}function jw(n,t,e){let r=e*(typeof n=="number"?n:n[0]),o=t*(typeof n=="number"?n:n[1]);return[r,o]}function Np(n,t,e,r=!0){let o=[];if(r)o=o.concat(t.slice(0)),o.push(n[0]/e),o=o.concat(n.slice(1));else{o=o.concat(n[0]);let s=t.length;for(let c=0;c<s;++c)o=o.concat([n[c+1]/t[c],t[c]]);o=o.concat(n.slice(s+1))}return o}function _p(n,t,e=!0){let r=[];if(e){r.push(t);for(let o=t+1;o<n;++o)o<=2*t?(r.push(o),r.push(o-(t+1))):r.push(o)}else{let o=[],s=[];for(let c=1;c<n;++c)c>=t*2+1||c%2===1?s.push(c):o.push(c);r.push(...o),r.push(0),r.push(...s)}return r}function Cp(n,t,e,r=!0){let o=[];r?o.push(n[0]/e):o.push(n[0]*e);for(let s=1;s<n.length;++s)s<=t.length?r?o.push(t[s-1]*n[s]):o.push(n[s]/t[s-1]):o.push(n[s]);return o}function Kw(n,t){let e=[0];for(let r=0;r<t;++r)e.push(n[r][0]);return e}function Xw(n,t,e){let r=n.slice(0,1);for(let o=0;o<e;++o)r.push(n[o+1]-t[o][0]-t[o][1]);return r}let zd=1.7580993408473768,Wd=1.0507009873554805;let Yw=.3275911,Jw=.254829592,Zw=-.284496736,Qw=1.421413741,tv=-1.453152027,ev=1.061405429;function Bc(...n){ct().getBool("IS_TEST")||console.warn(...n)}function _W(...n){ct().getBool("IS_TEST")||console.log(...n)}function ys(n,t){if(n.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${t.length}.`);let e=new Float32Array(n.length*2);for(let r=0;r<e.length;r+=2)e[r]=n[r/2],e[r+1]=t[r/2];return e}function gC(n){let t=new Float32Array(n.length/2),e=new Float32Array(n.length/2);for(let r=0;r<n.length;r+=2)t[r/2]=n[r],e[r/2]=n[r+1];return{real:t,imag:e}}function yC(n){let t=Math.ceil(n.length/4),e=new Float32Array(t),r=new Float32Array(t);for(let o=0;o<n.length;o+=4)e[Math.floor(o/4)]=n[o],r[Math.floor(o/4)]=n[o+1];return{real:e,imag:r}}function bC(n){let t=Math.floor(n.length/4),e=new Float32Array(t),r=new Float32Array(t);for(let o=2;o<n.length;o+=4)e[Math.floor(o/4)]=n[o],r[Math.floor(o/4)]=n[o+1];return{real:e,imag:r}}function nv(n,t){let e=n[t*2],r=n[t*2+1];return{real:e,imag:r}}function xC(n,t,e,r){n[r*2]=t,n[r*2+1]=e}function wC(n,t){let e=new Float32Array(n/2),r=new Float32Array(n/2);for(let o=0;o<Math.ceil(n/2);o++){let s=(t?2:-2)*Math.PI*(o/n);e[o]=Math.cos(s),r[o]=Math.sin(s)}return{real:e,imag:r}}function vC(n,t,e){let r=(e?2:-2)*Math.PI*(n/t),o=Math.cos(r),s=Math.sin(r);return{real:o,imag:s}}function CW(n,t,e){if(t==="complex64"){if(n.dtype==="complex64")return n.clone();let r=xe(n.shape),o=$t(n,"float32"),s=e.complex(o,r);return r.dispose(),o.dispose(),s}if(!sc(n.dtype,t))return X.makeTensorFromDataId(n.dataId,n.shape,t);if(n.dtype==="complex64"){let r=e.real(n),o=$t(r,t);return r.dispose(),o}if(t==="int32")return e.int(n);if(t==="bool"){let r=Et(0,n.dtype),o=e.notEqual(n,r);return r.dispose(),o}else throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${t}`)}function TC(n,t){return X.makeTensorFromDataId(n.dataId,t,n.dtype)}function rv(n,t,e){let r=(t-n)/(e-1),o=ac(e,"float32");o[0]=n;for(let s=1;s<o.length;s++)o[s]=o[s-1]+r;return vr(o,"float32")}var ov=Object.freeze({__proto__:null,slice_util:p_,segment_util:yM,castTensor:CW,reshapeTensor:TC,linspaceImpl:rv,upcastType:jn,axesAreInnerMostDims:ow,combineLocations:y_,computeOutAndReduceShapes:Fn,expandShapeToKeepDim:Rn,assertAxesAreInnerMostDims:sr,getAxesPermutation:ir,getUndoAxesPermutation:Ju,getInnerMostAxes:xr,getBroadcastDims:ra,getReductionAxes:xn,assertAndGetBroadcastShape:le,assertParamsConsistent:id,computeOutShape:hs,computeDilation2DInfo:od,computePool2DInfo:Kn,computePool3DInfo:tp,computeConv2DInfo:Un,computeConv3DInfo:ri,computeDefaultPad:pw,tupleValuesAreOne:oi,eitherStridesOrDilationsAreOne:fn,convertConv2DDataFormat:si,getFusedDyActivation:Dd,getFusedBiasGradient:Ad,applyActivation:Fd,shouldFuse:Rd,PARALLELIZE_THRESHOLD:Tw,computeOptimalWindowSize:sp,getImageCenter:jw,getReshaped:Np,getPermuted:_p,getReshapedPermuted:Cp,getSliceBeginCoords:Kw,getSliceSize:Xw,prepareAndValidate:Yf,validateUpdateShape:jx,validateInput:Kx,calculateShapes:Tc,SELU_SCALEALPHA:zd,SELU_SCALE:Wd,ERF_P:Yw,ERF_A1:Jw,ERF_A2:Zw,ERF_A3:Qw,ERF_A4:tv,ERF_A5:ev,warn:Bc,log:_W,mergeRealAndImagArrays:ys,splitRealAndImagArrays:gC,complexWithEvenIndex:yC,complexWithOddIndex:bC,getComplexWithIndex:nv,assignToTypedArray:xC,exponents:wC,exponent:vC,prepareSplitSize:M_});function sv(n,t,e){let r=new Array(n.rank).fill(0),o=n.shape.slice();return t.map(s=>{let c=[...o];c[e]=s;let l=ce(n,r,c);return r[e]+=s,l})}function iv(n,t){let e=new Array(n.rank);for(let o=0;o<e.length;o++)e[o]=n.shape[o]*t[o];let r=Se(e,n.dtype);for(let o=0;o<r.values.length;++o){let s=r.indexToLoc(o),c=new Array(n.rank);for(let p=0;p<c.length;p++)c[p]=s[p]%n.shape[p];let l=n.locToIndex(c);r.values[o]=n.values[l]}return r.toTensor()}function av(n,t,e,r,o){let s=t[t.length-1],[c,l]=[n.length/s,s],p=Ce(e,c*r),f=Ce("int32",c*r);for(let y=0;y<c;y++){let b=y*l,v=n.subarray(b,b+l),T=[];for(let I=0;I<v.length;I++)T.push({value:v[I],index:I});T.sort((I,P)=>P.value-I.value);let N=y*r,S=p.subarray(N,N+r),D=f.subarray(N,N+r);for(let I=0;I<r;I++)S[I]=T[I].value,D[I]=T[I].index}let m=t.slice();return m[m.length-1]=r,[un(p,m,e),un(f,m,"int32")]}var SW=Object.freeze({__proto__:null,nonMaxSuppressionV3Impl:Od,nonMaxSuppressionV4Impl:Ld,nonMaxSuppressionV5Impl:Md,split:sv,tile:iv,topkImpl:av,whereImpl:Id});let $W={kernelName:of,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>nt(n,Pc($t(e,"float32"),-1))}}};let IW={kernelName:eu,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>{let r=De($t(e,"float32")),o=Pn(Dt(Et(1),r));return tn(Bt(n,o))}}}};let EW={kernelName:nu,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>{let r=Pn(Dt(De($t(e,"float32")),1));return Bt(n,r)}}}};let DW={kernelName:Hi,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t,o=le(e.shape,r.shape),s=()=>{let l=n,p=xn(e.shape,o);return p.length>0&&(l=zt(l,p)),Q(l,e.shape)},c=()=>{let l=n,p=xn(r.shape,o);return p.length>0&&(l=zt(l,p)),Q(l,r.shape)};return{a:s,b:c}}};let AW={kernelName:zb,saveAllInputs:!0,gradFunc:(n,t)=>{let e={};return t.forEach((r,o)=>{e[o]=()=>n.clone()}),e}};let FW={kernelName:Wb,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>re(e)}}};let RW={kernelName:Vb,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>re(e)}}};let PW={kernelName:ru,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>Bt(n,Pn(Dt(Et(1),De($t(e,"float32")))))}}};let OW={kernelName:ou,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>{let r=Pn(Tt(Et(1),De($t(e,"float32"))));return Bt(n,r)}}}};let LW={kernelName:sf,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t,o=le(e.shape,r.shape),s=()=>{let l=Tt(De(e),De(r)),p=nt(n,Bt(r,l)),f=xn(e.shape,o);return f.length>0&&(p=zt(p,f)),Q(p,e.shape)},c=()=>{let l=Tt(De(e),De(r)),p=tn(nt(n,Bt(e,l))),f=xn(r.shape,o);return f.length>0&&(p=zt(p,f)),Q(p,r.shape)};return{a:s,b:c}}};let MW={kernelName:su,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>Bt(n,Tt(De($t(e,"float32")),1))}}};let BW={kernelName:iu,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>Bt(n,Dt(Et(1),De($t(e,"float32"))))}}};function zW(n,t,e,r,o=[1,1,1],s,c){let l=M(n,"dy","avgPool3dBackprop"),p=M(t,"input","avgPool3dBackprop"),f=l,m=p,y=!1;p.rank===4&&(y=!0,f=Q(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),m=Q(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),_(f.rank===5,()=>`Error in avgPool3dBackprop: dy must be rank 5 but got rank ${f.rank}.`),_(m.rank===5,()=>`Error in avgPool3dBackprop: input must be rank 5 but got rank ${m.rank}.`),_(fn(r,o),()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${o}'`),c!=null&&_(gt(s),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${c} but got pad ${s}.`);let b=S=>{let D=tp(m.shape,e,r,o,s,c);return S.avgPool3dBackprop(f,m,D)},v={dy:f,input:m},T={filterSize:e,strides:r,dilations:o,pad:s,dimRoundingMode:c},N=X.runKernelFunc(b,v,null,nN,T);return y?Q(N,[N.shape[1],N.shape[2],N.shape[3],N.shape[4]]):N}let WW=j({avgPool3dBackprop_:zW});let VW={kernelName:Gb,inputsToSave:["x"],gradFunc:(n,t,e)=>{let[r]=t,{filterSize:o,strides:s,dilations:c,pad:l,dimRoundingMode:p}=e,f=c==null?[1,1,1]:c;return{x:()=>WW(n,r,o,s,f,l,p)}}};function GW(n,t,e,r,o){let s=M(n,"dy","avgPoolBackprop"),c=M(t,"input","avgPoolBackprop");_(c.rank===s.rank,()=>`Rank of input (${c.rank}) does not match rank of dy (${s.rank})`);let l=c,p=s,f=!1;c.rank===3&&(f=!0,l=Q(c,[1,c.shape[0],c.shape[1],c.shape[2]]),p=Q(s,[1,s.shape[0],s.shape[1],s.shape[2]])),_(p.rank===4,()=>`Error in avgPoolBackprop: dy must be rank 4 but got rank ${p.rank}.`),_(l.rank===4,()=>`Error in avgPoolBackprop: input must be rank 4 but got rank ${l.rank}.`);let m=T=>{let N=Kn(l.shape,e,r,1,o);return T.avgPoolBackprop(p,l,N)},y={dy:p,input:l},b={filterSize:e,strides:r,pad:o},v=X.runKernelFunc(m,y,null,af,b);return f?Q(v,[v.shape[1],v.shape[2],v.shape[3]]):v}let UW=j({avgPoolBackprop_:GW});let qW={kernelName:au,inputsToSave:["x"],gradFunc:(n,t,e)=>{let[r]=t,{filterSize:o,strides:s,pad:c}=e;return{x:()=>UW(n,r,o,s,c)}}};let HW={kernelName:cf,inputsToSave:["a","b"],gradFunc:(n,t,e)=>{let[r,o]=t,{transposeA:s,transposeB:c}=e;return!s&&!c?{a:()=>ge(n,o,!1,!0),b:()=>ge(r,n,!0,!1)}:!s&&c?{a:()=>ge(n,o,!1,!1),b:()=>ge(n,r,!0,!1)}:s&&!c?{a:()=>ge(o,n,!1,!0),b:()=>ge(r,n,!1,!1)}:{a:()=>ge(o,n,!0,!0),b:()=>ge(n,r,!0,!0)}}};let jW={kernelName:Ub,gradFunc:(n,t,e)=>{let{blockShape:r,crops:o}=e;return{x:()=>up(n,r,o)}}};let KW={kernelName:qb,gradFunc:(n,t,e)=>{let r=e,o=r.inputShape,s=r.shape,c=Array.from(s);for(let p=o.length-1;p>=0;p--)if(o[p]===s[p])c[p]=1;else if(o[p]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);let l=[];for(let p=0;p<c.length;p++)c[p]>1&&l.push(p);return{x:()=>zt(n,l,!0)}}};let XW={kernelName:cc,gradFunc:n=>({x:()=>n.clone()})};let YW={kernelName:cu,gradFunc:n=>({x:()=>re(n)})};let JW={kernelName:lu,inputsToSave:["x"],gradFunc:(n,t,e)=>{let[r]=t,{clipValueMin:o,clipValueMax:s}=e;return{x:()=>Xn(Yr(ds(r,o),ai(r,s)),n,re(n))}}};let ZW={kernelName:uu,saveAllInputs:!0,gradFunc:(n,t,e)=>{let r=t.map(p=>p.shape),{axis:o}=e,s=Vt(o,t[0].shape)[0],c=r.map(p=>p[s]),l=Tr(n,c,s);return l.map(p=>()=>p)}};let QW={kernelName:uf,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{let[r,o]=t,{dilations:s,strides:c,pad:l,dataFormat:p}=e;return _(oi(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>mw(r.shape,n,o,c,l,p),filter:()=>Uw(r,n,o.shape,c,l,p)}}};let t4={kernelName:pf,inputsToSave:["dy","filter"],gradFunc:(n,t,e)=>{let[r,o]=t,{strides:s,pad:c,dataFormat:l,dimRoundingMode:p}=e;return{dy:()=>fs(n,o,s,c,l,1,p),filter:()=>Uw(n,r,o.shape,s,c,l,p)}}};function e4(n,t,e,r,o){let s=n;n.rank===4&&(s=Q(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let c=t;c.rank===4&&(c=Q(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),_(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),_(c.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${c.shape}.`),_(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),_(s.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${e[3]}.`),_(c.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${c.shape[4]}) must match output depth for filter (${e[4]}).`);let l=m=>{let y=1,b=ri(s.shape,e,r,y,o);return m.conv3dDerFilter(s,c,b)},p={x:s,dy:c},f={strides:r,pad:o,filterShape:e};return X.runKernelFunc(l,p,null,jb,f)}let n4=j({conv3DBackpropFilter_:e4});let r4={kernelName:hf,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{let{dilations:r,strides:o,pad:s}=e;_(oi(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);let[c,l]=t;return{x:()=>__(c.shape,n,l,o,s),filter:()=>n4(c,n,l.shape,o,s)}}};let o4={kernelName:lc,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>nt(tn(kd($t(e,"float32"))),n)}}};let s4={kernelName:pu,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>nt(Nd($t(e,"float32")),n)}}};let i4={kernelName:Xb,inputsToSave:["x"],gradFunc:(n,t,e)=>{let[r]=t,{axis:o,exclusive:s,reverse:c}=e;return{x:()=>{let l=ir([o],r.rank),p=pd(n,o,s,!c);return l!=null&&(p=Kt(p,l)),p}}}};let a4={kernelName:ff,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{let{dilations:r,strides:o,pad:s,dimRoundingMode:c}=e,l=r==null?[1,1]:r;_(oi(l),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${l}'`);let[p,f]=t;return _(p.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${p.rank}.`),_(f.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${f.rank}.`),_(p.shape[3]===f.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`),_(fn(o,l),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${l}'.`),c!=null&&_(gt(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${c} but got pad ${s}.`),{x:()=>aC(p.shape,n,f,o,s,r,c),filter:()=>iC(p,n,f.shape,o,s,r,c)}}};let c4={kernelName:df,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{let[r,o]=t,s={x:r,filter:o,dy:n},c={x:r,filter:o,dy:n};return{x:()=>X.runKernel(mf,s,e),filter:()=>X.runKernel(gf,c,e)}}};let l4={kernelName:uc,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t,o=le(e.shape,r.shape),s=()=>{let l=Bt(n,$t(r,"float32")),p=xn(e.shape,o);return p.length>0?Q(zt(l,p),e.shape):l},c=()=>{let l=nt(n,$t(e,"float32")),p=xn(r.shape,o);p.length>0&&(l=Q(zt(l,p),r.shape));let f=De(r);return tn(Bt(l,$t(f,"float32")))};return{a:s,b:c}}};let u4={kernelName:hu,outputsToSave:[!0],gradFunc:(n,t)=>{let[e]=t,r=s=>s.eluDer(n,e),o={dy:n,y:e};return{x:()=>X.runKernelFunc(r,o,null,iN)}}};let p4={kernelName:fu,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t,r=nt(Ar(tn(De(e))),2/Math.sqrt(Math.PI));return{x:()=>nt(n,r)}}};let h4={kernelName:du,outputsToSave:[!0],gradFunc:(n,t)=>{let[e]=t;return{x:()=>nt(n,e)}}};let f4={kernelName:mu,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>nt(n,Ar(e))}}};let d4={kernelName:gu,gradFunc:n=>({x:()=>re(n)})};let m4={kernelName:Qb,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t,o=le(e.shape,r.shape),s=()=>{let l=Bt(n,$t(r,"float32")),p=xn(e.shape,o);return p.length>0?Q(zt(l,p),e.shape):l},c=()=>{let l=nt(n,$t(e,"float32")),p=xn(r.shape,o);p.length>0&&(l=Q(zt(l,p),r.shape));let f=De(r);return tn(Bt(l,$t(f,"float32")))};return{a:s,b:c}}};let g4={kernelName:yu,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,t,e)=>{let{varianceEpsilon:r}=e,[o,s,c,l]=t,p=l==null?Et(1):l,f=xn(s.shape,o.shape),m=[];if(s.rank===1){for(let E=0;E<o.shape.length-1;++E)m.push(o.shape[E]);m.push(1)}let y=Dt(o,s),b=nt(n,p),v=vd(Tt(c,Et(r))),T=nt(nt(nt(v,v),v),Et(-.5)),N=()=>s.rank===1?Q(nt(nt(n,ii(Q(v,[1,1,1,s.shape[0]]),m)),p),o.shape):Q(nt(nt(n,v),p),o.shape),S=()=>{let E=nt(nt(v,Et(-1)),b);return s.rank===1&&(E=zt(E,f)),Q(E,s.shape)},D=()=>{let E=nt(nt(T,y),b);return s.rank===1&&(E=zt(E,f)),Q(E,s.shape)},I=()=>{let E=nt(y,v),L=nt(n,E);return s.rank===1&&(L=zt(L,f)),Q(L,s.shape)},P=()=>{let E=n;return s.rank===1&&(E=zt(E,f)),Q(E,s.shape)};return{x:N,mean:S,variance:D,scale:I,offset:P}}};let y4={kernelName:tx,inputsToSave:["x","indices"],gradFunc:(n,t,e)=>{let[r,o]=t,{axis:s}=e,c=Vt(s,r.shape)[0],l=()=>{let p=r.shape,f=o.size,m=p.slice(0,c),y=m.length,b=p.slice(s,p.length).slice(1),v=b.length,T=kC(0,y),N=kC(y+1,y+1+v),S=NC([m,[f],b]),D=Q(n,S),I=Q(o,[f]),P=NC([[y],T,N]),E=Kt(D,P),L=zw(E,I,r.shape[c]),B=Ju(P);return L=Kt(L,B),L};return{x:l,indices:()=>o}}};function kC(n,t){let e=[];for(let r=n;r<t;++r)e.push(r);return e}function NC(n){let t=[];for(let e=0;e<n.length;++e)for(let r=0;r<n[e].length;++r)t.push(n[e][r]);return t}let b4={kernelName:ex,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t;return{a:()=>re(e),b:()=>re(r)}}};let x4={kernelName:bu,gradFunc:n=>({x:()=>$t(n,"float32")})};let w4={kernelName:xu,gradFunc:n=>({x:()=>re(n)})};let v4={kernelName:wu,gradFunc:n=>({x:()=>re(n)})};let T4={kernelName:vu,gradFunc:n=>({x:()=>re(n)})};let k4={kernelName:ku,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>Bt(n,Tt(e,1))}}};let N4={kernelName:Tu,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>Bt(n,$t(e,"float32"))}}};let _4={kernelName:nx,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,t,e)=>{let[r]=t,{axis:o}=e;return{logits:()=>{let s=!0,c=Ar(r);return Dt(n,nt(zt(n,o,s),c))}}}};function C4(n,t,e,r=5,o=1,s=1,c=.5){let l=m=>m.LRNGrad(e,n,t,r,o,s,c),p={x:n,y:t,dy:e},f={depthRadius:r,bias:o,alpha:s,beta:c};return X.runKernelFunc(l,p,null,mN,f)}let S4=j({localResponseNormalizationBackprop_:C4});let $4={kernelName:rx,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{let[r,o]=t,{depthRadius:s,bias:c,alpha:l,beta:p}=e;return{x:()=>S4(r,o,n,s,c,l,p)}}};function _C(n,t,e,r){return t.rank<e.rank&&(t=Q(t,Rn(t.shape,r))),n.rank<e.rank&&(n=Q(n,Rn(n.shape,r))),{x:()=>{let o=nt(n,$t(po(e,t),n.dtype));return o}}}let CC={kernelName:Nu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{let r=e,{reductionIndices:o}=r,s=t[0],c=t[1],l=Vt(o,s.shape),p=_C(n,c,s,l);return{x:()=>p.x()}}};let I4={kernelName:ox,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t,o=()=>nt(n,$t(ds(e,r),"float32")),s=()=>nt(n,$t(ap(e,r),"float32"));return{a:o,b:s}}};function E4(n,t,e,r,o,s=[1,1,1],c,l){let p=M(n,"dy","maxPool3dBackprop"),f=M(t,"input","maxPool3dBackprop"),m=M(e,"output","maxPool3dBackprop"),y=p,b=f,v=m,T=!1;f.rank===4&&(T=!0,y=Q(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]]),b=Q(f,[1,f.shape[0],f.shape[1],f.shape[2],f.shape[3]]),v=Q(m,[1,m.shape[0],m.shape[1],m.shape[2],m.shape[3]])),_(y.rank===5,()=>`Error in maxPool3dBackprop: dy must be rank 5 but got rank ${y.rank}.`),_(b.rank===5,()=>`Error in maxPool3dBackprop: input must be rank 5 but got rank ${b.rank}.`),_(v.rank===5,()=>`Error in maxPool3dBackprop: output must be rank 5 but got rank ${v.rank}.`),_(fn(o,s),()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${o} and dilations '${s}'`),l!=null&&_(gt(c),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${l} but got pad ${c}.`);let N=P=>{let E=tp(b.shape,r,o,s,c,l);return P.maxPool3dBackprop(y,b,v,E)},S={dy:y,input:b,output:v},D={filterSize:r,strides:o,dilations:s,pad:c,dimRoundingMode:l},I=X.runKernelFunc(N,S,null,gN,D);return T?Q(I,[I.shape[1],I.shape[2],I.shape[3],I.shape[4]]):I}let D4=j({maxPool3dBackprop_:E4});let A4={kernelName:sx,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{let[r,o]=t,{filterSize:s,strides:c,dilations:l,pad:p,dimRoundingMode:f}=e,m=l==null?[1,1,1]:l;return{x:()=>D4(n,r,o,s,c,m,p,f)}}};function F4(n,t,e,r,o,s,c){let l=M(n,"dy","maxPoolBackprop"),p=M(t,"input","maxPoolBackprop"),f=M(e,"output","maxPoolBackprop");_(p.rank===l.rank,()=>`Rank of input (${p.rank}) does not match rank of dy (${l.rank})`),_(l.rank===4,()=>`Error in maxPoolBackprop: dy must be rank 4 but got rank ${l.rank}.`),_(p.rank===4,()=>`Error in maxPoolBackprop: input must be rank 4 but got rank ${p.rank}.`),c!=null&&_(gt(s),()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${c} but got pad ${s}.`);let m=v=>{let T=Kn(p.shape,r,o,1,s,c);return v.maxPoolBackprop(l,p,f,T)},y={dy:l,input:p,output:f},b={filterSize:r,strides:o,pad:s,dimRoundingMode:c};return X.runKernelFunc(m,y,null,Tf,b)}let R4=j({maxPoolBackprop_:F4});let P4={kernelName:_u,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{let[r,o]=t,{filterSize:s,strides:c,pad:l}=e;return{x:()=>R4(n,r,o,s,c,l)}}};let O4={kernelName:ax,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{let r=e,{axis:o}=r,[s,c]=t,l=Vt(o,s.shape),p=_C(n,c,s,l);return{x:()=>p.x()}}};let L4={kernelName:cx,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t,o=()=>nt(n,$t(ai(e,r),"float32")),s=()=>nt(n,$t(Fr(e,r),"float32"));return{a:o,b:s}}};let M4={kernelName:Cu,inputsToSave:["x"],gradFunc:(n,t,e)=>{let r=t[0],{paddings:o}=e,s=o.map(c=>c[0]);return{x:()=>ce(n,s,r.shape)}}};let B4={kernelName:lx,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t,o=le(e.shape,r.shape),s=()=>{let l=xn(e.shape,o);return l.length>0?Q(zt(n,l),e.shape):n},c=()=>{let l=nt(n,tn(Sc(Bt(e,r)))),p=xn(r.shape,o);return p.length>0?Q(zt(l,p),r.shape):l};return{a:s,b:c}}};let z4={kernelName:pc,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t,o=le(e.shape,r.shape),s=()=>{let l=nt(n,$t(r,"float32")),p=xn(e.shape,o);return p.length>0?Q(zt(l,p),e.shape):l},c=()=>{let l=nt(n,$t(e,"float32")),p=xn(r.shape,o);return p.length>0?Q(zt(l,p),r.shape):l};return{a:s,b:c}}};let W4={kernelName:ux,gradFunc:n=>({x:()=>tn(n)})};let V4={kernelName:fx,inputsToSave:["indices"],gradFunc:(n,t)=>{let e=t[0];return{indices:()=>xe(e.shape,"float32")}}};let G4={kernelName:hx,gradFunc:n=>({x:()=>re(n)})};let SC={kernelName:Cf,inputsToSave:["x"],gradFunc:(n,t,e)=>{let r=t[0],{paddings:o}=e,s=o.map(c=>c[0]);return{x:()=>ce(n,s,r.shape)}}};let U4={kernelName:dx,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,t)=>{let[e,r,o]=t,s=e,c=r,l=le(s.shape,c.shape),p=()=>{let m=$t(c,"float32"),y=nt(n,nt(m,fo(s,Dt(m,Et(1))))),b=xn(s.shape,l);return b.length>0&&(y=zt(y,b)),Q(y,s.shape)},f=()=>{let m=Fr(s,0),y=Xn(m,wr(s),re(s)),b=nt(n,nt(o,y)),v=xn(c.shape,l);return v.length>0&&(b=zt(b,v)),Q(b,c.shape)};return{a:p,b:f}}};let q4={kernelName:Sf,inputsToSave:["x","alpha"],gradFunc:(n,t)=>{let[e,r]=t,o=Fr(e,0);return{x:()=>Xn(o,n,nt(n,r)),alpha:()=>{let s=Xn(o,re(n),nt(n,e)),c=xn(r.shape,n.shape);return c.length>0&&(s=zt(s,c)),Q(s,r.shape)}}}};let H4={kernelName:$u,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>Bt(n,tn(De(e)))}}};let j4={kernelName:Du,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t,r=nt(ai(e,6),Pc(e));return{x:()=>nt(n,$t(r,"float32"))}}};let K4={kernelName:Iu,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>nt(n,$t(Pc(e),"float32"))}}};let X4={kernelName:Eu,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>Q(n,e.shape)}}};let Y4={kernelName:gx,inputsToSave:["images"],gradFunc:(n,t,e)=>{let[r]=t,o=l=>{let{alignCorners:p}=e;return l.resizeBilinearBackprop(n,r,p)},s={images:r},c=()=>X.runKernelFunc(o,s,null,wN,e);return{images:c}}};let J4={kernelName:mx,inputsToSave:["images"],gradFunc:(n,t,e)=>{let[r]=t,o=l=>{let{alignCorners:p}=e;return l.resizeNearestNeighborBackprop(n,r,p)},s={images:r},c=()=>X.runKernelFunc(o,s,null,xN,e);return{images:c}}};let Z4={kernelName:yx,gradFunc:(n,t,e)=>{let{dims:r}=e,o=Vt(r,n.shape);return{x:()=>Rr(n,o)}}};let Q4={kernelName:Au,gradFunc:n=>({x:()=>re(n)})};let tV={kernelName:Fu,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>tn(Bt(n,nt(fo(e,1.5),2)))}}};let eV={kernelName:bx,inputsToSave:["condition"],gradFunc:(n,t)=>{let[e]=t;return{condition:()=>$t(re(e),"float32"),t:()=>nt(n,$t(e,n.dtype)),e:()=>nt(n,$t(cp(e),n.dtype))}}};let nV={kernelName:Ru,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>{let r=Fr(e,Et(0)),o=Et(zd),s=Et(Wd),c=nt(n,s),l=nt(nt(n,o),Ar($t(e,"float32")));return Xn(r,c,l)}}}};let rV={kernelName:Lu,outputsToSave:[!0],gradFunc:(n,t)=>{let[e]=t;return{x:()=>nt(n,nt(e,Dt(Et(1),e)))}}};let oV={kernelName:Ou,gradFunc:n=>({x:()=>re(n)})};let sV={kernelName:hc,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>nt(op($t(e,"float32")),n)}}};let iV={kernelName:Pu,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>nt(ud($t(e,"float32")),n)}}};let aV={kernelName:If,inputsToSave:["x"],gradFunc:(n,t,e)=>{let[r]=t,{begin:o,size:s}=e,c=r.shape,[l,p]=Qf(r,o,s),f=[];for(let m=0;m<n.rank;m++)f.push([l[m],c[m]-l[m]-p[m]]);return{x:()=>Wo(n,f)}}};let cV={kernelName:vx,outputsToSave:[!0],gradFunc:(n,t,e)=>{let[r]=t,{dim:o}=e,s=!0,c=nt(n,r);return{logits:()=>Dt(c,nt(zt(c,[o],s),r))}}};let lV={kernelName:Mu,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>nt(n,Bo(e))}}};let $C={kernelName:Ef,gradFunc:(n,t,e)=>{let{blockShape:r,paddings:o}=e;return{x:()=>np(n,r,o)}}};let IC={kernelName:wx,gradFunc:(n,t,e)=>{let{axis:r}=e;return{x:()=>Qe(n,r)}}};let uV={kernelName:Bu,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>Bt(n,nt(Pn($t(e,"float32")),2))}}};let pV={kernelName:Df,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>nt(n,nt($t(e,"float32"),2))}}};let hV={kernelName:fc,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t,o=Et(2),s=()=>nt(n,nt(o,Dt(e,r))),c=()=>nt(n,nt(o,Dt(r,e)));return{a:s,b:c}}};let fV={kernelName:Vu,gradFunc:n=>({x:()=>re(n)})};let dV={kernelName:dc,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t,o=le(e.shape,r.shape),s=()=>{let l=n,p=xn(e.shape,o);return p.length>0&&(l=zt(l,p)),Q(l,e.shape)},c=()=>{let l=n,p=xn(r.shape,o);return p.length>0&&(l=zt(l,p)),Q(tn(l),r.shape)};return{a:s,b:c}}};let mV={kernelName:xx,inputsToSave:["x"],gradFunc:(n,t,e)=>{let[r]=t,o=r.shape.slice(),{axis:s}=e,c=Vt(s,r.shape);c.forEach(f=>{o[f]=1});let l=Q(n,o),p=nt(l,ho(r.shape,"float32"));return{x:()=>p}}};let gV={kernelName:mc,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>Bt(n,De(op(e)))}}};let yV={kernelName:zu,outputsToSave:[!0],gradFunc:(n,t)=>{let[e]=t;return{x:()=>nt(Dt(Et(1),De(e)),n)}}};let bV={kernelName:Tx,inputsToSave:["x"],gradFunc:(n,t,e)=>{let[r]=t,{reps:o}=e,s=()=>{let c=re(r);if(r.rank===1)for(let l=0;l<o[0];++l)c=Tt(c,ce(n,[l*r.shape[0]],[r.shape[0]]));else if(r.rank===2)for(let l=0;l<o[0];++l)for(let p=0;p<o[1];++p)c=Tt(c,ce(n,[l*r.shape[0],p*r.shape[1]],[r.shape[0],r.shape[1]]));else if(r.rank===3)for(let l=0;l<o[0];++l)for(let p=0;p<o[1];++p)for(let f=0;f<o[2];++f)c=Tt(c,ce(n,[l*r.shape[0],p*r.shape[1],f*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else if(r.rank===4)for(let l=0;l<o[0];++l)for(let p=0;p<o[1];++p)for(let f=0;f<o[2];++f)for(let m=0;m<o[3];++m)c=Tt(c,ce(n,[l*r.shape[0],p*r.shape[1],f*r.shape[2],m*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);return c};return{x:s}}};let xV={kernelName:Wu,gradFunc:(n,t,e)=>{let r=e,{perm:o}=r,s=Ju(o);return{x:()=>Kt(n,s)}}};let wV={kernelName:kx,gradFunc:(n,t,e)=>{let r=e,{axis:o}=r;return{value:()=>ur(n,o)}}};let vV={kernelName:Nx,inputsToSave:["segmentIds"],gradFunc:(n,t)=>{let[e]=t,r=()=>TV(n,e);return{x:r}}};function TV(n,t){let e=Xr(t,re(t)),r=$c(n,e),o=ds(t,Et(0,"int32")),s=r.rank-o.rank;for(let l=0;l<s;++l)o=cr(o,l+1);o=Yr(o,ho(r.shape,"bool"));let c=re(r);return Xn(o,r,c)}let kV={kernelName:_x,gradFunc:n=>({x:()=>re(n)})};let NV=[$W,IW,EW,DW,AW,FW,RW,PW,OW,LW,MW,BW,VW,qW,HW,jW,KW,XW,YW,JW,ZW,t4,QW,r4,o4,s4,i4,a4,c4,l4,u4,p4,h4,f4,m4,d4,g4,y4,b4,x4,w4,v4,T4,k4,N4,_4,$4,CC,CC,I4,A4,P4,O4,L4,M4,B4,z4,W4,V4,G4,SC,SC,U4,q4,H4,j4,K4,X4,Y4,J4,Z4,Q4,tV,eV,nV,rV,oV,sV,iV,aV,cV,lV,$C,$C,IC,IC,uV,hV,pV,fV,dV,mV,gV,yV,bV,xV,wV,vV,kV];for(let n of NV)_N(n);ot.prototype.abs=function(){return this.throwIfDisposed(),bn(this)};ot.prototype.acos=function(){return this.throwIfDisposed(),nw(this)};ot.prototype.acosh=function(){return this.throwIfDisposed(),rw(this)};ot.prototype.addStrict=function(n){return this.throwIfDisposed(),H_(this,n)};ot.prototype.add=function(n){return this.throwIfDisposed(),Tt(this,n)};ot.prototype.all=function(n,t){return this.throwIfDisposed(),rd(this,n,t)};ot.prototype.any=function(n,t){return this.throwIfDisposed(),Zu(this,n,t)};ot.prototype.argMax=function(n){return this.throwIfDisposed(),Qu(this,n)};ot.prototype.argMin=function(n){return this.throwIfDisposed(),sw(this,n)};ot.prototype.asScalar=function(){return this.throwIfDisposed(),_(this.size===1,()=>"The array must have only 1 element."),Q(this,[])};ot.prototype.asType=function(n){return this.throwIfDisposed(),$t(this,n)};ot.prototype.as1D=function(){return this.throwIfDisposed(),Q(this,[this.size])};ot.prototype.as2D=function(n,t){return this.throwIfDisposed(),Q(this,[n,t])};ot.prototype.as3D=function(n,t,e){return this.throwIfDisposed(),Q(this,[n,t,e])};ot.prototype.as4D=function(n,t,e,r){return this.throwIfDisposed(),Q(this,[n,t,e,r])};ot.prototype.as5D=function(n,t,e,r,o){return this.throwIfDisposed(),Q(this,[n,t,e,r,o])};ot.prototype.asin=function(){return this.throwIfDisposed(),iw(this)};ot.prototype.asinh=function(){return this.throwIfDisposed(),aw(this)};ot.prototype.atan=function(){return this.throwIfDisposed(),cw(this)};ot.prototype.atan2=function(n){return this.throwIfDisposed(),lw(this,n)};ot.prototype.atanh=function(){return this.throwIfDisposed(),uw(this)};ot.prototype.avgPool=function(n,t,e,r){return this.throwIfDisposed(),ep(this,n,t,e,r)};ot.prototype.batchToSpaceND=function(n,t){return this.throwIfDisposed(),np(this,n,t)};ot.prototype.batchNorm=function(n,t,e,r,o){return this.throwIfDisposed(),ea(this,n,t,e,r,o)};ot.prototype.broadcastTo=function(n){return this.throwIfDisposed(),rp(this,n)};ot.prototype.cast=function(n){return this.throwIfDisposed(),$t(this,n)};ot.prototype.ceil=function(){return this.throwIfDisposed(),dw(this)};ot.prototype.clipByValue=function(n,t){return this.throwIfDisposed(),ar(this,n,t)};ot.prototype.concat=function(n,t){return this.throwIfDisposed(),n instanceof ot&&(n=[n]),Qe([this,...n],t)};ot.prototype.conv1d=function(n,t,e,r,o,s){return this.throwIfDisposed(),cd(this,n,t,e,r,o,s)};ot.prototype.conv2dTranspose=function(n,t,e,r,o){return this.throwIfDisposed(),ld(this,n,t,e,r,o)};ot.prototype.conv2d=function(n,t,e,r,o,s){return this.throwIfDisposed(),fs(this,n,t,e,r,o,s)};ot.prototype.cos=function(){return this.throwIfDisposed(),op(this)};ot.prototype.cosh=function(){return this.throwIfDisposed(),ud(this)};ot.prototype.cumsum=function(n,t,e){return this.throwIfDisposed(),pd(this,n,t,e)};ot.prototype.depthToSpace=function(n,t){return this.throwIfDisposed(),yw(this,n,t)};ot.prototype.depthwiseConv2D=function(n,t,e,r,o,s){return yn("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),na(this,n,t,e,r,o,s)};ot.prototype.depthwiseConv2d=function(n,t,e,r,o,s){return this.throwIfDisposed(),na(this,n,t,e,r,o,s)};ot.prototype.dilation2d=function(n,t,e,r,o){return this.throwIfDisposed(),bw(this,n,t,e,r,o)};ot.prototype.divNoNan=function(n){return this.throwIfDisposed(),xw(this,n)};ot.prototype.divStrict=function(n){return this.throwIfDisposed(),j_(this,n)};ot.prototype.div=function(n){return this.throwIfDisposed(),Bt(this,n)};ot.prototype.dot=function(n){return this.throwIfDisposed(),C_(this,n)};ot.prototype.elu=function(){return this.throwIfDisposed(),_c(this)};ot.prototype.equalStrict=function(n){return this.throwIfDisposed(),z_(this,n)};ot.prototype.equal=function(n){return this.throwIfDisposed(),po(this,n)};ot.prototype.erf=function(){return this.throwIfDisposed(),ww(this)};ot.prototype.exp=function(){return this.throwIfDisposed(),Ar(this)};ot.prototype.expandDims=function(n){return this.throwIfDisposed(),cr(this,n)};ot.prototype.expm1=function(){return this.throwIfDisposed(),vw(this)};ot.prototype.fft=function(){return this.throwIfDisposed(),dp(this)};ot.prototype.flatten=function(){return this.throwIfDisposed(),Q(this,[this.size])};ot.prototype.floor=function(){return this.throwIfDisposed(),Sc(this)};ot.prototype.floorDiv=function(n){return this.throwIfDisposed(),nd(this,n)};ot.prototype.gather=function(n,t){return this.throwIfDisposed(),$c(this,n,t)};ot.prototype.greaterEqualStrict=function(n){return this.throwIfDisposed(),W_(this,n)};ot.prototype.greaterEqual=function(n){return this.throwIfDisposed(),ds(this,n)};ot.prototype.greaterStrict=function(n){return this.throwIfDisposed(),V_(this,n)};ot.prototype.greater=function(n){return this.throwIfDisposed(),Fr(this,n)};ot.prototype.ifft=function(){return this.throwIfDisposed(),Rc(this)};ot.prototype.irfft=function(){return this.throwIfDisposed(),Sd(this)};ot.prototype.isFinite=function(){return this.throwIfDisposed(),$_(this)};ot.prototype.isInf=function(){return this.throwIfDisposed(),I_(this)};ot.prototype.isNaN=function(){return this.throwIfDisposed(),E_(this)};ot.prototype.leakyRelu=function(n){return this.throwIfDisposed(),fd(this,n)};ot.prototype.lessEqualStrict=function(n){return this.throwIfDisposed(),G_(this,n)};ot.prototype.lessEqual=function(n){return this.throwIfDisposed(),ai(this,n)};ot.prototype.lessStrict=function(n){return this.throwIfDisposed(),U_(this,n)};ot.prototype.less=function(n){return this.throwIfDisposed(),ap(this,n)};ot.prototype.localResponseNormalization=function(n,t,e,r){return this.throwIfDisposed(),kw(this,n,t,e,r)};ot.prototype.logSigmoid=function(){return this.throwIfDisposed(),A_(this)};ot.prototype.logSoftmax=function(n){return this.throwIfDisposed(),gd(this,n)};ot.prototype.logSumExp=function(n,t){return this.throwIfDisposed(),_w(this,n,t)};ot.prototype.log=function(){return this.throwIfDisposed(),wr(this)};ot.prototype.log1p=function(){return this.throwIfDisposed(),dd(this)};ot.prototype.logicalAnd=function(n){return this.throwIfDisposed(),Yr(this,n)};ot.prototype.logicalNot=function(){return this.throwIfDisposed(),cp(this)};ot.prototype.logicalOr=function(n){return this.throwIfDisposed(),yd(this,n)};ot.prototype.logicalXor=function(n){return this.throwIfDisposed(),F_(this,n)};ot.prototype.matMul=function(n,t,e){return this.throwIfDisposed(),ge(this,n,t,e)};ot.prototype.maxPool=function(n,t,e,r){return this.throwIfDisposed(),lp(this,n,t,e,r)};ot.prototype.max=function(n,t){return this.throwIfDisposed(),lr(this,n,t)};ot.prototype.maximumStrict=function(n){return this.throwIfDisposed(),K_(this,n)};ot.prototype.maximum=function(n){return this.throwIfDisposed(),Xr(this,n)};ot.prototype.mean=function(n,t){return this.throwIfDisposed(),en(this,n,t)};ot.prototype.min=function(n,t){return this.throwIfDisposed(),Ec(this,n,t)};ot.prototype.minimumStrict=function(n){return this.throwIfDisposed(),X_(this,n)};ot.prototype.minimum=function(n){return this.throwIfDisposed(),oa(this,n)};ot.prototype.mirrorPad=function(n,t){return this.throwIfDisposed(),Sw(this,n,t)};ot.prototype.modStrict=function(n){return this.throwIfDisposed(),Y_(this,n)};ot.prototype.mod=function(n){return this.throwIfDisposed(),bd(this,n)};ot.prototype.mulStrict=function(n){return this.throwIfDisposed(),J_(this,n)};ot.prototype.mul=function(n){return this.throwIfDisposed(),nt(this,n)};ot.prototype.neg=function(){return this.throwIfDisposed(),tn(this)};ot.prototype.norm=function(n,t,e){return this.throwIfDisposed(),Ed(this,n,t,e)};ot.prototype.notEqualStrict=function(n){return this.throwIfDisposed(),q_(this,n)};ot.prototype.notEqual=function(n){return this.throwIfDisposed(),ci(this,n)};ot.prototype.oneHot=function(n,t=1,e=0){return this.throwIfDisposed(),Zi(this,n,t,e)};ot.prototype.onesLike=function(){return this.throwIfDisposed(),qn(this)};ot.prototype.pad=function(n,t){return this.throwIfDisposed(),Wo(this,n,t)};ot.prototype.pool=function(n,t,e,r,o){return this.throwIfDisposed(),O_(this,n,t,e,r,o)};ot.prototype.powStrict=function(n){return this.throwIfDisposed(),Z_(this,n)};ot.prototype.pow=function(n){return this.throwIfDisposed(),fo(this,n)};ot.prototype.prelu=function(n){return this.throwIfDisposed(),pp(this,n)};ot.prototype.prod=function(n,t){return this.throwIfDisposed(),wd(this,n,t)};ot.prototype.reciprocal=function(){return this.throwIfDisposed(),Dw(this)};ot.prototype.relu=function(){return this.throwIfDisposed(),Vo(this)};ot.prototype.relu6=function(){return this.throwIfDisposed(),Aw(this)};ot.prototype.reshapeAs=function(n){return this.throwIfDisposed(),Q(this,n.shape)};ot.prototype.reshape=function(n){return this.throwIfDisposed(),Q(this,n)};ot.prototype.resizeBilinear=function(n,t){return this.throwIfDisposed(),hC(this,n,t)};ot.prototype.resizeNearestNeighbor=function(n,t){return this.throwIfDisposed(),fC(this,n,t)};ot.prototype.reverse=function(n){return this.throwIfDisposed(),Rr(this,n)};ot.prototype.rfft=function(){return this.throwIfDisposed(),mp(this)};ot.prototype.round=function(){return this.throwIfDisposed(),Fw(this)};ot.prototype.rsqrt=function(){return this.throwIfDisposed(),vd(this)};ot.prototype.selu=function(){return this.throwIfDisposed(),Td(this)};ot.prototype.separableConv2d=function(n,t,e,r,o,s){return this.throwIfDisposed(),Rw(this,n,t,e,r,o,s)};ot.prototype.sigmoid=function(){return this.throwIfDisposed(),Bo(this)};ot.prototype.sign=function(){return this.throwIfDisposed(),Pw(this)};ot.prototype.sin=function(){return this.throwIfDisposed(),kd(this)};ot.prototype.sinh=function(){return this.throwIfDisposed(),Nd(this)};ot.prototype.slice=function(n,t){return this.throwIfDisposed(),ce(this,n,t)};ot.prototype.softmax=function(n){return this.throwIfDisposed(),ca(this,n)};ot.prototype.softplus=function(){return this.throwIfDisposed(),Ic(this)};ot.prototype.spaceToBatchND=function(n,t){return this.throwIfDisposed(),up(this,n,t)};ot.prototype.split=function(n,t){return this.throwIfDisposed(),Tr(this,n,t)};ot.prototype.sqrt=function(){return this.throwIfDisposed(),Pn(this)};ot.prototype.square=function(){return this.throwIfDisposed(),De(this)};ot.prototype.squaredDifference=function(n){return this.throwIfDisposed(),gp(this,n)};ot.prototype.squaredDifferenceStrict=function(n){return this.throwIfDisposed(),Q_(this,n)};ot.prototype.squeeze=function(n){return this.throwIfDisposed(),li(this,n)};ot.prototype.stack=function(n,t){this.throwIfDisposed();let e=n instanceof ot?[this,n]:[this,...n];return ur(e,t)};ot.prototype.step=function(n){return this.throwIfDisposed(),Pc(this,n)};ot.prototype.stridedSlice=function(n,t,e,r,o,s,c,l){return this.throwIfDisposed(),Lw(this,n,t,e,r,o,s,c,l)};ot.prototype.subStrict=function(n){return this.throwIfDisposed(),tC(this,n)};ot.prototype.sub=function(n){return this.throwIfDisposed(),Dt(this,n)};ot.prototype.sum=function(n,t){return this.throwIfDisposed(),zt(this,n,t)};ot.prototype.tan=function(){return this.throwIfDisposed(),Mw(this)};ot.prototype.tanh=function(){return this.throwIfDisposed(),Nc(this)};ot.prototype.tile=function(n){return this.throwIfDisposed(),ii(this,n)};ot.prototype.toBool=function(){return this.throwIfDisposed(),$t(this,"bool")};ot.prototype.toFloat=function(){return this.throwIfDisposed(),$t(this,"float32")};ot.prototype.toInt=function(){return this.throwIfDisposed(),$t(this,"int32")};ot.prototype.topk=function(n,t){return this.throwIfDisposed(),Bw(this,n,t)};ot.prototype.transpose=function(n){return this.throwIfDisposed(),Kt(this,n)};ot.prototype.unique=function(n){return this.throwIfDisposed(),$d(this,n)};ot.prototype.unsortedSegmentSum=function(n,t){return this.throwIfDisposed(),zw(this,n,t)};ot.prototype.unstack=function(n){return this.throwIfDisposed(),mo(this,n)};ot.prototype.where=function(n,t){return this.throwIfDisposed(),Xn(n,this,t)};ot.prototype.zerosLike=function(){return this.throwIfDisposed(),re(this)};let Vd;function wn(){return Vd==null&&(Vd=m_().epsilon()),Vd}function vot(n){Vd=n}function go(){return"channelsLast"}class Go extends Error{constructor(t){super(t);Object.setPrototypeOf(this,Go.prototype)}}class Jr extends Error{constructor(t){super(t);Object.setPrototypeOf(this,Jr.prototype)}}class Y extends Error{constructor(t){super(t);Object.setPrototypeOf(this,Y.prototype)}}class Ut extends Error{constructor(t){super(t);Object.setPrototypeOf(this,Ut.prototype)}}class cv extends Error{constructor(t){super(t);Object.setPrototypeOf(this,cv.prototype)}}class EC extends Error{constructor(t){super(t);Object.setPrototypeOf(this,EC.prototype)}}function pa(n,t){if(Array.isArray(n)){let e=[];for(let r=0;r<t;r++)e=e.concat(n);return e}else{let e=new Array(t);return e.fill(n),e}}function Pr(n,t){if(!n)throw new cv(t)}function DC(n,t){let e=0;for(let r of n)r===t&&e++;return e}function pr(n){return n.length===1?n[0]:n}function ze(n){return Array.isArray(n)?n:[n]}function Tot(n){let t=ze(n),e="";for(let r of t){if(r.id==null)throw new Y(`Object ${r} passed to objectListUid without an id`);e!==""&&(e=e+", "),e=`${e}${Math.abs(r.id)}`}return e}function bs(n){let t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2"),e=t.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function ha(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let Zr={};function lv(n){if(n==null)return null;let t={};return t.className=n.getClassName(),t.config=n.getConfig(),t}function uv(n){if(n==null||typeof n!="object")return;if(Array.isArray(n))n.forEach(t=>uv(t));else{let t=Object.keys(n);for(let e of t){let r=n[e];r!=null&&typeof r=="object"&&(!Array.isArray(r)&&r.type==="ndarray"&&typeof r.value=="number"?n[e]=r.value:uv(r))}}}function Sp(n,t={},e={},r="object",o=!1){if(typeof n=="string"){let s=n,c;if(s in e)c=e[s];else if(s in Zr)c=Zr[s];else if(c=t[s],c==null)throw new Y(`Unknown ${r}: ${n}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return c}else{let s=n;if(s.className==null||s.config==null)throw new Y(`${r}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let c=s.className,l,p;if(c in e?[l,p]=e[c]:c in Zr?[l,p]=Zr.className:c in t&&([l,p]=t[c]),l==null)throw new Y(`Unknown ${r}: ${c}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(p!=null){let f={};for(let v of Object.keys(Zr))f[v]=Zr[v];for(let v of Object.keys(e))f[v]=e[v];let m=s.config;m.customObjects=f;let y=Object.assign({},Zr);for(let v of Object.keys(e))Zr[v]=e[v];uv(s.config);let b=p(l,s.config,e,o);return Zr=Object.assign({},y),b}else{let f=Object.assign({},Zr);for(let y of Object.keys(e))Zr[y]=e[y];let m=new l(s.config);return Zr=Object.assign({},f),m}}}function _V(n,t){return n<t?-1:n>t?1:0}function Gd(n,t){return-1*_V(n,t)}function kot(n){switch(n){case"float32":return"float32";default:throw new Y(`Invalid dtype: ${n}`)}}function Not(n,t){if(n==null||t==null)return n===t;if(n.length!==t.length)return!1;for(let e=0;e<n.length;++e)if(n[e]!==t[e])return!1;return!0}function hi(n){if(n==null)return n;let t=[];for(let e of n)t.indexOf(e)===-1&&t.push(e);return t}function CV(n){if(n==null)throw new Y(`Invalid value in obj: ${JSON.stringify(n)}`);for(let t in n)if(n.hasOwnProperty(t))return!1;return!0}function zc(n,t,e){if(e==null)return;if(n.indexOf(e)<0)throw new Y(`${e} is not a valid ${t}.  Valid values are ${n} or null/undefined.`)}function pv(n,t,e=0,r=Infinity){return Pr(e>=0),Pr(r>=e),Array.isArray(n)&&n.length>=e&&n.length<=r&&n.every(o=>typeof o===t)}function $n(n,t){Array.isArray(n)?(_(n.length>0,()=>`${t} is unexpectedly an empty array.`),n.forEach((e,r)=>$n(e,`element ${r+1} of ${t}`))):_(Number.isInteger(n)&&n>0,()=>`Expected ${t} to be a positive integer, but got ${AC(n)}.`)}function AC(n){return n===null?"null":Array.isArray(n)?"["+n.map(t=>AC(t)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function SV(n,t){let e=or(),r,o=(...s)=>{let c=or();return c-e<t||(e=c,r=n(...s)),r};return o}function FC(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}function _ot(...n){Pr(n.length>0,"arrayOfValues is empty");for(let t of n)Pr(Array.isArray(t),"one of the values is not an array"),Pr(t.length>0,"one of the values is empty");return n.reduce((t,e)=>t.length===0?e.map(r=>[r]):e.map(r=>t.map(o=>[...o,r])).reduce((r,o)=>r.concat(o),[]),[])}function hv(n,t){return rt(()=>Pn(zt(nt(n,n),t,!0)))}class $p extends Qi{getConfig(){return{}}}class fv extends $p{constructor(t){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return rt(()=>{let e=hv(t,this.axis),r=ar(e,0,this.maxValue);return nt(t,Bt(r,Tt(wn(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}fv.className="MaxNorm",vt(fv);class dv extends $p{constructor(t){super();this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return rt(()=>Bt(t,Tt(wn(),hv(t,this.axis))))}getConfig(){return{axis:this.axis}}}dv.className="UnitNorm",vt(dv);class mv extends $p{apply(t){return Vo(t)}}mv.className="NonNeg",vt(mv);class gv extends $p{constructor(t){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return rt(()=>{let e=hv(t,this.axis),r=Tt(nt(this.rate,ar(e,this.minValue,this.maxValue)),nt(1-this.rate,e));return nt(t,Bt(r,Tt(wn(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}gv.className="MinMaxNorm",vt(gv);let RC={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function vn(n){return lv(n)}function PC(n,t={}){return Sp(n,Dr.getMap().classNameMap,t,"constraint")}function Tn(n){if(n==null)return null;if(typeof n=="string"){let t=n in RC?RC[n]:n,e={className:t,config:{}};return PC(e)}else return n instanceof $p?n:PC(n)}function $V(n){return new fv(n)}function IV(n){return new dv(n)}function EV(){return new mv}function DV(n){return new gv(n)}var AV=Object.freeze({__proto__:null,maxNorm:$V,unitNorm:IV,nonNeg:EV,minMaxNorm:DV});let FV=["channelsFirst","channelsLast"],RV=["valid","same","causal"],PV=["max","avg"],OV=["sum","mul","concat","ave"],Cot=["temporal"];let Wc=new Map;function nn(n){zc(FV,"DataFormat",n)}function Or(n){zc(RV,"PaddingMode",n)}function OC(n){zc(PV,"PoolMode",n)}let Ip=[],LC="/";function fa(n,t){Ip.push(n);try{let e=t();return Ip.pop(),e}catch(e){throw Ip.pop(),e}}function LV(){return Ip.length===0?"":Ip.join(LC)+LC}function MC(n){if(!zC(n))throw new Error("Not a valid tensor name: '"+n+"'");return LV()+n}function BC(n){if(!zC(n))throw new Error("Not a valid tensor name: '"+n+"'");Wc.has(n)||Wc.set(n,0);let t=Wc.get(n);if(Wc.set(n,Wc.get(n)+1),t>0){let e=`${n}_${t}`;return Wc.set(e,1),e}else return n}let MV=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function zC(n){return!!n.match(MV)}function BV(n){return n===parseInt(n.toString(),10)}function fi(n,t,e){t==null&&(t=0),e==null&&(e=n.length);let r=1;for(let o=t;o<e;++o)r*=n[o];return r}function Ud(n){return n=Array.isArray(n)?new Float32Array(n):n,vr(n)}function Vc(n){return Ec(Ud(n)).dataSync()[0]}function di(n){return lr(Ud(n)).dataSync()[0]}function zV(n){return zt(Ud(n)).dataSync()[0]}function WV(n){return zV(n)/n.length}function Sot(n){let t=Dt(Ud(n),Et(WV(n))),e=zt(nt(t,t)).dataSync()[0];return e/n.length}function $ot(n){let t=n.slice().sort((o,s)=>o-s),e=Math.floor((t.length-1)/2),r=Math.ceil((t.length-1)/2);return e===r?t[e]:(t[e]+t[r])/2}function yo(n,t){if(t<n)throw new Y(`end (${t}) < begin (${n}) is forbidden.`);let e=[];for(let r=n;r<t;++r)e.push(r);return e}let WC="webgl";function Iot(n){d_(n),WC=n}function Eot(){return WC}function Dot(){return!1}function Aot(n){let t=n.shape;return t.length>0?t.reduce((e,r)=>e*r):1}function Ep(n,t){return n.asType(t)}function Dp(n,t=-1){let e=n.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),n.reshape(e)}function VV(n,t){return rt(()=>{if(n.shape.length!==2)throw new Y(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);let e=Dp(n,1);return xv(e,[1,t,1])})}function GV(n){let t=[fi(n.shape)];return n.reshape(t)}function UV(n){if(n.rank<=1)throw new Y(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);let t=[n.shape[0],fi(n.shape,1)];return n.reshape(t)}function da(n,t,e){return rt(()=>{switch(n.rank){case 1:return _d(n,t,e);case 2:return Ow(n,[t,0],[e,n.shape[1]]);case 3:return Cd(n,[t,0,0],[e,n.shape[1],n.shape[2]]);case 4:return fp(n,[t,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3]]);case 5:return ce(n,[t,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return ce(n,[t,0,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new Y(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function yv(n,t,e){return rt(()=>{switch(n.rank){case 1:return _d(n,t,e);case 2:return Ow(n,[0,t],[n.shape[0],e]);case 3:return Cd(n,[0,0,t],[n.shape[0],n.shape[1],e]);case 4:return fp(n,[0,0,0,t],[n.shape[0],n.shape[1],n.shape[2],e]);default:throw new Y(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function qd(n,t,e,r){return rt(()=>{switch(n.rank){case 1:return _d(n,t,e);case 2:switch(r){case 1:return da(n,t,e);case 2:return yv(n,t,e);default:throw new Y(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return da(n,t,e);case 2:return Cd(n,[0,t,0],[n.shape[0],e,n.shape[2]]);case 3:return yv(n,t,e);default:throw new Y(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return da(n,t,e);case 2:return fp(n,[0,t,0,0],[n.shape[0],e,n.shape[2],n.shape[3]]);case 3:return fp(n,[0,0,t,0],[n.shape[0],n.shape[1],e,n.shape[3]]);case 4:return yv(n,t,e);default:throw new Y(`The axis is not within the rank of the tensor ${r}`)}default:throw new Y(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function bv(n,t=-1){let e;return t<0&&(e=n[0].rank,e!==0?t=e:t=0),t===n[0].rank&&(t=-1),Qe(n,t)}function VC(n,t){switch(n.rank){case 1:return v_([n,t]);case 2:return T_([n,t],0);case 3:return k_([n,t],0);case 4:return N_([n,t],0);default:throw new Y(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function xv(n,t){if(Array.isArray(t)||(t=[t]),n.rank!==t.length)throw new Y(`The length of input n (${t.length}) does not match the number of dimensions in input x (${n.rank})`);return ii(n,t)}function Hd(n,t=0,e=1,r,o){return Ew(n,t,e,r,o)}function Uo(n,t,e,r){if(n.rank<2||t.rank<2)throw new Ut(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${t.shape}`);if(t.rank>=3){let o=n.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(o!==s)throw new Ut(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${t.shape}`)}if(n.rank===2&&t.rank===2){let o=!1,s=!1;return Pd({a:n,b:t,transposeA:o,transposeB:s,bias:r?wv(n.rank,r,go()):null,activation:e})}else{let o=n.shape.slice(),s=o.pop();n=n.reshape([-1,s]);let c=t.shape.slice(),l=c.pop(),p=c.pop(),f=[...c,l],m=Array.from({length:t.rank},(T,N)=>N===0?t.rank-2:N<=t.rank-2?N-1:N);t=t.transpose(m).reshape([p,-1]);let y=[...o,...f],b=!1,v=!1;return Pd({a:n,b:t,transposeA:b,transposeB:v,bias:r?wv(n.rank,r,go()):null,activation:e}).reshape(y)}}function Fot(n){return rt(()=>{let t=re(n),e=qn(n);return Xn(po(n,t),t,Xn(Fr(n,re(n)),e,nt(-1,e)))})}function Rot(n,t){return rt(()=>{if(n.rank!==1)throw new Error("Only 1D one-hot tensors are supported in the deeplearn backend, at present.");return n=n.toInt(),Zi(n,t).toFloat()})}function GC(n,t,e){return rt(()=>(Array.isArray(t)?t=vr(t,"int32"):t=t.toInt(),$c(n,t,e)))}function Ap(n){return nt(n,n)}function Pot(n,t){return rt(()=>{if(typeof t=="number"&&(t=Et(Math.round(t),"int32")),t.dtype!=="int32")throw new Ut(`Non-int32 dtype (${t.dtype}) is not supported by pow() yet`);return fo(n,t)})}function wv(n,t,e){let r=t.shape;if(t.rank!==1&&t.rank!==n)throw new Y(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${n}`);if(n===5){if(e==="channelsFirst")return r.length===1?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if(e==="channelsLast")return r.length===1?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(n===4){if(e==="channelsFirst")return r.length===1?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if(e==="channelsLast")return r.length===1?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(n===3){if(e==="channelsFirst")return r.length===1?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if(e==="channelsLast")return r.length===1?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(n<3)return t;throw new Y(`Unsupported input rank by biasAdd: ${t.rank}`)}function qo(n,t,e){return rt(()=>(e==null&&(e=go()),nn(e),n.add(wv(n.rank,t,e))))}function qV(n,t=1){if(t!==1)throw new Ut(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return _c(n)}function HV(n){return rt(()=>Bt(n,bn(n).add(1)))}function UC(n,t,e,r){return rt(()=>oC(n,t,e,r))}function jV(n){return rt(()=>{let t=Tt(.5,nt(.2,n));return ar(t,0,1)})}function Fp(n,t,e=!1){return e?n():t()}let KV=["fanIn","fanOut","fanAvg"],XV=["normal","uniform","truncatedNormal"],Oot=["Zeros","Ones","Constant","RandomNormal","RandomUniform","TruncatedNormal","VarianceScaling","Orthogonal","Identity"];function YV(n){zc(KV,"FanMode",n)}function JV(n){zc(XV,"Distribution",n)}class Qr extends Qi{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class vv extends Qr{apply(t,e){return xe(t,e)}}vv.className="Zeros",vt(vv);class jd extends Qr{apply(t,e){return ho(t,e)}}jd.className="Ones",vt(jd);class Tv extends Qr{constructor(t){super();if(typeof t!="object")throw new Y(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new Y(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return rt(()=>nt(Et(this.value),ho(t,e)))}getConfig(){return{value:this.value}}}Tv.className="Constant",vt(Tv);class kv extends Qr{constructor(t){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return aa(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}kv.className="RandomUniform",vt(kv);class Nv extends Qr{constructor(t){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Ut(`randomNormal does not support dType ${e}.`);return Hd(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Nv.className="RandomNormal",vt(Nv);class _v extends Qr{constructor(t){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Ut(`truncatedNormal does not support dType ${e}.`);return yp(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}_v.className="TruncatedNormal",vt(_v);class Cv extends Qr{constructor(t){super();this.gain=t.gain!=null?t.gain:1}apply(t,e){return rt(()=>{if(t.length!==2||t[0]!==t[1])throw new Y("Identity matrix initializer can only be used for 2D square matrices.");return nt(this.gain,hd(t[0]))})}getConfig(){return{gain:this.gain}}}Cv.className="Identity",vt(Cv);function ZV(n,t="channelsLast"){let e,r;if(nn(t),n.length===2)e=n[0],r=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(t==="channelsFirst"){let o=fi(n,2);e=n[1]*o,r=n[0]*o}else if(t==="channelsLast"){let o=fi(n,0,n.length-2);e=n[n.length-2]*o,r=n[n.length-1]*o}}else{let o=fi(n);e=Math.sqrt(o),r=Math.sqrt(o)}return[e,r]}class hr extends Qr{constructor(t){super();if(t.scale<0)throw new Y(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,YV(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,JV(this.distribution),this.seed=t.seed}apply(t,e){let r=ZV(t),o=r[0],s=r[1],c=this.scale;if(this.mode==="fanIn"?c/=Math.max(1,o):this.mode==="fanOut"?c/=Math.max(1,s):c/=Math.max(1,(o+s)/2),this.distribution==="normal"){let l=Math.sqrt(c);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Ut(`${this.getClassName()} does not support dType ${e}.`);return yp(t,0,l,e,this.seed)}else{let l=Math.sqrt(3*c);return aa(t,-l,l,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}hr.className="VarianceScaling",vt(hr);class Kd extends hr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return hr.className}}Kd.className="GlorotUniform",vt(Kd);class Xd extends hr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return hr.className}}Xd.className="GlorotNormal",vt(Xd);class Yd extends hr{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return hr.className}}Yd.className="HeNormal",vt(Yd);class Jd extends hr{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return hr.className}}Jd.className="HeUniform",vt(Jd);class Zd extends hr{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return hr.className}}Zd.className="LeCunNormal",vt(Zd);class Qd extends hr{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return hr.className}}Qd.className="LeCunNormal",vt(Qd);class Sv extends Qr{constructor(t){super();if(this.DEFAULT_GAIN=1,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,this.seed!=null)throw new Ut("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return rt(()=>{if(t.length<2)throw new Ut("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);let r=t[0]>t[1]?[t[1],t[0]]:t,o=Hd(r,0,1,"float32"),s=mC.gramSchmidt(o);return t[0]>t[1]&&(s=s.transpose()),nt(this.gain,s)})}getConfig(){return{gain:this.gain,seed:this.seed}}}Sv.className="Orthogonal",vt(Sv);let qC={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function HC(n,t={}){return Sp(n,Dr.getMap().classNameMap,t,"initializer")}function rn(n){return lv(n)}function je(n){if(typeof n=="string"){let t=n in qC?qC[n]:n;if(t==="GlorotNormal")return new Xd;if(t==="GlorotUniform")return new Kd;if(t==="HeNormal")return new Yd;if(t==="HeUniform")return new Jd;if(t==="LeCunNormal")return new Zd;if(t==="LeCunUniform")return new Qd;{let e={};return e.className=t,e.config={},HC(e)}}else return n instanceof Qr?n:HC(n)}function QV(){return new vv}function tG(){return new jd}function eG(n){return new Tv(n)}function nG(n){return new kv(n)}function rG(n){return new Nv(n)}function oG(n){return new _v(n)}function sG(n){return new Cv(n)}function iG(n){return new hr(n)}function aG(n){return new Kd(n)}function cG(n){return new Xd(n)}function lG(n){return new Yd(n)}function uG(n){return new Jd(n)}function pG(n){return new Zd(n)}function hG(n){return new Qd(n)}function fG(n){return new Sv(n)}var dG=Object.freeze({__proto__:null,zeros:QV,ones:tG,constant:eG,randomUniform:nG,randomNormal:rG,truncatedNormal:oG,identity:sG,varianceScaling:iG,glorotUniform:aG,glorotNormal:cG,heNormal:lG,heUniform:uG,leCunNormal:pG,leCunUniform:hG,orthogonal:fG});let mG=0;function jC(){return mG++}let tm={};function em(n=""){return n in tm||(tm[n]=0),tm[n]+=1,n+tm[n].toString()}function $v(n){return Array.isArray(n)&&Array.isArray(n[0])}function nm(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function Qt(n){let t;if(Array.isArray(n)){if(n.length!==1)throw new Y(`Expected Tensor length to be 1; got ${n.length}`);t=n[0]}else t=n;return t}function Re(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new Y(`Expected exactly 1 Shape; got ${n.length}`)}else return n}function rm(n){let t=0;for(let e of n)e.shape.length===0?t+=1:t+=e.shape.reduce((r,o)=>r*o);return t}let KC="Variable";class bo{constructor(t,e="float32",r=KC,o=!0,s=null){this.dtype=e==null?"float32":e,this.shape=t.shape,this.id=jC(),r=r==null?KC:r,this.originalName=MC(r),this.name=BC(this.originalName),this.trainable_=o,this.constraint=s,this.val=B_(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),gG(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function gG(n,t){if(n.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(t.shape))}function Lot(n,t,e,r){return new bo(n,t,e,!0,r)}function Mot(n,t,e){return new bo(xe(n),t,e)}function Bot(n,t,e){return new bo(re(n),t,e)}function zot(n,t,e){let r=ho(n);return new bo(r,t,e)}function Wot(n,t,e){let r=qn(n);return new bo(r,t,e)}function Vot(n,t,e){return new bo(hd(n),t,e)}function Got(n,t,e,r,o,s="randomUniform"){return new bo(aa(n,t,e,r),r,s)}function Uot(n,t=0,e=1,r,o,s="truncatedNormal"){if(r=r||"float32",r!=="float32"&&r!=="int32")throw new Ut(`randomNormal does not support dType ${r}.`);return new bo(yp(n,t,e,r,o),r,s)}function qot(n,t=0,e=1,r,o,s="randomNormal"){if(r=r||"float32",r!=="float32"&&r!=="int32")throw new Ut(`randomNormalVariable does not support dType ${r}.`);return new bo(Ew(n,t,e,r,o),r,s)}function Hot(n,t){return n.write(t)}function jot(n,t){return n.write(Tt(n.read(),t))}function Kot(n,t){return n.write(Dt(n.read(),t))}function Iv(n){return n.map(t=>t.read())}function Ev(n){n.forEach(t=>{let e=t[0];e.write(t[1])})}function Xot(n,t){let e=t.map(o=>o.read()),r=Nw(n,e);return t.map(o=>r.grads[o.name])}class In{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class xo{constructor(t,e,r,o,s,c,l){this.dtype=t,this.shape=e,this.sourceLayer=r,this.inputs=o,this.callArgs=s,this.outputTensorIndex=l,this.id=jC(),c!=null&&(this.originalName=MC(c),this.name=BC(this.originalName)),this.rank=e.length}}let yG=0;class om{constructor(t,e){this.callArgs=e,this.id=yG++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(let r of t.inboundLayers)r!=null&&r.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){let t=[];for(let e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let bG=0;class ye extends Qi{constructor(t={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=bG++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){let r=this.getClassName();e=bs(r)+"_"+em(r)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let r;if(t.batchInputShape!=null)r=t.batchInputShape;else if(t.inputShape!=null){let s=null;t.batchSize!=null&&(s=t.batchSize),r=[s].concat(t.inputShape)}this.batchInputShape=r;let o=t.dtype;o==null&&(o=t.inputDType),o==null&&(o="float32"),this.dtype=o}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new Jr(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new Y(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return pr(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return pr(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Go(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Go(`Layer ${this.name} is not connected, no input to return.`);return pr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Go(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Go(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return pr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=ze(t),this.inputSpec==null||this.inputSpec.length===0)return;let e=ze(this.inputSpec);if(t.length!==e.length)throw new Y(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let r=0;r<t.length;r++){let o=t[r],s=e[r];if(s==null)continue;let c=o.rank;if(s.ndim!=null&&c!==s.ndim)throw new Y(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${c}`);if(s.maxNDim!=null&&c>s.maxNDim)throw new Y(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${c}`);if(s.minNDim!=null&&c<s.minNDim)throw new Y(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${c}.`);if(s.dtype!=null&&o.dtype!==s.dtype)throw new Y(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${o.dtype}.`);if(s.axes){let l=o.shape;for(let p in s.axes){let f=Number(p),m=s.axes[p],y=f>=0?l[f]:l[l.length+f];if(m!=null&&[m,null].indexOf(y)===-1)throw new Y(`Input ${r} is incompatible with layer ${this.name}: expected axis ${f} of input shape to have value ${m} but got shape ${l}.`)}}if(s.shape!=null)for(let l=0;l<s.shape.length;++l){let p=s.shape[l],f=o.shape[l];if(p!=null&&f!=null&&p!==f)throw new Y(`Input ${r} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${o.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();let r=ze(t),o=!0;for(let c of r)if(!(c instanceof xo)){o=!1;break}let s=!0;for(let c of r)if(c instanceof xo){s=!1;break}if(o===s)throw new Y("Arguments to apply() must be all SymbolicTensors or all Tensors");return fa(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);let c=[];for(let l of ze(t))c.push(l.shape);this.build(pr(c)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let c=this.call(t,e),l=ze(c),p=[];for(let f of l)r.indexOf(f)!==-1&&(f=f.clone()),p.push(f);if(c=pr(p),this.activityRegularizer!=null)throw new Ut("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return c}else{let c=xG(t),l=this.computeOutputShape(c),p,f=wG(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?c[0]:c),l!=null&&l.length>0&&Array.isArray(l[0])?p=l.map((m,y)=>new xo(f,m,this,ze(t),e,this.name,y)):p=new xo(f,l,this,ze(t),e,this.name),this.addInboundNode(t,p,null,null,c,l,e),this._refCount++,this.activityRegularizer!=null)throw new Ut("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return p}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape==null)return;if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((r,o)=>{r!=null&&t[o]!=null&&t[o]!==r&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Go(`The layer ${this.name} has never been called and thus has no defined output shape.`);let t=[];for(let e of this.inboundNodes){let r=JSON.stringify(e.outputShapes);t.indexOf(r)===-1&&t.push(r)}if(t.length===1){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new Go(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Jr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return rm(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Iv(t?this.trainableWeights:this.weights)}setWeights(t){rt(()=>{let e=this.weights;if(e.length!==t.length)throw new Y(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;let r=[],o=Iv(e);for(let s=0;s<o.length;++s){let c=o[s],l=e[s],p=t[s];if(!lt(c.shape,p.shape))throw new Y(`Layer weight shape ${c.shape} not compatible with provided weight shape ${p.shape}`);r.push([l,p])}Ev(r)})}addWeight(t,e,r,o,s,c,l){if(this._addedWeightNames.indexOf(t)!==-1)throw new Y(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),r==null&&(r="float32"),this.fastWeightInitDuringBuild&&(o=je("zeros"));let p=o.apply(e,r),f=new bo(p,r,t,c,l);return p.dispose(),s!=null&&this.addLoss(()=>s.apply(f.read())),c==null&&(c=!0),c?this._trainableWeights.push(f):this._nonTrainableWeights.push(f),f}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){if(t==null||Array.isArray(t)&&t.length===0)return;t=ze(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t)}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(r=>{if(r!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}addInboundNode(t,e,r,o,s,c,l=null){let p=ze(t);e=ze(e),r=ze(r),o=ze(o),s=nm(s),c=nm(c);let f=[],m=[],y=[];for(let b of p)f.push(b.sourceLayer),m.push(b.nodeIndex),y.push(b.tensorIndex);new om({outboundLayer:this,inboundLayers:f,nodeIndices:m,tensorIndices:y,inputTensors:p,outputTensors:e,inputMasks:r,outputMasks:o,inputShapes:s,outputShapes:c},l);for(let b=0;b<e.length;b++)e[b].sourceLayer=this,e[b].nodeIndex=this.inboundNodes.length-1,e[b].tensorIndex=b}getConfig(){let t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function xG(n){n=ze(n);let t=[];for(let e of n)t.push(e.shape);return pr(t)}function wG(n){return"float32"}function XC(n,t,e){if((t==null||e!=null&&e>0)&&(t=n.sourceLayer,e=n.nodeIndex),t.inboundNodes.length===0)return[n];{let r=t.inboundNodes[e];if(r.inboundLayers.length===0)return r.inputTensors;{let o=[];for(let s=0;s<r.inboundLayers.length;s++){let c=r.inputTensors[s],l=r.inboundLayers[s],p=r.nodeIndices[s],f=XC(c,l,p);for(let m of f)o.indexOf(m)===-1&&o.push(m)}return o}}}class Gc extends ye{constructor(t){super({dtype:t.dtype,name:t.name!=null?t.name:em("input").toString()});if(t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new Y("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new Y("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new Y("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let r=t.dtype||"float32";this.batchInputShape=e,this.dtype=r,this.inputSpec=[{shape:e}];let o=new xo(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new om({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new Y(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Gc.className="InputLayer",vt(Gc);function YC(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new Y("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=n.batchShape;n.shape!=null&&t==null&&(t=[null].concat(n.shape));let e=n.dtype;e==null&&(e="float32");let r=new Gc({batchInputShape:t,name:n.name,dtype:e,sparse:n.sparse}),o=r.inboundNodes[0].outputTensors;return o[0]}async function mi(n){if(n==null)return;let t=[],e=[],r=[];for(let o in n){let s=n[o];if(typeof s!="number"){let c=s;t.push(c.data()),e.push(o),r.push(c)}}if(t.length>0){let o=await Promise.all(t);for(let s=0;s<o.length;++s)n[e[s]]=o[s][0];Xt(r)}}function JC(n){if(n==null)return;for(let t in n){let e=n[t];typeof e!="number"&&e.dispose()}}var ZC;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(ZC||(ZC={}));let vG=125;class Uc{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class QC{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(let e of this.callbacks)e.setParams(t)}setModel(t){for(let e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(let r of this.callbacks)await r.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(let r of this.callbacks)await r.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(let r of this.callbacks)await r.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(let r of this.callbacks)await r.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(let e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(let e of this.callbacks)await e.onTrainEnd(t)}}class TG extends Uc{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});let r=e.size==null?0:e.size;this.seen+=r;for(let o in e){let s=e[o];if(typeof s=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+s*r;else{let c;o in this.totals?c=this.totals[o]:this.totals[o]=0;let l=rt(()=>Tt(this.totals[o],nt(s,r)));this.totals[o]=l,c!=null&&c.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(let r of this.params.metrics){if(this.totals[r]==null)continue;typeof this.totals[r]=="number"?e[r]=this.totals[r]/this.seen:rt(()=>{let o=nt(Bt(1,this.seen),this.totals[r]);e[r]=o,this.totals[r].dispose(),Sn(e[r])})}}}class tS extends Uc{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(let r in e)this.history[r]==null&&(this.history[r]=[]),this.history[r].push(e[r])}async syncData(){let t=[],e=[],r=[];for(let s in this.history){let c=this.history[s];for(let l=0;l<c.length;++l)if(typeof c[l]!="number"){let p=c[l];t.push(p.data()),e.push(s),r.push(l)}}let o=await Promise.all(t);for(let s=0;s<o.length;++s){let c=this.history[e[s]][r[s]];c.dispose(),this.history[e[s]][r[s]]=o[s][0]}}}class eS extends Uc{constructor(t,e){super();if(this.currentEpoch=0,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=vG),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");nf(this.yieldEvery)&&(this.maybeWait=SV(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,r){let o=[];this.yield!=null&&(await mi(r),o.push(this.yield(t,e,r))),o.push(Bd()),await Promise.all(o)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await mi(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){let r=[];this.epochEnd!=null&&(await mi(e),r.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&r.push(Bd()),await Promise.all(r)}async onBatchBegin(t,e){this.batchBegin!=null&&(await mi(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){let r=[];this.batchEnd!=null&&(await mi(e),r.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?r.push(Bd()):nf(this.yieldEvery)&&r.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(r)}async onTrainBegin(t){this.trainBegin!=null&&(await mi(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await mi(t),await this.trainEnd(t))}}function nS(n,t){if(n==null&&(n={}),n instanceof Uc)return[n];if(Array.isArray(n)&&n[0]instanceof Uc)return n;let e=ze(n);return e.map(r=>new eS(r,t))}class Lr{constructor(){}static registerCallbackConstructor(t,e){_(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),Lr.checkForDuplicate(e),Lr.constructors[t]==null&&(Lr.constructors[t]=[]),Lr.constructors[t].push(e)}static checkForDuplicate(t){for(let e in Lr.constructors){let r=Lr.constructors[+e];r.forEach(o=>{if(o===t)throw new Y("Duplicate callback constructor.")})}}static clear(){Lr.constructors={}}static createCallbacks(t){let e=[];for(let r in Lr.constructors){let o=+r;t>=o&&e.push(...Lr.constructors[o])}return e.map(r=>new r)}}Lr.constructors={};function rS(n,t,e,r,o,s,c,l,p){let f=new tS,m=[new TG,...Lr.createCallbacks(t)];n!=null&&m.push(...n),m.push(f);let y=new QC(m);return y.setParams({epochs:e,initialEpoch:r,samples:o,steps:s,batchSize:c,verbose:t,doValidation:l,metrics:p}),{callbackList:y,history:f}}function wo(n,t={},e=!1){return Sp(n,Dr.getMap().classNameMap,t,"layer",e)}function sm(n,t){return rt(()=>{n.dtype!=="float32"&&(n=n.asType("float32"));let e=zt(Ap(n),t,!0),r=Cc(e.shape,wn()),o=Pn(Xr(e,r));return Bt(n,o)})}function xs(n,t){return rt(()=>en(Ap(Dt(t,n)),-1))}function qc(n,t){return rt(()=>en(bn(Dt(t,n)),-1))}function gi(n,t){return rt(()=>{let e=Dt(n,t),r=ar(bn(n),wn(),Number.MAX_VALUE),o=bn(Bt(e,r));return nt(100,en(o,-1))})}function Dv(n,t){return rt(()=>{let e=ar(t,wn(),Number.MAX_VALUE),r=wr(Tt(1,e)),o=ar(n,wn(),Number.MAX_VALUE),s=wr(Tt(1,o));return en(Ap(Dt(r,s)),-1)})}function kG(n,t){return rt(()=>{let e=Xr(0,Dt(1,nt(n,t)));return en(Ap(e),-1)})}function NG(n,t){return rt(()=>{let e=Xr(0,Dt(1,nt(n,t)));return en(e,-1)})}function _G(n,t){return rt(()=>{let e=zt(nt(n,t),-1),r=lr(nt(Dt(1,n),t),-1);return Xr(0,Tt(1,Dt(r,e)))})}function CG(n,t){return rt(()=>{let e=Math.log(2),r=Dt(t,n),o=Dt(Tt(r,Ic(nt(-2,r))),e);return en(o,-1)})}function Rp(n,t,e=!1){return rt(()=>{if(e)t=ca(t);else{let r=zt(t,t.shape.length-1,!0);t=Bt(t,r)}return t=ar(t,wn(),1-wn()),tn(zt(nt(n.toFloat(),wr(t)),t.shape.length-1))})}function im(n,t,e=!1){return rt(()=>{let r=Sc(GV(n)).toInt();t=ar(t,wn(),1-wn());let o=t.shape,s=Zi(r,o[o.length-1]).reshape(o);return Rp(s,t,e)})}function SG(n,t){if(!lt(n.shape,t.shape))throw new Y(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(t.shape)}`);return rt(()=>{let e=t.relu(),r=t.abs().neg();return e.sub(t.mul(n)).add(r.exp().log1p())})}function am(n,t){return rt(()=>{let e;return e=ar(t,wn(),1-wn()),e=wr(Bt(e,Dt(1,e))),en(SG(n,e),-1)})}function Av(n,t){return rt(()=>{let e=ar(n,wn(),1),r=ar(t,wn(),1);return zt(nt(n,wr(Bt(e,r))),-1)})}function $G(n,t){return rt(()=>{let e=wr(Tt(wn(),t));return en(Dt(t,nt(n,e)),-1)})}function cm(n,t){return rt(()=>{let e=sm(n,-1),r=sm(t,-1),o=nt(e,r);return tn(zt(o,-1))})}let Yot=xs,Jot=xs,Zot=qc,Qot=qc,tst=gi,est=gi,nst=Dv,rst=Dv,ost=Av,sst=Av,ist=cm,lm={meanSquaredError:xs,meanAbsoluteError:qc,meanAbsolutePercentageError:gi,meanSquaredLogarithmicError:Dv,squaredHinge:kG,hinge:NG,categoricalHinge:_G,logcosh:CG,categoricalCrossentropy:Rp,sparseCategoricalCrossentropy:im,binaryCrossentropy:am,kullbackLeiblerDivergence:Av,poisson:$G,cosineProximity:cm};function Fv(n){if(typeof n=="string"){if(n in lm)return lm[n];let t=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Y(t)}else return n}function Rv(n,t){return rt(()=>{let e=nt(.5,qn(t)),r=Ep(Fr(t,e),n.dtype);return en(po(n,r),-1)})}function Pv(n,t){return rt(()=>Ep(po(Qu(n,-1),Qu(t,-1)),"float32"))}function oS(n,t){return rt(()=>Yr(n.equal(1),t.equal(1)).sum().cast("float32"))}function IG(n,t){return rt(()=>Yr(n.equal(1),t.equal(0)).sum().cast("float32"))}function EG(n,t){return rt(()=>Yr(n.equal(0),t.equal(1)).sum().cast("float32"))}function sS(n,t){return rt(()=>{let e=oS(n,t),r=EG(n,t),o=e.add(r);return Xn(Fr(o,0),e.div(o),0).cast("float32")})}function DG(n,t){return rt(()=>{let e=oS(n,t),r=IG(n,t),o=e.add(r);return Xn(Fr(o,0),e.div(o),0).cast("float32")})}function iS(n,t){return am(n,t)}function aS(n,t){return n.rank===t.rank&&(n=n.squeeze([n.rank-1])),t=t.argMax(-1),t.dtype!==n.dtype&&(t=t.asType(n.dtype)),po(n,t).asType("float32")}function ast(n,t){throw new Ut}function cst(n,t){throw new Ut}let AG=xs,FG=xs,RG=qc,PG=qc,OG=gi,LG=gi,Ov=Rp,MG=cm,cS=im,um={binaryAccuracy:Rv,categoricalAccuracy:Pv,precision:sS,categoricalCrossentropy:Ov,sparseCategoricalCrossentropy:cS,mse:AG,MSE:FG,mae:RG,MAE:PG,mape:OG,MAPE:LG,cosine:MG};function BG(n){if(typeof n=="string"&&n in um)return um[n];if(typeof n!="string"&&n!=null)return n;throw new Y(`Unknown metric ${n}`)}function pm(n){if(Pr(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let t;for(let e of Object.keys(lm))if(lm[e]===n){t=e;break}if(t!==void 0)return t;for(let e of Object.keys(um))if(um[e]===n){t=e;break}return t!==void 0?t:n.name}}function zG(n){let t={Adagrad:()=>ua.adagrad(.01),Adadelta:()=>ua.adadelta(1,.95,wn()),Adam:()=>ua.adam(.001,.9,.999,wn()),Adamax:()=>ua.adamax(.002,.9,.999,wn(),0),RMSProp:()=>ua.rmsprop(.001,.9,0,wn()),SGD:()=>ua.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,n in t)return t[n]();throw new Y(`Unknown Optimizer ${n}`)}let lS=1*1024*1024;function uS(n,t,e=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!Lv(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){let r=JSON.stringify(n);r.length>lS&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${lS}.`)}}function Lv(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){let t=Object.keys(n);for(let e of t){if(typeof e!="string")return!1;if(!Lv(n[e]))return!1}return!0}else if(Array.isArray(n)){for(let t of n)if(!Lv(t))return!1;return!0}else return!1;else{let t=typeof n;return t==="string"||t==="number"||t==="boolean"}}function WG(n,t,e,r=console.log){let o=GG(n),s=["Layer (type)","Output shape","Param #"];o?(t=t||65,e=e||[.45,.85,1]):(t=t||98,e=e||[.33,.55,.67,1]),e[e.length-1]<=1&&(e=e.map(m=>Math.floor(t*m)));let c;if(!o){s.push("Receives inputs"),c=[];for(let m in n.nodesByDepth)c.push(...n.nodesByDepth[m])}r("_".repeat(t)),hm(s,e,r),r("=".repeat(t));let l=n.layers;for(let m=0;m<l.length;++m)o?UG(l[m],e,r):qG(l[m],e,c,r),r((m===l.length-1?"=":"_").repeat(t));n.checkTrainableWeightsConsistency();let p=VG(n),f=rm(n.nonTrainableWeights);r(`Total params: ${p+f}`),r(`Trainable params: ${p}`),r(`Non-trainable params: ${f}`),r("_".repeat(t))}function VG(n){let t;return n.collectedTrainableWeights!=null?t=rm(n.collectedTrainableWeights):t=rm(n.trainableWeights),t}function GG(n){let t=!0,e=[],r=[];for(let o in n.nodesByDepth)e.push(n.nodesByDepth[o]);for(let o of e){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){t=!1;break}r.push(...o)}if(t)for(let o of n.layers){let s=!1;for(let c of o.inboundNodes)if(r.indexOf(c)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function hm(n,t,e=console.log){let r="";for(let o=0;o<n.length;++o)o>0&&(r=r.slice(0,r.length-1)+" "),r+=n[o],r=r.slice(0,t[o]),r+=" ".repeat(t[o]-r.length);e(r)}function UG(n,t,e){let r;try{r=JSON.stringify(n.outputShape)}catch(l){r="multiple"}let o=n.name,s=n.getClassName(),c=[`${o} (${s})`,r,n.countParams().toString()];hm(c,t,e)}function qG(n,t,e,r){let o;try{o=JSON.stringify(n.outputShape)}catch(m){o="multiple"}let s=[];for(let m of n.inboundNodes){if(e!=null&&e.length>0&&e.indexOf(m)===-1)continue;for(let y=0;y<m.inboundLayers.length;++y){let b=m.inboundLayers[y].name,v=m.nodeIndices[y],T=m.tensorIndices[y];s.push(`${b}[${v}][${T}]`)}}let c=n.name,l=n.getClassName(),p=s.length===0?"":s[0],f=[`${c} (${l})`,o,n.countParams().toString(),p];hm(f,t,r);for(let m=1;m<s.length;++m)hm(["","","",s[m]],t,r)}function pS(n,t,e){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&t===0&&typeof e=="string"}function Pp(n,t){if(n===null)return null;if(typeof n=="string")return ha(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){let e=[],r=n.length;for(let o=0;o<r;++o){let s=n[o];pS(t,o,s)?e.push(s):e.push(Pp(s,t))}return e}else{let e={};for(let r of Object.keys(n)){let o=n[r];if(r==="name"&&typeof o=="string")e[r]=o;else{let s=ha(r);e[s]=Pp(o,s)}}return e}}function Mv(n,t){if(n==null)return null;if(typeof n=="string")return bs(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){let e=[],r=n.length;for(let o=0;o<r;++o){let s=n[o];pS(t,o,s)?e.push(s):e.push(Mv(s,t))}return e}else{let e={};for(let r of Object.keys(n)){let o=n[r],s=bs(r);(r==="name"||r==="className")&&typeof o=="string"?e[s]=o:e[s]=Mv(o,r)}return e}}let fm="2.7.0";function HG(n,t){if(n.dtype==null||n.dtype===t.dtype)return t;try{return $t(t,n.dtype)}catch(e){throw new Y(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class yi{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof yi)for(let e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(let e of t)this.add(e.key,e.value)}}add(t,e,r){if(this.id2Value[t.id]==null)this.id2Value[t.id]=HG(t,e),this.name2Id[t.name]=t.id,r!=null&&(this.id2Mask[t.id]=r);else throw new Y(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof xo){if(this.id2Value[t.id]==null)throw new Y(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{let e=this.name2Id[t];if(e==null)throw new Y(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof xo){if(this.id2Value[t.id]==null)throw new Y(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{let e=this.name2Id[t];if(e==null)throw new Y(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&Xt(this.id2Mask)}}let Bv={},hS={};function Op(n,t,e,r){let o=e==null?!1:e.training,s=Array.isArray(n),c=s?n:[n],l=c.map(T=>T.name),p=[],f=t.names();for(let T of l)f.indexOf(T)!==-1?p.push(t.getValue(T)):p.push(null);r!=null&&(r.maxNumTensors=-Infinity,r.minNumTensors=Infinity);let m=l.join(",")+"|"+t.names().join(","),y,b;if(Bv[m]==null){let T=jG(c,t);y=T.sorted,b=T.recipientCounts,Bv[m]=y,hS[m]=b}y=Bv[m],b={},o||Object.assign(b,hS[m]);let v=new yi(t);for(let T=0;T<y.length;++T){if(r!=null){let Z=ed().numTensors;Z>r.maxNumTensors&&(r.maxNumTensors=Z),Z<r.minNumTensors&&(r.minNumTensors=Z)}let N=y[T],S=N.sourceLayer;if(S instanceof Gc)continue;let D=[],I=[],P=[],E=!1;for(let Z of N.inputs){let J=v.getValue(Z),it=v.getMask(Z);D.push(J),I.push(it),it!=null&&(E=!0),o||(b[Z.name]--,b[Z.name]===0&&!t.hasKey(Z)&&l.indexOf(Z.name)===-1&&!J.isDisposed&&Z.sourceLayer.stateful!==!0&&P.push(J))}E&&(e=e||{},e.mask=I[0]);let L=ze(S.apply(D,e)),B=null;S.supportsMasking&&(B=S.computeMask(D,I));let q=XG(N),H=Array.isArray(q)?q:[q];for(let Z=0;Z<H.length;++Z){v.hasKey(H[Z])||v.add(H[Z],L[Z],Array.isArray(B)?B[0]:B);let J=l.indexOf(H[Z].name);J!==-1&&(p[J]=L[Z])}o||Xt(P)}return v.disposeMasks(),s?p:p[0]}function jG(n,t){_(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let e=[],r={};if(n.length===1){let o=fS(n[0],t);e=o.sorted,r=o.recipientMap}else{let o=new Set;for(let s of n){let{sorted:c,recipientMap:l}=fS(s,t);for(let p of c)o.has(p.name)||(e.push(p),o.add(p.name));for(let p in l)r[p]==null&&(r[p]=new Set),l[p].forEach(f=>r[p].add(f))}}return{sorted:e,recipientCounts:KG(r)}}function KG(n){let t={};for(let e in n)t[e]=n[e].size;return t}function fS(n,t){let e=new Set,r=[],o={};for(let l of t.names())e.add(l);let s=[],c=[];for(s.push(n);s.length>0;){let l=s[s.length-1];if(e.has(l.name)){s.pop();continue}let p=c[c.length-1]===s.length-1;if(l.inputs.length===0||p)s.pop(),r.push(l),e.add(l.name),p&&c.pop();else{c.push(s.length-1);for(let f of l.inputs){if(o[f.name]==null&&(o[f.name]=new Set),o[f.name].add(l.name),e.has(f.name))continue;s.push(f)}}}return{sorted:r,recipientMap:o}}function XG(n){let t;if(n.sourceLayer.inboundNodes.length===1)t=n.sourceLayer.output;else{let e=null;for(let r=0;r<n.sourceLayer.inboundNodes.length;++r)for(let o of n.sourceLayer.inboundNodes[r].outputTensors)if(o.id===n.id){e=r;break}t=n.sourceLayer.getOutputAt(e)}return t}class vo extends ye{constructor(t){super({});if(this.containerNodes=new Set,this.name=t.name,this.name==null){let I=this.getClassName().toLowerCase();this.name=em(I)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],hi(this.inputs).length!==this.inputs.length)throw new Y(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(I=>I.name)}`);hi(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(I=>I.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let I of this.outputs){let P=I.sourceLayer,E=I.nodeIndex,L=I.tensorIndex;this.outputLayers.push(P),this.outputLayersNodeIndices.push(E),this.outputLayersTensorIndices.push(L)}for(let I of this.inputs){let P=I.sourceLayer,E=I.nodeIndex,L=I.tensorIndex;Pr(E===0,"input layer has >1 nodes"),Pr(L===0,"input layer has >1 tensors"),this.inputLayers.push(P),this.inputLayersNodeIndices.push(E),this.inputLayersTensorIndices.push(L)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let I=0;I<this.inputLayers.length;I++){let P=this.inputLayers[I];if(!(P instanceof Gc))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${I} (0-based) originates from layer type ${P.getClassName()}.`);this.inputNames.push(P.name),this.feedInputShapes.push(P.batchInputShape),this.feedInputNames.push(P.name)}for(let I of this.outputLayers)this.outputNames.push(I.name);this.internalInputShapes=this.inputs.map(I=>I.shape),this.internalOutputShapes=this.outputs.map(I=>I.shape);let e={},r={},o={},s={},c={},l=[],p=(I,P,E,L,B,q)=>{(L==null||B==null||q==null)&&(L=I.sourceLayer,B=I.nodeIndex,q=I.tensorIndex);let H=L.inboundNodes[B];if(E.indexOf(H)!==-1)throw new Jr(`The tensor ${I.name} at layer "${L.name}" is part of a cycle.`);if(P.indexOf(H)!==-1)return;this.containerNodes.add(vo.nodeKey(L,B)),L.id in c||(c[L.id]=Object.keys(c).length),E.indexOf(H)===-1&&E.push(H);let Z=H.inboundLayers.length;for(let J=0;J<Z;J++){let it=H.inputTensors[J],pt=H.inboundLayers[J],ht=H.nodeIndices[J],dt=H.tensorIndices[J];p(it,P,E,pt,ht,dt)}for(P.push(H);E.indexOf(H)>=0;)E.splice(E.indexOf(H),1);l.push(H)},f=[],m=[];for(let I of this.outputs)p(I,f,m);let y=l.slice().reverse();for(let I of y){r[I.id]=I,I.id in e||(e[I.id]=0);let P=e[I.id],E=o[I.outboundLayer.id]==null?0:o[I.outboundLayer.id];P=Math.max(P,E),o[I.outboundLayer.id]=P,s[I.outboundLayer.id]=I.outboundLayer,e[I.id]=P;for(let L=0;L<I.inboundLayers.length;L++){let B=I.inboundLayers[L],q=I.nodeIndices[L],H=B.inboundNodes[q],Z=e[H.id]==null?0:e[H.id];e[H.id]=Math.max(P+1,Z),r[H.id]=H}}let b={};for(let I in e){let P=e[I];P in b||(b[P]=[]),b[P].push(r[I])}let v={};for(let I in o){let P=o[I];P in v||(v[P]=[]),v[P].push(s[I])}let T=Object.keys(v).map(I=>parseInt(I,10)).sort(Gd);this.layers=[];for(let I of T){let P=v[I];P.sort((E,L)=>{let B=c[E.id],q=c[L.id];return B<q?-1:B>q?1:0});for(let E of P)E instanceof vo&&this.internalContainerRefs.push(E),this.layers.push(E)}this.layersByDepth=v,T=Object.keys(b).map(I=>parseInt(I,10)).sort(Gd);let N=this.inputs.slice(),S=[];for(let I of T)for(let P of b[I]){let E=P.outboundLayer;if(E!=null){for(let L of P.inputTensors)if(N.indexOf(L)===-1)throw new Jr(`Graph disconnected: cannot obtain value for tensor ${L} at layer "${E.name}". The following previous layers were accessed without issue: ${S}`);for(let L of P.outputTensors)N.push(L);S.push(E.name)}}this.nodesByDepth=b;let D=this.layers.map(I=>I.name);for(let I of D){let P=D.filter(E=>E===I).length;if(P!==1)throw new Jr(`The name "${I}" is used ${P} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(D))}this.outboundNodes=[],this.inboundNodes=[],new om({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(I=>null),outputMasks:this.outputs.map(I=>null),inputShapes:this.inputs.map(I=>I.shape),outputShapes:this.outputs.map(I=>I.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(let e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(r=>r.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new Y("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(let e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){let t=[];for(let e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){let e=[];for(let r of this.layers)e.push(...r.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){let r={},o=0;for(let c of this.layers)for(let l of c.weights){if(r[l.originalName]!=null)throw new Y(`Duplicate weight name: ${l.originalName}`);r[l.originalName]=l,o++}let s=[];for(let c in t){let l=c;if(r[c]==null){let p=c.split("/"),f=p.slice(0,-2).concat([p[p.length-1]]);l=f.join("/")}if(r[l]!=null)s.push([r[l],t[c]]);else if(e)throw new Y(`Provided weight data has no target variable: ${c}`);delete r[l]}if(e){let c=[];for(let l in r)c.push(l);if(c.length>0)throw new Y(`${c.length} of ${o} weights are not set: ${c}`)}Ev(s)}updatedConfig(){let t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${fm}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){let r=Mv(this.updatedConfig());return e?JSON.stringify(r):r}call(t,e){return rt(()=>{t=ze(t);let r=new yi;for(let o=0;o<this.inputs.length;++o)r.add(this.inputs[o],t[o]);return Op(this.outputs,r,e)})}computeMask(t,e){return rt(()=>{t=ze(t);let r;return e==null?r=pa(null,t.length):r=ze(e),this.runInternalGraph(t,r)[1]})}computeOutputShape(t){let e=nm(t);if(e.length!==this.inputLayers.length)throw new Y(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);let r={};for(let l=0;l<e.length;l++){let p=this.inputLayers[l],f=e[l],m=p.name+"_0_0";r[m]=f}let o=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Gd);if(o.length>1)for(let l of o){let p=this.nodesByDepth[l];for(let f of p){let m=f.outboundLayer;if(this.inputLayers.map(N=>N.id).indexOf(m.id)!==-1)continue;let y=[];for(let N=0;N<f.inboundLayers.length;N++){let S=f.inboundLayers[N],D=f.nodeIndices[N],I=f.tensorIndices[N],P=`${S.name}_${D}_${I}`,E=r[P];y.push(E)}let b=m.computeOutputShape(pr(y)),v=nm(b),T=m.inboundNodes.indexOf(f);for(let N=0;N<v.length;N++){let S=`${m.name}_${T}_${N}`;r[S]=v[N]}}}let s=[],c=[];for(let l=0;l<this.outputLayers.length;l++){let p=this.outputLayers[l],f=this.outputLayersNodeIndices[l],m=this.outputLayersTensorIndices[l],y=`${p.name}_${f}_${m}`;c.push(y)}for(let l=0;l<c.length;l++){let p=c[l];Pr(p in r),s.push(r[p])}return pr(s)}runInternalGraph(t,e){e==null&&(e=pa(null,t.length));let r={};for(let p=0;p<this.inputs.length;++p){let f=this.inputs[p],m=t[p],y=e[p];r[f.id]=[m,y]}let o=Object.keys(this.nodesByDepth).map(p=>parseInt(p,10)).sort(Gd);for(let p of o){let f=this.nodesByDepth[p];for(let m of f){let y=m.outboundLayer,b=m.inputTensors,v=m.outputTensors,T=new Array;for(let N of b)N.id in r&&T.push(r[N.id]);if(T.length===b.length){let N={},S,D,I,P;if(m.callArgs!=null&&(N=m.callArgs),T.length===1){let[E,L]=T[0];N.mask==null&&(N.mask=L),I=ze(y.call(E,N)),P=ze(y.computeMask(E,L)),S=[E],D=[L]}else S=T.map(E=>E[0]),D=T.map(E=>E[1]),N.mask==null&&(N.mask=D),I=ze(y.call(S,N)),P=ze(y.computeMask(S,D));if(y.activityRegularizer)throw new Ut("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let E=0;E<v.length;++E){let L=v[E],B=I[E],q=P[E];r[L.id]=[B,q]}}}}let s=[],c=[],l=[];for(let p of this.outputs){Pr(p.id in r,`Could not compute output ${p.name} : ${p.id}`);let[f,m]=r[p.id];l.push(f.shape),s.push(f),c.push(m)}return[s,c,l]}buildNodeConversionMap(t){let e={},r;for(let o of this.layers){r=o instanceof vo?1:0;for(let s=0;s<o.inboundNodes.length;s++){let c=vo.nodeKey(o,s);this.containerNodes.has(c)&&(e[c]=r,r+=1)}}return e}getLayer(t,e){if(e!=null){if(this.layers.length<=e)throw new Y(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}else if(t==null)throw new Y("Provide either a layer name or layer index");for(let r of this.layers)if(r.name===t)return r;throw new Y(`No such layer: ${t}`)}calculateLosses(){return rt(()=>{let t=[];for(let e of this.layers)for(let r=0;r<e.inboundNodes.length;++r){let o=vo.nodeKey(e,r);this.containerNodes.has(o)&&t.push(...e.calculateLosses())}return t})}getConfig(){let t={name:this.name},e=this.buildNodeConversionMap(this.layers),r=[];for(let c of this.layers){let l=c.getClassName(),p=c.getConfig(),f=[];for(let y=0;y<c.inboundNodes.length;y++){let b=c.inboundNodes[y],v=vo.nodeKey(c,y),T={};if(this.containerNodes.has(v)){if(b.callArgs)try{JSON.stringify(b.callArgs),T=b.callArgs}catch(N){console.warn(`Layer ${c.name} was passed non-serializable keyword arguments: ${b.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),T={}}if(b.inboundLayers.length>0){let N=[];for(let S=0;S<b.inboundLayers.length;S++){let D=b.inboundLayers[S],I=b.nodeIndices[S],P=b.tensorIndices[S],E=vo.nodeKey(D,I),L=e[E];L==null&&(L=0),N.push([D.name,L,P,T])}f.push(N)}}}let m={};m.name=c.name,m.className=l,m.config=p,m.inboundNodes=f,r.push(m)}t.layers=r;let o=[];for(let c=0;c<this.inputLayers.length;c++){let l=this.inputLayers[c],p=this.inputLayersNodeIndices[c],f=vo.nodeKey(l,p);if(!this.containerNodes.has(f))continue;let m=e[f];m==null&&(m=0);let y=this.inputLayersTensorIndices[c];o.push([l.name,m,y])}t.inputLayers=o;let s=[];for(let c=0;c<this.outputLayers.length;c++){let l=this.outputLayers[c],p=this.outputLayersNodeIndices[c],f=vo.nodeKey(l,p);if(!this.containerNodes.has(f))continue;let m=e[f];m==null&&(m=0);let y=this.outputLayersTensorIndices[c];s.push([l.name,m,y])}return t.outputLayers=s,t}static fromConfig(t,e,r={},o=!1){let s={},c={};function l(S,D){S.name in c?c[S.name].push(D):c[S.name]=[D]}function p(S,D){let I=[],P;for(let E of D){let L=E[0],B=E[1],q=E[2];if(P=E[3]==null?{}:E[3],!(L in s)){l(S,D);return}let H=s[L];if(H.inboundNodes.length<=B){l(S,D);return}let Z=H.inboundNodes[B];I.push(Z.outputTensors[q])}I.length>0&&S.apply(pr(I),P)}function f(S){let D=S.name,I=wo(S,e.customObjects!=null?e.customObjects:{});I.setFastWeightInitDuringBuild(o),s[D]=I;let P=S.inboundNodes;P.forEach(E=>{if(!(E instanceof Array))throw new Y(`Corrupted configuration, expected array for nodeData: ${E}`);l(I,E)})}let m=e.name,y=e.layers;for(let S of y)f(S);for(;!CV(c);)for(let S of y){let D=s[S.name];if(D.name in c){let I=c[D.name];delete c[D.name];for(let P of I)p(D,P)}}let b=[],v=[],T=e.inputLayers;for(let S of T){let D=S[0],I=S[1],P=S[2];Pr(D in s);let E=s[D],L=E.inboundNodes[I].outputTensors;b.push(L[P])}let N=e.outputLayers;for(let S of N){let D=S[0],I=S[1],P=S[2];Pr(D in s);let E=s[D],L=E.inboundNodes[I].outputTensors;v.push(L[P])}return new t({inputs:b,outputs:v,name:m})}get stateful(){if(this._stateful)throw new Y("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let t of this.layers)if(t.stateful)return!0;return!1}resetStates(){rt(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}function dS(n,t,e){let r=t.length;if(n==null||Array.isArray(n)&&n.length===0)return t.map(o=>null);if(r===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&t[0]in n?[n[t[0]]]:[n];if(Array.isArray(n)){if(n.length!==r)throw new Error(`Provided ${e} is an array of ${n.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){let o=[];return t.forEach(s=>{s in n?o.push(n[s]):o.push(null)}),o}else throw new Error(`The model has multiple (${r}) outputs, so ${e} must be either an array with ${r} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(n)}`)}function mS(n,t){return dS(n,t,"classWeight")}function lst(n,t){return dS(n,t,"sampleWeight")}async function gS(n,t,e,r){if(t!=null||r!=null)throw new Error("Support sampleWeight is not implemented yet");if(e!=null){let o=rt(()=>{if(n.shape.length===1)return n.clone();if(n.shape.length===2)if(n.shape[1]>1){let l=1;return n.argMax(l)}else{if(n.shape[1]===1)return n.reshape([n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await o.data());Xt(o);let c=[];return s.forEach(l=>{if(e[l]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${l} exists in the data but not in classWeight`);c.push(e[l])}),vr(c,"float32")}else return null}function YG(n,t){return nt(n,t)}let JG=32;function yS(n,t){let e,r,o=t;e=o.xs,r=o.ys,_(e!=null&&r!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=bS("input",n.inputNames,e),c=bS("output",n.outputNames,r),l=s[0].shape[0];_(s.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),_(c.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${c.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let p=0;p<s.length;p++)_(s[p].shape[0]===l,()=>`Batch size mismatch: input ${n.inputNames[p]} has ${s[p].shape[0]}; expected  ${l} based on input ${n.inputNames[0]}.`);for(let p=0;p<c.length;p++)_(c[p].shape[0]===l,()=>`Batch size mismatch: output ${n.outputNames[p]} has ${c[p].shape[0]}; expected  ${l} based on input ${n.inputNames[0]}.`);return{xs:s,ys:c}}function bS(n,t,e){if(e instanceof ot)return[e];if(Array.isArray(e))return _(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${n} keys ${t}.`),e;{let r=[];for(let o of t){if(e[o]==null)throw new Y(`The feature data generated by the dataset lacks the required ${n} key '${o}'.`);r.push(e[o])}return r}}function ZG(n){if(n.length===3)throw new Ut("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function QG(n,t,e){let r=e.batchesPerEpoch!=null;if(_(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),_(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),_(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),_(!r||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),_(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{let o=e.validationData!=null,s,c;if(o)if(xS(e.validationData))_(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{let S=ZG(e.validationData);s=S.xs,c=S.ys}let l=n.makeTrainFunction(),p=n.getDedupedMetricsNames(),f;o?f=p.slice().concat(p.map(S=>"val_"+S)):f=p.slice();let m=nS(e.callbacks,e.yieldEvery),y=e.verbose==null?1:e.verbose,{callbackList:b,history:v}=rS(m,y,e.epochs,null,null,tU(t,e),null,o,f);b.setModel(n),n.history=v,await b.onTrainBegin(),n.stopTraining_=!1;let T=e.initialEpoch==null?0:e.initialEpoch,N=await t.iterator();for(;T<e.epochs;){let S={};await b.onEpochBegin(T);let D=0,I=0;for(r||(N=await t.iterator());r?D<e.batchesPerEpoch:!0;){let P=await N.next();if(r&&P.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${D} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(P.value!=null){let{xs:E,ys:L}=yS(n,P.value),B={};B.batch=I,B.size=E[0].shape[0],await b.onBatchBegin(I,B);let q=[];if(e.classWeight!=null){let J=mS(e.classWeight,n.outputNames);for(let it=0;it<J.length;++it)q.push(await gS(L[it],null,J[it]))}let H=E.concat(L).concat(q),Z=l(H);Xt(H);for(let J=0;J<p.length;++J){let it=p[J],pt=Z[J];B[it]=pt,Sn(pt)}await b.onBatchEnd(I,B),JC(B),I++,D++}if(r?D>=e.batchesPerEpoch:P.done){if(o){let E;xS(e.validationData)?E=ze(await n.evaluateDataset(e.validationData,{batches:e.validationBatches})):E=ze(n.evaluate(s,c,{batchSize:e.validationBatchSize==null?JG:e.validationBatchSize,verbose:0}));for(let L=0;L<n.metricsNames.length;++L)S[`val_${n.metricsNames[L]}`]=E[L]}break}if(n.stopTraining_)break}if(await b.onEpochEnd(T,S),T++,n.stopTraining_)break}return await b.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function tU(n,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(n.size)&&(e=n.size),e}function xS(n){return typeof n.iterator=="function"}function eU(n){return typeof n.next=="function"}async function nU(n,t,e){e=e||{};let r=e.batches!=null,o=n.testFunction,s=[];if(e.verbose>0)throw new Ut("Verbose mode is not implemented yet.");_(!r||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);let c=eU(t)?t:await t.iterator(),l=0,p=0;for(;r?p<e.batches:!0;){let f=await c.next();if(s=rt(()=>{if(f.value){let{xs:m,ys:y}=yS(n,f.value),b=m.concat(y),v=rt(()=>o(b));if(Xt(b),p===0)for(let N=0;N<v.length;++N)s.push(Et(0));let T=b[0].shape[0];for(let N=0;N<v.length;++N){let S=v[N],D=s[N];s[N]=rt(()=>Tt(s[N],nt(T,S))),p>0&&Xt(D)}Xt(v),l+=T,++p}return s}),f.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let f=0;f<s.length;++f){let m=s[f];s[f]=Bt(s[f],l),Xt(m)}return pr(s)}function zv(n){_(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function Lp(n,t,e){return n==null?[null]:Array.isArray(n)?n.map(r=>da(r,t,e-t)):da(n,t,e-t)}function Wv(n,t){return rt(()=>n==null?null:Array.isArray(n)?n.map(e=>Wv(e,t)):GC(n,t.dtype==="int32"?t:t.toInt()))}function Vv(n,t){let e=[],r=0,o=null;for(;r<n;)o=r+t,o>=n&&(o=n),e.push([r,o]),r=o;return e}async function rU(n,t,e,r,o,s,c,l,p,f,m,y,b,v,T){o==null&&(o=32),s==null&&(s=1),m==null&&(m=!0),b==null&&(b=0);let N=!1;if(p!=null&&f!=null&&(N=!0),T!=null&&(N=!0,v==null))throw new Y("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let S=n.checkNumSamples(e,o,v,"steps_per_epoch"),D;S!=null&&(D=yo(0,S)),c==null&&(c=1);let{callbackList:I,history:P}=rS(l,c,s,b,S,v,o,N,y);I.setModel(n),n.history=P,await I.onTrainBegin(),n.stopTraining_=!1;for(let E=b;E<s;++E){await I.onEpochBegin(E);let L={};if(v!=null)throw new Ut("stepsPerEpoch mode is not implemented yet.");{if(m==="batch")throw new Ut("batch shuffling is not implemneted yet");m&&x(D);let B=vr(D),q=Vv(S,o);for(let H=0;H<q.length;++H){let Z={};if(await I.onBatchBegin(H,Z),rt(()=>{let J=q[H][0],it=q[H][1],pt=da(B,J,it-J);Z.batch=H,Z.size=it-J;let ht=Wv(e,pt),dt=t(ht);for(let ft=0;ft<r.length;++ft){let ut=r[ft],bt=dt[ft];Z[ut]=bt,Sn(bt)}if(H===q.length-1&&N){let ft=n.testLoop(p,f,o);for(let ut=0;ut<r.length;++ut){let bt=r[ut],yt=ft[ut];Sn(yt),L["val_"+bt]=yt}}}),await I.onBatchEnd(H,Z),JC(Z),n.stopTraining_)break}B.dispose()}if(await I.onEpochEnd(E,L),n.stopTraining_)break}return await I.onTrainEnd(),await n.history.syncData(),n.history}async function oU(n,t,e,r={}){if(n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;let o,s,c,l,p,f,m;try{let y=r.batchSize==null?32:r.batchSize;zv(y);let b=!1,v=await n.standardizeUserData(t,e,r.sampleWeight,r.classWeight,b,y);o=v[0],s=v[1],m=v[2];let T=!1,N;if(r.validationData!=null&&r.validationData.length>0){if(T=!0,r.validationData.length===2)c=r.validationData[0],l=r.validationData[1];else throw r.validationData.length===3?new Ut("validationData including sample weights is not supported yet."):new Y(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);let q=!0,H=await n.standardizeUserData(c,l,null,null,q,y);p=H[0],f=H[1],N=p.concat(f)}else if(r.validationSplit!=null&&r.validationSplit>0&&r.validationSplit<1){T=!0;let q=Math.floor(o[0].shape[0]*(1-r.validationSplit)),H=o[0].shape[0];p=Lp(o,q,H),o=Lp(o,0,q),f=Lp(s,q,H),s=Lp(s,0,q),N=p.concat(f)}else r.validationSteps!=null&&(T=!0);let S=o.concat(s).concat(m);n.checkTrainableWeightsConsistency();let D=n.makeTrainFunction(),I=n.getDedupedMetricsNames(),P,E;T?(n.makeTestFunction(),P=n.testFunction,E=I.slice().concat(I.map(q=>"val_"+q))):(P=null,N=[],E=I.slice());let L=nS(r.callbacks,r.yieldEvery),B=await rU(n,D,S,I,y,r.epochs,r.verbose,L,P,N,r.shuffle,E,r.initialEpoch,null,null);return B}finally{n.isTraining=!1,ma(o,t),ma(s,e),ma(p,c),ma(f,l),m!=null&&Xt(m)}}function wS(n){let t=[];n instanceof ot&&(n=[n]);for(let e=0;e<n.length;++e){let r=n[e];if(r.rank===1)t.push(Dp(r,1));else{if(r.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function ma(n,t){if(n==null)return;let e=[];if(t instanceof ot)e.push(t.id);else if(Array.isArray(t))t.forEach(o=>e.push(o.id));else if(t!=null)for(let o in t){let s=t[o];e.push(s.id)}let r=[];if(n instanceof ot)e.indexOf(n.id)===-1&&r.push(n);else if(Array.isArray(n))n.forEach(o=>{e.indexOf(o.id)===-1&&r.push(o)});else if(n!=null)for(let o in n){let s=n[o];e.indexOf(s.id)===-1&&r.push(s)}r.forEach(o=>{o.isDisposed||o.dispose()})}function sU(n){return n instanceof ot}function Gv(n){return Array.isArray(n)}function vS(n){return!sU(n)&&!Gv(n)}function TS(n,t,e,r=!0,o=""){if(t==null||t.length===0){if(n!=null){let c=!1;if(Gv(n)&&n.length>0)c=!0;else if(vS(n)){for(let l in n)if(n.hasOwnProperty(l)){c=!0;break}}else c=!0;if(c)throw new Y(`Error when checking model ${o} expected no data, but got ${n}`)}return[]}if(n==null)return t.map(c=>null);let s;if(vS(n)){n=n,s=[];for(let c of t){if(n[c]==null)throw new Y(`No data provided for "${c}". Need data for each key in: ${t}`);s.push(n[c])}}else if(Gv(n)){if(n=n,n.length!==t.length)throw new Y(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);s=n}else{if(n=n,t.length>1)throw new Y(`The model ${o} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);s=[n]}if(s=wS(s),e!=null)for(let c=0;c<t.length;++c){if(e[c]==null)continue;let l=s[c];if(l.shape.length!==e[c].length)throw new Y(`Error when checking ${o}: expected ${t[c]} to have ${e[c].length} dimension(s). but got array with shape ${l.shape}`);for(let p=0;p<e[c].length;++p){if(p===0&&!r)continue;let f=l.shape[p],m=e[c][p];if(m!=null&&m>=0&&f!==m)throw new Y(`Error when checking ${o}: expected ${t[c]} to have shape [${e[c]}], but got array with shape [${l.shape}].`)}}return s}function iU(n,t,e){let r=hi(n.map(s=>s.shape[0]));r.sort();let o=hi(t.map(s=>s.shape[0]));if(o.sort(),r.length>1)throw new Y(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(s=>s.shape))}`);if(o.length>1)throw new Y(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(r.length>0&&o.length>0&&!lt(r,o))throw new Y(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${o[0]} target sample(s).`)}function aU(n,t,e){let r=[xs,am,Rp];for(let o=0;o<n.length;++o){let s=n[o],c=t[o],l=e[o];if(c==null)continue;if(c===Rp&&s.shape[s.shape.length-1]===1)throw new Y(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(r.indexOf(c)!==-1){let p=s.shape.slice(1),f=l.slice(1);for(let m=0;m<p.length;++m){let y=p[m],b=f[m];if(b!=null&&y!==b)throw new Y(`A target Tensor with shape ${s.shape} was passed for an output of shape ${l}, while using a loss function that expects targets to have the same shape as the output.`)}}}}function kS(n,t,e,r=!0,o=""){let s;if(Array.isArray(n)){if(n.length!==t.length)throw new Y(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${n.length} Tensors(s).`);s=n}else{if(t.length>1)throw new Y(`The model expects ${t.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);s=[n]}if(e!=null)for(let c=0;c<t.length;++c){if(e[c]==null)continue;let l=s[c];if(l.shape.length!==e[c].length)throw new Y(`Error when checking ${o}: expected ${t[c]} to have ${e[c].length} dimension(s), but got array with shape ${JSON.stringify(l.shape)}`);for(let p=0;p<e[c].length;++p){if(p===0&&!r)continue;let f=l.shape[p],m=e[c][p];if(m!=null&&m!==f)throw new Y(`Error when checking ${o}: expected ${t[c]} to have shape ${JSON.stringify(e[c])} but got array with shape ${JSON.stringify(l.shape)}.`)}}}function cU(n,t){if(n==null||Array.isArray(n)&&n.length===0)return t.map(r=>[]);let e;if(typeof n=="string"||typeof n=="function")e=[n];else if(Array.isArray(n)||typeof n=="object")e=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(e))return t.map(r=>e);{let r=[];for(let o of t){let s=e.hasOwnProperty(o)?e[o]:[];Array.isArray(s)||(s=[s]),r.push(s)}return r}}let lU="layers-model";class ws extends vo{constructor(t){super(t);this.isTraining=!1}summary(t,e,r=console.log){if(!this.built)throw new Y("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");WG(this,t,e,r)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=zG(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof gs))throw new Y("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(let c in t.loss)if(this.outputNames.indexOf(c)===-1)throw new Y(`Unknown entry in loss dictionary: "${c}". Only expected the following keys: ${this.outputNames}`);for(let c of this.outputNames)t.loss[c]==null&&console.warn(`Output "${c}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${c} during training`),e.push(Fv(t.loss[c]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new Y(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);let c=t.loss;e=c.map(l=>Fv(l))}else{let c=Fv(t.loss);this.outputs.forEach(l=>{e.push(c)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let c=0;c<this.outputs.length;++c){let l=this.internalOutputShapes[c],p=this.outputNames[c];this.feedOutputNames.push(p),this.feedOutputShapes.push(l),this.feedLossFns.push(this.lossFunctions[c])}let r=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],fa("loss",()=>{for(let c=0;c<this.outputs.length;++c){if(r.indexOf(c)!==-1)continue;let l=this.lossFunctions[c];this.outputs.length>1&&(this.metricsTensors.push([l,c]),this.metricsNames.push(this.outputNames[c]+"_loss"))}});let o=cU(t.metrics,this.outputNames),s=(c,l,p)=>{this.outputNames.length>1&&(l=this.outputNames[c]+"_"+l),this.metricsNames.push(l),this.metricsTensors.push([p,c])};fa("metric",()=>{for(let c=0;c<this.outputs.length;++c){if(r.indexOf(c)!==-1)continue;let l=o[c],p=f=>{let m="",y,b,v;for(let T of f){if(typeof T=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(T)!==-1){let S=this.internalOutputShapes[c];S[S.length-1]===1||this.lossFunctions[c]===am?["accuracy","acc"].indexOf(T)!==-1?b=Rv:["crossentropy","ce"].indexOf(T)!==-1&&(b=iS):this.lossFunctions[c]===im?["accuracy","acc"].indexOf(T)!==-1?b=aS:["crossentropy","ce"].indexOf(T)!==-1&&(b=cS):["accuracy","acc"].indexOf(T)!==-1?b=Pv:["crossentropy","ce"].indexOf(T)!==-1&&(b=Ov);let D;["accuracy","acc"].indexOf(T)!==-1?D="acc":["crossentropy","ce"].indexOf(T)!==-1&&(D="ce"),v=b,y=m+D}else{let S=BG(T);v=S,y=m+pm(T)}let N;fa(y,()=>{N=v}),s(c,y,N)}};p(l)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){if(this.collectedTrainableWeights==null)return;this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,r={}){let o=r.batchSize==null?32:r.batchSize;zv(o);let s=!0,c=this.standardizeUserDataXY(t,e,s,o);try{let l=c[0].concat(c[1]);this.makeTestFunction();let p=this.testFunction,f=this.testLoop(p,l,o,r.verbose,r.steps);return pr(f)}finally{ma(c[0],t),ma(c[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),nU(this,t,e)}checkNumSamples(t,e,r,o="steps"){let s;if(r!=null){if(s=null,e!=null)throw new Y(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?s=t[0].shape[0]:s=t.shape[0];else throw new Y(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return s}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new Y("`outputs` is an empty Array, which is not allowed.");let r=Array.isArray(e),o=r?e:[e],s=this.retrieveSymbolicTensors(o),c=new yi;if(t instanceof ot&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new Y(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let p=0;p<this.inputs.length;++p)c.add(this.inputs[p],t[p])}else for(let p of this.inputs){let f=t[p.name];if(f==null)throw new Y(`No value is provided for the model's input ${p.name}`);c.add(p,f)}let l=Op(s,c);return r?l:l[0]}retrieveSymbolicTensors(t){let e=pa(null,t.length),r=t.length;for(let o of this.layers){let s=Array.isArray(o.output)?o.output:[o.output],c=s.map(l=>l.name);for(let l=0;l<t.length;++l){let p=c.indexOf(t[l]);if(p!==-1&&(e[l]=s[p],r--),r===0)break}if(r===0)break}if(r>0){let o=[];throw e.forEach((s,c)=>{s==null&&o.push(t[c])}),new Y(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return e}predictLoop(t,e=32,r=!1){return rt(()=>{let o=this.checkNumSamples(t);if(r)throw new Ut("Verbose predictLoop() is not implemented yet.");let s=Vv(o,e),c=this.outputs.map(l=>[]);for(let l=0;l<s.length;++l){let p=rt(()=>{let f=s[l][0],m=s[l][1],y=Lp(t,f,m),b=[];if(Array.isArray(y))for(let T=0;T<y.length;++T)b.push({key:this.inputs[T],value:y[T]});else b.push({key:this.inputs[0],value:y});let v=new yi(b);return Op(this.outputs,v)});p.forEach((f,m)=>c[m].push(f))}return pr(c.map(l=>Qe(l,0)))})}predict(t,e={}){let r=wS(t);kS(r,this.inputNames,this.feedInputShapes,!1);try{let o=e.batchSize==null?32:e.batchSize;return zv(o),this.predictLoop(r,o)}finally{ma(r,t)}}predictOnBatch(t){kS(t,this.inputNames,this.feedInputShapes,!0);let e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,r=!0,o){if(this.optimizer_==null)throw new Jr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let c=0;c<this.feedOutputShapes.length;++c){let l=this.feedOutputShapes[c],p=this.feedLossFns[c];p===im?s.push(l.slice(0,l.length-1).concat([1])):s.push(l)}if(t=TS(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=TS(e,this.feedOutputNames,s,!1,"target"),iU(t,e,null),aU(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&t[0].shape[0]%o!==0)throw new Y(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,r,o,s=!0,c){let[l,p]=this.standardizeUserDataXY(t,e,s,c);if(r!=null)throw new Error("sample weight is not supported yet.");let f=null;if(o!=null){let m=mS(o,this.outputNames);f=[];for(let y=0;y<m.length;++y)f.push(await gS(p[y],null,m[y]))}return[l,p,f]}testLoop(t,e,r,o=0,s){return rt(()=>{let c=this.checkNumSamples(e,r,s,"steps"),l=[];if(o>0)throw new Ut("Verbose mode is not implemented yet.");if(s!=null)throw new Ut("steps mode in testLoop() is not implemented yet");{let p=Vv(c,r),f=vr(yo(0,c));for(let m=0;m<p.length;++m){let y=p[m][0],b=p[m][1],v=da(f,y,b-y),T=Wv(e,v),N=t(T);if(m===0)for(let S=0;S<N.length;++S)l.push(Et(0));for(let S=0;S<N.length;++S){let D=N[S];l[S]=Tt(l[S],nt(b-y,D))}}for(let m=0;m<l.length;++m)l[m]=Bt(l[m],c)}return l})}getDedupedMetricsNames(){let t=this.metricsNames,e=[];for(let r=0;r<t.length;++r){let o=t[r],s=o;if(DC(t,o)>1){let c=DC(t.slice(0,r),o);s+=`_${c}`}e.push(s)}return e}makeTrainFunction(){return t=>{let e=[],r=t.slice(0,this.inputs.length),o=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),c=[],l=()=>{let y=[];for(let N=0;N<this.inputs.length;++N)y.push({key:this.inputs[N],value:r[N]});let b=new yi(y),v=Op(this.outputs,b,{training:!0}),T;for(let N=0;N<this.lossFunctions.length;++N){let S=this.lossFunctions[N],D=S(o[N],v[N]);s[N]!=null&&(D=YG(D,s[N]));let I=en(D);e.push(I),N===0?T=D:T=Tt(T,D)}for(let N=0;N<this.metricsTensors.length;++N){let S;if(this.outputs.length>1&&N<this.outputs.length)S=e[N];else{let D=this.metricsTensors[N][0],I=this.metricsTensors[N][1];S=en(D(o[I],v[I]))}Sn(S),c.push(S)}return T=en(T),this.calculateLosses().forEach(N=>{T=Tt(T,N)}),T},p=this.collectedTrainableWeights.map(y=>y.read()),f=!0,m=this.optimizer_.minimize(l,f,p);return[m].concat(c)}}makeTestFunction(){this.testFunction=t=>rt(()=>{let e=[],r,o=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),c=[];for(let f=0;f<this.inputs.length;++f)c.push({key:this.inputs[f],value:o[f]});let l=new yi(c),p=Op(this.outputs,l);for(let f=0;f<this.lossFunctions.length;++f){let m=this.lossFunctions[f],y=en(m(s[f],p[f]));f===0?r=y:r=Tt(r,y),e.push(r)}for(let f=0;f<this.metricsTensors.length;++f){let m=this.metricsTensors[f][0],y=this.metricsTensors[f][1],b=en(m(s[y],p[y]));e.push(b)}return e})}async fit(t,e,r={}){return oU(this,t,e,r)}async fitDataset(t,e){return QG(this,t,e)}async trainOnBatch(t,e){let r=await this.standardizeUserData(t,e),o=r[0],s=r[1],c=this.makeTrainFunction(),l=c(o.concat(s)),p=[];for(let f of l){let m=await f.data();p.push(m[0])}return Xt(l),pr(p)}getNamedWeights(t){let e=[],r=t!=null&&t.trainableOnly,o=r?this.trainableWeights:this.weights,s=this.getWeights(r);for(let c=0;c<o.length;++c){if(r&&!o[c].trainable)continue;e.push({name:o[c].originalName,tensor:s[c]})}return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){let t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let e=ed().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-ed().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=bs(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>bs(e))}else{let e=Object.keys(this.loss);t={};let r=this.loss;for(let o of e)if(typeof r[o]=="string")t[o]=bs(r[o]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[bs(pm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>bs(pm(t)));{let t={};for(let e in this.metrics)t[e]=bs(pm(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let e=Pp(t.optimizer_config),r=wo(e),o;if(typeof t.loss=="string")o=ha(t.loss);else if(Array.isArray(t.loss))o=t.loss.map(c=>ha(c));else if(t.loss!=null){o={};for(let c in t.loss)o[c]=ha(t.loss[c])}let s;if(Array.isArray(t.metrics))s=t.metrics.map(c=>ha(c));else if(t.metrics!=null){s={};for(let c in t.metrics)s[c]=ha(t.metrics[c])}this.compile({loss:o,metrics:s,optimizer:r})}async save(t,e){if(typeof t=="string"){let f=Mx(t);if(f.length===0)throw new Y(`Cannot find any save handlers for URL '${t}'`);if(f.length>1)throw new Y(`Found more than one (${f.length}) save handlers for URL '${t}'`);t=f[0]}if(t.save==null)throw new Y("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let r=await Ox(this.getNamedWeights(e)),o=!1,s=null,c=this.toJSON(s,o),l={modelTopology:c,format:lU,generatedBy:`TensorFlow.js tfjs-layers v${fm}`,convertedBy:null},p=e==null?!1:e.includeOptimizer;if(p&&this.optimizer!=null){l.trainingConfig=this.getTrainingConfig();let f="optimizer",{data:m,specs:y}=await Ox(await this.optimizer.getWeights(),f);r.specs.push(...y),r.data=Hf([r.data,m])}if(this.userDefinedMetadata!=null){let f=!0;uS(this.userDefinedMetadata,this.name,f),l.userDefinedMetadata=this.userDefinedMetadata}return l.weightData=r.data,l.weightSpecs=r.specs,t.save(l)}setUserDefinedMetadata(t){uS(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}ws.className="Model",vt(ws);class NS extends ws{}NS.className="Functional",vt(NS);async function uU(n,t){"modelTopology"in n||(n={modelTopology:n}),n=n;let e=n.modelTopology;e.model_config!=null&&(e=e.model_config);let r=Pp(e),o=wo(r,t);if(n.weightsManifest!=null){let s=await JN(n.weightsManifest,n.pathPrefix,o.weights.map(l=>l.originalName)),c={};for(let l of o.weights)c[l.originalName]=s[l.originalName];o.loadWeights(c),Xt(s)}return o}async function pU(n,t){if(t==null&&(t={}),typeof n=="string"){let e=Bx(n,t);if(e.length===0)e.push(Xf(n,t));else if(e.length>1)throw new Y(`Found more than one (${e.length}) load handlers for URL '${n}'`);n=e[0]}return hU(n,void 0,t)}async function hU(n,t,e){if(e==null&&(e={}),n.load==null)throw new Y("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await n.load(),o=r.modelTopology;o.model_config!=null&&(o=o.model_config);let s=e.strict==null?!0:e.strict,c=r.weightData!=null&&r.weightSpecs!=null&&s,l=wo(Pp(o),t,c),p=r.trainingConfig;if(p!=null&&l.loadTrainingConfig(p),r.userDefinedMetadata!=null&&l.setUserDefinedMetadata(r.userDefinedMetadata),r.weightData!=null){if(r.weightSpecs==null)throw new Y("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:f,optimizerWeights:m}=fU(r.weightData,r.weightSpecs);l.loadWeights(f,s),l.optimizer!=null&&m.length>0&&await l.optimizer.setWeights(m),Xt(f),Xt(m.map(y=>y.tensor))}return l}function fU(n,t){let e=qf(n,t),r={},o=[];return t.forEach(s=>{s.group==="optimizer"?o.push({name:s.name,tensor:e[s.name]}):r[s.name]=e[s.name]}),{modelWeights:r,optimizerWeights:o}}class ga extends ws{constructor(t){super({inputs:[],outputs:[]});if(t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:em("sequential_"),t.layers!=null)for(let e of t.layers)this.add(e)}checkShape(t){let e=t.inboundNodes[0].outputTensors[0].shape;if(e.some(r=>r<0))throw new Y(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){let e=t instanceof ga||t instanceof ws,r;if(e){if(r=t,r.outputs.length!==1)throw new Y("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(r.inputs.length!==1)throw new Y("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new Y("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let o=YC({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(o)}if(e)this.outputs=r.outputs,this.inputs=r.inputs;else{if(t.inboundNodes.length!==1)throw new Y(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new Y("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=XC(this.outputs[0])}this.inboundNodes=[],new om({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:pa(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{let o=t.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(Re(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ws({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,r=console.log){this.built||this.build(),super.summary(t,e,r)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,r={}){if(!this.built)throw new Jr("The model needs to be compiled before being used.");return this.model.evaluate(t,e,r)}async evaluateDataset(t,e){if(!this.built)throw new Jr("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,r={}){if(!this.built)throw new Jr("The model needs to be compiled before being used.");return this.model.fit(t,e,r)}async fitDataset(t,e){if(!this.built)throw new Jr("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,r={},o=!1){let s,c={};if(e instanceof Array){if(!(e[0].className!=null)||e[0].className==="Merge")throw new Y("Legacy serialization format not supported yet.");s=e}else _(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=e.layers,delete e.layers,c=e;let l=new t(c);if(!(l instanceof ga))throw new Ut(`Sequential.fromConfig called on non-Sequential input: ${l}`);for(let p of s){let f=void 0,m=wo(p,f,o);o&&m.setFastWeightInitDuringBuild(!0),l.add(m)}return l}set stopTraining(t){if(this.model==null)throw new Y("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new Y("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let t=[];for(let e of this.layers){let r={};r.className=e.getClassName(),r.config=e.getConfig(),t.push(r)}return{name:this.name,layers:t}}}ga.className="Sequential",vt(ga);function dU(n){return new ws(n)}function mU(n){return new ga(n)}function gU(n,t){return t==null&&(t={}),pU(n,t)}function _S(n){return YC(n)}function yU(n,t){Lr.registerCallbackConstructor(n,t)}class kr extends Qi{getConfig(){return{}}}class CS extends kr{apply(t,e=1){return qV(t,e)}}CS.className="elu",vt(CS);class SS extends kr{apply(t){return Td(t)}}SS.className="selu",vt(SS);class $S extends kr{apply(t){return Vo(t)}}$S.className="relu",vt($S);class IS extends kr{apply(t){return rt(()=>oa(6,Vo(t)))}}IS.className="relu6",vt(IS);class ES extends kr{apply(t){return t}}ES.className="linear",vt(ES);class DS extends kr{apply(t){return Bo(t)}}DS.className="sigmoid",vt(DS);class AS extends kr{apply(t){return jV(t)}}AS.className="hardSigmoid",vt(AS);class FS extends kr{apply(t){return Ic(t)}}FS.className="softplus",vt(FS);class RS extends kr{apply(t){return HV(t)}}RS.className="softsign",vt(RS);class PS extends kr{apply(t){return Nc(t)}}PS.className="tanh",vt(PS);class Uv extends kr{apply(t,e=-1){return ca(t,e)}}Uv.className="softmax",vt(Uv);class OS extends kr{apply(t,e=-1){return gd(t,e)}}OS.className="logSoftmax",vt(OS);class LS extends kr{apply(t,e=1){return rt(()=>Bo(t.mul(e)).mul(t))}}LS.className="swish",vt(LS);function bi(n){return n.getClassName()}function qv(n,t={}){return Sp(n,Dr.getMap().classNameMap,t,"activation")}function xi(n){if(n==null){let t={};return t.className="linear",t.config={},qv(t)}if(typeof n=="string"){let t={};return t.className=n,t.config={},qv(t)}else return n instanceof kr?n:qv(n)}function Hv(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class MS extends Qi{}class Mp extends MS{constructor(t){super();Hv(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return rt(()=>{let e=xe([1]);return this.hasL1&&(e=Tt(e,zt(nt(this.l1,bn(t))))),this.hasL2&&(e=Tt(e,zt(nt(this.l2,Ap(t))))),e.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Mp.className="L1L2",vt(Mp);function bU(n){return Hv(n),new Mp({l1:n!=null?n.l1:null,l2:0})}function xU(n){return Hv(n),new Mp({l2:n!=null?n.l2:null,l1:0})}let BS={l1l2:"L1L2"};function Pe(n){return lv(n)}function zS(n,t={}){return Sp(n,Dr.getMap().classNameMap,t,"regularizer")}function Ke(n){if(n==null)return null;if(typeof n=="string"){let t=n in BS?BS[n]:n,e={className:t,config:{}};return zS(e)}else return n instanceof MS?n:zS(n)}class jv extends ye{constructor(t){super(t==null?{}:t);this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=Qt(t);let r=Vo(t);return this.maxValue!=null&&(r=ar(r,0,this.maxValue)),r}computeOutputShape(t){return t}getConfig(){let t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}jv.className="ReLU",vt(jv);class Kv extends ye{constructor(t){super(t==null?{}:t);this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){let r=Qt(t);return fd(r,this.alpha)}computeOutputShape(t){return t}getConfig(){let t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Kv.className="LeakyReLU",vt(Kv);class Xv extends ye{constructor(t){super(t==null?{}:t);if(this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=je(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ke(t.alphaRegularizer),this.alphaConstraint=Tn(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new Y(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Re(t);let e=t.slice(1);if(this.sharedAxes!=null)for(let o of this.sharedAxes)e[o-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let r={};if(this.sharedAxes!=null)for(let o=1;o<t.length;++o)r[o]=t[o];this.inputSpec=[new In({ndim:t.length,axes:r})],this.built=!0}call(t,e){return t=Qt(t),pp(t,this.alpha.read())}getConfig(){let t={alphaInitializer:rn(this.alphaInitializer),alphaRegularizer:Pe(this.alphaRegularizer),alphaConstraint:vn(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Xv.className="PReLU",vt(Xv);class Yv extends ye{constructor(t){super(t==null?{}:t);if(this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new Ut(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){let r=Qt(t);return _c(r)}computeOutputShape(t){return t}getConfig(){let t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Yv.className="ELU",vt(Yv);class Jv extends ye{constructor(t){super(t==null?{}:t);this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){let r=Qt(t);return r.mul(Ep(r.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){let t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}Jv.className="ThresholdedReLU",vt(Jv);class Zv extends ye{constructor(t){super(t==null?{}:t);this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new Uv().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){let r=Qt(t);return this.softmax(r,this.axis)}computeOutputShape(t){return t}getConfig(){let t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}Zv.className="Softmax",vt(Zv);function Hc(n,t,e){if(typeof n=="number")return pa(n,t);if(n.length!==t)throw new Y(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${n.length} elements.`);for(let r=0;r<t;++r){let o=n[r];if(!BV(o))throw new Y(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(n)} including a non-integer number ${o}`)}return n}function To(n,t,e,r,o=1){if(n==null)return n;let s=t+(t-1)*(o-1),c;return e==="same"?c=n:c=n-s+1,Math.floor((c+r-1)/r)}function dm(n,t,e,r){if(n==null)return null;if(r==="valid")n=n*t+di([e-t,0]);else if(r==="same")n=n*t;else throw new Y(`Unsupport padding mode: ${r}.`);return n}function Qv(n,t){return rt(()=>(nn(t),t==="channelsFirst"?Kt(n,[0,2,3,1]):n))}function WS(n,t){return rt(()=>(nn(t),t==="channelsFirst"?Kt(n,[0,2,3,4,1]):n))}function VS(n,t,e,r=1,o="valid",s,c=1){return rt(()=>{if(s==null&&(s=go()),nn(s),n.shape.length!==3)throw new Y(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(t.shape.length!==3)throw new Y(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new Y(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(s==="channelsFirst"&&(n=Kt(n,[0,2,1])),o==="causal")throw new Ut("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let l=cd(n,t,r,o==="same"?"same":"valid","NWC",c);return e!=null&&(l=qo(l,e)),l})}function ust(n,t,e=1,r="valid",o,s=1){return rt(()=>(nn(o),VS(n,t,null,e,r,o,s)))}function pst(n,t,e=[1,1],r="valid",o,s){return rt(()=>(nn(o),t0(n,t,null,e,r,o,s)))}function t0(n,t,e,r=[1,1],o="valid",s,c,l=null){return rt(()=>{if(s==null&&(s=go()),nn(s),n.rank!==3&&n.rank!==4)throw new Y(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(t.rank!==3&&t.rank!==4)throw new Y(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let p=Qv(n,s);if(o==="causal")throw new Ut("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return p=qw({x:p,filter:t,strides:r,pad:o==="same"?"same":"valid",dilations:c,dataFormat:"NHWC",bias:e,activation:l}),s==="channelsFirst"&&(p=Kt(p,[0,3,1,2])),p})}function hst(n,t,e=[1,1,1],r="valid",o,s){return rt(()=>(nn(o),GS(n,t,null,e,r,o,s)))}function GS(n,t,e,r=[1,1,1],o="valid",s,c){return rt(()=>{if(s==null&&(s=go()),nn(s),n.rank!==4&&n.rank!==5)throw new Y(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(t.rank!==4&&t.rank!==5)throw new Y(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let l=WS(n,s);if(o==="causal")throw new Ut("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return l=gw(l,t,r,o==="same"?"same":"valid","NDHWC",c),e!=null&&(l=qo(l,e)),s==="channelsFirst"&&(l=Kt(l,[0,4,1,2,3])),l})}class mm extends ye{constructor(t,e){super(e);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",mm.verifyArgs(e),this.rank=t,$n(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Ut(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Hc(e.kernelSize,t,"kernelSize"),this.strides=Hc(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,Or(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,nn(this.dataFormat),this.activation=xi(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=je(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Tn(e.biasConstraint),this.biasRegularizer=Ke(e.biasRegularizer),this.activityRegularizer=Ke(e.activityRegularizer),this.dilationRate=Hc(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new Y(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new Y(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new Y(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(Pr("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!pv(t.kernelSize,"number",1,3))throw new Y(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){let t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:bi(this.activation),useBias:this.useBias,biasInitializer:rn(this.biasInitializer),biasRegularizer:Pe(this.biasRegularizer),activityRegularizer:Pe(this.activityRegularizer),biasConstraint:vn(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class jc extends mm{constructor(t,e){super(t,e);this.kernel=null,jc.verifyArgs(e),this.filters=e.filters,$n(this.filters,"filters"),this.kernelInitializer=je(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Tn(e.kernelConstraint),this.kernelRegularizer=Ke(e.kernelRegularizer)}build(t){t=Re(t);let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new Y(`The channel dimension of the input should be defined. Found ${t[e]}`);let r=t[e],o=this.kernelSize.concat([r,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:r}}],this.built=!0}call(t,e){return rt(()=>{t=Qt(t);let r,o=this.bias==null?null:this.bias.read(),s=FC(this.activation.getClassName());if(s!=null&&this.rank===2)r=t0(t,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)r=VS(t,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)r=t0(t,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)r=GS(t,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Ut("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(r=this.activation.apply(r))}return r})}computeOutputShape(t){t=Re(t);let e=[],r=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let s=0;s<r.length;++s){let c=To(r[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);e.push(c)}let o=[t[0]];return this.dataFormat==="channelsLast"?(o=o.concat(e),o.push(this.filters)):(o.push(this.filters),o=o.concat(e)),o}getConfig(){let t={filters:this.filters,kernelInitializer:rn(this.kernelInitializer),kernelRegularizer:Pe(this.kernelRegularizer),kernelConstraint:vn(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new Y(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class Kc extends jc{constructor(t){super(2,t);Kc.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!pv(t.kernelSize,"number",1,2))throw new Y(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Kc.className="Conv2D",vt(Kc);class Bp extends jc{constructor(t){super(3,t);Bp.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new Y(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Bp.className="Conv3D",vt(Bp);class e0 extends Kc{constructor(t){super(t);if(this.inputSpec=[new In({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new Y(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Re(t),t.length!==4)throw new Y("Input should have rank 4; Received input shape: "+JSON.stringify(t));let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new Y("The channel dimension of the inputs should be defined. Found `None`.");let r=t[e],o=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new In({ndim:4,axes:{[e]:r}})],this.built=!0}call(t,e){return rt(()=>{let r=Qt(t);if(r.shape.length!==4)throw new Y(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);let o=r.shape,s=o[0],c,l;this.dataFormat==="channelsFirst"?(c=2,l=3):(c=1,l=2);let p=o[c],f=o[l],m=this.kernelSize[0],y=this.kernelSize[1],b=this.strides[0],v=this.strides[1],T=dm(p,b,m,this.padding),N=dm(f,v,y,this.padding),S=[s,T,N,this.filters];this.dataFormat!=="channelsLast"&&(r=Kt(r,[0,2,3,1]));let D=ld(r,this.kernel.read(),S,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(D=Kt(D,[0,3,1,2])),this.bias!=null&&(D=qo(D,this.bias.read(),this.dataFormat)),this.activation!=null&&(D=this.activation.apply(D)),D})}computeOutputShape(t){t=Re(t);let e=t.slice(),r,o,s;this.dataFormat==="channelsFirst"?(r=1,o=2,s=3):(r=3,o=1,s=2);let c=this.kernelSize[0],l=this.kernelSize[1],p=this.strides[0],f=this.strides[1];return e[r]=this.filters,e[o]=dm(e[o],p,c,this.padding),e[s]=dm(e[s],f,l,this.padding),e}getConfig(){let t=super.getConfig();return delete t.dilationRate,t}}e0.className="Conv2DTranspose",vt(e0);class US extends jc{constructor(t,e){super(t,e);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new Y("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new Y("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new Y(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=je(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ke(e.depthwiseRegularizer),this.depthwiseConstraint=Tn(e.depthwiseConstraint),this.pointwiseInitializer=je(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ke(e.pointwiseRegularizer),this.pointwiseConstraint=Tn(e.pointwiseConstraint)}build(t){if(t=Re(t),t.length<this.rank+2)throw new Y(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new Y(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);let r=t[e],o=this.kernelSize.concat([r,this.depthMultiplier]),s=[];for(let l=0;l<this.rank;++l)s.push(1);s.push(r*this.depthMultiplier,this.filters);let c=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,c,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,c,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,c,this.biasConstraint):this.bias=null,this.inputSpec=[new In({ndim:this.rank+2,axes:{[e]:r}})],this.built=!0}call(t,e){return rt(()=>{t=Qt(t);let r;if(this.rank===1)throw new Ut("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Kt(t,[0,2,3,1])),r=Rw(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(r=qo(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),this.dataFormat==="channelsFirst"&&(r=Kt(r,[0,3,1,2])),r})}getConfig(){let t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=rn(this.depthwiseInitializer),t.pointwiseInitializer=rn(this.pointwiseInitializer),t.depthwiseRegularizer=Pe(this.depthwiseRegularizer),t.pointwiseRegularizer=Pe(this.pointwiseRegularizer),t.depthwiseConstraint=vn(this.depthwiseConstraint),t.pointwiseConstraint=vn(this.pointwiseConstraint),t}}US.className="SeparableConv";class n0 extends US{constructor(t){super(2,t)}}n0.className="SeparableConv2D",vt(n0);class zp extends jc{constructor(t){super(1,t);zp.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){let t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!pv(t.kernelSize,"number",1,1))throw new Y(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}zp.className="Conv1D",vt(zp);class r0 extends ye{constructor(t){super(t);typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return rt(()=>{if(t=Qt(t),this.dataFormat==="channelsLast"){let r=qd(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return qd(r,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let r=qd(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return qd(r,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}r0.className="Cropping2D",vt(r0);class o0 extends ye{constructor(t){super(t);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){let e=t[2]==null?null:this.size[0]*t[2],r=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,r]}else{let e=t[1]==null?null:this.size[0]*t[1],r=t[2]==null?null:this.size[1]*t[2];return[t[0],e,r,t[3]]}}call(t,e){return rt(()=>{let r=Qt(t),o=r.shape;if(this.dataFormat==="channelsFirst"){r=Kt(r,[0,2,3,1]);let s=this.size[0]*o[2],c=this.size[1]*o[3],l=r.resizeNearestNeighbor([s,c]);return Kt(l,[0,3,1,2])}else{let s=this.size[0]*o[1],c=this.size[1]*o[2];return r.resizeNearestNeighbor([s,c])}})}getConfig(){let t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}o0.className="UpSampling2D",vt(o0);function wU(n,t,e=[1,1],r="valid",o,s){return rt(()=>{o==null&&(o=go()),nn(o);let c=Qv(n,o);if(n.rank!==4)throw new Y(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(t.rank!==4)throw new Y(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return c=na(c,t,e,r==="same"?"same":"valid","NHWC",s),o==="channelsFirst"&&(c=Kt(c,[0,3,1,2])),c})}class s0 extends mm{constructor(t){super(2,t);this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=je(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Tn(t.depthwiseConstraint),this.depthwiseRegularizer=Ke(t.depthwiseRegularizer)}build(t){if(t=Re(t),t.length<4)throw new Y(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);let e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new Y(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);let r=t[e],o=[this.kernelSize[0],this.kernelSize[1],r,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[r*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return rt(()=>{t=Qt(t);let r=wU(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(r=qo(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),r})}computeOutputShape(t){t=Re(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],r=this.dataFormat==="channelsFirst"?t[3]:t[2],o=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=To(e,this.kernelSize[0],this.padding,this.strides[0]),c=To(r,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],o,s,c]:[t[0],s,c,o]}getConfig(){let t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=rn(this.depthwiseInitializer),t.depthwiseRegularizer=Pe(this.depthwiseRegularizer),t.depthwiseConstraint=vn(this.depthwiseRegularizer),t}}s0.className="DepthwiseConv2D",vt(s0);function qS(n,t,e,r){if(Array.isArray(n)){if(t!=null||e!=null)throw new Y("When inputs is an array, neither initialState or constants should be provided");r!=null&&(e=n.slice(n.length-r,n.length),n=n.slice(0,n.length-r)),n.length>1&&(t=n.slice(1,n.length)),n=n[0]}function o(s){return s==null||Array.isArray(s)?s:[s]}return t=o(t),e=o(e),{inputs:n,initialState:t,constants:e}}function HS(n,t,e,r=!1,o,s,c=!1,l=!1){return rt(()=>{let p=t.shape.length;if(p<3)throw new Y(`Input should be at least 3D, but is ${p}D.`);let f=[1,0].concat(yo(2,p));if(t=Kt(t,f),s!=null)throw new Ut("The rnn() functoin of the deeplearn.js backend does not support constants yet.");c&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=o.asType("bool").asType("float32"),o.rank===p-1&&(o=cr(o,-1)),o=Kt(o,f)),r&&(t=Rr(t,0),o!=null&&(o=Rr(o,0)));let m=[],y,b=e,v=t.shape[0],T=mo(t),N;o!=null&&(N=mo(o));for(let D=0;D<v;++D){let I=T[D],P=rt(()=>n(I,b));if(o==null)y=P[0],b=P[1];else{let E=rt(()=>{let L=N[D],B=qn(L).sub(L),q=P[0].mul(L).add(b[0].mul(B)),H=b.map((Z,J)=>P[1][J].mul(L).add(Z.mul(B)));return{output:q,newStates:H}});y=E.output,b=E.newStates}l&&m.push(y)}let S;if(l){let D=1;S=ur(m,D)}return[y,S,b]})}class ko extends ye{constructor(t){super(t);let e;if(t.cell==null)throw new Y("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new bm({cells:t.cell}):e=t.cell,e.stateSize==null)throw new Y("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new In({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return yo(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){$v(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);let r=e[0],o;if(this.returnSequences?o=[t[0],t[1],r]:o=[t[0],r],this.returnState){let s=[];for(let c of e)s.push([t[0],c]);return[o].concat(s)}else return o}computeMask(t,e){return rt(()=>{Array.isArray(e)&&(e=e[0]);let r=this.returnSequences?e:null;if(this.returnState){let o=this.states.map(s=>null);return[r].concat(o)}else return r})}get states(){if(this.states_==null){let t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let r=0;r<t;++r)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){let e=null;if(this.numConstants!=null)throw new Ut("Constants support is not implemented in RNN yet.");$v(t)&&(t=t[0]),t=t;let r=this.stateful?t[0]:null,o=t.slice(2);this.inputSpec[0]=new In({shape:[r,null,...o]});let s=[t[0]].concat(t.slice(2));if(e!=null)throw new Ut("Constants support is not implemented in RNN yet.");this.cell.build(s);let c;if(Array.isArray(this.cell.stateSize)?c=this.cell.stateSize:c=[this.cell.stateSize],this.stateSpec!=null){if(!lt(this.stateSpec.map(l=>l.shape[l.shape.length-1]),c))throw new Y(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=c.map(l=>new In({shape:[null,l]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){rt(()=>{if(!this.stateful)throw new Go("Cannot call resetStates() on an RNN Layer that is not stateful.");let r=this.inputSpec[0].shape[0];if(r==null)throw new Y("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>xe([r,o])):this.states_=[xe([r,this.cell.stateSize])];else if(t==null)Xt(this.states_),this.keptStates!=null&&(Xt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>xe([r,o])):this.states_[0]=xe([r,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Y(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):Xt(this.states_);for(let o=0;o<this.states_.length;++o){let s=t[o],c=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,l=[r,c];if(!lt(s.shape,l))throw new Y(`State ${o} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${s.shape}`);this.states_[o]=s}}this.states_=this.states_.map(o=>Sn(o.clone()))})}apply(t,e){let r=e==null?null:e.initialState,o=e==null?null:e.constants;e==null&&(e={});let s=qS(t,r,o,this.numConstants);t=s.inputs,r=s.initialState,o=s.constants;let c=[],l=[];if(r!=null){e.initialState=r,c=c.concat(r),this.stateSpec=[];for(let f of r)this.stateSpec.push(new In({shape:f.shape}));l=l.concat(this.stateSpec)}o!=null&&(e.constants=o,c=c.concat(o),this.numConstants=o.length);let p=c[0]instanceof xo;if(p){let f=[t].concat(c),m=this.inputSpec.concat(l),y=this.inputSpec;this.inputSpec=m;let b=super.apply(f,e);return this.inputSpec=y,b}else return super.apply(t,e)}call(t,e){return rt(()=>{let r=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;t=Qt(t),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(t));let c=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==c)throw new Y(`RNN Layer has ${c} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let l={training:o},p=(T,N)=>{let S=this.cell.call([T].concat(N),l);return[S[0],S.slice(1)]},f=HS(p,t,s,this.goBackwards,r,null,this.unroll,this.returnSequences),m=f[0],y=f[1],b=f[2];this.stateful&&this.resetStates(b,o);let v=this.returnSequences?y:m;return this.returnState?[v].concat(b):v})}getInitialState(t){return rt(()=>{let e=xe(t.shape);return e=zt(e,[1,2]),e=Dp(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(r=>r>1?xv(e,[1,r]):e):this.cell.stateSize>1?[xv(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){let t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);let r=this.cell.getConfig();return this.getClassName()===ko.className&&(e.cell={className:this.cell.getClassName(),config:r}),Object.assign({},r,t,e)}static fromConfig(t,e,r={}){let o=e.cell,s=wo(o,r);return new t(Object.assign(e,{cell:s}))}}ko.className="RNN",vt(ko);class Xc extends ye{}class gm extends Xc{constructor(t){super(t);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,$n(this.units,"units"),this.activation=xi(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=je(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=je(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=je(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ke(t.kernelRegularizer),this.recurrentRegularizer=Ke(t.recurrentRegularizer),this.biasRegularizer=Ke(t.biasRegularizer),this.kernelConstraint=Tn(t.kernelConstraint),this.recurrentConstraint=Tn(t.recurrentConstraint),this.biasConstraint=Tn(t.biasConstraint),this.dropout=Vc([1,di([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Vc([1,di([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Re(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return rt(()=>{if(t=t,t.length!==2)throw new Y(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let r=t[1];t=t[0];let o=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=wi({ones:()=>qn(t),rate:this.dropout,training:o})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=wi({ones:()=>qn(r),rate:this.recurrentDropout,training:o}));let s,c=this.dropoutMask,l=this.recurrentDropoutMask;c!=null?s=Uo(nt(t,c),this.kernel.read()):s=Uo(t,this.kernel.read()),this.bias!=null&&(s=qo(s,this.bias.read())),l!=null&&(r=nt(r,l));let p=Tt(s,Uo(r,this.recurrentKernel.read()));return this.activation!=null&&(p=this.activation.apply(p)),[p,p]})}getConfig(){let t=super.getConfig(),e={units:this.units,activation:bi(this.activation),useBias:this.useBias,kernelInitializer:rn(this.kernelInitializer),recurrentInitializer:rn(this.recurrentInitializer),biasInitializer:rn(this.biasInitializer),kernelRegularizer:Pe(this.kernelRegularizer),recurrentRegularizer:Pe(this.recurrentRegularizer),biasRegularizer:Pe(this.biasRegularizer),activityRegularizer:Pe(this.activityRegularizer),kernelConstraint:vn(this.kernelConstraint),recurrentConstraint:vn(this.recurrentConstraint),biasConstraint:vn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}gm.className="SimpleRNNCell",vt(gm);class i0 extends ko{constructor(t){t.cell=new gm(t),super(t)}call(t,e){return rt(()=>{this.cell.dropoutMask!=null&&(Xt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Xt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let r=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:r,training:o,initialState:s})})}static fromConfig(t,e){return new t(e)}}i0.className="SimpleRNN",vt(i0);class ym extends Xc{constructor(t){super(t);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new Y("GRUCell does not support reset_after parameter set to true.");this.units=t.units,$n(this.units,"units"),this.activation=xi(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=xi(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=je(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=je(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=je(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ke(t.kernelRegularizer),this.recurrentRegularizer=Ke(t.recurrentRegularizer),this.biasRegularizer=Ke(t.biasRegularizer),this.kernelConstraint=Tn(t.kernelConstraint),this.recurrentConstraint=Tn(t.recurrentConstraint),this.biasConstraint=Tn(t.biasConstraint),this.dropout=Vc([1,di([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Vc([1,di([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Re(t);let e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return rt(()=>{if(t=t,t.length!==2)throw new Y(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);let r=e.training==null?!1:e.training,o=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=wi({ones:()=>qn(t),rate:this.dropout,training:r,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=wi({ones:()=>qn(o),rate:this.recurrentDropout,training:r,count:3}));let s=this.dropoutMask,c=this.recurrentDropoutMask,l,p,f;0<this.dropout&&this.dropout<1&&(t=nt(t,s[0]));let m=Uo(t,this.kernel.read());this.useBias&&(m=qo(m,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=nt(o,c[0]));let y=this.recurrentKernel.read(),[b,v]=Tr(y,[2*this.units,this.units],y.rank-1),T=Uo(o,b),[N,S,D]=Tr(m,3,m.rank-1),[I,P]=Tr(T,2,T.rank-1);l=this.recurrentActivation.apply(Tt(N,I)),p=this.recurrentActivation.apply(Tt(S,P));let E=Uo(nt(p,o),v);f=this.activation.apply(Tt(D,E));let L=Tt(nt(l,o),nt(Tt(1,tn(l)),f));return[L,L]})}getConfig(){let t=super.getConfig(),e={units:this.units,activation:bi(this.activation),recurrentActivation:bi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:rn(this.kernelInitializer),recurrentInitializer:rn(this.recurrentInitializer),biasInitializer:rn(this.biasInitializer),kernelRegularizer:Pe(this.kernelRegularizer),recurrentRegularizer:Pe(this.recurrentRegularizer),biasRegularizer:Pe(this.biasRegularizer),activityRegularizer:Pe(this.activityRegularizer),kernelConstraint:vn(this.kernelConstraint),recurrentConstraint:vn(this.recurrentConstraint),biasConstraint:vn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}ym.className="GRUCell",vt(ym);class a0 extends ko{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new ym(t),super(t)}call(t,e){return rt(()=>{this.cell.dropoutMask!=null&&(Xt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Xt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let r=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:r,training:o,initialState:s})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}a0.className="GRU",vt(a0);class Wp extends Xc{constructor(t){super(t);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,$n(this.units,"units"),this.activation=xi(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=xi(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=je(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=je(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=je(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Ke(t.kernelRegularizer),this.recurrentRegularizer=Ke(t.recurrentRegularizer),this.biasRegularizer=Ke(t.biasRegularizer),this.kernelConstraint=Tn(t.kernelConstraint),this.recurrentConstraint=Tn(t.recurrentConstraint),this.biasConstraint=Tn(t.biasConstraint),this.dropout=Vc([1,di([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Vc([1,di([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=Re(t);let r=t[t.length-1];this.kernel=this.addWeight("kernel",[r,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let o;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,c=this.units;o=new(e=class extends Qr{apply(p,f){let m=s.apply([c]),y=new jd().apply([c]),b=s.apply([c*2]);return VC(VC(m,y),b)}},e.className="CustomInit",e)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return rt(()=>{let r=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new Y(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let o=t[1],s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=wi({ones:()=>qn(t),rate:this.dropout,training:r,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=wi({ones:()=>qn(o),rate:this.recurrentDropout,training:r,count:4}));let c=this.dropoutMask,l=this.recurrentDropoutMask,p,f,m,y;0<this.dropout&&this.dropout<1&&(t=nt(t,c[0]));let b=Uo(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=nt(o,l[0])),b=Tt(b,Uo(o,this.recurrentKernel.read())),this.useBias&&(b=qo(b,this.bias.read()));let[v,T,N,S]=Tr(b,4,b.rank-1);p=this.recurrentActivation.apply(v),f=this.recurrentActivation.apply(T),m=Tt(nt(f,s),nt(p,this.activation.apply(N))),y=this.recurrentActivation.apply(S);let D=nt(y,this.activation.apply(m));return[D,D,m]})}getConfig(){let t=super.getConfig(),e={units:this.units,activation:bi(this.activation),recurrentActivation:bi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:rn(this.kernelInitializer),recurrentInitializer:rn(this.recurrentInitializer),biasInitializer:rn(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Pe(this.kernelRegularizer),recurrentRegularizer:Pe(this.recurrentRegularizer),biasRegularizer:Pe(this.biasRegularizer),activityRegularizer:Pe(this.activityRegularizer),kernelConstraint:vn(this.kernelConstraint),recurrentConstraint:vn(this.recurrentConstraint),biasConstraint:vn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}Wp.className="LSTMCell",vt(Wp);class c0 extends ko{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Wp(t),super(t)}call(t,e){return rt(()=>{this.cell.dropoutMask!=null&&(Xt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Xt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let r=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:r,training:o,initialState:s})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}c0.className="LSTM",vt(c0);class bm extends Xc{constructor(t){super(t);this.cells=t.cells}get stateSize(){let t=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return rt(()=>{t=t;let r=t.slice(1),o=[];for(let l of this.cells.slice().reverse())Array.isArray(l.stateSize)?o.push(r.splice(0,l.stateSize.length)):o.push(r.splice(0,1));o.reverse();let s=[],c;for(let l=0;l<this.cells.length;++l){let p=this.cells[l];r=o[l],l===0?c=[t[0]].concat(r):c=[c[0]].concat(r),c=p.call(c,e),s.push(c.slice(1))}r=[];for(let l of s.slice().reverse())r.push(...l);return[c[0]].concat(r)})}build(t){$v(t)&&(t=t[0]),t=t;let e;this.cells.forEach((r,o)=>{fa(`RNNCell_${o}`,()=>{r.build(t),Array.isArray(r.stateSize)?e=r.stateSize[0]:e=r.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){let t=super.getConfig(),e=s=>({className:s.getClassName(),config:s.getConfig()}),r=this.cells.map(e),o={cells:r};return Object.assign({},t,o)}static fromConfig(t,e,r={}){let o=[];for(let s of e.cells)o.push(wo(s,r));return new t({cells:o})}get trainableWeights(){if(!this.trainable)return[];let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){let t=[];for(let e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){let e=[];for(let r of this.cells)e.push(...r.trainableWeights);return e.concat(t)}return t}getWeights(){let t=[];for(let e of this.cells)t.push(...e.weights);return Iv(t)}setWeights(t){let e=[];for(let r of this.cells){let o=r.weights.length,s=t.splice(o);for(let c=0;c<r.weights.length;++c)e.push([r.weights[c],s[c]])}Ev(e)}}bm.className="StackedRNNCells",vt(bm);function wi(n){let{ones:t,rate:e,training:r=!1,count:o=1}=n,s=()=>UC(t(),e),c=()=>Fp(s,t,r);if(!o||o<=1)return Sn(c().clone());let l=Array(o).fill(void 0).map(c);return l.map(p=>Sn(p.clone()))}var vU=function(n,t){var e={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&t.indexOf(r)<0&&(e[r]=n[r]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var o=0,r=Object.getOwnPropertySymbols(n);o<r.length;o++)t.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(n,r[o])&&(e[r[o]]=n[r[o]]);return e};class fst extends Xc{}class jS extends ko{constructor(t){if(t.unroll)throw new Ut("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Ut("It is not possible at the moment to stack convolutional cells.");super(t);this.inputSpec=[new In({ndim:5})]}call(t,e){return rt(()=>{if(this.cell.dropoutMask!=null&&(Xt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Xt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new Y("ConvRNN2D cell does not support constants");let r=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:r,training:o,initialState:s})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return rt(()=>{let{stateSize:e}=this.cell,r=t.shape,o=this.computeSingleOutputShape(r),s=[o[0],...o.slice(2)],c=xe(s);return Array.isArray(e)?Array(e.length).fill(c):[c]})}resetStates(t,e=!1){rt(()=>{if(!this.stateful)throw new Go("Cannot call resetStates() on an RNN Layer that is not stateful.");let r=this.inputSpec[0].shape,o=this.computeSingleOutputShape(r),s=[o[0],...o.slice(2)],c=r[0];if(c==null)throw new Y("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>xe(s)):this.states_=[xe(s)];else if(t==null)Xt(this.states_),this.keptStates!=null&&(Xt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>xe(s)):this.states_[0]=xe(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Y(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):Xt(this.states_);for(let l=0;l<this.states_.length;++l){let p=t[l],f=s;if(!lt(p.shape,f))throw new Y(`State ${l} is incompatible with layer ${this.name}: expected shape=${f}, received shape=${p.shape}`);this.states_[l]=p}}this.states_=this.states_.map(l=>Sn(l.clone()))})}computeSingleOutputShape(t){let{dataFormat:e,filters:r,kernelSize:o,padding:s,strides:c,dilationRate:l}=this.cell,p=e==="channelsFirst",f=t[p?3:2],m=t[p?4:3],y=To(f,o[0],s,c[0],l[0]),b=To(m,o[1],s,c[1],l[1]),v=[...t.slice(0,2),...p?[r,y,b]:[y,b,r]];return v}}jS.className="ConvRNN2D";class xm extends Wp{constructor(t){let{filters:e,kernelSize:r,strides:o,padding:s,dataFormat:c,dilationRate:l}=t;super(Object.assign({},t,{units:e}));this.filters=e,$n(this.filters,"filters"),this.kernelSize=Hc(r,2,"kernelSize"),this.kernelSize.forEach(p=>$n(p,"kernelSize")),this.strides=Hc(o||1,2,"strides"),this.strides.forEach(p=>$n(p,"strides")),this.padding=s||"valid",Or(this.padding),this.dataFormat=c||"channelsLast",nn(this.dataFormat),this.dilationRate=Hc(l||1,2,"dilationRate"),this.dilationRate.forEach(p=>$n(p,"dilationRate"))}build(t){var e;t=Re(t);let r=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[r]==null)throw new Y(`The channel dimension of the input should be defined. Found ${t[r]}`);let o=t[r],s=4,c=this.kernelSize.concat([o,this.filters*s]);this.kernel=this.addWeight("kernel",c,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let l=this.kernelSize.concat([this.filters,this.filters*s]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",l,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let p;if(this.unitForgetBias){let f=this.biasInitializer,m=this.filters;p=new(e=class extends Qr{apply(b,v){let T=f.apply([m]),N=ho([m]),S=f.apply([m*2]);return bv([T,N,S])}},e.className="CustomInit",e)}else p=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*s],null,p,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return rt(()=>{if(t.length!==3)throw new Y(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=e.training||!1,o=t[0],s=t[1],c=t[2],l=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=wi({ones:()=>qn(o),rate:this.dropout,training:r,count:l}));let p=this.dropoutMask,f=(kt,Nt,At)=>!Nt||!Nt[At]?kt:nt(Nt[At],kt),m=f(o,p,0),y=f(o,p,1),b=f(o,p,2),v=f(o,p,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=wi({ones:()=>qn(s),rate:this.recurrentDropout,training:r,count:l}));let T=this.recurrentDropoutMask,N=f(s,T,0),S=f(s,T,1),D=f(s,T,2),I=f(s,T,3),P=3,[E,L,B,q]=Tr(this.kernel.read(),l,P),[H,Z,J,it]=this.useBias?Tr(this.bias.read(),l):[null,null,null,null];m=this.inputConv(m,E,H,this.padding),y=this.inputConv(y,L,Z,this.padding),b=this.inputConv(b,B,J,this.padding),v=this.inputConv(v,q,it,this.padding);let[pt,ht,dt,ft]=Tr(this.recurrentKernel.read(),l,P);N=this.recurrentConv(N,pt),S=this.recurrentConv(S,ht),D=this.recurrentConv(D,dt),I=this.recurrentConv(I,ft);let ut=this.recurrentActivation.apply(Tt(m,N)),bt=this.recurrentActivation.apply(Tt(y,S)),yt=Tt(nt(bt,c),nt(ut,this.activation.apply(Tt(b,D)))),xt=nt(this.recurrentActivation.apply(Tt(v,I)),this.activation.apply(yt));return[xt,xt,yt]})}getConfig(){let t=super.getConfig(),{units:e}=t,r=vU(t,["units"]),o={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},r,o)}inputConv(t,e,r,o){let s=fs(t,e,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return r?qo(s,r,this.dataFormat):s}recurrentConv(t,e){let r=1;return fs(t,e,r,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}xm.className="ConvLSTM2DCell",vt(xm);class l0 extends jS{constructor(t){let e=new xm(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}l0.className="ConvLSTM2D",vt(l0);class wm extends ye{constructor(t){super(t);this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;let e=t.shape,r=[];for(let o=0;o<this.noiseShape.length;++o)r.push(this.noiseShape[o]==null?e[o]:this.noiseShape[o]);return r}call(t,e){return rt(()=>{this.invokeCallHook(t,e);let r=Qt(t);if(0<this.rate&&this.rate<1){let o=e.training==null?!1:e.training,s=this.getNoiseShape(r),c=Fp(()=>UC(r,this.rate,s,this.seed),()=>r,o);return c}return t})}getConfig(){let t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}wm.className="Dropout",vt(wm);class u0 extends wm{constructor(t){super(t);this.inputSpec=[{ndim:3}]}getNoiseShape(t){let e=t.shape;return[e[0],1,e[2]]}}u0.className="SpatialDropout1D",vt(u0);class p0 extends ye{constructor(t){super(t);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,$n(this.units,"units"),this.activation=xi(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=je(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=je(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Tn(t.kernelConstraint),this.biasConstraint=Tn(t.biasConstraint),this.kernelRegularizer=Ke(t.kernelRegularizer),this.biasRegularizer=Ke(t.biasRegularizer),this.activityRegularizer=Ke(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Re(t);let e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=Re(t);let e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return rt(()=>{this.invokeCallHook(t,e);let r=Qt(t),o=FC(this.activation.getClassName()),s;return o!=null?s=Uo(r,this.kernel.read(),o,this.bias?this.bias.read():null):(s=Uo(r,this.kernel.read()),this.bias!=null&&(s=qo(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let t={units:this.units,activation:bi(this.activation),useBias:this.useBias,kernelInitializer:rn(this.kernelInitializer),biasInitializer:rn(this.biasInitializer),kernelRegularizer:Pe(this.kernelRegularizer),biasRegularizer:Pe(this.biasRegularizer),activityRegularizer:Pe(this.activityRegularizer),kernelConstraint:vn(this.kernelConstraint),biasConstraint:vn(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}p0.className="Dense",vt(p0);class h0 extends ye{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Re(t);for(let e of t.slice(1))if(e==null)throw new Y(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],fi(t,1)]}call(t,e){return rt(()=>{this.invokeCallHook(t,e);let r=Qt(t);if(this.dataFormat==="channelsFirst"&&r.rank>1){let o=[0];for(let s=2;s<r.rank;++s)o.push(s);o.push(1),r=r.transpose(o)}return UV(r)})}getConfig(){let t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);let e=super.getConfig();return Object.assign(t,e),t}}h0.className="Flatten",vt(h0);class f0 extends ye{constructor(t){super(t);this.supportsMasking=!0,this.activation=xi(t.activation)}call(t,e){return rt(()=>{this.invokeCallHook(t,e);let r=Qt(t);return this.activation.apply(r)})}getConfig(){let t={activation:bi(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}f0.className="Activation",vt(f0);class d0 extends ye{constructor(t){super(t);this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return rt(()=>(t=Qt(t),VV(t,this.n)))}getConfig(){let t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}d0.className="RepeatVector",vt(d0);class m0 extends ye{constructor(t){super(t);this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){let r="Total size of new array must be unchanged.",o=e.slice(),s=1,c=null;for(let p=0;p<o.length;++p){let f=o[p];if(this.isUnknown(f))if(c===null)c=p;else throw new Y("Can only specifiy one unknown dimension.");else s*=f}let l=fi(t);if(c!==null){if(s===0||l%s!==0)throw new Y(r);o[c]=l/s}else if(l!==s)throw new Y(r);return o}computeOutputShape(t){let e=!1;for(let r=0;r<t.length;++r)if(this.isUnknown(t[r])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return rt(()=>{this.invokeCallHook(t,e);let r=Qt(t),o=r.shape,s=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return r.reshape(s)})}getConfig(){let t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}m0.className="Reshape",vt(m0);class g0 extends ye{constructor(t){super(t);if(t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);let e=yo(1,t.dims.length+1);if(!lt(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new In({ndim:this.dims.length+1})]}computeOutputShape(t){t=Re(t);let e=t.slice();return this.dims.forEach((r,o)=>{e[o+1]=t[r]}),e}call(t,e){return Kt(Qt(t),this.dimsIncludingBatch)}getConfig(){let t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}g0.className="Permute",vt(g0);class y0 extends ye{constructor(t){super(t==null?{}:t);this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){let r=Qt(t),o=-1;return Zu(ci(r,this.maskValue),o)}call(t,e){return rt(()=>{this.invokeCallHook(t,e);let r=Qt(t),o=-1,s=!0,c=Zu(ci(r,this.maskValue),o,s),l=r.mul(c.asType(r.dtype));return l})}}y0.className="Masking",vt(y0);class b0 extends ye{constructor(t){super(t);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(ze(t.inputLength))}this.inputDim=t.inputDim,$n(this.inputDim,"inputDim"),this.outputDim=t.outputDim,$n(this.outputDim,"outputDim"),this.embeddingsInitializer=je(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ke(t.embeddingsRegularizer),this.activityRegularizer=Ke(t.activityRegularizer),this.embeddingsConstraint=Tn(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return rt(()=>this.maskZero?(t=Qt(t),ci(t,re(t))):null)}computeOutputShape(t){if(t=Re(t),this.inputLength==null)return[...t,this.outputDim];let e=ze(this.inputLength);if(e.length!==t.length-1)throw new Y(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let r=0;for(let o=0;o<e.length;++o){let s=e[o],c=t[o+1];if(s!=null&&c!=null&&s!==c)throw new Y(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);s==null&&(e[r]=c),r++}}return[t[0],...e,this.outputDim]}call(t,e){return rt(()=>{this.invokeCallHook(t,e);let r=Qt(t);r.dtype!=="int32"&&(r=Ep(r,"int32"));let o=GC(this.embeddings.read(),r.as1D());return o.reshape(Re(this.computeOutputShape(r.shape)))})}getConfig(){let t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:rn(this.embeddingsInitializer),embeddingsRegularizer:Pe(this.embeddingsRegularizer),activityRegularizer:Pe(this.activityRegularizer),embeddingsConstraint:vn(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}b0.className="Embedding",vt(b0);class ya extends ye{constructor(t){super(t||{});this.supportsMasking=!0}mergeFunction(t){throw new Ut}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;let r=t.slice(0,t.length-e.length);for(let o=0;o<e.length;++o){let s=t[t.length-e.length+o],c=e[o];if(s==null||c==null||s<0||c<0)r.push(null);else if(s===1)r.push(c);else if(c===1)r.push(s);else{if(s!==c)throw new Y("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));r.push(s)}}return r}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Re(t)]),t=t,t.length<2)throw new Y(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(let s of t)s!=null&&s[0]!==null&&e.push(s[0]);if(e=hi(e),e.length>1)throw new Y(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let r=t[0]==null?null:t[0].slice(1);for(let s=1;s<t.length;++s){let c=t[s]==null?null:t[s].slice(1);r=this.computeElementwiseOpOutputShape(r,c)}let o=t.map(s=>s.length);t.indexOf(null)===-1&&hi(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return rt(()=>{if(t=t,this.reshapeRequired){let r=[],o=t.map(s=>s.rank);if(o.indexOf(null)===-1){let s=di(o);for(let c of t){let l=c.rank;for(let p=0;p<s-l;++p)c=Dp(c,1);r.push(c)}return this.mergeFunction(r)}else{let s=!1;for(let p of t){let f=p.rank;if(f==null){let m=p.shape,y=m[0],b=m.slice(1).concat([y]),v=p.reshape([y].concat(fi(m.slice(1))));v=Kt(v,[1,0]),v=v.reshape(b),r.push(v),s=!0}else if(f>1){let m=yo(1,f).concat([0]);r.push(Kt(p,m)),s=!0}else r.push(p)}let c=this.mergeFunction(r),l=c.rank;if(s){if(l==null){let p=c.shape,f=p.length,m=p[f-1],y=[m].concat(p.slice(0,p.length-1));c=Kt(c.reshape([-1,m]),[1,0]).reshape(y)}else if(l>1){let p=[l-1].concat(yo(0,l-1));c=Kt(c,p)}}return c}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let o=1;o<t.length;++o){let s=t[o]==null?null:t[o].slice(1);e=this.computeElementwiseOpOutputShape(e,s)}let r=[];for(let o of t)o!=null&&o[0]!==null&&r.push(o[0]);return r=hi(r),r.length===1?e=r.concat(e):e=[null].concat(e),e}computeMask(t,e){return rt(()=>{if(e==null)return null;if(!Array.isArray(e))throw new Y("`mask` should be an Array");if(!Array.isArray(t))throw new Y("`inputs` should be an Array");if(e.length!==t.length)throw new Y(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(o=>o==null))return null;e=e.map(o=>o==null?o:cr(o,0));let r=e[0];for(let o=1;o<e.length-1;++o)r=Yr(r,e[o]);return r})}}class Vp extends ya{constructor(t){super(t)}mergeFunction(t){return rt(()=>{let e=t[0].clone();for(let r=1;r<t.length;++r)e=Tt(e,t[r]);return e})}}Vp.className="Add",vt(Vp);function dst(n){if(Array.isArray(n)){let t=new Vp({});return t.apply(n)}else return new Vp(n)}class Gp extends ya{constructor(t){super(t)}mergeFunction(t){return rt(()=>{let e=t[0].clone();for(let r=1;r<t.length;++r)e=nt(e,t[r]);return e})}}Gp.className="Multiply",vt(Gp);function mst(n){if(Array.isArray(n)){let t=new Gp({});return t.apply(n)}else return new Gp(n)}class Up extends ya{constructor(t){super(t)}mergeFunction(t){return rt(()=>{let e=t[0].clone();for(let r=1;r<t.length;++r)e=Tt(e,t[r]);return nt(1/t.length,e)})}}Up.className="Average",vt(Up);function gst(n){if(Array.isArray(n)){let t=new Up({});return t.apply(n)}else return new Up(n)}class qp extends ya{constructor(t){super(t)}mergeFunction(t){return rt(()=>{let e=t[0];for(let r=1;r<t.length;++r)e=Xr(e,t[r]);return e})}}qp.className="Maximum",vt(qp);function yst(n){if(Array.isArray(n)){let t=new qp({});return t.apply(n)}else return new qp(n)}class Hp extends ya{constructor(t){super(t)}mergeFunction(t){return rt(()=>{let e=t[0];for(let r=1;r<t.length;++r)e=oa(e,t[r]);return e})}}Hp.className="Minimum",vt(Hp);function bst(n){if(Array.isArray(n)){let t=new Hp({});return t.apply(n)}else return new Hp(n)}class jp extends ya{constructor(t){super(t);this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new Y("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(let o of t)if(o!=null){e=!1;break}if(e)return;let r=[];for(let o=0;o<t.length;++o){let s=t[o].slice();s.splice(this.axis,1);let c=!1;for(let l of r)if(lt(l,s)){c=!0;break}c||r.push(s)}if(r.length>1)throw new Y("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return rt(()=>bv(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new Y("A `Concatenate` layer should be called on a list of inputs.");let e=t,r=e[0].slice(),o=this.axis<0?r.length+this.axis:this.axis;for(let s of e.slice(1)){if(r[o]==null||s[o]==null){r[o]=null;break}r[o]+=s[o]}return r}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new Y("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new Y("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new Y(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return rt(()=>{let r=!0;if(e.forEach(c=>{if(c!=null){r=!1;return}}),r)return null;let o=[];for(let c=0;c<t.length;++c)e[c]==null?o.push(qn(t[c]).asType("bool")):e[c].rank<t[c].rank?o.push(cr(e[c],-1)):o.push(e[c]);let s=Qe(o,this.axis);return rd(s,-1,!1)})}getConfig(){let t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}jp.className="Concatenate",vt(jp);function xst(n){if(Array.isArray(n)){let t=new jp({});return t.apply(n)}else return new jp(n)}function Kp(n,t){for(;n<0;)n+=t;return n}function TU(n,t,e){if(n.shape.length>3||t.shape.length>3)throw new Ut("batchDot is not implemented for tensors of 4D or higher rank yet");if(_(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),_(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),n.dtype==="complex64"||t.dtype==="complex64")throw new Ut("batchDot is not implemented for complex64-type Tensors yet.");let r=n.shape.length,o=t.shape.length;e==null&&(e=[r-1,o-2]);let s=e;return rt(()=>{let c;if(r>o){c=r-o;let p=[];for(let f=0;f<c;++f)p.push(1);t=t.reshape(t.shape.concat(p))}else if(o>r){c=o-r;let p=[];for(let f=0;f<c;++f)p.push(1);n=n.reshape(n.shape.concat(p))}else c=0;let l;if(n.shape.length===2&&t.shape.length===2)s[0]===s[1]?l=n.mul(t).sum(s[0]):l=n.transpose([1,0]).mul(t).sum(s[1]);else{let p=s[0]!==n.shape.length-1,f=s[1]===t.shape.length-1;l=n.matMul(t,p,f)}if(c>0){let p;r>o?p=r+o-3:p=r-1;let f=[];for(let m=p;m<p+c;++m)f.push(m);l=l.squeeze(f)}return l.shape.length===1&&(l=l.expandDims(1)),l})}class x0 extends ya{constructor(t){super(t);this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){_(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let e=t[0],r=t[1];if(e.length>3||r.length>3)throw new Ut("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(e,r);if(e[o[0]]!==r[o[1]])throw new Y(`Dimension incompatibility: ${e[o[0]]} !== ${r[o[1]]}`)}mergeFunction(t){if(t.length!==2)throw new Y(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],r=t[1],o;return Array.isArray(this.axes)?o=this.axes.map((s,c)=>Kp(s,t[c].shape.length)):o=[Kp(this.axes,e.shape.length),Kp(this.axes,r.shape.length)],this.normalize&&(e=sm(e,o[0]),r=sm(r,o[1])),TU(e,r,o)}interpretAxes(t,e){let r;return Array.isArray(this.axes)?r=this.axes:r=[Kp(this.axes,t.length),Kp(this.axes,e.length)],r}computeOutputShape(t){_(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let e=t[0].slice(),r=t[1].slice();if(e.length>3||r.length>3)throw new Ut("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(e,r);e.splice(o[0],1),r.splice(o[1],1),r.splice(0,1);let s=e.concat(r);return s.length===1&&s.push(1),s}computeMask(t,e){return null}getConfig(){let t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}x0.className="Dot",vt(x0);class w0 extends ye{constructor(t){super(t);this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return rt(()=>{this.invokeCallHook(t,e);let r=Qt(t),o=()=>Hd(r.shape,0,this.stddev).add(r),s=Fp(o,()=>r,e.training||!1);return s})}}w0.className="GaussianNoise",vt(w0);class v0 extends ye{constructor(t){super(t);this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return rt(()=>{this.invokeCallHook(t,e);let r=Qt(t);if(this.rate>0&&this.rate<1){let o=()=>{let s=Math.sqrt(this.rate/(1-this.rate));return r.mul(Hd(r.shape,1,s))};return Fp(o,()=>r,e.training||!1)}return r})}}v0.className="GaussianDropout",vt(v0);class T0 extends ye{constructor(t){super(t);this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Qt(t).shape}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return rt(()=>{if(this.rate<1&&this.rate>0){let r=this._getNoiseShape(t),o=()=>{let s=Qt(t),c=1.6732632423543772,l=1.0507009873554805,p=-c*l,f=ds(aa(r),this.rate);f=Ep(f,"float32");let m=((1-this.rate)*(1+this.rate*p**2))**-.5,y=-m*p*this.rate,b=s.mul(f).add(f.add(-1).mul(p));return b.mul(m).add(y)};return Fp(o,()=>Qt(t),e.training||!1)}return t})}}T0.className="AlphaDropout",vt(T0);function Xp(n,t,e,r,o,s=.001){let c;if(n.rank===2)c=b_(n,t,e,r,o,s);else if(n.rank===3)c=x_(n,t,e,r,o,s);else if(n.rank===4)c=w_(n,t,e,r,o,s);else throw new Ut(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return c}function kU(n,t,e,r,o=.001){return rt(()=>{let s=xd(n,r),c=s.mean,l=s.variance,p=Xp(n,c,l,e,t,o);return[p,c,l]})}function NU(n,t,e,r,o=.001){return rt(()=>{let s=xd(n,r),c=s.mean,l=s.variance,p=[];for(let T of yo(0,n.rank))r.indexOf(T)!==-1?p.push(1):p.push(n.shape[T]);let f=c.reshape(p),m=l.reshape(p),y=t==null?null:t.reshape(p),b=e==null?null:e.reshape(p),v=Xp(n,f,m,b,y,o);return[v,c,l]})}function _U(n,t,e,r,o=.001){return lt(r.slice().sort(),yo(0,n.rank-1))?kU(n,t,e,r,o):NU(n,t,e,r,o)}class k0 extends ye{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=je(t.betaInitializer||"zeros"),this.gammaInitializer=je(t.gammaInitializer||"ones"),this.movingMeanInitializer=je(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=je(t.movingVarianceInitializer||"ones"),this.betaConstraint=Tn(t.betaConstraint),this.gammaConstraint=Tn(t.gammaConstraint),this.betaRegularizer=Ke(t.betaRegularizer),this.gammaRegularizer=Ke(t.gammaRegularizer)}build(t){t=Re(t);let e=this.axis>=0?this.axis:this.axis+t.length,r=t[e];if(r==null)throw new Y(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new In({ndim:t.length,axes:{[e]:r}})];let o=[r];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return rt(()=>{let r=e.training==null?!1:e.training,o=Qt(t),s=o.shape,c=s.length,l=yo(0,c),p=this.axis>=0?this.axis:this.axis+c;l.splice(p,1);let f=pa(1,c);f[p]=s[p];let m=l.slice();m.sort();let y=!lt(m,yo(0,c).slice(0,c-1)),b=()=>{if(y){let I=this.movingMean.read().reshape(f),P=this.movingVariance.read().reshape(f),E=this.center?this.beta.read().reshape(f):null,L=this.scale?this.gamma.read().reshape(f):null;return Xp(o,I,P,E,L,this.epsilon)}else return Xp(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!r)return b();let[v,T,N]=_U(o,this.gamma.read(),this.beta.read(),l,this.epsilon),S=(I,P,E)=>{rt(()=>{let L=1-E,B=I.read(),q=B.sub(P).mul(L);I.write(B.sub(q))})},D=()=>{S(this.movingMean,T,this.momentum),S(this.movingVariance,N,this.momentum)};return D(),v})}getConfig(){let t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:rn(this.betaInitializer),gammaInitializer:rn(this.gammaInitializer),movingMeanInitializer:rn(this.movingMeanInitializer),movingVarianceInitializer:rn(this.movingVarianceInitializer),betaRegularizer:Pe(this.betaRegularizer),gammaRegularizer:Pe(this.gammaRegularizer),betaConstraint:vn(this.betaConstraint),gammaConstraint:vn(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}k0.className="BatchNormalization",vt(k0);class N0 extends ye{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=je(t.betaInitializer||"zeros"),this.gammaInitializer=je(t.gammaInitializer||"ones"),this.betaRegularizer=Ke(t.betaRegularizer),this.gammaRegularizer=Ke(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Re(t);let e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=e);for(let s of this.axis)if(s<0||s>=e)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==hi(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let r=this.axis.map(s=>t[s]),o=!0;this.scale?this.gamma=this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(t,e){let r=Qt(t),o=r.shape,s=o.length;return rt(()=>{let c=!0,{mean:l,variance:p}=xd(r,this.axis,c),f=pa(1,s);for(let N of this.axis)f[N]=o[N];let m=N=>N!=null&&N.shape.length!==s&&this.axis!==[s-1]?N.reshape(f):N,y=m(this.gamma.read()),b=m(this.beta.read()),v=[],T=[];for(let N=0;N<s;++N)this.axis.indexOf(N)!==-1?(v.push(o[N]),T.push(1)):(v.push(1),T.push(o[N]));return l=l.tile(v),p=p.tile(v),y=y.tile(T),b=b.tile(T),Xp(r,l,p,b,y,this.epsilon)})}getConfig(){let t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:rn(this.betaInitializer),gammaInitializer:rn(this.gammaInitializer),betaRegularizer:Pe(this.betaRegularizer),gammaRegularizer:Pe(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}N0.className="LayerNormalization",vt(N0);function wst(n,t){return rt(()=>{if(n.rank!==3)throw new Y(`temporalPadding expects input tensor to be 3-D, but received a ${n.rank}-D tensor.`);if(t==null&&(t=[1,1]),t.length!==2)throw new Y(`temporalPadding expects input padding pattern to be a length-2 array, but received a length-${t.length} array.`);let e=[[0,0],t,[0,0]];return Wo(n,e)})}function CU(n,t,e){return rt(()=>{if(n.rank!==4)throw new Y(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new Y("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=go()),e!=="channelsLast"&&e!=="channelsFirst")throw new Y(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return e==="channelsFirst"?r=[[0,0],[0,0],t[0],t[1]]:r=[[0,0],t[0],t[1],[0,0]],Wo(n,r)})}class _0 extends ye{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?go():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new Y(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,r;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],r=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new Y(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new Y(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);r=t.padding[1]}this.padding=[e,r]}this.inputSpec=[new In({ndim:4})]}computeOutputShape(t){t=Re(t);let e,r;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?r=t[3]+this.padding[1][0]+this.padding[1][1]:r=null,[t[0],t[1],e,r]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?r=t[2]+this.padding[1][0]+this.padding[1][1]:r=null,[t[0],e,r,t[3]])}call(t,e){return rt(()=>CU(Qt(t),this.padding,this.dataFormat))}getConfig(){let t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}_0.className="ZeroPadding2D",vt(_0);function vm(n,t,e,r,o,s){return rt(()=>{nn(o),OC(s),Or(r),e==null&&(e=[1,1]),r==null&&(r="valid"),o==null&&(o=go()),s==null&&(s="max"),n=Qv(n,o);let c,l=r==="same"?"same":"valid";return s==="max"?c=lp(n,t,e,l):c=ep(n,t,e,l),o==="channelsFirst"&&(c=Kt(c,[0,3,1,2])),c})}function KS(n,t,e,r,o,s){return rt(()=>{nn(o),OC(s),Or(r),e==null&&(e=[1,1,1]),r==null&&(r="valid"),o==null&&(o=go()),s==null&&(s="max"),n=WS(n,o);let c,l=r==="same"?"same":"valid";return s==="max"?c=Cw(n,t,e,l):c=fw(n,t,e,l),o==="channelsFirst"&&(c=Kt(c,[0,4,1,2,3])),c})}class XS extends ye{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new Y(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if($n(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new Y(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);$n(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,Or(this.padding),this.inputSpec=[new In({ndim:3})]}computeOutputShape(t){t=Re(t);let e=To(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return rt(()=>{this.invokeCallHook(t,e),t=Dp(Qt(t),2);let r=this.poolingFunction(Qt(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return li(r,[2])})}getConfig(){let t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class C0 extends XS{constructor(t){super(t)}poolingFunction(t,e,r,o,s){return nn(s),Or(o),vm(t,e,r,o,s,"max")}}C0.className="MaxPooling1D",vt(C0);class S0 extends XS{constructor(t){super(t)}poolingFunction(t,e,r,o,s){return nn(s),Or(o),vm(t,e,r,o,s,"avg")}}S0.className="AveragePooling1D",vt(S0);class YS extends ye{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new Y(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];$n(this.poolSize,"poolSize"),$n(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,nn(this.dataFormat),Or(this.padding),this.inputSpec=[new In({ndim:4})]}computeOutputShape(t){t=Re(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],r=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=To(e,this.poolSize[0],this.padding,this.strides[0]),r=To(r,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,r]:[t[0],e,r,t[3]]}call(t,e){return rt(()=>(this.invokeCallHook(t,e),this.poolingFunction(Qt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class $0 extends YS{constructor(t){super(t)}poolingFunction(t,e,r,o,s){return nn(s),Or(o),vm(t,e,r,o,s,"max")}}$0.className="MaxPooling2D",vt($0);class I0 extends YS{constructor(t){super(t)}poolingFunction(t,e,r,o,s){return nn(s),Or(o),vm(t,e,r,o,s,"avg")}}I0.className="AveragePooling2D",vt(I0);class JS extends ye{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new Y(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];$n(this.poolSize,"poolSize"),$n(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,nn(this.dataFormat),Or(this.padding),this.inputSpec=[new In({ndim:5})]}computeOutputShape(t){t=Re(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],r=this.dataFormat==="channelsFirst"?t[3]:t[2],o=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=To(e,this.poolSize[0],this.padding,this.strides[0]),r=To(r,this.poolSize[1],this.padding,this.strides[1]),o=To(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,r,o]:[t[0],e,r,o,t[4]]}call(t,e){return rt(()=>(this.invokeCallHook(t,e),this.poolingFunction(Qt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class E0 extends JS{constructor(t){super(t)}poolingFunction(t,e,r,o,s){return nn(s),Or(o),KS(t,e,r,o,s,"max")}}E0.className="MaxPooling3D",vt(E0);class D0 extends JS{constructor(t){super(t)}poolingFunction(t,e,r,o,s){return nn(s),Or(o),KS(t,e,r,o,s,"avg")}}D0.className="AveragePooling3D",vt(D0);class ZS extends ye{constructor(t){super(t);this.inputSpec=[new In({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Ut}}class A0 extends ZS{constructor(t){super(t||{})}call(t,e){return rt(()=>{let r=Qt(t);return en(r,1)})}}A0.className="GlobalAveragePooling1D",vt(A0);class F0 extends ZS{constructor(t){super(t||{})}call(t,e){return rt(()=>{let r=Qt(t);return lr(r,1)})}}F0.className="GlobalMaxPooling1D",vt(F0);class QS extends ye{constructor(t){super(t);this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,nn(this.dataFormat),this.inputSpec=[new In({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Ut}getConfig(){let t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class R0 extends QS{call(t,e){return rt(()=>{let r=Qt(t);return this.dataFormat==="channelsLast"?en(r,[1,2]):en(r,[2,3])})}}R0.className="GlobalAveragePooling2D",vt(R0);class P0 extends QS{call(t,e){return rt(()=>{let r=Qt(t);return this.dataFormat==="channelsLast"?lr(r,[1,2]):lr(r,[2,3])})}}P0.className="GlobalMaxPooling2D",vt(P0);class t$ extends ye{constructor(t){super(t);this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){let t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,r={}){let o=e.layer,s=wo(o,r);delete e.layer;let c={layer:s};return Object.assign(c,e),new t(c)}}class O0 extends t${constructor(t){super(t);this.supportsMasking=!0}build(t){if(t=Re(t),t.length<3)throw new Y(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];let e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=Re(t);let e=[t[0]].concat(t.slice(2)),r=this.layer.computeOutputShape(e),o=t[1];return[r[0],o].concat(r.slice(1))}call(t,e){return rt(()=>{t=Qt(t);let r=(c,l)=>{let p=Qt(this.layer.call(c,e));return[p,[]]},o=HS(r,t,[],!1,null,null,!1,!0),s=o[1];return s})}}O0.className="TimeDistributed",vt(O0);function SU(n){zc(OV,"BidirectionalMergeMode",n)}let $U="concat";class L0 extends t${constructor(t){super(t);let e=t.layer.getConfig(),r={};r.className=t.layer.getClassName(),r.config=e,this.forwardLayer=wo(r),e.goBackwards=!(e.goBackwards===!0);let o={};if(o.className=t.layer.getClassName(),o.config=e,this.backwardLayer=wo(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?$U:t.mergeMode,SU(this.mergeMode),t.weights)throw new Ut("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){let e=t.length,r=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,r)),this.backwardLayer.setWeights(t.slice(r))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let r,o,s;return this.returnState&&(s=e.slice(1)),r=e[0],r=r,this.mergeMode==="concat"?(r[r.length-1]*=2,o=[r]):this.mergeMode==null?o=[r,r.slice()]:o=[r],this.returnState?this.mergeMode==null?o.concat(s).concat(s.slice()):[r].concat(s).concat(s.slice()):pr(o)}apply(t,e){let r=e==null?null:e.initialState,o=e==null?null:e.constants;e==null&&(e={});let s=qS(t,r,o,this.numConstants);if(t=s.inputs,r=s.initialState,o=s.constants,Array.isArray(t)&&(r=t.slice(1),t=t[0]),(r==null||r.length===0)&&o==null)return super.apply(t,e);let c=[],l=[];if(r!=null){let f=r.length;if(f%2>0)throw new Y("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=r,c.push(...r);let m=r.map(y=>new In({shape:y.shape}));this.forwardLayer.stateSpec=m.slice(0,f/2),this.backwardLayer.stateSpec=m.slice(f/2),l.push(...m)}if(o!=null)throw new Ut("Support for constants in Bidirectional layers is not implemented yet.");let p=c[0]instanceof xo;for(let f of c)if(f instanceof xo!==p)throw new Y("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(p){let f=[t].concat(c),m=this.inputSpec.concat(l),y=this.inputSpec;this.inputSpec=m;let b=super.apply(f,e);return this.inputSpec=y,b}else return super.apply(t,e)}call(t,e){return rt(()=>{let r=e.initialState,o,s;if(r==null)o=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{let p=r.slice(0,r.length/2),f=r.slice(r.length/2);o=this.forwardLayer.call(t,Object.assign(e,{initialState:p})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:f}))}let c;this.returnState&&(Array.isArray(o)&&(c=o.slice(1).concat(s.slice(1))),o=o[0],s=s[0]),this.returnSequences&&(s=Rr(s,1));let l;return this.mergeMode==="concat"?l=bv([o,s]):this.mergeMode==="sum"?l=Tt(o,s):this.mergeMode==="ave"?l=nt(.5,Tt(o,s)):this.mergeMode==="mul"?l=nt(o,s):this.mergeMode==null&&(l=[o,s]),this.returnState?this.mergeMode==null?l.concat(c):[l].concat(c):l})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){fa(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),fa(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let r;if(this.returnSequences?this.mergeMode==null?r=[e,e]:r=e:this.mergeMode==null?r=[null,null]:r=null,this.returnState){let o=this.forwardLayer.states,s=o.map(c=>null);return Array.isArray(r)?r.concat(s).concat(s):[r].concat(s).concat(s)}else return r}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){let t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){let r=wo(e.layer);if(delete e.layer,e.numConstants!=null)throw new Ut("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let o=e;return o.layer=r,new t(o)}}L0.className="Bidirectional",vt(L0);function IU(n){return new Gc(n)}function EU(n){return new Yv(n)}function DU(n){return new jv(n)}function AU(n){return new Kv(n)}function FU(n){return new Xv(n)}function RU(n){return new Zv(n)}function PU(n){return new Jv(n)}function OU(n){return new zp(n)}function LU(n){return new Kc(n)}function MU(n){return new e0(n)}function BU(n){return new Bp(n)}function zU(n){return new n0(n)}function WU(n){return new r0(n)}function VU(n){return new o0(n)}function GU(n){return new s0(n)}function UU(n){return new f0(n)}function qU(n){return new p0(n)}function HU(n){return new wm(n)}function jU(n){return new u0(n)}function KU(n){return new h0(n)}function XU(n){return new d0(n)}function YU(n){return new m0(n)}function JU(n){return new g0(n)}function ZU(n){return new b0(n)}function QU(n){return new Vp(n)}function tq(n){return new Up(n)}function eq(n){return new jp(n)}function nq(n){return new qp(n)}function rq(n){return new Hp(n)}function oq(n){return new Gp(n)}function sq(n){return new x0(n)}function iq(n){return new k0(n)}function aq(n){return new N0(n)}function cq(n){return new _0(n)}function M0(n){return new S0(n)}function lq(n){return M0(n)}function uq(n){return M0(n)}function B0(n){return new I0(n)}function pq(n){return B0(n)}function hq(n){return B0(n)}function z0(n){return new D0(n)}function fq(n){return z0(n)}function dq(n){return z0(n)}function mq(n){return new A0(n)}function gq(n){return new R0(n)}function e$(n){return new F0(n)}function n$(n){return new P0(n)}function r$(n){return new C0(n)}function o$(n){return new $0(n)}function yq(n){return new E0(n)}function bq(n){return new a0(n)}function xq(n){return new ym(n)}function wq(n){return new c0(n)}function vq(n){return new Wp(n)}function Tq(n){return new i0(n)}function kq(n){return new gm(n)}function Nq(n){return new l0(n)}function _q(n){return new xm(n)}function Cq(n){return new ko(n)}function Sq(n){return new bm(n)}function $q(n){return new L0(n)}function Iq(n){return new O0(n)}let Eq=e$,Dq=n$,Aq=r$,Fq=o$;function Rq(n){return new w0(n)}function Pq(n){return new v0(n)}function Oq(n){return new T0(n)}function Lq(n){return new y0(n)}var Mq=Object.freeze({__proto__:null,inputLayer:IU,elu:EU,reLU:DU,leakyReLU:AU,prelu:FU,softmax:RU,thresholdedReLU:PU,conv1d:OU,conv2d:LU,conv2dTranspose:MU,conv3d:BU,separableConv2d:zU,cropping2D:WU,upSampling2d:VU,depthwiseConv2d:GU,activation:UU,dense:qU,dropout:HU,spatialDropout1d:jU,flatten:KU,repeatVector:XU,reshape:YU,permute:JU,embedding:ZU,add:QU,average:tq,concatenate:eq,maximum:nq,minimum:rq,multiply:oq,dot:sq,batchNormalization:iq,layerNormalization:aq,zeroPadding2d:cq,averagePooling1d:M0,avgPool1d:lq,avgPooling1d:uq,averagePooling2d:B0,avgPool2d:pq,avgPooling2d:hq,averagePooling3d:z0,avgPool3d:fq,avgPooling3d:dq,globalAveragePooling1d:mq,globalAveragePooling2d:gq,globalMaxPooling1d:e$,globalMaxPooling2d:n$,maxPooling1d:r$,maxPooling2d:o$,maxPooling3d:yq,gru:bq,gruCell:xq,lstm:wq,lstmCell:vq,simpleRNN:Tq,simpleRNNCell:kq,convLstm2d:Nq,convLstm2dCell:_q,rnn:Cq,stackedRNNCells:Sq,bidirectional:$q,timeDistributed:Iq,globalMaxPool1d:Eq,globalMaxPool2d:Dq,maxPool1d:Aq,maxPool2d:Fq,Layer:ye,RNN:ko,RNNCell:Xc,input:_S,gaussianNoise:Rq,gaussianDropout:Pq,alphaDropout:Oq,masking:Lq});function Bq(n,t){return Rv(n,t)}function zq(n,t){return iS(n,t)}function Wq(n,t){return aS(n,t)}function Vq(n,t){return Pv(n,t)}function Gq(n,t){return Ov(n,t)}function Uq(n,t){return sS(n,t)}function qq(n,t){return DG(n,t)}function Hq(n,t){return cm(n,t)}function jq(n,t){return qc(n,t)}function Kq(n,t){return gi(n,t)}function Xq(n,t){return gi(n,t)}function Yq(n,t){return gi(n,t)}function Jq(n,t){return xs(n,t)}function Zq(n,t){return xs(n,t)}function Qq(n,t){return xs(n,t)}var tH=Object.freeze({__proto__:null,binaryAccuracy:Bq,binaryCrossentropy:zq,sparseCategoricalAccuracy:Wq,categoricalAccuracy:Vq,categoricalCrossentropy:Gq,precision:Uq,recall:qq,cosineProximity:Hq,meanAbsoluteError:jq,meanAbsolutePercentageError:Kq,MAPE:Xq,mape:Yq,meanSquaredError:Jq,MSE:Zq,mse:Qq});var eH=Object.freeze({__proto__:null,modelFromJSON:uU});function nH(n){return new Mp(n)}function rH(n){return bU(n)}function oH(n){return xU(n)}var sH=Object.freeze({__proto__:null,l1l2:nH,l1:rH,l2:oH});class s$ extends Uc{constructor(){super(...arguments);this.model=null}setModel(t){if(!(t instanceof ws))throw new Error("model must be a LayersModel, not some other Container");this.model=t}}function Tm(n,t){return n<t}function i$(n,t){return n>t}class a$ extends s${constructor(t){super();if(t==null&&(t={}),t.restoreBestWeights)throw new Ut("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=t.monitor||"val_loss",this.minDelta=Math.abs(t.minDelta||0),this.patience=t.patience||0,this.verbose=t.verbose||0,this.mode=t.mode||"auto",this.baseline=t.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Tm:this.mode==="max"?this.monitorFunc=i$:this.monitor.indexOf("acc")!==-1?this.monitorFunc=i$:this.monitorFunc=Tm,this.monitorFunc===Tm&&(this.minDelta*=-1)}async onTrainBegin(t){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Tm?Infinity:-Infinity}async onEpochEnd(t,e){await mi(e);let r=this.getMonitorValue(e);if(r==null)return;this.monitorFunc(r-this.minDelta,this.best)?(this.best=r,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=t,this.model.stopTraining=!0))}async onTrainEnd(t){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(t){t==null&&(t={});let e=t[this.monitor];return e==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(t)}`),e}}function iH(n){return new a$(n)}let aH={earlyStopping:iH};var No;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(No||(No={}));var c$;(function(n){let t;(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t=n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(c$||(c$={}));let W0={};function cH(n,t){let e={tfOpName:n,category:"custom",inputs:[],attrs:[],customExecutor:t};W0[n]=e}function l$(n){return W0[n]}function lH(n){delete W0[n]}function A(n,t,e,r,o){let s=t.inputParams[n];if(s&&s.inputIndexStart!==void 0){let l=s.inputIndexStart,p=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?l+1:s.inputIndexEnd;if(s.type==="tensor")return fr(t.inputNames[s.inputIndexStart],e,r,o);if(s.type==="tensors"){let y=t.inputNames.slice(l,p);return y.map(b=>fr(b,e,r,o))}let f=fr(t.inputNames.slice(l)[0],e,r,o),m=f.dataSync();return s.type==="number"?m[0]:Er(f.shape,m)}let c=t.attrParams[n];return c&&c.value}function fr(n,t,e,r){let[o,s]=Nr(n);if(r!=null){let l=r.getHashTableHandleByName(o);if(l!=null)return l}let c=e.currentContextIds.find(l=>!!t[km(o,l)]);return c!==void 0?t[km(o,c)][s]:void 0}function uH(n,t,e){return t[km(n,e.currentContextId)]}function vs(n,t){let[e,r]=Nr(n);return[km(e,t&&t.currentContextId),r]}function km(n,t){return t?`${n}-${t}`:n}function Nr(n){let t=n.split(":");if(t.length===1)return[n,0];let e=t[0];return[e,Number(t[t.length-1])]}function vst(n,t){let e=[];for(let r=0;r<n.length;r+=t)e.push(n.slice(r,r+t));return e}function Nm(n,t,e){let r=A("pad",n,t,e);if(r==="explicit"){r=A("explicitPaddings",n,t,e);let o=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)o[s][0]=r[s*2],o[s][1]=r[s*2+1];return o}return r}function Ts(n){return n.kept?n:ni(n)}let pH=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var hH=Object.freeze({__proto__:null,json:pH});let fH=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var dH=Object.freeze({__proto__:null,json:fH});let mH=[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}];var gH=Object.freeze({__proto__:null,json:mH});let yH=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var bH=Object.freeze({__proto__:null,json:yH});let xH=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var wH=Object.freeze({__proto__:null,json:xH});let vH=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var TH=Object.freeze({__proto__:null,json:vH});let kH=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var NH=Object.freeze({__proto__:null,json:kH});let _H=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var CH=Object.freeze({__proto__:null,json:_H});let SH=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}];var $H=Object.freeze({__proto__:null,json:SH});let IH=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}];var EH=Object.freeze({__proto__:null,json:IH});let DH=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var AH=Object.freeze({__proto__:null,json:DH});let FH=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var RH=Object.freeze({__proto__:null,json:FH});let PH=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var OH=Object.freeze({__proto__:null,json:PH});let LH=[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var MH=Object.freeze({__proto__:null,json:LH});let BH=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var zH=Object.freeze({__proto__:null,json:BH});let WH=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var VH=Object.freeze({__proto__:null,json:WH});let GH=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];var UH=Object.freeze({__proto__:null,json:GH});class u${static get Instance(){return this._instance||(this._instance=new this)}constructor(){let t=[hH,dH,gH,bH,wH,TH,NH,AH,EH,CH,RH,OH,MH,zH,VH,UH,$H],e=[].concat(...t.map(r=>r.json));this.opMappers=e.reduce((r,o)=>(r[o.tfOpName]=o,r),{})}transformGraph(t,e={}){let r=t.node,o=[],s=[],c=[],l=r.reduce((N,S)=>(N[S.name]=this.mapNode(S),S.op.startsWith("Placeholder")?o.push(N[S.name]):S.op==="Const"?s.push(N[S.name]):(S.input==null||S.input.length===0)&&c.push(N[S.name]),N),{}),p=[],f=[],m={},y={};e!=null&&(m=this.mapSignatureEntries(e.inputs),y=this.mapSignatureEntries(e.outputs));let b=Object.keys(l);b.forEach(N=>{let S=l[N];S.inputNames.forEach(D=>{let[I]=vs(D);S.inputs.push(l[I]),l[I].children.push(S)})}),Object.keys(y).length===0?b.forEach(N=>{let S=l[N];S.children.length===0&&f.push(S)}):Object.keys(y).forEach(N=>{let[S]=vs(N),D=l[S];D!=null&&(D.signatureKey=y[N],f.push(D))}),Object.keys(m).length>0?Object.keys(m).forEach(N=>{let[S]=vs(N),D=l[S];D&&(D.signatureKey=m[N],p.push(D))}):p=o;let v={};t.library!=null&&t.library.function!=null&&(v=t.library.function.reduce((N,S)=>(N[S.signature.name]=this.mapFunction(S),N),{}));let T={nodes:l,inputs:p,outputs:f,weights:s,placeholders:o,signature:e,functions:v};return c.length>0&&(T.initNodes=c),T}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,r)=>(e[t[r].name]=r,e),{})}mapNode(t){let e=l$(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});let r={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(o=>o.startsWith("^")?o.substr(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return e.inputs!=null&&(r.inputParams=e.inputs.reduce((o,s)=>(o[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},o),{})),e.attrs!=null&&(r.attrParams=e.attrs.reduce((o,s)=>{let c=s.type,l;switch(s.type){case"string":l=V0(t.attr,s.tfName,s.defaultValue),l===void 0&&!!s.tfDeprecatedName&&(l=V0(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":l=Y0(t.attr,s.tfName,s.defaultValue),l===void 0&&!!s.tfDeprecatedName&&(l=Y0(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":l=U0(t.attr,s.tfName,s.defaultValue||0),l===void 0&&!!s.tfDeprecatedName&&(l=U0(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":l=X0(t.attr,s.tfName,s.defaultValue),l===void 0&&!!s.tfDeprecatedName&&(l=X0(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":l=G0(t.attr,s.tfName,s.defaultValue),l===void 0&&!!s.tfDeprecatedName&&(l=G0(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":l=Z0(t.attr,s.tfName,s.defaultValue),l===void 0&&!!s.tfDeprecatedName&&(l=Z0(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":l=K0(t.attr,s.tfName,s.defaultValue),l===void 0&&!!s.tfDeprecatedName&&(l=K0(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":l=J0(t.attr,s.tfName,s.defaultValue),l===void 0&&!!s.tfDeprecatedName&&(l=J0(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":l=H0(t.attr,s.tfName,s.defaultValue),l===void 0&&!!s.tfDeprecatedName&&(l=H0(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":l=j0(t.attr,s.tfName,s.defaultValue),l===void 0&&!!s.tfDeprecatedName&&(l=j0(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":l=h$(t.attr,s.tfName,s.defaultValue),l===void 0&&!!s.tfDeprecatedName&&(l=h$(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${t.op}`)}return o[s.name]={value:l,type:c},o},{})),r}mapFunction(t){let e=t.nodeDef,r=[],o=[],s={};e!=null&&(s=e.reduce((y,b)=>(y[b.name]=this.mapNode(b),b.op==="Const"&&o.push(y[b.name]),y),{}));let c=[],l=[];t.signature.inputArg.forEach(y=>{let[b]=vs(y.name),v={name:b,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:q0(y.type),type:"dtype"}},children:[]};v.signatureKey=y.name,c.push(v),s[b]=v});let p=Object.keys(s);p.forEach(y=>{let b=s[y];b.inputNames.forEach(v=>{let[T]=vs(v);b.inputs.push(s[T]),s[T].children.push(b)})});let f=t.ret;t.signature.outputArg.forEach(y=>{let[b,v]=vs(f[y.name]),T=s[b];T!=null&&(T.defaultOutput=v,l.push(T))});let m=this.mapArgsToSignature(t);return{nodes:s,inputs:c,outputs:l,weights:o,placeholders:r,signature:m}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,r)=>(e[r.name]=this.mapArgToTensorInfo(r),e),{}),outputs:t.signature.outputArg.reduce((e,r)=>(e[r.name]=this.mapArgToTensorInfo(r,t.ret),e),{})}}mapArgToTensorInfo(t,e){let r=t.name;return e!=null&&(r=e[r]),{name:r,dtype:t.type}}}function qH(n){let t=ct().global;if(typeof t.atob!="undefined")return t.atob(n);if(typeof Buffer!="undefined")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function p$(n,t){let e=Array.isArray(n)?String.fromCharCode.apply(null,n):qH(n);return t?e:e.toLowerCase()}function V0(n,t,e,r=!1){let o=n[t];return o!=null?p$(o.s,r):e}function G0(n,t,e){let r=n[t];return r?r.b:e}function U0(n,t,e){let r=n[t]||{},o=r.i!=null?r.i:r.f!=null?r.f:e;return typeof o=="number"?o:parseInt(o,10)}function q0(n){typeof n=="string"&&(n=No[n]);switch(n){case No.DT_FLOAT:return"float32";case No.DT_INT32:case No.DT_INT64:case No.DT_INT8:case No.DT_UINT8:return"int32";case No.DT_BOOL:return"bool";case No.DT_DOUBLE:return"float32";case No.DT_STRING:return"string";default:return null}}function h$(n,t,e){let r=n[t];return r&&r.func?r.func.name:e}function H0(n,t,e){let r=n[t];return r&&r.type?q0(r.type):e}function j0(n,t,e){let r=n[t];return r&&r.list&&r.list.type?r.list.type.map(o=>q0(o)):e}function f$(n){return n.unknownRank?void 0:n.dim!=null?n.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function K0(n,t,e){let r=n[t];return r&&r.shape?f$(r.shape):e}function X0(n,t,e){let r=n[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):e}function Y0(n,t,e,r=!1){let o=n[t];return o&&o.list&&o.list.s?o.list.s.map(s=>p$(s,r)):e}function J0(n,t,e){let r=n[t];return r&&r.list&&r.list.shape?r.list.shape.map(o=>f$(o)):e}function Z0(n,t,e){let r=n[t];return r&&r.list&&r.list.b?r.list.b:e}class HH{constructor(t,e,r){this.node=t,this.tensorMap=e,this.context=r,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(o=>this.getInput(o)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((o,s)=>(o[s]=this.getAttr(s),o),{}))}getInput(t){return fr(t,this.tensorMap,this.context)}getAttr(t,e){let r=this.node.rawAttrs[t];if(r.tensor!=null)return fr(t,this.tensorMap,this.context);if(r.i!=null||r.f!=null)return U0(this.node.rawAttrs,t,e);if(r.s!=null)return V0(this.node.rawAttrs,t,e);if(r.b!=null)return G0(this.node.rawAttrs,t,e);if(r.shape!=null)return K0(this.node.rawAttrs,t,e);if(r.type!=null)return H0(this.node.rawAttrs,t,e);if(r.list!=null){if(r.list.i!=null||r.list.f!=null)return X0(this.node.rawAttrs,t,e);if(r.list.s!=null)return Y0(this.node.rawAttrs,t,e);if(r.list.shape!=null)return J0(this.node.rawAttrs,t,e);if(r.list.b!=null)return Z0(this.node.rawAttrs,t,e);if(r.list.type!=null)return j0(this.node.rawAttrs,t,e)}return e}}let jH=(n,t,e)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[Tt(A("a",n,t,e),A("b",n,t,e))];case"AddN":return[g_(A("tensors",n,t,e))];case"FloorMod":case"Mod":return[bd(A("a",n,t,e),A("b",n,t,e))];case"Mul":return[nt(A("a",n,t,e),A("b",n,t,e))];case"RealDiv":case"Div":return[Bt(A("a",n,t,e),A("b",n,t,e))];case"DivNoNan":return[xw(A("a",n,t,e),A("b",n,t,e))];case"FloorDiv":return[nd(A("a",n,t,e),A("b",n,t,e))];case"Sub":return[Dt(A("a",n,t,e),A("b",n,t,e))];case"Minimum":return[oa(A("a",n,t,e),A("b",n,t,e))];case"Maximum":return[Xr(A("a",n,t,e),A("b",n,t,e))];case"Pow":return[fo(A("a",n,t,e),A("b",n,t,e))];case"SquaredDifference":return[gp(A("a",n,t,e),A("b",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}},Tst="arithmetic";let KH=(n,t,e)=>{switch(n.op){case"Abs":case"ComplexAbs":return[bn(A("x",n,t,e))];case"Acos":return[nw(A("x",n,t,e))];case"Acosh":return[rw(A("x",n,t,e))];case"Asin":return[iw(A("x",n,t,e))];case"Asinh":return[aw(A("x",n,t,e))];case"Atan":return[cw(A("x",n,t,e))];case"Atan2":return[lw(A("x",n,t,e),A("y",n,t,e))];case"Atanh":return[uw(A("x",n,t,e))];case"Ceil":return[dw(A("x",n,t,e))];case"Complex":return[us(A("real",n,t,e),A("imag",n,t,e))];case"Cos":return[op(A("x",n,t,e))];case"Cosh":return[ud(A("x",n,t,e))];case"Elu":return[_c(A("x",n,t,e))];case"Erf":return[ww(A("x",n,t,e))];case"Exp":return[Ar(A("x",n,t,e))];case"Expm1":return[vw(A("x",n,t,e))];case"Floor":return[Sc(A("x",n,t,e))];case"Log":return[wr(A("x",n,t,e))];case"Log1p":return[dd(A("x",n,t,e))];case"Imag":return[ip(A("x",n,t,e))];case"Neg":return[tn(A("x",n,t,e))];case"Reciprocal":return[Dw(A("x",n,t,e))];case"Real":return[Dc(A("x",n,t,e))];case"Relu":return[Vo(A("x",n,t,e))];case"Round":return[Fw(A("x",n,t,e))];case"Selu":return[Td(A("x",n,t,e))];case"Sigmoid":return[Bo(A("x",n,t,e))];case"Sin":return[kd(A("x",n,t,e))];case"Sign":return[Pw(A("x",n,t,e))];case"Sinh":return[Nd(A("x",n,t,e))];case"Softplus":return[Ic(A("x",n,t,e))];case"Sqrt":return[Pn(A("x",n,t,e))];case"Square":return[De(A("x",n,t,e))];case"Tanh":return[Nc(A("x",n,t,e))];case"Tan":return[Mw(A("x",n,t,e))];case"Relu6":case"ClipByValue":return[ar(A("x",n,t,e),A("clipValueMin",n,t,e),A("clipValueMax",n,t,e))];case"Rsqrt":return[vd(fr(n.inputNames[0],t,e))];case"Prod":return[wd(A("x",n,t,e),A("axes",n,t,e))];case"LeakyRelu":return[fd(A("x",n,t,e),A("alpha",n,t,e))];case"Prelu":return[pp(A("x",n,t,e),A("alpha",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}},kst="basic_math";function to(n,t,e=""){_(XH(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function XH(n,t){if(n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==-1&&t[e]!==-1&&n[e]!==t[e])return!1;return!0}class YH{constructor(t,e,r,o,s,c,l){this.name=t,this.dtype=e,this.maxSize=r,this.elementShape=o,this.identicalElementShapes=s,this.dynamicSize=c,this.clearAfterRead=l,this.tensors=[],this.closed_=!1,this.idTensor=Et(0),Sn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.tensor.id))&&e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);let e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);let r=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=e.shape),to(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),r.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(r.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);r.tensor=e,Sn(e),r.written=!0,this.tensors[t]=r}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((r,o)=>this.write(r,e[o]))}gather(t,e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let o=0;o<this.size();o++)t.push(o)}if(t.length===0)return un([],[0].concat(this.elementShape));let r=this.readMany(t);return to(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),ur(r,0)}concat(t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return un([],[0].concat(this.elementShape));let e=[];for(let o=0;o<this.size();o++)e.push(o);let r=this.readMany(e);return to(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),Qe(r,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(!this.dynamicSize&&r>=this.maxSize)throw new Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(t,mo(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let r=0,o=t.map(p=>(r+=p,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);let s=r===0?0:e.size/r,c=[];rt(()=>{e=Q(e,[1,r,s]);for(let p=0;p<t.length;++p){let f=p===0?0:o[p-1],m=[0,f,0],y=[1,t[p],s];c[p]=Q(ce(e,m,y),this.elementShape)}return c});let l=[];for(let p=0;p<t.length;p++)l[p]=p;this.writeMany(l,c)}}class Yc{constructor(t,e,r,o=-1){this.tensors=t,this.elementShape=e,this.elementDtype=r,t!=null&&t.forEach(s=>{if(r!==s.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${s.dtype}`);to(e,s.shape,"TensorList shape mismatch: "),Sn(s)}),this.idTensor=Et(0),this.maxNumElements=o,Sn(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Yc([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.id))&&e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,r=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);return to(t,this.elementShape,"TensorList shape mismatch: "),rt(()=>{let o=this.tensors.map(s=>Q(s,t));return ur(o,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let r=this.tensors.pop();return to(r.shape,t,"TensorList shape mismatch: "),Q(r,t)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(to(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Sn(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,e,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);return to(this.tensors[t].shape,e,"TensorList shape mismatch: "),this.tensors[t]}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);to(this.elementShape,e.shape,"TensorList shape mismatch: "),Sn(e),this.tensors[t]=e}gather(t,e,r){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);return to(this.elementShape,r,"TensorList shape mismatch: "),t=t.slice(0,this.size()),t.length===0?un([],[0].concat(this.elementShape)):rt(()=>{let o=t.map(s=>Q(this.tensors[s],r));return ur(o,0)})}concat(t,e){if(!!t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);return to(this.elementShape,e,"TensorList shape mismatch: "),this.size()===0?un([],[0].concat(this.elementShape)):rt(()=>{let r=this.tensors.map(o=>Q(o,e));return Qe(r,0)})}}function JH(n,t,e){let r=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==e)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${e}`);let o=n.shape.slice(1);to(o,t,"TensorList shape mismatch: ");let s=mo(n);return new Yc(s,t,r)}function ZH(n,t,e){return new Yc([],n,t,e)}function QH(n,t,e,r){if(t.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${n.shape[0]}`);let o=Math.max(...t);if(r!=null&&r!==-1&&o>=r)throw new Error(`Max index must be < array size (${o}  vs. ${r})`);let s=new Yc([],e,n.dtype,r),c=mo(n,0);return t.forEach((l,p)=>{s.setItem(l,c[p])}),s}function tj(n,t,e){let r=0,o=t.map(p=>(r+=p,r));if(r!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${n.shape}`);let s=r===0?0:n.size/r,c=rt(()=>{let p=[];n=Q(n,[1,r,s]);for(let f=0;f<t.length;++f){let m=f===0?0:o[f-1],y=[0,m,0],b=[1,t[f],s];p[f]=Q(ce(n,y,b),e)}return n.dispose(),p}),l=new Yc([],e,n.dtype,t.length);for(let p=0;p<c.length;p++)l.setItem(p,c[p]);return l}let ej=async(n,t,e)=>{switch(n.op){case"If":case"StatelessIf":{let r=A("thenBranch",n,t,e),o=A("elseBranch",n,t,e),s=A("cond",n,t,e),c=A("args",n,t,e),l=await s.data();return l[0]?e.functionMap[r].executeFunctionAsync(c,e.tensorArrayMap,e.tensorListMap):e.functionMap[o].executeFunctionAsync(c,e.tensorArrayMap,e.tensorListMap)}case"While":case"StatelessWhile":{let r=A("body",n,t,e),o=A("cond",n,t,e),s=A("args",n,t,e),c=await e.functionMap[o].executeFunctionAsync(s,e.tensorArrayMap,e.tensorListMap),l=s.map(m=>m.id),p=await c[0].data();c.forEach(m=>{!m.kept&&l.indexOf(m.id)===-1&&m.dispose()});let f=s;for(;p[0];){let m=f;f=await e.functionMap[r].executeFunctionAsync(f,e.tensorArrayMap,e.tensorListMap);let y=f.map(v=>v.id);m.forEach(v=>{!v.kept&&l.indexOf(v.id)===-1&&y.indexOf(v.id)===-1&&v.dispose()});let b=await e.functionMap[o].executeFunctionAsync(f,e.tensorArrayMap,e.tensorListMap);p=await b[0].data(),b.forEach(v=>{!v.kept&&l.indexOf(v.id)===-1&&y.indexOf(v.id)===-1&&v.dispose()})}return f}case"LoopCond":{let r=A("pred",n,t,e);return[Ts(r)]}case"Switch":{let r=A("pred",n,t,e),o=A("data",n,t,e);return o.kept||(o=Ts(o)),(await r.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{let r=n.inputNames.find(o=>fr(o,t,e)!==void 0);if(r){let o=fr(r,t,e);return[Ts(o)]}return}case"Enter":{let r=A("frameName",n,t,e),o=A("tensor",n,t,e);return e.enterFrame(r),[Ts(o)]}case"Exit":{let r=A("tensor",n,t,e);return e.exitFrame(),[Ts(r)]}case"NextIteration":{let r=A("tensor",n,t,e);return e.nextIteration(),[Ts(r)]}case"TensorArrayV3":{let r=A("size",n,t,e),o=A("dtype",n,t,e),s=A("elementShape",n,t,e),c=A("dynamicSize",n,t,e),l=A("clearAfterRead",n,t,e),p=A("identicalElementShapes",n,t,e),f=A("name",n,t,e),m=new YH(f,o,r,s,p,c,l);return e.addTensorArray(m),[m.idTensor,Et(1)]}case"TensorArrayWriteV3":{let r=A("tensorArrayId",n,t,e),o=A("index",n,t,e),s=A("tensor",n,t,e),c=e.getTensorArray(r.id);return c.write(o,s),[c.idTensor]}case"TensorArrayReadV3":{let r=A("tensorArrayId",n,t,e),o=A("index",n,t,e),s=e.getTensorArray(r.id);return[s.read(o)]}case"TensorArrayGatherV3":{let r=A("tensorArrayId",n,t,e),o=A("indices",n,t,e),s=A("dtype",n,t,e),c=e.getTensorArray(r.id);return[c.gather(o,s)]}case"TensorArrayScatterV3":{let r=A("tensorArrayId",n,t,e),o=A("indices",n,t,e),s=A("tensor",n,t,e),c=e.getTensorArray(r.id);return c.scatter(o,s),[c.idTensor]}case"TensorArrayConcatV3":{let r=A("tensorArrayId",n,t,e),o=e.getTensorArray(r.id),s=A("dtype",n,t,e);return[o.concat(s)]}case"TensorArraySplitV3":{let r=A("tensorArrayId",n,t,e),o=A("tensor",n,t,e),s=A("lengths",n,t,e),c=e.getTensorArray(r.id);return c.split(s,o),[c.idTensor]}case"TensorArraySizeV3":{let r=A("tensorArrayId",n,t,e),o=e.getTensorArray(r.id);return[Et(o.size(),"int32")]}case"TensorArrayCloseV3":{let r=A("tensorArrayId",n,t,e),o=e.getTensorArray(r.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{let r=A("tensorListId",n,t,e),o=A("index",n,t,e),s=A("tensor",n,t,e),c=e.getTensorList(r.id);return c.setItem(o,s),[c.idTensor]}case"TensorListGetItem":{let r=A("tensorListId",n,t,e),o=A("index",n,t,e),s=A("elementShape",n,t,e),c=A("elementDType",n,t,e),l=e.getTensorList(r.id);return[l.getItem(o,s,c)]}case"TensorListScatterV2":case"TensorListScatter":{let r=A("indices",n,t,e),o=A("tensor",n,t,e),s=A("elementShape",n,t,e),c=A("numElements",n,t,e),l=QH(o,r,s,c);return e.addTensorList(l),[l.idTensor]}case"TensorListReserve":{let r=A("elementShape",n,t,e),o=A("elementDType",n,t,e),s=A("numElements",n,t,e),c=ZH(r,o,s);return e.addTensorList(c),[c.idTensor]}case"TensorListGather":{let r=A("tensorListId",n,t,e),o=A("indices",n,t,e),s=A("elementShape",n,t,e),c=A("elementDType",n,t,e),l=e.getTensorList(r.id);return[l.gather(o,c,s)]}case"TensorListStack":{let r=A("tensorListId",n,t,e),o=A("elementShape",n,t,e),s=A("elementDType",n,t,e),c=A("numElements",n,t,e),l=e.getTensorList(r.id);return[l.stack(o,s,c)]}case"TensorListFromTensor":{let r=A("tensor",n,t,e),o=A("elementShape",n,t,e),s=A("elementDType",n,t,e),c=JH(r,o,s);return e.addTensorList(c),[c.idTensor]}case"TensorListConcat":{let r=A("tensorListId",n,t,e),o=e.getTensorList(r.id),s=A("dtype",n,t,e),c=A("elementShape",n,t,e);return[o.concat(s,c)]}case"TensorListPushBack":{let r=A("tensorListId",n,t,e),o=A("tensor",n,t,e),s=e.getTensorList(r.id);return s.pushBack(o),[s.idTensor]}case"TensorListPopBack":{let r=A("tensorListId",n,t,e),o=A("elementShape",n,t,e),s=A("elementDType",n,t,e),c=e.getTensorList(r.id);return[c.popBack(o,s)]}case"TensorListSplit":{let r=A("tensor",n,t,e),o=A("elementShape",n,t,e),s=A("lengths",n,t,e),c=tj(r,s,o);return e.addTensorList(c),[c.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}},Nst="control";function d$(n,t,e){let[r,o]=A("fusedOps",n,t,e),s=r==="biasadd",c=o==="prelu",l=r==="fusedbatchnorm",p=A("numArgs",n,t,e);if(s){if(c&&p!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!c&&p!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");let f=A("strides",n,t,e),m=Nm(n,t,e),y=A("dataFormat",n,t,e).toUpperCase(),b=A("dilations",n,t,e),[v,T]=A("args",n,t,e);return{stride:f,pad:m,dataFormat:y,dilations:b,biasArg:v,preluArg:T,activationFunc:o}}let nj=(n,t,e)=>{switch(n.op){case"Conv1D":{let r=A("stride",n,t,e),o=A("pad",n,t,e),s=A("dataFormat",n,t,e).toUpperCase(),c=A("dilation",n,t,e);return[cd(A("x",n,t,e),A("filter",n,t,e),r,o,s,c)]}case"Conv2D":{let r=A("strides",n,t,e),o=Nm(n,t,e),s=A("dataFormat",n,t,e).toUpperCase(),c=A("dilations",n,t,e);return[fs(A("x",n,t,e),A("filter",n,t,e),[r[1],r[2]],o,s,[c[1],c[2]])]}case"_FusedConv2D":{let{stride:r,pad:o,dataFormat:s,dilations:c,biasArg:l,preluArg:p,activationFunc:f}=d$(n,t,e);return[qw({x:A("x",n,t,e),filter:A("filter",n,t,e),strides:[r[1],r[2]],pad:o,dataFormat:s,dilations:[c[1],c[2]],bias:l,activation:f,preluActivationWeights:p})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:o,dataFormat:s,dilations:c,biasArg:l,preluArg:p,activationFunc:f}=d$(n,t,e);return[cC({x:A("x",n,t,e),filter:A("filter",n,t,e),strides:[r[1],r[2]],pad:o,dataFormat:s,dilations:[c[1],c[2]],bias:l,activation:f,preluActivationWeights:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=A("outputShape",n,t,e),o=A("strides",n,t,e),s=Nm(n,t,e);return[ld(A("x",n,t,e),A("filter",n,t,e),r,[o[1],o[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=A("strides",n,t,e),o=Nm(n,t,e),s=A("dilations",n,t,e),c=A("dataFormat",n,t,e).toUpperCase();return[na(A("input",n,t,e),A("filter",n,t,e),[r[1],r[2]],o,c,[s[1],s[2]])]}case"Conv3D":{let r=A("strides",n,t,e),o=A("pad",n,t,e),s=A("dataFormat",n,t,e).toUpperCase(),c=A("dilations",n,t,e);return[gw(A("x",n,t,e),A("filter",n,t,e),[r[1],r[2],r[3]],o,s,[c[1],c[2],c[3]])]}case"AvgPool":{let r=A("strides",n,t,e),o=A("pad",n,t,e),s=A("kernelSize",n,t,e);return[ep(A("x",n,t,e),[s[1],s[2]],[r[1],r[2]],o)]}case"MaxPool":{let r=A("strides",n,t,e),o=A("pad",n,t,e),s=A("kernelSize",n,t,e);return[lp(A("x",n,t,e),[s[1],s[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{let r=A("strides",n,t,e),o=A("pad",n,t,e),s=A("kernelSize",n,t,e),c=A("includeBatchInIndex",n,t,e),{result:l,indexes:p}=R_(A("x",n,t,e),[s[1],s[2]],[r[1],r[2]],o,c);return[l,p]}case"AvgPool3D":{let r=A("strides",n,t,e),o=A("pad",n,t,e),s=A("kernelSize",n,t,e);return[fw(A("x",n,t,e),[s[1],s[2],s[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{let r=A("strides",n,t,e),o=A("pad",n,t,e),s=A("kernelSize",n,t,e);return[Cw(A("x",n,t,e),[s[1],s[2],s[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{let r=A("strides",n,t,e),o=A("pad",n,t,e),s=A("dilations",n,t,e),c=r[1],l=r[2],p=s[1],f=s[2];return[bw(A("x",n,t,e),A("filter",n,t,e),[c,l],o,[p,f],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}},_st="convolution";let rj=(n,t,e)=>{switch(n.op){case"Fill":{let r=A("shape",n,t,e),o=A("dtype",n,t,e),s=A("value",n,t,e);return[Cc(r,s,o)]}case"LinSpace":{let r=A("start",n,t,e),o=A("stop",n,t,e),s=A("num",n,t,e);return[D_(r,o,s)]}case"Multinomial":{let r=A("logits",n,t,e),o=A("numSamples",n,t,e),s=A("seed",n,t,e);return[P_(r,o,s)]}case"OneHot":{let r=A("indices",n,t,e),o=A("depth",n,t,e),s=A("onValue",n,t,e),c=A("offValue",n,t,e);return[Zi(r,o,s,c)]}case"Ones":return[ho(A("shape",n,t,e),A("dtype",n,t,e))];case"OnesLike":return[qn(A("x",n,t,e))];case"RandomUniform":return[aa(A("shape",n,t,e),A("minval",n,t,e),A("maxval",n,t,e),A("dtype",n,t,e))];case"Range":{let r=A("start",n,t,e),o=A("stop",n,t,e),s=A("step",n,t,e);return[hp(r,o,s,A("dtype",n,t,e))]}case"TruncatedNormal":{let r=A("shape",n,t,e),o=A("mean",n,t,e),s=A("stdDev",n,t,e),c=A("seed",n,t,e);return[yp(r,o,s,A("dtype",n,t,e),c)]}case"Zeros":return[xe(A("shape",n,t,e),A("dtype",n,t,e))];case"ZerosLike":return[re(A("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}},Cst="creation";function Q0(n,t,e){let r=A("boxes",n,t,e),o=A("scores",n,t,e),s=A("maxOutputSize",n,t,e),c=A("iouThreshold",n,t,e),l=A("scoreThreshold",n,t,e),p=A("softNmsSigma",n,t,e);return{boxes:r,scores:o,maxOutputSize:s,iouThreshold:c,scoreThreshold:l,softNmsSigma:p}}let oj=async(n,t,e)=>{switch(n.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:o,maxOutputSize:s,iouThreshold:c,scoreThreshold:l,softNmsSigma:p}=Q0(n,t,e),f=await pi.nonMaxSuppressionWithScoreAsync(r,o,s,c,l,p);return[f.selectedIndices,f.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:o,maxOutputSize:s,iouThreshold:c,scoreThreshold:l}=Q0(n,t,e),p=A("padToMaxOutputSize",n,t,e),f=await pi.nonMaxSuppressionPaddedAsync(r,o,s,c,l,p);return[f.selectedIndices,f.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:o,maxOutputSize:s,iouThreshold:c,scoreThreshold:l}=Q0(n,t,e);return[await pi.nonMaxSuppressionAsync(r,o,s,c,l)]}case"Where":{let r=$t(A("condition",n,t,e),"bool"),o=[await Ww(r)];return r.dispose(),o}case"ListDiff":return L_(A("x",n,t,e),A("y",n,t,e));default:throw TypeError(`Node type ${n.op} is not implemented`)}},Sst="dynamic";let sj=(n,t,e)=>{switch(n.op){case"TopKV2":{let r=A("x",n,t,e),o=A("k",n,t,e),s=A("sorted",n,t,e),c=Bw(r,o,s);return[c.values,c.indices]}case"Unique":{let r=A("x",n,t,e),o=$d(r);return[o.values,o.indices]}case"UniqueV2":{let r=A("x",n,t,e),o=A("axis",n,t,e),s=$d(r,o);return[s.values,s.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}},$st="evaluation";let ij=(n,t,e)=>{switch(n.op){case"Const":return t[n.name];case"PlaceholderWithDefault":let r=A("default",n,t,e);return[fr(n.name,t,e)||r];case"Placeholder":return[fr(n.name,t,e)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let f=A("x",n,t,e);return[Ts(f)]}case"IdentityN":return A("x",n,t,e).map(f=>Ts(f));case"Snapshot":let o=A("x",n,t,e);return[Ts(o)];case"Shape":return[vr(A("x",n,t,e).shape,"int32")];case"ShapeN":return A("x",n,t,e).map(f=>vr(f.shape));case"Size":return[Et(A("x",n,t,e).size,"int32")];case"Rank":return[Et(A("x",n,t,e).rank,"int32")];case"NoOp":return[Et(1)];case"Print":let s=A("x",n,t,e),c=A("data",n,t,e),l=A("message",n,t,e),p=A("summarize",n,t,e);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let f=0;f<c.length;f++)console.log(Array.prototype.slice.call(c[f].dataSync()).slice(0,p));return[s];default:throw TypeError(`Node type ${n.op} is not implemented`)}},Ist="graph";class aj{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Et(0),this.tensorMap=new Map,Sn(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(t,e){this.checkKeyAndValueTensor(t,e);let r=await t.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),rt(()=>{let o=mo(e),s=r.length,c=o.length;_(s===c,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${c} elements.`);for(let l=0;l<s;l++){let p=r[l],f=o[l];Sn(f),this.tensorMap.set(p,f)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);let r=await t.data();return rt(()=>{let o=[];for(let s=0;s<r.length;s++){let c=r[s],l=this.findWithDefault(c,e);o.push(l)}return ur(o)})}findWithDefault(t,e){let r=this.tensorMap.get(t);return r!=null?r:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}let cj=async(n,t,e,r)=>{switch(n.op){case"HashTable":case"HashTableV2":{let o=A("keyDType",n,t,e),s=A("valueDType",n,t,e),c=new aj(o,s);return r.addHashTable(n.name,c),[c.handle]}case"LookupTableImport":case"LookupTableImportV2":{let o=A("tableHandle",n,t,e,r),s=A("keys",n,t,e),c=A("values",n,t,e),l=r.getHashTableById(o.id);return[await l.import(s,c)]}case"LookupTableFind":case"LookupTableFindV2":{let o=A("tableHandle",n,t,e,r),s=A("keys",n,t,e),c=A("defaultValue",n,t,e),l=r.getHashTableById(o.id);return[await l.find(s,c)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}},Est="hash_table";let lj=(n,t,e)=>{switch(n.op){case"ResizeBilinear":{let r=A("images",n,t,e),o=A("size",n,t,e),s=A("alignCorners",n,t,e);return[pi.resizeBilinear(r,[o[0],o[1]],s)]}case"ResizeNearestNeighbor":{let r=A("images",n,t,e),o=A("size",n,t,e),s=A("alignCorners",n,t,e);return[pi.resizeNearestNeighbor(r,[o[0],o[1]],s)]}case"CropAndResize":{let r=A("image",n,t,e),o=A("boxes",n,t,e),s=A("boxInd",n,t,e),c=A("cropSize",n,t,e),l=A("method",n,t,e),p=A("extrapolationValue",n,t,e);return[pi.cropAndResize(r,o,s,c,l,p)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}},Dst="image";let uj=(n,t,e)=>{switch(n.op){case"Equal":return[po(A("a",n,t,e),A("b",n,t,e))];case"NotEqual":return[ci(A("a",n,t,e),A("b",n,t,e))];case"Greater":return[Fr(A("a",n,t,e),A("b",n,t,e))];case"GreaterEqual":return[ds(A("a",n,t,e),A("b",n,t,e))];case"Less":return[ap(A("a",n,t,e),A("b",n,t,e))];case"LessEqual":return[ai(A("a",n,t,e),A("b",n,t,e))];case"LogicalAnd":return[Yr(A("a",n,t,e),A("b",n,t,e))];case"LogicalNot":return[cp(A("a",n,t,e))];case"LogicalOr":return[yd(A("a",n,t,e),A("b",n,t,e))];case"Select":case"SelectV2":return[Xn(A("condition",n,t,e),A("a",n,t,e),A("b",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}},Ast="logical";let pj=(n,t,e)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[ge(A("a",n,t,e),A("b",n,t,e),A("transposeA",n,t,e),A("transposeB",n,t,e))];case"Transpose":return[Kt(A("x",n,t,e),A("perm",n,t,e))];case"_FusedMatMul":let[r,o]=A("fusedOps",n,t,e),s=r==="biasadd",c=o==="prelu",l=A("numArgs",n,t,e);if(s){if(c&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!c&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[p,f]=A("args",n,t,e);return[Pd({a:A("a",n,t,e),b:A("b",n,t,e),transposeA:A("transposeA",n,t,e),transposeB:A("transposeB",n,t,e),bias:p,activation:o,preluActivationWeights:f})];default:throw TypeError(`Node type ${n.op} is not implemented`)}},Fst="matrices";let hj=(n,t,e)=>{switch(n.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[ea(A("x",n,t,e),A("mean",n,t,e),A("variance",n,t,e),A("offset",n,t,e),A("scale",n,t,e),A("epsilon",n,t,e))];case"FusedBatchNormV3":return[ea(A("x",n,t,e),A("mean",n,t,e),A("variance",n,t,e),A("offset",n,t,e),A("scale",n,t,e),A("epsilon",n,t,e))];case"LRN":return[kw(A("x",n,t,e),A("radius",n,t,e),A("bias",n,t,e),A("alpha",n,t,e),A("beta",n,t,e))];case"Softmax":return[ca(A("x",n,t,e))];case"LogSoftmax":return[gd(A("x",n,t,e))];case"SparseToDense":return[Vw(A("sparseIndices",n,t,e),A("outputShape",n,t,e),A("sparseValues",n,t,e),A("defaultValue",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}},Rst="normalization";let fj=(n,t,e)=>{switch(n.op){case"Max":{let r=A("axis",n,t,e),o=A("keepDims",n,t,e);return[lr(A("x",n,t,e),r,o)]}case"Mean":{let r=A("axis",n,t,e),o=A("keepDims",n,t,e);return[en(A("x",n,t,e),r,o)]}case"Min":{let r=A("axis",n,t,e),o=A("keepDims",n,t,e);return[Ec(A("x",n,t,e),r,o)]}case"Sum":{let r=A("axis",n,t,e),o=A("keepDims",n,t,e);return[zt(A("x",n,t,e),r,o)]}case"All":{let r=A("axis",n,t,e),o=A("keepDims",n,t,e);return[rd(A("x",n,t,e),r,o)]}case"Any":{let r=A("axis",n,t,e),o=A("keepDims",n,t,e);return[Zu(A("x",n,t,e),r,o)]}case"ArgMax":{let r=A("axis",n,t,e);return[Qu(A("x",n,t,e),r)]}case"ArgMin":{let r=A("axis",n,t,e);return[sw(A("x",n,t,e),r)]}case"Prod":{let r=A("axis",n,t,e),o=A("keepDims",n,t,e);return[wd(A("x",n,t,e),r,o)]}case"Cumsum":{let r=A("axis",n,t,e),o=A("exclusive",n,t,e),s=A("reverse",n,t,e);return[pd(A("x",n,t,e),r,o,s)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}},Pst="reduction";let dj=(n,t,e)=>{switch(n.op){case"ConcatV2":case"Concat":{let r=A("n",n,t,e),o=A("axis",n,t,e),s=A("tensors",n,t,e);return s=s.slice(0,r),[Qe(s,o)]}case"GatherV2":case"Gather":{let r=A("axis",n,t,e),o=A("x",n,t,e),s=A("indices",n,t,e);return[$c(o,$t(s,"int32"),r)]}case"ReverseV2":case"Reverse":{let r=A("axis",n,t,e),o=A("x",n,t,e);return[Rr(o,r)]}case"Slice":{let r=A("begin",n,t,e),o=A("size",n,t,e);return[ce(A("x",n,t,e),r,o)]}case"StridedSlice":{let r=A("begin",n,t,e),o=A("end",n,t,e),s=A("strides",n,t,e),c=A("beginMask",n,t,e),l=A("endMask",n,t,e),p=A("ellipsisMask",n,t,e),f=A("newAxisMask",n,t,e),m=A("shrinkAxisMask",n,t,e),y=A("x",n,t,e);return[Lw(y,r,o,s,c,l,p,f,m)]}case"Pack":return rt(()=>{let r=A("axis",n,t,e),o=A("tensors",n,t,e),s=o[0].shape,c=li(o[0]).shape,l=o.map(p=>{let f=lt(p.shape,s);if(!f&&!lt(li(p).shape,c))throw new Error("the input tensors shape does not match");return f?p:Q(p,s)});return[ur(l,r)]});case"Unpack":{let r=A("axis",n,t,e),o=A("tensor",n,t,e);return mo(o,r)}case"Tile":{let r=A("reps",n,t,e);return[ii(A("x",n,t,e),r)]}case"Split":case"SplitV":{let r=A("axis",n,t,e),o=A("numOrSizeSplits",n,t,e),s=A("x",n,t,e);return Tr(s,o,r)}case"ScatterNd":{let r=A("indices",n,t,e),o=A("values",n,t,e),s=A("shape",n,t,e);return[nC(r,o,s)]}case"GatherNd":{let r=A("x",n,t,e),o=A("indices",n,t,e);return[rC(r,o)]}case"SparseToDense":{let r=A("sparseIndices",n,t,e),o=A("outputShape",n,t,e),s=A("sparseValues",n,t,e),c=A("defaultValue",n,t,e);return[Vw(r,s,o,s.dtype===c.dtype?c:$t(c,s.dtype))]}default:throw TypeError(`Node type ${n.op} is not implemented`)}},Ost="slice_join";let mj=(n,t,e)=>{switch(n.op){case"FFT":return[dp(A("x",n,t,e))];case"IFFT":return[Rc(A("x",n,t,e))];case"RFFT":return[mp(A("x",n,t,e))];case"IRFFT":return[Sd(A("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}},Lst="spectral";let gj=(n,t,e)=>{switch(n.op){case"Cast":return[$t(A("x",n,t,e),A("dtype",n,t,e))];case"ExpandDims":{let r=A("axis",n,t,e);return[cr(A("x",n,t,e),r)]}case"Squeeze":{let r=A("axis",n,t,e);return[li(A("x",n,t,e),r)]}case"Reshape":return[Q(A("x",n,t,e),A("shape",n,t,e))];case"MirrorPad":return[Sw(A("x",n,t,e),A("padding",n,t,e),A("mode",n,t,e))];case"PadV2":case"Pad":return[Wo(A("x",n,t,e),A("padding",n,t,e),A("constantValue",n,t,e))];case"SpaceToBatchND":{let r=A("blockShape",n,t,e),o=A("paddings",n,t,e);return[up(A("x",n,t,e),r,o)]}case"BatchToSpaceND":{let r=A("blockShape",n,t,e),o=A("crops",n,t,e);return[np(A("x",n,t,e),r,o)]}case"DepthToSpace":{let r=A("blockSize",n,t,e),o=A("dataFormat",n,t,e).toUpperCase();return[yw(A("x",n,t,e),r,o)]}case"BroadcastTo":return[rp(A("x",n,t,e),A("shape",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}},Mst="transformation";function m$(n,t,e,r){let o=((s,c,l)=>{switch(s.category){case"arithmetic":return rt(()=>jH(s,c,l));case"basic_math":return rt(()=>KH(s,c,l));case"control":return ej(s,c,l);case"convolution":return rt(()=>nj(s,c,l));case"creation":return rt(()=>rj(s,c,l));case"dynamic":return oj(s,c,l);case"evaluation":return rt(()=>sj(s,c,l));case"image":return rt(()=>lj(s,c,l));case"graph":return rt(()=>ij(s,c,l));case"logical":return rt(()=>uj(s,c,l));case"matrices":return rt(()=>pj(s,c,l));case"normalization":return rt(()=>hj(s,c,l));case"reduction":return rt(()=>fj(s,c,l));case"slice_join":return rt(()=>dj(s,c,l));case"spectral":return rt(()=>mj(s,c,l));case"transformation":return rt(()=>gj(s,c,l));case"hash_table":return cj(s,c,l,r);case"custom":let p=l$(s.op);if(p&&p.customExecutor)return p.customExecutor(new HH(s,c,l));throw TypeError(`Custom op ${s.op} is not registered.`);default:throw TypeError(`Unknown op '${s.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,t,e);return qi(o)?o.then(s=>[].concat(s)):[].concat(o)}class g${constructor(t={},e={},r={},o={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=r,this.functionMap=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let t=[];for(let e=0;e<this.contexts.length-1;e++){let r=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(r))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>e.id===0&&e.iterationId===0?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(let e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(let e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function y$(n,t,e,r){let o=new Set,s=[],c=null,l=null,p=new Set,f=Object.keys(n).map(b=>Nr(b)[0]),m=[];r!=null&&(m=r.map(b=>Nr(b.name)[0]));let y=[...t];for(;y.length>0;){let b=y.pop();if((b$(b)||vj(b)||Tj(b))&&(c==null&&(c=b,l=c.children.map(v=>v.name).filter(v=>o.has(v)))),o.add(b.name),e[b.name]!=null)continue;if(f.indexOf(b.name)!==-1)continue;if(m.indexOf(b.name)!==-1)continue;if(b.inputs.length===0){s.push(b.name);continue}b.inputs.forEach(v=>{if(p.has(v.name))return;p.add(v.name),y.push(v)})}return{inputs:n,outputs:t,usedNodes:o,missingInputs:s,dynamicNode:c,syncInputs:l}}function yj(n,t,e){let{usedNodes:r,inputs:o}=e,s=[],c=Object.keys(o).map(m=>Nr(m)[0]).map(m=>n.nodes[m]),l=n.initNodes;c.forEach(m=>{r.has(m.name)&&s.push(m)}),n.weights.forEach(m=>{r.has(m.name)&&s.push(m)}),l!=null&&l.forEach(m=>{r.has(m.name)&&s.push(m)});let p=new Set,f=[];for(;s.length>0;){let m=s.pop();p.add(m.name),t[m.name]||f.push(m),m.children.forEach(y=>{!p.has(y.name)&&r.has(y.name)&&y.inputs.every(b=>p.has(b.name))&&s.push(y)})}return f}let bj=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],xj=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],wj=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function b$(n){return bj.indexOf(n.op)>=0}function vj(n){return xj.indexOf(n.op)>=0}function Tj(n){return wj.indexOf(n.op)>=0}class _m{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(r=>{this._functionExecutorMap[r]=new _m(t.functions[r],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){let e=Object.keys(t).map(r=>t[r].map(o=>o.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{let e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}getCompilationKey(t,e){let r=t.map(s=>s.name).sort(),o=e.map(s=>s.name).sort();return r.join(this.SEPERATOR)+"--"+o.join(this.SEPERATOR)}compile(t,e){let r=y$(t,e,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:s,syncInputs:c}=r;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${c}]`);if(o.length>0){let l=e.map(f=>f.name),p=Object.keys(t);throw new Error(`Cannot compute the outputs [${l}] from the provided inputs [${p}]. Missing the following inputs: [${o}]`)}return yj(this.graph,this.weightMap,r)}execute(t,e){t=this.mapInputs(t);let r=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);let o=r.map(y=>this.graph.nodes[Nr(y)[0]]),s=e.map(y=>Nr(y)[0]),c=s.map(y=>this.graph.nodes[y]);c.length===0&&(c=this._outputs);let l=this.getCompilationKey(o,c),p=this.compiledMap.get(l);p==null&&(p=this.compile(t,c),this.compiledMap.set(l,p));let f={},m={};return rt(()=>{let y=new g$(this.weightMap,f,m,this.functionExecutorMap),b=Object.assign({},this.weightMap);Object.keys(t).forEach(N=>{let[S,D]=Nr(N),I=[];I[D]=t[N],b[S]=I});let v=this.getFrozenTensorIds(b),T={};for(let N=0;N<p.length;N++){let S=p[N];if(!b[S.name]){let D=m$(S,b,y,this._resourceManager);if(qi(D))throw new Error(`The execution of the op '${S.op}' returned a promise. Please use model.executeAsync() instead.`);b[S.name]=D,this.checkTensorForDisposal(S.name,S,b,y,v,s,T)}}return this.parent==null&&y.dispose(v),e.map(N=>fr(N,b,y))})}getFrozenTensorIds(t){let e=[].concat.apply([],Object.keys(t).map(r=>t[r]).map(r=>r.map(o=>o.id)));return new Set(e)}checkTensorForDisposal(t,e,r,o,s,c,l){if(e.category==="control"||c.indexOf(t)!==-1)return;r[t].forEach(p=>{p!=null&&(l[p.id]=(l[p.id]||0)+e.children.length)}),e.inputs.forEach(p=>{if(p.category!=="control"){let f=uH(p.name,r,o);f!=null&&f.forEach(m=>{if(m&&!s.has(m.id)){let y=l[m.id];y===1?(m.dispose(),delete l[m.id]):y!=null&&l[m.id]--}})}})}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e,r=!1,o={},s={}){r||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));let c=new g$(this.weightMap,o,s,this.functionExecutorMap),l=await this.executeWithControlFlow(t,c,e,r),p=e.map(b=>fr(b,l,c)),f=p.map(b=>b.id),m=Object.keys(t).map(b=>t[b].id),y=new Set([...f,...m,...this.weightIds]);return Object.keys(l).forEach(b=>{let v=l[b];v.forEach(T=>{T&&!T.isDisposed&&!y.has(T.id)&&T.dispose()})}),this.parent==null&&c.dispose(y),p}async executeFunctionAsync(t,e,r){let o=t.reduce((s,c,l)=>(s[this.inputs[l].name]=c,s),{});return this._executeAsync(o,this.outputNodes,!0,e,r)}async executeWithControlFlow(t,e,r,o){let s=Object.keys(t),c=s.map(P=>this.graph.nodes[Nr(P)[0]]),l=r.map(P=>Nr(P)[0]),p=l.map(P=>this.graph.nodes[P]);p.length===0&&(p=this._outputs);let{usedNodes:f,missingInputs:m,dynamicNode:y,syncInputs:b}=y$(t,p,this.weightMap,this._initNodes),v=[...c,...this.graph.weights,...this._initNodes||[]].map(P=>({node:P,contexts:e.currentContext})),T=Object.assign({},this.weightMap);Object.keys(t).forEach(P=>{let[E,L]=Nr(P),B=[];B[L]=t[P],T[E]=B});let N={},S=this.getFrozenTensorIds(T),D={};for(;v.length>0;){let P=this.processStack(c,v,e,T,D,S,l,N,f);await Promise.all(P)}y==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let I=p.filter(P=>!b$(P)&&!fr(P.name,T,e)).map(P=>P.name);if(I.length>0){let P="";throw y!=null&&(P=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${b}]`),new Error(`Cannot compute the outputs [${I}] from the provided inputs [${s}]. Consider providing the following inputs: [${m}]. ${P}`)}return T}processStack(t,e,r,o,s,c,l,p,f){let m=[];for(;e.length>0;){let y=e.pop();r.currentContext=y.contexts;let b="";if(y.node.op==="Enter"&&A("isConstant",y.node,o,r)&&([b]=vs(y.node.name,r)),o[y.node.name]==null){let v=m$(y.node,o,r,this._resourceManager);b||([b]=vs(y.node.name,r));let T=r.currentContext;qi(v)?m.push(v.then(N=>(o[b]=N,r.currentContext=T,this.checkTensorForDisposal(b,y.node,o,r,c,l,p),this.processChildNodes(y.node,e,r,o,s,f),N))):(o[b]=v,this.checkTensorForDisposal(b,y.node,o,r,c,l,p),this.processChildNodes(y.node,e,r,o,s,f))}else this.processChildNodes(y.node,e,r,o,s,f)}return m}processChildNodes(t,e,r,o,s,c){t.children.forEach(l=>{let[p]=vs(l.name,r);if(s[p]||!c.has(l.name))return;l.op==="Merge"?l.inputNames.some(f=>!!fr(f,o,r))&&(s[p]=!0,e.push({contexts:r.currentContext,node:l})):l.inputNames.every(f=>!!fr(f,o,r))&&(s[p]=!0,e.push({contexts:r.currentContext,node:l}))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{let r=t[e],[o]=Nr(e),s=this.graph.nodes[o];if(s.attrParams.shape&&s.attrParams.shape.value){let c=s.attrParams.shape.value,l=c.length===r.shape.length&&r.shape.every((p,f)=>c[f]===-1||c[f]===p);_(l,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${c}], but was [${r.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&_(r.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(t){let e={};for(let r in t)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[r]!=null){let o=this._signature.inputs[r];e[o.name]=t[r]}else e[r]=t[r];return e}checkInputs(t){let e=Object.keys(t).filter(r=>{let[o]=Nr(r);return this.graph.nodes[o]==null});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>{if(this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[e]!=null){let r=this._signature.outputs[e];return r.name}return e},{})}checkOutputs(t){t.forEach(e=>{let[r]=Nr(e);if(!this.graph.nodes[r])throw new Error(`The output '${e}' is not found in the graph`)})}}class kj{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(let t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(let t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}let Nj="?tfjs-format=file",_j="model.json";class x${constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",e==null&&(this.loadOptions={}),this.resourceManager=new kj}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}findIOHandler(){let t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=Xf(t,this.loadOptions);else{let e=Bx(t,this.loadOptions);if(e.length===0)e.push(Xf(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;let e=this.artifacts.modelTopology,r={};this.artifacts.userDefinedMetadata!=null&&(r=this.artifacts.userDefinedMetadata.signature),this.version=`${e.versions.producer}.${e.versions.minConsumer}`;let o=qf(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new _m(u$.Instance.transformGraph(e,r)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null){let s=u$.Instance.transformGraph(t.modelInitializer);this.initializer=new _m(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if(typeof t=="string"){let r=Mx(t);if(r.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${t}'`);t=r[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof ot)&&!Array.isArray(t))return t;if(t=Array.isArray(t)?t:[t],t.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce((e,r,o)=>(e[r]=t[o],e),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let r=this.executor.execute(t,e);return r.length>1?r:r[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let r=await this.executor.executeAsync(t,e);return r.length>1?r:r[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,r)=>(e[r]=[t[r]],e),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function Cj(n,t={}){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&(n.load==null&&(n.endsWith("/")||(n=n+"/"),n=`${n}${_j}${Nj}`));let e=new x$(n,t);return await e.load(),e}let w$="2.7.0";function Sj(n,t){return Cm(n,t)}function Cm(n,t,e=new Map,r=new Set){if(n==null)return null;if(r.has(n))throw new Error("Circular references are not supported.");if(e.has(n))return e.get(n);let o=t(n);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(Jc(n)){let s=Array.isArray(n)?[]:{};r.add(n);for(let c in n){let l=n[c],p=Cm(l,t,e,r);s[c]=p}return r.delete(n),s}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return e.set(n,o.value),o.value}function $j(n,t=T$){return v$(n,t)}function v$(n,t,e=new Set){let r=n[0];if(e.has(r))throw new Error("Circular references are not supported.");let o=t(n);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(Jc(r)){let s=Array.isArray(r)?[]:{};e.add(r);for(let c in r){let l=n.map(f=>f[c]),p=v$(l,t,e);s[c]=p}return e.delete(r),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return o.value}function T$(n){return n===null?null:Jc(n[0])?{value:null,recurse:!0}:{value:n,recurse:!1}}async function k$(n,t){let e=new Map;Cm(n,t,e);for(let o of Array.from(e.keys())){let s=e.get(o);if(qi(s)){let c=await s;e.set(o,c)}}let r=Cm(n,t,e);return r}function Jc(n){return n!=null&&!ArrayBuffer.isView(n)&&(Array.isArray(n)||typeof n=="object"&&!(n instanceof ot))}function Ij(n){return n==null||Ej(n)||Array.isArray(n)||typeof n=="object"&&n instanceof ot||gn(n)}function Ej(n){return n===null||typeof n!="object"&&typeof n!="function"}function Dj(n){return Sj(n,Aj)}function Aj(n){return n instanceof ot?{value:n.clone(),recurse:!1}:Jc(n)?{value:null,recurse:!0}:{value:n,recurse:!1}}class N${constructor(t){if(this.capacity=t,this.begin=0,this.end=0,t==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(let e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.wrap(this.begin+t),r=this.get(e);return this.set(e,this.pop()),r}}class Sm extends N${constructor(){super(Sm.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){let t=this.capacity*2,e=new Array(t),r=this.length();for(let o=0;o<r;o++)e[o]=this.get(this.wrap(this.begin+o));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=r}}Sm.INITIAL_CAPACITY=32;function _$(n){return new Rj(n)}function Bst(n){let t=n;return Yp(()=>({value:t++,done:!1}))}function Yp(n){return new Pj(n)}function C$(n,t){return new $$(n,t)}function zst(n,t,e){return C$(Yp(n).take(t),e)}function Fj(n,t=vi.FAIL){return new Uj(n,t)}class En{async toArray(){let t=[],e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){let t=this.prefetch(100),e=[],r=await t.next();for(;!r.done;)e.push(r.value),r=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),r=t(e.value);for(;!e.done&&r;)e=await this.next(),r=t(e.value)}handleErrors(t){return new Vj(this,t)}filter(t){return new zj(this,t)}map(t){return new Wj(this,t)}mapAsync(t){return new S$(this,t)}serialMapAsync(t){return new S$(this,t).serial()}flatmap(t){return new Gj(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(e=>e===!0)}rowMajorBatch(t,e=!0){return new Bj(this,t,e)}columnMajorBatch(t,e=!0,r=T$){let o=this.rowMajorBatch(t,e);return o.map(s=>$j(s,r))}concatenate(t,e){return new $$(_$([this,t]),e)}take(t){return t<0||t==null?this:new Mj(this,t)}skip(t){return t<0||t==null?this:new Lj(this,t)}prefetch(t){return new I$(this,t)}shuffle(t,e){return new qj(this,t,e)}serial(){return new Oj(this)}}class Rj extends En{constructor(t){super();this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let t=this.items[this.trav];return this.trav++,{value:Dj(t),done:!1}}}class Pj extends En{constructor(t){super();this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class Oj extends En{constructor(t){super();this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class Lj extends En{constructor(t,e){super();this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let t=await this.upstream.next();if(t.done)return t;Xt(t.value)}return this.upstream.next()}}class Mj extends En{constructor(t,e){super();this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Bj extends En{constructor(t,e,r=!0){super();this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=r,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let t=[];for(;t.length<this.batchSize;){let e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class zj extends En{constructor(t,e){super();this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;Xt(t.value)}}}class Wj extends En{constructor(t,e){super();this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){let t=await this.upstream.next();if(t.done)return{value:null,done:!0};let e=cs(t.value),r=this.transform(t.value),o=cs(r);for(let s of e)Gf(s,o)||s.dispose();return{value:r,done:!1}}}class Vj extends En{constructor(t,e){super();this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class S$ extends En{constructor(t,e){super();this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let t=await this.upstream.next();if(t.done)return{value:null,done:!0};let e=cs(t.value),r=await this.transform(t.value),o=cs(r);for(let s of e)Gf(s,o)||s.dispose();return{value:r,done:!1}}}class t1 extends En{constructor(){super();this.outputQueue=new Sm,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Gj extends t1{constructor(t,e){super();this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let t=await this.upstream.next();if(t.done)return!1;let e=cs(t.value),r=this.transform(t.value),o=cs(r);this.outputQueue.pushAll(r);for(let s of e)Gf(s,o)||s.dispose();return!0}}class $$ extends En{constructor(t,e){super();this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){let t="TODO: fill in upstream of chained summaries";return`${t} -> Chained`}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,this.iterator==null){let r=await this.moreIterators.next();if(r.done)return{value:null,done:!0};this.iterator=r.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}var vi;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(vi||(vi={}));class Uj extends En{constructor(t,e=vi.FAIL){super();this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){let t="TODO: fill in upstream of zip summaries";return`{${t}} -> Zip`}async nextState(t){await t;let e=0,r=0;function o(c){if(c instanceof En){let l=c.next();return{value:l.then(p=>(e++,p.done&&r++,p.value)),recurse:!1}}else return{value:null,recurse:!0}}let s=await k$(this.iterators,o);if(e===r)return{value:null,done:!0};if(r>0)switch(this.mismatchMode){case vi.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case vi.SHORTEST:return{value:null,done:!0};case vi.LONGEST:default:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class I$ extends En{constructor(t,e){super();this.upstream=t,this.bufferSize=e,this.buffer=new N$(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class qj extends I${constructor(t,e,r){super(t,e);this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=Fc(r||or().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(e.done)this.upstreamExhausted=!0;else return this.refill(),e}return{value:null,done:!0}}}class Zc{constructor(){this.size=null}batch(t,e=!0){let r=this;_(t>0,()=>`batchSize needs to be positive, but it is
      ${t}`);let o;return this.size===Infinity||this.size==null?o=this.size:e?o=Math.ceil(this.size/t):o=Math.floor(this.size/t),_r(async()=>(await r.iterator()).columnMajorBatch(t,e,Kj),o)}concatenate(t){let e=this,r;return this.size===Infinity||t.size===Infinity?r=Infinity:this.size!=null&&t.size!=null?r=this.size+t.size:r=null,_r(async()=>(await e.iterator()).concatenate(await t.iterator()),r)}filter(t){let e=this,r;return this.size===Infinity?r=Infinity:r=null,_r(async()=>(await e.iterator()).filter(o=>rt(()=>t(o))),r)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){let e=this;return _r(async()=>(await e.iterator()).map(r=>rt(()=>t(r))),this.size)}mapAsync(t){let e=this;return _r(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(t==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let e=this;return _r(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){let e=this,r;return this.size!=null&&t>0?r=this.size*t:t===0?r=0:this.size!=null&&(t===void 0||t<0)?r=Infinity:r=null,_r(async()=>{let o=Yp(async()=>({value:await e.iterator(),done:!1}));return C$(o.take(t))},r)}skip(t){let e=this,r;return this.size!=null&&t>=0&&this.size>=t?r=this.size-t:this.size!=null&&(this.size<t||t===void 0||t<0)?r=0:r=null,_r(async()=>(await e.iterator()).skip(t),r)}shuffle(t,e,r=!0){if(t==null||t<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let o=this,s=Fc(e||or().toString());return _r(async()=>{let c=s.int32();return r&&(c+=s.int32()),(await o.iterator()).shuffle(t,c.toString())},this.size)}take(t){let e=this,r;return this.size!=null&&this.size>t?r=t:this.size!=null&&this.size<=t?r=this.size:r=null,_r(async()=>(await e.iterator()).take(t),r)}async toArray(){if(this.size===Infinity)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===Infinity)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}Zc.MAX_BUFFER_SIZE=1e4;function _r(n,t=null){return new class extends Zc{constructor(){super(...arguments);this.size=t}async iterator(){return n()}}}function Hj(n){return _r(async()=>_$(n),n.length)}function jj(n){if(!Jc(n))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(n))for(let e=0;e<n.length;e++)t=t==null?n[e].size:Math.min(t,n[e].size);else if(n instanceof Object)for(let e in n)t=t==null?n[e].size:Math.min(t,n[e].size);return _r(async()=>{let e=await k$(n,r=>{if(r instanceof Zc)return{value:r.iterator(),recurse:!1};if(Jc(r))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return Fj(e,vi.SHORTEST)},t)}function Kj(n){if(n===null)return null;let t=n[0];if(Ij(t)){let e=Xj(n);return{value:e,recurse:!1}}return{value:null,recurse:!0}}function Xj(n){if(n.length===0)throw new Error("Can't make a batch of zero elements.");return n[0]instanceof ot?ur(n):un(n)}class E$ extends Zc{constructor(t){super();this.input=t}async iterator(){let t=await this.input.iterator(),e=t.decodeUTF8(),r=e.split(`
`).map(o=>(o.endsWith("\r")&&(o=o.slice(0,-1)),o));return r}}let $m='"',Jp=Symbol("out"),D$=Symbol("field"),Im=Symbol("quote"),e1=Symbol("quoteafterquote"),A$=Symbol("quoteinquote");class F$ extends Zc{constructor(t,e){super();this.input=t,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new E$(t),e||(e={}),this.hasHeader=!(e.hasHeader===!1),this.fullColumnNames=e.columnNames,this.columnConfigs=e.columnConfigs,this.configuredColumnsOnly=e.configuredColumnsOnly,e.delimWhitespace?(_(e.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=e.delimiter?e.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let t=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!t)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&t&&_(t.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+t.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=t);let e=this.fullColumnNames.reduce((o,s)=>(o[s]=o[s]+1||1,o),{}),r=Object.keys(e).filter(o=>e[o]>1);if(_(r.length===0,()=>"Duplicate column names found: "+r.toString()),this.columnConfigs)for(let o of Object.keys(this.columnConfigs)){let s=this.fullColumnNames.indexOf(o);if(s===-1)throw new Error('The key "'+o+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await this.base.iterator(),e=await t.next();if(e.done)throw new Error("No data was found for CSV parsing.");let r=e.value,o=this.parseRow(r,!1);return o}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let t=await this.base.iterator();return this.hasHeader&&(t=t.skip(1)),t.map(e=>this.makeDataElement(e))}makeDataElement(t){let e=this.parseRow(t),r={},o={};for(let s=0;s<this.fullColumnNames.length;s++){let c=this.fullColumnNames[s],l=this.columnConfigs?this.columnConfigs[c]:null;if(this.configuredColumnsOnly&&!l)continue;{let p=e[s],f=null;if(p==="")if(l&&l.default!==void 0)f=l.default;else{if(l&&(l.required||l.isLabel))throw new Error(`Required column ${c} is empty in this line: ${t}`);f=void 0}else{let m=Number(p);if(isNaN(m))l&&l.dtype==="bool"?f=this.getBoolean(p):f=p;else if(!l||!l.dtype)f=m;else switch(l.dtype){case"float32":f=m;break;case"int32":f=Math.floor(m);break;case"bool":f=this.getBoolean(p);break;default:f=m}}l&&l.isLabel?o[c]=f:r[c]=f}}return Object.keys(o).length===0?r:{xs:r,ys:o}}getBoolean(t){return t==="1"||t.toLowerCase()==="true"?1:0}parseRow(t,e=!0){let r=[],o=0,s=t.length,c=Jp;for(let l=0;l<s;l++)switch(c){case Jp:switch(t.charAt(l)){case $m:o=l+1,c=Im;break;case this.delimiter:if(o=l+1,this.delimiter===" "&&this.delimWhitespace)break;r.push(""),c=Jp;break;default:c=D$,o=l;break}break;case D$:switch(t.charAt(l)){case this.delimiter:r.push(t.substring(o,l)),c=Jp,o=l+1;break;default:}break;case Im:switch(t.charAt(l)){case $m:c=e1;break;default:}break;case e1:switch(t.charAt(l)){case this.delimiter:r.push(t.substring(o,l-1)),c=Jp,o=l+1;break;case $m:c=Im;break;default:c=A$;break}break;case A$:switch(t.charAt(l)){case $m:c=Im;break;default:}break;default:}if(c===e1?r.push(t.substring(o,s-1)):r.push(t.substring(o)),e&&r.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${r}`);return r}}class n1 extends En{constructor(t){super();this.microphoneConfig=t,this.isClosed=!1,this.fftSize=t.fftSize||1024;let e=Math.log2(this.fftSize);if(this.fftSize<0||e<4||e>14||!Number.isInteger(e))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=t.numFramesPerSpectrogram||43,this.sampleRateHz=t.sampleRateHz,this.columnTruncateLength=t.columnTruncateLength||this.fftSize,this.audioTrackConstraints=t.audioTrackConstraints,this.smoothingTimeConstant=t.smoothingTimeConstant||0,this.includeSpectrogram=!(t.includeSpectrogram===!1),this.includeWaveform=t.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(t={}){if(ct().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let e=new n1(t);return await e.start(),e}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(r){throw new Error(`Error thrown while initializing video stream: ${r.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let t=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new t,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let e=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,e.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize);return}async next(){if(this.isClosed)return{value:null,done:!0};let t,e,r=await this.getAudioData();if(this.includeSpectrogram){let o=this.flattenQueue(r.freqDataQueue);t=this.getTensorFromAudioDataArray(o,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let o=this.flattenQueue(r.timeDataQueue);e=this.getTensorFromAudioDataArray(o,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:t,waveform:e},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let t=[],e=[],r=0;return new Promise(o=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-Infinity&&o({freqDataQueue:t,timeDataQueue:e}),t.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),e.push(this.timeData.slice())),++r===this.numFrames&&(clearInterval(s),o({freqDataQueue:t,timeDataQueue:e}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(t){let e=t[0].length,r=new Float32Array(t.length*e);return t.forEach((o,s)=>r.set(o,s*e)),r}getTensorFromAudioDataArray(t,e){let r=new Float32Array(G(e));return r.set(t,r.length-t.length),un(r,e)}}class r1 extends En{constructor(t,e){super();if(this.webcamVideoElement=t,this.webcamConfig=e,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=vr([0],"int32"),this.webcamConfig.centerCrop){let r=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,o=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-r)/2,c=(1-o)/2,l=s+r,p=o+c;this.cropBox=ui([c,s,p,l],[1,4])}else this.cropBox=ui([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(t,e={}){if(ct().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!e.resizeWidth||!e.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=e.resizeWidth,t.height=e.resizeHeight}let r=new r1(t,e);return await r.start(),r}async start(){this.webcamConfig.facingMode&&_(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(t){throw t.message=`Error thrown while initializing video stream: ${t.message}`,t}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){console.log(t),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(t=>{this.webcamVideoElement.onloadedmetadata=()=>{t()}})}async next(){if(this.isClosed)return{value:null,done:!0};let t;try{t=e_(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(t),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{t.dispose()}else return{value:t,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(t){return rt(()=>{let e=t.toFloat().expandDims(0),r;r=pi.cropAndResize(e,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let o=r.shape;return r.reshape(o.slice(1))})}async capture(){return(await this.next()).value}stop(){let t=this.stream.getTracks();t.forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class R${}class P$ extends En{split(t){return new Yj(this,t)}}class Yj extends P${constructor(t,e){super();this.upstream=t,this.impl=new Jj(t,e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class Jj extends t1{constructor(t,e){super();this.upstream=t,this.separator=e,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let t=await this.upstream.next();if(t.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let e=t.value.split(this.separator);e[0]=this.carryover+e[0];for(let r of e.slice(0,-1))this.outputQueue.push(r);return this.carryover=e[e.length-1],!0}}class Zj extends En{decodeUTF8(){return new Qj(this)}}class Qj extends P${constructor(t){super();this.upstream=t,this.impl=new t6(t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class t6 extends t1{constructor(t){super();if(this.upstream=t,ct().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:e}=require("string_decoder");this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let t=await this.upstream.next(),e;if(t.done)return!1;e=t.value;let r;return ct().get("IS_BROWSER")?r=this.decoder.decode(e,{stream:!0}):r=this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(r),!0}}class O$ extends Zj{constructor(t,e={}){super();this.file=t,this.options=e,_(t instanceof Uint8Array||(ct().get("IS_BROWSER")?t instanceof File||t instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=e.offset||0,this.chunkSize=e.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};let t=new Promise((e,r)=>{let o=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,o)));else{let s=new FileReader;s.onload=l=>{let p=s.result;if(p instanceof ArrayBuffer&&(p=new Uint8Array(p)),!(p instanceof Uint8Array))return r(new TypeError("FileReader returned unknown type."));e(p)},s.onabort=l=>r(new Error("Aborted")),s.onerror=l=>r(new Error(l.type));let c=this.file.slice(this.offset,o);s.readAsArrayBuffer(c)}this.offset=o});return{value:await t,done:!1}}}async function e6(n,t={}){let e,r;typeof n=="string"?e=n:(e=n.url,r=n6(n));let o=await SN(e,r);if(o.ok){let s=new Uint8Array(await o.arrayBuffer());return new O$(s,t)}else throw new Error(o.statusText)}let n6=n=>{let t={method:n.method,headers:n.headers,body:n.body,mode:n.mode,credentials:n.credentials,cache:n.cache,redirect:n.redirect,referrer:n.referrer,integrity:n.integrity};return t};function L$(n){return typeof n=="string"&&n.substr(0,7)==="file://"}class M$ extends R${constructor(t,e={}){super();this.input=t,this.options=e}async iterator(){if(L$(this.input)&&ct().get("IS_NODE")){let t=require("fs");this.input=t.readFileSync(this.input.substr(7))}return new O$(this.input,this.options)}}class B$ extends R${constructor(t,e={}){super();this.url=t,this.fileOptions=e}async iterator(){return L$(this.url)?new M$(this.url,this.fileOptions).iterator():e6(this.url,this.fileOptions)}}function r6(n,t={}){return new F$(new B$(n),t)}function o6(n){let t=Yp(n);return _r(async()=>t)}function s6(n){return _r(async()=>{let t=await n();return Yp(()=>t.next())})}async function i6(n,t){return r1.create(n,t)}async function a6(n){return n1.create(n)}let z$="2.7.0";var c6=Object.freeze({__proto__:null,array:Hj,Dataset:Zc,zip:jj,CSVDataset:F$,TextLineDataset:E$,csv:r6,func:o6,generator:s6,microphone:a6,webcam:i6,FileDataSource:M$,URLDataSource:B$,version_data:z$});function Ct(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&_(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}let l6=Od,u6=sv,p6=iv,h6=av,f6=Id;class d6 extends d{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new h(this,ps())}write(t,e,r){this.firstUse&&(this.firstUse=!1,ct().get("IS_NODE")&&Bc(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let o={};return this.data.set(o,{values:t,dtype:r,refCount:1}),o}makeTensorInfo(t,e,r){let o;if(e==="string"&&r!=null&&r.length>0&&as(r[0])){let s=r.map(c=>zf(c));o=this.write(s,t,e)}else o=this.write(r,t,e);return{dataId:o,shape:t,dtype:e}}incRef(t){let e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){let e=this.data.get(t);e.refCount--}}move(t,e,r,o){this.data.set(t,{values:e,dtype:o,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){let{dtype:e,complexTensorInfos:r}=this.data.get(t);if(e==="complex64"){let o=this.readSync(r.real.dataId),s=this.readSync(r.imag.dataId);return ys(o,s)}return this.data.get(t).values}bufferSync(t){let e=this.readSync(t.dataId),r=e;if(t.dtype==="string")try{r=e.map(o=>Uu(o))}catch(o){throw new Error("Failed to decode encoded string bytes into utf-8")}return Se(t.shape,t.dtype,r)}makeOutput(t,e,r){let o=this.write(t,e,r);return ps().makeTensorFromDataId(o,e,r,this)}disposeData(t){if(this.data.has(t)){let{complexTensorInfos:e}=this.data.get(t);e!=null&&(this.disposeData(e.real.dataId),this.disposeData(e.imag.dataId)),this.data.delete(t)}}disposeIntermediateTensorInfo(t){let e=t.dataId;if(this.data.has(e)){let r=this.data.get(e);r.refCount--,r.refCount<1&&this.disposeData(e)}}async time(t){let e=or();t();let r=or()-e;return{kernelMs:r}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}stridedSlice(t,e,r,o){Ct(t,"stridedSlice");let s=Zf(e,r,o);if(s.some(p=>p===0))return un([],s);let c=Se(s,t.dtype),l=this.bufferSync(t);for(let p=0;p<c.size;p++){let f=c.indexToLoc(p),m=new Array(f.length);for(let y=0;y<m.length;y++)m[y]=f[y]*o[y]+e[y];c.set(l.get(...m),...f)}return c.toTensor()}diag(t){let e=this.readSync(t.dataId),r=Se([t.size,t.size],t.dtype),o=r.values;for(let s=0;s<e.length;s++)o[s*t.size+s]=e[s];return r.toTensor()}unstack(t,e){let r=t.shape[e],o=new Array(t.rank-1),s=0;for(let f=0;f<t.rank;f++)f!==e&&(o[s++]=t.shape[f]);let c=new Array(t.rank).fill(0),l=t.shape.slice();l[e]=1;let p=new Array(r);for(let f=0;f<p.length;f++)c[e]=f,p[f]=ce(t,c,l).reshape(o);return p}reverse(t,e){Ct(t,"reverse");let r=Se(t.shape,t.dtype),o=this.bufferSync(t);for(let s=0;s<r.size;s++){let c=r.indexToLoc(s),l=c.slice();e.forEach(p=>l[p]=t.shape[p]-1-l[p]),r.set(o.get(...l),...c)}return r.toTensor()}neg(t){return Ct(t,"neg"),nt(Et(-1),t)}addN(t){Ct(t,"addN");let e=t.map(s=>this.readSync(s.dataId)),r=Se(t[0].shape,t[0].dtype),o=r.values;for(let s=0;s<t.length;s++){let c=e[s];for(let l=0;l<o.length;l++)o[l]+=c[l]}return r.toTensor()}softmax(t,e){let r=Vt([e],t.shape),o=lr(t,r),s=Rn(o.shape,r),c=Dt(t,o.reshape(s)),l=Ar(c),p=this.sum(l,r).reshape(s);return Bt(l,p)}pow(t,e){return Ct([t,e],"pow"),this.broadcastedBinaryOp(t,e,t.dtype,(r,o)=>Math.pow(r,o))}floorDiv(t,e){Ct([t,e],"floorDiv");let r=(s,c)=>Math.floor(s/c),o="int32";return this.broadcastedBinaryOp(t,e,o,r)}sum(t,e){Ct(t,"sum"),sr("sum",e,t.rank);let[r,o]=Fn(t.shape,e),s=jn(t.dtype,"int32"),c=xe(r,s),l=G(o),p=this.readSync(c.dataId),f=this.readSync(t.dataId);for(let m=0;m<p.length;++m){let y=m*l,b=0;for(let v=0;v<l;++v)b+=f[y+v];p[m]=b}return c}prod(t,e){Ct(t,"sum");let[r,o]=Fn(t.shape,e),s=jn(t.dtype,"int32"),c=xe(r,s),l=G(o),p=this.readSync(c.dataId),f=this.readSync(t.dataId);for(let m=0;m<p.length;++m){let y=m*l,b=1;for(let v=0;v<l;++v)b*=f[y+v];p[m]=b}return c}unsortedSegmentSum(t,e,r){Ct(t,"unsortedSegmentSum");let o=[],s=t.rank-e.rank;for(let c=0;c<s;++c)e=e.expandDims(c+1);for(let c=0;c<r;++c){let l=Et(c,"int32"),p=po(l,e).asType("float32"),f=p.mul(t).sum(0);o.push(f)}return ur(o)}argMin(t,e){Ct(t,"argMin");let r=[e];sr("argMin",r,t.rank);let[o,s]=Fn(t.shape,r),c=xe(o,"int32"),l=G(s),p=this.readSync(c.dataId),f=this.readSync(t.dataId);for(let m=0;m<p.length;++m){let y=m*l,b=f[y],v=0;for(let T=0;T<l;++T){let N=f[y+T];N<b&&(b=N,v=T)}p[m]=v}return c}argMax(t,e){Ct(t,"argMax");let r=[e];sr("argMax",r,t.rank);let[o,s]=Fn(t.shape,r),c=xe(o,"int32"),l=G(s),p=this.readSync(c.dataId),f=this.readSync(t.dataId);for(let m=0;m<p.length;++m){let y=m*l,b=f[y],v=0;for(let T=0;T<l;++T){let N=f[y+T];N>b&&(b=N,v=T)}p[m]=v}return c}cumsum(t,e,r,o){if(Ct(t,"cumsum"),e!==t.rank-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${t.rank-1} but got axis=${e}`);let s=jn(t.dtype,"int32"),c=xe(t.shape,s),l=this.readSync(c.dataId),p=this.readSync(t.dataId),f=t.shape[t.rank-1],m=o?(y,b)=>y+f-b-1:(y,b)=>y+b;for(let y=0;y<p.length;y+=f)for(let b=0;b<f;b++){let v=m(y,b);if(b===0)l[v]=r?0:p[v];else{let T=m(y,b-1);l[v]=r?p[T]+l[T]:p[v]+l[T]}}return c}equal(t,e){return Ct([t,e],"equal"),this.broadcastedBinaryOp(t,e,"bool",(r,o)=>r===o?1:0)}notEqual(t,e){return Ct([t,e],"notEqual"),this.broadcastedBinaryOp(t,e,"bool",(r,o)=>r!==o?1:0)}less(t,e){return Ct([t,e],"less"),this.broadcastedBinaryOp(t,e,"bool",(r,o)=>r<o?1:0)}lessEqual(t,e){return Ct([t,e],"lessEqual"),this.broadcastedBinaryOp(t,e,"bool",(r,o)=>r<=o?1:0)}greater(t,e){return Ct([t,e],"greater"),this.broadcastedBinaryOp(t,e,"bool",(r,o)=>r>o?1:0)}greaterEqual(t,e){return Ct([t,e],"greaterEqual"),this.broadcastedBinaryOp(t,e,"bool",(r,o)=>r>=o?1:0)}logicalAnd(t,e){return Ct([t,e],"logicalAnd"),this.broadcastedBinaryOp(t,e,"bool",(r,o)=>r&&o)}logicalOr(t,e){return Ct([t,e],"logicalOr"),this.broadcastedBinaryOp(t,e,"bool",(r,o)=>r||o)}select(t,e,r){Ct([t,e,r],"select");let o=this.readSync(t.dataId),s=this.readSync(e.dataId),c=this.readSync(r.dataId),l=xe(e.shape,jn(e.dtype,r.dtype)),p=this.readSync(l.dataId),f=0,m=t.rank===0||t.rank>1||e.rank===1?1:G(e.shape.slice(1));for(let y=0;y<o.length;y++)for(let b=0;b<m;b++)o[y]===1?p[f++]=s[y]:p[f++]=c[y];return l}where(t){Ct([t],"where");let e=this.readSync(t.dataId);return f6(t.shape,e)}topk(t,e,r){Ct(t,"topk");let o=this.readSync(t.dataId);return h6(o,t.shape,t.dtype,e,r)}min(t,e){Ct(t,"min"),sr("min",e,t.rank);let[r,o]=Fn(t.shape,e),s=xe(r,t.dtype),c=G(o),l=this.readSync(s.dataId),p=this.readSync(t.dataId);for(let f=0;f<l.length;++f){let m=f*c,y=p[m];for(let b=0;b<c;++b){let v=p[m+b];v<y&&(y=v)}l[f]=y}return s}minimum(t,e){return Ct([t,e],"minimum"),this.broadcastedBinaryOp(t,e,t.dtype,(r,o)=>Math.min(r,o))}mod(t,e){return Ct([t,e],"mod"),this.broadcastedBinaryOp(t,e,t.dtype,(r,o)=>{let s=r%o;return r<0&&o<0||r>=0&&o>=0?s:(s+o)%o})}maximum(t,e){return Ct([t,e],"maximum"),this.broadcastedBinaryOp(t,e,t.dtype,(r,o)=>Math.max(r,o))}all(t,e){Ct(t,"all"),sr("all",e,t.rank);let[r,o]=Fn(t.shape,e),s=xe(r,t.dtype),c=G(o),l=this.readSync(s.dataId),p=this.readSync(t.dataId);for(let f=0;f<l.length;++f){let m=f*c,y=p[m];for(let b=0;b<c;++b){let v=p[m+b];y=y&&v}l[f]=y}return s}any(t,e){Ct(t,"any"),sr("any",e,t.rank);let[r,o]=Fn(t.shape,e),s=xe(r,t.dtype),c=G(o),l=this.readSync(s.dataId),p=this.readSync(t.dataId);for(let f=0;f<l.length;++f){let m=f*c,y=p[m];for(let b=0;b<c;++b){let v=p[m+b];y=y||v}l[f]=y}return s}squaredDifference(t,e){return Ct([t,e],"squaredDifference"),this.broadcastedBinaryOp(t,e,t.dtype,(r,o)=>{let s=r-o;return s*s})}eluDer(t,e){Ct([t,e],"eluDer");let r=new Float32Array(e.size),o=this.readSync(e.dataId),s=this.readSync(t.dataId);for(let c=0;c<o.length;++c){let l=o[c];l>=1?r[c]=s[c]:r[c]=s[c]*(l+1)}return this.makeOutput(r,e.shape,"float32")}atan2(t,e){return Ct([t,e],"atan2"),this.broadcastedBinaryOp(t,e,t.dtype,(r,o)=>Math.atan2(r,o))}tile(t,e){return Ct(t,"tile"),p6(this.bufferSync(t),e)}gather(t,e,r){Ct([t,e],"gather");let o=t.shape.slice(),s=this.readSync(e.dataId);o[r]=s.length;let c=Se(o,t.dtype),l=this.bufferSync(t);for(let p=0;p<c.size;++p){let f=c.indexToLoc(p),m=f.slice();m[r]=s[f[r]];let y=l.locToIndex(m);c.values[p]=l.values[y]}return c.toTensor()}batchToSpaceND(t,e,r){Ct([t],"batchToSpaceND");let o=e.reduce((m,y)=>m*y),s=Np(t.shape,e,o),c=_p(s.length,e.length),l=Cp(t.shape,e,o),p=Kw(r,e.length),f=Xw(l,r,e.length);return Kt(t.reshape(s),c).reshape(l).slice(p,f)}pool3d(t,e,r){Ct(t,"pool3d");let o=e.strideDepth,s=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,p=e.dilationHeight,f=e.dilationWidth,m=e.effectiveFilterDepth,y=e.effectiveFilterHeight,b=e.effectiveFilterWidth,v=e.padInfo.front,T=e.padInfo.top,N=e.padInfo.left,S=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,D=this.readSync(t.dataId),I=Se(e.outShape,t.dtype),P=I.values,E=e.outShape[1]*e.outShape[2]*e.outShape[3]*e.outShape[4],L=e.outShape[2]*e.outShape[3]*e.outShape[4],B=e.outShape[3]*e.outShape[4],q=e.outShape[4];for(let H=0;H<e.batchSize;++H){let Z=H*E,J=H*t.strides[0];for(let it=0;it<e.inChannels;++it)for(let pt=0;pt<e.outDepth;++pt){let ht=pt*o-v,dt=ht;for(;dt<0;)dt+=l;let ft=Math.min(e.inDepth,m+ht),ut=Z+pt*L;for(let bt=0;bt<e.outHeight;++bt){let yt=bt*s-T,xt=yt;for(;xt<0;)xt+=p;let kt=Math.min(e.inHeight,y+yt),Nt=ut+bt*B;for(let At=0;At<e.outWidth;++At){let It=At*c-N,St=It;for(;St<0;)St+=f;let Lt=Math.min(e.inWidth,b+It),Ht=Nt+At*q,oe=S,de=0,ie=0;for(let pe=dt;pe<ft;pe+=l){let Xe=J+pe*t.strides[1];for(let on=xt;on<kt;on+=p){let sn=Xe+on*t.strides[2];for(let Ae=St;Ae<Lt;Ae+=f){let Ye=sn+Ae*t.strides[3],Le=D[Ye+it];if(r==="max"&&Le>oe?oe=Le:r==="avg"&&(de+=Le,ie++),isNaN(oe))break}if(isNaN(oe))break}if(isNaN(oe))break}let we=Ht+it;P[we]=r==="avg"?de/ie:oe}}}}return I.toTensor()}avgPool3d(t,e){return Ct(t,"avgPool3d"),this.pool3d(t,e,"avg").toFloat()}avgPool3dBackprop(t,e,r){Ct([t,e],"avgPool3dBackprop");let o=r.strideDepth,s=r.strideHeight,c=r.strideWidth,l=r.filterDepth,p=r.filterHeight,f=r.filterWidth,m=r.dilationDepth,y=r.dilationHeight,b=r.dilationWidth,v=r.effectiveFilterDepth,T=r.effectiveFilterHeight,N=r.effectiveFilterWidth,S=v-1-r.padInfo.front,D=N-1-r.padInfo.left,I=T-1-r.padInfo.top,P=Se(e.shape,"float32"),E=1/(l*p*f),L=this.bufferSync(t);for(let B=0;B<r.batchSize;++B)for(let q=0;q<r.inChannels;++q)for(let H=0;H<r.inDepth;++H)for(let Z=0;Z<r.inHeight;++Z)for(let J=0;J<r.inWidth;++J){let it=H-S,pt=Z-I,ht=J-D,dt=0;for(let ft=0;ft<v;ft+=m){let ut=(it+ft)/o;if(ut<0||ut>=r.outDepth||Math.floor(ut)!==ut)continue;for(let bt=0;bt<T;bt+=y){let yt=(pt+bt)/s;if(yt<0||yt>=r.outHeight||Math.floor(yt)!==yt)continue;for(let xt=0;xt<N;xt+=b){let kt=(ht+xt)/c;if(kt<0||kt>=r.outWidth||Math.floor(kt)!==kt)continue;let Nt=L.get(B,ut,yt,kt,q);dt+=Nt}}}P.set(dt*E,B,H,Z,J,q)}return P.toTensor()}maxPool3d(t,e){return Ct(t,"maxPool3d"),this.pool3d(t,e,"max").toFloat()}maxPool3dPositions(t,e){let r=Se(e.outShape,"int32"),o=e.strideDepth,s=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,p=e.dilationHeight,f=e.dilationWidth,m=e.effectiveFilterDepth,y=e.effectiveFilterHeight,b=e.effectiveFilterWidth,v=e.padInfo.front,T=e.padInfo.top,N=e.padInfo.left,S=this.bufferSync(t);for(let D=0;D<e.batchSize;++D)for(let I=0;I<e.inChannels;++I)for(let P=0;P<e.outDepth;++P){let E=P*o-v,L=E;for(;L<0;)L+=l;let B=Math.min(e.inDepth,m+E);for(let q=0;q<e.outHeight;++q){let H=q*s-T,Z=H;for(;Z<0;)Z+=p;let J=Math.min(e.inHeight,y+H);for(let it=0;it<e.outWidth;++it){let pt=it*c-N,ht=pt;for(;ht<0;)ht+=f;let dt=Math.min(e.inWidth,b+pt),ft=Number.NEGATIVE_INFINITY,ut=-1;for(let bt=L;bt<B;bt+=l){let yt=bt-E;for(let xt=Z;xt<J;xt+=p){let kt=xt-H;for(let Nt=ht;Nt<dt;Nt+=f){let At=Nt-pt,It=S.get(D,bt,xt,Nt,I);It>=ft&&(ft=It,ut=yt*y*b+kt*y+At)}}}r.set(ut,D,P,q,it,I)}}}return r.toTensor()}maxPool3dBackprop(t,e,r,o){Ct([e,r],"maxPool3dBackprop");let s=this.maxPool3dPositions(e,o),c=o.strideDepth,l=o.strideHeight,p=o.strideWidth,f=o.dilationDepth,m=o.dilationHeight,y=o.dilationWidth,b=o.effectiveFilterDepth,v=o.effectiveFilterHeight,T=o.effectiveFilterWidth,N=b-1-o.padInfo.front,S=T-1-o.padInfo.left,D=v-1-o.padInfo.top,I=Se(e.shape,"float32"),P=this.bufferSync(s),E=this.bufferSync(t);for(let L=0;L<o.batchSize;++L)for(let B=0;B<o.inChannels;++B)for(let q=0;q<o.inDepth;++q)for(let H=0;H<o.inHeight;++H)for(let Z=0;Z<o.inWidth;++Z){let J=q-N,it=H-D,pt=Z-S,ht=0;for(let dt=0;dt<b;dt+=f){let ft=(J+dt)/c;if(ft<0||ft>=o.outDepth||Math.floor(ft)!==ft)continue;for(let ut=0;ut<v;ut+=m){let bt=(it+ut)/l;if(bt<0||bt>=o.outHeight||Math.floor(bt)!==bt)continue;for(let yt=0;yt<T;yt+=y){let xt=(pt+yt)/p;if(xt<0||xt>=o.outWidth||Math.floor(xt)!==xt)continue;let kt=b*v*T-1-P.get(L,ft,bt,xt,B),Nt=dt*v*T+ut*T+yt,At=kt===Nt?1:0;if(At===0)continue;let It=E.get(L,ft,bt,xt,B);ht+=It*At}}}I.set(ht,L,q,H,Z,B)}return I.toTensor()}resizeBilinear(t,e,r,o){Ct(t,"resizeBilinear");let[s,c,l,p]=t.shape,f=this.readSync(t.dataId),m=new Float32Array(G([s,e,r,p])),y=[o&&e>1?c-1:c,o&&r>1?l-1:l],b=[o&&e>1?e-1:e,o&&r>1?r-1:r],v=0,T=y[0]/b[0],N=y[1]/b[1];for(let S=0;S<s;S++)for(let D=0;D<e;D++){let I=T*D,P=Math.floor(I),E=I-P,L=Math.min(c-1,Math.ceil(I)),B=S*t.strides[0]+P*t.strides[1],q=S*t.strides[0]+L*t.strides[1];for(let H=0;H<r;H++){let Z=N*H,J=Math.floor(Z),it=Z-J,pt=Math.min(l-1,Math.ceil(Z)),ht=B+J*t.strides[2],dt=q+J*t.strides[2],ft=B+pt*t.strides[2],ut=q+pt*t.strides[2];for(let bt=0;bt<p;bt++){let yt=f[ht+bt],xt=f[dt+bt],kt=f[ft+bt],Nt=f[ut+bt],At=yt+(kt-yt)*it,It=xt+(Nt-xt)*it,St=At+(It-At)*E;m[v++]=St}}}return un(m,[s,e,r,p])}resizeBilinearBackprop(t,e,r){Ct([t,e],"resizeBilinearBackprop");let[o,s,c,l]=e.shape,[,p,f]=t.shape,m=new Float32Array(o*s*c*l),y=[r&&p>1?s-1:s,r&&f>1?c-1:c],b=[r&&p>1?p-1:p,r&&f>1?f-1:f],v=y[0]/b[0],T=y[1]/b[1],N=this.readSync(t.dataId),S=0;for(let D=0;D<o;D++){let I=D*e.strides[0];for(let P=0;P<p;P++){let E=P*v,L=Math.floor(E),B=Math.min(Math.ceil(E),s-1),q=I+L*e.strides[1],H=I+B*e.strides[1],Z=E-L,J=1-Z;for(let it=0;it<f;it++){let pt=it*T,ht=Math.floor(pt),dt=Math.min(Math.ceil(pt),c-1),ft=pt-ht,ut=1-ft,bt=q+ht*e.strides[2],yt=q+dt*e.strides[2],xt=H+ht*e.strides[2],kt=H+dt*e.strides[2],Nt=J*ut,At=J*ft,It=Z*ut,St=Z*ft;for(let Lt=0;Lt<l;Lt++){let Ht=N[S++];m[bt+Lt]+=Ht*Nt,m[yt+Lt]+=Ht*At,m[xt+Lt]+=Ht*It,m[kt+Lt]+=Ht*St}}}}return Oc(m,[o,c,s,l],e.dtype)}resizeNearestNeighbor(t,e,r,o){Ct(t,"resizeNearestNeighbor");let[s,c,l,p]=t.shape,f=this.readSync(t.dataId),m=new Float32Array(s*e*r*p),y=[o&&e>1?c-1:c,o&&r>1?l-1:l],b=[o&&e>1?e-1:e,o&&r>1?r-1:r],v=y[0]/b[0],T=y[1]/b[1],N=0;for(let S=0;S<s;S++){let D=S*t.strides[0];for(let I=0;I<e;I++){let P=v*I,E=Math.min(c-1,o?Math.round(P):Math.floor(P)),L=D+E*t.strides[1];for(let B=0;B<r;B++){let q=T*B,H=Math.min(l-1,o?Math.round(q):Math.floor(q)),Z=L+H*t.strides[2];for(let J=0;J<p;J++){let it=f[Z+J];m[N++]=it}}}}return un(m,[s,e,r,p],t.dtype)}resizeNearestNeighborBackprop(t,e,r){Ct([t,e],"resizeNearestNeighborBackprop");let[o,s,c,l]=e.shape,[,p,f]=t.shape,m=new Float32Array(o*s*c*l),y=this.readSync(t.dataId),b=[r&&p>1?s-1:s,r&&f>1?c-1:c],v=[r&&p>1?p-1:p,r&&f>1?f-1:f],T=b[0]/v[0],N=b[1]/v[1],S=1/T,D=1/N,I=Math.ceil(S)*2+2,P=Math.ceil(D)*2+2;for(let E=0;E<o;E++){let L=E*e.strides[0];for(let B=0;B<s;B++){let q=L+B*e.strides[1],H=Math.floor(B*S),Z=Math.floor(H-I/2);for(let J=0;J<c;J++){let it=q+J*e.strides[2],pt=Math.floor(J*D),ht=Math.floor(pt-P/2);for(let dt=0;dt<l;dt++){let ft=0;for(let ut=0;ut<I;ut++){let bt=ut+Z;if(bt<0||bt>=p)continue;let yt=L+bt*t.strides[1],xt=bt*T,kt=Math.min(s-1,r?Math.round(xt):Math.floor(xt));if(B!==kt)continue;for(let Nt=0;Nt<P;Nt++){let At=Nt+ht;if(At<0||At>=f)continue;let It=yt+At*t.strides[2],St=At*N,Lt=Math.min(c-1,r?Math.round(St):Math.floor(St));J===Lt&&(ft+=y[It+dt])}}m[it+dt]=ft}}}}return Oc(m,e.shape,e.dtype)}localResponseNormalization4D(t,e,r,o,s){Ct(t,"localResponseNormalization4D");let c=t.shape[3],l=c-1,p=this.readSync(t.dataId),f=t.size,m=new Float32Array(f);function y(b){let v=b%c,T=b-v+Math.max(0,v-e),N=b-v+Math.min(v+e,l),S=0;for(;T<=N;T++){let D=p[T];S+=D*D}return S}for(let b=0;b<f;b++){let v=y(b),T=p[b]*Math.pow(r+o*v,-s);m[b]=T}return Oc(m,t.shape)}LRNGrad(t,e,r,o,s,c,l){Ct(t,"LRNGrad");let p=t.shape[3],f=this.readSync(t.dataId),m=this.readSync(e.dataId),y=this.readSync(r.dataId),b=new Float32Array(t.size),v=t.size;for(let T=0;T<v;T++){let N=T%p,S=T-N+Math.max(0,N-o),D=T-N+Math.min(p,N+o+1),I=0;for(let P=S;P<D;P++)I+=Math.pow(m[P],2);I=c*I+s;for(let P=S;P<D;P++){let E=-2*c*l*m[P]*y[T]/I;T===P&&(E+=Math.pow(I,-l)),E*=f[T],b[P]+=E}}return Oc(b,t.shape)}multinomial(t,e,r,o){Ct(t,"multinomial");let s=e?t:ca(t),c=s.shape[0],l=s.shape[1],p=xe([c,r],"int32"),f=this.readSync(p.dataId),m=this.readSync(s.dataId);for(let y=0;y<c;++y){let b=y*l,v=new Float32Array(l-1);v[0]=m[b];for(let S=1;S<v.length;++S)v[S]=v[S-1]+m[b+S];let T=Fc(o.toString()),N=y*r;for(let S=0;S<r;++S){let D=T();f[N+S]=v.length;for(let I=0;I<v.length;I++)if(D<v[I]){f[N+S]=I;break}}}return p}oneHot(t,e,r,o){Ct(t,"oneHot");let s=new Float32Array(t.size*e);s.fill(o);let c=this.readSync(t.dataId);for(let l=0;l<t.size;++l)c[l]>=0&&c[l]<e&&(s[l*e+c[l]]=r);return ui(s,[t.size,e],"int32")}nonMaxSuppression(t,e,r,o,s){Ct(t,"nonMaxSuppression");let c=this.readSync(t.dataId),l=this.readSync(e.dataId);return l6(c,l,r,o,s)}depthToSpace(t,e,r){_(r==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${r}`),_(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`);let o=t.shape[0],s=t.shape[1],c=t.shape[2],l=t.shape[3],p=s*e,f=c*e,m=l/(e*e),y=this.readSync(t.dataId),b=new Float32Array(o*p*f*m),v=0;for(let T=0;T<o;++T)for(let N=0;N<p;++N){let S=Math.floor(N/e),D=N%e;for(let I=0;I<f;++I){let P=Math.floor(I/e),E=I%e,L=(D*e+E)*m;for(let B=0;B<m;++B){let q=B+L,H=q+l*(P+c*(S+s*T));b[v++]=y[H]}}}return Oc(b,[o,p,f,m])}broadcastedBinaryOp(t,e,r,o){let s=le(t.shape,e.shape),c=Se(s,r),l=this.readSync(t.dataId),p=this.readSync(e.dataId),f=ra(t.shape,s),m=ra(e.shape,s),y=c.values;if(f.length+m.length===0)for(let b=0;b<y.length;++b)y[b]=o(l[b%l.length],p[b%p.length]);else{let b=this.bufferSync(t),v=this.bufferSync(e);for(let T=0;T<y.length;++T){let N=c.indexToLoc(T),S=N.slice(-t.rank);f.forEach(E=>S[E]=0);let D=b.locToIndex(S),I=N.slice(-e.rank);m.forEach(E=>I[E]=0);let P=v.locToIndex(I);y[T]=o(l[D],p[P])}}return c.toTensor()}split(t,e,r){return u6(t,e,r)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}cropAndResize(t,e,r,o,s,c){let[l,p,f,m]=t.shape,y=e.shape[0],[b,v]=o,T=Se([y,b,v,m],"float32"),N=this.readSync(e.dataId),S=this.readSync(r.dataId),D=this.readSync(t.dataId),I=t.strides,P=T.strides;for(let E=0;E<y;E++){let L=E*4,B=N[L],q=N[L+1],H=N[L+2],Z=N[L+3],J=S[E];if(J>=l)continue;let it=b>1?(H-B)*(p-1)/(b-1):0,pt=v>1?(Z-q)*(f-1)/(v-1):0;for(let ht=0;ht<b;ht++){let dt=b>1?B*(p-1)+ht*it:.5*(B+H)*(p-1);if(dt<0||dt>p-1){for(let ft=0;ft<v;ft++)for(let ut=0;ut<m;ut++){let bt=ut+ft*P[2]+ht*P[1]+E*P[0];T.values[bt]=c}continue}if(s==="bilinear"){let ft=Math.floor(dt),ut=Math.ceil(dt),bt=dt-ft;for(let yt=0;yt<v;yt++){let xt=v>1?q*(f-1)+yt*pt:.5*(q+Z)*(f-1);if(xt<0||xt>f-1){for(let It=0;It<m;It++){let St=It+yt*P[2]+ht*P[1]+E*P[0];T.values[St]=c}continue}let kt=Math.floor(xt),Nt=Math.ceil(xt),At=xt-kt;for(let It=0;It<m;It++){let St=It+kt*I[2]+ft*I[1]+J*I[0],Lt=D[St];St=It+Nt*I[2]+ft*I[1]+J*I[0];let Ht=D[St];St=It+kt*I[2]+ut*I[1]+J*I[0];let oe=D[St];St=It+Nt*I[2]+ut*I[1]+J*I[0];let de=D[St],ie=Lt+(Ht-Lt)*At,we=oe+(de-oe)*At;St=It+yt*P[2]+ht*P[1]+E*P[0],T.values[St]=ie+(we-ie)*bt}}}else for(let ft=0;ft<v;++ft){let ut=v>1?q*(f-1)+ft*pt:.5*(q+Z)*(f-1);if(ut<0||ut>f-1){for(let xt=0;xt<m;xt++){let kt=xt+ft*P[2]+ht*P[1]+E*P[0];T.values[kt]=c}continue}let bt=Math.round(ut),yt=Math.round(dt);for(let xt=0;xt<m;xt++){let kt=xt+bt*I[2]+yt*I[1]+J*I[0],Nt=xt+ft*P[2]+ht*P[1]+E*P[0];T.values[Nt]=D[kt]}}}}return T.toTensor()}sparseToDense(t,e,r,o){let{sliceRank:s,numUpdates:c,sliceSize:l,strides:p,outputSize:f}=Tc(e,t,r),m=!1;return this.scatter(t,e,r,f,l,c,s,p,o,m)}gatherND(t,e){let r=e.shape,o=r[r.length-1],[s,c,l,p]=Yf(t,e);if(c===0)return un([],s,t.dtype);let f=new hn([c,l],t.dtype),m=this.readSync(e.dataId),y=this.readSync(t.dataId);for(let b=0;b<c;b++){let v=[],T=0;for(let N=0;N<o;N++){let S=m[b*o+N];T+=S*p[N],v.push(S)}if(T<0||T>=t.size/l)throw new Error(`Invalid indices: ${v} does not index into ${t.shape}`);for(let N=0;N<l;N++)f.values[b*l+N]=y[T*l+N]}return f.toTensor().reshape(s)}scatterND(t,e,r){let{sliceRank:o,numUpdates:s,sliceSize:c,strides:l,outputSize:p}=Tc(e,t,r),f=Et(0),m=!0;return this.scatter(t,e,r,p,c,s,o,l,f,m)}onesLike(t){if(t.dtype==="string")throw new Error("onesLike is not supported for string tensors");return Cc(t.shape,1,t.dtype)}zerosLike(t){let e=rr(t.dtype,G(t.shape));return this.makeOutput(e,t.shape,t.dtype)}linspace(t,e,r){return rv(t,e,r)}scatter(t,e,r,o,s,c,l,p,f,m){let y=[o/s,s],b=this.readSync(t.dataId),v=this.readSync(e.dataId);if(o===0)return un([],r,e.dtype);let T=new hn(y,e.dtype);T.values.fill(this.readSync(f.dataId)[0]);for(let N=0;N<c;N++){let S=[],D=0;for(let I=0;I<l;I++){let P=b[N*l+I];S.push(P),D+=P*p[I]}if(D<0||D>=o/s)throw new Error(`Invalid indices: ${S} does not index into ${r}`);for(let I=0;I<s;I++)m?T.values[D*s+I]+=v[N*s+I]:T.values[D*s+I]=e.rank===0?v[0]:v[N*s+I]}return T.toTensor().reshape(r)}}function W$(n){let t=new Float32Array(n.length);for(let e=0;e<n.length;++e)t[e]=Math.abs(n[e]);return t}let m6=n=>{let{x:t}=n.inputs,e=n.backend,r=new Float32Array(G(t.shape));if(t.dtype!=="complex64"){let o=e.data.get(t.dataId).values;r=W$(o)}else{let o=e.data.get(t.dataId),s=o.complexTensorInfos.real,c=o.complexTensorInfos.imag,l=e.data.get(s.dataId).values,p=e.data.get(c.dataId).values;for(let f=0;f<l.length;f++){let m=l[f],y=p[f];r[f]=Math.hypot(m,y)}}return e.makeOutput(r,t.shape,"float32")},g6={kernelName:of,backendName:"cpu",kernelFunc:m6};function Ti(n){return(t,e,r,o,s)=>{let c=le(t,e),l=c.length,p=Yt(c),f=G(c),m=Ce(s,f),y=t.length,b=e.length,v=Yt(t),T=Yt(e),N=ra(t,c),S=ra(e,c);if(N.length+S.length===0)for(let D=0;D<m.length;++D)m[D]=n(r[D%r.length],o[D%o.length]);else for(let D=0;D<m.length;++D){let I=Ui(D,l,p),P=I.slice(-y);N.forEach(q=>P[q]=0);let E=Kr(P,y,v),L=I.slice(-b);S.forEach(q=>L[q]=0);let B=Kr(L,b,T);m[D]=n(r[E],o[B])}return[m,c]}}function _o(n){let{inputs:t,backend:e}=n,{real:r,imag:o}=t,s=e.data.get(r.dataId).values,c=e.data.get(o.dataId).values,l=e.makeTensorInfo(r.shape,"complex64"),p=e.data.get(l.dataId);return p.complexTensorInfos={real:e.makeTensorInfo(r.shape,"float32",s),imag:e.makeTensorInfo(o.shape,"float32",c)},l}let y6={kernelName:lf,backendName:"cpu",kernelFunc:_o};function ba(n){let{inputs:t,backend:e}=n,{x:r}=t;return e.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}let b6={kernelName:bu,backendName:"cpu",kernelFunc:ba};function Zp(n){let{inputs:t,backend:e}=n,{input:r}=t,o=e.data.get(r.dataId).complexTensorInfos.real,s=e.data.get(o.dataId).values;return e.makeTensorInfo(o.shape,o.dtype,s)}let x6={kernelName:$f,backendName:"cpu",kernelFunc:Zp};function Qp(n){let{inputs:t,backend:e,attrs:r}=n,{x:o}=t,{dtype:s}=r;if(s==="complex64"){if(o.dtype==="complex64")return ba({inputs:{x:o},backend:e});let c=xe(o.shape),l=Qp({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),p=_o({inputs:{real:l,imag:c},backend:e});return c.dispose(),e.disposeIntermediateTensorInfo(l),p}if(o.dtype==="complex64"){let c=Zp({inputs:{input:o},backend:e}),l=Qp({inputs:{x:c},backend:e,attrs:{dtype:s}});return e.disposeIntermediateTensorInfo(c),l}if(!sc(o.dtype,s)){let c=ba({inputs:{x:o},backend:e});return{dataId:c.dataId,shape:c.shape,dtype:s}}if(s==="int32"){let c=e.data.get(o.dataId).values,l=Int32Array.from(c);return e.makeTensorInfo(o.shape,"int32",l)}if(s==="bool"){let c=e.data.get(o.dataId).values,l=Qs([0],o.dtype),[p,f]=Ti((m,y)=>m!==y?1:0)(o.shape,[],c,l,"bool");return e.makeTensorInfo(f,"bool",p)}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}let w6={kernelName:cc,backendName:"cpu",kernelFunc:Qp};function Qc(n,t,e,r){return e==null?({inputs:o,backend:s})=>{let{a:c,b:l}=o,p=s;Ct([c,l],n);let f=p.data.get(c.dataId).values,m=p.data.get(l.dataId).values,y=r||c.dtype,[b,v]=t(c.shape,l.shape,f,m,y);return p.makeTensorInfo(v,y,b)}:({inputs:o,backend:s})=>{let{a:c,b:l}=o,p=s;if(c.dtype==="complex64"||l.dtype==="complex64"){let f=Qp({inputs:{x:c},backend:p,attrs:{dtype:"complex64"}}),m=p.data.get(f.dataId),y=m.complexTensorInfos.real,b=m.complexTensorInfos.imag,v=p.data.get(y.dataId).values,T=p.data.get(b.dataId).values,N=Qp({inputs:{x:l},backend:p,attrs:{dtype:"complex64"}}),S=p.data.get(N.dataId),D=S.complexTensorInfos.real,I=S.complexTensorInfos.imag,P=p.data.get(D.dataId).values,E=p.data.get(I.dataId).values,[L,B,q]=e(c.shape,l.shape,v,T,P,E),H=p.makeTensorInfo(q,"float32",L),Z=p.makeTensorInfo(q,"float32",B),J=_o({inputs:{real:H,imag:Z},backend:p});return p.disposeIntermediateTensorInfo(f),p.disposeIntermediateTensorInfo(N),p.disposeIntermediateTensorInfo(H),p.disposeIntermediateTensorInfo(Z),J}else{let f=p.data.get(c.dataId).values,m=p.data.get(l.dataId).values,y=r||c.dtype,[b,v]=t(c.shape,l.shape,f,m,y);return p.makeTensorInfo(v,y,b)}}}function o1(n){return(t,e,r,o,s,c)=>{let l=le(t,e),p=G(l),f=l.length,m=Yt(l),y=Ce("float32",p),b=Ce("float32",p),v=ra(t,l),T=ra(e,l),N=ys(r,o),S=ys(s,c),D=t.length,I=Yt(t),P=e.length,E=Yt(e);if(v.length+T.length===0)for(let L=0;L<y.length;L++){let B=L%N.length,q=L%S.length,H=n(N[B*2],N[B*2+1],S[q*2],S[q*2+1]);y[L]=H.real,b[L]=H.imag}else for(let L=0;L<y.length;L++){let B=Ui(L,f,m),q=B.slice(-D);v.forEach(pt=>q[pt]=0);let H=Kr(q,D,I),Z=B.slice(-P);T.forEach(pt=>Z[pt]=0);let J=Kr(Z,P,E),it=n(N[H*2],N[H*2+1],S[J*2],S[J*2+1]);y[L]=it.real,b[L]=it.imag}return[y,b,l]}}let V$=Ti((n,t)=>n+t),v6=o1((n,t,e,r)=>({real:n+e,imag:t+r})),th=Qc(Hi,V$,v6),T6={kernelName:Hi,backendName:"cpu",kernelFunc:th};function tl(n){return(t,e,r)=>{let o=Ce(e,t.length);for(let s=0;s<t.length;++s)o[s]=n(t[s],r);return o}}function Ee(n,t,e){return({inputs:r,attrs:o,backend:s})=>{let{x:c}=r;if(Ct(c,n),c.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");let l=s,p=l.data.get(c.dataId).values,f=G(c.shape),m=e||c.dtype,y=rr(m,f);for(let b=0;b<f;++b)y[b]=t(p[b],o);return l.makeTensorInfo(c.shape,m,y)}}function el(n,t,e){return({inputs:r,attrs:o,backend:s})=>{let{x:c}=r;if(Ct(c,n),c.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");let l=s,p=l.data.get(c.dataId).values,f=e||c.dtype,m=t(p,f,o);return l.makeTensorInfo(c.shape,f,m)}}let G$=tl(n=>Math.ceil(n)),k6=el(cu,G$),N6={kernelName:cu,backendName:"cpu",kernelFunc:k6};let U$=tl(n=>Math.exp(n)),_6=el(du,U$),C6={kernelName:du,backendName:"cpu",kernelFunc:_6};let q$=tl(n=>Math.expm1(n)),S6=el(mu,q$),$6={kernelName:mu,backendName:"cpu",kernelFunc:S6};let H$=tl(n=>Math.floor(n)),I6=el(gu,H$),E6={kernelName:gu,backendName:"cpu",kernelFunc:I6};let j$=tl(n=>Math.log(n)),D6=el(Tu,j$),A6={kernelName:Tu,backendName:"cpu",kernelFunc:D6};function K$(n,t,e,r){let o=Ce(r,G(e));for(let s=0;s<o.length;++s){let c=s*t,l=n[c];for(let p=0;p<t;++p){let f=n[c+p];f>l&&(l=f)}o[s]=l}return o}let X$=Ti((n,t)=>n*t),F6=o1((n,t,e,r)=>({real:n*e-t*r,imag:n*r+t*e})),Y$=Qc(pc,X$,F6),R6={kernelName:pc,backendName:"cpu",kernelFunc:Y$};let J$=Ti((n,t)=>n!==t?1:0),P6=Qc(Su,J$,null,"bool"),O6={kernelName:Su,backendName:"cpu",kernelFunc:P6};let Z$=tl(n=>1/Math.sqrt(n)),L6=el(Fu,Z$),M6={kernelName:Fu,backendName:"cpu",kernelFunc:L6};function Q$(n,t,e,r,o){let s=Yx(r,t,e),c=G(e),l=Yt(r);if(s){let f=Jx(t,l);return n.subarray(f,f+c)}let p=Ce(o,c);for(let f=0;f<c;++f){let m=e.length,y=Yt(e),b=Ui(f,m,y),v=b.map((N,S)=>N+t[S]),T=Kr(v,r.length,l);p[f]=n[T]}return p}function s1(n){let{inputs:t,backend:e,attrs:r}=n,{x:o}=t,{begin:s,size:c}=r;Ct(o,"slice");let[l,p]=Qf(o,s,c);Xx(o,l,p);let f=e.data.get(o.dataId).values,m=Q$(f,l,p,o.shape,o.dtype);return e.makeTensorInfo(p,o.dtype,m)}let B6={kernelName:If,backendName:"cpu",kernelFunc:s1};let tI=Ti((n,t)=>{let e=n-t;return e*e}),z6=Qc(fc,tI),W6={kernelName:fc,backendName:"cpu",kernelFunc:z6};let eI=Ti((n,t)=>n-t),V6=o1((n,t,e,r)=>({real:n-e,imag:t-r})),nI=Qc(dc,eI,V6),G6={kernelName:dc,backendName:"cpu",kernelFunc:nI};function i1(n,t,e,r,o){let s=t.length,c=G(t),l=Yt(t),p=Yt(o),f=Ce(e,G(o));for(let m=0;m<c;++m){let y=Ui(m,s,l),b=new Array(y.length);for(let T=0;T<b.length;T++)b[T]=y[r[T]];let v=Kr(b,s,p);f[v]=n[m]}return f}function rI(n,t,e,r){let o=Vt(t,e)[0],s=[1,e[0],1];for(let T=0;T<o;T++)s[0]*=e[T];s[1]=e[o];for(let T=o+1;T<e.length;T++)s[2]*=e[T];let c={},l=new Int32Array(e[o]),p=new hn(s,r,n),f=[],m=s[0]===1&&s[2]===1;for(let T=0;T<e[o];T++){let N;if(m)N=n[T].toString();else{let S=[];for(let D=0;D<s[0];D++)for(let I=0;I<s[2];I++)S.push(p.get(D,T,I));N=S.join(",")}if(c[N]!==void 0)l[T]=c[N];else{let S=Object.keys(c).length;c[N]=S,l[T]=S,f.push(T)}}let y=s.slice();y[1]=Object.keys(c).length;let b=new hn(y,r);f.forEach((T,N)=>{for(let S=0;S<s[0];S++)for(let D=0;D<s[2];D++)b.set(p.get(S,T,D),S,N,D)});let v=e.slice();return v[o]=y[1],{outputValues:b.values,outputShape:v,indices:l}}var U6=Object.freeze({__proto__:null,simpleAbsImpl:W$,addImpl:V$,ceilImpl:G$,expImpl:U$,expm1Impl:q$,floorImpl:H$,logImpl:j$,maxImpl:K$,multiplyImpl:X$,notEqualImpl:J$,rsqrtImpl:Z$,sliceImpl:Q$,squaredDifferenceImpl:tI,subImpl:eI,transposeImpl:i1,uniqueImpl:rI});let q6="2.7.0";ew("cpu",()=>new d6,1);let oI=Ee(hu,n=>n>=0?n:Math.exp(n)-1),H6={kernelName:hu,backendName:"cpu",kernelFunc:oI};let j6=Ti((n,t)=>n<0?t*n:n);function sI(n){let{inputs:t,backend:e}=n,{x:r,alpha:o}=t;Ct([r,o],"prelu");let s=e.data.get(r.dataId).values,c=e.data.get(o.dataId).values,[l,p]=j6(r.shape,o.shape,s,c,r.dtype);return e.makeTensorInfo(p,r.dtype,l)}let K6={kernelName:Sf,backendName:"cpu",kernelFunc:sI};let iI=Ee(Iu,n=>Math.max(0,n)),X6={kernelName:Iu,backendName:"cpu",kernelFunc:iI};let aI=Ee(Du,n=>Math.min(Math.max(0,n),6)),Y6={kernelName:Du,backendName:"cpu",kernelFunc:aI};function a1(n,t,e,r){if(e==="linear")return ba({inputs:{x:t},backend:n});if(e==="relu")return iI({inputs:{x:t},backend:n});if(e==="elu")return oI({inputs:{x:t},backend:n});if(e==="relu6")return aI({inputs:{x:t},backend:n});if(e==="prelu")return sI({inputs:{x:t,alpha:r},backend:n});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}function Ho(n){let{inputs:t,backend:e,attrs:r}=n,{x:o}=t,{shape:s}=r,c=G(o.shape),l=Ge(s,c),p=G(l);_(c===p,()=>`The new shape (${l}) has ${p} elements and the old shape (${o.shape}) has ${c} elements. The new shape and old shape must have the same number of elements.`),e.incRef(o.dataId);let f=e.data.get(o.dataId);if(f.complexTensorInfos!=null){let m=f.complexTensorInfos.real,y=f.complexTensorInfos.imag;m.shape=l,y.shape=l}return{dataId:o.dataId,shape:l,dtype:o.dtype}}let J6={kernelName:Eu,backendName:"cpu",kernelFunc:Ho};function cI(n){let{inputs:t,backend:e,attrs:r}=n,{a:o,b:s}=t,{transposeA:c,transposeB:l}=r;Ct([o,s],"matMul");let p=o.shape.length,f=s.shape.length,m=c?o.shape[p-2]:o.shape[p-1],y=l?s.shape[f-1]:s.shape[f-2],b=c?o.shape[p-1]:o.shape[p-2],v=l?s.shape[f-2]:s.shape[f-1],T=o.shape.slice(0,-2),N=s.shape.slice(0,-2),S=G(T),D=G(N),I=S===D||S===1||D===1;_(p>=2&&f>=2&&I,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${T}) and (${N}).`);let P=S>D?o.shape.slice(0,-2):s.shape.slice(0,-2),E=P.concat([b,v]);_(m===y,()=>`Error in matMul: inner shapes (${m}) and (${y}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${c} and transposeB=${l} must match.`);let L=c?[S,m,b]:[S,b,m],B=l?[D,v,y]:[D,y,v],q=Ho({inputs:{x:o},backend:e,attrs:{shape:L}}),H=Ho({inputs:{x:s},backend:e,attrs:{shape:B}}),Z=c?q.shape[1]:q.shape[2],J=c?q.shape[2]:q.shape[1],it=l?H.shape[1]:H.shape[2],pt=Math.max(S,D),ht=e.data.get(q.dataId).values,dt=e.data.get(H.dataId).values,ft=Yt(q.shape),ut=Yt(H.shape),[bt,yt,xt]=c?[ft[0],1,ft[1]]:[ft[0],ft[1],1],[kt,Nt,At]=l?[1,ut[1],ut[0]]:[ut[1],1,ut[0]],It=J*it,St=Se([pt,J,it],q.dtype),Lt=St.values,Ht=e.blockSize;for(let oe=0;oe<pt;oe++)for(let de=0;de<J;de+=Ht)for(let ie=0;ie<it;ie+=Ht)for(let we=0;we<Z;we+=Ht){let pe=Math.min(de+Ht,J),Xe=Math.min(ie+Ht,it),on=Math.min(we+Ht,Z);for(let sn=de;sn<pe;sn++)for(let Ae=ie;Ae<Xe;Ae++){let Ye=0;for(let Le=we;Le<on;Le++){let Ln=Math.min(oe,S-1)*bt,$s=Math.min(oe,D-1)*At,Mn=ht[Ln+sn*yt+Le*xt],Co=dt[Le*kt+Ae*Nt+$s];Ye+=Mn*Co}Lt[oe*It+(sn*it+Ae)]+=Ye}}return e.disposeIntermediateTensorInfo(q),e.disposeIntermediateTensorInfo(H),e.makeTensorInfo(E,St.dtype,St.values)}let Z6={kernelName:cf,backendName:"cpu",kernelFunc:cI};function Q6(n){let{inputs:t,backend:e,attrs:r}=n,{a:o,b:s,bias:c,preluActivationWeights:l}=t,{transposeA:p,transposeB:f,activation:m}=r,y,b,v,T=[],N=cI({inputs:{a:o,b:s},attrs:{transposeA:p,transposeB:f},backend:e});y=N,c&&(b=th({inputs:{a:y,b:c},backend:e}),T.push(y),y=b),m&&(v=a1(e,y,m,l),T.push(y),y=v);for(let S of T)e.disposeIntermediateTensorInfo(S);return y}let tK={kernelName:Pf,backendName:"cpu",kernelFunc:Q6};let eK=Ee(eu,n=>Math.acos(n)),nK={kernelName:eu,backendName:"cpu",kernelFunc:eK};let rK=Ee(nu,n=>Math.acosh(n)),oK={kernelName:nu,backendName:"cpu",kernelFunc:rK};let sK=Ee(ru,n=>Math.asin(n)),iK={kernelName:ru,backendName:"cpu",kernelFunc:sK};let aK=Ee(ou,n=>Math.asinh(n)),cK={kernelName:ou,backendName:"cpu",kernelFunc:aK};let lK=Ee(su,n=>Math.atan(n)),uK={kernelName:su,backendName:"cpu",kernelFunc:lK};let pK=Ee(iu,n=>Math.atanh(n)),hK={kernelName:iu,backendName:"cpu",kernelFunc:pK};function c1(n,t,e,r,o,s){let c=o.strideHeight,l=o.strideWidth,p=o.dilationHeight,f=o.dilationWidth,m=o.effectiveFilterHeight,y=o.effectiveFilterWidth,b=o.padInfo.top,v=o.padInfo.left,T=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,N=Se(o.outShape,e),S=N.values,D=o.outShape[1]*o.outShape[2]*o.outShape[3],I=o.outShape[2]*o.outShape[3],P=o.outShape[3];for(let E=0;E<o.batchSize;++E){let L=E*D,B=E*r[0];for(let q=0;q<o.inChannels;++q)for(let H=0;H<o.outHeight;++H){let Z=H*c-b,J=Math.max(0,Z),it=Math.min(o.inHeight,m+Z),pt=L+H*I;for(let ht=0;ht<o.outWidth;++ht){let dt=ht*l-v,ft=Math.max(0,dt),ut=Math.min(o.inWidth,y+dt),bt=T,yt=0,xt=0;for(let Nt=J;Nt<it;Nt+=p){let At=B+Nt*r[1];for(let It=ft;It<ut;It+=f){let St=At+It*r[2],Lt=n[St+q];s==="max"&&Lt>bt?bt=Lt:s==="avg"&&(yt+=Lt,xt++)}if(isNaN(bt))break}let kt=pt+ht*P+q;S[kt]=s==="avg"?yt/xt:bt}}}return N}function lI(n,t,e,r,o=!1,s=!1){let c=Se(r.outShape,"int32"),l=r.strideHeight,p=r.strideWidth,f=r.dilationHeight,m=r.dilationWidth,y=r.effectiveFilterHeight,b=r.effectiveFilterWidth,v=r.padInfo.top,T=r.padInfo.left,N=Se(t,e,n);for(let S=0;S<r.batchSize;++S)for(let D=0;D<r.inChannels;++D)for(let I=0;I<r.outHeight;++I){let P=I*l-v,E=P;for(;E<0;)E+=f;let L=Math.min(r.inHeight,y+P);for(let B=0;B<r.outWidth;++B){let q=B*p-T,H=q;for(;H<0;)H+=m;let Z=Math.min(r.inWidth,b+q),J=Number.NEGATIVE_INFINITY,it=-1;for(let pt=E;pt<L;pt+=f){let ht=pt-P;for(let dt=H;dt<Z;dt+=m){let ft=dt-q,ut=N.get(S,pt,dt,D);ut>J&&(J=ut,o?it=s?((S*r.inHeight+pt)*r.inWidth+dt)*r.inChannels+D:(pt*r.inWidth+dt)*r.inChannels+D:it=ht*b+ft)}}c.set(it,S,I,B,D)}}return c}function fK(n){let{inputs:t,backend:e,attrs:r}=n,{x:o}=t;Ct(o,"avgPool");let{filterSize:s,strides:c,pad:l,dimRoundingMode:p}=r,f=1;_(fn(c,f),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${c} and dilations '${f}'`);let m=Kn(o.shape,s,c,f,l,p),y;if(m.filterWidth===1&&m.filterHeight===1&&lt(m.inShape,m.outShape))y=ba({inputs:{x:o},backend:e});else{let b=e.data.get(o.dataId).values,v=Yt(o.shape),T=c1(b,o.shape,o.dtype,v,m,"avg");y=e.makeTensorInfo(m.outShape,o.dtype,T.values)}return y}let dK={kernelName:au,backendName:"cpu",kernelFunc:fK};function mK(n){let{inputs:t,backend:e,attrs:r}=n,{dy:o,input:s}=t,c=s;Ct([o,s],"avgPoolBackprop");let{filterSize:l,strides:p,pad:f}=r,m=Kn(c.shape,l,p,1,f),y=m.strideHeight,b=m.strideWidth,v=m.filterHeight,T=m.filterWidth,N=m.dilationHeight,S=m.dilationWidth,D=m.effectiveFilterHeight,I=m.effectiveFilterWidth,P=I-1-m.padInfo.left,E=D-1-m.padInfo.top,L=Se(c.shape,"float32"),B=1/(v*T),q=e.data.get(o.dataId).values,H=Se(o.shape,"float32",q);for(let Z=0;Z<m.batchSize;++Z)for(let J=0;J<m.inChannels;++J)for(let it=0;it<m.inHeight;++it)for(let pt=0;pt<m.inWidth;++pt){let ht=it-E,dt=pt-P,ft=0;for(let ut=0;ut<D;ut+=N){let bt=(ht+ut)/y;if(bt<0||bt>=m.outHeight||Math.floor(bt)!==bt)continue;for(let yt=0;yt<I;yt+=S){let xt=(dt+yt)/b;if(xt<0||xt>=m.outWidth||Math.floor(xt)!==xt)continue;let kt=H.get(Z,bt,xt,J);ft+=kt}}L.set(ft*B,Z,it,pt,J)}return e.makeTensorInfo(L.shape,L.dtype,L.values)}let gK={kernelName:af,backendName:"cpu",kernelFunc:mK};function yK(n){let{inputs:t,backend:e,attrs:r}=n,{x:o,scale:s,offset:c,mean:l,variance:p}=t;_(l.shape.length===p.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),_(c==null||l.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),_(s==null||l.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Ct([o,l,p,s,c],"batchNorm");let{varianceEpsilon:f}=r;f==null&&(f=.001);let m=e.data.get(o.dataId).values,y=e.data.get(l.dataId).values,b=e.data.get(p.dataId).values,v=s?e.data.get(s.dataId).values:new Float32Array([1]),T=c?e.data.get(c.dataId).values:new Float32Array([0]),N=new Float32Array(m.length),S=T.length,D=v.length,I=b.length,P=y.length,E=0,L=0,B=0,q=0;for(let H=0;H<m.length;++H)N[H]=T[E++]+(m[H]-y[L++])*v[B++]/Math.sqrt(b[q++]+f),E>=S&&(E=0),L>=P&&(L=0),B>=D&&(B=0),q>=I&&(q=0);return e.makeTensorInfo(o.shape,o.dtype,N)}let bK={kernelName:yu,backendName:"cpu",kernelFunc:yK};let xK=Ee(lu,(n,t)=>{let e=t;return n>e.clipValueMax?e.clipValueMax:n<e.clipValueMin?e.clipValueMin:n}),wK={kernelName:lu,backendName:"cpu",kernelFunc:xK};function Em(n){let{inputs:t,backend:e}=n,{input:r}=t,o=e.data.get(r.dataId).complexTensorInfos.imag,s=e.data.get(o.dataId).values;return e.makeTensorInfo(o.shape,o.dtype,s)}let vK={kernelName:wf,backendName:"cpu",kernelFunc:Em};function eh(n){let{inputs:t,backend:e,attrs:r}=n,{axis:o}=r,s=Vt(o,t[0].shape)[0],c=hs(t.map(v=>v.shape),s);if(G(c)===0)return e.makeTensorInfo(c,t[0].dtype,[]);let l=t.filter(v=>G(v.shape)>0);if(l.length===1)return l[0];let p=l.map(v=>v.shape);if(id(p,s),l[0].dtype==="complex64"){let v=l.map(I=>Zp({inputs:{input:I},backend:e})),T=l.map(I=>Em({inputs:{input:I},backend:e})),N=eh({inputs:v,backend:e,attrs:{axis:s}}),S=eh({inputs:T,backend:e,attrs:{axis:s}}),D=_o({inputs:{real:N,imag:S},backend:e});return v.forEach(I=>e.disposeIntermediateTensorInfo(I)),T.forEach(I=>e.disposeIntermediateTensorInfo(I)),e.disposeIntermediateTensorInfo(N),e.disposeIntermediateTensorInfo(S),D}let f=l.map(v=>{let T=G(v.shape.slice(s)),N=[-1,T];return Ho({inputs:{x:v},backend:e,attrs:{shape:N}})});c=hs(f.map(v=>v.shape),1);let m=Ce(l[0].dtype,G(c));if(f[0].shape[0]===1){let v=0;f.forEach(T=>{let N=e.data.get(T.dataId).values,S=G(T.shape);m.set(N,v),v+=S})}else{let v=0;f.forEach(T=>{let N=e.data.get(T.dataId).values,S=0;for(let D=0;D<T.shape[0];++D){let I=D*c[1]+v;for(let P=0;P<T.shape[1];++P)m[I+P]=N[S++]}v+=T.shape[1]})}let y=hs(l.map(v=>v.shape),s),b=e.makeTensorInfo(y,t[0].dtype,m);return f.forEach(v=>e.disposeIntermediateTensorInfo(v)),b}let TK={kernelName:uu,backendName:"cpu",kernelFunc:eh};function uI(n){let{inputs:t,backend:e,attrs:r}=n,{x:o,filter:s}=t,{strides:c,pad:l,dataFormat:p,dilations:f,dimRoundingMode:m}=r;Ct([o,s],"conv2d");let y=si(p),b=Un(o.shape,s.shape,c,f,l,m,!1,y),v=b.filterHeight,T=b.filterWidth,N=b.dilationHeight,S=b.dilationWidth,D=b.padInfo.left,I=b.padInfo.top,P=b.dataFormat==="channelsLast",E=new hn(b.outShape,o.dtype),L=Yt(o.shape),B=Yt(s.shape),q=L[0],H=P?L[1]:L[2],Z=P?L[2]:1,J=P?1:L[1],it=E.strides[0],pt=P?E.strides[1]:E.strides[2],ht=P?E.strides[2]:1,dt=P?1:E.strides[1],ft=e.data.get(o.dataId).values,ut=e.data.get(s.dataId).values,bt=E.values;for(let yt=0;yt<b.batchSize;++yt){let xt=yt*q,kt=yt*it;for(let Nt=0;Nt<b.outHeight;++Nt){let At=kt+Nt*pt,It=Nt*b.strideHeight-I;for(let St=0;St<v;++St){let Lt=It+St*N;if(Lt<0||Lt>=b.inHeight)continue;let Ht=St*B[0],oe=xt+Lt*H;for(let de=0;de<b.outWidth;++de){let ie=At+de*ht,we=de*b.strideWidth-D;for(let pe=0;pe<T;++pe){let Xe=we+pe*S;if(Xe<0||Xe>=b.inWidth)continue;let on=Ht+pe*B[1],sn=oe+Xe*Z,Ae=on;for(let Ye=0;Ye<b.inChannels;++Ye){let Le=ft[sn+Ye*J];for(let Ln=0;Ln<b.outChannels;++Ln)bt[ie+Ln*dt]+=Le*ut[Ae+Ln];Ae+=b.outChannels}}}}}}return e.makeTensorInfo(E.shape,E.dtype,bt)}let kK={kernelName:uf,backendName:"cpu",kernelFunc:uI};function NK(n){let{inputs:t,backend:e,attrs:r}=n,{x:o,dy:s}=t,{strides:c,pad:l,dataFormat:p,dimRoundingMode:f,filterShape:m}=r;Ct([o,s],"conv2dBackpropFilter");let y=si(p),b=Un(o.shape,m,c,1,l,f,!1,y),{strideHeight:v,strideWidth:T,filterHeight:N,filterWidth:S}=b,D=b.dataFormat==="channelsLast",I=new hn(b.filterShape,"float32"),P=b.padInfo.left,E=b.padInfo.top,L=e.data.get(o.dataId).values,B=e.data.get(s.dataId).values,q=new hn(o.shape,o.dtype,L),H=new hn(s.shape,s.dtype,B);for(let Z=0;Z<N;++Z){let J=Math.max(0,Math.ceil((E-Z)/v)),it=Math.min(b.outHeight,(b.inHeight+E-Z)/v);for(let pt=0;pt<S;++pt){let ht=Math.max(0,Math.ceil((P-pt)/T)),dt=Math.min(b.outWidth,(b.inWidth+P-pt)/T);for(let ft=0;ft<b.inChannels;++ft)for(let ut=0;ut<b.outChannels;++ut){let bt=0;for(let yt=0;yt<b.batchSize;++yt)for(let xt=J;xt<it;++xt){let kt=Z+xt*v-E;for(let Nt=ht;Nt<dt;++Nt){let At=pt+Nt*T-P;D?bt+=q.get(yt,kt,At,ft)*H.get(yt,xt,Nt,ut):bt+=q.get(yt,ft,kt,At)*H.get(yt,ut,xt,Nt)}}I.set(bt,Z,pt,ft,ut)}}}return e.makeTensorInfo(I.shape,I.dtype,I.values)}let _K={kernelName:Hb,backendName:"cpu",kernelFunc:NK};function CK(n){let{inputs:t,backend:e,attrs:r}=n,{dy:o,filter:s}=t,{inputShape:c,strides:l,pad:p,dataFormat:f,dimRoundingMode:m}=r;Ct([o,s],"conv2dBackpropInput");let y=Yt(s.shape),b=Yt(o.shape),v=si(f),T=Un(c,s.shape,l,1,p,m,!1,v),N=new hn(T.inShape,"float32"),S=N.values,D=e.data.get(o.dataId).values,I=e.data.get(s.dataId).values,[P,E,L]=y,{batchSize:B,filterHeight:q,filterWidth:H,inChannels:Z,inHeight:J,inWidth:it,outChannels:pt,outHeight:ht,outWidth:dt,strideHeight:ft,strideWidth:ut}=T;v=T.dataFormat;let bt=q-1-T.padInfo.top,yt=H-1-T.padInfo.left,xt=v==="channelsLast",kt=N.strides[0],Nt=xt?N.strides[1]:N.strides[2],At=xt?N.strides[2]:1,It=xt?1:N.strides[1],St=b[0],Lt=xt?b[1]:b[2],Ht=xt?b[2]:1,oe=xt?1:b[1];for(let de=0;de<B;++de)for(let ie=0;ie<Z;++ie)for(let we=0;we<J;++we){let pe=we-bt,Xe=Math.max(0,Math.ceil(pe/ft)),on=Math.min(ht,(q+pe)/ft);for(let sn=0;sn<it;++sn){let Ae=sn-yt,Ye=Math.max(0,Math.ceil(Ae/ut)),Le=Math.min(dt,(H+Ae)/ut),Ln=0;for(let Mn=Xe;Mn<on;++Mn){let Co=Mn*ft-pe;for(let Br=Ye;Br<Le;++Br){let va=Br*ut-Ae,So=St*de+Lt*Mn+Ht*Br,Ko=P*(q-1-Co)+E*(H-1-va)+L*ie;for(let Ni=0;Ni<pt;++Ni){let _i=D[So+oe*Ni],Ci=I[Ko+Ni];Ln+=_i*Ci}}}let $s=kt*de+Nt*we+At*sn+It*ie;S[$s]=Ln}}return e.makeTensorInfo(N.shape,N.dtype,N.values)}let SK={kernelName:pf,backendName:"cpu",kernelFunc:CK};function $K(n){let{inputs:t,backend:e,attrs:r}=n,{x:o,filter:s}=t,{strides:c,pad:l,dilations:p}=r;Ct([o,s],"conv3d");let f=ri(o.shape,s.shape,c,p,l),{filterDepth:m,filterHeight:y,filterWidth:b,dilationDepth:v,dilationHeight:T,dilationWidth:N,padInfo:S}=f,D=S.front,I=S.left,P=S.top,E=new hn(f.outShape,o.dtype),L=e.data.get(o.dataId).values,B=e.data.get(s.dataId).values,q=E.values,H=Yt(o.shape),Z=Yt(s.shape);for(let J=0;J<f.batchSize;++J){let it=J*H[0],pt=J*E.strides[0];for(let ht=0;ht<f.outDepth;++ht){let dt=pt+ht*E.strides[1],ft=ht*f.strideDepth-D;for(let ut=0;ut<m;++ut){let bt=ft+ut*v;if(bt<0||bt>=f.inDepth)continue;let yt=ut*Z[0],xt=it+bt*H[1];for(let kt=0;kt<f.outHeight;++kt){let Nt=dt+kt*E.strides[2],At=kt*f.strideHeight-P;for(let It=0;It<y;++It){let St=At+It*T;if(St<0||St>=f.inHeight)continue;let Lt=yt+It*Z[1],Ht=xt+St*H[2];for(let oe=0;oe<f.outWidth;++oe){let de=Nt+oe*f.outChannels,ie=oe*f.strideWidth-I;for(let we=0;we<b;++we){let pe=ie+we*N;if(pe<0||pe>=f.inWidth)continue;let Xe=Lt+we*Z[2],on=Ht+pe*f.inChannels,sn=Xe;for(let Ae=0;Ae<f.inChannels;++Ae){let Ye=L[on+Ae];for(let Le=0;Le<f.outChannels;++Le)q[de+Le]+=Ye*B[sn+Le];sn+=f.outChannels}}}}}}}}return e.makeTensorInfo(E.shape,E.dtype,E.values)}let IK={kernelName:hf,backendName:"cpu",kernelFunc:$K};function EK(n){let{inputs:t,backend:e,attrs:r}=n,{x:o,dy:s}=t,{strides:c,pad:l,filterShape:p}=r;Ct([o,s],"conv3dBackpropFilterV2");let f=Yt(o.shape),m=Yt(s.shape),y=ri(o.shape,p,c,1,l),b=y.strideDepth,v=y.strideHeight,T=y.strideWidth,N=y.filterDepth,S=y.filterHeight,D=y.filterWidth,I=new hn(y.filterShape,"float32"),P=I.values,[E,L,B,q]=I.strides,H=e.data.get(s.dataId).values,[Z,J,it,pt]=m,ht=e.data.get(o.dataId).values,[dt,ft,ut,bt]=f,yt=y.padInfo.front,xt=y.padInfo.left,kt=y.padInfo.top;for(let Nt=0;Nt<N;++Nt){let At=Math.max(0,Math.ceil((yt-Nt)/b)),It=Math.min(y.outDepth,(y.inDepth+yt-Nt)/b),St=Nt*E;for(let Lt=0;Lt<S;++Lt){let Ht=Math.max(0,Math.ceil((kt-Lt)/v)),oe=Math.min(y.outHeight,(y.inHeight+kt-Lt)/v),de=Lt*L+St;for(let ie=0;ie<D;++ie){let we=Math.max(0,Math.ceil((xt-ie)/T)),pe=Math.min(y.outWidth,(y.inWidth+xt-ie)/T),Xe=ie*B+de;for(let on=0;on<y.inChannels;++on){let sn=on*q+Xe;for(let Ae=0;Ae<y.outChannels;++Ae){let Ye=0;for(let Le=0;Le<y.batchSize;++Le){let Ln=Le*dt,$s=Le*Z;for(let Mn=At;Mn<It;++Mn){let Co=Nt+Mn*b-yt,Br=Co*ft+Ln,va=Mn*J+$s;for(let So=Ht;So<oe;++So){let Ko=Lt+So*v-kt,Ni=Ko*ut+Br,_i=So*it+va;for(let Ci=we;Ci<pe;++Ci){let fl=ie+Ci*T-xt,_1=fl*bt+Ni,C1=Ci*pt+_i;Ye+=ht[_1+on]*H[C1+Ae]}}}}P[sn+Ae]=Ye}}}}}return e.makeTensorInfo(I.shape,I.dtype,I.values)}let DK={kernelName:jb,backendName:"cpu",kernelFunc:EK};function AK(n){let{inputs:t,backend:e,attrs:r}=n,{dy:o,filter:s}=t,{pad:c,strides:l,inputShape:p}=r;Ct([o],"conv3dBackpropInputV2");let f=Yt(o.shape),m=Yt(s.shape),y=ri(p,s.shape,l,1,c),b=new hn(y.inShape,"float32"),v=b.values,[T,N,S,D]=b.strides,I=e.data.get(o.dataId).values,[P,E,L,B]=f,q=e.data.get(s.dataId).values,[H,Z,J,it]=m,{batchSize:pt,filterDepth:ht,filterHeight:dt,filterWidth:ft,inChannels:ut,inDepth:bt,inHeight:yt,inWidth:xt,outChannels:kt,outDepth:Nt,outHeight:At,outWidth:It,strideDepth:St,strideHeight:Lt,strideWidth:Ht}=y,oe=ht-1-y.padInfo.front,de=dt-1-y.padInfo.top,ie=ft-1-y.padInfo.left;for(let we=0;we<pt;++we)for(let pe=0;pe<ut;++pe)for(let Xe=0;Xe<bt;++Xe){let on=Xe-oe,sn=Math.max(0,Math.ceil(on/St)),Ae=Math.min(Nt,(ht+on)/St);for(let Ye=0;Ye<yt;++Ye){let Le=Ye-de,Ln=Math.max(0,Math.ceil(Le/Lt)),$s=Math.min(At,(dt+Le)/Lt);for(let Mn=0;Mn<xt;++Mn){let Co=Mn-ie,Br=Math.max(0,Math.ceil(Co/Ht)),va=Math.min(It,(ft+Co)/Ht),So=0;for(let Ko=sn;Ko<Ae;++Ko){let Ni=Ko*St-on;for(let _i=Ln;_i<$s;++_i){let Ci=_i*Lt-Le;for(let fl=Br;fl<va;++fl){let _1=fl*Ht-Co,C1=P*we+E*Ko+L*_i+B*fl,E9=H*(ht-1-Ni)+Z*(dt-1-Ci)+J*(ft-1-_1)+it*pe;for(let Um=0;Um<kt;++Um){let D9=I[C1+Um],A9=q[E9+Um];So+=D9*A9}}}}v[T*we+N*Xe+S*Ye+D*Mn+pe]=So}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}let FK={kernelName:Kb,backendName:"cpu",kernelFunc:AK};let RK=Ee(lc,n=>Math.cos(n)),PK={kernelName:lc,backendName:"cpu",kernelFunc:RK};let OK=Ee(pu,n=>Math.cosh(n)),LK={kernelName:pu,backendName:"cpu",kernelFunc:OK};function pI(n){let{inputs:t,backend:e,attrs:r}=n,{x:o,filter:s}=t,{strides:c,pad:l,dilations:p,dimRoundingMode:f}=r;Ct([o,s],"depthwiseConv2DNative");let m=Yt(o.shape),y=Yt(s.shape),b=p;b==null&&(b=[1,1]),_(fn(c,b),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${b}'`);let v=Un(o.shape,s.shape,c,b,l,f,!0),{filterHeight:T,filterWidth:N,dilationHeight:S,dilationWidth:D,padInfo:I}=v,P=I.left,E=I.top,L=v.outChannels/v.inChannels,B=new hn(v.outShape,o.dtype),q=e.data.get(o.dataId).values,H=e.data.get(s.dataId).values,Z=B.values;for(let J=0;J<v.batchSize;++J){let it=J*m[0],pt=J*B.strides[0];for(let ht=0;ht<v.outHeight;++ht){let dt=pt+ht*B.strides[1],ft=ht*v.strideHeight-P;for(let ut=0;ut<T;++ut){let bt=ft+ut*S;if(bt<0||bt>=v.inHeight)continue;let yt=ut*y[0],xt=it+bt*m[1];for(let kt=0;kt<v.outWidth;++kt){let Nt=dt+kt*B.strides[2],At=kt*v.strideWidth-E;for(let It=0;It<N;++It){let St=At+It*D;if(St<0||St>=v.inWidth)continue;let Lt=yt+It*y[1],Ht=xt+St*v.inChannels,oe=Nt,de=Lt;for(let ie=0;ie<v.inChannels;++ie){let we=q[Ht+ie];for(let pe=0;pe<L;++pe)Z[oe+pe]+=we*H[de+pe];oe+=L,de+=L}}}}}}return e.makeTensorInfo(B.shape,B.dtype,B.values)}let MK={kernelName:ff,backendName:"cpu",kernelFunc:pI};function BK(n){let{inputs:t,backend:e,attrs:r}=n,{x:o,dy:s}=t,{strides:c,dilations:l,pad:p,dimRoundingMode:f,filterShape:m}=r;Ct([o,s],"depthwiseConv2dNativeBackpropFilter");let y=Un(o.shape,m,c,l,p,f,!0),{strideHeight:b,strideWidth:v,filterHeight:T,filterWidth:N}=y,S=new hn(y.filterShape,"float32"),D=y.padInfo.left,I=y.padInfo.top,P=y.outChannels/y.inChannels,E=e.data.get(o.dataId).values,L=new hn(o.shape,o.dtype,E),B=e.data.get(s.dataId).values,q=new hn(s.shape,s.dtype,B);for(let H=0;H<T;++H){let Z=Math.max(0,Math.ceil((I-H)/b)),J=Math.min(y.outHeight,(y.inHeight+I-H)/b);for(let it=0;it<N;++it){let pt=Math.max(0,Math.ceil((D-it)/v)),ht=Math.min(y.outWidth,(y.inWidth+D-it)/v);for(let dt=0;dt<y.outChannels;++dt){let ft=Math.trunc(dt/P),ut=dt%P,bt=0;for(let yt=0;yt<y.batchSize;++yt)for(let xt=Z;xt<J;++xt){let kt=H+xt*b-I;for(let Nt=pt;Nt<ht;++Nt){let At=it+Nt*v-D;bt+=L.get(yt,kt,At,ft)*q.get(yt,xt,Nt,dt)}}S.set(bt,H,it,ft,ut)}}}return e.makeTensorInfo(S.shape,S.dtype,S.values)}let zK={kernelName:Yb,backendName:"cpu",kernelFunc:BK};function WK(n){let{inputs:t,backend:e,attrs:r}=n,{dy:o,filter:s}=t,{strides:c,dilations:l,pad:p,dimRoundingMode:f,inputShape:m}=r;Ct([o,s],"depthwiseConv2DNativeBackpropInput");let y=Yt(o.shape),b=Yt(s.shape),v=Un(m,s.shape,c,l,p,f,!0),T=new hn(v.inShape,"float32"),N=T.values,[S,D,I]=T.strides,P=e.data.get(o.dataId).values,[E,L,B]=y,q=e.data.get(s.dataId).values,[H,Z,J]=b,{batchSize:it,filterHeight:pt,filterWidth:ht,inChannels:dt,inHeight:ft,inWidth:ut,outChannels:bt,outHeight:yt,outWidth:xt,strideHeight:kt,strideWidth:Nt}=v,At=pt-1-v.padInfo.top,It=ht-1-v.padInfo.left,St=bt/dt;for(let Lt=0;Lt<it;++Lt)for(let Ht=0;Ht<dt;++Ht)for(let oe=0;oe<ft;++oe){let de=oe-At,ie=Math.max(0,Math.ceil(de/kt)),we=Math.min(yt,(pt+de)/kt);for(let pe=0;pe<ut;++pe){let Xe=pe-It,on=Math.max(0,Math.ceil(Xe/Nt)),sn=Math.min(xt,(ht+Xe)/Nt),Ae=0;for(let Ye=ie;Ye<we;++Ye){let Le=Ye*kt-de;for(let Ln=on;Ln<sn;++Ln){let $s=Ln*Nt-Xe,Mn=E*Lt+L*Ye+B*Ln,Co=H*(pt-1-Le)+Z*(ht-1-$s)+J*Ht;for(let Br=0;Br<St;++Br){let va=Ht*St+Br,So=P[Mn+va],Ko=q[Co+Br];Ae+=So*Ko}}}N[S*Lt+D*oe+I*pe+Ht]=Ae}}return e.makeTensorInfo(T.shape,T.dtype,T.values)}let VK={kernelName:Jb,backendName:"cpu",kernelFunc:WK};let GK={kernelName:df,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{let{x:r,filter:o}=n,{strides:s,pad:c,dilations:l}=e,p=t,f=p.data.get(r.dataId).values,m=r.shape.length,y=p.data.get(o.dataId).values,b=o.shape.length,{batchSize:v,inHeight:T,inWidth:N,inChannels:S,outHeight:D,outWidth:I,padInfo:P,strideHeight:E,strideWidth:L,filterHeight:B,filterWidth:q,dilationHeight:H,dilationWidth:Z,outShape:J}=od(r.shape,o.shape,s,c,"NHWC",l),it=G(J),pt=J.length,ht=rr(r.dtype,it);for(let ft=0;ft<v;++ft)for(let ut=0;ut<D;++ut){let bt=ut*E-P.top;for(let yt=0;yt<I;++yt){let xt=yt*L-P.left;for(let kt=0;kt<S;++kt){let Nt=Number.MIN_SAFE_INTEGER;for(let It=0;It<B;++It){let St=bt+It*H;if(St>=0&&St<T)for(let Lt=0;Lt<q;++Lt){let Ht=xt+Lt*Z;if(Ht>=0&&Ht<N){let oe=Kr([ft,St,Ht,kt],m,Yt(r.shape)),de=Kr([It,Lt,kt],b,Yt(o.shape)),ie=f[oe]+y[de];ie>Nt&&(Nt=ie)}}}let At=Kr([ft,ut,yt,kt],pt,Yt(J));ht[At]=Nt}}}let dt=p.write(Qs(ht,r.dtype),J,r.dtype);return{dataId:dt,shape:J,dtype:r.dtype}}};let UK={kernelName:gf,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{let{x:r,filter:o,dy:s}=n,{strides:c,pad:l,dilations:p}=e,f=t,m=Er(r.shape,f.data.get(r.dataId).values),y=Er(o.shape,f.data.get(o.dataId).values),{batchSize:b,inHeight:v,inWidth:T,inChannels:N,outHeight:S,outWidth:D,padInfo:I,strideHeight:P,strideWidth:E,filterHeight:L,filterWidth:B,dilationHeight:q,dilationWidth:H,outShape:Z}=od(r.shape,o.shape,c,l,"NHWC",p);_(s.rank===Z.length,()=>`Error in ${gf}, dy must have the same rank as output ${Z.length}, but got ${s.rank}`);let J=Er(Z,f.data.get(s.dataId).values),it=Lb(o.shape,o.dtype);for(let ht=0;ht<b;++ht)for(let dt=0;dt<S;++dt){let ft=dt*P-I.top;for(let ut=0;ut<D;++ut){let bt=ut*E-I.left;for(let yt=0;yt<N;++yt){let xt=Number.MIN_SAFE_INTEGER,kt=0,Nt=0;for(let At=0;At<L;++At){let It=ft+At*q;if(It>=0&&It<v)for(let St=0;St<B;++St){let Lt=bt+St*H;if(Lt>=0&&Lt<T){let Ht=m[ht][It][Lt][yt]+y[At][St][yt];Ht>xt&&(xt=Ht,kt=At,Nt=St)}}}it[kt][Nt][yt]+=J[ht][dt][ut][yt]}}}let pt=f.write(Qs(it,r.dtype),o.shape,o.dtype);return{dataId:pt,shape:o.shape,dtype:o.dtype}}};let qK={kernelName:mf,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{let{x:r,filter:o,dy:s}=n,{strides:c,pad:l,dilations:p}=e,f=t,m=Er(r.shape,f.data.get(r.dataId).values),y=Er(o.shape,f.data.get(o.dataId).values),{batchSize:b,inHeight:v,inWidth:T,inChannels:N,outHeight:S,outWidth:D,padInfo:I,strideHeight:P,strideWidth:E,filterHeight:L,filterWidth:B,dilationHeight:q,dilationWidth:H,outShape:Z}=od(r.shape,o.shape,c,l,"NHWC",p);_(s.rank===Z.length,()=>`Error in ${mf}, dy must have the same rank as output ${Z.length}, but got ${s.rank}`);let J=Er(Z,f.data.get(s.dataId).values),it=Lb(r.shape,r.dtype);for(let ht=0;ht<b;++ht)for(let dt=0;dt<S;++dt){let ft=dt*P-I.top;for(let ut=0;ut<D;++ut){let bt=ut*E-I.left;for(let yt=0;yt<N;++yt){let xt=Number.MIN_SAFE_INTEGER,kt=ft<0?0:ft,Nt=bt<0?0:bt;for(let At=0;At<L;++At){let It=ft+At*q;if(It>=0&&It<v)for(let St=0;St<B;++St){let Lt=bt+St*H;if(Lt>=0&&Lt<T){let Ht=m[ht][It][Lt][yt]+y[At][St][yt];Ht>xt&&(xt=Ht,kt=It,Nt=Lt)}}}it[ht][kt][Nt][yt]+=J[ht][dt][ut][yt]}}}let pt=f.write(Qs(it,r.dtype),r.shape,r.dtype);return{dataId:pt,shape:r.shape,dtype:r.dtype}}};let HK=Ti((n,t)=>n/t),jK=Qc(uc,HK),l1={kernelName:uc,backendName:"cpu",kernelFunc:jK};let KK=Yw,XK=Jw,YK=Zw,JK=Qw,ZK=tv,QK=ev,t5=Ee(fu,n=>{let t=Math.sign(n),e=Math.abs(n),r=1/(1+KK*e);return t*(1-((((QK*r+ZK)*r+JK)*r+YK)*r+XK)*r*Math.exp(-e*e))}),e5={kernelName:fu,backendName:"cpu",kernelFunc:t5};function hI(n,t,e){let r=n.shape,o=r[0],s=r[1],c=e.data.get(n.dataId),l=c.complexTensorInfos.real,p=c.complexTensorInfos.imag,f=[o,s],m=G(f),y=Ce("float32",m),b=Ce("float32",m);for(let S=0;S<o;S++){let D=s1({inputs:{x:l},backend:e,attrs:{begin:[S,0],size:[1,s]}}),I=s1({inputs:{x:p},backend:e,attrs:{begin:[S,0],size:[1,s]}}),P=_o({inputs:{real:D,imag:I},backend:e}),{real:E,imag:L}=n5(P,t,e),B=ys(E,L);for(let q=0;q<s;q++){let H=nv(B,q);y[S*s+q]=H.real,b[S*s+q]=H.imag}e.disposeIntermediateTensorInfo(D),e.disposeIntermediateTensorInfo(I),e.disposeIntermediateTensorInfo(P)}let v=e.makeTensorInfo(f,"float32",y),T=e.makeTensorInfo(f,"float32",b),N=_o({inputs:{real:v,imag:T},backend:e});return e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(T),N}function n5(n,t,e){let r=G(n.shape),o=e.data.get(n.dataId),s=e.data.get(o.complexTensorInfos.real.dataId).values,c=e.data.get(o.complexTensorInfos.imag.dataId).values;if(r5(r)){let l=u1(s,c,r,t,e),p=[n.shape[0],n.shape[1]];if(t){let f=e.makeTensorInfo(p,"float32",l.real),m=e.makeTensorInfo(p,"float32",l.imag),y=e.makeTensorInfo([],"float32",CN(r,"float32")),b=ba({inputs:{x:y},backend:e}),v=l1.kernelFunc({inputs:{a:f,b:y},backend:e}),T=l1.kernelFunc({inputs:{a:m,b},backend:e}),N=e.data.get(v.dataId).values,S=e.data.get(T.dataId).values;return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(T),{real:N,imag:S}}return l}else{let l=ys(s,c),p=o5(l,r,t);return gC(p)}}function r5(n){return(n&n-1)===0}function u1(n,t,e,r,o){if(e===1)return{real:n,imag:t};let s=ys(n,t),c=e/2,l=yC(s),p=l.real,f=l.imag,m=[p.length],y=o.makeTensorInfo(m,"float32",p),b=o.makeTensorInfo(m,"float32",f),v=_o({inputs:{real:y,imag:b},backend:o}),T=bC(s),N=T.real,S=T.imag,D=[N.length],I=o.makeTensorInfo(D,"float32",N),P=o.makeTensorInfo(D,"float32",S),E=_o({inputs:{real:I,imag:P},backend:o}),L=u1(p,f,c,r,o),B=L.real,q=L.imag,H=[B.length],Z=o.makeTensorInfo(H,"float32",B),J=o.makeTensorInfo(H,"float32",q),it=_o({inputs:{real:Z,imag:J},backend:o}),pt=u1(N,S,c,r,o),ht=pt.real,dt=pt.imag,ft=[ht.length],ut=o.makeTensorInfo(ft,"float32",ht),bt=o.makeTensorInfo(ft,"float32",dt),yt=_o({inputs:{real:ut,imag:bt},backend:o}),xt=wC(e,r),kt=[xt.real.length],Nt=o.makeTensorInfo(kt,"float32",xt.real),At=o.makeTensorInfo(kt,"float32",xt.imag),It=_o({inputs:{real:Nt,imag:At},backend:o}),St=Y$({inputs:{a:It,b:yt},backend:o}),Lt=th({inputs:{a:it,b:St},backend:o}),Ht=nI({inputs:{a:it,b:St},backend:o}),oe=Zp({inputs:{input:Lt},backend:o}),de=Zp({inputs:{input:Ht},backend:o}),ie=Em({inputs:{input:Lt},backend:o}),we=Em({inputs:{input:Ht},backend:o}),pe=eh({inputs:[oe,de],backend:o,attrs:{axis:0}}),Xe=eh({inputs:[ie,we],backend:o,attrs:{axis:0}}),on=o.data.get(pe.dataId).values,sn=o.data.get(Xe.dataId).values;return o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(v),o.disposeIntermediateTensorInfo(I),o.disposeIntermediateTensorInfo(P),o.disposeIntermediateTensorInfo(E),o.disposeIntermediateTensorInfo(Z),o.disposeIntermediateTensorInfo(J),o.disposeIntermediateTensorInfo(it),o.disposeIntermediateTensorInfo(ut),o.disposeIntermediateTensorInfo(bt),o.disposeIntermediateTensorInfo(yt),o.disposeIntermediateTensorInfo(Nt),o.disposeIntermediateTensorInfo(At),o.disposeIntermediateTensorInfo(It),o.disposeIntermediateTensorInfo(St),o.disposeIntermediateTensorInfo(Lt),o.disposeIntermediateTensorInfo(Ht),o.disposeIntermediateTensorInfo(oe),o.disposeIntermediateTensorInfo(ie),o.disposeIntermediateTensorInfo(de),o.disposeIntermediateTensorInfo(we),o.disposeIntermediateTensorInfo(pe),o.disposeIntermediateTensorInfo(Xe),{real:on,imag:sn}}function o5(n,t,e){let r=new Float32Array(t*2);for(let o=0;o<t;o++){let s=0,c=0;for(let l=0;l<t;l++){let p=vC(o*l,t,e),f=nv(n,l);s+=f.real*p.real-f.imag*p.imag,c+=f.real*p.imag+f.imag*p.real}e&&(s/=t,c/=t),xC(r,s,c,o)}return r}function s5(n){let{inputs:t,backend:e}=n,{input:r}=t,o=G(r.shape),s=r.shape[r.shape.length-1],c=o/s,l=Ho({inputs:{x:r},backend:e,attrs:{shape:[c,s]}}),p=hI(l,!1,e),f=Ho({inputs:{x:p},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(p),f}let i5={kernelName:yf,backendName:"cpu",kernelFunc:s5};function a5(n){let{backend:t,attrs:e}=n,{shape:r,value:o,dtype:s}=e,c=s||ic(o),l=rr(c,G(r));return l5(l,o,c),t.makeTensorInfo(r,c,l)}let c5={kernelName:Zb,backendName:"cpu",kernelFunc:a5};function l5(n,t,e){e==="string",n.fill(t)}let u5={kernelName:bf,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{let{image:r}=n,o=e,s=Ce(r.dtype,G(r.shape)),[c,l,p,f]=r.shape,m=o.data.get(r.dataId).values;for(let b=0;b<c;b++){let v=b*p*l*f;for(let T=0;T<l;T++){let N=T*(p*f);for(let S=0;S<p;S++){let D=S*f;for(let I=0;I<f;I++){let P=[c,T,S,I],E=P[2],L=Math.round(p-E),B=v+N+D+I,q=m[B];if(L>=0&&L<p){let H=L*f,Z=v+N+H+I;q=m[Z]}s[B]=q}}}}let y=o.write(s,r.shape,r.dtype);return{dataId:y,shape:r.shape,dtype:r.dtype}}};function p5(n){let{inputs:t,backend:e,attrs:r}=n,{x:o,filter:s,bias:c,preluActivationWeights:l}=t,{strides:p,pad:f,dataFormat:m,dilations:y,dimRoundingMode:b,activation:v}=r,T=uI({inputs:{x:o,filter:s},backend:e,attrs:{strides:p,pad:f,dataFormat:m,dilations:y,dimRoundingMode:b}});if(c){let N=T;T=th({inputs:{a:T,b:c},backend:e}),e.disposeIntermediateTensorInfo(N)}if(v){let N=T;T=a1(e,T,v,l),e.disposeIntermediateTensorInfo(N)}return T}let h5={kernelName:Of,backendName:"cpu",kernelFunc:p5};function f5(n){let{inputs:t,backend:e,attrs:r}=n,{x:o,filter:s,bias:c,preluActivationWeights:l}=t,{strides:p,pad:f,dataFormat:m,dilations:y,dimRoundingMode:b,activation:v}=r,T=pI({inputs:{x:o,filter:s},backend:e,attrs:{strides:p,pad:f,dataFormat:m,dilations:y,dimRoundingMode:b}});if(c){let N=T;T=th({inputs:{a:T,b:c},backend:e}),e.disposeIntermediateTensorInfo(N)}if(v){let N=T;T=a1(e,T,v,l),e.disposeIntermediateTensorInfo(N)}return T}let d5={kernelName:Lf,backendName:"cpu",kernelFunc:f5};function m5(n){let{inputs:t,backend:e}=n,{input:r}=t,o=G(r.shape),s=r.shape[r.shape.length-1],c=o/s,l=Ho({inputs:{x:r},backend:e,attrs:{shape:[c,s]}}),p=hI(l,!0,e),f=Ho({inputs:{x:p},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(p),f}let g5={kernelName:xf,backendName:"cpu",kernelFunc:m5};let y5=Ee(xu,n=>Number.isFinite(n)?1:0,"bool"),b5={kernelName:xu,backendName:"cpu",kernelFunc:y5};let x5=Ee(wu,n=>Math.abs(n)===Infinity?1:0,"bool"),w5={kernelName:wu,backendName:"cpu",kernelFunc:x5};let v5=Ee(vu,n=>Number.isNaN(n)?1:0,"bool"),T5={kernelName:vu,backendName:"cpu",kernelFunc:v5};let k5=Ee(ku,n=>Math.log1p(n)),N5={kernelName:ku,backendName:"cpu",kernelFunc:k5};let _5=Ee(vf,n=>n?0:1,"bool"),C5={kernelName:vf,backendName:"cpu",kernelFunc:_5};let S5={kernelName:Nu,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{let{x:r}=n,{reductionIndices:o,keepDims:s}=t,c=e,l=r.shape,p=l.length,f=Vt(o,l),m=f,y=ir(m,p),b=c.data.get(r.dataId).values;if(y!=null){let P=new Array(p);for(let E=0;E<P.length;E++)P[E]=l[y[E]];b=i1(b,l,r.dtype,y,P),m=xr(m.length,p),l=P}Ct(r,"max"),sr("max",m,p);let[v,T]=Fn(l,m),N=G(T),S=K$(b,N,v,r.dtype),D=c.write(S,v,r.dtype),I=v;if(s){let P=Rn(v,f);I=P}return{dataId:D,shape:I,dtype:r.dtype}}};function $5(n){let{inputs:t,backend:e,attrs:r}=n,{x:o}=t;Ct(o,"maxPool");let{filterSize:s,strides:c,pad:l,dimRoundingMode:p}=r,f=1;_(fn(c,f),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${c} and dilations '${f}'`);let m=Kn(o.shape,s,c,f,l,p),y;if(m.filterWidth===1&&m.filterHeight===1&&lt(m.inShape,m.outShape))y=ba({inputs:{x:o},backend:e});else{let b=e.data.get(o.dataId).values,v=Yt(o.shape),T=c1(b,o.shape,o.dtype,v,m,"max");y=e.makeTensorInfo(m.outShape,o.dtype,T.values)}return y}let I5={kernelName:_u,backendName:"cpu",kernelFunc:$5};function E5(n){let{inputs:t,backend:e,attrs:r}=n,{dy:o,input:s,output:c}=t,l=s;Ct([s,c],"maxPoolBackprop");let{filterSize:p,strides:f,pad:m,dimRoundingMode:y}=r,b=Kn(l.shape,p,f,1,m,y),v=e.data.get(l.dataId).values,T=Se(b.outShape,l.dtype,lI(v,l.shape,l.dtype,b).values),N=b.strideHeight,S=b.strideWidth,D=b.dilationHeight,I=b.dilationWidth,P=b.effectiveFilterHeight,E=b.effectiveFilterWidth,L=E-1-b.padInfo.left,B=P-1-b.padInfo.top,q=Se(l.shape,"float32"),H=e.data.get(o.dataId).values,Z=Se(o.shape,"float32",H);for(let J=0;J<b.batchSize;++J)for(let it=0;it<b.inChannels;++it)for(let pt=0;pt<b.inHeight;++pt)for(let ht=0;ht<b.inWidth;++ht){let dt=pt-B,ft=ht-L,ut=0;for(let bt=0;bt<P;bt+=D){let yt=(dt+bt)/N;if(yt<0||yt>=b.outHeight||Math.floor(yt)!==yt)continue;for(let xt=0;xt<E;xt+=I){let kt=(ft+xt)/S;if(kt<0||kt>=b.outWidth||Math.floor(kt)!==kt)continue;let Nt=P*E-1-T.get(J,yt,kt,it),At=bt*E+xt,It=Nt===At?1:0;if(It===0)continue;let St=Z.get(J,yt,kt,it);ut+=St*It}}q.set(ut,J,pt,ht,it)}return e.makeTensorInfo(q.shape,q.dtype,q.values)}let D5={kernelName:Tf,backendName:"cpu",kernelFunc:E5};function A5(n,t,e,r,o){let s=Yt(t),c=c1(n,t,e,s,o,"max"),l=lI(n,t,e,o,!0,r);return[c.values,l.values]}let F5={kernelName:kf,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{let{x:r}=n,{filterSize:o,strides:s,pad:c,includeBatchInIndex:l}=t,p=e;Ct(r,"MaxPoolWithArgmax");let f=p.data.get(r.dataId).values,m=Kn(r.shape,o,s,[1,1],c),[y,b]=A5(f,r.shape,r.dtype,l,m),v=p.write(y,m.outShape,r.dtype),T=p.write(b,m.outShape,r.dtype);return[{dataId:v,shape:m.outShape,dtype:r.dtype},{dataId:T,shape:m.outShape,dtype:"int32"}]}};function R5(n){let{inputs:t,backend:e,attrs:r}=n,{x:o}=t,{paddings:s,mode:c}=r;Ct(o,"mirrorPad");let l=s.map((P,E)=>P[0]+o.shape[E]+P[1]),p=s.map(P=>P[0]),f=s.map((P,E)=>P[0]+o.shape[E]),m=c==="reflect"?0:1,y=e.data.get(o.dataId).values,b=o.shape.length,v=Yt(o.shape),T=G(l),N=l.length,S=Yt(l),D=Ce(o.dtype,T);for(let P=0;P<T;P++){let E=Ui(P,N,S);for(let B=0;B<N;B++)E[B]<p[B]?E[B]=p[B]*2-E[B]-m:E[B]>=f[B]&&(E[B]=(f[B]-1)*2-E[B]+m);E=E.map((B,q)=>B-p[q]);let L=Kr(E,b,v);D[P]=y[L]}let I=e.write(D,l,o.dtype);return{dataId:I,shape:l,dtype:o.dtype}}let P5={kernelName:Cu,backendName:"cpu",kernelFunc:R5};let O5=Ld,L5={kernelName:Nf,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{let{boxes:r,scores:o}=n,{maxOutputSize:s,iouThreshold:c,scoreThreshold:l,padToMaxOutputSize:p}=e,f=t;Ct(r,"NonMaxSuppressionPadded");let m=f.data.get(r.dataId).values,y=f.data.get(o.dataId).values,{selectedIndices:b,validOutputs:v}=O5(m,y,s,c,l,p);return[b,v]}};let M5=Md,B5={kernelName:_f,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{let{boxes:r,scores:o}=n,{maxOutputSize:s,iouThreshold:c,scoreThreshold:l,softNmsSigma:p}=e,f=t;Ct(r,"NonMaxSuppressionWithScore");let m=f.data.get(r.dataId).values,y=f.data.get(o.dataId).values,b=s,v=c,T=l,N=p,{selectedIndices:S,selectedScores:D}=M5(m,y,b,v,T,N);return[S,D]}};function z5(n){let{inputs:t,backend:e,attrs:r}=n,{x:o}=t,{paddings:s,constantValue:c}=r;Ct(o,"pad");let l=s.map((I,P)=>I[0]+o.shape[P]+I[1]),p=s.map(I=>I[0]),f=e.data.get(o.dataId).values,m=G(o.shape),y=o.shape.length,b=Yt(o.shape),v=G(l),T=l.length,N=Yt(l),S=Ce(o.dtype,v);c!==0&&S.fill(c);for(let I=0;I<m;I++){let P=Ui(I,y,b),E=P.map((B,q)=>B+p[q]),L=Kr(E,T,N);S[L]=f[I]}let D=e.write(S,l,o.dtype);return{dataId:D,shape:l,dtype:o.dtype}}let fI={kernelName:Cf,backendName:"cpu",kernelFunc:z5};let W5=Ee($u,n=>1/n),V5={kernelName:$u,backendName:"cpu",kernelFunc:W5};let G5={kernelName:Rf,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{let{image:r}=n,{radians:o,fillValue:s,center:c}=t,l=e,p=Ce(r.dtype,G(r.shape)),[f,m,y,b]=r.shape,[v,T]=jw(c,m,y),N=255,S=Math.sin(o),D=Math.cos(o),I=l.data.get(r.dataId).values;for(let E=0;E<f;E++){let L=E*y*m*b;for(let B=0;B<m;B++){let q=B*(y*b);for(let H=0;H<y;H++){let Z=H*b;for(let J=0;J<b;J++){let it=[f,B,H,J],pt=it[2],ht=it[1],dt=(pt-v)*D-(ht-T)*S,ft=(pt-v)*S+(ht-T)*D;dt=Math.round(dt+v),ft=Math.round(ft+T);let ut=s;if(typeof s!="number"&&(J===3?ut=N:ut=s[J]),dt>=0&&dt<y&&ft>=0&&ft<m){let yt=ft*(y*b),xt=dt*b,kt=L+yt+xt+J;ut=I[kt]}let bt=L+q+Z+J;p[bt]=ut}}}}let P=l.write(p,r.shape,r.dtype);return{dataId:P,shape:r.shape,dtype:r.dtype}}};let U5=Ee(Au,n=>{let t=Math.floor(n);return n-t<.5?Math.floor(n):n-t>.5?Math.ceil(n):t%2===0?t:t+1}),q5={kernelName:Au,backendName:"cpu",kernelFunc:U5};let H5=zd,j5=Wd,K5=Ee(Ru,n=>n>=0?j5*n:H5*(Math.exp(n)-1)),X5={kernelName:Ru,backendName:"cpu",kernelFunc:K5};let Y5=Ee(Lu,n=>1/(1+Math.exp(-n))),J5={kernelName:Lu,backendName:"cpu",kernelFunc:Y5};let Z5=Ee(Ou,n=>n<0?-1:n>0?1:0),Q5={kernelName:Ou,backendName:"cpu",kernelFunc:Z5};let t8=Ee(hc,n=>Math.sin(n)),e8={kernelName:hc,backendName:"cpu",kernelFunc:t8};let n8=Ee(Pu,n=>Math.sinh(n)),r8={kernelName:Pu,backendName:"cpu",kernelFunc:n8};let o8=11920928955078125e-23,dI=Math.log(o8)+2,s8=Ee(Mu,n=>{let t=n>-dI,e=n<dI,r=Math.exp(n),o;return e?o=r:t?o=n:o=Math.log(1+r),o}),i8={kernelName:Mu,backendName:"cpu",kernelFunc:s8};function mI(n){let{inputs:t,attrs:e,backend:r}=n,{x:o}=t,{perm:s}=e;Ct(o,"transpose");let c=o.shape.length,l=new Array(c);for(let y=0;y<l.length;y++)l[y]=o.shape[s[y]];let p=r.data.get(o.dataId).values,f=i1(p,o.shape,o.dtype,s,l),m=r.write(f,l,o.dtype);return{dataId:m,shape:l,dtype:o.dtype}}let a8={kernelName:Wu,backendName:"cpu",kernelFunc:mI};function c8(n){let{inputs:t,backend:e,attrs:r}=n,{x:o}=t,{blockShape:s,paddings:c}=r;Ct([o],"spaceToBatchND");let l=G(s),p=[[0,0]];p.push(...c);for(let B=1+s.length;B<o.shape.length;++B)p.push([0,0]);let f=fI.kernelFunc({inputs:{x:o},backend:e,attrs:{paddings:p,constantValue:0}}),m=Np(f.shape,s,l,!1),y=_p(m.length,s.length,!1),b=Cp(f.shape,s,l,!1),v={x:f},T={shape:m},N=Ho({inputs:v,backend:e,attrs:T}),S={x:N},D={perm:y},I=mI({inputs:S,backend:e,attrs:D}),P={x:I},E={shape:b},L=Ho({inputs:P,backend:e,attrs:E});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(N),e.disposeIntermediateTensorInfo(I),L}let l8={kernelName:Ef,backendName:"cpu",kernelFunc:c8};let u8=Ee(Bu,n=>Math.sqrt(n)),p8={kernelName:Bu,backendName:"cpu",kernelFunc:u8};let h8={kernelName:Df,backendName:"cpu",kernelFunc:({inputs:n,backend:t})=>{let{x:e}=n,r=t;Ct(e,"square");let o=r.data.get(e.dataId).values,s=new Float32Array(o.length);for(let l=0;l<o.length;++l){let p=o[l];s[l]=p*p}let c=r.write(s,e.shape,e.dtype);return{dataId:c,shape:e.shape,dtype:e.dtype}}};let f8=Ee(Vu,(n,t)=>{let e=t;return isNaN(n)?NaN:n>0?1:e.alpha}),d8={kernelName:Vu,backendName:"cpu",kernelFunc:f8};let m8=Ee(mc,n=>Math.tan(n)),g8={kernelName:mc,backendName:"cpu",kernelFunc:m8};let y8=Ee(zu,n=>Math.tanh(n)),b8={kernelName:zu,backendName:"cpu",kernelFunc:y8};function x8(n){let{inputs:t,attrs:e,backend:r}=n,{axis:o}=e,{x:s}=t;Ct(s,"unique");let c=r.data.get(s.dataId).values,{outputValues:l,outputShape:p,indices:f}=rI(c,o,s.shape,s.dtype);return[r.makeTensorInfo(p,s.dtype,l),r.makeTensorInfo([f.length],"int32",f)]}let w8={kernelName:Af,backendName:"cpu",kernelFunc:x8};let v8=[tK,g6,nK,oK,T6,iK,cK,uK,hK,dK,gK,Z6,bK,w6,N6,wK,y6,TK,_K,SK,kK,DK,FK,IK,PK,LK,MK,zK,VK,GK,qK,UK,l1,H6,e5,C6,$6,i5,c5,u5,E6,h5,d5,b6,g5,vK,b5,w5,T5,A6,N5,C5,I5,D5,F5,S5,P5,R6,L5,B5,O6,fI,K6,x6,V5,X6,Y6,J6,G5,q5,M6,X5,J5,Q5,e8,r8,B6,i8,l8,p8,h8,W6,d8,G6,g8,b8,a8,w8];for(let n of v8)Bf(n);let ki={},p1={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Wst(n){delete ki[n]}function T8(n,t){ki[n]=t}function jo(n){if(!(n in ki)){let e=N8(n);if(e!==null)ki[n]=e;else return console.log("Could not get context for WebGL version",n),null}let t=ki[n];return t.isContextLost()?(delete ki[n],jo(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),ki[n])}function k8(n){if(typeof OffscreenCanvas!="undefined"&&n===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function N8(n){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=k8(n);return t.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete ki[n]},!1),n===1?t.getContext("webgl",p1)||t.getContext("experimental-webgl",p1):t.getContext("webgl2",p1)}var nh;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(nh||(nh={}));var Mr;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Mr||(Mr={}));var On;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(On||(On={}));function rh(n,t){return[t,n]}function _8(n,t){return n*t}function Vst(n,t){return[t*4,n]}function oh(n){let t=G(n),e=Math.ceil(t/4);return Gt(e)}function Gst(n,t){if(n%t!==0)throw new Error(`unpackedSize (${n}) must be a multiple of ${t}`);return n/t}function Ust(n,t,e){let r=n.length*e/4;if(t.length<r)throw new Error(`matrix length (${t.length}) must be >= ${r}`);let o=0;for(let s=0;s<n.length;s+=4)for(let c=0;c<e;c++)t[o++]=n[s+c]}function nl(n,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(n/2))]}function C8(n,t){let[e,r]=nl(n,t);return e*r*4}function h1(n,t){let e=n,r,o,s,c,l,p,f,m,y,b;return ct().getNumber("WEBGL_VERSION")===2?(r=e.R32F,o=e.R16F,s=e.RGBA16F,c=e.RGBA32F,l=e.RED,f=4,m=1,y=e.HALF_FLOAT,b=e.FLOAT):(r=n.RGBA,o=n.RGBA,s=n.RGBA,c=e.RGBA,l=n.RGBA,f=4,m=4,y=t!=null?t.HALF_FLOAT_OES:null,b=n.FLOAT),p=n.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:c,textureFormatFloat:l,downloadTextureFormat:p,downloadUnpackNumChannels:f,defaultNumChannels:m,textureTypeHalfFloat:y,textureTypeFloat:b}}function Rt(n,t){let e=t();return ct().getBool("DEBUG")&&S8(n),e}function S8(n){let t=n.getError();if(t!==n.NO_ERROR)throw new Error("WebGL Error: "+D8(n,t))}let $8=596e-10,I8=65504;function E8(n){return!!(ct().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||$8<Math.abs(n)&&Math.abs(n)<I8)}function D8(n,t){switch(t){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Dm(n,t){return ks(n,()=>n.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function A8(n,t){let e=ks(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Rt(n,()=>n.shaderSource(e,t)),Rt(n,()=>n.compileShader(e)),n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function F8(n,t){let e=ks(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Rt(n,()=>n.shaderSource(e,t)),Rt(n,()=>n.compileShader(e)),n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw P8(t,n.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}let R8=/ERROR: [0-9]+:([0-9]+):/g;function P8(n,t){let e=R8.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(n);return}let r=+e[1],o=n.split(`
`),s=o.length.toString().length+2,c=o.map((y,b)=>fe((b+1).toString(),s)+y),l=0;for(let y=0;y<c.length;y++)l=Math.max(c[y].length,l);let p=c.slice(0,r-1),f=c.slice(r-1,r),m=c.slice(r);console.log(p.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${fe(f[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(m.join(`
`))}function O8(n){return ks(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function L8(n,t){if(Rt(n,()=>n.linkProgram(t)),n.getProgramParameter(t,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function f1(n,t){if(Rt(n,()=>n.validateProgram(t)),n.getProgramParameter(t,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function M8(n,t){let e=ks(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Rt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),Rt(n,()=>n.bufferData(n.ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function B8(n,t){let e=ks(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Rt(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e)),Rt(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function qst(){return ct().getNumber("WEBGL_VERSION")===2?1:4}function z8(n){return ks(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function W8(n,t){let e=ct().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||t<=0){let r=`[${n}x${t}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(n>e||t>e){let r=`[${n}x${t}]`,o=`[${e}x${e}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+o+".")}}function V8(n){return ks(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function gI(n,t,e,r,o,s,c){let l=n.getAttribLocation(t,e);return l===-1?!1:(Rt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,r)),Rt(n,()=>n.vertexAttribPointer(l,o,n.FLOAT,!1,s,c)),Rt(n,()=>n.enableVertexAttribArray(l)),!0)}function G8(n,t,e){bI(n,e),Rt(n,()=>n.activeTexture(n.TEXTURE0+e)),Rt(n,()=>n.bindTexture(n.TEXTURE_2D,t))}function Hst(n,t){bI(n,t),Rt(n,()=>n.activeTexture(n.TEXTURE0+t)),Rt(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function U8(n,t,e){return ks(n,()=>n.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function q8(n,t,e){return n.getUniformLocation(t,e)}function H8(n,t,e,r){Rt(n,()=>G8(n,t,r)),Rt(n,()=>n.uniform1i(e,r))}function jst(n){Rt(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,null)),Rt(n,()=>n.viewport(0,0,n.canvas.width,n.canvas.height)),Rt(n,()=>n.scissor(0,0,n.canvas.width,n.canvas.height))}function d1(n,t,e){Rt(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),Rt(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0))}function yI(n,t){Rt(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),Rt(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Am(n){let t=n.checkFramebufferStatus(n.FRAMEBUFFER);if(t!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+j8(n,t))}function j8(n,t){switch(t){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function ks(n,t,e){let r=Rt(n,()=>t());if(r==null)throw new Error(e);return r}function bI(n,t){let e=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+n.TEXTURE0;if(r<n.TEXTURE0||r>e){let o=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${o}.`)}}function rl(n,t=2){return G(n.slice(0,n.length-t))}function ol(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function m1(n){let t=[1,1,1],e=n.length===0||n.length===1&&n[0]===1;return e||(t=[rl(n),...ol(n)]),t}function K8(n,t=!1){let e=ct().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(e=e*2,n=n.map((o,s)=>s>=n.length-2?k(n[s]):n[s]),n.length===1&&(n=[2,n[0]])),n.length!==2){let o=ln(n);n=o.newShape}let r=G(n);if(n.length<=1&&r<=e)return[1,r];if(n.length===2&&n[0]<=e&&n[1]<=e)return n;if(n.length===3&&n[0]*n[1]<=e&&n[2]<=e)return[n[0]*n[1],n[2]];if(n.length===3&&n[0]<=e&&n[1]*n[2]<=e)return[n[0],n[1]*n[2]];if(n.length===4&&n[0]*n[1]*n[2]<=e&&n[3]<=e)return[n[0]*n[1]*n[2],n[3]];if(n.length===4&&n[0]<=e&&n[1]*n[2]*n[3]<=e)return[n[0],n[1]*n[2]*n[3]];if(t){let o=rl(n),s=2,c=2;return n.length&&([s,c]=ol(n)),r=o*(s/2)*(c/2),Gt(r).map(l=>l*2)}return Gt(r)}function Fm(n){return n%2===0}function Rm(n,t){if(n=n.slice(-2),t=t.slice(-2),lt(n,t))return!0;if(!n.length||!t.length)return!0;if(n[0]===0||n[1]===0||t[0]===0||t[1]===0)return!0;if(n.length!==t.length){let e=n.slice(-1)[0],r=t.slice(-1)[0];if(e===r)return!0;if(Fm(e)&&Fm(r)&&(n[0]===1||t[0]===1))return!0}return n[1]===t[1]&&Fm(n[0])&&Fm(t[0])}let Pm,Om;function X8(n){if(Pm==null){let t=jo(n);Pm=t.getParameter(t.MAX_TEXTURE_SIZE)}return Pm}function Kst(){Pm=null}function Xst(){Om=null}function Y8(n){if(Om==null){let t=jo(n);Om=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Om)}function J8(n){if(n===0)return 0;let t,e=jo(n);return eo(e,"EXT_disjoint_timer_query_webgl2")&&n===2?t=2:eo(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function eo(n,t){let e=n.getExtension(t);return e!=null}function xI(n){try{let t=jo(n);if(t!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function Z8(n){if(n===0)return!1;let t=jo(n);if(n===1){if(!eo(t,"OES_texture_float"))return!1}else if(!eo(t,"EXT_color_buffer_float"))return!1;let e=g1(t);return e}function Q8(n){if(n===0)return!1;let t=jo(n);if(n===1){if(!eo(t,"OES_texture_float"))return!1;if(!eo(t,"WEBGL_color_buffer_float"))return!1}else{if(eo(t,"EXT_color_buffer_float"))return g1(t);let r="EXT_color_buffer_half_float";if(eo(t,r)){let o=t.getExtension(r);return tX(t,o)}return!1}let e=g1(t);return e}function g1(n){let t=h1(n),e=n.createTexture();n.bindTexture(n.TEXTURE_2D,e);let r=1,o=1;n.texImage2D(n.TEXTURE_2D,0,t.internalFormatFloat,r,o,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,s),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0);let c=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(e),n.deleteFramebuffer(s),c}function tX(n,t){let e=h1(n,t),r=n.createTexture();n.bindTexture(n.TEXTURE_2D,r);let o=1,s=1;n.texImage2D(n.TEXTURE_2D,0,e.internalFormatHalfFloat,o,s,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);let c=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,c),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,r,0);let l=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(r),n.deleteFramebuffer(c),l}function eX(n){if(n!==2)return!1;let t=jo(n),e=t.fenceSync!=null;return e}function sh(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&_(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}let qt=ct();qt.registerFlag("HAS_WEBGL",()=>qt.getNumber("WEBGL_VERSION")>0),qt.registerFlag("WEBGL_VERSION",()=>xI(2)?2:xI(1)?1:0),qt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),qt.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>qt.get("WEBGL_VERSION")===2),qt.registerFlag("WEBGL_CPU_FORWARD",()=>!0),qt.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),qt.registerFlag("WEBGL_PACK",()=>qt.getBool("HAS_WEBGL")),qt.registerFlag("WEBGL_PACK_NORMALIZATION",()=>qt.getBool("WEBGL_PACK")),qt.registerFlag("WEBGL_PACK_CLIP",()=>qt.getBool("WEBGL_PACK")),qt.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),qt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>qt.getBool("WEBGL_PACK")),qt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>qt.getBool("WEBGL_PACK")),qt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>qt.getBool("WEBGL_PACK")),qt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>qt.getBool("WEBGL_PACK")),qt.registerFlag("WEBGL_PACK_REDUCE",()=>qt.getBool("WEBGL_PACK")),qt.registerFlag("WEBGL_LAZILY_UNPACK",()=>qt.getBool("WEBGL_PACK")),qt.registerFlag("WEBGL_CONV_IM2COL",()=>qt.getBool("WEBGL_PACK")),qt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>X8(qt.getNumber("WEBGL_VERSION"))),qt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>Y8(qt.getNumber("WEBGL_VERSION"))),qt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let n=qt.getNumber("WEBGL_VERSION");return n===0?0:J8(n)}),qt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>qt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!PN()),qt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>Z8(qt.getNumber("WEBGL_VERSION"))),qt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>qt.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:qt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),qt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>Q8(qt.getNumber("WEBGL_VERSION"))),qt.registerFlag("WEBGL_FENCE_API_ENABLED",()=>eX(qt.getNumber("WEBGL_VERSION"))),qt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>{let n=qt.getBool("WEBGL_RENDER_FLOAT32_ENABLED");return n?4:0}),qt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});let{simpleAbsImpl:nX,addImpl:rX,ceilImpl:oX,expImpl:sX,expm1Impl:iX,floorImpl:aX,logImpl:cX,maxImpl:lX,multiplyImpl:uX,rsqrtImpl:pX,sliceImpl:hX,subImpl:fX,transposeImpl:y1,uniqueImpl:dX}=U6;class mX{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((s,c)=>`T${c}`);let r=[];this.variableNames.forEach(s=>{r.push(`float v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}}class gX{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((s,c)=>`T${c}`);let r=[];this.variableNames.forEach(s=>{r.push(`vec4 v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}}class yX{constructor(t,e,r){this.variableNames=["A"];let{windowSize:o,batchSize:s,outSize:c}=t;r||this.variableNames.push("bestIndicesA"),this.outputShape=[s,c];let l=e==="max"?">":"<",p=r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${p};
          float candidate = getA(batch, inIdx);
          if (candidate ${l} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}function wI(n,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${n}.${e}`)}function Yn(n,t){return t===1?[n]:wI(n,t)}function bX(n,t){if(n===1)return"rc";let e="";for(let r=0;r<n;r++)e+=t[r],r<n-1&&(e+=",");return e}function Jn(){let n,t,e,r,o,s,c,l,p,f;return ct().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",t="in",e="out",r="in",o="texture",s="outputColor",c="out vec4 outputColor;",l=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,p="",f=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",t="attribute",e="varying",r="varying",o="texture2D",s="gl_FragColor",c="",l=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,p=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,f=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:t,varyingVs:e,varyingFs:r,texture2D:o,output:s,defineOutput:c,defineSpecialNaN:l,defineSpecialInf:p,defineRound:f}}function xa(n,t,e="index"){let r=Yt(t);return r.map((o,s)=>{let c=`int ${n[s]} = ${e} / ${o}`,l=s===r.length-1?`int ${n[s+1]} = ${e} - ${n[s]} * ${o}`:`index -= ${n[s]} * ${o}`;return`${c}; ${l};`}).join("")}function Lm(n){return n.length===1?`${n[0]}`:`vec${n.length}(${n.join(",")})`}function Yst(n,t){if(n.length!==t.length)throw new Error(`Vectors to be dotted must be of the same length -got ${n.length} and ${t.length}`);let e=[],r=Math.floor(n.length/4),o=n.length%4;for(let s=0;s<r;s++){let c=n.slice(s*4,s*4+4),l=t.slice(s*4,s*4+4);e.push(`${Lm(c)}, ${Lm(l)}`)}if(o!==0){let s=n.slice(r*4),c=t.slice(r*4);s.length===1&&(s=s.map(l=>`float(${l})`),c=c.map(l=>`float(${l})`)),e.push(`${Lm(s)}, ${Lm(c)}`)}return e.map((s,c)=>`dot(${s})`).join("+")}function b1(n){let t=Yt(n).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}let vI=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;let{getBroadcastDims:TI}=ov;function xX(n,t,e,r){let o=[];n.forEach(T=>{let N=G(T.shapeInfo.logicalShape);T.shapeInfo.isUniform?o.push(`uniform float ${T.name}${N>1?`[${N}]`:""};`):(o.push(`uniform sampler2D ${T.name};`),o.push(`uniform int offset${T.name};`))});let s=o.join(`
`),c=n.map(T=>wX(T,t,r)).join(`
`),l=t.texShape,p=Jn(),f=kX(p),m,y,b=CX(p);t.isPacked?(m=vX(t.logicalShape,l),y=_X(p)):(m=TX(t.logicalShape,l),y=NX(p)),r&&(b+=EX);let v=[b,f,y,s,m,c,e].join(`
`);return v}function sl(n){let t=n.shapeInfo.logicalShape;switch(t.length){case 0:return VX(n);case 1:return UX(n);case 2:return HX(n);case 3:return KX(n);case 4:return YX(n);case 5:return JX(n);case 6:return ZX(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function kI(n){let t=n.shapeInfo.logicalShape;switch(t.length){case 0:return WX(n);case 1:return GX(n);case 2:return qX(n);case 3:return jX(n);default:return XX(n)}}function wX(n,t,e=!1){let r="";e?r+=kI(n):r+=sl(n);let o=n.shapeInfo.logicalShape,s=t.logicalShape;return o.length<=s.length&&(e?r+=QX(n,t):r+=tY(n,t)),r}function vX(n,t){switch(n.length){case 0:return NI();case 1:return DX(n,t);case 2:return BX(n,t);case 3:return FX(n,t);default:return PX(n,t)}}function TX(n,t){switch(n.length){case 0:return NI();case 1:return AX(n,t);case 2:return zX(n,t);case 3:return RX(n,t);case 4:return OX(n,t);case 5:return LX(n,t);case 6:return MX(n,t);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function kX(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function NX(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function _X(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function CX(n){let t=`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${SX}
    ${$X}
    ${IX}
  `;return t}let SX=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,$X=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,IX=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,EX=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function NI(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function DX(n,t){let e=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return e[0]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${e[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return 2 * (resTexRC.x * ${e[1]} + resTexRC.y);
    }
  `}function AX(n,t){return t[0]===1?`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function FX(n,t){let e=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(n[2]/2),o=r*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function RX(n,t){let e=xa(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${e}
      return ivec3(r, c, d);
    }
  `}function PX(n,t){let e=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(n[n.length-1]/2),o=r*Math.ceil(n[n.length-2]/2),s=o,c="",l="b, r, c";for(let p=2;p<n.length-1;p++)s*=n[n.length-p-1],c=`
      int b${p} = index / ${s};
      index -= b${p} * ${s};
    `+c,l=`b${p}, `+l;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${c}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${n.length}(${l});
    }
  `}function OX(n,t){let e=xa(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${e}
      return ivec4(r, c, d, d2);
    }
  `}function LX(n,t){let e=xa(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function MX(n,t){let e=xa(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function BX(n,t){let e=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(lt(n,t))return`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `;let r=Math.ceil(n[1]/2);return`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function zX(n,t){return lt(n,t)?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:n[1]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function wa(n){return`offset${n}`}function WX(n){let t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),r=Jn();return`
    vec4 ${e}() {
      return ${r.texture2D}(${t}, halfCR);
    }
  `}function VX(n){let t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${e}() {return ${t};}`;let[r,o]=n.shapeInfo.texShape;if(r===1&&o===1)return`
      float ${e}() {
        return sampleTexture(${t}, halfCR);
      }
    `;let[s,c]=n.shapeInfo.texShape,l=wa(t);return`
    float ${e}() {
      vec2 uv = uvFromFlat(${s}, ${c}, ${l});
      return sampleTexture(${t}, uv);
    }
  `}function GX(n){let t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=Jn();return`
    vec4 ${e}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${s.texture2D}(${t}, uv);
    }
  `}function UX(n){let t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${e}(int index) {
        ${il(n)}
      }
    `;let r=n.shapeInfo.texShape,o=r[0],s=r[1];if(s===1&&o===1)return`
      float ${e}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;let c=wa(t);return s===1?`
      float ${e}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${c}) + 0.5) / ${o}.0);
        return sampleTexture(${t}, uv);
      }
    `:o===1?`
      float ${e}(int index) {
        vec2 uv = vec2((float(index + ${c}) + 0.5) / ${s}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
    float ${e}(int index) {
      vec2 uv = uvFromFlat(${o}, ${s}, index + ${c});
      return sampleTexture(${t}, uv);
    }
  `}function qX(n){let t=n.shapeInfo.logicalShape,e=n.name,r="get"+e.charAt(0).toUpperCase()+e.slice(1),o=n.shapeInfo.texShape,s=o[0],c=o[1],l=Jn();if(o!=null&&lt(t,o))return`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${c}.0, ${s}.0);

        return ${l.texture2D}(${e}, uv);
      }
    `;let p=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],f=Math.ceil(t[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${f}, ${p[0]}, ${p[1]}, row, col);
      return ${l.texture2D}(${e}, uv);
    }
  `}function HX(n){let t=n.shapeInfo.logicalShape,e=n.name,r="get"+e.charAt(0).toUpperCase()+e.slice(1),o=n.shapeInfo.texShape;if(o!=null&&lt(t,o)){let y=o[0],b=o[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${b}.0, ${y}.0);
      return sampleTexture(${e}, uv);
    }
  `}let{newShape:s,keptDims:c}=ln(t),l=s;if(l.length<t.length){let y=al(n,l),b=["row","col"];return`
      ${sl(y)}
      float ${r}(int row, int col) {
        return ${r}(${cl(b,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${il(n)}
      }
    `;let p=o[0],f=o[1],m=wa(e);return f===1?`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${p}.0);
      return sampleTexture(${e}, uv);
    }
  `:p===1?`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${f}.0, 0.5);
      return sampleTexture(${e}, uv);
    }
  `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${m};
    vec2 uv = uvFromFlat(${p}, ${f}, index);
    return sampleTexture(${e}, uv);
  }
`}function jX(n){let t=n.shapeInfo.logicalShape,e=n.name,r="get"+e.charAt(0).toUpperCase()+e.slice(1),o=n.shapeInfo.texShape,s=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(t[0]===1){let y=t.slice(1),b=[1,2],v=al(n,y),T=["b","row","col"];return`
        ${kI(v)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${cl(T,b)});
        }
      `}let c=s[0],l=s[1],p=Math.ceil(t[2]/2),f=p*Math.ceil(t[1]/2),m=Jn();return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${c}, ${l}, ${f}, ${p}, b, row, col);
      return ${m.texture2D}(${e}, uv);
    }
  `}function KX(n){let t=n.shapeInfo.logicalShape,e=n.name,r="get"+e.charAt(0).toUpperCase()+e.slice(1),o=t[1]*t[2],s=t[2],{newShape:c,keptDims:l}=ln(t),p=c;if(p.length<t.length){let T=al(n,p),N=["row","col","depth"];return`
        ${sl(T)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${cl(N,l)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${s}, 1)));
        ${il(n)}
      }
    `;let f=n.shapeInfo.texShape,m=f[0],y=f[1],b=n.shapeInfo.flatOffset;if(y===o&&b==null)return`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${s}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${y}.0, ${m}.0);
          return sampleTexture(${e}, uv);
        }
      `;if(y===s&&b==null)return`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${y}.0, ${m}.0);
      return sampleTexture(${e}, uv);
    }
  `;let v=wa(e);return`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${s} + depth + ${v};
        vec2 uv = uvFromFlat(${m}, ${y}, index);
        return sampleTexture(${e}, uv);
      }
  `}function XX(n){let t=n.shapeInfo.logicalShape,e=t.length,r=n.name,o="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n.shapeInfo.texShape,c=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],l=c[0],p=c[1],f=Math.ceil(t[e-1]/2),m=f*Math.ceil(t[e-2]/2),y="int b, int row, int col",b=`b * ${m} + (row / 2) * ${f} + (col / 2)`;for(let T=2;T<e-1;T++)y=`int b${T}, `+y,m*=t[e-T-1],b=`b${T} * ${m} + `+b;let v=Jn();return`
    vec4 ${o}(${y}) {
      int index = ${b};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${l});
      return ${v.texture2D}(${r}, uv);
    }
  `}function YX(n){let t=n.shapeInfo.logicalShape,e=n.name,r="get"+e.charAt(0).toUpperCase()+e.slice(1),o=t[3],s=t[2]*o,c=t[1]*s,{newShape:l,keptDims:p}=ln(t);if(l.length<t.length){let T=al(n,l),N=["row","col","depth","depth2"];return`
      ${sl(T)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${cl(N,p)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${c}, ${s}, ${o}, 1)));
        ${il(n)}
      }
    `;let f=n.shapeInfo.flatOffset,m=n.shapeInfo.texShape,y=m[0],b=m[1];if(b===c&&f==null)return`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${b}.0, ${y}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(b===o&&f==null)return`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${b}.0, ${y}.0);
        return sampleTexture(${e}, uv);
      }
    `;let v=wa(e);return`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${s} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${y}, ${b}, index + ${v});
      return sampleTexture(${e}, uv);
    }
  `}function JX(n){let t=n.shapeInfo.logicalShape,e=n.name,r="get"+e.charAt(0).toUpperCase()+e.slice(1),o=t[4],s=t[3]*o,c=t[2]*s,l=t[1]*c,{newShape:p,keptDims:f}=ln(t);if(p.length<t.length){let N=al(n,p),S=["row","col","depth","depth2","depth3"];return`
      ${sl(N)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${cl(S,f)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${c}, ${s}, ${o})) +
          depth3;
        ${il(n)}
      }
    `;let m=n.shapeInfo.flatOffset,y=n.shapeInfo.texShape,b=y[0],v=y[1];if(v===l&&m==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${c}, ${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${v}.0, ${b}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(v===o&&m==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${v}.0, ${b}.0);
        return sampleTexture(${e}, uv);
      }
    `;let T=wa(e);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${c} + depth * ${s} +
          depth2 * ${o} + depth3 + ${T};
      vec2 uv = uvFromFlat(${b}, ${v}, index);
      return sampleTexture(${e}, uv);
    }
  `}function ZX(n){let t=n.shapeInfo.logicalShape,e=n.name,r="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:o,keptDims:s}=ln(t);if(o.length<t.length){let S=al(n,o),D=["row","col","depth","depth2","depth3","depth4"];return`
      ${sl(S)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${cl(D,s)});
      }
    `}let c=t[5],l=t[4]*c,p=t[3]*l,f=t[2]*p,m=t[1]*f;if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${m}, ${f}, ${p}, ${l})) +
          dot(
            vec2(depth3, depth4),
            vec2(${c}, 1)));
        ${il(n)}
      }
    `;let y=n.shapeInfo.flatOffset,b=n.shapeInfo.texShape,v=b[0],T=b[1];if(T===m&&y==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${f}, ${p}, ${l}, ${c})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${T}.0, ${v}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(T===c&&y==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${T}.0, ${v}.0);
        return sampleTexture(${e}, uv);
      }
    `;let N=wa(e);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${m} + col * ${f} + depth * ${p} +
          depth2 * ${l} + depth3 * ${c} + depth4 + ${N};
      vec2 uv = uvFromFlat(${v}, ${T}, index);
      return sampleTexture(${e}, uv);
    }
  `}function il(n){let t=n.name,e=G(n.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function QX(n,t){let e=n.name,r=e.charAt(0).toUpperCase()+e.slice(1),o="get"+r+"AtOutCoords",s=n.shapeInfo.logicalShape.length,c=t.logicalShape.length,l=TI(n.shapeInfo.logicalShape,t.logicalShape),p=Oe(c),f=c-s,m,y=["x","y","z","w","u","v"];s===0?m="":c<2&&l.length>=1?m="coords = 0;":m=l.map(I=>`coords.${y[I+f]} = 0;`).join(`
`);let b="";c<2&&s>0?b="coords":b=n.shapeInfo.logicalShape.map((I,P)=>`coords.${y[P+f]}`).join(", ");let v="return outputValue;",T=G(n.shapeInfo.logicalShape),N=T===1,S=G(t.logicalShape),D=S===1;if(s===1&&!N&&!D)v=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(N&&!D)c===1?v=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:v=`
        return vec4(outputValue.x);
      `;else if(l.length){let I=s-2,P=s-1;l.indexOf(I)>-1&&l.indexOf(P)>-1?v="return vec4(outputValue.x);":l.indexOf(I)>-1?v="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(P)>-1&&(v="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${p} coords = getOutputCoords();
      ${m}
      vec4 outputValue = get${r}(${b});
      ${v}
    }
  `}function tY(n,t){let e=n.name,r=e.charAt(0).toUpperCase()+e.slice(1),o="get"+r+"AtOutCoords",s=t.texShape,c=n.shapeInfo.texShape,l=n.shapeInfo.logicalShape.length,p=t.logicalShape.length;if(!n.shapeInfo.isUniform&&l===p&&n.shapeInfo.flatOffset==null&&lt(c,s))return`
      float ${o}() {
        return sampleTexture(${e}, resultUV);
      }
    `;let f=Oe(p),m=TI(n.shapeInfo.logicalShape,t.logicalShape),y=p-l,b,v=["x","y","z","w","u","v"];l===0?b="":p<2&&m.length>=1?b="coords = 0;":b=m.map(N=>`coords.${v[N+y]} = 0;`).join(`
`);let T="";return p<2&&l>0?T="coords":T=n.shapeInfo.logicalShape.map((N,S)=>`coords.${v[S+y]}`).join(", "),`
    float ${o}() {
      ${f} coords = getOutputCoords();
      ${b}
      return get${r}(${T});
    }
  `}function Oe(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function al(n,t){let e=JSON.parse(JSON.stringify(n));return e.shapeInfo.logicalShape=t,e}function cl(n,t){return t.map(e=>n[e]).join(", ")}class eY{constructor(t,e,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,_(t.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);let s=t[t.length-1],c=Math.ceil(s/e);this.outputShape=t.slice(0,-1),c>1&&this.outputShape.push(c),o||this.variableNames.push("bestIndicesA");let l=this.outputShape,p=l.length,f=Oe(p),m=Yn("coords",p),y,b;if(c===1){b=p+1;let H=Oe(b);y=`
        ${H} sourceLocR = ${H}(${m.join()}, 0);
        ++${m[p-1]};
        ${H} sourceLocG = ${H}(${m.join()}, 0);
        ++${m[p-2]};
        ${H} sourceLocA = ${H}(${m.join()}, 0);
        --${m[p-1]};
        ${H} sourceLocB = ${H}(${m.join()}, 0);
        --${m[p-2]};`}else b=p,y=`
        ${f} sourceLocR = coords;
        ++${m[p-1]};
        ${f} sourceLocG = coords;
        ++${m[p-2]};
        ${f} sourceLocA = coords;
        --${m[p-1]};
        ${f} sourceLocB = coords;
        --${m[p-2]};`;let v=["x","y","z","w","u","v"].slice(0,b),T="."+v[b-1],N=v.map(H=>"int "+H),S=Yn("sourceLocR",b-1).concat("inIdx.r"),D=Yn("sourceLocG",b-1).concat("inIdx.g"),I=Yn("sourceLocB",b-1).concat("inIdx.b"),P=Yn("sourceLocA",b-1).concat("inIdx.a"),E=r==="max"?"greaterThan":"lessThan",L=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${S.join()}),
                             getBestIndicesAChannel(${D.join()}),
                             getBestIndicesAChannel(${I.join()}),
                             getBestIndicesAChannel(${P.join()})));`,B=`vec4(
            getAChannel(${S.join()}),
            hasNextCol ? getAChannel(${D.join()}) : 0.,
            hasNextRow ? getAChannel(${I.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${P.join()}) : 0.)`,q=o?"":`
      float getBestIndicesAChannel(${N.join()}) {
        return getChannel(getBestIndicesA(${v.join()}),
                                          vec2(${v.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${N.join()}) {
        return getChannel(getA(${v.join()}),
                               vec2(${v.slice(-2).join()}));
      }
      ${q}
      void main() {
        ${f} coords = getOutputCoords();
        bool hasNextCol = ${m[p-1]} < ${l[p-1]-1};
        bool hasNextRow = ${m[p-2]} < ${l[p-2]-1};
        ${y}
        ivec4 srcIdx = ivec4(sourceLocR${T}, sourceLocG${T},
          sourceLocB${T}, sourceLocA${T}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${B};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${L}
          vec4 candidate = ${B};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${E}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}class nY{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterHeight,r=t.filterWidth,o=t.strideHeight,s=t.strideWidth,c=t.dilationHeight,l=t.dilationWidth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=p-1-t.padInfo.top,y=f-1-t.padInfo.left,b=1/(e*r);this.userCode=`
      const ivec2 pads = ivec2(${m}, ${y});
      const float avgMultiplier = float(${b});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p};
            wR += ${c}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${f};
            wC+= ${l}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class rY{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterDepth,r=t.filterHeight,o=t.filterWidth,s=t.strideDepth,c=t.strideHeight,l=t.strideWidth,p=t.dilationDepth,f=t.dilationHeight,m=t.dilationWidth,y=t.effectiveFilterDepth,b=t.effectiveFilterHeight,v=t.effectiveFilterWidth,T=y-1-t.padInfo.front,N=b-1-t.padInfo.top,S=v-1-t.padInfo.left,D=1/(e*r*o);this.userCode=`
      const ivec3 pads = ivec3(${T}, ${N}, ${S});
      const float avgMultiplier = float(${D});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${y};
            wD += ${p}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${b};
              wR += ${f}) {
            float dyR = float(dyRCorner + wR) / ${c}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${v};
                wC += ${m}) {
              float dyC = float(dyCCorner + wC) / ${l}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}let _I=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,oY=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,sY=`
if(a < 0.0 && floor(b) < b){
  return NAN;
}
if (b == 0.0) {
  return 1.0;
}
return (round(mod(b, 2.0)) != 1) ?
    pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Jst="return (a - b) * (a - b);",iY="return float(a == b);",aY="return float(a < b);",cY="return float(a <= b);",lY="return float(a > b);",uY="return float(a >= b);",pY="return float(a >= 1.0 && b >= 1.0);",hY="return float(a >= 1.0 || b >= 1.0);",fY=_I+`
  return max(a, b);
`,dY=_I+`
  return min(a, b);
`,mY=`if (b == 0.0) return NAN;
  return mod(a, b);`,gY="return (b >= 1.0) ? a : a * (b + 1.0);",CI="return (a < 0.) ? b * a : a;";class Hn{constructor(t,e,r){this.variableNames=["A","B"],this.outputShape=le(e,r),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}let Mm=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,yY=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,bY=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+Mm+`
  return result;
`,SI=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,xY=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,wY=`
  return vec4(equal(a, b));
`,Zst=`
  return vec4(notEqual(a, b));
`,vY=`
  return vec4(lessThan(a, b));
`,TY=`
  return vec4(lessThanEqual(a, b));
`,kY=`
  return vec4(greaterThan(a, b));
`,NY=`
  return vec4(greaterThanEqual(a, b));
`,_Y=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,CY=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,SY=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Mm+`
  return result;
`,$Y=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Mm+`
  return result;
`,IY=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+Mm+`
  return result;
`;class Ns{constructor(t,e,r,o=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=le(e,r);let s=this.outputShape.length,c="";if(o)if(s===0||G(this.outputShape)===1)c=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else{let l=Oe(s);if(c=`
          ${l} coords = getOutputCoords();
        `,s===1)c+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let p=Yn("coords",s);c+=`
            bool nextRowOutOfBounds =
              (${p[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${p[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${c}

        setOutput(result);
      }
    `}}class EY{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}getCustomSetupFunc(t,e){return(r,o)=>{this.minLoc==null&&(this.minLoc=r.getUniformLocationNoThrow(o,"minVal"),this.maxLoc=r.getUniformLocationNoThrow(o,"maxVal")),r.gl.uniform1f(this.minLoc,t),r.gl.uniform1f(this.maxLoc,e)}}}class DY{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}getCustomSetupFunc(t,e){return(r,o)=>{this.minLoc==null&&(this.minLoc=r.getUniformLocationNoThrow(o,"minVal"),this.maxLoc=r.getUniformLocationNoThrow(o,"maxVal")),r.gl.uniform1f(this.minLoc,t),r.gl.uniform1f(this.maxLoc,e)}}}class AY{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}class FY{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,r=t.strideWidth,o=t.padInfo.top,s=t.padInfo.left,c=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${s};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              if (${c}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class RY{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,r=t.filterWidth,o=t.strideHeight,s=t.strideWidth,c=t.dataFormat==="channelsLast",l=e-1-t.padInfo.top,p=r-1-t.padInfo.left,f=c?1:2,m=c?2:3,y=c?3:1;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${y}];

        ivec2 dyCorner = ivec2(coords[${f}], coords[${m}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${c}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class PY{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideDepth,r=t.strideHeight,o=t.strideWidth,s=t.padInfo.front,c=t.padInfo.top,l=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${s};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${c};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${l};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class OY{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterDepth,r=t.filterHeight,o=t.filterWidth,s=t.strideDepth,c=t.strideHeight,l=t.strideWidth,p=e-1-t.padInfo.front,f=r-1-t.padInfo.top,m=o-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${f}, ${m});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${c}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${l}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class LY{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,r=t.strideWidth,o=t.padInfo.top,s=t.padInfo.left,c=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${c} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${s};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class MY{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,r=t.filterWidth,o=t.strideHeight,s=t.strideWidth,c=e-1-t.padInfo.top,l=r-1-t.padInfo.left,p=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${c}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${p}; dm++) {
              int d2 = d1 * ${p} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class $I{constructor(t,e=!1,r=null,o=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;let s=t.padInfo.top,c=t.padInfo.left,l=t.strideHeight,p=t.strideWidth,f=t.dilationHeight,m=t.dilationWidth,y=t.filterHeight,b=t.filterWidth,v=Math.floor(t.inChannels/4)*4,T=t.inChannels%4,N=t.dataFormat==="channelsLast",S=N?1:2,D=N?2:3,I=N?3:1,P="",E="";r&&(o?P=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:P=`
          float activation(float x) {
            ${r}
          }
        `,E="result = activation(result);");let L=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.userCode=`
      ${P}

      const ivec2 strides = ivec2(${l}, ${p});
      const ivec2 pads = ivec2(${s}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${I}];

        ivec2 xRCCorner =
            ivec2(coords[${S}], coords[${D}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${y}; wR++) {
          int xR = xRCorner + wR * ${f};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${b}; wC++) {
            int xC = xCCorner + wC * ${m};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${v}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${N}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${T===1}) {

              if (${N}) {
                dotProd +=
                    getX(batch, xR, xC, ${v}) *
                    getW(wR, wC, ${v}, d2);
              } else {
                dotProd +=
                    getX(batch, ${v}, xR, xC) *
                    getW(wR, wC, ${v}, d2);
              }

            } else if (${T===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${v}, d2),
                getW(wR, wC, ${v} + 1, d2)
              );

              if (${N}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${v}),
                  getX(batch, xR, xC, ${v} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${v}, xR, xC),
                  getX(batch, ${v} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${T===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${v}, d2),
                getW(wR, wC, ${v} + 1, d2),
                getW(wR, wC, ${v} + 2, d2)
              );

              if (${N}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${v}),
                  getX(batch, xR, xC, ${v} + 1),
                  getX(batch, xR, xC, ${v} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${v}, xR, xC),
                  getX(batch, ${v} + 1, xR, xC),
                  getX(batch, ${v} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${L}
        ${E}
        setOutput(result);
      }
    `}}class BY{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;let e=t.padInfo.front,r=t.padInfo.top,o=t.padInfo.left,s=t.strideDepth,c=t.strideHeight,l=t.strideWidth,p=t.dilationDepth,f=t.dilationHeight,m=t.dilationWidth,y=t.filterDepth,b=t.filterHeight,v=t.filterWidth,T=Math.floor(t.inChannels/4)*4,N=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${c}, ${l});
      const ivec3 pads = ivec3(${e}, ${r}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${y}; wF++) {
          int xF = xFCorner + wF * ${p};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${b}; wR++) {
            int xR = xRCorner + wR * ${f};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${v}; wC++) {
              int xC = xCCorner + wC * ${m};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${T}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${N===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${T}) *
                  getW(wF, wR, wC, ${T}, d2);
              } else if (${N===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${T}),
                  getX(batch, xF, xR, xC, ${T} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${T}, d2),
                  getW(wF, wR, wC, ${T} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${N===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${T}),
                  getX(batch, xF, xR, xC, ${T} + 1),
                  getX(batch, xF, xR, xC, ${T} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${T}, d2),
                  getW(wF, wR, wC, ${T} + 1, d2),
                  getW(wF, wR, wC, ${T} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class II{constructor(t,e=!1,r=null,o=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;let s=t.inHeight,c=t.inWidth,l=t.padInfo.top,p=t.padInfo.left,f=t.strideHeight,m=t.strideWidth,y=t.dilationHeight,b=t.dilationWidth,v=t.filterHeight,T=t.filterWidth,N=t.outChannels/t.inChannels,S="",D="";r&&(o?S=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:S=`
          float activation(float x) {
            ${r}
          }
        `,D="result = activation(result);");let I=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.userCode=`
      ${S}

      const ivec2 strides = ivec2(${f}, ${m});
      const ivec2 pads = ivec2(${l}, ${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${N};
        int q = d2 - d1 * ${N};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${v}; wR++) {
          int xR = xRCorner + wR * ${y};

          if (xR < 0 || xR >= ${s}) {
            continue;
          }

          for (int wC = 0; wC < ${T}; wC++) {
            int xC = xCCorner + wC * ${b};

            if (xC < 0 || xC >= ${c}) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${I}
        ${D}
        setOutput(result);
      }
    `}}class EI{constructor(t,e=!1,r=null,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;let s=t.inHeight,c=t.inWidth,l=t.padInfo.top,p=t.padInfo.left,f=t.strideHeight,m=t.strideWidth,y=t.dilationHeight,b=t.dilationWidth,v=t.filterHeight,T=t.filterWidth,N=T,S="int xR; int xC; int xCOffset;";for(let E=0;E<v;E++)for(let L=0;L<T;L++)S+=`
          vec4 xTexelR${E}C${L*2} = vec4(0.);
          vec4 wR${E}C${L} = vec4(0.);
          vec4 xR${E}C${L} = vec4(0.);`;for(let E=0;E<v;E++)for(let L=0;L<N;L++){let B=L*2;if(S+=`
          xR = xRCorner + ${E*y};
          xC = xCCorner + ${B*b};
        `,m===1){if(B<T&&(p%2===1?S+=`
                xCOffset = xC + 1;
                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${c}) {
                  xTexelR${E}C${B} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${c}) {
                    xTexelR${E}C${B}.zw = vec2(0.);
                  }
                } else {
                  xTexelR${E}C${B} = vec4(0.);
                }

                xCOffset = xC + 1 - 2;
                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${c}) {
                  vec4 previous = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${c}) {
                    previous.zw = vec2(0.);
                  }

                  xR${E}C${B} = vec4(previous.zw, xTexelR${E}C${B}.xy);
                } else {
                  xR${E}C${B} = vec4(0, 0, xTexelR${E}C${B}.xy);
                }
              `:S+=`
                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${c}) {
                  xTexelR${E}C${B} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${E}C${B} = vec4(0.);
                }

                xR${E}C${B} = xTexelR${E}C${B};
              `,B+1<T)){let q=p%2===0?k(b):b;b%2===0&&p%2===1||b%2!==0&&p%2!==1?(S+=`
                  xCOffset = xC + ${p%2} + ${q};

                  if(xR >= 0 && xR < ${s} &&
                    xCOffset >= 0 && xCOffset < ${c}) {
                    xTexelR${E}C${B+2} = getX(batch, xR, xCOffset, d1);
                  }
                `,b>1&&(S+=`
                    xCOffset -= 2;
                    if(xR >= 0 && xR < ${s} &&
                      xCOffset >= 0 && xCOffset < ${c}) {
                      xTexelR${E}C${B} = getX(batch, xR, xCOffset, d1);
                    } else {
                      xTexelR${E}C${B} = vec4(0.);
                    }
                  `),S+=`
                  xR${E}C${B+1} = vec4(
                    xTexelR${E}C${B}.zw, xTexelR${E}C${B+2}.xy);
                `):S+=`
                  xCOffset = xC + ${q};

                  if(xR >= 0 && xR < ${s} &&
                    xCOffset >= 0 && xCOffset < ${c}) {
                    xTexelR${E}C${B+2} = getX(batch, xR, xCOffset, d1);
                  }

                  xR${E}C${B+1} = xTexelR${E}C${B+2};
                `}}else B<T&&(S+=`
              if(xR >= 0 && xR < ${s}) {
            `,p%2===1?(S+=`
                xCOffset = xC + 1 - ${m};
                if(xCOffset >= 0 && xCOffset < ${c}) {
                  xTexelR${E}C${B} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${E}C${B} = vec4(0.);
                }

                if(xC + 1 >= 0 && xC + 1 < ${c}) {
                  xTexelR${E}C${B+2} = getX(batch, xR, xC + 1, d1);
                } else {
                  xTexelR${E}C${B+2} = vec4(0.);
                }

                xR${E}C${B} = vec4(
                  xTexelR${E}C${B}.zw, xTexelR${E}C${B+2}.zw);
              `,B+1<T&&(S+=`
                  vec4 final = vec4(0.);
                  xCOffset = xC + 1 + ${m};
                  if(xCOffset >= 0 && xCOffset < ${c}) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xR${E}C${B+1} = vec4(xTexelR${E}C${B+2}.xy, final.xy);
                `)):(S+=`
                if(xC >= 0 && xC < ${c}) {
                  xTexelR${E}C${B} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${E}C${B} = vec4(0.);
                }

                xCOffset = xC + ${m};
                if(xCOffset >= 0 && xCOffset < ${c}) {
                  xTexelR${E}C${B+2} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${E}C${B+2} = vec4(0.);
                }

                xR${E}C${B} = vec4(
                  xTexelR${E}C${B}.xy, xTexelR${E}C${B+2}.xy);
              `,B+1<T&&(S+=`
                  xR${E}C${B+1} = vec4(
                    xTexelR${E}C${B}.zw, xTexelR${E}C${B+2}.zw);
                `)),S+="}");B<T&&(S+=`
            vec4 wTexelR${E}C${B} = getW(${E}, ${B}, d1, q);
            wR${E}C${B} = vec4(wTexelR${E}C${B}.xz, wTexelR${E}C${B}.xz);
          `,B+1<T&&(S+=`
              vec4 wTexelR${E}C${B+1} = getW(${E}, ${B+1}, d1, q);
              wR${E}C${B+1} =
                vec4(wTexelR${E}C${B+1}.xz, wTexelR${E}C${B+1}.xz);`))}for(let E=0;E<v;E++)for(let L=0;L<T;L++)S+=`dotProd += xR${E}C${L} * wR${E}C${L};`;let D="",I="";r&&(o?D=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:D=`vec4 activation(vec4 x) {
          ${r}
        }`,I="result = activation(result);");let P=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.userCode=`
      ${D}

      const ivec2 strides = ivec2(${f}, ${m});
      const ivec2 pads = ivec2(${l}, ${p});

      void main() {

        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2;
        int q = 0;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        vec4 dotProd = vec4(0.);

        ${S}

        vec4 result = dotProd;
        ${P}
        ${I}
        setOutput(result);
      }
    `}}class zY{constructor(t,e,r,o,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[c,l,p,f]=t,[m]=e,[y,b]=r;this.outputShape=[m,y,b,f];let v=o==="bilinear"?1:0,[T,N]=[`${l-1}.0`,`${p-1}.0`],[S,D,I]=y>1?[`${(l-1)/(y-1)}`,"(y2-y1) * height_ratio",`y1*${T} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${T}`],[P,E,L]=b>1?[`${(p-1)/(b-1)}`,"(x2-x1) * width_ratio",`x1*${N} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${N}`];this.userCode=`
      const float height_ratio = float(${S});
      const float width_ratio = float(${P});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${c}) {
          return;
        }

        float height_scale = ${D};
        float width_scale = ${E};

        float in_y = ${I};
        if( in_y < 0.0 || in_y > ${T} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${L};
        if( in_x < 0.0 || in_x > ${N} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${v} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}class DI{constructor(t,e,r){this.variableNames=["x"],this.outputShape=t;let o=t.length,s=e?"0.0":`getX(${AI(o,"coords")})`,c=t[t.length-1],l="",p="";e?(l=r?`end != ${c-1}`:"end != 0",p=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${c}`:"end >= pow2",p=r?"end + pow2":"end - pow2"),this.userCode=`
      uniform float index;
      void main() {
        ${Oe(o)} coords = getOutputCoords();
        int end = ${FI(o,"coords")};
        float val = ${s};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${p};
          ${FI(o,"coords")} = idx;
          val += getX(${AI(o,"coords")});
        }
        setOutput(val);
      }
    `}getCustomSetupFunc(t){return(e,r)=>{this.index==null&&(this.index=e.getUniformLocation(r,"index")),e.gl.uniform1f(this.index,t)}}}function AI(n,t){if(n===1)return`${t}`;if(n===2)return`${t}.x, ${t}.y`;if(n===3)return`${t}.x, ${t}.y, ${t}.z`;if(n===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${n} is not yet supported`)}function FI(n,t){if(n===1)return`${t}`;if(n===2)return`${t}.y`;if(n===3)return`${t}.z`;if(n===4)return`${t}.w`;throw Error(`Cumulative sum for rank ${n} is not yet supported`)}class WY{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=nh.DENSE;let e=oh(t),r=Jn();this.outputShape=t,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${xa(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${e[0]}, ${e[1]}));
        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${r.output} = result;
      }
    `}}class VY{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=nh.DENSE;let e=oh(t),r=Jn();this.outputShape=t,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${xa(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${e[0]}, ${e[1]}));
        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${r.output} = result;
      }
    `}}class GY{constructor(t,e,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class UY{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}class qY{constructor(t){this.variableNames=["A"],this.outTexUsage=Mr.DOWNLOAD;let e=Jn();this.outputShape=t,this.userCode=`
      ${vI}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}}class HY{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Mr.DOWNLOAD;let e=Jn();this.outputShape=t,this.userCode=`
      ${vI}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}}class jY{constructor(t,e,r=!1){this.variableNames=["A"];let o=Jn(),[s,c]=e;this.outputShape=t;let l="result";r&&(l="floor(result * 255. + 0.5)"),this.userCode=`
      ${b1(t)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / ${c};
        int c = imod(flatIndex, ${c});
        vec2 uv = (vec2(c, r) + halfCR) / vec2(${c}.0, ${s}.0);
        vec4 values = ${o.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${o.output} = vec4(${l}, 0., 0., 0.);
      }
    `}}class KY{constructor(t,e,r=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let o=Jn(),[s,c]=e;this.outputShape=t;let l="",p="result";r&&(p="floor(result * 255. + 0.5)");for(let f=0;f<=1;f++)for(let m=0;m<=1;m++){let y=f*2+m;l+=`
          localCoords = coords;
          if(localCoords[2] + ${m} < ${t[2]}) {
            localCoords[2] += ${m};
            if(localCoords[1] + ${f} < ${t[1]}) {
              localCoords[1] += ${f};

              flatIndex = getFlatIndex(localCoords);
              offset = imod(flatIndex, 4);

              flatIndex = idiv(flatIndex, 4, 1.);

              r = flatIndex / ${c};
              c = imod(flatIndex, ${c});
              uv = (vec2(c, r) + halfCR) / vec2(${c}.0, ${s}.0);
              values = ${o.texture2D}(A, uv);

              if(offset == 0) {
                result[${y}] = values[0];
              } else if(offset == 1) {
                result[${y}] = values[1];
              } else if(offset == 2) {
                result[${y}] = values[2];
              } else {
                result[${y}] = values[3];
              }
            }
          }
        `}this.userCode=`
      ${b1(t)}

      void main() {
        ivec3 coords = getOutputCoords();

        vec4 result = vec4(0.);
        int flatIndex, r, c, offset;
        ivec3 localCoords;
        vec2 uv;
        vec4 values;

        ${l}

        ${o.output} = ${p};
      }
    `}}class XY{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      uniform float value;
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}getCustomSetupFunc(t){return(e,r)=>{this.valueLoc==null&&(this.valueLoc=e.getUniformLocationNoThrow(r,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class YY{constructor(t,e,r){this.variableNames=["A","indices"];let o=t.slice();o[r]=e,this.outputShape=o,this.rank=o.length;let s=Oe(this.rank),c=JY(t,r);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${c}));
      }
    `}}function JY(n,t){let e=n.length;if(e>4)throw Error(`Gather for rank ${e} is not yet supported`);if(e===1)return"int(getIndices(resRC))";let r=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[];for(let s=0;s<n.length;s++)s===t?o.push(`int(getIndices(${r[s]}))`):o.push(`${r[s]}`);return o.join()}class ZY{constructor(t,e,r){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=r;let o=Oe(e.length),s=Oe(r.length),c=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${this.strides});
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${c};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}}function QY(n){let t=Jn(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return A8(n,e)}function t7(n){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return M8(n,t)}function e7(n){let t=new Uint16Array([0,1,2,2,1,3]);return B8(n,t)}function ih(n,t,e,r,o,s){W8(t,e);let c=z8(n),l=n.TEXTURE_2D;return Rt(n,()=>n.bindTexture(l,c)),Rt(n,()=>n.texParameteri(l,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),Rt(n,()=>n.texParameteri(l,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),Rt(n,()=>n.texParameteri(l,n.TEXTURE_MIN_FILTER,n.NEAREST)),Rt(n,()=>n.texParameteri(l,n.TEXTURE_MAG_FILTER,n.NEAREST)),Rt(n,()=>n.texImage2D(l,0,r,t,e,0,o,s,null)),Rt(n,()=>n.bindTexture(n.TEXTURE_2D,null)),c}function RI(n){return n.internalFormatFloat}function n7(n,t,e,r){let[o,s]=rh(t,e);return ih(n,o,s,RI(r),r.textureFormatFloat,n.FLOAT)}function PI(n){return n.internalFormatHalfFloat}function r7(n,t,e,r){let[o,s]=rh(t,e);return ih(n,o,s,PI(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function OI(n){return n.downloadTextureFormat}function o7(n,t,e,r){let[o,s]=rh(t,e);return ih(n,o,s,OI(r),n.RGBA,n.UNSIGNED_BYTE)}function LI(n){return n.internalFormatPackedFloat}function s7(n,t,e,r){let[o,s]=nl(t,e);return ih(n,o,s,LI(r),n.RGBA,n.FLOAT)}function MI(n){return n.internalFormatPackedHalfFloat}function i7(n,t,e,r){let[o,s]=nl(t,e);return ih(n,o,s,MI(r),n.RGBA,r.textureTypeHalfFloat)}function a7(n,t,e){let r=0,o=3*4,s=3*4+2*4;Rt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e));let c=gI(n,t,"clipSpacePos",e,3,s,r);return c&&gI(n,t,"uv",e,2,s,o)}function c7(n,t,e,r,o,s){Rt(n,()=>n.bindTexture(n.TEXTURE_2D,t));let c,l,p;o instanceof Uint8Array?(c=new Uint8Array(e*r*4),l=n.UNSIGNED_BYTE,p=n.RGBA):(c=new Float32Array(e*r*4),l=n.FLOAT,p=s.internalFormatPackedFloat),c.set(o),Rt(n,()=>n.texImage2D(n.TEXTURE_2D,0,p,e,r,0,n.RGBA,l,c)),Rt(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function l7(n,t,e){Rt(n,()=>n.bindTexture(n.TEXTURE_2D,t)),e.data instanceof Uint8Array?Rt(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,e.width,e.height,0,n.RGBA,n.UNSIGNED_BYTE,e.data)):Rt(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e)),Rt(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function u7(n,t,e,r){let o=n.createBuffer();Rt(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,o));let s=4,c=4,l=s*c*t*e;return Rt(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,l,n.STREAM_READ)),Rt(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,0)),Rt(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),o}function p7(n,t,e){let r=n,o=new Float32Array(e);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,o),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),o}function h7(n,t,e,r){let[o,s]=rh(t,e),c=4,l=new Uint8Array(_8(t*e,c));return Rt(n,()=>n.readPixels(0,0,o,s,r.downloadTextureFormat,n.UNSIGNED_BYTE,l)),new Float32Array(l.buffer)}function f7(n,t,e,r,o,s,c,l){let p=n,f=new Float32Array(C8(s,c));return p.bindBuffer(p.PIXEL_PACK_BUFFER,t),p.getBufferSubData(p.PIXEL_PACK_BUFFER,0,f),p.bindBuffer(p.PIXEL_PACK_BUFFER,null),f}function d7(n,t,e){let r=new Float32Array(t*e*4);return Rt(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,r)),r}class m7{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let e=ct().getNumber("WEBGL_VERSION");t!=null?(this.gl=t,T8(e,t)):this.gl=jo(e);let r="WEBGL_color_buffer_float",o="EXT_color_buffer_half_float";if(ct().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",c="OES_texture_half_float";if(this.textureFloatExtension=Dm(this.gl,s),eo(this.gl,c))this.textureHalfFloatExtension=Dm(this.gl,c);else if(ct().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),eo(this.gl,o))this.colorBufferHalfFloatExtension=Dm(this.gl,o);else if(ct().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",eo(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(eo(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=t7(this.gl),this.indexBuffer=e7(this.gl),this.framebuffer=V8(this.gl),this.textureConfig=h1(this.gl,this.textureHalfFloatExtension)}get debug(){return ct().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let t=this.gl;Rt(t,()=>t.finish()),Rt(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Rt(t,()=>t.deleteFramebuffer(this.framebuffer)),Rt(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Rt(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Rt(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),n7(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),r7(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),o7(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),l7(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,r,o){this.throwIfDisposed(),c7(this.gl,t,e,r,o,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),i7(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),s7(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(yI(this.gl,this.framebuffer),this.outputTexture=null),Rt(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,r){return this.downloadMatrixDriver(t,()=>h7(this.gl,e,r,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,r,o,s,c){return f7(this.gl,t,e,r,o,s,c,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return p7(this.gl,t,e)}createBufferFromTexture(t,e,r){this.bindTextureToFrameBuffer(t);let o=u7(this.gl,e,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){let t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,r;if(ct().getBool("WEBGL_FENCE_API_ENABLED")){let o=t,s=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),r=()=>{let c=o.clientWaitSync(s,0,0);return c===o.ALREADY_SIGNALED||c===o.CONDITION_SATISFIED},e=s}else ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(e,ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:e,isFencePassed:r}}downloadMatrixFromPackedTexture(t,e,r){return this.downloadMatrixDriver(t,()=>d7(this.gl,e,r))}createProgram(t){this.throwIfDisposed();let e=this.gl,r=F8(e,t),o=QY(e),s=O8(e);return Rt(e,()=>e.attachShader(s,o)),Rt(e,()=>e.attachShader(s,r)),L8(e,s),this.debug&&f1(e,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=a7(e,this.program,this.vertexBuffer)),s}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&Rt(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&f1(this.gl,this.program),Rt(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,r=!0){return this.throwIfDisposed(),r?U8(this.gl,t,e):q8(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Rt(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,r){this.throwIfDisposed(),this.throwIfNoProgram(),H8(this.gl,t,e,r)}setOutputMatrixTexture(t,e,r){this.setOutputMatrixTextureDriver(t,r,e)}setOutputPackedMatrixTexture(t,e,r){this.throwIfDisposed();let[o,s]=nl(e,r);this.setOutputMatrixTextureDriver(t,o,s)}setOutputMatrixWriteRegion(t,e,r,o){this.setOutputMatrixWriteRegionDriver(r,t,o,e)}setOutputPackedMatrixWriteRegion(t,e,r,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&f1(this.gl,this.program),Am(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let t=this.gl;this.debug&&this.debugValidate(),Rt(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Rt(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Dm(this.gl,ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let r=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=r.createQuery();return r.beginQuery(o.TIME_ELAPSED_EXT,s),s}let t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let e=this.gl,r=this.getQueryTimerExtensionWebGL2();e.endQuery(r.TIME_ELAPSED_EXT);return}let t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await _e(()=>this.disposed||this.isQueryAvailable(t,ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){let r=this.gl,o=r.getQueryParameter(t,r.QUERY_RESULT);return o/1e6}else{let r=this.getQueryTimerExtensionWebGL1(),o=r.getQueryObjectEXT(t,r.QUERY_RESULT_EXT);return o/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){let r=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=r.getQueryParameter(t,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let r=this.getQueryTimerExtensionWebGL1(),o=r.getQueryObjectEXT(t,r.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){let t=g7(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){let{resolveFn:r}=this.itemsToPoll[e];r()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;_e(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),d1(this.gl,t,this.framebuffer),this.debug&&Am(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(d1(this.gl,this.outputTexture,this.framebuffer),this.debug&&Am(this.gl)):yI(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);let r=e();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(t,e,r){this.throwIfDisposed();let o=this.gl;d1(o,t,this.framebuffer),this.debug&&Am(o),this.outputTexture=t,Rt(o,()=>o.viewport(0,0,e,r)),Rt(o,()=>o.scissor(0,0,e,r))}setOutputMatrixWriteRegionDriver(t,e,r,o){this.throwIfDisposed(),Rt(this.gl,()=>this.gl.scissor(t,e,r,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function g7(n){let t=0;for(;t<n.length;++t){let e=n[t]();if(!e)break}return t-1}function y7(n,t,e,r){let o=t.userCode,s=e.map((v,T)=>{let N={logicalShape:v.shape,texShape:v.isUniform?null:v.texData.texShape,isUniform:v.isUniform,isPacked:v.isUniform?!1:v.texData.isPacked,flatOffset:null};return v.texData!=null&&v.texData.slice!=null&&v.texData.slice.flatOffset>0&&(N.flatOffset=v.texData.slice.flatOffset),{name:t.variableNames[T],shapeInfo:N}}),c=s.map(v=>v.shapeInfo),l={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},p=xX(s,l,o,t.packedInputs),f=n.createProgram(p),m=null,y=n.getUniformLocation(f,"NAN",!1);ct().getNumber("WEBGL_VERSION")===1&&(m=n.getUniformLocation(f,"INFINITY",!1));let b={};for(let v=0;v<t.variableNames.length;v++){let T=t.variableNames[v],N=!1;b[T]=n.getUniformLocation(f,T,N),b[`offset${T}`]=n.getUniformLocation(f,`offset${T}`,N)}return{program:t,source:p,webGLProgram:f,uniformLocations:b,inShapeInfos:c,outShapeInfo:l,infLoc:m,nanLoc:y}}function BI(n,t){if(n.length!==t.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${t.length} inputs`);n.forEach((e,r)=>{let o=e.logicalShape,s=t[r],c=s.shape;if(!lt(o,c))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${c} must match`);if(e.isUniform&&s.isUniform)return;let l=e.texShape,p=s.isUniform?null:s.texData.texShape;if(!lt(l,p))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${l} and ${p} must match`)})}function b7(n,t,e,r,o){BI(t.inShapeInfos,e),BI([t.outShapeInfo],[r]);let s=r.texData.texture,c=r.texData.texShape;r.texData.isPacked?n.setOutputPackedMatrixTexture(s,c[0],c[1]):n.setOutputMatrixTexture(s,c[0],c[1]),n.setProgram(t.webGLProgram),ct().getNumber("WEBGL_VERSION")===1&&(t.infLoc!==null&&n.gl.uniform1f(t.infLoc,Infinity)),t.nanLoc!==null&&n.gl.uniform1f(t.nanLoc,NaN),e.forEach((l,p)=>{let f=t.program.variableNames[p],m=t.uniformLocations[f],y=t.uniformLocations[`offset${f}`];if(m==null)return;if(l.isUniform){if(G(l.shape)<2)n.gl.uniform1f(m,l.uniformValues[0]);else{let b=l.uniformValues;b instanceof Float32Array||(b=new Float32Array(b)),n.gl.uniform1fv(m,b)}return}l.texData.slice!=null&&y!=null&&n.gl.uniform1i(y,l.texData.slice.flatOffset),n.setInputMatrixTexture(l.texData.texture,m,p)}),o!=null&&o(n,t.webGLProgram),n.executeProgram()}function x7(n,t,e){let r="";t.concat(e).forEach(c=>{let l=c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0,p=c.isUniform?"uniform":c.texData.texShape;r+=`${c.shape}_${p}_${l}`});let o=n.userCode,s=n.constructor.name;return s+="_"+r+"_"+o,s}class w7{constructor(t,e,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let{filterWidth:o,inChannels:s,strideWidth:c,strideHeight:l,padInfo:p,outWidth:f,dilationWidth:m,dilationHeight:y,dataFormat:b}=r,{left:v,top:T}=p,N=s*o,S=Jn(),D=b==="channelsLast",I=D?0:1,P=D?1:2,E="";for(let L=0;L<=1;L++)for(let B=0;B<=1;B++)E+=`
          blockIndex = rc.y + ${B};
          pos = rc.x + ${L};

          if(blockIndex < ${t[1]} && pos < ${t[0]}) {
            offsetY = int(blockIndex / (${f})) * ${l} - ${T};
            d0 = offsetY + ${y} * (pos / ${N});

            if(d0 < ${e[I]} && d0 >= 0) {

              offsetX = int(mod(float(blockIndex), ${f}.) * ${c}. - ${v}.);
              d1 = offsetX + ${m} * (int(mod(float(pos), ${N}.) / ${s}.));

              if(d1 < ${e[P]} && d1 >= 0) {

                ch = int(mod(float(pos), ${s}.));

                if (${D}) {
                  innerDims = vec2(d1, ch);
                  result[${L*2+B}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${L*2+B}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${E}

        ${S.output} = result;
      }
    `}}class v7{constructor(t,e,r,o,s){this.variableNames=["x"],this.outputShape=[];let c=e,l=t[3]-1;this.outputShape=t;let p,f=`float(${r}) + float(${o}) * sum`;s===.5?p=`inversesqrt(${f})`:s===1?p=`1.0/(${f})`:p=`exp(log(${f}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${c}; j <= ${c}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${l}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${p};
        setOutput(val);
      }
    `}}class T7{constructor(t,e,r,o,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=r,this.alpha=o,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${s})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}class k7{constructor(t,e,r,o,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let c=e,l=t[3]-1;this.outputShape=t;let p,f=`float(${r}) + float(${o}) * sum`;s===.5?p=`inversesqrt(${f})`:s===1?p=`1.0/(${f})`:p=`exp(log(${f}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${c};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${c}; j <= ${c}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${l}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${p};
        setOutput(result);
      }
    `}}class N7{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideHeight,r=t.strideWidth,o=t.dilationHeight,s=t.effectiveFilterHeight,c=t.effectiveFilterWidth,l=s-1-t.padInfo.top,p=c-1-t.padInfo.left,f=s*c-1;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${f} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${c} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class _7{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideDepth,r=t.strideHeight,o=t.strideWidth,s=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,p=t.effectiveFilterDepth,f=t.effectiveFilterHeight,m=t.effectiveFilterWidth,y=p-1-t.padInfo.front,b=f-1-t.padInfo.top,v=m-1-t.padInfo.left,T=p*f*m-1;this.userCode=`
      const ivec3 pads = ivec3(${y}, ${b}, ${v});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${f};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${m};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${T} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${f} * ${m} +
                  wR * ${m} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class x1{constructor(t,e,r,o=!1,s=!1,c=!1,l=null,p=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r;let f=o?t[1]:t[2],m=Math.ceil(f/2),y=o?"i * 2, rc.y":"rc.y, i * 2",b=s?"rc.z, i * 2":"i * 2, rc.z",v=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],T=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],N="",S="";l&&(p?N=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${l}
        }`:N=`vec4 activation(vec4 x) {
          ${l}
        }`,S="result = activation(result);");let D=c?"result += getBiasAtOutCoords();":"";c&&this.variableNames.push("bias"),p&&this.variableNames.push("preluActivationWeights");let I="rc.x",P="rc.x";t[0]<e[0]?I=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(P=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`
      ${N}

      const float sharedDimension = ${m}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${m}; i++) {
          int batchA = ${I};
          int batchB = ${P};
          vec4 a = getMatrixA(batchA, ${y});
          vec4 b = getMatrixB(batchB, ${b});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${v[0]} * ${T[0]});
          result += (${v[1]} * ${T[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${D}

        ${S}

        setOutput(result);
      }
    `}}class C7{constructor(t,e,r){this.variableNames=["probs"],this.outputShape=[t,r],this.userCode=`
      uniform float seed;

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}getCustomSetupFunc(t){return(e,r)=>{this.seedLoc==null&&(this.seedLoc=e.getUniformLocation(r,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}class S7{constructor(t,e,r,o){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${r}),
                      float(index == coords.y)));
      }
    `}}class $7{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;let e=t.length;if(e===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let r=Yn("rc",e),o=Oe(e),s=E7(e,t,r),c=D7(e,t[t.length-1],t[t.length-2],r),l=A7(t,r);this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${c}

            setOutput(vec4(${l}));
          }
        }
      `}}}function I7(n,t){let e=[];for(let r=0;r<=1;r++)for(let o=0;o<=1;o++){let s=`${r===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let c=2;c<n;c++)s=`${t[t.length-1-c]},`+s;e.push(s)}return e}function E7(n,t,e){if(n===1)return`rc > ${t[0]}`;let r="";for(let o=n-2;o<n;o++)r+=`${e[o]} >= ${t[o]}`,o<n-1&&(r+="||");return r}function D7(n,t,e,r){if(n===1)return"";let o=r.slice(-2);return`
    int r = ${o[0]};
    int c = ${o[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${t};
    bool rEdge = rp1 >= ${e};
  `}function A7(n,t){let e=n.length,r=I7(e,t);return e===1?`getA(rc),
            rc + 1 >= ${n[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${r[0]}),
          cEdge ? 0. : getA(${r[1]}),
          rEdge ? 0. : getA(${r[2]}),
          rEdge || cEdge ? 0. : getA(${r[3]})`}class F7{constructor(t,e,r){this.variableNames=["x"],this.outputShape=e.map((f,m)=>f[0]+t[m]+f[1]);let o=t.length,s=Oe(o),c=e.map(f=>f[0]).join(","),l=e.map((f,m)=>f[0]+t[m]).join(","),p=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${c};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(float(${r}));
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${c});
      ${s} end = ${s}(${l});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(float(${r}));
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${p}));
        }
      }
    `}}class R7{constructor(t,e,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((N,S)=>N[0]+t[S]+N[1]);let o=t.length,s=Oe(o),c=e.map(N=>N[0]).join(","),l=e.map((N,S)=>N[0]+t[S]).join(","),p=Yn("rc",o),f=Yn("source",o),m=`${p[o-1]} < ${this.outputShape[o-1]}`,y=o===1?"source":`vec2(${f.slice(-2).join()})`,b=[`${s} rc = outputLoc;`,`${p[o-1]} += 1;
       if(${m}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${p[o-2]} += 1;
       if(${p[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${p[o-1]} += 1;
         if(${m}) {`],v=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",T="";for(let N=0,S=o===1?2:4;N<S;N++)T+=`
        ${b[N]}
        if (${v}) {
          result[${N}] = float(${r});
        } else {
          ${s} source = rc - start;
          result[${N}] = getChannel(getX(${f.join()}), ${y});
        }
      `;T+=o===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${c});
      const ${s} end = ${s}(${l});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${T}
        setOutput(result);
      }
    `}}class ah{constructor(t,e,r,o=!1,s=!1){if(this.variableNames=["x"],e==="avg"&&r)throw new Error("Cannot compute positions for average pool.");let c=t.filterWidth,l=t.strideHeight,p=t.strideWidth,f=t.dilationHeight,m=t.dilationWidth,y=t.effectiveFilterHeight,b=t.effectiveFilterWidth,v=t.padInfo.top,T=t.padInfo.left;this.outputShape=t.outShape;let N=e==="avg",S=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,D=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`,I="0.0";if(N||(I="-1.0 / 1e-20"),r){let H=">=";this.userCode=`
        const ivec2 strides = ivec2(${l}, ${p});
        const ivec2 pads = ivec2(${v}, ${T});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${y};
              wR += ${f}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${b};
                wC += ${m}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${H} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?s?S:D:`wR * ${b} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let P="max",E=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(E="avgValue / count");let L=Math.floor(c/4)*4,B=c%4,q=`
      if (${N}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${P}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${l}, ${p});
      const ivec2 pads = ivec2(${v}, ${T});
      const float initializationValue = ${I};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${I});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${y};
            wR += ${f}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${L}; wC += 4) {
            int xC = xCCorner + wC * ${m};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${m}, d),
              getValue(batch, xR, xC + 2 * ${m}, d),
              getValue(batch, xR, xC + 3 * ${m}, d)
            );

            ${q}
          }

          int xC = xCCorner + ${L};
          if (${B===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${q}
          } else if (${B===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${m}, d),
              initializationValue,
              initializationValue
            );

            ${q}
          } else if (${B===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${m}, d),
              getValue(batch, xR, xC + 2 * ${m}, d),
              initializationValue
            );

            ${q}
          }
        }
        setOutput(${E});
      }
    `}}class w1{constructor(t,e,r,o=!1,s=!1){if(this.variableNames=["x"],e==="avg"&&r)throw new Error("Cannot compute positions for average pool.");let c=t.filterWidth,l=t.strideDepth,p=t.strideHeight,f=t.strideWidth,m=t.dilationDepth,y=t.dilationHeight,b=t.dilationWidth,v=t.effectiveFilterDepth,T=t.effectiveFilterHeight,N=t.effectiveFilterWidth,S=t.padInfo.front,D=t.padInfo.top,I=t.padInfo.left;this.outputShape=t.outShape;let P=e==="avg",E="0.0";if(P||(E="-1.0 / 1e-20"),r){let J=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${l}, ${p}, ${f});
        const ivec3 pads = ivec3(${S}, ${D}, ${I});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${v};
              wD += ${m}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${T};
                wR += ${y}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${N};
                  wC += ${b}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${J} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${T} * ${N} +
                      wR * ${N} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let L="max",B=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(B="avgValue / count");let q=Math.floor(c/4)*4,H=c%4,Z=`
      if (${P}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${L}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${l}, ${p}, ${f});
      const ivec3 pads = ivec3(${S}, ${D}, ${I});
      const float initializationValue = ${E};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${E});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${v};
            wD += ${m}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${T};
            wR += ${y}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${q}; wC += 4) {
              int xC = xCCorner + wC * ${b};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${b}, ch),
                getValue(batch, xD, xR, xC + 2 * ${b}, ch),
                getValue(batch, xD, xR, xC + 3 * ${b}, ch)
              );

              ${Z}
            }

            int xC = xCCorner + ${q};
            if (${H===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${Z}
            } else if (${H===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${b}, ch),
                initializationValue,
                initializationValue
              );

              ${Z}
            } else if (${H===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${b}, ch),
                getValue(batch, xD, xR, xC + 2 * ${b}, ch),
                initializationValue
              );

              ${Z}
            }
          }
          setOutput(${B});
        }
      }
    `}}class zI{constructor(t,e){this.variableNames=["x"];let{windowSize:r,batchSize:o,inSize:s,outSize:c}=t;this.outputShape=[o,c];let l="0.0",p="";e==="prod"?l="1.0":e==="min"?(l="1.0 / 1e-20",p="min"):e==="max"&&(l="-1.0 / 1e-20",p="max");let f=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?f="sumValue":e==="prod"?f="prodValue":e==="all"?f="allValue":e==="any"&&(f="anyValue");let m=Math.floor(r/4)*4,y=r%4,b=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${p}(values, minMaxValue);
      }
    `,v="vec4";e==="all"?(l="1.0",b=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,v="bvec4"):e==="any"&&(l="0.0",b=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,v="bvec4");let T="";s%r>0&&(T=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${l};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${T}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${l});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${m}; i += 4) {
          int inIdx = inOffset + i;
          ${v} values = ${v}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${b}
        }

        int inIdx = inOffset + ${m};
        if (${y===1}) {
          ${v} values = ${v}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${b}
        } else if (${y===2}) {
          ${v} values = ${v}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${b}
        } else if (${y===3}) {
          ${v} values = ${v}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${b}
        }
        setOutput(${f});
      }
    `}}class WI{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let r="";for(let o=0;o<4;o++){let s="thisRC = rc;";o%2===1&&(s+="thisRC.z += 1;"),o>1&&(s+="thisRC.y += 1;"),r+=`
        ${s}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${P7(e)}
      ${b1(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${t[1]};
        int cols = ${t[2]};

        ${r}

        setOutput(result);
      }
    `}}function P7(n){let t=xa(["r","c","d"],n);return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t}
      return ivec3(r, c, d);
    }
  `}class O7{constructor(t,e,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;let[,o,s]=e.shape,[,c,l]=t.shape,p=[r&&c>1?o-1:o,r&&l>1?s-1:s],f=[r&&c>1?c-1:c,r&&l>1?l-1:l],m=p[0]/f[0],y=p[1]/f[1],b=1/m,v=1/y,T=Math.ceil(b)*2+2,N=Math.ceil(v)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${m});
        const float widthScale = float(${y});

        const float invHeightScale = float(${b});
        const float invWidthScale = float(${v});

        const int winHeight = int(${T});
        const int winWidth = int(${N});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${c}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${l}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}class L7{constructor(t,e,r,o){this.variableNames=["A"],this.outputShape=[];let[s,c,l,p]=t;this.outputShape=[s,e,r,p];let f=[o&&e>1?c-1:c,o&&r>1?l-1:l],m=[o&&e>1?e-1:e,o&&r>1?r-1:r];this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${f[0]/m[0]},
          ${f[1]/m[1]});
      const vec2 inputShapeRC = vec2(${c}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}class M7{constructor(t,e,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,c,l,p]=t;this.outputShape=[s,e,r,p];let f=[o&&e>1?c-1:c,o&&r>1?l-1:l],m=[o&&e>1?e-1:e,o&&r>1?r-1:r];this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${f[0]/m[0]},
          ${f[1]/m[1]},
          ${f[1]/m[1]});
      const vec3 inputShapeRC = vec3(${c}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${p-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}class B7{constructor(t,e,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;let[,o,s]=e.shape,[,c,l]=t.shape,p=[r&&c>1?o-1:o,r&&l>1?s-1:s],f=[r&&c>1?c-1:c,r&&l>1?l-1:l],m=p[0]/f[0],y=p[1]/f[1],b=1/m,v=1/y,T=Math.ceil(b)*2+2,N=Math.ceil(v)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${m});
        const float widthScale = float(${y});

        const float invHeightScale = float(${b});
        const float invWidthScale = float(${v});

        const int winHeight = int(${T});
        const int winWidth = int(${N});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${c}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${l}) {
              continue;
            }

            float sourceFracRow =
              float(${p[0]}) *
                (float(dyR) / float(${f[0]}));

            float sourceFracCol =
                float(${p[1]}) *
                  (float(dyC) / float(${f[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}class z7{constructor(t,e,r,o){this.variableNames=["A"],this.outputShape=[];let[s,c,l,p]=t;this.outputShape=[s,e,r,p];let f=[o&&e>1?c-1:c,o&&r>1?l-1:l],m=[o&&e>1?e-1:e,o&&r>1?r-1:r],y=o?"0.5":"0.0";this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${f[0]/m[0]},
          ${f[1]/m[1]});
      const vec2 inputShapeRC = vec2(${c}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${y})));

        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}class W7{constructor(t,e){this.variableNames=["x"];let r=t.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=t,r===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}let o=l=>e.indexOf(l)!==-1&&t[l]!==1?`${t[l]} - coords[${l}] - 1`:`coords[${l}]`,s=t.map((l,p)=>o(p)).join(","),c=Oe(r);this.userCode=`
      void main() {
        ${c} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}}class V7{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let r=t.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=t;let o=Yn("rc",r),s=`${o[r-1]} + 1 < ${this.outputShape[r-1]}`,c=`${o[r-2]} + 1 < ${this.outputShape[r-2]}`,l=Oe(r);r===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${l} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${p(o.slice())};
          if(${s}){
            result.g = ${f(o.slice())};
          }
          if(${c}) {
            result.b = ${m(o.slice())};
            if(${s}) {
              result.a = ${y(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function p(T){return b(T)}function f(T){return T[r-1]="("+T[r-1]+" + 1)",b(T)}function m(T){return T[r-2]="("+T[r-2]+" + 1)",b(T)}function y(T){return T[r-1]="("+T[r-1]+" + 1)",T[r-2]="("+T[r-2]+" + 1)",b(T)}function b(T){let N=t.map((I,P)=>v(P,T)),S=N.join(","),D=N.slice(-2).join(",");return`getChannel(getX(${S}), vec2(${D}))`}function v(T,N){return e.indexOf(T)!==-1&&t[T]!==1?`${t[T]} - ${N[T]} - 1`:`${N[T]}`}}}class VI{constructor(t,e,r,o,s,c,l=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=c;let p=Oe(s.length),f=Oe(c.length),m="";r===1?m="i":r===2&&(m="i, j");let y=`getIndices(${m})`,b="";o===1?b="i":o===2&&(b="i, coords[1]");let v=`getUpdates(${b})`,T=e>1?"strides[j]":"strides";this.userCode=`
        ${p} strides = ${p}(${s});

        void main() {
          ${f} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${y});
              flattenedIndex += index * ${T};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${v};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}class G7{constructor(t,e){this.variableNames=["x","segmentIds"];let r=t.windowSize,o=t.batchSize,s=t.inSize,c=t.numSegments,l=c*Math.ceil(s/r);this.outputShape=[o,l];let p="0.0",f="sumValue",m=Math.floor(r/4)*4,y=r%4,b=`
        sumValue += dot(values, segFilter);
    `,v="";s%r>0&&(v=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let T="";s%r>0&&(T=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${p};

      float getValue(int batch, int inIdx) {
        ${v}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${T}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${c})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${c})));

        float sumValue = 0.0;

        for (int i = 0; i < ${m}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${b}
        }

        int inIdx = inOffset + ${m};
        if (${y===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${b}
        } else if (${y===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${b}
        } else if (${y===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${b}
        }
        setOutput(${f});
      }
    `}}class U7{constructor(t,e,r){this.variableNames=["c","a","b"],this.outputShape=e;let o,s;if(r>4)throw Error(`Where for rank ${r} is not yet supported`);if(r===1)s="resRC",o="resRC";else{let l=["resRC.x","resRC.y","resRC.z","resRC.w"],p=[],f=[];for(let m=0;m<e.length;m++)f.push(`${l[m]}`),m<t&&p.push(`${l[m]}`);o=p.join(),s=f.join()}let c=Oe(r);this.userCode=`
      void main() {
        ${c} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}}class q7{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;let e=Oe(this.rank),r=`uniform int start[${this.rank}];`,o=H7(this.rank),s,c=t.map((l,p)=>`sourceLoc.${v1[p]} = start[${p}] + coords.${v1[p]};`);s=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${c.join(`
`)}
      `,this.userCode=`
      ${r}
      void main() {
        ${s}
        setOutput(getSource(${o}));
      }
    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,r)=>{if(this.startLoc==null&&(this.startLoc=e.getUniformLocationNoThrow(r,"start"),this.startLoc==null))return;e.gl.uniform1iv(this.startLoc,t)}}}let v1=["x","y","z","w","u","v"];function H7(n){if(n===1)return"sourceLoc";if(n<=6)return v1.slice(0,n).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}class j7{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;let e=Oe(this.rank),r=Yn("coords",this.rank),o=Yn("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,c=`getChannel(getSource(${o.join()}), ${s})`,l=`
      result.x = ${c};
      if (++${r[this.rank-1]} < ${t[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${c};
        --${o[this.rank-1]};
      }
    `,p=this.rank===1?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${t[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${c};
        if (++${r[this.rank-1]} < ${t[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${c};
        }
      }
    `,f=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((m,y)=>`start[${y}]`).join()});`:t.map((m,y)=>`${o[y]} = ${r[y]} + start[${y}];`).join(`
`);this.userCode=`
      uniform int start[${this.rank}];
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${f}
        vec4 result = vec4(0.);
        ${l}
        ${p}
        setOutput(result);
      }
    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,r)=>{if(this.startLoc==null&&(this.startLoc=e.getUniformLocationNoThrow(r,"start"),this.startLoc==null))return;e.gl.uniform1iv(this.startLoc,t)}}}class K7{constructor(t,e,r){this.variableNames=["x"],this.outputShape=r;let o=r.length,s=Oe(r.length),c=Oe(r.length),l="";if(o===1)l="coords * strides + begin";else{let p=0;l=r.map((f,m)=>(p++,r.length===1?`coords * strides[${m}] + begin[${m}]`:`coords[${p-1}] * strides[${m}] + begin[${m}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${t});
      ${s} strides = ${s}(${e});

      void main() {
        ${c} coords = getOutputCoords();
        setOutput(getX(${l}));
      }
    `}}class X7{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,r){let o=UI(e,r),s=qI(t,o,r);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let c=GI(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=c,this.log();let p=this.freeTextures[s].shift();return this.usedTextures[s].push(p),p}let l;return o===On.PACKED_2X2_FLOAT32?l=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):o===On.PACKED_2X2_FLOAT16?l=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):o===On.UNPACKED_FLOAT32?l=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):o===On.UNPACKED_FLOAT16?l=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):o===On.PACKED_4X1_UNSIGNED_BYTE&&(l=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(l),this.numUsedTextures++,this._numBytesAllocated+=c,this.log(),l}releaseTexture(t,e,r,o){if(this.freeTextures==null)return;let s=UI(r,o),c=qI(e,s,o);c in this.freeTextures||(this.freeTextures[c]=[]);let l=GI(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,o),p=ct().get("WEBGL_DELETE_TEXTURE_THRESHOLD");p!==-1&&this._numBytesAllocated>p?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=l):(this.freeTextures[c].push(t),this.numFreeTextures++,this._numBytesFree+=l),this.numUsedTextures--;let f=this.usedTextures[c],m=f.indexOf(t);if(m<0)throw new Error("Cannot release a texture that was never provided by this texture manager");f.splice(m,1),this.log()}log(){if(!this.logEnabled)return;let t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);let e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures==null)return;for(let t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});for(let t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}function Y7(n,t){let e=n;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===n.RGBA)return 16;if(t===e.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}function GI(n,t,e,r,o){let s=J7(t,r),c;if(o){let[p,f]=nl(n[0],n[1]);c=p*f}else{let[p,f]=rh(n[0],n[1]);c=p*f}let l=Y7(e,s);return c*l}function J7(n,t){switch(n){case On.PACKED_2X2_FLOAT32:return LI(t);case On.PACKED_2X2_FLOAT16:return MI(t);case On.UNPACKED_FLOAT32:return RI(t);case On.UNPACKED_FLOAT16:return PI(t);case On.PACKED_4X1_UNSIGNED_BYTE:return OI(t);default:throw new Error(`Unknown physical texture type ${n}`)}}function Z7(n){return ct().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?On.PACKED_2X2_FLOAT32:On.UNPACKED_FLOAT32:n?On.PACKED_2X2_FLOAT16:On.UNPACKED_FLOAT16}function UI(n,t){if(n===Mr.UPLOAD)return On.PACKED_2X2_FLOAT32;if(n===Mr.RENDER||n==null)return Z7(t);if(n===Mr.DOWNLOAD||n===Mr.PIXELS)return On.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function qI(n,t,e){return`${n[0]}_${n[1]}_${t}_${e}`}class Q7{constructor(t,e){this.variableNames=["A"];let r=new Array(t.length);for(let c=0;c<r.length;c++)r[c]=t[c]*e[c];this.outputShape=r,this.rank=r.length;let o=Oe(this.rank),s=tJ(t);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}}function tJ(n){let t=n.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${n[0]})`;let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let o=0;o<n.length;o++)r.push(`imod(${e[o]}, ${n[o]})`);return r.join()}class ue{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}let _s="if (isnan(x)) return x;",eJ="return x;",HI="return abs(x);",jI=_s+`
  return (x < 0.0) ? 0.0 : x;
`,KI=_s+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,XI="return (x >= 0.0) ? x : (exp(x) - 1.0);",nJ=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${zd};
  float scale = ${Wd};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`;function rJ(n=0){return _s+`
    return x > 0.0 ? 1.0 : float(${n});
  `}let YI="return -x;",JI="return ceil(x);",ZI="return floor(x);",oJ=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,sJ="return float(isnan(x));",iJ="return float(isinf(x));",aJ="return float(!isnan(x) && !isinf(x));",cJ=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,QI="return exp(x);",tE="return exp(x) - 1.0;",lJ=`if (x < 0.0) return NAN;
  return log(x);`,uJ="return log(1.0 + x);",pJ="return sqrt(x);",hJ="return inversesqrt(x);",fJ="return 1.0 / (1.0 + exp(-1.0 * x));",dJ=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,mJ=_s+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,gJ=_s+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,yJ=_s+`
  return atan(x);
`,bJ=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,xJ=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,wJ=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,vJ=_s+"return log(x + sqrt(x * x + 1.0));",TJ=_s+`
  if (x < 1.0) return NAN;
  return log(x + sqrt(x * x - 1.0));`,kJ=_s+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
  return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,NJ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Yw};
  float a1 = ${Jw};
  float a2 = ${Zw};
  float a3 = ${Qw};
  float a4 = ${tv};
  float a5 = ${ev};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,_J="return 1.0 / x;",CJ="return float(!(x >= 1.0));",Bm="return x;";let SJ="return x;",$J=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,eE=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,nE=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,rE=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`;class ch{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}class IJ{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;let e=t.length,r=Yn("rc",e),o=Oe(e),s=bX(e,r),c=r.slice(-2),l=e<=1?"rc":`vec2(${c.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${l}));
      }
    `}}let{segment_util:oE}=ov,EJ=sv,DJ=iv,AJ=av,FJ=Id,RJ=1e-7,PJ=1e-4,zm={};function OJ(n){return n in zm||(zm[n]={}),zm[n]}function Wm(n,t=!1){if(n==="linear")return t?SJ:eJ;if(n==="relu")return t?eE:jI;if(n==="elu")return t?rE:XI;if(n==="relu6")return t?nE:KI;if(n==="prelu")return t?SI:CI;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}let LJ=128,MJ=600;function BJ(){return ct().global.screen==null?1024:ct().global.screen.height*ct().global.screen.width*window.devicePixelRatio*MJ/1024/1024}let sE=1e3;class zJ extends d{constructor(t){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!ct().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(t==null){let e=jo(ct().getNumber("WEBGL_VERSION"));this.binaryCache=OJ(ct().getNumber("WEBGL_VERSION")),this.gpgpu=new m7(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;this.textureManager=new X7(this.gpgpu),this.numMBBeforeWarning=BJ(),this.texData=new h(this,ps())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,r){if((ct().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ct().getBool("DEBUG"))&&this.checkNumericalProblems(t),r==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={};return this.texData.set(o,{shape:e,dtype:r,values:t,usage:Mr.UPLOAD,refCount:1,complexParentRefCount:0}),o}incRef(t){let e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){let e=this.texData.get(t);e.refCount--}}move(t,e,r,o){if(ct().getBool("DEBUG")&&this.checkNumericalProblems(e),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:r,dtype:o,values:e,usage:Mr.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(t){let e=t.dataId;if(this.texData.has(e)){let r=this.texData.get(e);r.refCount--,r.refCount<1&&this.disposeData(e)}}readSync(t){let e=this.texData.get(t),{values:r,dtype:o,complexTensorInfos:s,slice:c,shape:l,isPacked:p}=e;if(c!=null){let b;p?b=new ch(l,Bm):b=new ue(l,Bm);let v=this.runWebGLProgram(b,[{dataId:t,shape:l,dtype:o}],o),T=this.readSync(v.dataId);return this.disposeIntermediateTensorInfo(v),T}if(r!=null)return this.convertAndCacheOnCPU(t);if(o==="string")return r;let f=this.activeTimers!=null,m;f&&(m=or());let y;if(o==="complex64"){let b=this.readSync(s.real.dataId),v=this.readSync(s.imag.dataId);y=ys(b,v)}else y=this.getValuesFromTexture(t);return f&&(this.downloadWaitMs+=or()-m),this.convertAndCacheOnCPU(t,y)}async read(t){if(this.pendingRead.has(t)){let T=this.pendingRead.get(t);return new Promise(N=>T.push(N))}let e=this.texData.get(t),{values:r,shape:o,slice:s,dtype:c,complexTensorInfos:l,isPacked:p}=e;if(s!=null){let T;p?T=new ch(o,Bm):T=new ue(o,Bm);let N=this.runWebGLProgram(T,[{dataId:t,shape:o,dtype:c}],c),S=this.read(N.dataId);return this.disposeIntermediateTensorInfo(N),S}if(r!=null)return this.convertAndCacheOnCPU(t);if(!ct().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&ct().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let f=null,m;if(c!=="complex64"&&ct().get("WEBGL_BUFFER_SUPPORTED")){m=this.decode(t);let T=this.texData.get(m.dataId);f=this.gpgpu.createBufferFromTexture(T.texture,...oh(o))}this.pendingRead.set(t,[]),c!=="complex64"&&await this.gpgpu.createAndWaitForFence();let y;if(c==="complex64"){let T=await Promise.all([this.read(l.real.dataId),this.read(l.imag.dataId)]),N=T[0],S=T[1];y=ys(N,S)}else if(f==null)y=this.getValuesFromTexture(t);else{let T=G(o);y=this.gpgpu.downloadFloat32MatrixFromBuffer(f,T)}m!=null&&this.disposeIntermediateTensorInfo(m);let b=this.convertAndCacheOnCPU(t,y),v=this.pendingRead.get(t);return this.pendingRead.delete(t),v.forEach(T=>T(b)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),b}checkNumericalProblems(t){if(t==null)return;for(let e=0;e<t.length;e++){let r=t[e];if(!E8(r))throw ct().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(t){let{shape:e,dtype:r,isPacked:o}=this.texData.get(t),s=G(e);if(ct().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let b=this.decode(t),v=this.texData.get(b.dataId),T=this.gpgpu.downloadMatrixFromPackedTexture(v.texture,...oh(e)).subarray(0,s);return this.disposeIntermediateTensorInfo(b),T}let c=ct().getBool("WEBGL_PACK")&&o===!0,l=c?m1(e):e,p=c?new HY(l):new qY(l),f=this.runWebGLProgram(p,[{shape:l,dtype:r,dataId:t}],"float32"),m=this.texData.get(f.dataId),y=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(m.texture,m.texShape[0],m.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(f),y}async time(t){let e=this.activeTimers,r=[],o=!1;this.programTimersStack==null?(this.programTimersStack=r,o=!0):this.activeTimers.push(r),this.activeTimers=r,t();let s=tt(this.activeTimers.map(p=>p.query)).filter(p=>p!=null),c=tt(this.activeTimers.map(p=>p.name)).filter(p=>p!=null);this.activeTimers=e,o&&(this.programTimersStack=null);let l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let p=await Promise.all(s);l.kernelMs=C(p),l.getExtraProfileInfo=()=>p.map((f,m)=>({name:c[m],ms:f})).map(f=>`${f.name}: ${f.ms}`).join(", ")}else l.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,l}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:or(),endMs:null}}endTimer(t){return ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=or(),t)}async getQueryTime(t){if(ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);let e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t)){this.pendingDisposal.add(t),this.pendingDeletes++;return}if(!this.texData.has(t))return;if(this.texData.get(t).complexParentRefCount>0){this.texData.get(t).refCount--;return}this.releaseGPUData(t);let{complexTensorInfos:e}=this.texData.get(t);e!=null&&(this.texData.get(e.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.real),this.texData.get(e.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.imag)),this.texData.delete(t)}releaseGPUData(t){let{texture:e,dtype:r,texShape:o,usage:s,isPacked:c,slice:l}=this.texData.get(t),p=l&&l.origDataId||t,f=this.dataRefCount.get(p);f>1?this.dataRefCount.set(p,f-1):(this.dataRefCount.delete(p),e!=null&&(this.numBytesInGPU-=this.computeBytes(o,r),this.textureManager.releaseTexture(e,o,s,c)));let m=this.texData.get(t);m.texture=null,m.texShape=null,m.isPacked=!1,m.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return ct().getBool("WEBGL_CPU_FORWARD")?(this.cpuBackend==null&&(this.cpuBackend=ps().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=LJ){let r=this.getCPUBackend();return!this.warnedAboutCPUBackend&&r==null&&(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),r!=null&&t.every(o=>this.texData.get(o.dataId).texture==null&&G(o.shape)<e)}getGPGPUContext(){return this.gpgpu}slice(t,e,r){if(this.shouldExecuteOnCPU([t])){let c=hX(this.texData.get(t.dataId).values,e,r,t.shape,t.dtype);return this.makeOutput(r,t.dtype,c)}if(G(r)===0)return un([],r,t.dtype);let{isPacked:o}=this.texData.get(t.dataId),s=Yx(t.shape,e,r);if(o||!s){let c=ct().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new j7(r):new q7(r),l=c.getCustomSetupFunc(e);return this.compileAndRun(c,[t],null,l)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,r)}shallowSlice(t,e,r){let o=this.texData.get(t.dataId),s=this.makeOutput(r,t.dtype),c=this.texData.get(s.dataId);Object.assign(c,o),c.shape=r,c.dtype=t.dtype;let l=Jx(e,t.strides);o.slice&&(l+=o.slice.flatOffset),c.slice={flatOffset:l,origDataId:o.slice&&o.slice.origDataId||t.dataId};let p=this.dataRefCount.get(c.slice.origDataId)||1;return this.dataRefCount.set(c.slice.origDataId,p+1),s}stridedSlice(t,e,r,o){let s=this.tryRunOnCpuOrThrow([t],()=>this.cpuBackend.stridedSlice(t,e,r,o));if(s)return s;let c=Zf(e,r,o);if(c.some(p=>p===0))return un([],c);let l=new K7(e,o,c);return this.compileAndRun(l,[t])}reverse(t,e){let r=ct().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new V7(t.shape,e):new W7(t.shape,e);return this.compileAndRun(r,[t])}neg(t){let e=this.tryRunOnCpuOrThrow([t],()=>this.cpuBackend.neg(t));if(e)return e;if(ct().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,YI,t.dtype);let r=new ue(t.shape,YI);return this.compileAndRun(r,[t])}batchMatMul(t,e,r,o){let s=r?t.shape[2]:t.shape[1],c=o?e.shape[1]:e.shape[2],l=r?t.shape[1]:t.shape[2],p=Math.max(t.shape[0],e.shape[0]);if((s===1||c===1)&&l>sE){r&&(t=Kt(t,[0,2,1])),o&&(e=Kt(e,[0,2,1]));let y=c===1?t:t.as3D(p,l,1),b=c===1?2:1,v=c===1?e.as3D(p,1,l):e,T=nt(y,v);return T.sum(b,!0)}let f=jn(t.dtype,e.dtype),m=new x1(t.shape,e.shape,[p,s,c],r,o);return this.compileAndRun(m,[t,e],f)}fusedBatchMatMul({a:t,b:e,transposeA:r,transposeB:o,bias:s,activation:c,preluActivationWeights:l}){let p=r?t.shape[2]:t.shape[1],f=o?e.shape[1]:e.shape[2],m=Math.max(t.shape[0],e.shape[0]),y=jn(t.dtype,e.dtype),b=s!=null,v=l!=null,T=c?Wm(c,!0):null,N=new x1(t.shape,e.shape,[m,p,f],r,o,b,T,v),S=[t,e];return s&&S.push(s),l&&S.push(l),this.compileAndRun(N,S,y)}localResponseNormalization4D(t,e,r,o,s){let c=ct().getBool("WEBGL_PACK_NORMALIZATION")?new k7(t.shape,e,r,o,s):new v7(t.shape,e,r,o,s);return this.compileAndRun(c,[t])}LRNGrad(t,e,r,o,s,c,l){let p=new T7(e.shape,o,s,c,l);return this.compileAndRun(p,[e,r,t])}tile(t,e){if(t.dtype==="string"){let o=this.readSync(t.dataId),s=o.map(l=>Uu(l)),c=Se(t.shape,t.dtype,s);return DJ(c,e)}let r=new Q7(t.shape,e);return this.compileAndRun(r,[t])}pad(t,e,r){let o=ct().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new R7(t.shape,e,r):new F7(t.shape,e,r);return this.compileAndRun(o,[t])}gather(t,e,r){let o=this.tryRunOnCpuOrThrow([t,e],()=>this.cpuBackend.gather(t,e,r));if(o)return o;let s=new YY(t.shape,e.size,r);return this.compileAndRun(s,[t,e])}batchToSpaceND(t,e,r){_(t.rank<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=e.reduce((m,y)=>m*y),s=Np(t.shape,e,o),c=_p(s.length,e.length),l=Cp(t.shape,e,o),p=Kw(r,e.length),f=Xw(l,r,e.length);return Kt(t.reshape(s),c).reshape(l).slice(p,f)}spaceToBatchND(t,e,r){_(t.rank<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=e.reduce((y,b)=>y*b),s=[[0,0]];s.push(...r);for(let y=1+e.length;y<t.shape.length;++y)s.push([0,0]);let c=t.pad(s),l=Np(c.shape,e,o,!1),p=_p(l.length,e.length,!1),f=Cp(c.shape,e,o,!1),m=Kt(c.reshape(l),p);return Q(m,f)}reduce(t,e,r){let o=t.shape[0],s=t.shape[1],c=sp(s),l=Math.ceil(s/c),p={windowSize:c,inSize:s,batchSize:o,outSize:l},f=new zI(p,e),m=this.compileAndRun(f,[t],r);return m.shape[1]===1?m:this.reduce(m,e,r)}argReduce(t,e,r=null){let o=t.shape[0],s=t.shape[1];r!=null&&(o=r.shape[0],s=r.shape[1]);let c=sp(s),l={windowSize:c,inSize:s,batchSize:o,outSize:Math.ceil(s/c)},p=new yX(l,e,r==null),f=[t];r!=null&&f.push(r);let m=this.compileAndRun(p,f,"int32");return m.shape[1]===1?m:this.argReduce(t,e,m)}argReducePacked(t,e,r=null){let o=r!=null?r.shape:t.shape,s=o[o.length-1],c=sp(s),l=new eY(o,c,e,r==null),p=r==null?[t]:[t,r],f=this.compileAndRun(l,p,"int32");return f.rank===t.rank?this.argReducePacked(t,e,f):f}sum(t,e){sr("sum",e,t.rank);let[r,o]=Fn(t.shape,e),s=G(o),c=t.as2D(-1,s),l=Vf(t.dtype);return this.reduce(c,"sum",l).reshape(r)}prod(t,e){let r=this.tryRunOnCpuOrThrow([t],()=>this.cpuBackend.prod(t,e));if(r)return r;let[o,s]=Fn(t.shape,e),c=G(s),l=t.as2D(-1,c),p=Vf(t.dtype);return this.reduce(l,"prod",p).reshape(o)}unsortedSegmentSum(t,e,r){let o=0,s=ir([o],t.rank),c=t;s!=null&&(c=Kt(t,s),o=xr(1,t.rank)[0]);let l=oE.computeOutShape(c.shape,o,r),p=G([c.shape[o]]),f=c.as2D(-1,p),m=Vf(t.dtype),y=this.segOpCompute(f,"unsortedSegmentSum",e,m,r).reshape(l);return s!=null&&(y=Kt(y,Ju(s))),y}segOpCompute(t,e,r,o,s){let c=t.shape[0],l=t.shape[1],p=oE.segOpComputeOptimalWindowSize(l,s),f={windowSize:p,inSize:l,batchSize:c,numSegments:s},m=new G7(f,e),y=this.compileAndRun(m,[t,r],o);return y.shape[1]===s?y:(r=hp(0,s).tile([l/p]),this.segOpCompute(y,e,r,o,s))}argMinMaxReduce(t,e,r){let o=[e];if(sr("arg"+r.charAt(0).toUpperCase()+r.slice(1),o,t.rank),!ct().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){let[s,c]=Fn(t.shape,o),l=G(c),p=t.as2D(-1,l);return this.argReduce(p,r).reshape(s)}return this.argReducePacked(t,r)}argMin(t,e){return this.argMinMaxReduce(t,e,"min")}argMax(t,e){return this.argMinMaxReduce(t,e,"max")}cumsum(t,e,r,o){if(e!==t.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${t.rank-1} but got axis=${e}`);let s=t.shape[e],c=t;for(let l=0;l<=Math.ceil(Math.log2(s))-1;l++){let p=new DI(t.shape,!1,o),f=p.getCustomSetupFunc(l),m=c;c=this.compileAndRun(p,[c],c.dtype,f),m.dispose()}if(r){let l=new DI(t.shape,r,o),p=c;c=this.compileAndRun(l,[c]),p.dispose()}return c}equal(t,e){if(ct().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,wY,"bool");let r=new Hn(iY,t.shape,e.shape);return this.compileAndRun(r,[t,e],"bool")}less(t,e){let r=this.tryRunOnCpuOrThrow([t,e],()=>this.cpuBackend.less(t,e));if(r)return r;if(ct().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,vY,"bool");let o=new Hn(aY,t.shape,e.shape);return this.compileAndRun(o,[t,e],"bool")}lessEqual(t,e){if(ct().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,TY,"bool");let r=new Hn(cY,t.shape,e.shape);return this.compileAndRun(r,[t,e],"bool")}greater(t,e){let r=this.tryRunOnCpuOrThrow([t,e],()=>this.cpuBackend.greater(t,e));if(r)return r;if(ct().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,kY,"bool");let o=new Hn(lY,t.shape,e.shape);return this.compileAndRun(o,[t,e],"bool")}greaterEqual(t,e){if(ct().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,NY,"bool");let r=new Hn(uY,t.shape,e.shape);return this.compileAndRun(r,[t,e],"bool")}logicalNot(t){let e=new ue(t.shape,CJ);return this.compileAndRun(e,[t])}logicalAnd(t,e){if(ct().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,_Y,"bool");let r=new Hn(pY,t.shape,e.shape);return this.compileAndRun(r,[t,e],"bool")}logicalOr(t,e){if(ct().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,CY,"bool");let r=new Hn(hY,t.shape,e.shape);return this.compileAndRun(r,[t,e],"bool")}select(t,e,r){let o=new U7(t.rank,e.shape,e.rank);return this.compileAndRun(o,[t,e,r],jn(e.dtype,r.dtype))}where(t){Bc("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let e=t.dataSync();return FJ(t.shape,e)}topk(t,e,r){let o=t.dataSync();return AJ(o,t.shape,t.dtype,e,r)}min(t,e){sr("min",e,t.rank);let[r,o]=Fn(t.shape,e),s=G(o),c=t.as2D(-1,s);return this.reduce(c,"min",c.dtype).reshape(r)}minimum(t,e){let r=this.tryRunOnCpuOrThrow([t,e],()=>this.cpuBackend.minimum(t,e));if(r)return r;let o=ct().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ns($Y,t.shape,e.shape):new Hn(dY,t.shape,e.shape);return this.compileAndRun(o,[t,e])}mod(t,e){let r=ct().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ns(IY,t.shape,e.shape):new Hn(mY,t.shape,e.shape);return this.compileAndRun(r,[t,e])}maximum(t,e){let r=this.tryRunOnCpuOrThrow([t,e],()=>this.cpuBackend.maximum(t,e));if(r)return r;let o=ct().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ns(SY,t.shape,e.shape):new Hn(fY,t.shape,e.shape);return this.compileAndRun(o,[t,e])}all(t,e){sr("all",e,t.rank);let[r,o]=Fn(t.shape,e),s=G(o),c=t.as2D(-1,s);return this.reduce(c,"all",c.dtype).reshape(r)}any(t,e){sr("any",e,t.rank);let[r,o]=Fn(t.shape,e),s=G(o),c=t.as2D(-1,s);return this.reduce(c,"any",c.dtype).reshape(r)}floorDiv(t,e){let r=oY,o="int32";if(ct().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,yY,o);let s=new Hn(r,t.shape,e.shape);return this.compileAndRun(s,[t,e],o)}packedUnaryOp(t,e,r){let o=new ch(t.shape,e);return this.compileAndRun(o,[t],r)}packedBinaryOp(t,e,r,o,s=!1){let c=new Ns(r,t.shape,e.shape,s);return this.compileAndRun(c,[t,e],o)}makeComplexComponentTensorInfo(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}addN(t){if(t.length===1)return t[0];if(t.length>ct().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let c=Math.floor(t.length/2),l=this.addN(t.slice(0,c)),p=this.addN(t.slice(c));return this.addN([l,p])}let e=t.map(c=>c.dtype).reduce((c,l)=>jn(c,l)),r=t.map(c=>c.shape),o=ct().getBool("WEBGL_PACK"),s=o?new gX(t[0].shape,r):new mX(t[0].shape,r);return this.compileAndRun(s,t,e)}pow(t,e){let r=ct().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=r?new Ns(bY,t.shape,e.shape):new Hn(sY,t.shape,e.shape),s=jn(t.dtype,e.dtype);return this.compileAndRun(o,[t,e],s)}ceil(t){if(this.shouldExecuteOnCPU([t])){let r=oX(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,r)}if(ct().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,JI,t.dtype);let e=new ue(t.shape,JI);return this.compileAndRun(e,[t])}floor(t){if(this.shouldExecuteOnCPU([t])){let r=aX(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,r)}if(ct().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,ZI,t.dtype);let e=new ue(t.shape,ZI);return this.compileAndRun(e,[t])}sign(t){let e=new ue(t.shape,oJ);return this.compileAndRun(e,[t])}isNaN(t){let e=new ue(t.shape,sJ);return this.compileAndRun(e,[t],"bool")}isInf(t){let e=new ue(t.shape,iJ);return this.compileAndRun(e,[t],"bool")}isFinite(t){let e=new ue(t.shape,aJ);return this.compileAndRun(e,[t],"bool")}round(t){let e=new ue(t.shape,cJ);return this.compileAndRun(e,[t])}exp(t){if(this.shouldExecuteOnCPU([t])){let r=sX(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,r)}if(ct().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,QI,t.dtype);let e=new ue(t.shape,QI);return this.compileAndRun(e,[t])}expm1(t){if(this.shouldExecuteOnCPU([t])){let r=iX(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,r)}if(ct().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,tE,t.dtype);let e=new ue(t.shape,tE);return this.compileAndRun(e,[t])}softmax(t,e){let r=Vt([e],t.shape),o=lr(t,r),s=Rn(o.shape,r),c=Dt(t,o.reshape(s)),l=this.exp(c),p=this.sum(l,r).reshape(s);return Bt(l,p)}log(t){if(this.shouldExecuteOnCPU([t])){let r=cX(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,r)}if(ct().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,$J,t.dtype);let e=new ue(t.shape,lJ);return this.compileAndRun(e,[t])}log1p(t){let e=new ue(t.shape,uJ);return this.compileAndRun(e,[t])}sqrt(t){let e=new ue(t.shape,pJ);return this.compileAndRun(e,[t])}rsqrt(t){if(this.shouldExecuteOnCPU([t])){let r=pX(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,r)}let e=new ue(t.shape,hJ);return this.compileAndRun(e,[t])}reciprocal(t){let e=new ue(t.shape,_J);return this.compileAndRun(e,[t])}relu(t){let e;return ct().getBool("WEBGL_PACK")?e=new ch(t.shape,eE):e=new ue(t.shape,jI),this.compileAndRun(e,[t])}relu6(t){let e;return ct().getBool("WEBGL_PACK")?e=new ch(t.shape,nE):e=new ue(t.shape,KI),this.compileAndRun(e,[t])}prelu(t,e){let r=ct().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ns(SI,t.shape,e.shape):new Hn(CI,t.shape,e.shape);return this.compileAndRun(r,[t,e])}elu(t){if(ct().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,rE,t.dtype);let e=new ue(t.shape,XI);return this.compileAndRun(e,[t])}eluDer(t,e){let r=ct().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ns(xY,t.shape,e.shape):new Hn(gY,t.shape,e.shape);return this.compileAndRun(r,[t,e])}selu(t){let e=new ue(t.shape,nJ);return this.compileAndRun(e,[t])}clip(t,e,r){let o;ct().getBool("WEBGL_PACK_CLIP")?o=new DY(t.shape):o=new EY(t.shape);let s=o.getCustomSetupFunc(e,r);return this.compileAndRun(o,[t],null,s)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){let r=nX(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,r)}if(ct().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,HI,t.dtype);let e=new ue(t.shape,HI);return this.compileAndRun(e,[t])}complexAbs(t){let e=this.texData.get(t.dataId),r=new AY(t.shape),o=[this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.real),this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.imag)];return this.compileAndRun(r,o)}sigmoid(t){let e=new ue(t.shape,fJ);return this.compileAndRun(e,[t])}softplus(t){let e=new ue(t.shape,dJ);return this.compileAndRun(e,[t])}asin(t){let e=new ue(t.shape,mJ);return this.compileAndRun(e,[t])}acos(t){let e=new ue(t.shape,gJ);return this.compileAndRun(e,[t])}atan(t){let e=new ue(t.shape,yJ);return this.compileAndRun(e,[t])}sinh(t){let e=new ue(t.shape,bJ);return this.compileAndRun(e,[t])}cosh(t){let e=new ue(t.shape,xJ);return this.compileAndRun(e,[t])}tanh(t){let e=new ue(t.shape,wJ);return this.compileAndRun(e,[t])}asinh(t){let e=new ue(t.shape,vJ);return this.compileAndRun(e,[t])}acosh(t){let e=new ue(t.shape,TJ);return this.compileAndRun(e,[t])}atanh(t){let e=new ue(t.shape,kJ);return this.compileAndRun(e,[t])}erf(t){let e=new ue(t.shape,NJ);return this.compileAndRun(e,[t])}step(t,e){let r=new ue(t.shape,rJ(e));return this.compileAndRun(r,[t])}conv2dByMatMul(t,e,r,o,s,c){let l=t.shape,p=this.texData.get(t.dataId),f=r.inChannels,m=l[0]*l[1]*l[2],y=r.outChannels,b=r.dataFormat==="channelsLast",v=!1,T=!1,N=(m===1||y===1)&&f>sE,S=l[2]%2!==0&&!!p.isPacked;if(N||!ct().getBool("WEBGL_LAZILY_UNPACK")||!ct().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!S){let q=b?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],H=Q(t,[1,q,r.inChannels]),Z=Q(e,[1,r.inChannels,r.outChannels]),J=this.fusedBatchMatMul({a:H,b:Z,transposeA:v,transposeB:T,bias:o,activation:s,preluActivationWeights:c});return Q(J,r.outShape)}let D=b?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),I={dataId:t.dataId,shape:[1,D,r.inChannels],dtype:t.dtype},P=p.shape;p.shape=p.shape.slice(),p.shape[p.shape.length-2]++,_(Rm(p.shape,I.shape),()=>`packed reshape ${p.shape} to ${I.shape} isn't free`);let E=Q(e,[1,r.inChannels,r.outChannels]),L=this.fusedBatchMatMul({a:I,b:E,transposeA:v,transposeB:T,bias:o,activation:s,preluActivationWeights:c}),B=this.texData.get(L.dataId);return _(B.isPacked,()=>"batchMatMul result is expected to be packed"),p.shape=P,B.shape=r.outShape,ps().makeTensorFromDataId(L.dataId,r.outShape,L.dtype)}conv2dWithIm2Row(t,e,r,o,s,c){let{filterWidth:l,filterHeight:p,inChannels:f,outWidth:m,outHeight:y,dataFormat:b}=r,v=b==="channelsLast",T=l*p*f,N=y*m,S=[T,N],D=!0,I=!1,P=t.squeeze([0]),E=e.reshape([1,T,-1]),L=new w7(S,P.shape,r),B=this.compileAndRun(L,[P]).reshape([1,S[0],S[1]]),q=o!=null,H=c!=null,Z=s?Wm(s,!0):null,J=new x1(B.shape,E.shape,[1,N,r.outChannels],D,I,q,Z,H),it=[B,E];o&&it.push(o),H&&it.push(c);let pt=this.compileAndRun(J,it);return v?pt.reshape([1,y,m,r.outChannels]):pt.reshape([1,r.outChannels,y,m])}fusedConv2d({input:t,filter:e,convInfo:r,bias:o,activation:s,preluActivationWeights:c}){if(r.filterHeight===1&&r.filterWidth===1&&r.dilationHeight===1&&r.dilationWidth===1&&r.strideHeight===1&&r.strideWidth===1&&(r.padInfo.type==="SAME"||r.padInfo.type==="VALID"))return this.conv2dByMatMul(t,e,r,o,s,c);if(ct().getBool("WEBGL_CONV_IM2COL")&&t.shape[0]===1)return this.conv2dWithIm2Row(t,e,r,o,s,c);let l=o!=null,p=c!=null,f=s?Wm(s,!1):null,m=new $I(r,l,f,p),y=[t,e];return o&&y.push(o),c&&y.push(c),this.compileAndRun(m,y)}conv2d(t,e,r){if(r.filterHeight===1&&r.filterWidth===1&&r.dilationHeight===1&&r.dilationWidth===1&&r.strideHeight===1&&r.strideWidth===1&&(r.padInfo.type==="SAME"||r.padInfo.type==="VALID"))return this.conv2dByMatMul(t,e,r);if(ct().getBool("WEBGL_CONV_IM2COL")&&t.shape[0]===1)return this.conv2dWithIm2Row(t,e,r);let o=new $I(r);return this.compileAndRun(o,[t,e])}conv2dDerInput(t,e,r){let o=new RY(r);return this.compileAndRun(o,[t,e])}conv2dDerFilter(t,e,r){let o=new FY(r);return this.compileAndRun(o,[t,e])}fusedDepthwiseConv2D({input:t,filter:e,convInfo:r,bias:o,activation:s,preluActivationWeights:c}){let l=ct().getBool("WEBGL_PACK_DEPTHWISECONV")&&r.strideWidth<=2&&r.outChannels/r.inChannels===1,p=s?Wm(s,l):null,f=[t,e],m=o!=null,y=c!=null;m&&f.push(o),y&&f.push(c);let b;return l?(b=new EI(r,m,p,y),this.compileAndRun(b,f)):(b=new II(r,m,p,y),this.compileAndRun(b,f))}depthwiseConv2D(t,e,r){let o;return ct().getBool("WEBGL_PACK_DEPTHWISECONV")&&r.strideWidth<=2&&r.outChannels/r.inChannels===1?(o=new EI(r),this.compileAndRun(o,[t,e])):(o=new II(r),this.compileAndRun(o,[t,e]))}depthwiseConv2DDerInput(t,e,r){let o=new MY(r);return this.compileAndRun(o,[t,e])}depthwiseConv2DDerFilter(t,e,r){let o=new LY(r);return this.compileAndRun(o,[t,e])}conv3d(t,e,r){let o=new BY(r);return this.compileAndRun(o,[t,e])}conv3dDerInput(t,e,r){let o=new OY(r);return this.compileAndRun(o,[t,e])}conv3dDerFilter(t,e,r){let o=new PY(r);return this.compileAndRun(o,[t,e])}unstack(t,e){let r=t.shape[e],o=new Array(t.rank-1),s=0;for(let f=0;f<t.rank;f++)f!==e&&(o[s++]=t.shape[f]);let c=new Array(t.rank).fill(0),l=t.shape.slice();l[e]=1;let p=new Array(r);for(let f=0;f<p.length;f++)c[e]=f,p[f]=this.slice(t,c,l).reshape(o);return p}avgPool3d(t,e){let r=new w1(e,"avg",!1);return this.compileAndRun(r,[t],"float32")}avgPool3dBackprop(t,e,r){let o=new rY(r);return this.compileAndRun(o,[t],e.dtype)}maxPool3d(t,e){let r=new w1(e,"max",!1);return this.compileAndRun(r,[t],"float32")}maxPool3dBackprop(t,e,r,o){let s=!0,c=new w1(o,"max",s),l=this.compileAndRun(c,[e]),p=new _7(o),f=this.compileAndRun(p,[t,l],e.dtype);return l.dispose(),f}resizeBilinear(t,e,r,o){let s=ct().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new M7(t.shape,e,r,o):new L7(t.shape,e,r,o);return this.compileAndRun(s,[t],"float32")}resizeBilinearBackprop(t,e,r){let o=new O7(t,e,r);return this.compileAndRun(o,[t])}resizeNearestNeighbor(t,e,r,o){let s=new z7(t.shape,e,r,o);return this.compileAndRun(s,[t])}resizeNearestNeighborBackprop(t,e,r){let o=new B7(t,e,r);return this.compileAndRun(o,[t])}multinomial(t,e,r,o){let s=e?t:ca(t),c=s.shape[0],l=s.shape[1],p=new C7(c,l,r),f=p.getCustomSetupFunc(o);return this.compileAndRun(p,[s],"int32",f)}oneHot(t,e,r,o){let s=new S7(t.size,e,r,o);return this.compileAndRun(s,[t])}diag(t){let e=new UY(t.size);return this.compileAndRun(e,[t])}cropAndResize(t,e,r,o,s,c){let l=new zY(t.shape,e.shape,o,s,c);return this.compileAndRun(l,[t,e,r],"float32")}depthToSpace(t,e,r){_(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`);let o=t.shape[0],s=r==="NHWC"?t.shape[1]:t.shape[2],c=r==="NHWC"?t.shape[2]:t.shape[3],l=r==="NHWC"?t.shape[3]:t.shape[1],p=s*e,f=c*e,m=l/(e*e),y=r==="NHWC"?[o,p,f,m]:[o,m,p,f],b=new GY(y,e,r);return this.compileAndRun(b,[t])}split(t,e,r){return EJ(t,e,r)}scatterND(t,e,r){let{sliceRank:o,numUpdates:s,sliceSize:c,strides:l,outputSize:p}=Tc(e,t,r),f=[p/c,c],m=t.reshape([s,o]),y=e.reshape([s,c]);if(p===0)return TC(un([]),r);let b=Et(0),v=new VI(s,o,m.rank,y.rank,l,f),T=this.compileAndRun(v,[y,m,b]);return T.reshape(r)}sparseToDense(t,e,r,o){let{sliceRank:s,numUpdates:c,strides:l,outputSize:p}=Tc(e,t,r),f=!1,m=new VI(c,s,t.rank,e.rank,l,[p,1],f),y=this.compileAndRun(m,[e,t,o]);return y.reshape(r)}gatherND(t,e){let r=e.shape,o=r[r.length-1],[s,c,l,p]=Yf(t,e),f=e.reshape([c,o]),m=t.reshape([t.size/l,l]),y=new ZY(o,p,[c,l]),b=this.compileAndRun(y,[m,f]);return b.reshape(s)}fill(t,e,r){if(r=r||ic(e),r==="string"){let o=rr(r,G(t));return o.fill(e),ps().makeTensor(o,t,r,this)}else{let o=new XY(t,e),s=o.getCustomSetupFunc(e);return this.compileAndRun(o,[],r,s)}}onesLike(t){if(t.dtype==="string")throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)}zerosLike(t){return this.fill(t.shape,t.dtype==="string"?"":0,t.dtype)}linspace(t,e,r){return rv(t,e,r)}makeTensorInfo(t,e,r){let o=this.write(r,t,e);return this.texData.get(o).usage=null,{dataId:o,shape:t,dtype:e}}makeOutput(t,e,r){let{dataId:o}=this.makeTensorInfo(t,e,r);return ps().makeTensorFromDataId(o,t,e,this)}unpackTensor(t){let e=new IJ(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){let e=new $7(t.shape),r=!0;return this.runWebGLProgram(e,[t],t.dtype,null,r)}packedReshape(t,e){let r=[rl(t.shape),...ol(t.shape)],o={dtype:t.dtype,shape:r,dataId:t.dataId},s=[rl(e),...ol(e)],c=new WI(s,r),l=!0,p=this.runWebGLProgram(c,[o],t.dtype,null,l);return{dataId:p.dataId,shape:e,dtype:p.dtype}}decode(t){let e=this.texData.get(t),{isPacked:r,shape:o,dtype:s}=e,c=m1(o),l;r?l=new VY(c):l=new WY(c);let p=!0,f=this.runWebGLProgram(l,[{shape:c,dtype:s,dataId:t}],s,null,p);return{dtype:s,shape:o,dataId:f.dataId}}runWebGLProgram(t,e,r,o,s=!1){let c=this.makeTensorInfo(t.outputShape,r),l=this.texData.get(c.dataId);if(t.packedOutput&&(l.isPacked=!0),t.outPackingScheme===nh.DENSE){let N=oh(t.outputShape);l.texShape=N.map(S=>S*2)}if(t.outTexUsage!=null&&(l.usage=t.outTexUsage),G(c.shape)===0)return l.values=Ce(c.dtype,0),c;let p=[],f=e.map(N=>{if(N.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let S=this.texData.get(N.dataId);if(S.texture==null){if(!t.packedInputs&&G(N.shape)<=ct().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:N.shape,texData:null,isUniform:!0,uniformValues:S.values};t.packedInputs&&(S.isPacked=!0,S.shape=N.shape)}else if(!!S.isPacked!==!!t.packedInputs)N=S.isPacked?this.unpackTensor(N):this.packTensor(N),p.push(N),S=this.texData.get(N.dataId);else if(S.isPacked&&!Rm(S.shape,N.shape)){let D=N,I=N.shape;N.shape=S.shape,N=this.packedReshape(N,I),p.push(N),S=this.texData.get(N.dataId),D.shape=I}return this.uploadToGPU(N.dataId),{shape:N.shape,texData:S,isUniform:!1}});this.uploadToGPU(c.dataId);let m={shape:c.shape,texData:l,isUniform:!1},y=x7(t,f,m),b=this.getAndSaveBinary(y,()=>y7(this.gpgpu,t,f,m)),v=this.activeTimers!=null,T;if(v&&(T=this.startTimer()),b7(this.gpgpu,b,f,m,o),p.forEach(N=>this.disposeIntermediateTensorInfo(N)),v&&(T=this.endTimer(T),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(T)})),!ct().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&s===!1){let N=this.unpackTensor(c);return this.disposeIntermediateTensorInfo(c),N}return c}compileAndRun(t,e,r,o,s=!1){r=r||e[0].dtype;let c=this.runWebGLProgram(t,e,r,o,s);return ps().makeTensorFromDataId(c.dataId,c.shape,c.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(this.disposed)return;if(!ct().getBool("IS_TEST")){let t=Object.keys(this.binaryCache);t.forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})}this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=rt(()=>{if(!ct().get("WEBGL_RENDER_FLOAT32_ENABLED")){let t=ct().getBool("DEBUG");ct().set("DEBUG",!1);let e=this.abs(Et(1e-8)).dataSync()[0];if(ct().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?RJ:PJ}uploadToGPU(t){let e=this.texData.get(t),{shape:r,dtype:o,values:s,texture:c,usage:l,isPacked:p}=e;if(c!=null)return;let f=this.activeTimers!=null,m;f&&(m=or());let y=e.texShape;if(y==null&&(y=K8(r,p),e.texShape=y),s!=null){let b=m1(r),v,T=y[1],N=y[0],S=s instanceof Uint8Array;p?([T,N]=nl(y[0],y[1]),v=new KY(b,[N,T],S)):v=new jY(b,[N,T],S);let D=this.makeTensorInfo([N,T],o);S?this.texData.get(D.dataId).usage=Mr.PIXELS:this.texData.get(D.dataId).usage=Mr.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(D.dataId),T,N,s);let I=!0,P=this.runWebGLProgram(v,[D],o,null,I),E=this.texData.get(P.dataId);e.texture=E.texture,e.texShape=E.texShape,e.isPacked=E.isPacked,e.usage=E.usage,this.disposeIntermediateTensorInfo(D),this.texData.delete(P.dataId),e.values=null,f&&(this.uploadWaitMs+=or()-m)}else{let b=this.acquireTexture(y,l,o,p);e.texture=b}}convertAndCacheOnCPU(t,e){let r=this.texData.get(t),{dtype:o}=r;return this.releaseGPUData(t),e!=null&&(r.values=WJ(e,o)),r.values}acquireTexture(t,e,r,o){if(this.numBytesInGPU+=this.computeBytes(t,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,o)}computeBytes(t,e){return t[0]*t[1]*Pb(e)}tryRunOnCpuOrThrow(t,e){if(this.shouldExecuteOnCPU(t))try{return e()}catch(r){if(ct().getBool("IS_TEST"))throw new Error("CPU forwarding failed")}return null}}function WJ(n,t){if(t==="float32"||t==="complex64")return n;if(t==="int32"||t==="bool"){let e=t==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let r=0;r<e.length;++r)e[r]=Math.round(n[r]);return e}else throw new Error(`Unknown dtype ${t}`)}let VJ="2.7.0";function GJ(){ct().set("WEBGL_FORCE_F16_TEXTURES",!0)}Rx()&&ew("webgl",()=>new zJ,2);let Qst={forceHalfFloat:GJ};function Cs(n){let{inputs:t,backend:e}=n,{x:r}=t;return e.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}let UJ={kernelName:bu,backendName:"webgl",kernelFunc:Cs};function ll(n){let{inputs:t,backend:e}=n,{real:r,imag:o}=t,s=e.makeTensorInfo(r.shape,"complex64"),c=e.texData.get(s.dataId),l=Cs({inputs:{x:r},backend:e}),p=e.texData.get(l.dataId);p.complexParentRefCount++;let f=Cs({inputs:{x:o},backend:e}),m=e.texData.get(f.dataId);return m.complexParentRefCount++,c.complexTensorInfos={real:l,imag:f},s}let qJ={kernelName:lf,backendName:"webgl",kernelFunc:ll};let iE="if (isnan(x)) return x;",HJ=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,jJ=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Vm(n){return({inputs:t,backend:e})=>{let{x:r}=t,o=e,s=new ue(r.shape,n);return o.runWebGLProgram(s,[r],r.dtype)}}function ul({opSnippet:n,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:r=!1,cpuKernelImpl:o,dtype:s}){return({inputs:c,backend:l})=>{let{a:p,b:f}=c,m=l;if(r&&p.dtype==="complex64"){let T=m.texData.get(p.dataId),N=m.texData.get(f.dataId),[S,D]=[[T.complexTensorInfos.real,N.complexTensorInfos.real],[T.complexTensorInfos.imag,N.complexTensorInfos.imag]].map(P=>{let[E,L]=P,B={dataId:E.dataId,dtype:E.dtype,shape:p.shape},q={dataId:L.dataId,dtype:L.dtype,shape:f.shape},H=new Hn(n,p.shape,f.shape);return m.runWebGLProgram(H,[B,q],jn(E.dtype,L.dtype))}),I=ll({inputs:{real:S,imag:D},backend:m});return m.disposeIntermediateTensorInfo(S),m.disposeIntermediateTensorInfo(D),I}let y=s||jn(p.dtype,f.dtype);if(m.shouldExecuteOnCPU([p,f])&&o!=null){let T=m.texData.get(p.dataId),N=m.texData.get(f.dataId),[S,D]=o(p.shape,f.shape,T.values,N.values,y),I=m.makeTensorInfo(D,y),P=m.texData.get(I.dataId);return P.values=S,I}let b=ct().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,v;return b?v=new Ns(t,p.shape,f.shape,e):v=new Hn(n,p.shape,f.shape),m.runWebGLProgram(v,[p,f],y)}}let aE="return a + b;",KJ=ul({opSnippet:aE,packedOpSnippet:aE,supportsComplex:!0,cpuKernelImpl:rX}),XJ={kernelName:Hi,backendName:"webgl",kernelFunc:KJ};let YJ=HJ+`
  return atan(a, b);
`,JJ=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+jJ+`
  return result;
`,ZJ=ul({opSnippet:YJ,packedOpSnippet:JJ}),QJ={kernelName:sf,backendName:"webgl",kernelFunc:ZJ};function tZ(n){let{inputs:t,backend:e,attrs:r}=n,{x:o}=t;sh(o,"avgPool");let{filterSize:s,strides:c,pad:l,dimRoundingMode:p}=r,f=1;_(fn(c,f),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${c} and dilations '${f}'`);let m=Kn(o.shape,s,c,f,l,p);if(m.filterWidth===1&&m.filterHeight===1&&lt(m.inShape,m.outShape))return Cs({inputs:{x:o},backend:e});let y=new ah(m,"avg",!1);return e.runWebGLProgram(y,[o],"float32")}let eZ={kernelName:au,backendName:"webgl",kernelFunc:tZ};function nZ(n){let{inputs:t,backend:e,attrs:r}=n,{dy:o,input:s}=t,c=s;sh([o,s],"avgPoolBackprop");let{filterSize:l,strides:p,pad:f}=r,m=Kn(c.shape,l,p,1,f),y=new nY(m);return e.runWebGLProgram(y,[o],c.dtype)}let rZ={kernelName:af,backendName:"webgl",kernelFunc:nZ};class oZ{constructor(t,e,r,o,s,c){this.outputShape=[],this.variableNames=["x","mean","variance"],le(t,e),le(t,r);let l="0.0";o!=null&&(le(t,o),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let p="1.0";s!=null&&(le(t,s),this.variableNames.push("scale"),p="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${l};
        float scale = ${p};
        float inv = scale * inversesqrt(variance + float(${c}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}class sZ{constructor(t,e,r,o,s,c){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],le(t,e),le(t,r);let l="vec4(0.0)";o!=null&&(le(t,o),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let p="vec4(1.0)";s!=null&&(le(t,s),this.variableNames.push("scale"),p="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${l};
        vec4 scale = ${p};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${c}));

        setOutput((x - mean) * inv + offset);
      }
    `}}let iZ=({inputs:n,backend:t,attrs:e})=>{let{x:r,mean:o,variance:s,offset:c,scale:l}=n;_(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),_(c==null||o.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),_(l==null||o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:p}=e;p==null&&(p=.001);let f=[r,o,s],m=null;c!=null&&(m=c.shape,f.push(c));let y=null;l!=null&&(y=l.shape,f.push(l));let b=ct().getBool("WEBGL_PACK_NORMALIZATION")?new sZ(r.shape,o.shape,s.shape,m,y,p):new oZ(r.shape,o.shape,s.shape,m,y,p),v=t.runWebGLProgram(b,f,f[0].dtype);return v},aZ={kernelName:yu,backendName:"webgl",kernelFunc:iZ};let cZ="return float(a != b);",cE=ul({opSnippet:cZ,dtype:"bool"}),lZ={kernelName:Su,backendName:"webgl",kernelFunc:cE};function T1(n){let{inputs:t,backend:e}=n,{input:r}=t,o=e.texData.get(r.dataId);return Cs({inputs:{x:o.complexTensorInfos.real},backend:e})}let uZ={kernelName:$f,backendName:"webgl",kernelFunc:T1};let pZ="return float(int(x));";function hZ(n,t){let e=new ue(n.shape,pZ),r=t.runWebGLProgram(e,[n],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function k1(n){let{inputs:t,backend:e,attrs:r}=n,{x:o}=t,{dtype:s}=r;if(s==="complex64"){if(o.dtype==="complex64")return Cs({inputs:{x:o},backend:e});let c=xe(o.shape),l=k1({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),p=ll({inputs:{real:l,imag:c},backend:e});return c.dispose(),e.disposeIntermediateTensorInfo(l),p}if(o.dtype==="complex64"){let c=T1({inputs:{input:o},backend:e}),l=k1({inputs:{x:c},backend:e,attrs:{dtype:s}});return e.disposeIntermediateTensorInfo(c),l}if(!sc(o.dtype,s)){let c=Cs({inputs:{x:o},backend:e});return{dataId:c.dataId,shape:c.shape,dtype:s}}if(s==="int32")return hZ(o,e);if(s==="bool"){let c=e.makeTensorInfo([],"bool",Ce("bool",1)),l={a:o,b:c},p=cE({inputs:l,backend:e});return e.disposeIntermediateTensorInfo(c),p}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}let fZ={kernelName:cc,backendName:"webgl",kernelFunc:k1};class dZ{constructor(t){this.outputShape=[],this.outputShape=hs(t,1),this.variableNames=t.map((c,l)=>`T${l}`);let e=new Array(t.length-1);e[0]=t[0][1];for(let c=1;c<e.length;c++)e[c]=e[c-1]+t[c][1];let r=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let c=1;c<e.length;c++){let l=e[c-1];r.push(`else if (yC < ${e[c]}) setOutput(getT${c}(yR, yC-${l}));`)}let o=e.length,s=e[e.length-1];r.push(`else setOutput(getT${o}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}}class mZ{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=hs(t,e);let r=this.outputShape,o=r.length,s=Oe(o),c=Yn("coords",o),l=["x","y","z","w","u","v"].slice(0,o);this.variableNames=t.map((N,S)=>`T${S}`);let p=new Array(t.length-1);p[0]=t[0][e];for(let N=1;N<p.length;N++)p[N]=p[N-1]+t[N][e];let f=l[e],m=l.slice(-2),y=l.join(),b=`if (${f} < ${p[0]}) {
        return getChannel(
            getT0(${y}), vec2(${m.join()}));
        }`;for(let N=1;N<p.length;N++){let S=p[N-1];b+=`
        if (${f} < ${p[N]}  && ${f} >= ${p[N-1]}) {
          return getChannel(
            getT${N}(${Gm(l,f,S)}),
            vec2(${Gm(m,f,S)}));
        }`}let v=p.length,T=p[p.length-1];b+=`
        return getChannel(
          getT${v}(${Gm(l,f,T)}),
          vec2(${Gm(m,f,T)}));`,this.userCode=`
      float getValue(${l.map(N=>"int "+N)}) {
        ${b}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${c}), 0., 0., 0.);

        ${c[o-1]} = ${c[o-1]} + 1;
        if (${c[o-1]} < ${r[o-1]}) {
          result.g = getValue(${c});
        }

        ${c[o-2]} = ${c[o-2]} + 1;
        if (${c[o-2]} < ${r[o-2]}) {
          result.a = getValue(${c});
        }

        ${c[o-1]} = ${c[o-1]} - 1;
        if (${c[o-2]} < ${r[o-2]} &&
            ${c[o-1]} < ${r[o-1]}) {
          result.b = getValue(${c});
        }
        setOutput(result);
      }
    `}}function Gm(n,t,e){let r=n.indexOf(t),o=n.map((s,c)=>c===r?`${s} - ${e}`:s);return o.join()}function lE(n){let{inputs:t,backend:e}=n,{input:r}=t,o=e.texData.get(r.dataId);return Cs({inputs:{x:o.complexTensorInfos.imag},backend:e})}let gZ={kernelName:wf,backendName:"webgl",kernelFunc:lE};function yZ(n,t,e){let r=[rl(n.shape),...ol(n.shape)],o={dtype:n.dtype,shape:r,dataId:n.dataId},s=[rl(t),...ol(t)],c=new WI(s,r),l=!0,p=e.runWebGLProgram(c,[o],n.dtype,null,l);return{dataId:p.dataId,shape:t,dtype:p.dtype}}function Ss(n){let{inputs:t,backend:e,attrs:r}=n,{x:o}=t,{shape:s}=r,c=e,l=G(o.shape),p=Ge(s,l),f=G(p);_(l===f,()=>`The new shape (${p}) has ${f} elements and the old shape (${o.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`);let m=c.texData.get(o.dataId);return m.isPacked&&!Rm(o.shape,p)&&!(m.texture!==null&&Rm(m.shape,p))?yZ(o,p,c):(c.incRef(o.dataId),{dataId:o.dataId,shape:p,dtype:o.dtype})}let bZ={kernelName:Eu,backendName:"webgl",kernelFunc:Ss};function pl(n,t,e){let r=n[0].dtype;if(r==="complex64"){let f=n.map(T=>T1({inputs:{input:T},backend:e})),m=n.map(T=>lE({inputs:{input:T},backend:e})),y=pl(f,t,e),b=pl(m,t,e),v=ll({inputs:{real:y,imag:b},backend:e});return f.forEach(T=>e.disposeIntermediateTensorInfo(T)),m.forEach(T=>e.disposeIntermediateTensorInfo(T)),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),v}if(n.length>ct().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let f=Math.floor(n.length/2),m=pl(n.slice(0,f),t,e),y=pl(n.slice(f),t,e),b=pl([m,y],t,e);return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),b}if(ct().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&n[0].shape.length>1){let f=new mZ(n.map(m=>m.shape),t);return e.runWebGLProgram(f,n,r)}let o=hs(n.map(f=>f.shape),t),s=n.map(f=>Ss({inputs:{x:f},attrs:{shape:[-1,G(f.shape.slice(t))]},backend:e})),c=new dZ(s.map(f=>f.shape)),l=e.runWebGLProgram(c,s,r);s.forEach(f=>e.disposeIntermediateTensorInfo(f));let p=Ss({inputs:{x:l},attrs:{shape:o},backend:e});return e.disposeIntermediateTensorInfo(l),p}function xZ(n){let{inputs:t,backend:e,attrs:r}=n,{axis:o}=r,s=Vt(o,t[0].shape)[0],c=hs(t.map(f=>f.shape),s);if(G(c)===0)return e.makeTensorInfo(c,t[0].dtype,[]);let l=t.filter(f=>G(f.shape)>0);if(l.length===1)return l[0];let p=l.map(f=>f.shape);return id(p,s),pl(l,s,e)}let wZ={kernelName:uu,backendName:"webgl",kernelFunc:xZ};let vZ=iE+`
  return cos(x);
`,TZ=Vm(vZ),kZ={kernelName:lc,backendName:"webgl",kernelFunc:TZ};let NZ=`
if (a == b) {
  return 1.0;
};
return a / b;`,_Z=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,CZ=ul({opSnippet:NZ,packedOpSnippet:_Z,checkOutOfBounds:!0}),SZ={kernelName:uc,backendName:"webgl",kernelFunc:CZ};class uE{constructor(t,e,r){this.variableNames=["real","imag"];let o=e[1];this.outputShape=e;let s=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,c=r?`${o}.0`:"1.0",l;if(t==="real")l="return real * expR - imag * expI;";else if(t==="imag")l="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${l}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${c};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}function pE(n,t,e){let r=e.texData.get(n.dataId),o=G(n.shape),s=n.shape[n.shape.length-1],c=o/s,l=Ss({inputs:{x:n},backend:e,attrs:{shape:[c,s]}}),p=l.shape,f=new uE("real",p,t),m=new uE("imag",p,t),y=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:p},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:p}],b=e.runWebGLProgram(f,y,"float32"),v=e.runWebGLProgram(m,y,"float32"),T=ll({inputs:{real:b,imag:v},backend:e});e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(v);let N=Ss({inputs:{x:T},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(N),N}function $Z(n){let{inputs:t,backend:e}=n,{input:r}=t;return pE(r,!1,e)}let IZ={kernelName:yf,backendName:"webgl",kernelFunc:$Z};class EZ{constructor(t){this.variableNames=["Image"],this.outputShape=[];let e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}let DZ={kernelName:bf,backendName:"webgl",kernelFunc:({inputs:n,backend:t})=>{let{image:e}=n,r=t,o=new EZ(e.shape),s=r.runWebGLProgram(o,[e],e.dtype);return s}};class AZ{constructor(t){this.variableNames=["A"];let e=Jn(),[r,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${r}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}class FZ{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let e=Jn(),[r,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${r}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}}let RZ={kernelName:Ff,backendName:"webgl",kernelFunc:PZ},hl;function PZ(n){let{inputs:t,backend:e,attrs:r}=n,{pixels:o}=t,{numChannels:s}=r,c=typeof HTMLVideoElement!="undefined"&&o instanceof HTMLVideoElement,l=typeof HTMLImageElement!="undefined"&&o instanceof HTMLImageElement,[p,f]=c?[o.videoWidth,o.videoHeight]:[o.width,o.height],m=[f,p],y=[f,p,s];(l||c)&&(hl==null&&(hl=document.createElement("canvas").getContext("2d")),hl.canvas.width=p,hl.canvas.height=f,hl.drawImage(o,0,0,p,f),o=hl.canvas);let b=e.makeTensorInfo(m,"int32");e.texData.get(b.dataId).usage=Mr.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(b.dataId),o);let v=ct().getBool("WEBGL_PACK")?new FZ(y):new AZ(y),T=e.runWebGLProgram(v,[b],"int32");return e.disposeData(b.dataId),T}function OZ(n){let{inputs:t,backend:e}=n,{input:r}=t;return pE(r,!0,e)}let LZ={kernelName:xf,backendName:"webgl",kernelFunc:OZ};class hE{constructor(t,e){this.variableNames=["x"];let{windowSize:r,batchSize:o,inSize:s,outSize:c}=t;this.outputShape=[o,c];let l=Math.floor(r/4)*4,p=r%4,f="sumValue += dot(values, ones);";if(e!=null){let y=1/e;f=`sumValue += dot(values * ${gt(y)?y.toPrecision(2):y}, ones);`}let m="";s%r>0&&(m=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${m}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${f}
        }

        int inIdx = inOffset + ${l};
        if (${p===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${f}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${f}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${f}
        }
        setOutput(sumValue);
      }
    `}}function MZ(n){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let e=t.length?t[t.length-1].outSize:n[1],r=sp(e);t.push({inSize:e,windowSize:r,outSize:Math.ceil(e/r)})}return t}function fE(n,t,e,r){let o=MZ(n.shape),s=n;for(let c=0;c<o.length;c++){let{inSize:l,windowSize:p,outSize:f}=o[c],m,y;e==="mean"?m=c===0?new hE({windowSize:p,inSize:l,batchSize:n.shape[0],outSize:f},l):new hE({windowSize:p,inSize:l,batchSize:n.shape[0],outSize:f}):m=new zI({windowSize:p,inSize:l,batchSize:n.shape[0],outSize:f},e),y=s,s=r.runWebGLProgram(m,[s],t),y.dataId!==n.dataId&&r.disposeIntermediateTensorInfo(y)}return s}function BZ(n,t,e,r){let o=G(t),s=G(n.shape),c=s/o,l=Ss({inputs:{x:n},attrs:{shape:[c,o]},backend:r}),p=fE(l,n.dtype,"max",r),f=Ss({inputs:{x:p},attrs:{shape:e},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(p),f}class zZ{constructor(t,e){this.variableNames=["A"];let r=new Array(t.length);for(let c=0;c<r.length;c++)r[c]=t[e[c]];this.outputShape=r,this.rank=r.length;let o=Oe(this.rank),s=WZ(e);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}}function WZ(n){let t=n.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let o=0;o<n.length;o++)r[n[o]]=e[o];return r.join()}class VZ{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let r=new Array(t.length);for(let m=0;m<r.length;m++)r[m]=t[e[m]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let o=Oe(this.rank),s=wI("rc",this.rank),c=new Array(this.rank);for(let m=0;m<e.length;m++)c[e[m]]=s[m];let l=`vec2(${c.slice(-2).join()})`,p=`++${s[this.rank-1]} < ${r[this.rank-1]}`,f=`getChannel(getA(${c.join()}), ${l})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${f};
      if(${p}) {
        result[1] = ${f};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${f};
        if(${p}) {
          result[3] = ${f};
        }
      }
      setOutput(result);
    }
    `}}function N1(n,t,e){let r=ct().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new VZ(n.shape,t):new zZ(n.shape,t);return e.runWebGLProgram(r,[n],n.dtype)}let GZ={kernelName:Nu,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{let{x:r}=n,{reductionIndices:o,keepDims:s}=t,c=e,l=r.shape.length,p=Vt(o,r.shape),f=p,m=ir(f,l),y=m!=null,b=c.shouldExecuteOnCPU([r]),v=r;if(y){if(b){let I=c.texData.get(v.dataId),P=I.values,E=new Array(l);for(let q=0;q<E.length;q++)E[q]=r.shape[m[q]];let L=y1(P,r.shape,r.dtype,m,E);v=c.makeTensorInfo(E,r.dtype);let B=c.texData.get(v.dataId);B.values=L}else v=N1(r,m,c);f=xr(f.length,l)}sr("max",f,l);let[T,N]=Fn(v.shape,f),S=T;s&&(S=Rn(T,p));let D;if(b){let I=c.texData.get(v.dataId),P=I.values,E=lX(P,G(N),S,r.dtype);D=c.makeTensorInfo(S,r.dtype);let L=c.texData.get(D.dataId);L.values=E}else D=BZ(v,N,S,c);return y&&c.disposeIntermediateTensorInfo(v),D}};function UZ(n){let{inputs:t,backend:e,attrs:r}=n,{x:o}=t;sh(o,"maxPool");let{filterSize:s,strides:c,pad:l,dimRoundingMode:p}=r,f=1;_(fn(c,f),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${c} and dilations '${f}'`);let m=Kn(o.shape,s,c,f,l,p);if(m.filterWidth===1&&m.filterHeight===1&&lt(m.inShape,m.outShape))return Cs({inputs:{x:o},backend:e});let y=new ah(m,"max",!1);return e.runWebGLProgram(y,[o],o.dtype)}let qZ={kernelName:_u,backendName:"webgl",kernelFunc:UZ};function HZ(n){let{inputs:t,backend:e,attrs:r}=n,{dy:o,input:s,output:c}=t,l=s;sh([s,c],"maxPoolBackprop");let{filterSize:p,strides:f,pad:m,dimRoundingMode:y}=r,b=Kn(l.shape,p,f,1,m,y),v=!0,T=new ah(b,"max",v),N=e.runWebGLProgram(T,[l],l.dtype),S=new N7(b),D=e.runWebGLProgram(S,[o,N],l.dtype);return e.disposeIntermediateTensorInfo(N),D}let jZ={kernelName:Tf,backendName:"webgl",kernelFunc:HZ};function KZ(n,t,e,r){let o=new ah(e,"max",!1),s=r.runWebGLProgram(o,[n],"float32");o=new ah(e,"max",!0,!0,t);let c=r.runWebGLProgram(o,[n],"float32");return[s,c]}let XZ={kernelName:kf,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{let{x:r}=n,{filterSize:o,strides:s,pad:c,includeBatchInIndex:l}=t,p=e;_(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let f=[1,1];_(fn(s,f),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${f}'`);let m=Kn(r.shape,o,s,f,c),[y,b]=KZ(r,l,m,p);return[y,b]}};function YZ(n,t,e,r){let o=G(t),s=G(n.shape),c=s/o,l=Ss({inputs:{x:n},attrs:{shape:[c,o]},backend:r}),p=fE(l,"float32","mean",r),f=Ss({inputs:{x:p},attrs:{shape:e},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(p),f}let JZ={kernelName:ix,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{let{x:r}=n,{keepDims:o,axis:s}=t,c=e,l=r.shape.length,p=Vt(s,r.shape),f=p,m=ir(f,l),y=m!=null,b=c.shouldExecuteOnCPU([r]),v=[],T=r;if(y){if(b){let P=c.texData.get(T.dataId),E=P.values,L=new Array(l);for(let H=0;H<L.length;H++)L[H]=r.shape[m[H]];let B=y1(E,r.shape,r.dtype,m,L);T=c.makeTensorInfo(L,r.dtype);let q=c.texData.get(T.dataId);q.values=B}else T=N1(r,m,c);v.push(T),f=xr(f.length,l)}sr("sum",f,l);let[N,S]=Fn(T.shape,f),D=N;o&&(D=Rn(N,p));let I=YZ(T,S,D,c);for(let P of v)c.disposeIntermediateTensorInfo(P);return I}};class ZZ{constructor(t,e,r){this.variableNames=["x"],this.outputShape=e.map((m,y)=>m[0]+t[y]+m[1]);let o=t.length,s=Oe(o),c=e.map(m=>m[0]).join(","),l=e.map((m,y)=>m[0]+t[y]).join(","),p=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),f=r==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${c};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${f};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${f};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${c});
      ${s} end = ${s}(${l});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${f};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${f};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${p}));
      }
    `}}class QZ{constructor(t,e,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((T,N)=>T[0]+t[N]+T[1]);let o=t.length,s=Oe(o),c=e.map(T=>T[0]).join(","),l=e.map((T,N)=>T[0]+t[N]).join(","),p=Yn("rc",o),f=Yn("source",o),m=`${p[o-1]} < ${this.outputShape[o-1]}`,y=o===1?"source":`vec2(${f.slice(-2).join()})`,b=r==="reflect"?0:1,v="";if(o===1){let T=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${b};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${b};
        }
        source -= start;
      `;v=`
        ${s} rc = outputLoc;
        ${T}
        result[0] = getChannel(getX(${f.join()}), ${y});
        ${p[o-1]} += 1;
        if(${m}) {
          ${T}
          result[1] = getChannel(getX(${f.join()}), ${y});
        }
      `}else{let T=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${b}) +
                gte * ((end - 1) * 2 - source + ${b});
        source -= start;
      `;v=`
        ${s} rc = outputLoc;
        ${T}
        result[0] = getChannel(getX(${f.join()}), ${y});
        ${p[o-1]} += 1;
        if(${m}) {
          ${T}
          result[1] = getChannel(getX(${f.join()}), ${y});
        }
        rc = outputLoc;
        ${p[o-2]} += 1;
        if(${p[o-2]} < ${this.outputShape[o-2]}) {
          ${T}
          result[2] = getChannel(getX(${f.join()}), ${y});
          ${p[o-1]} += 1;
          if(${m}) {
            ${T}
            result[3] = getChannel(getX(${f.join()}), ${y});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${c});
      const ${s} end = ${s}(${l});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${v}
        setOutput(result);
      }
    `}}let t9=({inputs:n,backend:t,attrs:e})=>{let{x:r}=n,{paddings:o,mode:s}=e,c=ct().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new QZ(r.shape,o,s):new ZZ(r.shape,o,s),l=t.runWebGLProgram(c,[r],r.dtype);return l},e9={kernelName:Cu,backendName:"webgl",kernelFunc:t9};let dE={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class mE{constructor(t,e,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=le(e,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}let gE="return a * b;";function n9(n){let{inputs:t,backend:e}=n,{a:r,b:o}=t,s=jn(r.dtype,o.dtype);if(r.dtype==="complex64"){let l=e.texData.get(r.dataId),p=e.texData.get(o.dataId),f=new mE(dE.REAL,r.shape,o.shape),m=new mE(dE.IMAG,r.shape,o.shape),y=[{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:o.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:o.shape}],b=e.runWebGLProgram(f,y,"float32"),v=e.runWebGLProgram(m,y,"float32"),T=ll({inputs:{real:b,imag:v},backend:e});return e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(v),T}if(e.shouldExecuteOnCPU([r,o])){let l=e.texData.get(r.dataId),p=e.texData.get(o.dataId),[f,m]=uX(r.shape,o.shape,l.values,p.values,s),y=e.makeTensorInfo(m,s),b=e.texData.get(y.dataId);return b.values=f,y}let c;return ct().getBool("WEBGL_PACK_BINARY_OPERATIONS")?c=new Ns(gE,r.shape,o.shape):c=new Hn(gE,r.shape,o.shape),e.runWebGLProgram(c,[r,o],s)}let r9={kernelName:pc,backendName:"webgl",kernelFunc:n9};let o9={kernelName:px,backendName:"webgl",kernelFunc:({inputs:n,backend:t,attrs:e})=>{Bc("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{boxes:r,scores:o}=n,{maxOutputSize:s,iouThreshold:c,scoreThreshold:l}=e,p=t,f=p.readSync(r.dataId),m=p.readSync(o.dataId),y=s,b=c,v=l;return Od(f,m,y,b,v)}};let s9=Ld,i9={kernelName:Nf,backendName:"webgl",kernelFunc:({inputs:n,backend:t,attrs:e})=>{Bc("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{boxes:r,scores:o}=n,{maxOutputSize:s,iouThreshold:c,scoreThreshold:l,padToMaxOutputSize:p}=e,f=t,m=f.readSync(r.dataId),y=f.readSync(o.dataId),{selectedIndices:b,validOutputs:v}=s9(m,y,s,c,l,p);return[b,v]}};let a9=Md,c9={kernelName:_f,backendName:"webgl",kernelFunc:({inputs:n,backend:t,attrs:e})=>{Bc("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{boxes:r,scores:o}=n,{maxOutputSize:s,iouThreshold:c,scoreThreshold:l,softNmsSigma:p}=e,f=t,m=f.readSync(r.dataId),y=f.readSync(o.dataId),b=s,v=c,T=l,N=p,{selectedIndices:S,selectedScores:D}=a9(m,y,b,v,T,N);return[S,D]}};class l9{constructor(t,e,r,o){this.variableNames=["Image"],this.outputShape=[];let s=t[1],c=t[2],l=Math.sin(e).toFixed(3),p=Math.cos(e).toFixed(3);this.outputShape=t;let[f,m]=jw(o,s,c),y=f.toFixed(3),b=m.toFixed(3),v="";typeof r=="number"?v=`float outputValue = ${r.toFixed(2)};`:v=`
        vec3 fill = vec3(${r.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - ${y}) * ${p} - (float(y) - ${b}) * ${l};
          float coordYFloat = (float(x) - ${y}) * ${l} + (float(y) - ${b}) * ${p};
          int coordX = int(round(coordXFloat + ${y}));
          int coordY = int(round(coordYFloat + ${b}));
          ${v}
          if(coordX >= 0 && coordX < ${c} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}let u9={kernelName:Rf,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{let{image:r}=n,{radians:o,fillValue:s,center:c}=t,l=e,p=new l9(r.shape,o,s,c),f=l.runWebGLProgram(p,[r],r.dtype);return f}};let p9=iE+`
  return sin(x);
`,h9=Vm(p9),f9={kernelName:hc,backendName:"webgl",kernelFunc:h9};let d9="return x * x;",m9=Vm(d9),g9={kernelName:Df,backendName:"webgl",kernelFunc:m9};let yE="return (a - b) * (a - b);",y9=ul({opSnippet:yE,packedOpSnippet:yE}),b9={kernelName:fc,backendName:"webgl",kernelFunc:y9};let bE="return a - b;",x9=ul({opSnippet:bE,packedOpSnippet:bE,supportsComplex:!0,cpuKernelImpl:fX}),w9={kernelName:dc,backendName:"webgl",kernelFunc:x9};let v9="return tan(x);",T9=Vm(v9),k9={kernelName:mc,backendName:"webgl",kernelFunc:T9};let N9={kernelName:Wu,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{let{x:r}=n,{perm:o}=t,s=e,c=r.shape.length,l=new Array(c);for(let f=0;f<l.length;f++)l[f]=r.shape[o[f]];let p;if(s.shouldExecuteOnCPU([r])){let f=s.texData.get(r.dataId),m=f.values,y=y1(m,r.shape,r.dtype,o,l);p=s.makeTensorInfo(l,r.dtype);let b=s.texData.get(p.dataId);b.values=y}else p=N1(r,o,s);return p}};function _9(n){let{inputs:t,attrs:e,backend:r}=n,{axis:o}=e,{x:s}=t;sh(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let c=r.readSync(s.dataId),{outputValues:l,outputShape:p,indices:f}=dX(c,o,s.shape,s.dtype);return[r.makeTensorInfo(p,s.dtype,l),r.makeTensorInfo([f.length],"int32",f)]}let C9={kernelName:Af,backendName:"webgl",kernelFunc:_9};let S9=[XJ,QJ,eZ,rZ,aZ,fZ,qJ,wZ,kZ,SZ,IZ,DZ,RZ,UJ,LZ,gZ,GZ,qZ,jZ,XZ,JZ,e9,r9,o9,i9,c9,lZ,uZ,bZ,u9,f9,g9,w9,b9,k9,N9,C9];for(let n of S9)Bf(n);let $9="2.7.0";let I9={"tfjs-core":f_,"tfjs-backend-cpu":q6,"tfjs-backend-webgl":VJ,"tfjs-data":z$,"tfjs-layers":fm,"tfjs-converter":w$,tfjs:$9};i.Abs=of,i.Acos=eu,i.Acosh=nu,i.AdadeltaOptimizer=bp,i.AdagradOptimizer=xp,i.AdamOptimizer=wp,i.AdamaxOptimizer=vp,i.Add=Hi,i.AddN=zb,i.All=tN,i.Any=eN,i.ArgMax=Wb,i.ArgMin=Vb,i.Asin=ru,i.Asinh=ou,i.Atan=su,i.Atan2=sf,i.Atanh=iu,i.AvgPool=au,i.AvgPool3D=Gb,i.AvgPool3DBackprop=nN,i.AvgPoolBackprop=af,i.BatchMatMul=cf,i.BatchToSpaceND=Ub,i.BroadcastTo=qb,i.Callback=s$,i.CallbackList=QC,i.Cast=cc,i.Ceil=cu,i.ClipByValue=lu,i.Complex=lf,i.Concat=uu,i.Conv2D=uf,i.Conv2DBackpropFilter=Hb,i.Conv2DBackpropInput=pf,i.Conv3D=hf,i.Conv3DBackpropFilterV2=jb,i.Conv3DBackpropInputV2=Kb,i.Cos=lc,i.Cosh=pu,i.CropAndResize=rN,i.Cumsum=Xb,i.CustomCallback=eS,i.DataStorage=h,i.DepthToSpace=oN,i.DepthwiseConv2dNative=ff,i.DepthwiseConv2dNativeBackpropFilter=Yb,i.DepthwiseConv2dNativeBackpropInput=Jb,i.Diag=sN,i.Dilation2D=df,i.Dilation2DBackpropFilter=gf,i.Dilation2DBackpropInput=mf,i.Div=uc,i.EarlyStopping=a$,i.Elu=hu,i.EluGrad=iN,i.Environment=Jk,i.Equal=aN,i.Erf=fu,i.Exp=du,i.Expm1=mu,i.FFT=yf,i.Fill=Zb,i.FlipLeftRight=bf,i.Floor=gu,i.FloorDiv=Qb,i.FromPixels=Ff,i.FusedBatchNorm=yu,i.FusedConv2D=Of,i.FusedDepthwiseConv2D=Lf,i.GatherNd=cN,i.GatherV2=tx,i.GraphModel=x$,i.Greater=lN,i.GreaterEqual=ex,i.History=tS,i.IFFT=xf,i.Identity=bu,i.Imag=wf,i.InputSpec=In,i.IsFinite=xu,i.IsInf=wu,i.IsNan=vu,i.KernelBackend=d,i.LRN=rx,i.LRNBackprop=mN,i.LayerVariable=bo,i.LayersModel=ws,i.Less=uN,i.LessEqual=pN,i.LinSpace=hN,i.Log=Tu,i.Log1p=ku,i.LogSoftmax=nx,i.LogicalAnd=fN,i.LogicalNot=vf,i.LogicalOr=dN,i.Max=Nu,i.MaxPool=_u,i.MaxPool3D=sx,i.MaxPool3DBackprop=gN,i.MaxPoolBackprop=Tf,i.MaxPoolWithArgmax=kf,i.Maximum=ox,i.Mean=ix,i.Min=ax,i.Minimum=cx,i.MirrorPad=Cu,i.Mod=lx,i.MomentumOptimizer=Tp,i.Multiply=pc,i.Negate=ux,i.NonMaxSuppressionV3=px,i.NonMaxSuppressionV4=Nf,i.NonMaxSuppressionV5=_f,i.NotEqual=Su,i.OP_SCOPE_SUFFIX=MN,i.OneHot=fx,i.OnesLike=hx,i.Optimizer=gs,i.PadV2=Cf,i.Pool=aP,i.Pow=dx,i.Prelu=Sf,i.Prod=yN,i.RMSPropOptimizer=kp,i.RNN=ko,i.Range=bN,i.Real=$f,i.Reciprocal=$u,i.Relu=Iu,i.Relu6=Du,i.Reshape=Eu,i.ResizeBilinear=gx,i.ResizeBilinearGrad=wN,i.ResizeNearestNeighbor=mx,i.ResizeNearestNeighborGrad=xN,i.Reverse=yx,i.RotateWithOffset=Rf,i.Round=Au,i.Rsqrt=Fu,i.SGDOptimizer=Mc,i.ScatterNd=vN,i.SelectV2=bx,i.Selu=Ru,i.Sequential=ga,i.Sigmoid=Lu,i.Sign=Ou,i.Sin=hc,i.Sinh=Pu,i.Slice=If,i.Softmax=vx,i.Softplus=Mu,i.SpaceToBatchND=Ef,i.SparseToDense=TN,i.SplitV=wx,i.Sqrt=Bu,i.Square=Df,i.SquaredDifference=fc,i.Step=Vu,i.StridedSlice=kN,i.Sub=dc,i.Sum=xx,i.SymbolicTensor=xo,i.Tan=mc,i.Tanh=zu,i.Tensor=ot,i.TensorBuffer=hn,i.Tile=Tx,i.TopK=NN,i.Transpose=Wu,i.Unique=Af,i.Unpack=kx,i.UnsortedSegmentSum=Nx,i.Variable=Ku,i.ZerosLike=_x,i._FusedMatMul=Pf,i.abs=bn,i.acos=nw,i.acosh=rw,i.add=Tt,i.addN=g_,i.addStrict=H_,i.all=rd,i.any=Zu,i.argMax=Qu,i.argMin=sw,i.asin=iw,i.asinh=aw,i.atan=cw,i.atan2=lw,i.atanh=uw,i.avgPool=ep,i.avgPool3d=fw,i.backend=m_,i.backend_util=ov,i.basicLSTMCell=CL,i.batchNorm=ea,i.batchNorm2d=b_,i.batchNorm3d=x_,i.batchNorm4d=w_,i.batchToSpaceND=np,i.booleanMaskAsync=M3,i.broadcastTo=rp,i.browser=IO,i.buffer=Se,i.callbacks=aH,i.cast=$t,i.ceil=dw,i.clipByValue=ar,i.clone=ni,i.complex=us,i.concat=Qe,i.concat1d=v_,i.concat2d=T_,i.concat3d=k_,i.concat4d=N_,i.constraints=AV,i.conv1d=cd,i.conv2d=fs,i.conv2dTranspose=ld,i.conv3d=gw,i.conv3dTranspose=jL,i.copyRegisteredKernels=uP,i.cos=op,i.cosh=ud,i.cosineWindow=Gw,i.cumsum=pd,i.customGrad=zo,i.data=c6,i.deprecationWarn=yn,i.depthToSpace=yw,i.depthwiseConv2d=na,i.deregisterOp=lH,i.device_util=IP,i.diag=tM,i.dilation2d=bw,i.disableDeprecationWarnings=VO,i.dispose=Xt,i.disposeVariables=GO,i.div=Bt,i.divNoNan=xw,i.divStrict=j_,i.dot=C_,i.dropout=oC,i.elu=_c,i.enableDebugMode=WO,i.enableProdMode=zO,i.enclosingPowerOfTwo=sC,i.engine=ps,i.env=ct,i.equal=po,i.equalStrict=z_,i.erf=ww,i.exp=Ar,i.expandDims=cr,i.expm1=vw,i.eye=hd,i.fft=dp,i.fill=Cc,i.findBackend=XO,i.findBackendFactory=YO,i.floor=Sc,i.floorDiv=nd,i.fused=yz,i.gather=$c,i.gatherND=rC,i.gather_util=EO,i.getBackend=jO,i.getGradient=Sx,i.getKernel=Cx,i.getKernelsForBackend=Mf,i.grad=AM,i.grads=FM,i.greater=Fr,i.greaterEqual=ds,i.greaterEqualStrict=W_,i.greaterStrict=V_,i.ifft=Rc,i.imag=ip,i.image=pi,i.inTopKAsync=uz,i.initializers=dG,i.input=_S,i.io=xO,i.irfft=Sd,i.isFinite=$_,i.isInf=I_,i.isNaN=E_,i.keep=Sn,i.kernel_impls=SW,i.layers=Mq,i.leakyRelu=fd,i.less=ap,i.lessEqual=ai,i.lessEqualStrict=G_,i.lessStrict=U_,i.linalg=mC,i.linspace=D_,i.loadGraphModel=Cj,i.loadLayersModel=gU,i.localResponseNormalization=kw,i.log=wr,i.log1p=dd,i.logSigmoid=A_,i.logSoftmax=gd,i.logSumExp=_w,i.logicalAnd=Yr,i.logicalNot=cp,i.logicalOr=yd,i.logicalXor=F_,i.losses=kW,i.matMul=ge,i.math=CO,i.max=lr,i.maxPool=lp,i.maxPool3d=Cw,i.maxPoolWithArgmax=R_,i.maximum=Xr,i.maximumStrict=K_,i.mean=en,i.memory=ed,i.metrics=tH,i.min=Ec,i.minimum=oa,i.minimumStrict=X_,i.mirrorPad=Sw,i.mod=bd,i.modStrict=Y_,i.model=dU,i.models=eH,i.moments=xd,i.movingAverage=nz,i.mul=nt,i.mulStrict=J_,i.multiRNNCell=sB,i.multinomial=P_,i.neg=tn,i.nextFrame=Bd,i.norm=Ed,i.notEqual=ci,i.notEqualStrict=q_,i.oneHot=Zi,i.ones=ho,i.onesLike=qn,i.op=j,i.outerProduct=pB,i.pad=Wo,i.pad1d=dB,i.pad2d=gB,i.pad3d=bB,i.pad4d=wB,i.pool=O_,i.pow=fo,i.powStrict=Z_,i.prelu=pp,i.print=jN,i.prod=wd,i.profile=UO,i.rand=IB,i.randomGamma=GB,i.randomNormal=Ew,i.randomUniform=aa,i.range=hp,i.ready=HO,i.real=Dc,i.reciprocal=Dw,i.registerBackend=ew,i.registerCallbackConstructor=yU,i.registerGradient=_N,i.registerKernel=Bf,i.registerOp=cH,i.regularizers=sH,i.relu=Vo,i.relu6=Aw,i.removeBackend=KO,i.reshape=Q,i.reverse=Rr,i.reverse1d=JB,i.reverse2d=QB,i.reverse3d=e3,i.reverse4d=r3,i.rfft=mp,i.round=Fw,i.rsqrt=vd,i.scalar=Et,i.scatterND=nC,i.scatter_util=DO,i.selu=Td,i.separableConv2d=Rw,i.sequential=mU,i.serialization=AO,i.setBackend=d_,i.setPlatform=JO,i.setdiff1dAsync=L_,i.sigmoid=Bo,i.sign=Pw,i.signal=TW,i.sin=kd,i.sinh=Nd,i.slice=ce,i.slice1d=_d,i.slice2d=Ow,i.slice3d=Cd,i.slice4d=fp,i.slice_util=p_,i.softmax=ca,i.softplus=Ic,i.spaceToBatchND=up,i.sparseToDense=Vw,i.spectral=vW,i.split=Tr,i.sqrt=Pn,i.square=De,i.squaredDifference=gp,i.squaredDifferenceStrict=Q_,i.squeeze=li,i.stack=ur,i.step=Pc,i.stridedSlice=Lw,i.sub=Dt,i.subStrict=tC,i.sum=zt,i.sumOutType=Vf,i.tan=Mw,i.tanh=Nc,i.tensor=un,i.tensor1d=vr,i.tensor2d=ui,i.tensor3d=t_,i.tensor4d=Oc,i.tensor5d=I3,i.tensor6d=E3,i.tensor_util=_P,i.test_util=BO,i.tidy=rt,i.tile=ii,i.time=qO,i.topk=Bw,i.train=ua,i.transpose=Kt,i.truncatedNormal=yp,i.unique=$d,i.unregisterGradient=lP,i.unregisterKernel=cP,i.unsortedSegmentSum=zw,i.unstack=mo,i.upcastType=jn,i.util=hP,i.valueAndGrad=RM,i.valueAndGrads=PM,i.variable=B_,i.variableGrads=Nw,i.version=I9,i.version_converter=w$,i.version_core=f_,i.version_layers=fm,i.where=Xn,i.whereAsync=Ww,i.zeros=xe,i.zerosLike=re,Object.defineProperty(i,"__esModule",{value:!0})})}),SE=Hm((H9,CE)=>{jm(H9,{isNodejs:()=>j9});function j9(){return typeof global=="object"&&!0&&typeof CE!="undefined"&&typeof process!="undefined"&&!!process.version}}),lD=Hm(()=>{}),aot=te(ee()),Fk={};jm(Fk,{AnchorPosition:()=>Zo,DrawBox:()=>Zm,DrawBoxOptions:()=>W1,DrawFaceLandmarks:()=>Ak,DrawFaceLandmarksOptions:()=>Dk,DrawTextField:()=>Ii,DrawTextFieldOptions:()=>hh,drawContour:()=>Es,drawDetections:()=>Y9,drawFaceExpressions:()=>xrt,drawFaceLandmarks:()=>wrt});function Es(i,a,u=!1){if(i.beginPath(),a.slice(1).forEach(({x:h,y:d},g)=>{let x=a[g];i.moveTo(x.x,x.y),i.lineTo(h,d)}),u){let h=a[a.length-1],d=a[0];if(!h||!d)return;i.moveTo(h.x,h.y),i.lineTo(d.x,d.y)}i.stroke()}var S1={};jm(S1,{computeReshapedDimensions:()=>E1,getCenterPoint:()=>Na,isDimensions:()=>Ym,isEven:()=>Xm,isFloat:()=>I1,isTensor:()=>Ta,isTensor1D:()=>z9,isTensor2D:()=>$1,isTensor3D:()=>Ds,isTensor4D:()=>zr,isValidNumber:()=>$o,isValidProbablitiy:()=>ml,range:()=>Xo,round:()=>ka});var kE=te(ee()),Zn=class{constructor(a,u){if(!$o(a)||!$o(u))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:a,height:u})}`);this._width=a,this._height=u}get width(){return this._width}get height(){return this._height}reverse(){return new Zn(1/this.width,1/this.height)}};function Ta(i,a){return i instanceof kE.Tensor&&i.shape.length===a}function z9(i){return Ta(i,1)}function $1(i){return Ta(i,2)}function Ds(i){return Ta(i,3)}function zr(i){return Ta(i,4)}function I1(i){return i%1!==0}function Xm(i){return i%2===0}function ka(i,a=2){let u=Math.pow(10,a);return Math.floor(i*u)/u}function Ym(i){return i&&i.width&&i.height}function E1({width:i,height:a},u){let h=u/Math.max(a,i);return new Zn(Math.round(i*h),Math.round(a*h))}function Na(i){return i.reduce((a,u)=>a.add(u),new Jt(0,0)).div(new Jt(i.length,i.length))}function Xo(i,a,u){return Array(i).fill(0).map((h,d)=>a+d*u)}function $o(i){return!!i&&i!==Infinity&&i!==-Infinity&&!isNaN(i)||i===0}function ml(i){return $o(i)&&0<=i&&i<=1}var Jt=class{constructor(a,u){this._x=a,this._y=u}get x(){return this._x}get y(){return this._y}add(a){return new Jt(this.x+a.x,this.y+a.y)}sub(a){return new Jt(this.x-a.x,this.y-a.y)}mul(a){return new Jt(this.x*a.x,this.y*a.y)}div(a){return new Jt(this.x/a.x,this.y/a.y)}abs(){return new Jt(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(Math.pow(this.x,2)+Math.pow(this.y,2))}floor(){return new Jt(Math.floor(this.x),Math.floor(this.y))}},Fe=class{static isRect(a){return!!a&&[a.x,a.y,a.width,a.height].every($o)}static assertIsValidBox(a,u,h=!1){if(!Fe.isRect(a))throw new Error(`${u} - invalid box: ${JSON.stringify(a)}, expected object with properties x, y, width, height`);if(!h&&(a.width<0||a.height<0))throw new Error(`${u} - width (${a.width}) and height (${a.height}) must be positive numbers`)}constructor(a,u=!0){let h=a||{},d=[h.left,h.top,h.right,h.bottom].every($o),g=[h.x,h.y,h.width,h.height].every($o);if(!g&&!d)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(h)}`);let[x,w,k,C]=g?[h.x,h.y,h.width,h.height]:[h.left,h.top,h.right-h.left,h.bottom-h.top];Fe.assertIsValidBox({x,y:w,width:k,height:C},"Box.constructor",u),this._x=x,this._y=w,this._width=k,this._height=C}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new Jt(this.left,this.top)}get topRight(){return new Jt(this.right,this.top)}get bottomLeft(){return new Jt(this.left,this.bottom)}get bottomRight(){return new Jt(this.right,this.bottom)}round(){let[a,u,h,d]=[this.x,this.y,this.width,this.height].map(g=>Math.round(g));return new Fe({x:a,y:u,width:h,height:d})}floor(){let[a,u,h,d]=[this.x,this.y,this.width,this.height].map(g=>Math.floor(g));return new Fe({x:a,y:u,width:h,height:d})}toSquare(){let{x:a,y:u,width:h,height:d}=this,g=Math.abs(h-d);return h<d&&(a-=g/2,h+=g),d<h&&(u-=g/2,d+=g),new Fe({x:a,y:u,width:h,height:d})}rescale(a){let u=Ym(a)?a.width:a,h=Ym(a)?a.height:a;return new Fe({x:this.x*u,y:this.y*h,width:this.width*u,height:this.height*h})}pad(a,u){let[h,d,g,x]=[this.x-a/2,this.y-u/2,this.width+a,this.height+u];return new Fe({x:h,y:d,width:g,height:x})}clipAtImageBorders(a,u){let{x:h,y:d,right:g,bottom:x}=this,w=Math.max(h,0),k=Math.max(d,0),C=g-w,$=x-k,F=Math.min(C,a-w),_=Math.min($,u-k);return new Fe({x:w,y:k,width:F,height:_}).floor()}shift(a,u){let{width:h,height:d}=this,g=this.x+a,x=this.y+u;return new Fe({x:g,y:x,width:h,height:d})}padAtBorders(a,u){let h=this.width+1,d=this.height+1,g=1,x=1,w=h,k=d,C=this.left,$=this.top,F=this.right,_=this.bottom;return F>u&&(w=-F+u+h,F=u),_>a&&(k=-_+a+d,_=a),C<1&&(k=2-C,C=1),$<1&&(k=2-$,$=1),{dy:x,edy:k,dx:g,edx:w,y:$,ey:_,x:C,ex:F,w:h,h:d}}calibrate(a){return new Fe({left:this.left+a.left*this.width,top:this.top+a.top*this.height,right:this.right+a.right*this.width,bottom:this.bottom+a.bottom*this.height}).toSquare().round()}},gl=class extends Fe{constructor(a,u,h,d,g=!1){super({left:a,top:u,right:h,bottom:d},g)}};var Si=class{constructor(a,u,h,d,g){this._imageDims=new Zn(g.width,g.height),this._score=a,this._classScore=u,this._className=h,this._box=new Fe(d).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new Fe(this._box).rescale(this.imageDims.reverse())}forSize(a,u){return new Si(this.score,this.classScore,this.className,this.relativeBox,{width:a,height:u})}},Ue=class extends Si{constructor(a,u,h){super(a,a,"",u,h)}forSize(a,u){let{score:h,relativeBox:d,imageDims:g}=super.forSize(a,u);return new Ue(h,d,g)}};function D1(i,a,u=!0){let h=Math.max(0,Math.min(i.right,a.right)-Math.max(i.left,a.left)),d=Math.max(0,Math.min(i.bottom,a.bottom)-Math.max(i.top,a.top)),g=h*d;return u?g/(i.area+a.area-g):g/Math.min(i.area,a.area)}function A1(i){let a=i.map(w=>w.x),u=i.map(w=>w.y),h=a.reduce((w,k)=>k<w?k:w,Infinity),d=u.reduce((w,k)=>k<w?k:w,Infinity),g=a.reduce((w,k)=>w<k?k:w,0),x=u.reduce((w,k)=>w<k?k:w,0);return new gl(h,d,g,x)}function F1(i,a,u,h=!0){let d=a.map((x,w)=>({score:x,boxIndex:w})).sort((x,w)=>x.score-w.score).map(x=>x.boxIndex),g=[];for(;d.length>0;){let x=d.pop();g.push(x);let w=d,k=[];for(let C=0;C<w.length;C++){let $=w[C],F=i[x],_=i[$];k.push(D1(F,_,h))}d=d.filter((C,$)=>k[$]<=u)}return g}var Yo=te(ee());function Io(i,a){return Yo.tidy(()=>{let[u,h,d]=a,g=Yo.fill([...i.shape.slice(0,3),1],u,"float32"),x=Yo.fill([...i.shape.slice(0,3),1],h,"float32"),w=Yo.fill([...i.shape.slice(0,3),1],d,"float32"),k=Yo.concat([g,x,w],3);return Yo.sub(i,k)})}var $i=te(ee());function R1(i,a=!1){return $i.tidy(()=>{let[u,h]=i.shape.slice(1);if(u===h)return i;let d=Math.abs(u-h),g=Math.round(d*(a?.5:1)),x=u>h?2:1,w=_=>{let W=i.shape.slice();return W[x]=_,$i.fill(W,0,"float32")},k=w(g),C=d-k.shape[x],$=a&&C?w(C):null,F=[$,i,k].filter(_=>!!_).map(_=>$i.cast(_,"float32"));return $i.concat(F,x)})}function W9(i){let a=i.slice();for(let u=a.length-1;u>0;u--){let h=Math.floor(Math.random()*(u+1)),d=a[u];a[u]=a[h],a[h]=d}return a}function lh(i){return 1/(1+Math.exp(-i))}function V9(i){return Math.log(i/(1-i))}var yl=class extends Fe{constructor(a,u,h,d,g=!1){super({x:a,y:u,width:h,height:d},g)}},G9=.5,U9=.43,q9=.45,Wr=class{constructor(a,u,h=new Jt(0,0)){let{width:d,height:g}=u;this._imgDims=new Zn(d,g),this._shift=h,this._positions=a.map(x=>x.mul(new Jt(d,g)).add(h))}get shift(){return new Jt(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map(a=>a.sub(this._shift).div(new Jt(this.imageWidth,this.imageHeight)))}forSize(a,u){return new this.constructor(this.relativePositions,{width:a,height:u})}shiftBy(a,u){return new this.constructor(this.relativePositions,this._imgDims,new Jt(a,u))}shiftByPoint(a){return this.shiftBy(a.x,a.y)}align(a,u={}){if(a){let g=a instanceof Ue?a.box.floor():new Fe(a);return this.shiftBy(g.x,g.y).align(null,u)}let{useDlibAlignment:h,minBoxPadding:d}=Object.assign({},{useDlibAlignment:!1,minBoxPadding:.2},u);return h?this.alignDlib():this.alignMinBbox(d)}alignDlib(){let a=this.getRefPointsForAlignment(),[u,h,d]=a,g=F=>d.sub(F).magnitude(),x=(g(u)+g(h))/2,w=Math.floor(x/q9),k=Na(a),C=Math.floor(Math.max(0,k.x-G9*w)),$=Math.floor(Math.max(0,k.y-U9*w));return new yl(C,$,Math.min(w,this.imageWidth+C),Math.min(w,this.imageHeight+$))}alignMinBbox(a){let u=A1(this.positions);return u.pad(u.width*a,u.height*a)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}};var NE=class extends Wr{getRefPointsForAlignment(){let a=this.positions;return[a[0],a[1],Na([a[3],a[4]])]}};var bl=class extends Wr{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(Na)}};var uh=class{constructor(a,u){this._label=a,this._distance=u}get label(){return this._label}get distance(){return this._distance}toString(a=!0){return`${this.label}${a?` (${ka(this.distance)})`:""}`}};var ph=class extends Fe{static assertIsValidLabeledBox(a,u){if(Fe.assertIsValidBox(a,u),!$o(a.label))throw new Error(`${u} - expected property label (${a.label}) to be a number`)}constructor(a,u){super(a);this._label=u}get label(){return this._label}};var As=class{constructor(a,u){if(!(typeof a=="string"))throw new Error("LabeledFaceDescriptors - constructor expected label to be a string");if(!Array.isArray(u)||u.some(h=>!(h instanceof Float32Array)))throw new Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array");this._label=a,this._descriptors=u}get label(){return this._label}get descriptors(){return this._descriptors}toJSON(){return{label:this.label,descriptors:this.descriptors.map(a=>Array.from(a))}}static fromJSON(a){let u=a.descriptors.map(h=>new Float32Array(h));return new As(a.label,u)}};var _E=class extends ph{static assertIsValidPredictedBox(a,u){if(ph.assertIsValidLabeledBox(a,u),!ml(a.score)||!ml(a.classScore))throw new Error(`${u} - expected properties score (${a.score}) and (${a.classScore}) to be a number between [0, 1]`)}constructor(a,u,h,d){super(a,u);this._score=h,this._classScore=d}get score(){return this._score}get classScore(){return this._classScore}};function Jo(i){return i.detection instanceof Ue}function _a(i,a){let u={detection:a};return Object.assign({},i,u)}function P1(){let i=window.fetch||function(){throw new Error("fetch - missing fetch implementation for browser environment")},a=function(){throw new Error("readFile - filesystem not available for browser environment")};return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),fetch:i,readFile:a}}function Jm(i){let a="";if(!i)try{i=require("fs")}catch(h){a=h.toString()}let u=i?function(h){return new Promise((d,g)=>{i.readFile(h,function(x,w){return x?g(x):d(w)})})}:function(){throw new Error(`readFile - failed to require fs in nodejs environment with error: ${a}`)};return{readFile:u}}function O1(){let i=global.Canvas||global.HTMLCanvasElement,a=global.Image||global.HTMLImageElement,u=function(){if(i)return new i;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},h=function(){if(a)return new a;throw new Error("createImageElement - missing Image implementation for nodejs environment")},d=global.fetch||function(){throw new Error("fetch - missing fetch implementation for nodejs environment")},g=Jm();return{Canvas:i||class{},CanvasRenderingContext2D:global.CanvasRenderingContext2D||class{},Image:a||class{},ImageData:global.ImageData||class{},Video:global.HTMLVideoElement||class{},createCanvasElement:u,createImageElement:h,fetch:d,...g}}function L1(){return typeof window=="object"&&typeof document!="undefined"&&typeof HTMLImageElement!="undefined"&&typeof HTMLCanvasElement!="undefined"&&typeof HTMLVideoElement!="undefined"&&typeof ImageData!="undefined"&&typeof CanvasRenderingContext2D!="undefined"}var M1=te(SE()),Dn;function K9(){if(!Dn)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return Dn}function B1(i){Dn=i}function z1(){if(L1())return B1(P1());if(M1.isNodejs())return B1(O1())}function X9(i){if(Dn||z1(),!Dn)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:a=Dn.Canvas,Image:u=Dn.Image}=i;Dn.Canvas=a,Dn.Image=u,Dn.createCanvasElement=i.createCanvasElement||(()=>new a),Dn.createImageElement=i.createImageElement||(()=>new u),Dn.ImageData=i.ImageData||Dn.ImageData,Dn.Video=i.Video||Dn.Video,Dn.fetch=i.fetch||Dn.fetch,Dn.readFile=i.readFile||Dn.readFile}var $e={getEnv:K9,setEnv:B1,initialize:z1,createBrowserEnv:P1,createFileSystem:Jm,createNodejsEnv:O1,monkeyPatch:X9,isBrowser:L1,isNodejs:M1.isNodejs};z1();function Ca(i){return!$e.isNodejs()&&typeof i=="string"?document.getElementById(i):i}function dr(i){let{Canvas:a,CanvasRenderingContext2D:u}=$e.getEnv();if(i instanceof u)return i;let h=Ca(i);if(!(h instanceof a))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let d=h.getContext("2d");if(!d)throw new Error("resolveContext2d - canvas 2d context is null");return d}var Zo;(function(i){i.TOP_LEFT="TOP_LEFT",i.TOP_RIGHT="TOP_RIGHT",i.BOTTOM_LEFT="BOTTOM_LEFT",i.BOTTOM_RIGHT="BOTTOM_RIGHT"})(Zo||(Zo={}));var hh=class{constructor(a={}){let{anchorPosition:u,backgroundColor:h,fontColor:d,fontSize:g,fontStyle:x,padding:w}=a;this.anchorPosition=u||Zo.TOP_LEFT,this.backgroundColor=h||"rgba(0, 0, 0, 0.5)",this.fontColor=d||"rgba(255, 255, 255, 1)",this.fontSize=g||14,this.fontStyle=x||"Georgia",this.padding=w||4}},Ii=class{constructor(a,u,h={}){this.text=typeof a=="string"?[a]:a instanceof Ii?a.text:a,this.anchor=u,this.options=new hh(h)}measureWidth(a){let{padding:u}=this.options;return this.text.map(h=>a.measureText(h).width).reduce((h,d)=>h<d?d:h,0)+2*u}measureHeight(){let{fontSize:a,padding:u}=this.options;return this.text.length*a+2*u}getUpperLeft(a,u){let{anchorPosition:h}=this.options,d=h===Zo.BOTTOM_RIGHT||h===Zo.TOP_RIGHT,g=h===Zo.BOTTOM_LEFT||h===Zo.BOTTOM_RIGHT,x=this.measureWidth(a),w=this.measureHeight(),k=d?this.anchor.x-x:this.anchor.x,C=g?this.anchor.y-w:this.anchor.y;if(u){let{width:$,height:F}=u,_=Math.max(Math.min(k,$-x),0),W=Math.max(Math.min(C,F-w),0);return{x:_,y:W}}return{x:k,y:C}}draw(a){let u=Ca(a),h=dr(u),{backgroundColor:d,fontColor:g,fontSize:x,fontStyle:w,padding:k}=this.options;h.font=`${x}px ${w}`;let C=this.measureWidth(h),$=this.measureHeight();h.fillStyle=d;let F=this.getUpperLeft(h,u);h.fillRect(F.x,F.y,C,$),h.fillStyle=g,this.text.forEach((_,W)=>{let et=k+F.x,tt=k+F.y+(W+1)*x;h.fillText(_,et,tt)})}},W1=class{constructor(a={}){let{boxColor:u,lineWidth:h,label:d,drawLabelOptions:g}=a;this.boxColor=u||"rgba(0, 0, 255, 1)",this.lineWidth=h||2,this.label=d;let x={anchorPosition:Zo.BOTTOM_LEFT,backgroundColor:this.boxColor};this.drawLabelOptions=new hh(Object.assign({},x,g))}},Zm=class{constructor(a,u={}){this.box=new Fe(a),this.options=new W1(u)}draw(a){let u=dr(a),{boxColor:h,lineWidth:d}=this.options,{x:g,y:x,width:w,height:k}=this.box;u.strokeStyle=h,u.lineWidth=d,u.strokeRect(g,x,w,k);let{label:C}=this.options;C&&new Ii([C],{x:g-d/2,y:x},this.options.drawLabelOptions).draw(a)}};function Y9(i,a){let u=Array.isArray(a)?a:[a];u.forEach(h=>{let d=h instanceof Ue?h.score:Jo(h)?h.detection.score:void 0,g=h instanceof Ue?h.box:Jo(h)?h.detection.box:new Fe(h),x=d?`${ka(d)}`:void 0;new Zm(g,{label:x}).draw(i)})}var Wl=te(ee());function fh(i){let{Image:a,Video:u}=$e.getEnv();return i instanceof a&&i.complete||i instanceof u&&i.readyState>=3}function V1(i){return new Promise((a,u)=>{if(i instanceof $e.getEnv().Canvas||fh(i))return a(null);function h(g){if(!g.currentTarget)return;g.currentTarget.removeEventListener("load",h),g.currentTarget.removeEventListener("error",d),a(g)}function d(g){if(!g.currentTarget)return;g.currentTarget.removeEventListener("load",h),g.currentTarget.removeEventListener("error",d),u(g)}i.addEventListener("load",h),i.addEventListener("error",d)})}function G1(i){return new Promise((a,u)=>{if(!(i instanceof Blob))return u("bufferToImage - expected buf to be of type: Blob");let h=new FileReader;h.onload=()=>{if(typeof h.result!="string")return u("bufferToImage - expected reader.result to be a string, in onload");let d=$e.getEnv().createImageElement();d.onload=()=>a(d),d.onerror=u,d.src=h.result},h.onerror=u,h.readAsDataURL(i)})}function Sa(i){let{Image:a,Video:u}=$e.getEnv();return i instanceof a?new Zn(i.naturalWidth,i.naturalHeight):i instanceof u?new Zn(i.videoWidth,i.videoHeight):new Zn(i.width,i.height)}function xl({width:i,height:a}){let{createCanvasElement:u}=$e.getEnv(),h=u();return h.width=i,h.height=a,h}function dh(i,a){let{ImageData:u}=$e.getEnv();if(!(i instanceof u)&&!fh(i))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:h,height:d}=a||Sa(i),g=xl({width:h,height:d});return i instanceof u?dr(g).putImageData(i,0,0):dr(g).drawImage(i,0,0,h,d),g}var Qm=te(ee());async function U1(i,a){let u=a||$e.getEnv().createCanvasElement(),[h,d,g]=i.shape.slice(zr(i)?1:0),x=Qm.tidy(()=>i.as3D(h,d,g).toInt());return await Qm.browser.toPixels(x,u),x.dispose(),u}function tg(i){let{Image:a,Canvas:u,Video:h}=$e.getEnv();return i instanceof a||i instanceof u||i instanceof h}var J9=1e-7,Z9=1e-4,q1=class{time(a){return st("time")}read(a){return st("read")}readSync(a){return st("readSync")}numDataIds(){return st("numDataIds")}disposeData(a){return st("disposeData")}write(a,u,h){return st("write")}move(a,u,h,d){return st("move")}memory(){return st("memory")}floatPrecision(){return st("floatPrecision")}epsilon(){return this.floatPrecision()===32?J9:Z9}batchMatMul(a,u,h,d){return st("batchMatMul")}fusedBatchMatMul({a,b:u,transposeA:h,transposeB:d,bias:g,activation:x,preluActivationWeights:w}){return st("fusedBatchMatMul")}slice(a,u,h){return st("slice")}stridedSlice(a,u,h,d){return st("stridedSlice")}unstack(a,u){return st("unstack")}reverse(a,u){return st("reverse")}concat(a,u){return st("concat")}neg(a){return st("neg")}add(a,u){return st("add")}addN(a){return st("addN")}subtract(a,u){return st("subtract")}multiply(a,u){return st("multiply")}realDivide(a,u){return st("realDivide")}floorDiv(a,u){return st("floorDiv")}sum(a,u){return st("sum")}prod(a,u){return st("prod")}unsortedSegmentSum(a,u,h){return st("unsortedSegmentSum")}argMin(a,u){return st("argMin")}argMax(a,u){return st("argMax")}equal(a,u){return st("equal")}notEqual(a,u){return st("notEqual")}less(a,u){return st("less")}lessEqual(a,u){return st("lessEqual")}greater(a,u){return st("greater")}greaterEqual(a,u){return st("greaterEqual")}logicalNot(a){return st("logicalNot")}logicalAnd(a,u){return st("logicalAnd")}logicalOr(a,u){return st("logicalOr")}where(a){return st("where")}select(a,u,h){return st("select")}topk(a,u,h){return st("topk")}min(a,u){return st("min")}minimum(a,u){return st("minimum")}mod(a,u){return st("mod")}max(a,u){return st("max")}maximum(a,u){return st("maximum")}all(a,u){return st("all")}any(a,u){return st("any")}squaredDifference(a,u){return st("squaredDifference")}ceil(a){return st("ceil")}floor(a){return st("floor")}round(a){return st("round")}sign(a){return st("sign")}isNaN(a){return st("isNaN")}isInf(a){return st("isInf")}isFinite(a){return st("isFinite")}pow(a,u){return st("pow")}exp(a){return st("exp")}expm1(a){return st("expm1")}softmax(a,u){return st("softmax")}log(a){return st("log")}log1p(a){return st("log1p")}sqrt(a){return st("sqrt")}rsqrt(a){return st("rsqrt")}square(a){return st("square")}reciprocal(a){return st("reciprocal")}relu(a){return st("relu")}relu6(a){return st("relu6")}prelu(a,u){return st("prelu")}elu(a){return st("elu")}eluDer(a,u){return st("eluDer")}selu(a){return st("selu")}int(a){return st("int")}clip(a,u,h){return st("clip")}abs(a){return st("abs")}complexAbs(a){return st("complexAbs")}sigmoid(a){return st("sigmoid")}softplus(a){return st("softplus")}sin(a){return st("sin")}cos(a){return st("cos")}tan(a){return st("tan")}asin(a){return st("asin")}acos(a){return st("acos")}atan(a){return st("atan")}atan2(a,u){return st("atan2")}sinh(a){return st("sinh")}cosh(a){return st("cosh")}tanh(a){return st("tanh")}asinh(a){return st("asinh")}acosh(a){return st("acosh")}atanh(a){return st("atanh")}erf(a){return st("erf")}step(a,u){return st("step")}fusedConv2d({input:a,filter:u,convInfo:h,bias:d,activation:g,preluActivationWeights:x}){return st("fusedConv2d")}conv2d(a,u,h){return st("conv2d")}conv2dDerInput(a,u,h){return st("conv2dDerInput")}conv2dDerFilter(a,u,h){return st("conv2dDerFilter")}fusedDepthwiseConv2D({input:a,filter:u,convInfo:h,bias:d,activation:g,preluActivationWeights:x}){return st("fusedDepthwiseConv2D")}depthwiseConv2D(a,u,h){return st("depthwiseConv2D")}depthwiseConv2DDerInput(a,u,h){return st("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(a,u,h){return st("depthwiseConv2DDerFilter")}conv3d(a,u,h){return st("conv3d")}conv3dDerInput(a,u,h){return st("conv3dDerInput")}conv3dDerFilter(a,u,h){return st("conv3dDerFilter")}maxPool(a,u){return st("maxPool")}maxPoolBackprop(a,u,h,d){return st("maxPoolBackprop")}avgPool(a,u){return st("avgPool")}avgPoolBackprop(a,u,h){return st("avgPoolBackprop")}avgPool3d(a,u){return st("avgPool3d")}avgPool3dBackprop(a,u,h){return st("avgPool3dBackprop")}maxPool3d(a,u){return st("maxPool3d")}maxPool3dBackprop(a,u,h,d){return st("maxPool3dBackprop")}reshape(a,u){return st("reshape")}cast(a,u){return st("cast")}tile(a,u){return st("tile")}pad(a,u,h){return st("pad")}transpose(a,u){return st("transpose")}gather(a,u,h){return st("gather")}gatherND(a,u){return st("gatherND")}scatterND(a,u,h){return st("scatterND")}batchToSpaceND(a,u,h){return st("batchToSpaceND")}spaceToBatchND(a,u,h){return st("spaceToBatchND")}resizeBilinear(a,u,h,d){return st("resizeBilinear")}resizeBilinearBackprop(a,u,h){return st("resizeBilinearBackprop")}resizeNearestNeighbor(a,u,h,d){return st("resizeNearestNeighbor")}resizeNearestNeighborBackprop(a,u,h){return st("resizeNearestNeighborBackprop")}batchNorm(a,u,h,d,g,x){return st("batchNorm")}localResponseNormalization4D(a,u,h,d,g){return st("localResponseNormalization4D")}LRNGrad(a,u,h,d,g,x,w){return st("LRNGrad")}multinomial(a,u,h,d){return st("multinomial")}oneHot(a,u,h,d){return st("oneHot")}cumsum(a,u,h,d){return st("cumsum")}nonMaxSuppression(a,u,h,d,g){return st("nonMaxSuppression")}fft(a){return st("fft")}ifft(a){return st("ifft")}complex(a,u){return st("complex")}real(a){return st("real")}imag(a){return st("imag")}cropAndResize(a,u,h,d,g,x){return st("cropAndResize")}depthToSpace(a,u,h){return st("depthToSpace")}split(a,u,h){return st("split")}sparseToDense(a,u,h,d){return st("sparseToDense")}diag(a){return st("diag")}fill(a,u,h){return st("fill")}onesLike(a){return st("onesLike")}zerosLike(a){return st("zerosLike")}linspace(a,u,h){return st("linspace")}dispose(){return st("dispose")}};function st(i){throw new Error(`'${i}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function mh(i,a,u){return Math.max(i,Math.min(a,u))}function U(i,a){if(!i)throw new Error(typeof a=="string"?a:a())}function ae(i,a,u=""){U(Fs(i,a),()=>u+` Shapes ${i} and ${a} must match`)}function wl(i){U(i!=null,()=>"The input to the tensor constructor must be a non-null value.")}function $a(i,a=[],u=!1){if(a==null&&(a=[]),Array.isArray(i)||Vr(i)&&!u)for(let h=0;h<i.length;++h)$a(i[h],a,u);else a.push(i);return a}function an(i){if(i.length===0)return 1;let a=i[0];for(let u=1;u<i.length;u++)a*=i[u];return a}function Fs(i,a){if(i===a)return!0;if(i==null||a==null)return!1;if(i.length!==a.length)return!1;for(let u=0;u<i.length;u++)if(i[u]!==a[u])return!1;return!0}function Te(i){return i%1===0}function vl(i,a){return a<=i.length?i:i+" ".repeat(a-i.length)}function $E(i,a){let u=1,h=-1;for(let g=0;g<i.length;++g)if(i[g]>=0)u*=i[g];else if(i[g]===-1){if(h!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${h} and dim ${g}`);h=g}else if(i[g]<0)throw Error(`Shapes can not be < 0. Found ${i[g]} at dim ${g}`);if(h===-1){if(a>0&&a!==u)throw Error(`Size(${a}) must match the product of shape ${i}`);return i}if(u===0)throw Error(`Cannot infer the missing size in [${i}] when there are 0 elements`);if(a%u!==0)throw Error(`The implicit shape can't be a fractional number. Got ${a} / ${u}`);let d=i.slice();return d[h]=a/u,d}function Zt(i,a){let u=a.length;return i=i==null?a.map((h,d)=>d):[].concat(i),U(i.every(h=>h>=-u&&h<u),()=>`All values in axis param must be in range [-${u}, ${u}) but got axis ${i}`),U(i.every(h=>Te(h)),()=>`All values in axis param must be integers but got axis ${i}`),i.map(h=>h<0?u+h:h)}function IE(i,a){let u=[],h=[],d=a!=null&&Array.isArray(a)&&a.length===0,g=a==null||d?null:Zt(a,i).sort(),x=0;for(let w=0;w<i.length;++w){if(g!=null){if(g[x]===w&&i[w]!==1)throw new Error(`Can't squeeze axis ${w} since its dim '${i[w]}' is not 1`);(g[x]==null||g[x]>w)&&i[w]===1&&(u.push(i[w]),h.push(w)),g[x]<=w&&x++}i[w]!==1&&(u.push(i[w]),h.push(w))}return{newShape:u,keptDims:h}}function EE(i,a){let u=null;if(i==null||i==="float32")u=new Float32Array(a);else if(i==="int32")u=new Int32Array(a);else if(i==="bool")u=new Uint8Array(a);else if(i==="string")u=new Array(a);else throw new Error(`Unknown data type ${i}`);return u}function DE(i,a){for(let u=0;u<i.length;u++){let h=i[u];if(isNaN(h)||!isFinite(h))throw Error(`A tensor of type ${a} being uploaded contains ${h}.`)}}function AE(i){return i==="bool"||i==="complex64"||i==="float32"||i==="int32"||i==="string"}function Vr(i){return i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array}function FE(i){if(i==="float32"||i==="int32")return 4;if(i==="complex64")return 8;if(i==="bool")return 1;throw new Error(`Unknown dtype ${i}`)}function RE(i){if(i==null)return 0;let a=0;return i.forEach(u=>a+=u.length),a}function gh(i){return typeof i=="string"||i instanceof String}function Q9(i){return typeof i=="boolean"}function tQ(i){return typeof i=="number"}function yh(i){return Array.isArray(i)?yh(i[0]):i instanceof Float32Array?"float32":i instanceof Int32Array||i instanceof Uint8Array?"int32":tQ(i)?"float32":gh(i)?"string":Q9(i)?"bool":"float32"}function H1(i){return!!(i&&i.constructor&&i.call&&i.apply)}function bh(i){let a=i.length;if(a<2)return[];let u=new Array(a-1);u[a-2]=i[a-1];for(let h=a-3;h>=0;--h)u[h]=u[h+1]*i[h+1];return u}function PE(i,a,u){let h=new Array;if(a.length===1){let d=a[0];for(let g=0;g<d;g++)h[g]=u[i+g]}else{let d=a[0],g=a.slice(1),x=g.reduce((w,k)=>w*k);for(let w=0;w<d;w++)h[w]=PE(i+w*x,g,u)}return h}function j1(i,a){if(i.length===0)return a[0];let u=i.reduce((h,d)=>h*d);if(u===0)return[];if(u!==a.length)throw new Error(`[${i}] does not match the input size ${a.length}.`);return PE(0,i,a)}function eg(i,a){let u=Ia(i,a);for(let h=0;h<u.length;h++)u[h]=1;return u}function Ia(i,a){if(a==null||a==="float32"||a==="complex64")return new Float32Array(i);if(a==="int32")return new Int32Array(i);if(a==="bool")return new Uint8Array(i);throw new Error(`Unknown data type ${a}`)}function ng(i){i.forEach(a=>{U(Number.isInteger(a)&&a>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${i}].`)})}function rg(i){return i&&i.then&&typeof i.then=="function"}var OE="tfjsflags",K1=class{constructor(a){this.global=a,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(a,u){this.platform!=null&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${u}.`),this.platformName=a,this.platform=u}registerFlag(a,u,h){if(this.flagRegistry[a]={evaluationFn:u,setHook:h},this.urlFlags[a]!=null){let d=this.urlFlags[a];console.warn(`Setting feature override from URL ${a}: ${d}.`),this.set(a,d)}}async getAsync(a){return a in this.flags?this.flags[a]:(this.flags[a]=await this.evaluateFlag(a),this.flags[a])}get(a){if(a in this.flags)return this.flags[a];let u=this.evaluateFlag(a);if(rg(u))throw new Error(`Flag ${a} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[a]=u,this.flags[a]}getNumber(a){return this.get(a)}getBool(a){return this.get(a)}getFlags(){return this.flags}get features(){return this.flags}set(a,u){if(this.flagRegistry[a]==null)throw new Error(`Cannot set flag ${a} as it has not been registered.`);this.flags[a]=u,this.flagRegistry[a].setHook!=null&&this.flagRegistry[a].setHook(u)}evaluateFlag(a){if(this.flagRegistry[a]==null)throw new Error(`Cannot evaluate flag '${a}': no evaluation function found.`);return this.flagRegistry[a].evaluationFn()}setFlags(a){this.flags=Object.assign({},a)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let a=eQ(this.global.location.search);if(OE in a){let u=a[OE].split(",");u.forEach(h=>{let[d,g]=h.split(":");this.urlFlags[d]=nQ(d,g)})}}};function eQ(i){let a={};return i.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(u,...h)=>(rQ(a,h[0],h[1]),h.join("="))),a}function rQ(i,a,u){i[decodeURIComponent(a)]=decodeURIComponent(u||"")}function nQ(i,a){if(a=a.toLowerCase(),a==="true"||a==="false")return a==="true";if(`${+a}`===a)return+a;throw new Error(`Could not parse value flag value ${a} for flag ${i}.`)}function Me(){return LE}var LE=null;function ME(i){LE=i}var X1;function Y1(){if(X1==null){let i;if(typeof window!="undefined")i=window;else if(typeof global!="undefined")i=global;else if(typeof process!="undefined")i=process;else if(typeof self!="undefined")i=self;else throw new Error("Could not find a global object");X1=i}return X1}function oQ(){let i=Y1();return i._tfGlobals==null&&(i._tfGlobals=new Map),i._tfGlobals}function J1(i,a){let u=oQ();if(u.has(i))return u.get(i);{let h=a();return u.set(i,h),u.get(i)}}var og="Abs",sg="Acos",ig="Acosh",Tl="Add",BE="AddN",zE="All",WE="Any",ag="ArgMax",cg="ArgMin",lg="Asin",ug="Asinh",pg="Atan",hg="Atanh",fg="Atan2",dg="AvgPool",VE="AvgPoolBackprop",GE="AvgPool3D",UE="AvgPool3DBackprop",mg="BatchMatMul",gg="BatchToSpaceND",yg="BroadcastTo",kl="Cast",bg="Ceil",xg="ClipByValue",qE="Complex",wg="Concat",vg="Conv2D",HE="Conv2DBackpropFilter",Tg="Conv2DBackpropInput",jE="Conv3D",KE="Conv3DBackpropFilterV2",XE="Conv3DBackpropInputV2",kg="Cos",Ng="Cosh",_g="Cumsum",YE="CropAndResize",JE="DepthToSpace",Cg="DepthwiseConv2dNative",ZE="DepthwiseConv2dNativeBackpropFilter",QE="DepthwiseConv2dNativeBackpropInput",Sg="Dilation2D",t2="Dilation2DBackpropInput",e2="Dilation2DBackpropFilter",$g="Div",Ig="Elu",n2="EluGrad",Eg="Erf",r2="Equal",Dg="Exp",Ag="Expm1",o2="FFT",s2="Fill",i2="FlipLeftRight",Fg="Floor",Rg="FloorDiv",Pg="FusedBatchNorm",Og="GatherV2",a2="Greater",Lg="GreaterEqual",Mg="Identity",c2="IFFT",l2="Imag",Bg="IsFinite",zg="IsInf",Wg="IsNan",u2="Less",p2="LessEqual",Vg="Log",Gg="Log1p",h2="LogicalAnd",f2="LogicalNot",d2="LogicalOr",Ug="LogSoftmax",qg="LRN",m2="LRNBackprop",Hg="Max",jg="Maximum",Kg="MaxPool",g2="MaxPoolBackprop",y2="MaxPool3D",b2="MaxPool3DBackprop",x2="Mean",Xg="Min",Yg="Minimum",Jg="MirrorPad",Zg="Mod",Qg="Multiply",ty="Negate",w2="NotEqual",v2="NonMaxSuppressionV3",T2="NonMaxSuppressionV4",k2="NonMaxSuppressionV5",ey="OnesLike",ny="OneHot",ry="PadV2",oy="Pow",sy="Prelu",N2="Prod",_2="Range",C2="Real",iy="Reciprocal",ay="Relu",cy="Reshape",ly="ResizeNearestNeighbor",S2="ResizeNearestNeighborGrad",uy="ResizeBilinear",$2="ResizeBilinearGrad",py="Relu6",hy="Reverse",fy="Round",dy="Rsqrt",my="SelectV2",gy="Selu",yy="Slice",by="Sin",xy="Sinh",wy="Sign",vy="Sigmoid",Ty="Softplus",ky="Sqrt",Ny="Sum",_y="SpaceToBatchND",Cy="SplitV",Sy="Softmax",$y="SquaredDifference",I2="Square",Iy="Sub",E2="StridedSlice",Ey="Tan",Dy="Tanh",Ay="Tile",D2="TopK",Fy="Transpose",A2="Unique",Ry="Unpack",Py="UnsortedSegmentSum",Oy="ZerosLike",Ly="Step",Z1="FromPixels",F2="RotateWithOffset";var R2=J1("kernelRegistry",()=>new Map),Q1=J1("gradRegistry",()=>new Map);function My(i,a){let u=sQ(i,a);return R2.get(u)}function tT(i){return Q1.get(i)}function eT(i){let a=R2.entries(),u=[];for(;;){let{done:h,value:d}=a.next();if(h)break;let[g,x]=d,[w]=g.split("_");w===i&&u.push(x)}return u}function P2(i){let{kernelName:a}=i;Q1.has(a)&&(Me().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${a}'`)),Q1.set(a,i)}function sQ(i,a){return`${a}_${i}`}function iQ(i,a){return i instanceof Float32Array&&a==="float32"||i instanceof Int32Array&&a==="int32"||i instanceof Uint8Array&&a==="bool"}function By(i,a){if(a==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(i)&&(i=$a(i)),Me().getBool("DEBUG")&&DE(i,a),iQ(i,a))return i;if(a==null||a==="float32"||a==="complex64")return new Float32Array(i);if(a==="int32")return new Int32Array(i);if(a==="bool"){let u=new Uint8Array(i.length);for(let h=0;h<u.length;++h)Math.round(i[h])!==0&&(u[h]=1);return u}else throw new Error(`Unknown data type ${a}`)}function nT(){return Me().platform.now()}function O2(i,a="utf-8"){return a=a||"utf-8",Me().platform.encode(i,a)}function rT(i,a="utf-8"){return a=a||"utf-8",Me().platform.decode(i,a)}var oT=class{constructor(a,u){this.backendTimer=a,this.logger=u,u==null&&(this.logger=new L2)}profileKernel(a,u,h){let d,g=()=>{d=h()},x=this.backendTimer.time(g);for(let k=0;k<d.length;k++){let C=d[k];C.data().then($=>{aQ($,C.dtype,a)})}let w={kernelName:a,outputs:d,inputs:u,timeMs:x.then(k=>k.kernelMs),extraInfo:x.then(k=>k.getExtraProfileInfo!=null?k.getExtraProfileInfo():"")};return w}logKernelProfile(a){let{kernelName:u,outputs:h,timeMs:d,inputs:g,extraInfo:x}=a;h.forEach(w=>{Promise.all([w.data(),d,x]).then(k=>{this.logger.logKernelProfile(u,w,k[0],k[1],g,k[2])})})}};function aQ(i,a,u){if(a!=="float32")return!1;for(let h=0;h<i.length;h++){let d=i[h];if(isNaN(d)||!isFinite(d))return console.warn(`Found ${d} in the result of '${u}'`),!0}return!1}var L2=class{logKernelProfile(a,u,h,d,g,x){let w=typeof d=="number"?vl(`${d}ms`,9):d.error,k=vl(a,25),C=u.rank,$=u.size,F=vl(u.shape.toString(),14),_="";for(let W in g){let et=g[W];if(et!=null){let tt=et.shape||u.shape,G=tt.length;_+=`${W}: ${G}D ${G>0?tt:""} `}}console.log(`%c${k}	%c${w}	%c${C}D ${F}	%c${$}	%c${_}	%c${x}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function M2(i,a,u){let h={},d={};for(let k=0;k<a.length;k++)h[a[k].id]=!0;for(let k=0;k<i.length;k++){let C=i[k],$=C.inputs;for(let F in $){let _=$[F],W=!1;for(let et=0;et<a.length;et++)if(h[_.id]){C.outputs.forEach(tt=>h[tt.id]=!0),W=!0,d[C.id]=!0;break}if(W)break}}let g={};g[u.id]=!0;let x={};for(let k=i.length-1;k>=0;k--){let C=i[k],$=C.inputs;for(let F=0;F<C.outputs.length;F++)if(g[C.outputs[F].id]){for(let _ in $)g[$[_].id]=!0,x[C.id]=!0;break}}let w=[];for(let k=0;k<i.length;k++){let C=i[k];if(d[C.id]&&x[C.id]){let $={};for(let _ in C.inputs){let W=C.inputs[_];h[W.id]&&($[_]=W)}let F=Object.assign({},C);F.inputs=$,F.outputs=C.outputs,w.push(F)}}return w}function B2(i,a,u,h){for(let d=a.length-1;d>=0;d--){let g=a[d],x=[];if(g.outputs.forEach(k=>{let C=i[k.id];C!=null?x.push(C):x.push(null)}),g.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${g.kernelName}.`);let w=g.gradient(x);for(let k in g.inputs){if(!(k in w))throw new Error(`Cannot backprop through input ${k}. Available gradients found: ${Object.keys(w)}.`);let C=u(()=>w[k]());if(C.dtype!=="float32")throw new Error(`Error in gradient for op ${g.kernelName}. The gradient of input ${k} must have 'float32' dtype, but has '${C.dtype}'`);let $=g.inputs[k];if(!Fs(C.shape,$.shape))throw new Error(`Error in gradient for op ${g.kernelName}. The gradient of input '${k}' has shape '${C.shape}', which does not match the shape of the input '${$.shape}'`);if(i[$.id]==null)i[$.id]=C;else{let F=i[$.id];i[$.id]=h(F,C),F.dispose()}}}}var z2=20,xh=3,sT=7;function W2(i,a,u,h){let d=bh(a),g=cQ(i,a,u,d),x=a.length,w=zy(i,a,u,d,g),k=["Tensor"];return h&&(k.push(`  dtype: ${u}`),k.push(`  rank: ${x}`),k.push(`  shape: [${a}]`),k.push("  values:")),k.push(w.map(C=>"    "+C).join(`
`)),k.join(`
`)}function cQ(i,a,u,h){let d=an(a),g=h[h.length-1],x=new Array(g).fill(0),w=a.length,k=u==="complex64"?vh(i):i;if(w>1)for(let C=0;C<d/g;C++){let $=C*g;for(let F=0;F<g;F++)x[F]=Math.max(x[F],wh(k[$+F],0,u).length)}return x}function wh(i,a,u){let h;return Array.isArray(i)?h=`${parseFloat(i[0].toFixed(sT))} + ${parseFloat(i[1].toFixed(sT))}j`:gh(i)?h=`'${i}'`:u==="bool"?h=V2(i):h=parseFloat(i.toFixed(sT)).toString(),vl(h,a)}function V2(i){return i===0?"false":"true"}function zy(i,a,u,h,d,g=!0){let x=u==="complex64"?2:1,w=a[0],k=a.length;if(k===0){if(u==="complex64"){let tt=vh(i);return[wh(tt[0],0,u)]}return u==="bool"?[V2(i[0])]:[i[0].toString()]}if(k===1){if(w>z2){let G=xh*x,mt=Array.from(i.slice(0,G)),lt=Array.from(i.slice((w-xh)*x,w*x));return u==="complex64"&&(mt=vh(mt),lt=vh(lt)),["["+mt.map((gt,_t)=>wh(gt,d[_t],u)).join(", ")+", ..., "+lt.map((gt,_t)=>wh(gt,d[w-xh+_t],u)).join(", ")+"]"]}let tt=u==="complex64"?vh(i):Array.from(i);return["["+tt.map((G,mt)=>wh(G,d[mt],u)).join(", ")+"]"]}let C=a.slice(1),$=h.slice(1),F=h[0]*x,_=[];if(w>z2){for(let tt=0;tt<xh;tt++){let G=tt*F,mt=G+F;_.push(...zy(i.slice(G,mt),C,u,$,d,!1))}_.push("...");for(let tt=w-xh;tt<w;tt++){let G=tt*F,mt=G+F;_.push(...zy(i.slice(G,mt),C,u,$,d,tt===w-1))}}else for(let tt=0;tt<w;tt++){let G=tt*F,mt=G+F;_.push(...zy(i.slice(G,mt),C,u,$,d,tt===w-1))}let W=k===2?",":"";_[0]="["+_[0]+W;for(let tt=1;tt<_.length-1;tt++)_[tt]=" "+_[tt]+W;let et=`,
`;for(let tt=2;tt<k;tt++)et+=`
`;return _[_.length-1]=" "+_[_.length-1]+"]"+(g?"":et),_}function vh(i){let a=[];for(let u=0;u<i.length;u+=2)a.push([i[u],i[u+1]]);return a}var iT=class{constructor(a,u,h){if(this.dtype=u,this.shape=a.slice(),this.size=an(a),h!=null){let d=h.length;U(d===this.size,()=>`Length of values '${d}' does not match the size inferred by the shape '${this.size}'.`)}if(u==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=h||EE(u,this.size),this.strides=bh(a)}set(a,...u){u.length===0&&(u=[0]),U(u.length===this.rank,()=>`The number of provided coordinates (${u.length}) must match the rank (${this.rank})`);let h=this.locToIndex(u);this.values[h]=a}get(...a){a.length===0&&(a=[0]);let u=0;for(let d of a){if(d<0||d>=this.shape[u]){let g=`Requested out of range element at ${a}.   Buffer shape=${this.shape}`;throw new Error(g)}u++}let h=a[a.length-1];for(let d=0;d<a.length-1;++d)h+=this.strides[d]*a[d];return this.values[h]}locToIndex(a){if(this.rank===0)return 0;if(this.rank===1)return a[0];let u=a[a.length-1];for(let h=0;h<a.length-1;++h)u+=this.strides[h]*a[h];return u}indexToLoc(a){if(this.rank===0)return[];if(this.rank===1)return[a];let u=new Array(this.shape.length);for(let h=0;h<u.length-1;++h)u[h]=Math.floor(a/this.strides[h]),a-=u[h]*this.strides[h];return u[u.length-1]=a,u}get rank(){return this.shape.length}toTensor(){return Qo().makeTensor(this.values,this.shape,this.dtype)}},Qo=null,Nl=null,lQ=null;function G2(i){Qo=i}function U2(i){Nl=i}function q2(i){lQ=i}var z=class{constructor(a,u,h,d){this.kept=!1,this.isDisposedInternal=!1,this.shape=a.slice(),this.dtype=u||"float32",this.size=an(a),this.strides=bh(a),this.dataId=h,this.id=d,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let a=await this.data();return Nl.buffer(this.shape,this.dtype,a)}bufferSync(){return Nl.buffer(this.shape,this.dtype,this.dataSync())}async array(){let a=await this.data();return j1(this.shape,a)}arraySync(){return j1(this.shape,this.dataSync())}async data(){this.throwIfDisposed();let a=Qo().read(this.dataId);if(this.dtype==="string"){let u=await a;try{return u.map(h=>rT(h))}catch(h){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return a}dataSync(){this.throwIfDisposed();let a=Qo().readSync(this.dataId);if(this.dtype==="string")try{return a.map(u=>rT(u))}catch(u){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return a}async bytes(){this.throwIfDisposed();let a=await Qo().read(this.dataId);return this.dtype==="string"?a:new Uint8Array(a.buffer)}dispose(){if(this.isDisposed)return;Qo().disposeTensor(this),this.isDisposedInternal=!0}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(a=!1){return Nl.print(this,a)}clone(){return this.throwIfDisposed(),Nl.clone(this)}toString(a=!1){let u=this.dataSync();return W2(u,this.shape,this.dtype,a)}cast(a){return this.throwIfDisposed(),Nl.cast(this,a)}variable(a=!0,u,h){return this.throwIfDisposed(),Qo().makeVariable(this,a,u,h)}};Object.defineProperty(z,Symbol.hasInstance,{value:i=>!!i&&i.data!=null&&i.dataSync!=null&&i.throwIfDisposed!=null});var Th=class extends z{constructor(a,u,h,d){super(a.shape,a.dtype,a.dataId,d);this.trainable=u,this.name=h}assign(a){if(a.dtype!==this.dtype)throw new Error(`dtype of the new value (${a.dtype}) and previous value (${this.dtype}) must match`);if(!Fs(a.shape,this.shape))throw new Error(`shape of the new value (${a.shape}) and previous value (${this.shape}) must match`);Qo().disposeTensor(this),this.dataId=a.dataId,Qo().incRef(this,null)}dispose(){Qo().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Th,Symbol.hasInstance,{value:i=>i instanceof z&&i.assign!=null&&i.assign instanceof Function});var H2;(function(i){i.R0="R0",i.R1="R1",i.R2="R2",i.R3="R3",i.R4="R4",i.R5="R5",i.R6="R6"})(H2||(H2={}));var aT;(function(i){i.float32="float32",i.int32="int32",i.bool="int32",i.complex64="complex64"})(aT||(aT={}));var cT;(function(i){i.float32="float32",i.int32="int32",i.bool="bool",i.complex64="complex64"})(cT||(cT={}));var lT;(function(i){i.float32="float32",i.int32="float32",i.bool="float32",i.complex64="complex64"})(lT||(lT={}));var uT;(function(i){i.float32="complex64",i.int32="complex64",i.bool="complex64",i.complex64="complex64"})(uT||(uT={}));var uQ={float32:lT,int32:aT,bool:cT,complex64:uT};function j2(i,a){if(i==="string"||a==="string"){if(i==="string"&&a==="string")return"string";throw new Error(`Can not upcast ${i} with ${a}`)}return uQ[i][a]}function he(i,a){if(i.dtype===a.dtype)return[i,a];let u=j2(i.dtype,a.dtype);return[i.cast(u),a.cast(u)]}function Wy(i){let a=[],u=new Set;return K2(i,a,u),a}function K2(i,a,u){if(i==null)return;if(i instanceof z){a.push(i);return}if(!pQ(i))return;let h=i;for(let d in h){let g=h[d];u.has(g)||(u.add(g),K2(g,a,u))}}function pQ(i){return Array.isArray(i)||typeof i=="object"}var pT=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(let a in this.registeredVariables)this.registeredVariables[a].dispose()}},Ea=class{constructor(a){this.ENV=a,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new pT}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let a=this.getSortedBackends();for(let u=0;u<a.length;u++){let h=a[u],d=await this.initializeBackend(h).success;if(d){await this.setBackend(h);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:a,asyncInit:u}=this.initializeBackendsAndReturnBest();if(u)throw new Error(`The highest priority backend '${a}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(a)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(a){if(!(a in this.registry))if(a in this.registryFactory){let{asyncInit:u}=this.initializeBackend(a);if(u)return null}else return null;return this.registry[a]}findBackendFactory(a){return a in this.registryFactory?this.registryFactory[a].factory:null}registerBackend(a,u,h=1){return a in this.registryFactory?(console.warn(`${a} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[a]={factory:u,priority:h},!0)}async setBackend(a){if(this.registryFactory[a]==null)throw new Error(`Backend name '${a}' not found in registry`);if(this.backendName=a,this.registry[a]==null){this.backendInstance=null;let{success:u,asyncInit:h}=this.initializeBackend(a),d=h?await u:u;if(!d)return!1}return this.backendInstance=this.registry[a],this.setupRegisteredKernels(),this.profiler=new oT(this.backendInstance),!0}setupRegisteredKernels(){let a=eT(this.backendName);a.forEach(u=>{u.setupFunc!=null&&u.setupFunc(this.backendInstance)})}disposeRegisteredKernels(a){let u=eT(a);u.forEach(h=>{h.disposeFunc!=null&&h.disposeFunc(this.registry[a])})}initializeBackend(a){let u=this.registryFactory[a];if(u==null)throw new Error(`Cannot initialize backend ${a}, no registration found.`);try{let h=u.factory();if(h&&!(h instanceof q1)&&typeof h.then=="function"){let d=++this.pendingBackendInitId,g=h.then(x=>d<this.pendingBackendInitId?!1:(this.registry[a]=x,this.pendingBackendInit=null,!0)).catch(x=>(d<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${a} failed`),console.warn(x.stack||x.message)),!1));return this.pendingBackendInit=g,{success:g,asyncInit:!0}}else return this.registry[a]=h,{success:!0,asyncInit:!1}}catch(h){return console.warn(`Initialization of backend ${a} failed`),console.warn(h.stack||h.message),{success:!1,asyncInit:!1}}}removeBackend(a){if(!(a in this.registryFactory))throw new Error(`${a} backend not found in registry`);this.backendName===a&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,a in this.registry&&(this.disposeRegisteredKernels(a),this.registry[a].dispose(),delete this.registry[a]),delete this.registryFactory[a],this.backendName===a&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((a,u)=>this.registryFactory[u].priority-this.registryFactory[a].priority)}initializeBackendsAndReturnBest(){let a=this.getSortedBackends();for(let u=0;u<a.length;u++){let h=a[u],{success:d,asyncInit:g}=this.initializeBackend(h);if(g||d)return{name:h,asyncInit:g}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(a,u){let h=this.state.tensorInfo.get(u),d=h.backend,g=this.readSync(u);d.disposeData(u),h.backend=a,a.move(u,g,h.shape,h.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(a,u){let h=null;if(u==null){if(typeof a!="function")throw new Error("Please provide a function to tidy()");u=a}else{if(typeof a!="string"&&!(a instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof u!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");h=a}let d;return this.scopedRun(()=>this.startScope(h),()=>this.endScope(d),()=>(d=u(),d instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),d))}scopedRun(a,u,h){a();try{let d=h();return u(),d}catch(d){throw u(),d}}nextTensorId(){return Ea.nextTensorId++}nextVariableId(){return Ea.nextVariableId++}clone(a){let u=this.makeTensorFromDataId(a.dataId,a.shape,a.dtype),h={x:a},d=x=>({x:()=>{let w="float32",k={x},C={dtype:w};return V.runKernelFunc($=>$.cast(x,w),k,null,kl,C)}}),g=[];return this.addTapeNode(this.state.activeScope.name,h,[u],d,g,{}),u}runKernel(a,u,h,d,g){let x=null,w=null;return this.runKernelFunc(x,u,w,a,h,d,g)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(a,u,h){let d=this.backend.numDataIds(),g=0;h.forEach(k=>{g+=k.dtype==="complex64"?3:1});let x=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],w=d-u-g-x;if(w>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${w} data ids) after running '${a}'`)}runKernelFunc(a,u,h,d,g,x,w){let k,C=[],$=this.isTapeOn();d==null&&(d=this.state.activeScope!=null?this.state.activeScope.name:"");let F=this.state.numBytes,_=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let W,et=My(d,this.backendName),tt;if(et!=null)W=()=>{let mt=this.backend.numDataIds();tt=et.kernelFunc({inputs:u,attrs:g,backend:this.backend});let lt=Array.isArray(tt)?tt:[tt];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(d,mt,lt);let gt=lt.map(({dataId:_t,shape:Gt,dtype:se})=>this.makeTensorFromDataId(_t,Gt,se));if($){let _t=this.getTensorsForGradient(d,u,gt);if(_t==null){w==null&&(w=[]);let Gt=gt.filter((se,fe)=>w[fe]);_t=(x||[]).slice().concat(Gt)}C=this.saveTensorsForBackwardMode(_t)}return gt};else{let mt=lt=>{if(!$)return;C=lt.map(gt=>this.keep(this.clone(gt)))};W=()=>{let lt=this.backend.numDataIds();tt=this.tidy(()=>a(this.backend,mt));let gt=Array.isArray(tt)?tt:[tt];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(d,lt,gt),gt}}let G;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?k=W():(G=this.profiler.profileKernel(d,u,()=>W()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(G),k=G.outputs)}),$&&this.addTapeNode(d,u,k,h,C,g),this.state.profiling&&this.state.activeProfile.kernels.push({name:d,bytesAdded:this.state.numBytes-F,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-_,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(mt=>u[mt]!=null?u[mt].shape:null),outputShapes:k.map(mt=>mt.shape),kernelTimeMs:G.timeMs,extraInfo:G.extraInfo}),Array.isArray(tt)?k:k[0]}saveTensorsForBackwardMode(a){let u=a.map(h=>this.keep(this.clone(h)));return u}getTensorsForGradient(a,u,h){let d=tT(a);if(d!=null){let g=d.inputsToSave||[],x=d.outputsToSave||[],w;d.saveAllInputs?(U(Array.isArray(u),()=>"saveAllInputs is true, expected inputs to be an array."),w=Object.keys(u).map(C=>u[C])):w=g.map(C=>u[C]);let k=h.filter((C,$)=>x[$]);return w.concat(k)}return null}makeTensor(a,u,h,d){if(a==null)throw new Error("Values passed to engine.makeTensor() are null");h=h||"float32",d=d||this.backend;let g=a;h==="string"&&gh(a[0])&&(g=a.map(k=>O2(k)));let x=d.write(g,u,h),w=new z(u,h,x,this.nextTensorId());if(this.incRef(w,d),h==="string"){let k=this.state.tensorInfo.get(x),C=RE(g);this.state.numBytes+=C-k.bytes,k.bytes=C}return w}makeTensorFromDataId(a,u,h,d){h=h||"float32";let g=new z(u,h,a,this.nextTensorId());return this.incRef(g,d),g}makeVariable(a,u=!0,h,d){h=h||this.nextVariableId().toString(),d!=null&&d!==a.dtype&&(a=a.cast(d));let g=new Th(a,u,h,this.nextTensorId());if(this.state.registeredVariables[g.name]!=null)throw new Error(`Variable with name ${g.name} was already registered`);return this.state.registeredVariables[g.name]=g,this.incRef(g,this.backend),g}incRef(a,u){let h=this.state.tensorInfo.has(a.dataId)?this.state.tensorInfo.get(a.dataId).refCount:0;if(this.state.numTensors++,a.dtype==="string"&&this.state.numStringTensors++,h===0){this.state.numDataBuffers++;let d=0;a.dtype!=="complex64"&&a.dtype!=="string"&&(d=a.size*FE(a.dtype)),this.state.tensorInfo.set(a.dataId,{backend:u||this.backend,dtype:a.dtype,shape:a.shape,bytes:d,refCount:0}),this.state.numBytes+=d}this.state.tensorInfo.get(a.dataId).refCount++,a instanceof Th||this.track(a)}disposeTensor(a){if(!this.state.tensorInfo.has(a.dataId))return;this.state.numTensors--,a.dtype==="string"&&this.state.numStringTensors--;let u=this.state.tensorInfo.get(a.dataId),h=u.refCount;h<=1?(a.dtype!=="complex64"&&(this.state.numBytes-=u.bytes),this.state.numDataBuffers--,u.backend.disposeData(a.dataId),this.state.tensorInfo.delete(a.dataId)):this.state.tensorInfo.get(a.dataId).refCount--}disposeVariables(){for(let a in this.state.registeredVariables){let u=this.state.registeredVariables[a];this.disposeVariable(u)}}disposeVariable(a){this.disposeTensor(a),this.state.registeredVariables[a.name]!=null&&delete this.state.registeredVariables[a.name]}memory(){let a=this.backend.memory();return a.numTensors=this.state.numTensors,a.numDataBuffers=this.state.numDataBuffers,a.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(a.unreliable=!0,a.reasons==null&&(a.reasons=[]),a.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),a}async profile(a){this.state.profiling=!0;let u=this.state.numBytes,h=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await a(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(d=>d.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-u,this.state.activeProfile.newTensors=this.state.numTensors-h;for(let d of this.state.activeProfile.kernels)d.kernelTimeMs=await d.kernelTimeMs,d.extraInfo=await d.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(a,u,h,d,g,x){let w={id:this.state.nextTapeNodeId++,kernelName:a,inputs:u,outputs:h,saved:g},k=tT(a);k!=null&&(d=k.gradFunc),d!=null&&(w.gradient=C=>(C=C.map(($,F)=>{if($==null){let _=h[F],W=Ia(_.size,_.dtype);return this.makeTensor(W,_.shape,_.dtype)}return $}),d(C.length>1?C:C[0],g,x))),this.state.activeTape.push(w)}keep(a){return a.kept=!0,a}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(a){let u={track:[],name:"unnamed scope",id:this.state.nextScopeId++};a&&(u.name=a),this.state.scopeStack.push(u),this.state.activeScope=u}endScope(a){let u=Wy(a),h=new Set(u.map(g=>g.id));for(let g=0;g<this.state.activeScope.track.length;g++){let x=this.state.activeScope.track[g];!x.kept&&!h.has(x.id)&&x.dispose()}let d=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],u.forEach(g=>{!g.kept&&g.scopeId===d.id&&this.track(g)})}gradients(a,u,h,d=!1){if(U(u.length>0,()=>"gradients() received an empty list of xs."),h!=null&&h.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${h.dtype}'`);let g=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",a));U(g instanceof z,()=>"The result y returned by f() must be a tensor.");let x=M2(this.state.activeTape,u,g);if(!d&&x.length===0&&u.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let w={};w[g.id]=h==null?hQ(g.shape):h,B2(w,x,C=>this.tidy(C),fQ);let k=u.map(C=>w[C.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(C=>{for(let $ of C.saved)$.dispose()}),this.state.activeTape=null),{value:g,grads:k}})}customGrad(a){return U(H1(a),()=>"The f passed in customGrad(f) must be a function."),(...u)=>{U(u.every(g=>g instanceof z),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let h,d={};return u.forEach((g,x)=>{d[x]=g}),this.runKernelFunc((g,x)=>(h=a(...u,x),U(h.value instanceof z,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),U(H1(h.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),h.value),d,(g,x)=>{let w=h.gradFunc(g,x),k=Array.isArray(w)?w:[w];U(k.length===u.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),U(k.every($=>$ instanceof z),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let C={};return k.forEach(($,F)=>{C[F]=()=>$}),C})}}readSync(a){let u=this.state.tensorInfo.get(a);return u.backend.readSync(a)}read(a){let u=this.state.tensorInfo.get(a);return u.backend.read(a)}async time(a){let u=nT(),h=await this.backend.time(a);return h.wallMs=nT()-u,h}track(a){return this.state.activeScope!=null&&(a.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(a)),a}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new pT;for(let a in this.registry)this.disposeRegisteredKernels(a),this.registry[a].dispose(),delete this.registry[a];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};Ea.nextTensorId=0;Ea.nextVariableId=0;function hQ(i){let a=eg(an(i),"float32");return V.makeTensor(a,i,"float32")}function hT(){let i=Y1();if(i._tfengine==null){let a=new K1(i);i._tfengine=new Ea(a)}return ME(i._tfengine.ENV),G2(()=>i._tfengine),i._tfengine}var V=hT();function fQ(i,a){let u={a:i,b:a};return V.runKernelFunc((h,d)=>{let g=h.add(i,a);return d([i,a]),g},u,null,Tl)}function X2(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var Rs=Me();Rs.registerFlag("DEBUG",()=>!1,i=>{i&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Rs.registerFlag("IS_BROWSER",()=>X2());Rs.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");Rs.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Rs.registerFlag("PROD",()=>!1);Rs.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Rs.getBool("DEBUG"));Rs.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Rs.registerFlag("IS_TEST",()=>!1);function Ps(i,a){let u=i;if(Vr(i))return a==="string"?[]:[i.length];if(!Array.isArray(i))return[];let h=[];for(;Array.isArray(u)||Vr(u)&&a!=="string";)h.push(u.length),u=u[0];return Array.isArray(i)&&Me().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Y2(i,h,[]),h}function Y2(i,a,u){if(u=u||[],!Array.isArray(i)&&!Vr(i)){U(a.length===0,()=>`Element arr[${u.join("][")}] is a primitive, but should be an array/TypedArray of ${a[0]} elements`);return}U(a.length>0,()=>`Element arr[${u.join("][")}] should be a primitive, but is an array of ${i.length} elements`),U(i.length===a[0],()=>`Element arr[${u.join("][")}] should have ${a[0]} elements, but has ${i.length} elements`);let h=a.slice(1);for(let d=0;d<i.length;++d)Y2(i[d],h,u.concat(d))}function J2(i,a,u,h){if(i==null)return;if(i!=="numeric"&&i!==a||i==="numeric"&&a==="string")throw new Error(`Argument '${u}' passed to '${h}' must be ${i} tensor, but got ${a} tensor`)}function R(i,a,u,h="numeric"){if(i instanceof z)return J2(h,i.dtype,a,u),i;let d=yh(i);if(d!=="string"&&["bool","int32","float32"].indexOf(h)>=0&&(d=h),J2(h,d,a,u),i==null||!Vr(i)&&!Array.isArray(i)&&typeof i!="number"&&typeof i!="boolean"&&typeof i!="string"){let k=i==null?"null":i.constructor.name;throw new Error(`Argument '${a}' passed to '${u}' must be a Tensor or TensorLike, but got '${k}'`)}let g=Ps(i,d);!Vr(i)&&!Array.isArray(i)&&(i=[i]);let x=!0,w=d!=="string"?By(i,d):$a(i,[],x);return V.makeTensor(w,g,d)}function Vy(i,a,u,h="numeric"){if(!Array.isArray(i))throw new Error(`Argument ${a} passed to ${u} must be a \`Tensor[]\` or \`TensorLike[]\``);let d=i;return d.map((g,x)=>R(g,`${a}[${x}]`,u),h)}var Z2="__op";function O(i){let a=Object.keys(i);if(a.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${a.length} keys.`);let u=a[0],h=i[u];u.endsWith("_")&&(u=u.substring(0,u.length-1)),u=u+Z2;let d=(...g)=>{V.startScope(u);try{let x=h(...g);return rg(x)&&console.error("Cannot return a Promise inside of tidy."),V.endScope(x),x}catch(x){throw V.endScope(null),x}};return Object.defineProperty(d,"name",{value:u,configurable:!0}),d}function dQ(i,a){let u=R(i,"real","complex"),h=R(a,"imag","complex");ae(u.shape,h.shape,`real and imag shapes, ${u.shape} and ${h.shape}, must match in call to tf.complex().`);let d=x=>x.complex(u,h),g={real:u,imag:h};return V.runKernelFunc(d,g,null,qE)}var no=O({complex_:dQ});function ts(i,a,u,h){if(h==null&&(h=yh(i)),h==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Vr(i)&&!Array.isArray(i)&&typeof i!="number"&&typeof i!="boolean"&&typeof i!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(a!=null){ng(a);let d=an(a),g=an(u);U(d===g,()=>`Based on the provided shape, [${a}], the tensor should have ${d} values but has ${g}`);for(let x=0;x<u.length;++x){let w=u[x],k=x===u.length-1?w!==an(a.slice(x)):!0;U(u[x]===a[x]||!k,()=>`Error creating a new Tensor. Inferred shape (${u}) does not match the provided shape (${a}). `)}}return!Vr(i)&&!Array.isArray(i)&&(i=[i]),a=a||u,i=h!=="string"?By(i,h):$a(i,[],!0),V.makeTensor(i,a,h)}function fT(i,a,u){let h=Ps(i,u);return ts(i,a,h,u)}var dT=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function Q2(i){return dT?Buffer.byteLength(i):new Blob([i]).size}function tD(i){if(dT)return Buffer.from(i).toString("base64");let a=new Uint8Array(i),u="";for(let h=0,d=a.length;h<d;h++)u+=String.fromCharCode(a[h]);return btoa(u)}function eD(i){if(dT){let h=Buffer.from(i,"base64");return h.buffer.slice(h.byteOffset,h.byteOffset+h.byteLength)}let a=atob(i),u=new Uint8Array(a.length);for(let h=0;h<a.length;++h)u.set([a.charCodeAt(h)],h);return u.buffer}function Gy(i){if(i.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:i.modelTopology==null?0:Q2(JSON.stringify(i.modelTopology)),weightSpecsBytes:i.weightSpecs==null?0:Q2(JSON.stringify(i.weightSpecs)),weightDataBytes:i.weightData==null?0:i.weightData.byteLength}}var An=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return An.instance==null&&(An.instance=new An),An.instance}static registerSaveRouter(a){An.getInstance().saveRouters.push(a)}static registerLoadRouter(a){An.getInstance().loadRouters.push(a)}static getSaveHandlers(a){return An.getHandlers(a,"save")}static getLoadHandlers(a,u){return An.getHandlers(a,"load",u)}static getHandlers(a,u,h){let d=[],g=u==="load"?An.getInstance().loadRouters:An.getInstance().saveRouters;return g.forEach(x=>{let w=x(a,h);w!==null&&d.push(w)}),d}};var mT="tensorflowjs",gT=1,Da="models_store",Ei="model_info_store";function nD(){if(!Me().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let i=typeof window=="undefined"?self:window,a=i.indexedDB||i.mozIndexedDB||i.webkitIndexedDB||i.msIndexedDB||i.shimIndexedDB;if(a==null)throw new Error("The current browser does not appear to support IndexedDB.");return a}function yT(i){let a=i.result;a.createObjectStore(Da,{keyPath:"modelPath"}),a.createObjectStore(Ei,{keyPath:"modelPath"})}var Os=class{constructor(a){if(this.indexedDB=nD(),a==null||!a)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=a}async save(a){if(a.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,a)}async load(){return this.databaseAction(this.modelPath)}databaseAction(a,u){return new Promise((h,d)=>{let g=this.indexedDB.open(mT,gT);g.onupgradeneeded=()=>yT(g),g.onsuccess=()=>{let x=g.result;if(u==null){let w=x.transaction(Da,"readonly"),k=w.objectStore(Da),C=k.get(this.modelPath);C.onsuccess=()=>{if(C.result==null)return x.close(),d(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));h(C.result.modelArtifacts)},C.onerror=$=>(x.close(),d(C.error)),w.oncomplete=()=>x.close()}else{let w=Gy(u),k=x.transaction(Ei,"readwrite"),C=k.objectStore(Ei),$=C.put({modelPath:this.modelPath,modelArtifactsInfo:w}),F;$.onsuccess=()=>{F=x.transaction(Da,"readwrite");let _=F.objectStore(Da),W=_.put({modelPath:this.modelPath,modelArtifacts:u,modelArtifactsInfo:w});W.onsuccess=()=>h({modelArtifactsInfo:w}),W.onerror=et=>{C=k.objectStore(Ei);let tt=C.delete(this.modelPath);tt.onsuccess=()=>(x.close(),d(W.error)),tt.onerror=G=>(x.close(),d(W.error))}},$.onerror=_=>(x.close(),d($.error)),k.oncomplete=()=>{F==null?x.close():F.oncomplete=()=>x.close()}}},g.onerror=x=>d(g.error)})}};Os.URL_SCHEME="indexeddb://";var rD=i=>Me().getBool("IS_BROWSER")&&(!Array.isArray(i)&&i.startsWith(Os.URL_SCHEME))?mQ(i.slice(Os.URL_SCHEME.length)):null;An.registerSaveRouter(rD);An.registerLoadRouter(rD);function mQ(i){return new Os(i)}function gQ(i){return i.startsWith(Os.URL_SCHEME)?i.slice(Os.URL_SCHEME.length):i}var bT=class{constructor(){this.indexedDB=nD()}async listModels(){return new Promise((a,u)=>{let h=this.indexedDB.open(mT,gT);h.onupgradeneeded=()=>yT(h),h.onsuccess=()=>{let d=h.result,g=d.transaction(Ei,"readonly"),x=g.objectStore(Ei),w=x.getAll();w.onsuccess=()=>{let k={};for(let C of w.result)k[C.modelPath]=C.modelArtifactsInfo;a(k)},w.onerror=k=>(d.close(),u(w.error)),g.oncomplete=()=>d.close()},h.onerror=d=>u(h.error)})}async removeModel(a){return a=gQ(a),new Promise((u,h)=>{let d=this.indexedDB.open(mT,gT);d.onupgradeneeded=()=>yT(d),d.onsuccess=()=>{let g=d.result,x=g.transaction(Ei,"readwrite"),w=x.objectStore(Ei),k=w.get(a),C;k.onsuccess=()=>{if(k.result==null)return g.close(),h(new Error(`Cannot find model with path '${a}' in IndexedDB.`));{let $=w.delete(a),F=()=>{C=g.transaction(Da,"readwrite");let _=C.objectStore(Da),W=_.delete(a);W.onsuccess=()=>u(k.result.modelArtifactsInfo),W.onerror=et=>h(k.error)};$.onsuccess=F,$.onerror=_=>(F(),g.close(),h(k.error))}},k.onerror=$=>(g.close(),h(k.error)),x.oncomplete=()=>{C==null?g.close():C.oncomplete=()=>g.close()}},d.onerror=g=>h(d.error)})}};var Ls="/",_l="tensorflowjs_models",oD="info",yQ="model_topology",bQ="weight_specs",xQ="weight_data",wQ="model_metadata";function sD(i){return{info:[_l,i,oD].join(Ls),topology:[_l,i,yQ].join(Ls),weightSpecs:[_l,i,bQ].join(Ls),weightData:[_l,i,xQ].join(Ls),modelMetadata:[_l,i,wQ].join(Ls)}}function vQ(i){let a=i.split(Ls);if(a.length<3)throw new Error(`Invalid key format: ${i}`);return a.slice(1,a.length-1).join(Ls)}function TQ(i){return i.startsWith(Ms.URL_SCHEME)?i.slice(Ms.URL_SCHEME.length):i}var Ms=class{constructor(a){if(!Me().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,a==null||!a)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=a,this.keys=sD(this.modelPath)}async save(a){if(a.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let u=JSON.stringify(a.modelTopology),h=JSON.stringify(a.weightSpecs),d=Gy(a);try{return this.LS.setItem(this.keys.info,JSON.stringify(d)),this.LS.setItem(this.keys.topology,u),this.LS.setItem(this.keys.weightSpecs,h),this.LS.setItem(this.keys.weightData,tD(a.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:a.format,generatedBy:a.generatedBy,convertedBy:a.convertedBy,userDefinedMetadata:a.userDefinedMetadata})),{modelArtifactsInfo:d}}catch(g){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${d.modelTopologyBytes}, weightSpecsBytes=${d.weightSpecsBytes}, weightDataBytes=${d.weightDataBytes}.`)}}}async load(){let a=JSON.parse(this.LS.getItem(this.keys.info));if(a==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(a.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let u={},h=JSON.parse(this.LS.getItem(this.keys.topology));if(h==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);u.modelTopology=h;let d=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(d==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);u.weightSpecs=d;let g=this.LS.getItem(this.keys.modelMetadata);if(g!=null){let w=JSON.parse(g);u.format=w.format,u.generatedBy=w.generatedBy,u.convertedBy=w.convertedBy,u.userDefinedMetadata=w.userDefinedMetadata}let x=this.LS.getItem(this.keys.weightData);if(x==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return u.weightData=eD(x),u}};Ms.URL_SCHEME="localstorage://";var iD=i=>Me().getBool("IS_BROWSER")&&(!Array.isArray(i)&&i.startsWith(Ms.URL_SCHEME))?kQ(i.slice(Ms.URL_SCHEME.length)):null;An.registerSaveRouter(iD);An.registerLoadRouter(iD);function kQ(i){return new Ms(i)}var xT=class{constructor(){U(Me().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),U(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let a={},u=_l+Ls,h=Ls+oD;for(let d=0;d<this.LS.length;++d){let g=this.LS.key(d);if(g.startsWith(u)&&g.endsWith(h)){let x=vQ(g);a[x]=JSON.parse(this.LS.getItem(g))}}return a}async removeModel(a){a=TQ(a);let u=sD(a);if(this.LS.getItem(u.info)==null)throw new Error(`Cannot find model at path '${a}'`);let h=JSON.parse(this.LS.getItem(u.info));return this.LS.removeItem(u.info),this.LS.removeItem(u.topology),this.LS.removeItem(u.weightSpecs),this.LS.removeItem(u.weightData),h}};var aD="://",es=class{constructor(){this.managers={}}static getInstance(){return es.instance==null&&(es.instance=new es),es.instance}static registerManager(a,u){U(a!=null,()=>"scheme must not be undefined or null."),a.endsWith(aD)&&(a=a.slice(0,a.indexOf(aD))),U(a.length>0,()=>"scheme must not be an empty string.");let h=es.getInstance();U(h.managers[a]==null,()=>`A model store manager is already registered for scheme '${a}'.`),h.managers[a]=u}static getManager(a){let u=this.getInstance().managers[a];if(u==null)throw new Error(`Cannot find model manager for scheme '${a}'`);return u}static getSchemes(){return Object.keys(this.getInstance().managers)}};var cD=class{fetch(a,u){return fetch(a,u)}now(){return performance.now()}encode(a,u){if(u!=="utf-8"&&u!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${u}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(a)}decode(a,u){return new TextDecoder(u).decode(a)}};if(Me().get("IS_BROWSER")){Me().setPlatform("browser",new cD);try{es.registerManager(Ms.URL_SCHEME,new xT)}catch(i){}try{es.registerManager(Os.URL_SCHEME,new bT)}catch(i){}}var NQ={importFetch:()=>lD()},wT,uD=class{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(a,u){return Me().global.fetch!=null?Me().global.fetch(a,u):(wT==null&&(wT=NQ.importFetch()),wT(a,u))}now(){let a=process.hrtime();return a[0]*1e3+a[1]/1e6}encode(a,u){if(u!=="utf-8"&&u!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${u}`);return this.textEncoder.encode(a)}decode(a,u){return a.length===0?"":new this.util.TextDecoder(u).decode(a)}};Me().get("IS_NODE")&&Me().setPlatform("node",new uD);function kh(i,a="float32",u){return a=a||"float32",ng(i),new iT(i,a,u)}function _Q(i,a){let u=R(i,"x","cast");if(!AE(a))throw new Error(`Failed to cast to unknown dtype ${a}`);if(a==="string"&&u.dtype!=="string"||a!=="string"&&u.dtype==="string")throw new Error("Only strings can be casted to strings");let h={x:u},d={dtype:a};return V.runKernelFunc(g=>g.cast(u,a),h,null,kl,d)}var wt=O({cast_:_Q});function CQ(i){let a=R(i,"x","clone",null),u=()=>V.makeTensorFromDataId(a.dataId,a.shape,a.dtype),h={x:a};return V.runKernelFunc(u,h,null,Mg)}var Eo=O({clone_:CQ});function vT(i,a=!1){console.log(i.toString(a))}hT();var SQ={buffer:kh,cast:wt,clone:Eo,print:vT};U2(SQ);function $Q(i,a){let u=R(i,"x","reshape",null),h={x:u},d={shape:a},g=(x,w)=>(a=$E(a,u.size),U(u.size===an(a),()=>"new shape and old shape must have the same number of elements."),w([u]),x.reshape(u,a));return V.runKernelFunc(g,h,null,cy,d)}var K=O({reshape_:$Q});function IQ(i,a,u=!1,h=!1){let d=R(i,"a","matMul"),g=R(a,"b","matMul");[d,g]=he(d,g);let x=(C,$)=>{$([d,g]);let F=u?d.shape[d.rank-2]:d.shape[d.rank-1],_=h?g.shape[g.rank-1]:g.shape[g.rank-2],W=u?d.shape[d.rank-1]:d.shape[d.rank-2],et=h?g.shape[g.rank-2]:g.shape[g.rank-1],tt=d.shape.slice(0,-2),G=g.shape.slice(0,-2),mt=an(tt),lt=an(G),gt=mt===lt||mt===1||lt===1;U(d.rank>=2&&g.rank>=2&&gt,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${tt}) and (${G}).`),U(F===_,()=>`Error in matMul: inner shapes (${F}) and (${_}) of Tensors with shapes ${d.shape} and ${g.shape} and transposeA=${u} and transposeB=${h} must match.`);let _t=mt>lt?tt:G,Gt=_t.concat([W,et]),se=u?K(d,[mt,F,W]):K(d,[mt,W,F]),fe=h?K(g,[lt,et,_]):K(g,[lt,_,et]),_e=C.batchMatMul(se,fe,u,h);return K(_e,Gt)},w={a:d,b:g},k={transposeA:u,transposeB:h};return V.runKernelFunc(x,w,null,mg,k)}var We=O({matMul_:IQ});function EQ(i,a,u=1,h=0){if(a<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${a}`);let d=R(i,"indices","oneHot","int32"),g=[...d.shape,a],x=(C,$)=>($([d]),K(C.oneHot(K(d,[d.size]),a,u,h),g)),w={indices:d},k={depth:a,onValue:u,offValue:h};return V.runKernelFunc(x,w,null,ny,k)}var TT=O({oneHot_:EQ});function DQ(i,a){let u=R(i,"x","transpose");if(a==null&&(a=u.shape.map((g,x)=>x).reverse()),U(u.rank===a.length,()=>`Error in transpose: rank of input ${u.rank} must match length of perm ${a}.`),a.forEach(g=>{U(g>=0&&g<u.rank,()=>`All entries in 'perm' must be between 0 and ${u.rank-1} but got ${a}`)}),u.rank<=1)return u.clone();let h={x:u},d={perm:a};return V.runKernelFunc(g=>g.transpose(u,a),h,null,Fy,d)}var Ie=O({transpose_:DQ}),NT={};jm(NT,{fromPixels:()=>RQ,toPixels:()=>FQ});function kT(i,a,u){if(wl(i),a!=null&&a.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let h=Ps(i,u);if(h.length!==3&&h.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(h.length===1&&a==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ts(i,a,h,u)}var Cl;function AQ(i,a=3){if(a>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(i==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let u=!1,h=!1,d=!1,g=!1,x=!1;if(i.data instanceof Uint8Array)u=!0;else if(typeof ImageData!="undefined"&&i instanceof ImageData)h=!0;else if(typeof HTMLVideoElement!="undefined"&&i instanceof HTMLVideoElement)d=!0;else if(typeof HTMLImageElement!="undefined"&&i instanceof HTMLImageElement)g=!0;else if(i.getContext!=null)x=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${i.constructor.name}`);if(d){let W=2;if(d&&i.readyState<W)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}let w=My(Z1,V.backendName);if(w!=null){let W={pixels:i},et={numChannels:a};return V.runKernel(Z1,W,et)}let[k,C]=d?[i.videoWidth,i.videoHeight]:[i.width,i.height],$;x?$=i.getContext("2d").getImageData(0,0,k,C).data:h||u?$=i.data:(g||d)&&(Cl==null&&(Cl=document.createElement("canvas").getContext("2d")),Cl.canvas.width=k,Cl.canvas.height=C,Cl.drawImage(i,0,0,k,C),$=Cl.getImageData(0,0,k,C).data);let F;if(a===4)F=new Int32Array($);else{let W=k*C;F=new Int32Array(W*a);for(let et=0;et<W;et++)for(let tt=0;tt<a;++tt)F[et*a+tt]=$[et*4+tt]}let _=[C,k,a];return kT(F,_,"int32")}async function FQ(i,a){let u=R(i,"img","toPixels");if(!(i instanceof z)){let C=u;u=wt(C,"int32"),C.dispose()}if(u.rank!==2&&u.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${u.rank}.`);let[h,d]=u.shape.slice(0,2),g=u.rank===2?1:u.shape[2];if(g>4||g===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${g}`);if(u.dtype!=="float32"&&u.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${u.dtype}. Please use float32 or int32 tensors.`);let x=await u.data(),w=u.dtype==="float32"?255:1,k=new Uint8ClampedArray(d*h*4);for(let C=0;C<h*d;++C){let $=[0,0,0,255];for(let _=0;_<g;_++){let W=x[C*g+_];if(u.dtype==="float32"){if(W<0||W>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${W}.`)}else if(u.dtype==="int32"&&(W<0||W>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${W}.`);g===1?($[0]=W*w,$[1]=W*w,$[2]=W*w):$[_]=W*w}let F=C*4;k[F+0]=Math.round($[0]),k[F+1]=Math.round($[1]),k[F+2]=Math.round($[2]),k[F+3]=Math.round($[3])}if(a!=null){a.width=d,a.height=h;let C=a.getContext("2d"),$=new ImageData(k,d,h);C.putImageData($,0,0)}return u!==i&&u.dispose(),k}var RQ=O({fromPixels_:AQ});function pD(i,a,u){let h=i.shape.length;U(h===a.length,()=>`Error in slice${h}D: Length of begin ${a} must match the rank of the array (${h}).`),U(h===u.length,()=>`Error in slice${h}D: Length of size ${u} must match the rank of the array (${h}).`);for(let d=0;d<h;++d)U(a[d]+u[d]<=i.shape[d],()=>`Error in slice${h}D: begin[${d}] + size[${d}] (${a[d]+u[d]}) would overflow input.shape[${d}] (${i.shape[d]})`)}function Uy(i){let a=[],u=0;for(;i>0;)i&1&&a.push(u),i/=2,u++;return a}function hD(i,a,u){let h=[];for(let d=0;d<i.length;d++)h[d]=Math.ceil((a[d]-i[d])/u[d]);return h}function PQ(i,a,u,h){let d=[...i];for(let g=d.length;g<h.length;g++)d.push(1);for(let g=0;g<u;g++)g===0?d[a]=1:(d.splice(a,0,1),d.pop());return d}function fD(i,a,u){return u<=i?u:u-(a-1)}function dD(i,a){let u=[];for(let h=0;h<i;h++)u.push(a+h);return u}function mD(i,a,u,h,d,g,x,w,k){let C=i.length,$=new Array(C),F=new Array(C),_=new Array(C);if(a.length&&u>0){let W=a[0],et=u+1;$=OQ(x,W,et,h,i),F=LQ(w,W,et,d,i),_=PQ(g,W,et,i)}else for(let W=0;W<C;W++)$[W]=BQ(x,h,g,i,W,k),F[W]=zQ(w,d,g,i,W,k),_[W]=MQ(g,W,k);return{begin:$,end:F,strides:_}}function OQ(i,a,u,h,d){let g=[...d],x=dD(u,a);for(let w=0;w<g.length;w++)if(x.indexOf(w)>-1)g[w]=0;else{let k=fD(a,u,w),C=h[k];i&1<<k&&(C=0),g[w]=C}return g}function LQ(i,a,u,h,d){let g=[...d],x=dD(u,a);for(let w=0;w<g.length;w++)if(x.indexOf(w)>-1)g[w]=Number.MAX_SAFE_INTEGER;else{let k=fD(a,u,w),C=h[k];i&1<<k&&(C=Number.MAX_SAFE_INTEGER),g[w]=C}for(let w=0;w<g.length;w++){let k=d[w];g[w]<0&&(g[w]+=k),g[w]=mh(0,g[w],d[w])}return g}function MQ(i,a,u){let h=i[a];return(u&1<<a||h==null)&&(h=1),h}function BQ(i,a,u,h,d,g){let x=a[d],w=u[d]||1;(i&1<<d||g&1<<d||x==null)&&(w>0?x=Number.MIN_SAFE_INTEGER:x=Number.MAX_SAFE_INTEGER);let k=h[d];return x<0&&(x+=k),x=mh(0,x,k-1),x}function zQ(i,a,u,h,d,g){let x=a[d],w=u[d]||1;(i&1<<d||g&1<<d||x==null)&&(w>0?x=Number.MAX_SAFE_INTEGER:x=Number.MIN_SAFE_INTEGER);let k=h[d];return x<0&&(x+=k),w>0?x=mh(0,x,k):x=mh(-1,x,k-1),x}function qy(i,a,u){let h,d=i.shape.length;typeof a=="number"?h=[a,...new Array(d-1).fill(0)]:a.length<d?h=a.concat(new Array(d-a.length).fill(0)):h=a.slice(),h.forEach(x=>{U(x!==-1,()=>"slice() does not support negative begin indexing.")});let g;return u==null?g=new Array(d).fill(-1):typeof u=="number"?g=[u,...new Array(d-1).fill(-1)]:u.length<d?g=u.concat(new Array(d-u.length).fill(-1)):g=u,g=g.map((x,w)=>x>=0?x:(U(x===-1,()=>`Negative size values should be exactly -1 but got ${x} for the slice() size at index ${w}.`),i.shape[w]-h[w])),[h,g]}function kn(i){Me().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(i+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}q2(kn);function gD(i,a){return V.tidy(i,a)}function yD(i){let a=Wy(i);a.forEach(u=>u.dispose())}function WQ(i,a){let u=R(i,"a","add"),h=R(a,"b","add");[u,h]=he(u,h);let d=(x,w)=>{let k=x.add(u,h);return w([u,h]),k},g={a:u,b:h};return V.runKernelFunc(d,g,null,Tl)}var ke=O({add_:WQ});function VQ(i,a){let u=R(i,"a","floorDiv"),h=R(a,"b","floorDiv");[u,h]=he(u,h);let d=(x,w)=>{let k=x.floorDiv(u,h);return w([u,h]),k},g={a:u,b:h};return V.runKernelFunc(d,g,null,Rg)}var Nh=O({floorDiv_:VQ});function GQ(i,a){let u=R(i,"a","div"),h=R(a,"b","div");if([u,h]=he(u,h),u.dtype==="int32"&&h.dtype==="int32")return Nh(u,h);let d=(w,k)=>{let C=w.realDivide(u,h);return k([u,h]),C},g={a:u,b:h},x={};return V.runKernelFunc(d,g,null,$g,x)}var Wt=O({div_:GQ});function UQ(i,a){let u=R(i,"a","mul"),h=R(a,"b","mul");[u,h]=he(u,h);let d=(x,w)=>{let k=x.multiply(u,h);return w([u,h]),k},g={a:u,b:h};return V.runKernelFunc(d,g,null,Qg)}var at=O({mul_:UQ});function qQ(i){let a=R(i,"x","abs"),u={x:a};return V.runKernelFunc((h,d)=>(d([a]),a.dtype==="complex64"?h.complexAbs(a):h.abs(a)),u,null,og)}var Bn=O({abs_:qQ});function HQ(i){let a=R(i,"x","acos"),u={x:a};return V.runKernelFunc((h,d)=>{let g=h.acos(a);return d([a]),g},u,null,sg)}var _T=O({acos_:HQ});function jQ(i){let a=R(i,"x","acosh"),u={x:a};return V.runKernelFunc((h,d)=>{let g=h.acosh(a);return d([a]),g},u,null,ig)}var CT=O({acosh_:jQ});function KQ(i,a){for(let u=0;u<i.length;++u)if(i[i.length-u-1]!==a-1-u)return!1;return!0}function XQ(i,a,u){let h=i.length+a.length,d=[],g=0,x=0;for(let w=0;w<h;w++)u.indexOf(w)===-1?d.push(i[g++]):d.push(a[x++]);return d}function bD(i,a){let u=[],h=i.length;for(let g=0;g<h;g++)a.indexOf(g)===-1&&u.push(i[g]);let d=a.map(g=>i[g]);return[u,d]}function dn(i,a){let u=a.map(h=>1);return XQ(i,u,a)}function Nn(i,a){if(KQ(i,a))return null;let u=[];for(let h=0;h<a;++h)i.indexOf(h)===-1&&u.push(h);return i.forEach(h=>u.push(h)),u}function Sl(i){return i.map((a,u)=>[u,a]).sort((a,u)=>a[1]-u[1]).map(a=>a[0])}function zn(i,a){let u=[];for(let h=a-i;h<a;++h)u.push(h);return u}function YQ(i,a=null,u=!1){let h=R(i,"x","all","bool"),d=w=>{let k=Zt(a,h.shape),C=k,$=Nn(C,h.rank);$!=null&&(h=Ie(h,$),C=zn(C.length,h.rank));let F=w.all(h,C);if(u){let _=dn(F.shape,k);return K(F,_)}return F},g={x:h},x={axis:a,keepDims:u};return V.runKernelFunc(d,g,null,zE,x)}var ST=O({all_:YQ});function JQ(i,a=null,u=!1){let h=R(i,"x","any","bool"),d=w=>{let k=Zt(a,h.shape),C=k,$=Nn(C,h.rank);$!=null&&(h=Ie(h,$),C=zn(C.length,h.rank));let F=w.any(h,C);if(u){let _=dn(F.shape,k);return K(F,_)}return F},g={x:h},x={axis:a,keepDims:u};return V.runKernelFunc(d,g,null,WE,x)}var $T=O({any_:JQ});function ZQ(i,a=0){let u=R(i,"x","argMax"),h=(x,w)=>{w([u]);let k=Zt(a,u.shape),C=Nn(k,u.rank);return C!=null&&(u=Ie(u,C),k=zn(k.length,u.rank)),x.argMax(u,k[0])},d={x:u},g={axis:a};return V.runKernelFunc(h,d,null,ag,g)}var IT=O({argMax_:ZQ});function QQ(i,a=0){let u=R(i,"x","argMin"),h=(x,w)=>{w([u]),a==null&&(a=0);let k=Zt(a,u.shape),C=Nn(k,u.rank);return C!=null&&(u=Ie(u,C),k=zn(k.length,u.rank)),x.argMin(u,k[0])},d={x:u},g={axis:a};return V.runKernelFunc(h,d,null,cg,g)}var ET=O({argMin_:QQ});function ttt(i){let a=R(i,"x","asin"),u={x:a};return V.runKernelFunc((h,d)=>{let g=h.asin(a);return d([a]),g},u,null,lg)}var DT=O({asin_:ttt});function ett(i){let a=R(i,"x","asinh"),u={x:a};return V.runKernelFunc((h,d)=>{let g=h.asinh(a);return d([a]),g},u,null,ug)}var AT=O({asinh_:ett});function ntt(i){let a=R(i,"x","atan"),u={x:a};return V.runKernelFunc((h,d)=>{let g=h.atan(a);return d([a]),g},u,null,pg)}var FT=O({atan_:ntt});function rtt(i,a){let u=R(i,"a","atan2"),h=R(a,"b","atan2");[u,h]=he(u,h);let d=(x,w)=>{let k=x.atan2(u,h);return w([u,h]),k},g={a:u,b:h};return V.runKernelFunc(d,g,null,fg)}var RT=O({atan2_:rtt});function ott(i){let a=R(i,"x","atanh"),u={x:a};return V.runKernelFunc((h,d)=>{let g=h.atanh(a);return d([a]),g},u,null,hg)}var PT=O({atanh_:ott});function ns(i,a,u,h,d,g,x="channelsLast"){let[w,k]=Hy(a),C;if(x==="channelsLast")C=[w,k,i[3],i[3]];else if(x==="channelsFirst")C=[w,k,i[1],i[1]];else throw new Error(`Unknown dataFormat ${x}`);return Gr(i,C,u,h,d,g,!1,x)}function jy(i,a,u,h,d,g,x="NDHWC"){let[w,k,C]=OT(a),$,F;if(x==="NDHWC")F="channelsLast",$=[w,k,C,i[4],i[4]];else if(x==="NCDHW")F="channelsFirst",$=[w,k,C,i[1],i[1]];else throw new Error(`Unknown dataFormat ${x}`);return _h(i,$,u,h,d,!1,F,g)}function Gr(i,a,u,h,d,g,x=!1,w="channelsLast"){let[k,C,$,F]=[-1,-1,-1,-1];if(w==="channelsLast")[k,C,$,F]=i;else if(w==="channelsFirst")[k,F,C,$]=i;else throw new Error(`Unknown dataFormat ${w}`);let[_,W,,et]=a,[tt,G]=Hy(u),[mt,lt]=Hy(h),gt=$l(_,mt),_t=$l(W,lt),{padInfo:Gt,outHeight:se,outWidth:fe}=stt(d,C,$,tt,G,gt,_t,g,w),_e=x?et*F:et,Ge;return w==="channelsFirst"?Ge=[k,_e,se,fe]:w==="channelsLast"&&(Ge=[k,se,fe,_e]),{batchSize:k,dataFormat:w,inHeight:C,inWidth:$,inChannels:F,outHeight:se,outWidth:fe,outChannels:_e,padInfo:Gt,strideHeight:tt,strideWidth:G,filterHeight:_,filterWidth:W,effectiveFilterHeight:gt,effectiveFilterWidth:_t,dilationHeight:mt,dilationWidth:lt,inShape:i,outShape:Ge,filterShape:a}}function _h(i,a,u,h,d,g=!1,x="channelsLast",w){let[k,C,$,F,_]=[-1,-1,-1,-1,-1];if(x==="channelsLast")[k,C,$,F,_]=i;else if(x==="channelsFirst")[k,_,C,$,F]=i;else throw new Error(`Unknown dataFormat ${x}`);let[W,et,tt,,G]=a,[mt,lt,gt]=OT(u),[_t,Gt,se]=OT(h),fe=$l(W,_t),_e=$l(et,Gt),Ge=$l(tt,se),{padInfo:Vt,outDepth:ln,outHeight:Ce,outWidth:rr}=itt(d,C,$,F,mt,lt,gt,fe,_e,Ge,w),Ys=g?G*_:G,Js;return x==="channelsFirst"?Js=[k,Ys,ln,Ce,rr]:x==="channelsLast"&&(Js=[k,ln,Ce,rr,Ys]),{batchSize:k,dataFormat:x,inDepth:C,inHeight:$,inWidth:F,inChannels:_,outDepth:ln,outHeight:Ce,outWidth:rr,outChannels:Ys,padInfo:Vt,strideDepth:mt,strideHeight:lt,strideWidth:gt,filterDepth:W,filterHeight:et,filterWidth:tt,effectiveFilterDepth:fe,effectiveFilterHeight:_e,effectiveFilterWidth:Ge,dilationDepth:_t,dilationHeight:Gt,dilationWidth:se,inShape:i,outShape:Js,filterShape:a}}function att(i,a,u,h,d){h==null&&(h=xD(i,a,u));let g=i[0],x=i[1],w=Aa((g-a+2*h)/u+1,d);U(Te(w),()=>`The output # of rows (${w}) must be an integer. Change the stride and/or zero pad parameters`);let k=Aa((x-a+2*h)/u+1,d);return U(Te(k),()=>`The output # of columns (${k}) must be an integer. Change the stride and/or zero pad parameters`),[w,k]}function ctt(i,a,u,h,d,g){d==null&&(d=xD(i,a,h));let x=i[0],w=i[1],k=i[2],C=Aa((x-a+2*d)/h+1,g);U(Te(C),()=>`The output # of depths (${C}) must be an integer. Change the stride and/or zero pad parameters`);let $=Aa((w-a+2*d)/h+1,g);U(Te($),()=>`The output # of rows (${$}) must be an integer. Change the stride and/or zero pad parameters`);let F=Aa((k-a+2*d)/h+1,g);return U(Te(F),()=>`The output # of columns (${F}) must be an integer. Change the stride and/or zero pad parameters`),[C,$,F,u]}function xD(i,a,u,h=1){let d=$l(a,h);return Math.floor((i[0]*(u-1)-u+d)/2)}function Hy(i){return typeof i=="number"?[i,i,i]:i.length===2?[i[0],i[1],1]:i}function OT(i){return typeof i=="number"?[i,i,i]:i}function $l(i,a){return a<=1?i:i+(i-1)*(a-1)}function stt(i,a,u,h,d,g,x,w,k){let C,$,F;if(typeof i=="number"){let _=i===0?"VALID":"NUMBER";C={top:i,bottom:i,left:i,right:i,type:_};let W=att([a,u],g,h,i,w);$=W[0],F=W[1]}else if(i==="same"){$=Math.ceil(a/h),F=Math.ceil(u/d);let _=Math.max(0,($-1)*h+g-a),W=Math.max(0,(F-1)*d+x-u),et=Math.floor(_/2),tt=_-et,G=Math.floor(W/2),mt=W-G;C={top:et,bottom:tt,left:G,right:mt,type:"SAME"}}else if(i==="valid")C={top:0,bottom:0,left:0,right:0,type:"VALID"},$=Math.ceil((a-g+1)/h),F=Math.ceil((u-x+1)/d);else if(typeof i=="object"){let _=k==="channelsLast"?i[1][0]:i[2][0],W=k==="channelsLast"?i[1][1]:i[2][1],et=k==="channelsLast"?i[2][0]:i[3][0],tt=k==="channelsLast"?i[2][1]:i[3][1],G=_===0&&W===0&&et===0&&tt===0?"VALID":"EXPLICIT";C={top:_,bottom:W,left:et,right:tt,type:G},$=Aa((a-g+_+W)/h+1,w),F=Aa((u-x+et+tt)/d+1,w)}else throw Error(`Unknown padding parameter: ${i}`);return{padInfo:C,outHeight:$,outWidth:F}}function itt(i,a,u,h,d,g,x,w,k,C,$){let F,_,W,et;if(typeof i=="number"){let tt=i===0?"VALID":"NUMBER";F={top:i,bottom:i,left:i,right:i,front:i,back:i,type:tt};let G=ctt([a,u,h,1],w,1,d,i,$);_=G[0],W=G[1],et=G[2]}else if(i==="same"){_=Math.ceil(a/d),W=Math.ceil(u/g),et=Math.ceil(h/x);let tt=(_-1)*d+w-a,G=(W-1)*g+k-u,mt=(et-1)*x+C-h,lt=Math.floor(tt/2),gt=tt-lt,_t=Math.floor(G/2),Gt=G-_t,se=Math.floor(mt/2),fe=mt-se;F={top:_t,bottom:Gt,left:se,right:fe,front:lt,back:gt,type:"SAME"}}else if(i==="valid")F={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},_=Math.ceil((a-w+1)/d),W=Math.ceil((u-k+1)/g),et=Math.ceil((h-C+1)/x);else throw Error(`Unknown padding parameter: ${i}`);return{padInfo:F,outDepth:_,outHeight:W,outWidth:et}}function Aa(i,a){if(!a)return i;switch(a){case"round":return Math.round(i);case"ceil":return Math.ceil(i);case"floor":return Math.floor(i);default:throw new Error(`Unknown roundingMode ${a}`)}}function Di(i){let[a,u,h]=Hy(i);return a===1&&u===1&&h===1}function Wn(i,a){return Di(i)||Di(a)}function Il(i){if(i==="NHWC")return"channelsLast";if(i==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${i}`)}function ltt(i,a,u,h,d){let g=R(i,"x","avgPool","float32"),x=1;U(Wn(u,x),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${u} and dilations '${x}'`);let w=g,k=!1;g.rank===3&&(k=!0,w=K(g,[1,g.shape[0],g.shape[1],g.shape[2]])),U(w.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${w.rank}.`),d!=null&&U(Te(h),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${d} but got pad ${h}.`);let C=(W,et)=>{let tt=ns(w.shape,a,u,1,h,d);return et([w]),tt.filterWidth===1&&tt.filterHeight===1&&Fs(tt.inShape,tt.outShape)?w.clone():W.avgPool(w,tt)},$={x:w},F={filterSize:a,strides:u,pad:h,dimRoundingMode:d},_=V.runKernelFunc(C,$,null,dg,F);return _=wt(_,g.dtype),k?K(_,[_.shape[1],_.shape[2],_.shape[3]]):_}var Ch=O({avgPool_:ltt});function wD(i,a){let u=i[0].length;i.forEach((d,g)=>{U(d.length===u,()=>`Error in concat${u}D: rank of tensors[${g}] must be the same as the rank of the rest (${u})`)}),U(a>=0&&a<u,()=>`Error in concat${u}D: axis must be between 0 and ${u-1}.`);let h=i[0];i.forEach((d,g)=>{for(let x=0;x<u;x++)U(x===a||d[x]===h[x],()=>`Error in concat${u}D: Shape of tensors[${g}] (${d}) does not match the shape of the rest (${h}) along the non-concatenated axis ${g}.`)})}function vD(i,a){let u=i[0].slice();for(let h=1;h<i.length;h++)u[a]+=i[h][a];return u}function utt(i,a=0){U(i.length>=1,()=>"Pass at least one tensor to concat");let u=Vy(i,"tensors","concat");u[0].dtype==="complex64"&&u.forEach(x=>{if(x.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${x.dtype}. `)});let h=(x,w)=>{let k=Zt(a,u[0].shape)[0],C=vD(u.map(_=>_.shape),k);if(an(C)===0)return fT([],C);if(u=u.filter(_=>_.size>0),u.length===1)return u[0];let $=u.map(_=>_.shape);wD($,k);let F=x.concat(u,k);return w(u),F},d=u,g={axis:a};return V.runKernelFunc(h,d,null,wg,g)}var mn=O({concat_:utt});function ptt(i){let a=R(i,"x","sigmoid"),u={x:a};return V.runKernelFunc((h,d)=>{let g=h.sigmoid(a);return d([g]),g},u,null,vy)}var Fa=O({sigmoid_:ptt});function htt(i,a,u){let h=R(i,"x","slice");if(h.rank===0)throw new Error("Slicing scalar is not possible");let d=(w,k)=>{let[C,$]=qy(h,a,u);return pD(h,C,$),k([h]),w.slice(h,C,$)},g={x:h},x={begin:a,size:u};return V.runKernelFunc(d,g,null,yy,x)}var ve=O({slice_:htt});function ftt(i){let a=R(i,"x","tanh"),u={x:a};return V.runKernelFunc((h,d)=>{let g=h.tanh(a);return d([g]),g},u,null,Dy)}var LT=O({tanh_:ftt});function dtt(i,a,u){let h=R(i,"x","batchToSpaceND"),d=a.reduce((k,C)=>k*C);U(h.rank>=1+a.length,()=>`input rank is ${h.rank} but should be > than blockShape.length ${a.length}`),U(u.length===a.length,()=>`crops.length is ${u.length} but should be equal to blockShape.length  ${a.length}`),U(h.shape[0]%d===0,()=>`input tensor batch is ${h.shape[0]} but is not divisible by the product of the elements of blockShape ${a.join(" * ")} === ${d}`);let g=k=>k.batchToSpaceND(h,a,u),x={x:h},w={blockShape:a,crops:u};return V.runKernelFunc(g,x,null,gg,w)}var Ra=O({batchToSpaceND_:dtt});function TD(i){let a;return i.rank===0||i.rank===1?a=K(i,[1,1,1,i.size]):i.rank===2?a=K(i,[1,1,i.shape[0],i.shape[1]]):i.rank===3?a=K(i,[1,i.shape[0],i.shape[1],i.shape[2]]):a=i,a}function mtt(i,a,u,h,d,g){g==null&&(g=.001);let x=R(i,"x","batchNorm"),w=R(a,"mean","batchNorm"),k=R(u,"variance","batchNorm"),C;d!=null&&(C=R(d,"scale","batchNorm"));let $;h!=null&&($=R(h,"offset","batchNorm")),U(w.rank===k.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),U($==null||w.rank===$.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),U(C==null||w.rank===C.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let F=TD(x),_=(G,mt)=>(mt([F,w,k,C]),G.batchNorm(F,Ky(w),Ky(k),Ky($),Ky(C),g)),W={x:F,scale:C,offset:$,mean:w,variance:k},et={varianceEpsilon:g},tt=V.runKernelFunc(_,W,null,Pg,et);return K(tt,x.shape)}function Ky(i){return i==null?null:i.rank===0?K(i,[i.size]):i.rank===1?i:i.rank===2?K(i,[1,1,i.shape[0],i.shape[1]]):i.rank===3?K(i,[1,i.shape[0],i.shape[1],i.shape[2]]):i}var MT=O({batchNorm_:mtt});function gtt(i,a){let u=R(i,"broadcastTo","x"),h=u.shape;if(a.some($=>!($>0)||$%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${a}].`);if(a.length<u.rank)throw new Error(`broadcastTo(): shape.length=${a.length} < input.rank=${u.rank}.`);if(a.length>u.rank){let $=u.shape.slice();for(;$.length<a.length;)$.unshift(1);u=K(u,$)}let d=u.shape,g=Array.from(a);for(let $=a.length-1;$>=0;$--)if(d[$]===a[$])g[$]=1;else if(u.shape[$]!==1)throw new Error(`broadcastTo(): [${h}] cannot be broadcast to [${a}].`);let x=g.map(($,F)=>$>1?F:-1).filter($=>$>=0);if(x.length===0)return Eo(u);let w=$=>$.tile(u,g),k={x:u},C={shape:a,inputShape:d};return V.runKernelFunc(w,k,null,yg,C)}var El=O({broadcastTo_:gtt});function ytt(i){let a=R(i,"x","ceil"),u={x:a};return V.runKernelFunc(h=>h.ceil(a),u,null,bg)}var BT=O({ceil_:ytt});function btt(i,a,u){let h=R(i,"x","clipByValue");U(a<=u,()=>`Error in clip: min (${a}) must be less than or equal to max (${u}).`);let d={x:h},g={clipValueMin:a,clipValueMax:u};return V.runKernelFunc((x,w)=>{let k=x.clip(h,a,u);return w([h]),k},d,null,xg,g)}var zT=O({clipByValue_:btt});function xtt(i,a,u,h,d="NHWC",g=[1,1],x){let w=R(i,"x","conv2d"),k=R(a,"filter","conv2d"),C=w,$=!1;w.rank===3&&($=!0,C=K(w,[1,w.shape[0],w.shape[1],w.shape[2]])),U(C.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${C.rank}.`),U(k.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${k.rank}.`),x!=null&&U(Te(h),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${x} but got pad ${h}.`);let F=d==="NHWC"?C.shape[3]:C.shape[1];U(F===k.shape[2],()=>`Error in conv2d: depth of input (${F}) must match input depth for filter ${k.shape[2]}.`),U(Wn(u,g),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${u} and dilations '${g}'`);let _=(G,mt)=>{let lt=Il(d),gt=Gr(C.shape,k.shape,u,g,h,x,!1,lt),_t=G.conv2d(C,k,gt);return mt([C,k]),_t},W={x:C,filter:k},et={strides:u,pad:h,dataFormat:d,dilations:g,dimRoundingMode:x},tt=V.runKernelFunc(_,W,null,vg,et);return $?K(tt,[tt.shape[1],tt.shape[2],tt.shape[3]]):tt}var Bs=O({conv2d_:xtt});function wtt(i,a,u,h,d="NWC",g=1,x){let w=R(i,"x","conv1d"),k=R(a,"filter","conv1d"),C=w,$=!1;w.rank===2&&($=!0,C=K(w,[1,w.shape[0],w.shape[1]])),U(C.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${C.rank}.`),U(k.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${k.rank}.`),x!=null&&U(Te(h),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${x} but got pad ${h}.`),U(C.shape[2]===k.shape[1],()=>`Error in conv1d: depth of input (${C.shape[2]}) must match input depth for filter ${k.shape[1]}.`),U(Wn(u,g),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${u} and dilation '${g}'`),U(d==="NWC",()=>`Error in conv1d: got dataFormat of ${d} but only NWC is currently supported.`);let F=K(k,[1,k.shape[0],k.shape[1],k.shape[2]]),_=K(C,[C.shape[0],1,C.shape[1],C.shape[2]]),W=[1,u],et=[1,g],tt="NHWC",G=Bs(_,F,W,h,tt,et,x);return $?K(G,[G.shape[2],G.shape[3]]):K(G,[G.shape[0],G.shape[2],G.shape[3]])}var WT=O({conv1d_:wtt});function vtt(i,a,u,h,d,g="NHWC",x){U(i.length===a.rank,()=>`Length of inShape (${i.length}) and rank of dy (${a.rank}) must match`);let w=i,k=a,C=!1;a.rank===3&&(C=!0,k=K(a,[1,a.shape[0],a.shape[1],a.shape[2]]),w=[1,i[0],i[1],i[2]]),U(w.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${w.length}.`),U(k.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${k.rank}`),U(u.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${u.rank}`);let $=g==="NHWC"?w[3]:w[1],F=g==="NHWC"?k.shape[3]:k.shape[1];U($===u.shape[2],()=>`Error in conv2dDerInput: depth of input (${$}) must match input depth for filter ${u.shape[2]}.`),U(F===u.shape[3],()=>`Error in conv2dDerInput: depth of output (${F}) must match output depth for filter ${u.shape[3]}.`),x!=null&&U(Te(d),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${x} but got pad ${d}.`);let _=(G,mt)=>{let lt=1,gt=Il(g),_t=Gr(w,u.shape,h,lt,d,x,!1,gt),Gt=G.conv2dDerInput(k,u,_t);return mt([k,u]),Gt},W={dy:k,filter:u},et={strides:h,pad:d,dataFormat:g,dimRoundingMode:x,inputShape:w},tt=V.runKernelFunc(_,W,null,Tg,et);return C?K(tt,[tt.shape[1],tt.shape[2],tt.shape[3]]):tt}var Xy=O({conv2DBackpropInput_:vtt});function Ttt(i,a,u,h,d,g){let x=R(i,"x","conv2dTranspose"),w=R(a,"filter","conv2dTranspose");return Xy(u,x,w,h,d,"NHWC",g)}var VT=O({conv2dTranspose_:Ttt});function ktt(i,a,u,h,d){U(i.length===a.rank,()=>`Length of inShape (${i.length}) and rank of dy (${a.rank}) must match`);let g=i,x=a,w=!1;a.rank===4&&(w=!0,x=K(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),g=[1,i[0],i[1],i[2],i[3]]);let k=g[4],C=x.shape[4];U(g.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${g.length}.`),U(x.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${x.rank}`),U(u.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${u.rank}`),U(k===u.shape[3],()=>`Error in conv3dDerInput: depth of input (${k}) must match input depth for filter ${u.shape[3]}.`),U(C===u.shape[4],()=>`Error in conv3dDerInput: depth of output (${C}) must match output depth for filter ${u.shape[4]}.`);let $=et=>{let tt=1,G=_h(g,u.shape,h,tt,d);return et.conv3dDerInput(x,u,G)},F={dy:x,filter:u},_={pad:d,strides:h,inputShape:g},W=V.runKernelFunc($,F,null,XE,_);return w?K(W,[W.shape[1],W.shape[2],W.shape[3],W.shape[4]]):W}var kD=O({conv3DBackpropInput_:ktt});function Ntt(i){let a=R(i,"x","cos"),u={x:a};return V.runKernelFunc((h,d)=>{let g=h.cos(a);return d([a]),g},u,null,kg)}var Pa=O({cos_:Ntt});function _tt(i){let a=R(i,"x","cosh"),u={x:a};return V.runKernelFunc((h,d)=>{let g=h.cosh(a);return d([a]),g},u,null,Ng)}var Sh=O({cosh_:_tt});function Ctt(i,a=0,u=!1,h=!1){let d=R(i,"x","cumsum"),g=(k,C)=>{let $=Nn([a],d.rank),F=d;$!=null&&(F=Ie(d,$));let _=zn(1,d.rank)[0],W=k.cumsum(F,_,u,h);if(C([d]),$!=null){let et=Sl($);W=Ie(W,et)}return W},x={x:d},w={axis:a,exclusive:u,reverse:h};return V.runKernelFunc(g,x,null,_g,w)}var $h=O({cumsum_:Ctt});function Stt(i,a,u="NHWC"){let h=R(i,"x","depthToSpace"),d=u==="NHWC"?h.shape[1]:h.shape[2],g=u==="NHWC"?h.shape[2]:h.shape[3],x=u==="NHWC"?h.shape[3]:h.shape[1];U(d*a>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${d} and ${a}  for depthToSpace with input shape
    ${h.shape}`),U(g*a>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${g} and ${a} for depthToSpace with input shape
        ${h.shape}`),U(x%(a*a)===0,()=>`Dimension size must be evenly divisible by ${a*a} but is ${x} for depthToSpace with input shape ${h.shape}`);let w=$=>$.depthToSpace(h,a,u),k={x:h},C={blockSize:a,dataFormat:u};return V.runKernelFunc(w,k,null,JE,C)}var GT=O({depthToSpace_:Stt});function $tt(i,a,u,h,d="NHWC",g=[1,1],x){let w=R(i,"x","depthwiseConv2d"),k=R(a,"filter","depthwiseConv2d"),C=w,$=!1;w.rank===3&&($=!0,C=K(w,[1,w.shape[0],w.shape[1],w.shape[2]])),U(C.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${C.rank}.`),U(k.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${k.rank}.`),U(C.shape[3]===k.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${C.shape[3]}) must match the inChannels dimension in filter ${k.shape[2]}.`),x!=null&&U(Te(h),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${x} but got pad ${h}.`);let F=(tt,G)=>{g==null&&(g=[1,1]),U(Wn(u,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${g}'`);let mt=Gr(C.shape,k.shape,u,g,h,x,!0),lt=tt.depthwiseConv2D(C,k,mt);return G([C,k]),lt},_={x:C,filter:k},W={strides:u,pad:h,dataFormat:d,dilations:g,dimRoundingMode:x},et=V.runKernelFunc(F,_,null,Cg,W);return $?K(et,[et.shape[1],et.shape[2],et.shape[3]]):et}var Oa=O({depthwiseConv2d_:$tt});function Itt(i,a,u,h,d=[1,1],g="NHWC"){let x=R(i,"x","dilation2d"),w=R(a,"filter","dilation2d");U(x.rank===3||x.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${x.rank}.`),U(w.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${w.rank}.`),U(g==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${g}`);let k=x,C=!1;x.rank===3&&(k=K(x,[1,x.shape[0],x.shape[1],x.shape[2]]),C=!0);let $={x:k,filter:w},F={strides:u,pad:h,dilations:d},_=V.runKernel(Sg,$,F);return C?K(_,[_.shape[1],_.shape[2],_.shape[3]]):_}var UT=O({dilation2d_:Itt});function Be(i,a){let u=[];for(let h=0;h<a.length;h++){let d=i[i.length-h-1],g=a.length-h-1,x=a[g];(d==null||d===1&&x>1)&&u.unshift(g)}return u}function ne(i,a){let u=[],h=Math.max(i.length,a.length);for(let d=0;d<h;d++){let g=i[i.length-d-1];g==null&&(g=1);let x=a[a.length-d-1];if(x==null&&(x=1),g===1)u.unshift(x);else if(x===1)u.unshift(g);else if(g!==x){let w=`Operands could not be broadcast together with shapes ${i} and ${a}.`;throw Error(w)}else u.unshift(g)}return u}function Ett(i,a){let u=R(i,"a","equal"),h=R(a,"b","equal");[u,h]=he(u,h),ne(u.shape,h.shape);let d=x=>x.equal(u,h),g={a:u,b:h};return V.runKernelFunc(d,g,null,r2)}var zs=O({equal_:Ett});function Dtt(i,a,u){let h=R(a,"a","where"),d=R(u,"b","where"),g=R(i,"condition","where","bool"),x=ne(h.shape,d.shape),w=El(h,x),k=El(d,x);g.rank===1&&U(g.shape[0]===h.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),g.rank!==1&&ae(g.shape,k.shape,"Error in where: ");let C=(F,_)=>{let W=F.select(g,w,k);return _([g]),W},$={condition:g,t:w,e:k};return V.runKernelFunc(C,$,null,my)}var _n=O({where_:Dtt});function Att(i){let a=R(i,"x","zerosLike"),u={x:a};return V.runKernelFunc(h=>h.zerosLike(a),u,null,Oy)}var jt=O({zerosLike_:Att});function Ftt(i,a){let u=R(i,"a","div"),h=R(a,"b","div");[u,h]=he(u,h);let d=Wt(u,h),g=jt(d),x=zs(h,g);return _n(x,g,d)}var qT=O({divNoNan_:Ftt});function Rtt(i,a){let u=R(i,"t1","dot"),h=R(a,"t2","dot");U((u.rank===1||u.rank===2)&&(h.rank===1||h.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${u.rank} and ${h.rank}.`);let d=u.rank===1?u.size:u.shape[1],g=h.rank===1?h.size:h.shape[0];if(U(d===g,()=>`Error in dot: inner dimensions of inputs must match, but got ${d} and ${g}.`),u.rank===1&&h.rank===1){let x=K(u,[1,-1]),w=K(h,[-1,1]),k=We(x,w);return K(k,[])}else if(u.rank===1&&h.rank===2){let x=K(u,[1,-1]),w=K(h,[h.shape[0],h.shape[1]]),k=We(x,w);return K(k,[k.size])}else if(u.rank===2&&h.rank===1){let x=K(h,[-1,1]),w=We(u,x);return K(w,[w.size])}else{let x=K(h,[h.shape[0],h.shape[1]]),w=We(u,x);return w}}var HT=O({dot_:Rtt});function Ptt(i){let a=R(i,"x","elu"),u=(d,g)=>{let x=d.elu(a);return g([x]),x},h={x:a};return V.runKernelFunc(u,h,null,Ig)}var jT=O({elu_:Ptt});function Ott(i){let a=R(i,"x","erf");U(a.dtype==="int32"||a.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),a.dtype==="int32"&&(a=wt(a,"float32"));let u={x:a};return V.runKernelFunc((h,d)=>{let g=h.erf(a);return d([a]),g},u,null,Eg)}var KT=O({erf_:Ott});function Ltt(i){let a=R(i,"x","exp"),u={x:a};return V.runKernelFunc((h,d)=>{let g=h.exp(a);return d([g]),g},u,null,Dg)}var Cn=O({exp_:Ltt});function Mtt(i,a=0){let u=null,h=R(i,"x","expandDims",u);U(a<=h.rank,()=>"Axis must be <= rank of the tensor");let d=h.shape.slice();return a<0&&(U(-(h.rank+1)<=a,()=>`Axis must be in the interval [${-(h.rank+1)}, ${h.rank}]`),a=h.rank+a+1),d.splice(a,0,1),K(h,d)}var mr=O({expandDims_:Mtt});function Btt(i){let a=R(i,"x","expm1"),u={x:a};return V.runKernelFunc((h,d)=>{let g=h.expm1(a);return d([a]),g},u,null,Ag)}var XT=O({expm1_:Btt});function ztt(i,a){let u=null,h=R(i,"x","tile",u);U(h.rank===a.length,()=>`Error in transpose: rank of input ${h.rank} must match length of reps ${a}.`);let d=(k,C)=>{let $=k.tile(h,a);return C([h]),$},g=[h],x={x:h},w={reps:a};return V.runKernelFunc(d,x,null,Ay,w,g)}var Ws=O({tile_:ztt});function Wtt(i,a,u,h="float32"){a==null&&(a=i);let d=kh([i,a],h),g=i<=a?i:a;for(let w=0;w<g;++w)d.set(1,w,w);let x=K(d.toTensor(),[i,a]);if(u==null)return x;if(u.length===1)return Ws(mr(x,0),[u[0],1,1]);if(u.length===2)return Ws(mr(mr(x,0),0),[u[0],u[1],1,1]);if(u.length===3)return Ws(mr(mr(mr(x,0),0),0),[u[0],u[1],u[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${u.length}D.`)}var YT=O({eye_:Wtt});function JT(i,a,u){let h={shape:i,value:a,dtype:u};return V.runKernelFunc(d=>d.fill(i,a,u),{},null,s2,h)}function Vtt(i){let a=R(i,"x","floor"),u={x:a};return V.runKernelFunc(h=>h.floor(a),u,null,Fg)}var Ih=O({floor_:Vtt});function ND(i,a,u){let h=i.shape[u],d=[],g=1,x=1;for(let w=0;w<u;w++)d.push(i.shape[w]),g*=i.shape[w];for(let w=0;w<a.rank;w++)d.push(a.shape[w]);for(let w=u+1;w<i.rank;w++)d.push(i.shape[w]),x*=i.shape[w];return{batchSize:g,sliceSize:x,dimSize:h,outputShape:d}}function Gtt(i,a,u=0){let h=R(i,"x","gather"),d=R(a,"indices","gather","int32"),g={x:h,indices:d},x={axis:u},w=(k,C)=>{let $=Zt(u,h.shape)[0],F=ND(h,d,$),_=k.gather(h,K(d,[d.size]),$);return C([h,d]),K(_,F.outputShape)};return V.runKernelFunc(w,g,null,Og,x)}var Eh=O({gather_:Gtt});function Utt(i,a){let u=R(i,"a","greater"),h=R(a,"b","greater");[u,h]=he(u,h),ne(u.shape,h.shape);let d=x=>x.greater(u,h),g={a:u,b:h};return V.runKernelFunc(d,g,null,a2)}var gr=O({greater_:Utt});function qtt(i,a){let u=R(i,"a","greaterEqual"),h=R(a,"b","greaterEqual");[u,h]=he(u,h),ne(u.shape,h.shape);let d=(x,w)=>{let k=x.greaterEqual(u,h);return w([u,h]),k},g={a:u,b:h};return V.runKernelFunc(d,g,null,Lg)}var Ur=O({greaterEqual_:qtt});function Htt(i){let a=R(i,"input","imag"),u=d=>d.imag(a),h={input:a};return V.runKernelFunc(u,h,null,l2)}var La=O({imag_:Htt});function jtt(i){let a=R(i,"x","isFinite"),u={x:a};return V.runKernelFunc(h=>h.isFinite(a),u,null,Bg)}var ZT=O({isFinite_:jtt});function Ktt(i){let a=R(i,"x","isInf"),u={x:a};return V.runKernelFunc(h=>h.isInf(a),u,null,zg)}var QT=O({isInf_:Ktt});function Xtt(i){let a=R(i,"x","isNaN"),u={x:a};return V.runKernelFunc(h=>h.isNaN(a),u,null,Wg)}var tk=O({isNaN_:Xtt});function Ytt(i,a){let u=R(i,"a","maximum"),h=R(a,"b","maximum");[u,h]=he(u,h),u.dtype==="bool"&&(u=wt(u,"int32"),h=wt(h,"int32")),ne(u.shape,h.shape);let d=(x,w)=>{let k=x.maximum(u,h);return w([u,h]),k},g={a:u,b:h};return V.runKernelFunc(d,g,null,jg)}var Vs=O({maximum_:Ytt});function Ot(i,a){if((Vr(i)&&a!=="string"||Array.isArray(i))&&a!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(a==="string"&&Vr(i)&&!(i instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");let u=[],h=[];return ts(i,u,h,a)}function Jtt(i,a=.2){let u=R(i,"x","leakyRelu");return Vs(at(Ot(a),u),u)}var ek=O({leakyRelu_:Jtt});function Ztt(i,a){let u=R(i,"a","less"),h=R(a,"b","less");[u,h]=he(u,h),ne(u.shape,h.shape);let d=x=>x.less(u,h),g={a:u,b:h};return V.runKernelFunc(d,g,null,u2)}var Ma=O({less_:Ztt});function Qtt(i,a){let u=R(i,"a","lessEqual"),h=R(a,"b","lessEqual");[u,h]=he(u,h),ne(u.shape,h.shape);let d=(x,w)=>{let k=x.lessEqual(u,h);return w([u,h]),k},g={a:u,b:h};return V.runKernelFunc(d,g,null,p2)}var qr=O({lessEqual_:Qtt});function tet(i,a=5,u=1,h=1,d=.5){let g=R(i,"x","localResponseNormalization");U(g.rank===4||g.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${g.rank}.`),U(Te(a),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${a}.`);let x=g,w=!1;g.rank===3&&(w=!0,x=K(g,[1,g.shape[0],g.shape[1],g.shape[2]]));let k=(_,W)=>{let et=_.localResponseNormalization4D(x,a,u,h,d);return W([x,et]),et},C={x},$={depthRadius:a,bias:u,alpha:h,beta:d},F=V.runKernelFunc(k,C,null,qg,$);return w?K(F,[F.shape[1],F.shape[2],F.shape[3]]):F}var nk=O({localResponseNormalization_:tet});function eet(i){let a=R(i,"x","log"),u={x:a};return V.runKernelFunc((h,d)=>{let g=h.log(a);return d([a]),g},u,null,Vg)}var ro=O({log_:eet});function net(i){let a=R(i,"x","log1p"),u={x:a};return V.runKernelFunc((h,d)=>{let g=h.log1p(a);return d([a]),g},u,null,Gg)}var Dh=O({log1p_:net});function Dl(i){return V.customGrad(i)}function ret(i){let a=R(i,"x","neg"),u={x:a};return V.runKernelFunc(h=>h.neg(a),u,null,ty)}var me=O({neg_:ret});function oet(i){let a=R(i,"x","softplus"),u={x:a};return V.runKernelFunc((h,d)=>{let g=h.softplus(a);return d([a]),g},u,null,Ty)}var Ah=O({softplus_:oet});function set(i){let a=R(i,"x","logSigmoid"),u=Dl(h=>{let d=me(Ah(me(h))),g=x=>{let w=at(x,Fa(me(h)));return w};return{value:d,gradFunc:g}});return u(a)}var rk=O({logSigmoid_:set});function iet(i,a=null,u=!1){let h=R(i,"x","max"),d=(w,k)=>{let C=Zt(a,h.shape),$=C,F=Nn($,h.rank),_=h;F!=null&&(_=Ie(h,F),$=zn($.length,_.rank));let W=w.max(_,$);F!=null&&_.dispose();let et=W;if(u){let tt=dn(et.shape,Zt(a,h.shape));et=K(et,tt),W.dispose()}return k([h,et]),et},g={x:h},x={reductionIndices:a,keepDims:u};return V.runKernelFunc(d,g,null,Hg,x)}var Do=O({max_:iet});function aet(i,a){let u=R(i,"a","sub"),h=R(a,"b","sub");[u,h]=he(u,h);let d=(x,w)=>{let k=x.subtract(u,h);return w([u,h]),k},g={a:u,b:h};return V.runKernelFunc(d,g,null,Iy)}var Pt=O({sub_:aet});function cet(i,a=null,u=!1){let h=R(i,"x","sum");h.dtype==="bool"&&(h=wt(h,"int32"));let d=(w,k)=>{k([h]);let C=Zt(a,h.shape),$=Nn(C,h.rank),F=C,_=h;$!=null&&(_=Ie(h,$),F=zn(F.length,h.rank));let W=w.sum(_,F);if(u){let et=dn(W.shape,C);W=K(W,et)}return W},g={x:h},x={axis:a,keepDims:u};return V.runKernelFunc(d,g,null,Ny,x)}var Ft=O({sum_:cet});function uet(i,a=-1){let u=R(i,"logits","logSoftmax");if(a===-1&&(a=u.rank-1),a!==u.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${u.rank} and axis was ${a}`);let h=(x,w)=>{let k=!0,C=Do(i,a,!0),$=Pt(i,C),F=Pt(wt($,"float32"),ro(Ft(Cn($),a,k)));return w([F]),F},d={logits:u},g={axis:a};return V.runKernelFunc(h,d,null,Ug,g)}var ok=O({logSoftmax_:uet});function pet(i,a=null,u=!1){let h=R(i,"x","logSumExp"),d=Zt(a,h.shape),g=Do(h,d,!0),x=Pt(h,g),w=Cn(x),k=Ft(w,d),C=ro(k),$=ke(K(g,C.shape),C);if(u){let F=dn($.shape,d);return K($,F)}return $}var Fh=O({logSumExp_:pet});function het(i,a){let u=R(i,"a","logicalAnd","bool"),h=R(a,"b","logicalAnd","bool");ne(u.shape,h.shape);let d={a:u,b:h};return V.runKernelFunc(g=>g.logicalAnd(u,h),d,null,h2)}var oo=O({logicalAnd_:het});function fet(i){let a=R(i,"x","logicalNot","bool"),u={x:a};return V.runKernelFunc(h=>h.logicalNot(a),u,null,f2)}var Ba=O({logicalNot_:fet});function det(i,a){let u=R(i,"a","logicalOr","bool"),h=R(a,"b","logicalOr","bool");ne(u.shape,h.shape);let d={a:u,b:h};return V.runKernelFunc(g=>g.logicalOr(u,h),d,null,d2)}var Rh=O({logicalOr_:det});function met(i,a){let u=R(i,"a","logicalXor","bool"),h=R(a,"b","logicalXor","bool");return ne(u.shape,h.shape),oo(Rh(i,a),Ba(oo(i,a)))}var sk=O({logicalXor_:met});function get(i,a,u,h,d){let g=R(i,"x","maxPool"),x=1,w=g,k=!1;g.rank===3&&(k=!0,w=K(g,[1,g.shape[0],g.shape[1],g.shape[2]])),U(w.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${w.rank}.`),U(Wn(u,x),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${u} and dilations '${x}'`),d!=null&&U(Te(h),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${d} but got pad ${h}.`);let C=(W,et)=>{let tt=ns(w.shape,a,u,1,h,d),G;return tt.filterWidth===1&&tt.filterHeight===1&&Fs(tt.inShape,tt.outShape)?G=w.clone():G=W.maxPool(w,tt),et([w,G]),G},$={x:w},F={filterSize:a,strides:u,pad:h,dimRoundingMode:d},_=V.runKernelFunc(C,$,null,Kg,F);return k?K(_,[_.shape[1],_.shape[2],_.shape[3]]):_}var Ph=O({maxPool_:get});function Hr(i,a="float32"){if(a==="complex64"){let h=Hr(i,"float32"),d=Hr(i,"float32");return no(h,d)}let u=Ia(an(i),a);return V.makeTensor(u,i,a)}function rs(i,a="float32"){if(a==="complex64"){let h=rs(i,"float32"),d=Hr(i,"float32");return no(h,d)}let u=eg(an(i),a);return V.makeTensor(u,i,a)}function yet(i,a=null,u=!1){let h=R(i,"x","mean"),d=Zt(a,h.shape),g=bD(h.shape,d),x=g[1],w=an(x),k={x:h},C={axis:a,keepDims:u},$=()=>{let _=Ot(w),W=_.dtype===h.dtype?h:wt(h,_.dtype),et=Wt(W,_);return Ft(et,a,u)},F=Dl(_=>{let W=V.runKernelFunc($,k,null,x2,C),et=tt=>{let G=_.shape.slice();d.forEach(gt=>{G[gt]=1});let mt=K(tt,G),lt=Wt(at(mt,rs(_.shape,"float32")),w);return lt};return{value:W,gradFunc:et}});return F(h)}var Oh=O({mean_:yet});function bet(i,a=null,u=!1){let h=R(i,"x","min"),d=(w,k)=>{let C=Zt(a,h.shape),$=C,F=Nn($,h.rank),_=h;F!=null&&(_=Ie(h,F),$=zn($.length,h.rank));let W=w.min(_,$);F!=null&&_.dispose();let et=W;if(u){let tt=dn(et.shape,C);et=K(W,tt),W.dispose()}return k([h,et]),et},g={x:h},x={axis:a,keepDims:u};return V.runKernelFunc(d,g,null,Xg,x)}var Al=O({min_:bet});function xet(i,a){let u=R(i,"a","minimum"),h=R(a,"b","minimum");[u,h]=he(u,h),u.dtype==="bool"&&(u=wt(u,"int32"),h=wt(h,"int32")),ne(u.shape,h.shape);let d=(x,w)=>{let k=x.minimum(u,h);return w([u,h]),k},g={a:u,b:h};return V.runKernelFunc(d,g,null,Yg)}var za=O({minimum_:xet});function wet(i,a,u){U(u==="reflect"||u==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${u}.`);let h=R(i,"x","mirrorPad");if(h.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");U(a.length===h.rank,()=>`Padding doesn't match input. Must be ${h.rank}. Got ${a.length}.`);let d=u==="reflect"?1:0;for(let w=0;w<h.rank;w++)U(a[w].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),U(a[w][0]>=0&&a[w][0]<=h.shape[w]-d&&a[w][1]>=0&&a[w][1]<=h.shape[w]-d,()=>`Padding in dimension ${w} cannot be greater than or equal to ${h.shape[w]-d} or less than 0 for input of shape ${h.shape}`);let g={paddings:a,mode:u},x={x:h};return V.runKernel(Jg,x,g)}var ik=O({mirrorPad_:wet});function vet(i,a){let u=R(i,"a","mod"),h=R(a,"b","mod");[u,h]=he(u,h);let d=(x,w)=>{let k=x.mod(u,h);return w([u,h]),k},g={a:u,b:h};return V.runKernelFunc(d,g,null,Zg)}var Lh=O({mod_:vet});function Tet(i){let a=R(i,"x","square"),u={},h=[a],d=[];return V.runKernelFunc((g,x)=>(x([a]),g.square(a)),{x:a},null,"Square",u,h,d)}var be=O({square_:Tet});function ket(i,a){let u=R(i,"a","notEqual"),h=R(a,"b","notEqual");[u,h]=he(u,h),ne(u.shape,h.shape);let d=x=>x.notEqual(u,h),g={a:u,b:h};return V.runKernelFunc(d,g,null,w2)}var Wa=O({notEqual_:ket});function Net(i){let a=R(i,"input","real"),u=d=>d.real(a),h={input:a};return V.runKernelFunc(u,h,null,C2)}var Ai=O({real_:Net});function _et(i){let a=R(i,"x","onesLike"),u=(d,g)=>{if(a.dtype==="complex64"){let x=Yy(Ai(a)),w=jt(La(a));return no(x,w)}return d.onesLike(a)},h={x:a};return V.runKernelFunc(u,h,null,ey)}var Yy=O({onesLike_:_et});function Cet(i,a,u=0){let h=R(i,"x","pad");if(h.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let d=(w,k)=>(k([h]),w.pad(h,a,u)),g={paddings:a,constantValue:u},x={x:h};return V.runKernelFunc(d,x,null,ry,g)}var Mh=O({pad_:Cet});function $et(i,a,u){let h=R(i,"x","spaceToBatchND");U(h.rank>=1+a.length,()=>`input rank ${h.rank} should be > than [blockShape] ${a.length}`),U(u.length===a.length,()=>`paddings.shape[0] ${u.length} must be equal to [blockShape] ${a.length}`),U(h.shape.reduce((w,k,C)=>C>0&&C<=a.length?w&&(k+u[C-1][0]+u[C-1][1])%a[C-1]===0:w,!0),()=>`input spatial dimensions ${h.shape.slice(1)} with paddings ${u.toString()} must be divisible by blockShapes ${a.toString()}`);let d=w=>w.spaceToBatchND(h,a,u),g={x:h},x={blockShape:a,paddings:u};return V.runKernelFunc(d,g,null,_y,x)}var Va=O({spaceToBatchND_:$et});function Det(i,a,u,h,d,g){d==null&&(d=[1,1]),g==null&&(g=1),h===0&&(h="valid");let x=R(i,"x","maxPool"),w=x,k=!1;x.rank===3&&(k=!0,w=K(x,[1,x.shape[0],x.shape[1],x.shape[2]])),U(Wn(g,d),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${g} and dilations '${d}'`);let C=ns(w.shape,a,g,d,h),$=[C.dilationHeight,C.dilationWidth],F;h==="same"?F=Eet([C.filterHeight,C.filterWidth],$):F=[[0,0],[0,0]];let _=$[0]===1&&$[1]===1,[W,et]=Iet([C.inHeight,C.inWidth],$,F),tt=_?h:"valid",G=_?w:Va(w,$,W),mt=u==="avg"?()=>Ch(G,a,g,tt):()=>Ph(G,a,g,tt),lt=mt(),gt=_?lt:Ra(lt,$,et);return k?K(gt,[gt.shape[1],gt.shape[2],gt.shape[3]]):gt}function Iet(i,a,u){let h=u.map($=>$[0]),d=u.map($=>$[1]),g=i.concat(h,d),x=a.map(($,F)=>($-g[F]%$)%$),w=d.map(($,F)=>$+x[F]),k=a.map(($,F)=>[h[F],w[F]]),C=a.map(($,F)=>[0,x[F]]);return[k,C]}function Eet(i,a){let u=i.map((x,w)=>x+(x-1)*(a[w]-1)),h=u.map(x=>x-1),d=h.map(x=>Math.floor(x/2)),g=h.map((x,w)=>x-d[w]);return h.map((x,w)=>[d[w],g[w]])}var ak=O({pool_:Det});function Aet(i,a){let u=R(i,"base","pow"),h=R(a,"exp","pow");[u,h]=he(u,h);let d={a:u,b:h},g=(x,w)=>{let k=x.pow(u,h);return w([u,h,k]),k};return V.runKernelFunc(g,d,null,oy)}var Ao=O({pow_:Aet});function Fet(i,a){let u=R(i,"x","prelu"),h=R(a,"alpha","prelu"),d=(x,w)=>{let k=x.prelu(u,h);return w([u,h]),k},g={x:u,alpha:h};return V.runKernelFunc(d,g,null,sy)}var ck=O({prelu_:Fet});function Ret(i,a=null,u=!1){let h=R(i,"x","prod");h.dtype==="bool"&&(h=wt(h,"int32"));let d=w=>{let k=Zt(a,h.shape),C=Nn(k,h.rank),$=k,F=h;C!=null&&(F=Ie(h,C),$=zn($.length,h.rank));let _=w.prod(F,$);if(u){let W=dn(_.shape,k);_=K(_,W)}return _},g={x:h},x={axis:a,keepDims:u};return V.runKernelFunc(d,g,null,N2,x)}var lk=O({prod_:Ret});function Fi(i,a){wl(i);let u=Ps(i,a);if(u.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");let h=null;return ts(i,h,u,a)}function Jy(i,a,u=1,h="float32"){if(u===0)throw new Error("Cannot have a step of zero");let d=()=>{let x=i===a,w=i<a&&u<0,k=a<i&&u>1;if(x||w||k)return Hr([0],h);let C=Math.abs(Math.ceil((a-i)/u)),$=Ia(C,h);a<i&&u===1&&(u=-1),$[0]=i;for(let F=1;F<$.length;F++)$[F]=$[F-1]+u;return Fi($,h)},g={start:i,stop:a,step:u,dtype:h};return V.runKernelFunc(d,{},null,_2,g)}function Pet(i){let a=R(i,"x","reciprocal"),u={x:a};return V.runKernelFunc((h,d)=>{let g=h.reciprocal(a);return d([a]),g},u,null,iy)}var uk=O({reciprocal_:Pet});function Oet(i){let a=R(i,"x","relu"),u=(d,g)=>(g([a]),a.dtype==="bool"?wt(a,"int32"):d.relu(a)),h={x:a};return V.runKernelFunc(u,h,null,ay)}var Ga=O({relu_:Oet});function Let(i){let a=R(i,"x","relu6"),u=(d,g)=>(g([a]),a.dtype==="bool"?wt(a,"int32"):d.relu6(a)),h={x:a};return V.runKernelFunc(u,h,null,py)}var pk=O({relu6_:Let});function Met(i,a){let u=R(i,"x","reverse"),h=x=>{let w=Zt(a,u.shape);if(u.rank===0)return Eo(u);let k=x.reverse(u,w);return K(k,u.shape)},d={x:u},g={dims:a};return V.runKernelFunc(h,d,null,hy,g)}var Ri=O({reverse_:Met});function Bet(i){let a=R(i,"x","round"),u={x:a};return V.runKernelFunc(h=>h.round(a),u,null,fy)}var hk=O({round_:Bet});function zet(i){let a=R(i,"x","rsqrt"),u={x:a};return V.runKernelFunc((h,d)=>{let g=h.rsqrt(a);return d([a]),g},u,null,dy)}var Bh=O({rsqrt_:zet});function Wet(i){let a=R(i,"x","selu"),u=(d,g)=>{let x=d.selu(a);return g([a]),x},h={x:a};return V.runKernelFunc(u,h,null,gy)}var fk=O({selu_:Wet});function Vet(i,a,u,h,d,g=[1,1],x="NHWC"){let w=R(i,"x","separableConv2d"),k=R(a,"depthwiseFilter","separableConv2d"),C=R(u,"pointwiseFilter","separableConv2d"),$=w,F=!1;if(w.rank===3&&(F=!0,$=K(w,[1,w.shape[0],w.shape[1],w.shape[2]])),x==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");U($.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${$.rank}.`),U(k.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${k.rank}.`),U(C.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${k.rank}.`),U(C.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${C.shape[0]}.`),U(C.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${C.shape[1]}.`);let _=k.shape[2],W=k.shape[3];U(C.shape[2]===_*W,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${_*W}, but got ${C.shape[2]}.`);let et=Oa($,k,h,d,x,g),tt=1,G=Bs(et,C,tt,"valid",x);return F?K(G,[G.shape[1],G.shape[2],G.shape[3]]):G}var dk=O({separableConv2d_:Vet});function Get(i){let a=R(i,"x","sign"),u={x:a};return V.runKernelFunc(h=>h.sign(a),u,null,wy)}var mk=O({sign_:Get});function Uet(i){let a=R(i,"x","sin"),u={x:a};return V.runKernelFunc((h,d)=>{let g=h.sin(a);return d([a]),g},u,null,by)}var zh=O({sin_:Uet});function qet(i){let a=R(i,"x","sinh"),u={x:a};return V.runKernelFunc((h,d)=>{let g=h.sinh(a);return d([a]),g},u,null,xy)}var Wh=O({sinh_:qet});function Het(i,a=-1){let u=R(i,"logits","softmax","float32");if(a===-1&&(a=u.rank-1),a!==u.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${u.rank} and dim was ${a}`);let h={logits:u},d={dim:a};return V.runKernelFunc((g,x)=>{let w=g.softmax(u,a);return x([w]),w},h,null,Sy,d)}var gk=O({softmax_:Het});function jet(i){U(i.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${i.dtype}.`);let a={input:i};return V.runKernelFunc(u=>{let h=i.shape[i.shape.length-1],d=i.size/h,g=i.as2D(d,h),x=u.fft(g);return x.reshape(i.shape)},a,null,o2)}var Ua=O({fft_:jet});function Ket(i){U(i.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${i.dtype}.`);let a={input:i};return V.runKernelFunc(u=>{let h=i.shape[i.shape.length-1],d=i.size/h,g=K(i,[d,h]),x=u.ifft(g);return K(x,i.shape)},a,null,c2)}var Pi=O({ifft_:Ket});function Xet(i){let a=i.shape[i.shape.length-1],u=i.size/a,h;if(a<=2){let d=K(i,[u,a]);h=Pi(d)}else{let d=[u,2*(a-1)],g=K(Ai(i),[u,a]),x=K(La(i),[u,a]),w=Ri(ve(g,[0,1],[u,a-2]),1),k=at(Ri(ve(x,[0,1],[u,a-2]),1),Ot(-1)),C=mn([g,w],1),$=mn([x,k],1),F=K(no(C,$),[d[0],d[1]]);h=Pi(F)}if(h=Ai(h),i.rank===3&&i.shape[0]!==0){let d=h,g=i.shape[0];h=K(h,[g,h.shape[0]/g,h.shape[1]]),d.dispose()}return h}var Vh=O({irfft_:Xet});function _D(i,a,u=0){let h=[];if(typeof a=="number")U(i.shape[u]%a===0,()=>"Number of splits must evenly divide the axis."),h=new Array(a).fill(i.shape[u]/a);else{let d=a.reduce((x,w)=>(w===-1&&(x+=1),x),0);U(d<=1,()=>"There should be only one negative value in split array.");let g=a.indexOf(-1);if(g!==-1){let x=a.reduce((w,k)=>k>0?w+k:w);a[g]=i.shape[u]-x}U(i.shape[u]===a.reduce((x,w)=>x+w),()=>"The sum of sizes must match the size of the axis dimension."),h=a}return h}function Yet(i,a,u=0){let h=R(i,"x","split"),d=(w,k)=>{let C=Zt(u,h.shape)[0],$=_D(h,a,C);return w.split(h,$,C)},g={x:h},x={numOrSizeSplits:a,axis:u};return V.runKernelFunc(d,g,null,Cy,x)}var os=O({split_:Yet});function Jet(i,a){U(i.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${i.dtype}`);let u=i.shape[i.shape.length-1],h=i.size/u,d;if(a!=null&&a<u){let et=i.shape.map(G=>0),tt=i.shape.map(G=>G);tt[i.shape.length-1]=a,d=ve(i,et,tt),u=a}else if(a!=null&&a>u){let et=i.shape.map(tt=>tt);et[i.shape.length-1]=a-u,d=mn([i,Hr(et)],i.shape.length-1),u=a}else d=i;let g=jt(d),x=K(no(d,g),[h,u]),w=Ua(x),k=Math.floor(u/2)+1,C=Ai(w),$=La(w),F=os(C,[k,u-k],C.shape.length-1),_=os($,[k,u-k],$.shape.length-1),W=d.shape.slice();return W[d.shape.length-1]=k,K(no(F[0],_[0]),W)}var qa=O({rfft_:Jet});function Zet(i){let a=R(i,"x","sqrt"),u={x:a};return V.runKernelFunc((h,d)=>{let g=h.sqrt(a);return d([a]),g},u,null,ky)}var Qn=O({sqrt_:Zet});function Qet(i,a){let u=R(i,"a","squaredDifference"),h=R(a,"b","squaredDifference");[u,h]=he(u,h),ne(u.shape,h.shape);let d=(w,k)=>{let C=w.squaredDifference(u,h);return k([u,h]),C},g={a:u,b:h},x={};return V.runKernelFunc(d,g,null,$y,x)}var Ha=O({squaredDifference_:Qet});function tnt(i,a){let u=R(i,"x","squeeze");return K(u,IE(u.shape,a).newShape)}var Gh=O({squeeze_:tnt});function ent(i,a=0){let u=Vy(i,"tensors","stack");if(U(u.length>=1,()=>"Pass at least one tensor to tf.stack"),u.length===1)return mr(u[0],a);let h=u[0].rank,d=u[0].shape,g=u[0].dtype;U(a<=h,()=>"Axis must be <= rank of the tensor"),u.forEach(w=>{ae(d,w.shape,"All tensors passed to stack must have matching shapes"),U(g===w.dtype,()=>"All tensors passed to stack must have matching dtypes")});let x=u.map(w=>mr(w,a));return mn(x,a)}var Cr=O({stack_:ent});function nnt(i,a=0){let u=R(i,"x","step"),h={x:u},d={alpha:a};return V.runKernelFunc(g=>g.step(u,a),h,null,Ly,d)}var Gs=O({step_:nnt});function rnt(i,a,u,h,d=0,g=0,x=0,w=0,k=0){let C=R(i,"x","stridedSlice"),$=W=>{h==null&&(h=new Array(a.length));let et=Uy(x);if(et.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(x!==0&&w!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(x!==0&&k!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let tt=C.rank-a.length,G=Uy(w),mt=C.shape.slice();G.forEach(Vt=>{a[Vt]=0,u[Vt]=1,mt.splice(Vt,0,1)}),C=K(C,mt);let{begin:lt,end:gt,strides:_t}=mD(C.shape,et,tt,a,u,h,d,g,x);a=lt,u=gt,h=_t;let Gt=Uy(k);Gt.forEach(Vt=>{u[Vt]=a[Vt]+1,h[Vt]=1});let se=hD(a,u,h),fe=se.filter((Vt,ln)=>Gt.indexOf(ln)===-1),_e=h.every(Vt=>Vt===1);if(_e)return K(ve(C,a,se),fe);let Ge=W.stridedSlice(C,a,u,h);return K(Ge,fe)},F={x:C},_={begin:a,end:u,strides:h,beginMask:d,endMask:g,ellipsisMask:x,newAxisMask:w,shrinkAxisMask:k};return V.runKernelFunc($,F,null,E2,_)}var yk=O({stridedSlice_:rnt});function ont(i){let a=R(i,"x","tan"),u={x:a};return V.runKernelFunc((h,d)=>{let g=h.tan(a);return d([a]),g},u,null,Ey)}var bk=O({tan_:ont});function ja(i,a,u){if(wl(i),a!=null&&a.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let h=Ps(i,u);if(h.length!==2&&h.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(h.length===1&&a==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ts(i,a,h,u)}function snt(i,a=1,u=!0){let h=R(i,"x","topk");if(h.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let d=h.shape[h.shape.length-1];if(a>d)throw new Error(`'k' passed to topk() must be <= the last dimension (${d}) but got ${a}`);let g={x:h},x={k:a,sorted:u},[w,k]=V.runKernelFunc(C=>C.topk(h,a,u),g,null,D2,x);return{values:w,indices:k}}var xk=O({topk_:snt});function int(i,a=0){let u=R(i,"x","unique",null);U(u.rank>0,()=>"The input tensor must be at least 1D");let h={x:u},d={axis:a},[g,x]=V.runKernel(A2,h,d);return{values:g,indices:x}}var wk=O({unique_:int});function ant(i,a,u){let h=R(i,"x","unsortedSegmentSum"),d=R(a,"segmentIds","unsortedSegmentSum","int32");U(Te(u),()=>"numSegments must be of dtype int");let g={x:h,segmentIds:d},x={numSegments:u},w=(k,C)=>{let $=k.unsortedSegmentSum(h,d,u);return C([d]),$};return V.runKernelFunc(w,g,null,Py,x)}var Uh=O({unsortedSegmentSum_:ant});function cnt(i,a=0){let u=R(i,"x","unstack");U(a>=-u.shape.length&&a<u.shape.length,()=>`Axis = ${a} is not in [-${u.shape.length}, ${u.shape.length})`),a<0&&(a+=u.shape.length);let h={value:u},d={axis:a},g=x=>x.unstack(u,a);return V.runKernelFunc(g,h,null,Ry,d)}var Ka=O({unstack_:cnt});function lnt(i,a){kn("strict variants of ops have been deprecated and will be removed in future");let u=R(i,"a","notEqualStrict"),h=R(a,"b","notEqualStrict");return ae(u.shape,h.shape,"Error in notEqualStrict: "),Wa(u,h)}function unt(i,a){kn("strict variants of ops have been deprecated and will be removed in future");let u=R(i,"a","lessStrict"),h=R(a,"b","lessStrict");return ae(u.shape,h.shape,"Error in lessStrict: "),Ma(u,h)}function pnt(i,a){kn("strict variants of ops have been deprecated and will be removed in future");let u=R(i,"a","equalStrict"),h=R(a,"b","equalStrict");return ae(u.shape,h.shape,"Error in equalStrict: "),zs(u,h)}function hnt(i,a){kn("strict variants of ops have been deprecated and will be removed in future");let u=R(i,"a","lessEqualStrict"),h=R(a,"b","lessEqualStrict");return ae(u.shape,h.shape,"Error in lessEqualStrict: "),qr(u,h)}function fnt(i,a){kn("strict variants of ops have been deprecated and will be removed in future");let u=R(i,"a","greaterStrict"),h=R(a,"b","greaterStrict");return ae(u.shape,h.shape,"Error in greaterStrict: "),gr(u,h)}function dnt(i,a){kn("strict variants of ops have been deprecated and will be removed in future");let u=R(i,"a","greaterEqualStrict"),h=R(a,"b","greaterEqualStrict");return ae(u.shape,h.shape,"Error in greaterEqualStrict: "),Ur(u,h)}var CD=O({equalStrict_:pnt}),SD=O({greaterEqualStrict_:dnt}),$D=O({greaterStrict_:fnt}),ID=O({lessEqualStrict_:hnt}),ED=O({lessStrict_:unt}),DD=O({notEqualStrict_:lnt});function mnt(i,a){kn("strict variants of ops have been deprecated and will be removed in future");let u=R(i,"a","addStrict"),h=R(a,"b","addStrict");return ae(u.shape,h.shape,"Error in addStrict: "),ke(u,h)}function gnt(i,a){kn("strict variants of ops have been deprecated and will be removed in future");let u=R(i,"a","subStrict"),h=R(a,"b","subStrict");return ae(u.shape,h.shape,"Error in subStrict: "),Pt(u,h)}function ynt(i,a){return kn("strict variants of ops have been deprecated and will be removed in future"),ae(i.shape,a.shape,"Error in powStrict: "),Ao(i,a)}function bnt(i,a){kn("strict variants of ops have been deprecated and will be removed in future");let u=R(i,"a","mul"),h=R(a,"b","mul");return ae(u.shape,h.shape,"Error in multiplyStrict: "),at(u,h)}function xnt(i,a){kn("strict variants of ops have been deprecated and will be removed in future");let u=R(i,"a","div"),h=R(a,"b","div");return ae(u.shape,h.shape,"Error in divideStrict: "),Wt(u,h)}function wnt(i,a){kn("strict variants of ops have been deprecated and will be removed in future");let u=R(i,"a","modStrict"),h=R(a,"b","modStrict");return ae(u.shape,h.shape,"Error in modStrict: "),Lh(u,h)}function vnt(i,a){kn("strict variants of ops have been deprecated and will be removed in future");let u=R(i,"a","minimumStrict"),h=R(a,"b","minimumStrict");return ae(u.shape,h.shape,"Error in minimumStrict: "),za(u,h)}function Tnt(i,a){kn("strict variants of ops have been deprecated and will be removed in future");let u=R(i,"a","maximumStrict"),h=R(a,"b","maximumStrict");return ae(u.shape,h.shape,"Error in maximumStrict: "),Vs(u,h)}function knt(i,a){kn("strict variants of ops have been deprecated and will be removed in future");let u=R(i,"a","squaredDifferenceStrict"),h=R(a,"b","squaredDifferenceStrict");return ae(u.shape,h.shape,"Error in squaredDifferenceStrict: "),Ha(u,h)}var AD=O({addStrict_:mnt}),FD=O({divStrict_:xnt}),RD=O({maximumStrict_:Tnt}),PD=O({minimumStrict_:vnt}),OD=O({modStrict_:wnt}),LD=O({mulStrict_:bnt}),MD=O({powStrict_:ynt}),BD=O({squaredDifferenceStrict_:knt}),zD=O({subStrict_:gnt});function Nnt(i,a="euclidean",u=null,h=!1){i=R(i,"x","norm");let d=WD(i,a,u),g=d.shape;if(h){let x=Zt(u,i.shape);g=dn(d.shape,x)}return K(d,g)}function WD(i,a,u=null){if(i.rank===0)return Bn(i);if(i.rank!==1&&u===null)return WD(K(i,[-1]),a,u);if(i.rank===1||typeof u=="number"||Array.isArray(u)&&u.length===1){if(a===1)return Ft(Bn(i),u);if(a===Infinity)return Do(Bn(i),u);if(a===-Infinity)return Al(Bn(i),u);if(a==="euclidean"||a===2)return Qn(Ft(Ao(Bn(i),Ot(2,"int32")),u));throw new Error(`Error in norm: invalid ord value: ${a}`)}if(Array.isArray(u)&&u.length===2){if(a===1)return Do(Ft(Bn(i),u[0]),u[1]-1);if(a===Infinity)return Do(Ft(Bn(i),u[1]),u[0]);if(a===-Infinity)return Al(Ft(Bn(i),u[1]),u[0]);if(a==="fro"||a==="euclidean")return Qn(Ft(be(i),u));throw new Error(`Error in norm: invalid ord value: ${a}`)}throw new Error(`Error in norm: invalid axis: ${u}`)}var Fl=O({norm_:Nnt});function VD(i){return Math.floor(Math.pow(2,Math.ceil(Math.log(i)/Math.log(2))))}function Zy(i,a,u){let h=1-i%2,d=new Float32Array(i);for(let g=0;g<i;++g){let x=2*Math.PI*g/(i+h-1);d[g]=a-u*Math.cos(x)}return Fi(d,"float32")}function _nt(i,a,u,h,d,g="NHWC",x){let w=i;i.rank===3&&(w=K(i,[1,i.shape[0],i.shape[1],i.shape[2]]));let k=a;k.rank===3&&(k=K(a,[1,a.shape[0],a.shape[1],a.shape[2]])),U(w.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${w.shape}.`),U(k.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${k.shape}.`),U(u.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${u}.`);let C=g==="NHWC"?w.shape[3]:w.shape[1],$=g==="NHWC"?k.shape[3]:k.shape[1];U(C===u[2],()=>`Error in conv2dDerFilter: depth of input ${C}) must match input depth in filter (${u[2]}.`),U($===u[3],()=>`Error in conv2dDerFilter: depth of dy (${$}) must match output depth for filter (${u[3]}).`),x!=null&&U(Te(d),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${x} but got pad ${d}.`);let F=et=>{let tt=1,G=Il(g),mt=Gr(w.shape,u,h,tt,d,x,!1,G);return et.conv2dDerFilter(w,k,mt)},_={x:w,dy:k},W={strides:h,pad:d,dataFormat:g,dimRoundingMode:x,filterShape:u};return V.runKernelFunc(F,_,null,HE,W)}var Qy=O({conv2DBackpropFilter_:_nt});function Cnt(i,a,u,h,d,g=[1,1],x){let w=i;i.rank===3&&(w=K(i,[1,i.shape[0],i.shape[1],i.shape[2]]));let k=a;k.rank===3&&(k=K(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let C=_=>{let W=Gr(i.shape,u,h,g,d,x,!0);return _.depthwiseConv2DDerFilter(w,k,W)},$={x:w,dy:k},F={strides:h,pad:d,dimRoundingMode:x,dilations:g,filterShape:u};return V.runKernelFunc(C,$,null,ZE,F)}var GD=O({depthwiseConv2dNativeBackpropFilter_:Cnt});function Snt(i,a,u,h,d,g=[1,1],x){let w=a,k=!1;a.rank===3&&(k=!0,w=K(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let C=W=>{let et=Gr(i,u.shape,h,g,d,x,!0);return W.depthwiseConv2DDerInput(w,u,et)},$={dy:w,filter:u},F={strides:h,pad:d,dimRoundingMode:x,dilations:g,inputShape:i},_=V.runKernelFunc(C,$,null,QE,F);return k?K(_,[_.shape[1],_.shape[2],_.shape[3]]):_}var UD=O({depthwiseConv2dNativeBackpropInput_:Snt});function $nt(i){return Zy(i,.54,.46)}var qD=O({hammingWindow_:$nt});function Int(i){return Zy(i,.5,.5)}var tb=O({hannWindow_:Int});function Ent(i,a,u,h=!1,d=0){let g=0,x=[];for(;g+a<=i.size;)x.push(ve(i,g,a)),g+=u;if(h)for(;g<i.size;){let w=g+a-i.size,k=mn([ve(i,g,a-w),JT([w],d)]);x.push(k),g+=u}return x.length===0?ja([],[0,a]):K(mn(x),[x.length,a])}var eb=O({frame_:Ent});function Dnt(i,a,u,h,d=tb){h==null&&(h=VD(a));let g=eb(i,a,u),x=at(g,d(a)),w=[];for(let k=0;k<g.shape[0];k++)w.push(qa(ve(x,[k,0],[1,a]),h));return mn(w)}var HD=O({stft_:Dnt});function Ant(i,a,u,h,d,g){let x=R(i,"image","cropAndResize"),w=R(a,"boxes","cropAndResize","float32"),k=R(u,"boxInd","cropAndResize","int32");d=d||"bilinear",g=g||0;let C=w.shape[0];U(x.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${x.rank}.`),U(w.rank===2&&w.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${C},4] but had shape ${w.shape}.`),U(k.rank===1&&k.shape[0]===C,()=>`Error in cropAndResize: boxInd must be have size [${C}] but had shape ${w.shape}.`),U(h.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${h.length}.`),U(h[0]>=1&&h[1]>=1,()=>`cropSize must be atleast [1,1], but was ${h}`),U(d==="bilinear"||d==="nearest",()=>`method must be bilinear or nearest, but was ${d}`);let $=et=>et.cropAndResize(x,w,k,h,d,g),F={image:x,boxes:w,boxInd:k},_={method:d,extrapolationValue:g,cropSize:h},W=V.runKernelFunc($,F,null,YE,_);return W}var jD=O({cropAndResize_:Ant});function Fnt(i){let a=R(i,"image","flipLeftRight","float32");U(a.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${a.rank}.`);let u={image:a},h=V.runKernel(i2,u,{});return h}var KD=O({flipLeftRight_:Fnt});function Rnt(i,a,u=0,h=.5){let d=R(i,"image","rotateWithOffset","float32");U(d.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${d.rank}.`);let g={image:d},x={radians:a,fillValue:u,center:h},w=V.runKernel(F2,g,x);return w}var XD=O({rotateWithOffset_:Rnt});function so(i,a,u,h,d,g){h==null&&(h=.5),d==null&&(d=Number.NEGATIVE_INFINITY),g==null&&(g=0);let x=i.shape[0];return u=Math.min(u,x),U(0<=h&&h<=1,()=>`iouThreshold must be in [0, 1], but was '${h}'`),U(i.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${i.rank}'`),U(i.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${i.shape[1]}`),U(a.rank===1,()=>"scores must be a 1D tensor"),U(a.shape[0]===x,()=>`scores has incompatible shape with boxes. Expected ${x}, but was ${a.shape[0]}`),U(0<=g&&g<=1,()=>`softNmsSigma must be in [0, 1], but was '${g}'`),{maxOutputSize:u,iouThreshold:h,scoreThreshold:d,softNmsSigma:g}}function Pnt(i,a,u,h=.5,d=Number.NEGATIVE_INFINITY){let g=R(i,"boxes","nonMaxSuppression"),x=R(a,"scores","nonMaxSuppression"),w=so(g,x,u,h,d);u=w.maxOutputSize,h=w.iouThreshold,d=w.scoreThreshold;let k={maxOutputSize:u,iouThreshold:h,scoreThreshold:d};return V.runKernelFunc(C=>C.nonMaxSuppression(g,x,u,h,d),{boxes:g,scores:x},null,v2,k)}var YD=O({nonMaxSuppression_:Pnt});function JD(i,a,u){let h=Ont(i,a,u),d=h<0?-(h+1):h;i.splice(d,0,a)}function Ont(i,a,u){return Mnt(i,a,u||Lnt)}function Lnt(i,a){return i>a?1:i<a?-1:0}function Mnt(i,a,u){let h=0,d=i.length,g=0,x=!1;for(;h<d;){g=h+(d-h>>>1);let w=u(a,i[g]);w>0?h=g+1:(d=g,x=!w)}return x?h:-h-1}function ZD(i,a,u,h,d){return vk(i,a,u,h,d,0).selectedIndices}function QD(i,a,u,h,d,g){return vk(i,a,u,h,d,0,!1,g,!0)}function tA(i,a,u,h,d,g){return vk(i,a,u,h,d,g,!0)}function vk(i,a,u,h,d,g,x=!1,w=!1,k=!1){let C=[];for(let G=0;G<a.length;G++)a[G]>d&&C.push({score:a[G],boxIndex:G,suppressBeginIndex:0});C.sort(eA);let $=g>0?-.5/g:0,F=[],_=[];for(;F.length<u&&C.length>0;){let G=C.pop(),{score:mt,boxIndex:lt,suppressBeginIndex:gt}=G;if(mt<d)break;let _t=!1;for(let Gt=F.length-1;Gt>=gt;--Gt){let se=Bnt(i,lt,F[Gt]);if(se>=h){_t=!0;break}if(G.score=G.score*znt(h,$,se),G.score<=d)break}G.suppressBeginIndex=F.length,_t||(G.score===mt?(F.push(lt),_.push(G.score)):G.score>d&&JD(C,G,eA))}let W=F.length,et=u-W;w&&et>0&&(F.push(...new Array(et).fill(0)),_.push(...new Array(et).fill(0)));let tt={selectedIndices:Fi(F,"int32")};return x&&(tt.selectedScores=Fi(_,"float32")),k&&(tt.validOutputs=Ot(W,"int32")),tt}function Bnt(i,a,u){let h=i.subarray(a*4,a*4+4),d=i.subarray(u*4,u*4+4),g=Math.min(h[0],h[2]),x=Math.min(h[1],h[3]),w=Math.max(h[0],h[2]),k=Math.max(h[1],h[3]),C=Math.min(d[0],d[2]),$=Math.min(d[1],d[3]),F=Math.max(d[0],d[2]),_=Math.max(d[1],d[3]),W=(w-g)*(k-x),et=(F-C)*(_-$);if(W<=0||et<=0)return 0;let tt=Math.max(g,C),G=Math.max(x,$),mt=Math.min(w,F),lt=Math.min(k,_),gt=Math.max(mt-tt,0)*Math.max(lt-G,0);return gt/(W+et-gt)}function znt(i,a,u){let h=Math.exp(a*u*u);return u<=i?h:0}function eA(i,a){return i.score-a.score||i.score===a.score&&a.boxIndex-i.boxIndex}async function Wnt(i,a,u,h=.5,d=Number.NEGATIVE_INFINITY){let g=R(i,"boxes","nonMaxSuppressionAsync"),x=R(a,"scores","nonMaxSuppressionAsync"),w=so(g,x,u,h,d);u=w.maxOutputSize,h=w.iouThreshold,d=w.scoreThreshold;let k=await Promise.all([g.data(),x.data()]),C=k[0],$=k[1],F=ZD(C,$,u,h,d);return g!==i&&g.dispose(),x!==a&&x.dispose(),F}var nA=Wnt;function Vnt(i,a,u,h=.5,d=Number.NEGATIVE_INFINITY,g=0){let x=R(i,"boxes","nonMaxSuppression"),w=R(a,"scores","nonMaxSuppression"),k=so(x,w,u,h,d,g);u=k.maxOutputSize,h=k.iouThreshold,d=k.scoreThreshold,g=k.softNmsSigma;let C={boxes:x,scores:w},$={maxOutputSize:u,iouThreshold:h,scoreThreshold:d,softNmsSigma:g},F=V.runKernel(k2,C,$);return{selectedIndices:F[0],selectedScores:F[1]}}var rA=O({nonMaxSuppressionWithScore_:Vnt});async function Gnt(i,a,u,h=.5,d=Number.NEGATIVE_INFINITY,g=0){let x=R(i,"boxes","nonMaxSuppressionAsync"),w=R(a,"scores","nonMaxSuppressionAsync"),k=so(x,w,u,h,d,g);u=k.maxOutputSize,h=k.iouThreshold,d=k.scoreThreshold,g=k.softNmsSigma;let C=await Promise.all([x.data(),w.data()]),$=C[0],F=C[1],_=tA($,F,u,h,d,g);return x!==i&&x.dispose(),w!==a&&w.dispose(),_}var oA=Gnt;function Unt(i,a,u,h=.5,d=Number.NEGATIVE_INFINITY,g=!1){let x=R(i,"boxes","nonMaxSuppression"),w=R(a,"scores","nonMaxSuppression"),k=so(x,w,u,h,d,null),C=k.maxOutputSize,$=k.iouThreshold,F=k.scoreThreshold,_={boxes:x,scores:w},W={maxOutputSize:C,iouThreshold:$,scoreThreshold:F,padToMaxOutputSize:g},et=V.runKernel(T2,_,W);return{selectedIndices:et[0],validOutputs:et[1]}}var sA=O({nonMaxSuppressionPadded_:Unt});async function qnt(i,a,u,h=.5,d=Number.NEGATIVE_INFINITY,g=!1){let x=R(i,"boxes","nonMaxSuppressionAsync"),w=R(a,"scores","nonMaxSuppressionAsync"),k=so(x,w,u,h,d,null),C=k.maxOutputSize,$=k.iouThreshold,F=k.scoreThreshold,[_,W]=await Promise.all([x.data(),w.data()]),et=QD(_,W,C,$,F,g);return x!==i&&x.dispose(),w!==a&&w.dispose(),et}var iA=qnt;function Hnt(i,a,u=!1){let h=R(i,"images","resizeBilinear");U(h.rank===3||h.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${h.rank}.`),U(a.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${a}.`);let d=h,g=!1;h.rank===3&&(g=!0,d=K(h,[1,h.shape[0],h.shape[1],h.shape[2]]));let[x,w]=a,k=(_,W)=>(W([d]),_.resizeBilinear(d,x,w,u)),C={images:d},$={alignCorners:u,size:a},F=V.runKernelFunc(k,C,null,uy,$);return g?K(F,[F.shape[1],F.shape[2],F.shape[3]]):F}var nb=O({resizeBilinear_:Hnt});function jnt(i,a,u=!1){let h=R(i,"images","resizeNearestNeighbor");U(h.rank===3||h.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${h.rank}.`),U(a.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${a}.`),U(h.dtype==="float32"||h.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype");let d=h,g=!1;h.rank===3&&(g=!0,d=K(h,[1,h.shape[0],h.shape[1],h.shape[2]]));let[x,w]=a,k={images:d},C={alignCorners:u,size:a},$=(_,W)=>(W([d]),_.resizeNearestNeighbor(d,x,w,u)),F=V.runKernelFunc($,k,null,ly,C);return g?K(F,[F.shape[1],F.shape[2],F.shape[3]]):F}var rb=O({resizeNearestNeighbor_:jnt});function Knt(i,a,u){U(a%1===0,()=>`bandPart(): numLower must be an integer, got ${a}.`),U(u%1===0,()=>`bandPart(): numUpper must be an integer, got ${u}.`);let h=R(i,"a","bandPart");U(h.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${h.rank}.`);let d=h.shape,[g,x]=h.shape.slice(-2);if(!(a<=g))throw new Error(`bandPart(): numLower (${a}) must not be greater than the number of rows (${g}).`);if(!(u<=x))throw new Error(`bandPart(): numUpper (${u}) must not be greater than the number of columns (${x}).`);a<0&&(a=g),u<0&&(u=x);let w=K(Jy(0,g,1,"int32"),[-1,1]),k=Jy(0,x,1,"int32"),C=Pt(w,k),$=oo(qr(C,Ot(+a,"int32")),Ur(C,Ot(-u,"int32"))),F=Hr([g,x],h.dtype);return K(Cr(Ka(K(h,[-1,g,x])).map(_=>_n($,_,F))),d)}var aA=O({bandPart_:Knt});function Xnt(i){let a;if(Array.isArray(i)){a=!1,U(i!=null&&i.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let d=i[0].shape[0];for(let g=1;g<i.length;++g)U(i[g].shape[0]===d,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${i[g].shape[0]} vs. ${d})`)}else a=!0,i=os(i,i.shape[0],0).map(d=>Gh(d,[0]));U(i.length<=i[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${i.length}) exceeds number of dimensions (${i[0].shape[0]}).`);let u=[],h=i;for(let d=0;d<i.length;++d)u.push(V.tidy(()=>{let g=h[d];if(d>0)for(let x=0;x<d;++x){let w=at(Ft(at(u[x],g)),u[x]);g=Pt(g,w)}return Wt(g,Fl(g,"euclidean"))}));return a?Cr(u,0):u}var cA=O({gramSchmidt_:Xnt});function Ynt(i,a=!1){if(U(i.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${i.rank}`),i.rank===2)return lA(i,a);{let u=i.shape.slice(0,i.shape.length-2).reduce((k,C)=>k*C),h=Ka(K(i,[u,i.shape[i.shape.length-2],i.shape[i.shape.length-1]]),0),d=[],g=[];h.forEach(k=>{let[C,$]=lA(k,a);d.push(C),g.push($)});let x=K(Cr(d,0),i.shape),w=K(Cr(g,0),i.shape);return[x,w]}}function lA(i,a=!1){return V.tidy(()=>{U(i.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${i.shape.length}D Tensor.`);let u=i.shape[0],h=i.shape[1],d=YT(u),g=Eo(i),x=ja([[1]],[1,1]),w=Eo(x),k=u>=h?h:u;for(let C=0;C<k;++C){let $=g,F=w,_=d;[w,g,d]=V.tidy(()=>{let W=ve(g,[C,C],[u-C,1]),et=Fl(W),tt=ve(g,[C,C],[1,1]),G=_n(gr(tt,0),ja([[-1]]),ja([[1]])),mt=Pt(tt,at(G,et)),lt=Wt(W,mt);lt.shape[0]===1?w=Eo(x):w=mn([x,ve(lt,[1,0],[lt.shape[0]-1,lt.shape[1]])],0);let gt=me(Wt(We(G,mt),et)),_t=ve(g,[C,0],[u-C,h]),Gt=at(gt,w),se=Ie(w);if(C===0)g=Pt(_t,We(Gt,We(se,_t)));else{let Ge=Pt(_t,We(Gt,We(se,_t)));g=mn([ve(g,[0,0],[C,h]),Ge],0)}let fe=Ie(Gt),_e=ve(d,[0,C],[u,d.shape[1]-C]);if(C===0)d=Pt(_e,We(We(_e,w),fe));else{let Ge=Pt(_e,We(We(_e,w),fe));d=mn([ve(d,[0,0],[u,C]),Ge],1)}return[w,g,d]}),yD([$,F,_])}return!a&&u>h&&(d=ve(d,[0,0],[u,h]),g=ve(g,[0,0],[h,h])),[d,g]})}var uA=O({qr_:Ynt});var cn;(function(i){i[i.NONE=0]="NONE",i[i.MEAN=1]="MEAN",i[i.SUM=2]="SUM",i[i.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(cn||(cn={}));function Jnt(i,a,u=cn.SUM_BY_NONZERO_WEIGHTS){let h=R(i,"losses","computeWeightedLoss"),d=null;a!=null&&(d=R(a,"weights","computeWeightedLoss"));let g=d==null?h:at(h,d);if(u===cn.NONE)return g;if(u===cn.SUM)return Ft(g);if(u===cn.MEAN){if(d==null)return Oh(g);{let x=h.size/d.size,w=Wt(Ft(g),Ft(d));return x>1?Wt(w,Ot(x)):w}}if(u===cn.SUM_BY_NONZERO_WEIGHTS){if(d==null)return Wt(Ft(g),Ot(h.size));{let x=at(d,rs(h.shape)),w=wt(Ft(Wa(x,Ot(0))),"float32");return Wt(Ft(g),w)}}throw Error(`Unknown reduction: ${u}`)}var Vn=O({computeWeightedLoss_:Jnt});function Znt(i,a,u,h=cn.SUM_BY_NONZERO_WEIGHTS){let d=R(i,"labels","absoluteDifference"),g=R(a,"predictions","absoluteDifference"),x=null;u!=null&&(x=R(u,"weights","absoluteDifference")),ae(d.shape,g.shape,"Error in absoluteDifference: ");let w=Bn(Pt(d,g));return Vn(w,x,h)}var pA=O({absoluteDifference_:Znt});function Qnt(i,a,u,h,d=cn.SUM_BY_NONZERO_WEIGHTS){let g=R(i,"labels","cosineDistance"),x=R(a,"predictions","cosineDistance"),w=null;h!=null&&(w=R(h,"weights","cosineDistance")),ae(g.shape,x.shape,"Error in cosineDistance: ");let k=Ot(1),C=Pt(k,Ft(at(g,x),u,!0));return Vn(C,w,d)}var hA=O({cosineDistance_:Qnt});function trt(i,a,u,h=cn.SUM_BY_NONZERO_WEIGHTS){let d=R(i,"labels","hingeLoss"),g=R(a,"predictions","hingeLoss"),x=null;u!=null&&(x=R(u,"weights","hingeLoss")),ae(d.shape,g.shape,"Error in hingeLoss: ");let w=Ot(1);d=Pt(at(Ot(2),d),w);let k=Ga(Pt(w,at(d,g)));return Vn(k,x,h)}var fA=O({hingeLoss_:trt});function ert(i,a,u,h=1,d=cn.SUM_BY_NONZERO_WEIGHTS){let g=R(i,"labels","huberLoss"),x=R(a,"predictions","huberLoss"),w=null;u!=null&&(w=R(u,"weights","huberLoss")),ae(g.shape,x.shape,"Error in huberLoss: ");let k=Ot(h),C=Bn(Pt(x,g)),$=za(C,k),F=Pt(C,$),_=ke(at(Ot(.5),be($)),at(k,F));return Vn(_,w,d)}var dA=O({huberLoss_:ert});function nrt(i,a,u,h=1e-7,d=cn.SUM_BY_NONZERO_WEIGHTS){let g=R(i,"labels","logLoss"),x=R(a,"predictions","logLoss"),w=null;u!=null&&(w=R(u,"weights","logLoss")),ae(g.shape,x.shape,"Error in logLoss: ");let k=Ot(1),C=Ot(h),$=me(at(g,ro(ke(x,C)))),F=at(Pt(k,g),ro(ke(Pt(k,x),C))),_=Pt($,F);return Vn(_,w,d)}var mA=O({logLoss_:nrt});function rrt(i,a,u,h=cn.SUM_BY_NONZERO_WEIGHTS){let d=R(i,"labels","meanSquaredError"),g=R(a,"predictions","meanSquaredError"),x=null;u!=null&&(x=R(u,"weights","meanSquaredError")),ae(d.shape,g.shape,"Error in meanSquaredError: ");let w=Ha(d,g);return Vn(w,x,h)}var gA=O({meanSquaredError_:rrt});function ort(i,a){let u=R(i,"labels","sigmoidCrossEntropyWithLogits"),h=R(a,"logits","sigmoidCrossEntropyWithLogits");ae(u.shape,h.shape,"Error in sigmoidCrossEntropyWithLogits: ");let d=Ga(h),g=at(h,u),x=Dh(Cn(me(Bn(h))));return ke(Pt(d,g),x)}function srt(i,a,u,h=0,d=cn.SUM_BY_NONZERO_WEIGHTS){let g=R(i,"multiClassLabels","sigmoidCrossEntropy"),x=R(a,"logits","sigmoidCrossEntropy"),w=null;if(u!=null&&(w=R(u,"weights","sigmoidCrossEntropy")),ae(g.shape,x.shape,"Error in sigmoidCrossEntropy: "),h>0){let C=Ot(h),$=Ot(1),F=Ot(.5);g=ke(at(g,Pt($,C)),at(F,C))}let k=ort(g,x);return Vn(k,w,d)}var yA=O({sigmoidCrossEntropy_:srt});function irt(i,a,u=-1){if(u===-1&&(u=a.rank-1),u!==a.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${a.rank} and dim was ${u}`);let h=Dl((d,g,x)=>{let w=!0,k=Fh(g,[u],w),C=Pt(wt(g,"float32"),k);x([d,C]);let $=me(at(C,d)),F=Ft($,[u]),_=(W,et)=>{let[tt,G]=et,mt=dn(W.shape,[u]);return[at(K(W,mt),Pt(wt(tt,"float32"),Cn(G))),at(K(W,mt),Pt(Cn(G),wt(tt,"float32")))]};return{value:F,gradFunc:_}});return h(i,a)}function art(i,a,u,h=0,d=cn.SUM_BY_NONZERO_WEIGHTS){let g=R(i,"onehotLabels","softmaxCrossEntropy"),x=R(a,"logits","softmaxCrossEntropy"),w=null;if(u!=null&&(w=R(u,"weights","softmaxCrossEntropy")),ae(g.shape,x.shape,"Error in softmaxCrossEntropy: "),h>0){let C=Ot(h),$=Ot(1),F=Ot(g.shape[1]);g=ke(at(g,Pt($,C)),Wt(C,F))}let k=irt(g,x);return Vn(k,w,d)}var bA=O({softmaxCrossEntropy_:art});var TRt={fft:Ua,ifft:Pi,rfft:qa,irfft:Vh},kRt={hammingWindow:qD,hannWindow:tb,frame:eb,stft:HD},xA={flipLeftRight:KD,resizeNearestNeighbor:rb,resizeBilinear:nb,rotateWithOffset:XD,cropAndResize:jD,nonMaxSuppression:YD,nonMaxSuppressionAsync:nA,nonMaxSuppressionWithScore:rA,nonMaxSuppressionWithScoreAsync:oA,nonMaxSuppressionPadded:sA,nonMaxSuppressionPaddedAsync:iA},NRt={bandPart:aA,gramSchmidt:cA,qr:uA},_Rt={absoluteDifference:pA,computeWeightedLoss:Vn,cosineDistance:hA,hingeLoss:fA,huberLoss:dA,logLoss:mA,meanSquaredError:gA,sigmoidCrossEntropy:yA,softmaxCrossEntropy:bA};var wA=1.7580993408473768,vA=1.0507009873554805;var TA={kernelName:og,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>at(i,Gs(wt(u,"float32"),-1))}}};var kA={kernelName:sg,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>{let h=be(wt(u,"float32")),d=Qn(Pt(Ot(1),h));return me(Wt(i,d))}}}};var NA={kernelName:ig,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>{let h=Qn(Pt(be(wt(u,"float32")),1));return Wt(i,h)}}}};var _A={kernelName:Tl,inputsToSave:["a","b"],gradFunc:(i,a)=>{let[u,h]=a,d=ne(u.shape,h.shape),g=()=>{let w=i,k=Be(u.shape,d);return k.length>0&&(w=Ft(w,k)),K(w,u.shape)},x=()=>{let w=i,k=Be(h.shape,d);return k.length>0&&(w=Ft(w,k)),K(w,h.shape)};return{a:g,b:x}}};var CA={kernelName:BE,saveAllInputs:!0,gradFunc:(i,a)=>{let u={};return a.forEach((h,d)=>{u[d]=()=>i.clone()}),u}};var SA={kernelName:ag,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>jt(u)}}};var $A={kernelName:cg,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>jt(u)}}};var IA={kernelName:lg,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>Wt(i,Qn(Pt(Ot(1),be(wt(u,"float32")))))}}};var EA={kernelName:ug,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>{let h=Qn(ke(Ot(1),be(wt(u,"float32"))));return Wt(i,h)}}}};var DA={kernelName:fg,inputsToSave:["a","b"],gradFunc:(i,a)=>{let[u,h]=a,d=ne(u.shape,h.shape),g=()=>{let w=ke(be(u),be(h)),k=at(i,Wt(h,w)),C=Be(u.shape,d);return C.length>0&&(k=Ft(k,C)),K(k,u.shape)},x=()=>{let w=ke(be(u),be(h)),k=me(at(i,Wt(u,w))),C=Be(h.shape,d);return C.length>0&&(k=Ft(k,C)),K(k,h.shape)};return{a:g,b:x}}};var AA={kernelName:pg,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>Wt(i,ke(be(wt(u,"float32")),1))}}};var FA={kernelName:hg,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>Wt(i,Pt(Ot(1),be(wt(u,"float32"))))}}};function crt(i,a,u,h,d=[1,1,1],g,x){let w=R(i,"dy","avgPool3dBackprop"),k=R(a,"input","avgPool3dBackprop"),C=w,$=k,F=!1;k.rank===4&&(F=!0,C=K(w,[1,w.shape[0],w.shape[1],w.shape[2],w.shape[3]]),$=K(k,[1,k.shape[0],k.shape[1],k.shape[2],k.shape[3]])),U(C.rank===5,()=>`Error in avgPool3dBackprop: dy must be rank 5 but got rank ${C.rank}.`),U($.rank===5,()=>`Error in avgPool3dBackprop: input must be rank 5 but got rank ${$.rank}.`),U(Wn(h,d),()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${h} and dilations '${d}'`),x!=null&&U(Te(g),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${x} but got pad ${g}.`);let _=G=>{let mt=jy($.shape,u,h,d,g,x);return G.avgPool3dBackprop(C,$,mt)},W={dy:C,input:$},et={filterSize:u,strides:h,dilations:d,pad:g,dimRoundingMode:x},tt=V.runKernelFunc(_,W,null,UE,et);return F?K(tt,[tt.shape[1],tt.shape[2],tt.shape[3],tt.shape[4]]):tt}var RA=O({avgPool3dBackprop_:crt});var PA={kernelName:GE,inputsToSave:["x"],gradFunc:(i,a,u)=>{let[h]=a,{filterSize:d,strides:g,dilations:x,pad:w,dimRoundingMode:k}=u,C=x==null?[1,1,1]:x;return{x:()=>RA(i,h,d,g,C,w,k)}}};function lrt(i,a,u,h,d){let g=R(i,"dy","avgPoolBackprop"),x=R(a,"input","avgPoolBackprop");U(x.rank===g.rank,()=>`Rank of input (${x.rank}) does not match rank of dy (${g.rank})`);let w=x,k=g,C=!1;x.rank===3&&(C=!0,w=K(x,[1,x.shape[0],x.shape[1],x.shape[2]]),k=K(g,[1,g.shape[0],g.shape[1],g.shape[2]])),U(k.rank===4,()=>`Error in avgPoolBackprop: dy must be rank 4 but got rank ${k.rank}.`),U(w.rank===4,()=>`Error in avgPoolBackprop: input must be rank 4 but got rank ${w.rank}.`);let $=et=>{let tt=ns(w.shape,u,h,1,d);return et.avgPoolBackprop(k,w,tt)},F={dy:k,input:w},_={filterSize:u,strides:h,pad:d},W=V.runKernelFunc($,F,null,VE,_);return C?K(W,[W.shape[1],W.shape[2],W.shape[3]]):W}var OA=O({avgPoolBackprop_:lrt});var LA={kernelName:dg,inputsToSave:["x"],gradFunc:(i,a,u)=>{let[h]=a,{filterSize:d,strides:g,pad:x}=u;return{x:()=>OA(i,h,d,g,x)}}};var MA={kernelName:mg,inputsToSave:["a","b"],gradFunc:(i,a,u)=>{let[h,d]=a,{transposeA:g,transposeB:x}=u;return!g&&!x?{a:()=>We(i,d,!1,!0),b:()=>We(h,i,!0,!1)}:!g&&x?{a:()=>We(i,d,!1,!1),b:()=>We(i,h,!0,!1)}:g&&!x?{a:()=>We(d,i,!1,!0),b:()=>We(h,i,!1,!1)}:{a:()=>We(d,i,!0,!0),b:()=>We(i,h,!0,!0)}}};var BA={kernelName:gg,gradFunc:(i,a,u)=>{let{blockShape:h,crops:d}=u;return{x:()=>Va(i,h,d)}}};var zA={kernelName:yg,gradFunc:(i,a,u)=>{let h=u,d=h.inputShape,g=h.shape,x=Array.from(g);for(let k=d.length-1;k>=0;k--)if(d[k]===g[k])x[k]=1;else if(d[k]!==1)throw new Error(`broadcastTo(): [${d}] cannot be broadcast to [${g}].`);let w=[];for(let k=0;k<x.length;k++)x[k]>1&&w.push(k);return{x:()=>Ft(i,w,!0)}}};var WA={kernelName:kl,gradFunc:i=>({x:()=>i.clone()})};var VA={kernelName:bg,gradFunc:i=>({x:()=>jt(i)})};var GA={kernelName:xg,inputsToSave:["x"],gradFunc:(i,a,u)=>{let[h]=a,{clipValueMin:d,clipValueMax:g}=u;return{x:()=>_n(oo(Ur(h,d),qr(h,g)),i,jt(i))}}};var UA={kernelName:wg,saveAllInputs:!0,gradFunc:(i,a,u)=>{let h=a.map(k=>k.shape),{axis:d}=u,g=Zt(d,a[0].shape)[0],x=h.map(k=>k[g]),w=os(i,x,g);return w.map(k=>()=>k)}};var qA={kernelName:vg,inputsToSave:["x","filter"],gradFunc:(i,a,u)=>{let[h,d]=a,{dilations:g,strides:x,pad:w,dataFormat:k}=u;return U(Di(g),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${g}'`),{x:()=>Xy(h.shape,i,d,x,w,k),filter:()=>Qy(h,i,d.shape,x,w,k)}}};var HA={kernelName:Tg,inputsToSave:["dy","filter"],gradFunc:(i,a,u)=>{let[h,d]=a,{strides:g,pad:x,dataFormat:w,dimRoundingMode:k}=u;return{dy:()=>Bs(i,d,g,x,w,1,k),filter:()=>Qy(i,h,d.shape,g,x,w,k)}}};function urt(i,a,u,h,d){let g=i;i.rank===4&&(g=K(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]));let x=a;x.rank===4&&(x=K(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),U(g.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${g.shape}.`),U(x.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${x.shape}.`),U(u.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${u}.`),U(g.shape[4]===u[3],()=>`Error in conv3dDerFilter: depth of input ${g.shape[4]}) must match input depth in filter (${u[3]}.`),U(x.shape[4]===u[4],()=>`Error in conv3dDerFilter: depth of dy (${x.shape[4]}) must match output depth for filter (${u[4]}).`);let w=$=>{let F=1,_=_h(g.shape,u,h,F,d);return $.conv3dDerFilter(g,x,_)},k={x:g,dy:x},C={strides:h,pad:d,filterShape:u};return V.runKernelFunc(w,k,null,KE,C)}var jA=O({conv3DBackpropFilter_:urt});var KA={kernelName:jE,inputsToSave:["x","filter"],gradFunc:(i,a,u)=>{let{dilations:h,strides:d,pad:g}=u;U(Di(h),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${h}'`);let[x,w]=a;return{x:()=>kD(x.shape,i,w,d,g),filter:()=>jA(x,i,w.shape,d,g)}}};var XA={kernelName:kg,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>at(me(zh(wt(u,"float32"))),i)}}};var YA={kernelName:Ng,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>at(Wh(wt(u,"float32")),i)}}};var JA={kernelName:_g,inputsToSave:["x"],gradFunc:(i,a,u)=>{let[h]=a,{axis:d,exclusive:g,reverse:x}=u;return{x:()=>{let w=Nn([d],h.rank),k=$h(i,d,g,!x);return w!=null&&(k=Ie(k,w)),k}}}};var ZA={kernelName:Cg,inputsToSave:["x","filter"],gradFunc:(i,a,u)=>{let{dilations:h,strides:d,pad:g,dimRoundingMode:x}=u,w=h==null?[1,1]:h;U(Di(w),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${w}'`);let[k,C]=a;return U(k.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${k.rank}.`),U(C.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${C.rank}.`),U(k.shape[3]===C.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${k.shape[3]}) must match the inChannels dimension in filter ${C.shape[2]}.`),U(Wn(d,w),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${d} and dilations '${w}'.`),x!=null&&U(Te(g),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${x} but got pad ${g}.`),{x:()=>UD(k.shape,i,C,d,g,h,x),filter:()=>GD(k,i,C.shape,d,g,h,x)}}};var QA={kernelName:Sg,inputsToSave:["x","filter"],gradFunc:(i,a,u)=>{let[h,d]=a,g={x:h,filter:d,dy:i},x={x:h,filter:d,dy:i};return{x:()=>V.runKernel(t2,g,u),filter:()=>V.runKernel(e2,x,u)}}};var tF={kernelName:$g,inputsToSave:["a","b"],gradFunc:(i,a)=>{let[u,h]=a,d=ne(u.shape,h.shape),g=()=>{let w=Wt(i,wt(h,"float32")),k=Be(u.shape,d);return k.length>0?K(Ft(w,k),u.shape):w},x=()=>{let w=at(i,wt(u,"float32")),k=Be(h.shape,d);k.length>0&&(w=K(Ft(w,k),h.shape));let C=be(h);return me(Wt(w,wt(C,"float32")))};return{a:g,b:x}}};var eF={kernelName:Ig,outputsToSave:[!0],gradFunc:(i,a)=>{let[u]=a,h=g=>g.eluDer(i,u),d={dy:i,y:u};return{x:()=>V.runKernelFunc(h,d,null,n2)}}};var nF={kernelName:Eg,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a,h=at(Cn(me(be(u))),2/Math.sqrt(Math.PI));return{x:()=>at(i,h)}}};var rF={kernelName:Dg,outputsToSave:[!0],gradFunc:(i,a)=>{let[u]=a;return{x:()=>at(i,u)}}};var oF={kernelName:Ag,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>at(i,Cn(u))}}};var sF={kernelName:Fg,gradFunc:i=>({x:()=>jt(i)})};var iF={kernelName:Rg,inputsToSave:["a","b"],gradFunc:(i,a)=>{let[u,h]=a,d=ne(u.shape,h.shape),g=()=>{let w=Wt(i,wt(h,"float32")),k=Be(u.shape,d);return k.length>0?K(Ft(w,k),u.shape):w},x=()=>{let w=at(i,wt(u,"float32")),k=Be(h.shape,d);k.length>0&&(w=K(Ft(w,k),h.shape));let C=be(h);return me(Wt(w,wt(C,"float32")))};return{a:g,b:x}}};var aF={kernelName:Pg,inputsToSave:["x","mean","variance","scale"],gradFunc:(i,a,u)=>{let{varianceEpsilon:h}=u,[d,g,x,w]=a,k=w==null?Ot(1):w,C=Be(g.shape,d.shape),$=[];if(g.rank===1){for(let _t=0;_t<d.shape.length-1;++_t)$.push(d.shape[_t]);$.push(1)}let F=Pt(d,g),_=at(i,k),W=Bh(ke(x,Ot(h))),et=at(at(at(W,W),W),Ot(-.5)),tt=()=>g.rank===1?K(at(at(i,Ws(K(W,[1,1,1,g.shape[0]]),$)),k),d.shape):K(at(at(i,W),k),d.shape),G=()=>{let _t=at(at(W,Ot(-1)),_);return g.rank===1&&(_t=Ft(_t,C)),K(_t,g.shape)},mt=()=>{let _t=at(at(et,F),_);return g.rank===1&&(_t=Ft(_t,C)),K(_t,g.shape)},lt=()=>{let _t=at(F,W),Gt=at(i,_t);return g.rank===1&&(Gt=Ft(Gt,C)),K(Gt,g.shape)},gt=()=>{let _t=i;return g.rank===1&&(_t=Ft(_t,C)),K(_t,g.shape)};return{x:tt,mean:G,variance:mt,scale:lt,offset:gt}}};var uF={kernelName:Og,inputsToSave:["x","indices"],gradFunc:(i,a,u)=>{let[h,d]=a,{axis:g}=u,x=Zt(g,h.shape)[0],w=()=>{let k=h.shape,C=d.size,$=k.slice(0,x),F=$.length,_=k.slice(g,k.length).slice(1),W=_.length,et=cF(0,F),tt=cF(F+1,F+1+W),G=lF([$,[C],_]),mt=K(i,G),lt=K(d,[C]),gt=lF([[F],et,tt]),_t=Ie(mt,gt),Gt=Uh(_t,lt,h.shape[x]),se=Sl(gt);return Gt=Ie(Gt,se),Gt};return{x:w,indices:()=>d}}};function cF(i,a){let u=[];for(let h=i;h<a;++h)u.push(h);return u}function lF(i){let a=[];for(let u=0;u<i.length;++u)for(let h=0;h<i[u].length;++h)a.push(i[u][h]);return a}var pF={kernelName:Lg,inputsToSave:["a","b"],gradFunc:(i,a)=>{let[u,h]=a;return{a:()=>jt(u),b:()=>jt(h)}}};var hF={kernelName:Mg,gradFunc:i=>({x:()=>wt(i,"float32")})};var fF={kernelName:Bg,gradFunc:i=>({x:()=>jt(i)})};var dF={kernelName:zg,gradFunc:i=>({x:()=>jt(i)})};var mF={kernelName:Wg,gradFunc:i=>({x:()=>jt(i)})};var gF={kernelName:Gg,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>Wt(i,ke(u,1))}}};var yF={kernelName:Vg,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>Wt(i,wt(u,"float32"))}}};var bF={kernelName:Ug,inputsToSave:[],outputsToSave:[!0],gradFunc:(i,a,u)=>{let[h]=a,{axis:d}=u;return{logits:()=>{let g=!0,x=Cn(h);return Pt(i,at(Ft(i,d,g),x))}}}};function prt(i,a,u,h=5,d=1,g=1,x=.5){let w=$=>$.LRNGrad(u,i,a,h,d,g,x),k={x:i,y:a,dy:u},C={depthRadius:h,bias:d,alpha:g,beta:x};return V.runKernelFunc(w,k,null,m2,C)}var xF=O({localResponseNormalizationBackprop_:prt});var wF={kernelName:qg,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(i,a,u)=>{let[h,d]=a,{depthRadius:g,bias:x,alpha:w,beta:k}=u;return{x:()=>xF(h,d,i,g,x,w,k)}}};function ob(i,a,u,h){return a.rank<u.rank&&(a=K(a,dn(a.shape,h))),i.rank<u.rank&&(i=K(i,dn(i.shape,h))),{x:()=>{let d=at(i,wt(zs(u,a),i.dtype));return d}}}var Tk={kernelName:Hg,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(i,a,u)=>{let h=u,{reductionIndices:d}=h,g=a[0],x=a[1],w=Zt(d,g.shape),k=ob(i,x,g,w);return{x:()=>k.x()}}};var vF={kernelName:jg,inputsToSave:["a","b"],gradFunc:(i,a)=>{let[u,h]=a,d=()=>at(i,wt(Ur(u,h),"float32")),g=()=>at(i,wt(Ma(u,h),"float32"));return{a:d,b:g}}};function hrt(i,a,u,h,d,g=[1,1,1],x,w){let k=R(i,"dy","maxPool3dBackprop"),C=R(a,"input","maxPool3dBackprop"),$=R(u,"output","maxPool3dBackprop"),F=k,_=C,W=$,et=!1;C.rank===4&&(et=!0,F=K(k,[1,k.shape[0],k.shape[1],k.shape[2],k.shape[3]]),_=K(C,[1,C.shape[0],C.shape[1],C.shape[2],C.shape[3]]),W=K($,[1,$.shape[0],$.shape[1],$.shape[2],$.shape[3]])),U(F.rank===5,()=>`Error in maxPool3dBackprop: dy must be rank 5 but got rank ${F.rank}.`),U(_.rank===5,()=>`Error in maxPool3dBackprop: input must be rank 5 but got rank ${_.rank}.`),U(W.rank===5,()=>`Error in maxPool3dBackprop: output must be rank 5 but got rank ${W.rank}.`),U(Wn(d,g),()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${d} and dilations '${g}'`),w!=null&&U(Te(x),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${w} but got pad ${x}.`);let tt=gt=>{let _t=jy(_.shape,h,d,g,x,w);return gt.maxPool3dBackprop(F,_,W,_t)},G={dy:F,input:_,output:W},mt={filterSize:h,strides:d,dilations:g,pad:x,dimRoundingMode:w},lt=V.runKernelFunc(tt,G,null,b2,mt);return et?K(lt,[lt.shape[1],lt.shape[2],lt.shape[3],lt.shape[4]]):lt}var TF=O({maxPool3dBackprop_:hrt});var kF={kernelName:y2,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(i,a,u)=>{let[h,d]=a,{filterSize:g,strides:x,dilations:w,pad:k,dimRoundingMode:C}=u,$=w==null?[1,1,1]:w;return{x:()=>TF(i,h,d,g,x,$,k,C)}}};function frt(i,a,u,h,d,g,x){let w=R(i,"dy","maxPoolBackprop"),k=R(a,"input","maxPoolBackprop"),C=R(u,"output","maxPoolBackprop");U(k.rank===w.rank,()=>`Rank of input (${k.rank}) does not match rank of dy (${w.rank})`),U(w.rank===4,()=>`Error in maxPoolBackprop: dy must be rank 4 but got rank ${w.rank}.`),U(k.rank===4,()=>`Error in maxPoolBackprop: input must be rank 4 but got rank ${k.rank}.`),x!=null&&U(Te(g),()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${x} but got pad ${g}.`);let $=W=>{let et=ns(k.shape,h,d,1,g,x);return W.maxPoolBackprop(w,k,C,et)},F={dy:w,input:k,output:C},_={filterSize:h,strides:d,pad:g,dimRoundingMode:x};return V.runKernelFunc($,F,null,g2,_)}var NF=O({maxPoolBackprop_:frt});var _F={kernelName:Kg,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(i,a,u)=>{let[h,d]=a,{filterSize:g,strides:x,pad:w}=u;return{x:()=>NF(i,h,d,g,x,w)}}};var CF={kernelName:Xg,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(i,a,u)=>{let h=u,{axis:d}=h,[g,x]=a,w=Zt(d,g.shape),k=ob(i,x,g,w);return{x:()=>k.x()}}};var SF={kernelName:Yg,inputsToSave:["a","b"],gradFunc:(i,a)=>{let[u,h]=a,d=()=>at(i,wt(qr(u,h),"float32")),g=()=>at(i,wt(gr(u,h),"float32"));return{a:d,b:g}}};var $F={kernelName:Jg,inputsToSave:["x"],gradFunc:(i,a,u)=>{let h=a[0],{paddings:d}=u,g=d.map(x=>x[0]);return{x:()=>ve(i,g,h.shape)}}};var IF={kernelName:Zg,inputsToSave:["a","b"],gradFunc:(i,a)=>{let[u,h]=a,d=ne(u.shape,h.shape),g=()=>{let w=Be(u.shape,d);return w.length>0?K(Ft(i,w),u.shape):i},x=()=>{let w=at(i,me(Ih(Wt(u,h)))),k=Be(h.shape,d);return k.length>0?K(Ft(w,k),h.shape):w};return{a:g,b:x}}};var EF={kernelName:Qg,inputsToSave:["a","b"],gradFunc:(i,a)=>{let[u,h]=a,d=ne(u.shape,h.shape),g=()=>{let w=at(i,wt(h,"float32")),k=Be(u.shape,d);return k.length>0?K(Ft(w,k),u.shape):w},x=()=>{let w=at(i,wt(u,"float32")),k=Be(h.shape,d);return k.length>0?K(Ft(w,k),h.shape):w};return{a:g,b:x}}};var DF={kernelName:ty,gradFunc:i=>({x:()=>me(i)})};var AF={kernelName:ny,inputsToSave:["indices"],gradFunc:(i,a)=>{let u=a[0];return{indices:()=>Hr(u.shape,"float32")}}};var FF={kernelName:ey,gradFunc:i=>({x:()=>jt(i)})};var kk={kernelName:ry,inputsToSave:["x"],gradFunc:(i,a,u)=>{let h=a[0],{paddings:d}=u,g=d.map(x=>x[0]);return{x:()=>ve(i,g,h.shape)}}};var RF={kernelName:oy,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(i,a)=>{let[u,h,d]=a,g=u,x=h,w=ne(g.shape,x.shape),k=()=>{let $=wt(x,"float32"),F=at(i,at($,Ao(g,Pt($,Ot(1))))),_=Be(g.shape,w);return _.length>0&&(F=Ft(F,_)),K(F,g.shape)},C=()=>{let $=gr(g,0),F=_n($,ro(g),jt(g)),_=at(i,at(d,F)),W=Be(x.shape,w);return W.length>0&&(_=Ft(_,W)),K(_,x.shape)};return{a:k,b:C}}};var PF={kernelName:sy,inputsToSave:["x","alpha"],gradFunc:(i,a)=>{let[u,h]=a,d=gr(u,0);return{x:()=>_n(d,i,at(i,h)),alpha:()=>{let g=_n(d,jt(i),at(i,u)),x=Be(h.shape,i.shape);return x.length>0&&(g=Ft(g,x)),K(g,h.shape)}}}};var OF={kernelName:iy,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>Wt(i,me(be(u)))}}};var LF={kernelName:py,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a,h=at(qr(u,6),Gs(u));return{x:()=>at(i,wt(h,"float32"))}}};var MF={kernelName:ay,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>at(i,wt(Gs(u),"float32"))}}};var BF={kernelName:cy,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>K(i,u.shape)}}};var zF={kernelName:uy,inputsToSave:["images"],gradFunc:(i,a,u)=>{let[h]=a,d=w=>{let{alignCorners:k}=u;return w.resizeBilinearBackprop(i,h,k)},g={images:h},x=()=>V.runKernelFunc(d,g,null,$2,u);return{images:x}}};var WF={kernelName:ly,inputsToSave:["images"],gradFunc:(i,a,u)=>{let[h]=a,d=w=>{let{alignCorners:k}=u;return w.resizeNearestNeighborBackprop(i,h,k)},g={images:h},x=()=>V.runKernelFunc(d,g,null,S2,u);return{images:x}}};var VF={kernelName:hy,gradFunc:(i,a,u)=>{let{dims:h}=u,d=Zt(h,i.shape);return{x:()=>Ri(i,d)}}};var GF={kernelName:fy,gradFunc:i=>({x:()=>jt(i)})};var UF={kernelName:dy,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>me(Wt(i,at(Ao(u,1.5),2)))}}};var qF={kernelName:my,inputsToSave:["condition"],gradFunc:(i,a)=>{let[u]=a;return{condition:()=>wt(jt(u),"float32"),t:()=>at(i,wt(u,i.dtype)),e:()=>at(i,wt(Ba(u),i.dtype))}}};var HF={kernelName:gy,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>{let h=gr(u,Ot(0)),d=Ot(wA),g=Ot(vA),x=at(i,g),w=at(at(i,d),Cn(wt(u,"float32")));return _n(h,x,w)}}}};var jF={kernelName:vy,outputsToSave:[!0],gradFunc:(i,a)=>{let[u]=a;return{x:()=>at(i,at(u,Pt(Ot(1),u)))}}};var KF={kernelName:wy,gradFunc:i=>({x:()=>jt(i)})};var XF={kernelName:by,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>at(Pa(wt(u,"float32")),i)}}};var YF={kernelName:xy,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>at(Sh(wt(u,"float32")),i)}}};var JF={kernelName:yy,inputsToSave:["x"],gradFunc:(i,a,u)=>{let[h]=a,{begin:d,size:g}=u,x=h.shape,[w,k]=qy(h,d,g),C=[];for(let $=0;$<i.rank;$++)C.push([w[$],x[$]-w[$]-k[$]]);return{x:()=>Mh(i,C)}}};var ZF={kernelName:Sy,outputsToSave:[!0],gradFunc:(i,a,u)=>{let[h]=a,{dim:d}=u,g=!0,x=at(i,h);return{logits:()=>Pt(x,at(Ft(x,[d],g),h))}}};var QF={kernelName:Ty,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>at(i,Fa(u))}}};var Nk={kernelName:_y,gradFunc:(i,a,u)=>{let{blockShape:h,paddings:d}=u;return{x:()=>Ra(i,h,d)}}};var _k={kernelName:Cy,gradFunc:(i,a,u)=>{let{axis:h}=u;return{x:()=>mn(i,h)}}};var tR={kernelName:ky,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>Wt(i,at(Qn(wt(u,"float32")),2))}}};var eR={kernelName:I2,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>at(i,at(wt(u,"float32"),2))}}};var nR={kernelName:$y,inputsToSave:["a","b"],gradFunc:(i,a)=>{let[u,h]=a,d=Ot(2),g=()=>at(i,at(d,Pt(u,h))),x=()=>at(i,at(d,Pt(h,u)));return{a:g,b:x}}};var rR={kernelName:Ly,gradFunc:i=>({x:()=>jt(i)})};var oR={kernelName:Iy,inputsToSave:["a","b"],gradFunc:(i,a)=>{let[u,h]=a,d=ne(u.shape,h.shape),g=()=>{let w=i,k=Be(u.shape,d);return k.length>0&&(w=Ft(w,k)),K(w,u.shape)},x=()=>{let w=i,k=Be(h.shape,d);return k.length>0&&(w=Ft(w,k)),K(me(w),h.shape)};return{a:g,b:x}}};var sR={kernelName:Ny,inputsToSave:["x"],gradFunc:(i,a,u)=>{let[h]=a,d=h.shape.slice(),{axis:g}=u,x=Zt(g,h.shape);x.forEach(C=>{d[C]=1});let w=K(i,d),k=at(w,rs(h.shape,"float32"));return{x:()=>k}}};var iR={kernelName:Ey,inputsToSave:["x"],gradFunc:(i,a)=>{let[u]=a;return{x:()=>Wt(i,be(Pa(u)))}}};var aR={kernelName:Dy,outputsToSave:[!0],gradFunc:(i,a)=>{let[u]=a;return{x:()=>at(Pt(Ot(1),be(u)),i)}}};var cR={kernelName:Ay,inputsToSave:["x"],gradFunc:(i,a,u)=>{let[h]=a,{reps:d}=u,g=()=>{let x=jt(h);if(h.rank===1)for(let w=0;w<d[0];++w)x=ke(x,ve(i,[w*h.shape[0]],[h.shape[0]]));else if(h.rank===2)for(let w=0;w<d[0];++w)for(let k=0;k<d[1];++k)x=ke(x,ve(i,[w*h.shape[0],k*h.shape[1]],[h.shape[0],h.shape[1]]));else if(h.rank===3)for(let w=0;w<d[0];++w)for(let k=0;k<d[1];++k)for(let C=0;C<d[2];++C)x=ke(x,ve(i,[w*h.shape[0],k*h.shape[1],C*h.shape[2]],[h.shape[0],h.shape[1],h.shape[2]]));else if(h.rank===4)for(let w=0;w<d[0];++w)for(let k=0;k<d[1];++k)for(let C=0;C<d[2];++C)for(let $=0;$<d[3];++$)x=ke(x,ve(i,[w*h.shape[0],k*h.shape[1],C*h.shape[2],$*h.shape[3]],[h.shape[0],h.shape[1],h.shape[2],h.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${h.rank} tensors yet.`);return x};return{x:g}}};var lR={kernelName:Fy,gradFunc:(i,a,u)=>{let h=u,{perm:d}=h,g=Sl(d);return{x:()=>Ie(i,g)}}};var uR={kernelName:Ry,gradFunc:(i,a,u)=>{let h=u,{axis:d}=h;return{value:()=>Cr(i,d)}}};var pR={kernelName:Py,inputsToSave:["segmentIds"],gradFunc:(i,a)=>{let[u]=a,h=()=>drt(i,u);return{x:h}}};function drt(i,a){let u=Vs(a,jt(a)),h=Eh(i,u),d=Ur(a,Ot(0,"int32")),g=h.rank-d.rank;for(let w=0;w<g;++w)d=mr(d,w+1);d=oo(d,rs(h.shape,"bool"));let x=jt(h);return _n(d,h,x)}var hR={kernelName:Oy,gradFunc:i=>({x:()=>jt(i)})};var mrt=[TA,kA,NA,_A,CA,SA,$A,IA,EA,DA,AA,FA,PA,LA,MA,BA,zA,WA,VA,GA,UA,HA,qA,KA,XA,YA,JA,ZA,QA,tF,eF,nF,rF,oF,iF,sF,aF,uF,pF,hF,fF,dF,mF,gF,yF,bF,wF,Tk,Tk,vF,kF,_F,CF,SF,$F,IF,EF,DF,AF,FF,kk,kk,RF,PF,OF,LF,MF,BF,zF,WF,VF,GF,UF,qF,HF,jF,KF,XF,YF,JF,ZF,QF,Nk,Nk,_k,_k,tR,nR,eR,rR,oR,sR,iR,aR,cR,lR,uR,pR,hR];for(let i of mrt)P2(i);z.prototype.abs=function(){return this.throwIfDisposed(),Bn(this)};z.prototype.acos=function(){return this.throwIfDisposed(),_T(this)};z.prototype.acosh=function(){return this.throwIfDisposed(),CT(this)};z.prototype.addStrict=function(i){return this.throwIfDisposed(),AD(this,i)};z.prototype.add=function(i){return this.throwIfDisposed(),ke(this,i)};z.prototype.all=function(i,a){return this.throwIfDisposed(),ST(this,i,a)};z.prototype.any=function(i,a){return this.throwIfDisposed(),$T(this,i,a)};z.prototype.argMax=function(i){return this.throwIfDisposed(),IT(this,i)};z.prototype.argMin=function(i){return this.throwIfDisposed(),ET(this,i)};z.prototype.asScalar=function(){return this.throwIfDisposed(),U(this.size===1,()=>"The array must have only 1 element."),K(this,[])};z.prototype.asType=function(i){return this.throwIfDisposed(),wt(this,i)};z.prototype.as1D=function(){return this.throwIfDisposed(),K(this,[this.size])};z.prototype.as2D=function(i,a){return this.throwIfDisposed(),K(this,[i,a])};z.prototype.as3D=function(i,a,u){return this.throwIfDisposed(),K(this,[i,a,u])};z.prototype.as4D=function(i,a,u,h){return this.throwIfDisposed(),K(this,[i,a,u,h])};z.prototype.as5D=function(i,a,u,h,d){return this.throwIfDisposed(),K(this,[i,a,u,h,d])};z.prototype.asin=function(){return this.throwIfDisposed(),DT(this)};z.prototype.asinh=function(){return this.throwIfDisposed(),AT(this)};z.prototype.atan=function(){return this.throwIfDisposed(),FT(this)};z.prototype.atan2=function(i){return this.throwIfDisposed(),RT(this,i)};z.prototype.atanh=function(){return this.throwIfDisposed(),PT(this)};z.prototype.avgPool=function(i,a,u,h){return this.throwIfDisposed(),Ch(this,i,a,u,h)};z.prototype.batchToSpaceND=function(i,a){return this.throwIfDisposed(),Ra(this,i,a)};z.prototype.batchNorm=function(i,a,u,h,d){return this.throwIfDisposed(),MT(this,i,a,u,h,d)};z.prototype.broadcastTo=function(i){return this.throwIfDisposed(),El(this,i)};z.prototype.cast=function(i){return this.throwIfDisposed(),wt(this,i)};z.prototype.ceil=function(){return this.throwIfDisposed(),BT(this)};z.prototype.clipByValue=function(i,a){return this.throwIfDisposed(),zT(this,i,a)};z.prototype.concat=function(i,a){return this.throwIfDisposed(),i instanceof z&&(i=[i]),mn([this,...i],a)};z.prototype.conv1d=function(i,a,u,h,d,g){return this.throwIfDisposed(),WT(this,i,a,u,h,d,g)};z.prototype.conv2dTranspose=function(i,a,u,h,d){return this.throwIfDisposed(),VT(this,i,a,u,h,d)};z.prototype.conv2d=function(i,a,u,h,d,g){return this.throwIfDisposed(),Bs(this,i,a,u,h,d,g)};z.prototype.cos=function(){return this.throwIfDisposed(),Pa(this)};z.prototype.cosh=function(){return this.throwIfDisposed(),Sh(this)};z.prototype.cumsum=function(i,a,u){return this.throwIfDisposed(),$h(this,i,a,u)};z.prototype.depthToSpace=function(i,a){return this.throwIfDisposed(),GT(this,i,a)};z.prototype.depthwiseConv2D=function(i,a,u,h,d,g){return kn("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Oa(this,i,a,u,h,d,g)};z.prototype.depthwiseConv2d=function(i,a,u,h,d,g){return this.throwIfDisposed(),Oa(this,i,a,u,h,d,g)};z.prototype.dilation2d=function(i,a,u,h,d){return this.throwIfDisposed(),UT(this,i,a,u,h,d)};z.prototype.divNoNan=function(i){return this.throwIfDisposed(),qT(this,i)};z.prototype.divStrict=function(i){return this.throwIfDisposed(),FD(this,i)};z.prototype.div=function(i){return this.throwIfDisposed(),Wt(this,i)};z.prototype.dot=function(i){return this.throwIfDisposed(),HT(this,i)};z.prototype.elu=function(){return this.throwIfDisposed(),jT(this)};z.prototype.equalStrict=function(i){return this.throwIfDisposed(),CD(this,i)};z.prototype.equal=function(i){return this.throwIfDisposed(),zs(this,i)};z.prototype.erf=function(){return this.throwIfDisposed(),KT(this)};z.prototype.exp=function(){return this.throwIfDisposed(),Cn(this)};z.prototype.expandDims=function(i){return this.throwIfDisposed(),mr(this,i)};z.prototype.expm1=function(){return this.throwIfDisposed(),XT(this)};z.prototype.fft=function(){return this.throwIfDisposed(),Ua(this)};z.prototype.flatten=function(){return this.throwIfDisposed(),K(this,[this.size])};z.prototype.floor=function(){return this.throwIfDisposed(),Ih(this)};z.prototype.floorDiv=function(i){return this.throwIfDisposed(),Nh(this,i)};z.prototype.gather=function(i,a){return this.throwIfDisposed(),Eh(this,i,a)};z.prototype.greaterEqualStrict=function(i){return this.throwIfDisposed(),SD(this,i)};z.prototype.greaterEqual=function(i){return this.throwIfDisposed(),Ur(this,i)};z.prototype.greaterStrict=function(i){return this.throwIfDisposed(),$D(this,i)};z.prototype.greater=function(i){return this.throwIfDisposed(),gr(this,i)};z.prototype.ifft=function(){return this.throwIfDisposed(),Pi(this)};z.prototype.irfft=function(){return this.throwIfDisposed(),Vh(this)};z.prototype.isFinite=function(){return this.throwIfDisposed(),ZT(this)};z.prototype.isInf=function(){return this.throwIfDisposed(),QT(this)};z.prototype.isNaN=function(){return this.throwIfDisposed(),tk(this)};z.prototype.leakyRelu=function(i){return this.throwIfDisposed(),ek(this,i)};z.prototype.lessEqualStrict=function(i){return this.throwIfDisposed(),ID(this,i)};z.prototype.lessEqual=function(i){return this.throwIfDisposed(),qr(this,i)};z.prototype.lessStrict=function(i){return this.throwIfDisposed(),ED(this,i)};z.prototype.less=function(i){return this.throwIfDisposed(),Ma(this,i)};z.prototype.localResponseNormalization=function(i,a,u,h){return this.throwIfDisposed(),nk(this,i,a,u,h)};z.prototype.logSigmoid=function(){return this.throwIfDisposed(),rk(this)};z.prototype.logSoftmax=function(i){return this.throwIfDisposed(),ok(this,i)};z.prototype.logSumExp=function(i,a){return this.throwIfDisposed(),Fh(this,i,a)};z.prototype.log=function(){return this.throwIfDisposed(),ro(this)};z.prototype.log1p=function(){return this.throwIfDisposed(),Dh(this)};z.prototype.logicalAnd=function(i){return this.throwIfDisposed(),oo(this,i)};z.prototype.logicalNot=function(){return this.throwIfDisposed(),Ba(this)};z.prototype.logicalOr=function(i){return this.throwIfDisposed(),Rh(this,i)};z.prototype.logicalXor=function(i){return this.throwIfDisposed(),sk(this,i)};z.prototype.matMul=function(i,a,u){return this.throwIfDisposed(),We(this,i,a,u)};z.prototype.maxPool=function(i,a,u,h){return this.throwIfDisposed(),Ph(this,i,a,u,h)};z.prototype.max=function(i,a){return this.throwIfDisposed(),Do(this,i,a)};z.prototype.maximumStrict=function(i){return this.throwIfDisposed(),RD(this,i)};z.prototype.maximum=function(i){return this.throwIfDisposed(),Vs(this,i)};z.prototype.mean=function(i,a){return this.throwIfDisposed(),Oh(this,i,a)};z.prototype.min=function(i,a){return this.throwIfDisposed(),Al(this,i,a)};z.prototype.minimumStrict=function(i){return this.throwIfDisposed(),PD(this,i)};z.prototype.minimum=function(i){return this.throwIfDisposed(),za(this,i)};z.prototype.mirrorPad=function(i,a){return this.throwIfDisposed(),ik(this,i,a)};z.prototype.modStrict=function(i){return this.throwIfDisposed(),OD(this,i)};z.prototype.mod=function(i){return this.throwIfDisposed(),Lh(this,i)};z.prototype.mulStrict=function(i){return this.throwIfDisposed(),LD(this,i)};z.prototype.mul=function(i){return this.throwIfDisposed(),at(this,i)};z.prototype.neg=function(){return this.throwIfDisposed(),me(this)};z.prototype.norm=function(i,a,u){return this.throwIfDisposed(),Fl(this,i,a,u)};z.prototype.notEqualStrict=function(i){return this.throwIfDisposed(),DD(this,i)};z.prototype.notEqual=function(i){return this.throwIfDisposed(),Wa(this,i)};z.prototype.oneHot=function(i,a=1,u=0){return this.throwIfDisposed(),TT(this,i,a,u)};z.prototype.onesLike=function(){return this.throwIfDisposed(),Yy(this)};z.prototype.pad=function(i,a){return this.throwIfDisposed(),Mh(this,i,a)};z.prototype.pool=function(i,a,u,h,d){return this.throwIfDisposed(),ak(this,i,a,u,h,d)};z.prototype.powStrict=function(i){return this.throwIfDisposed(),MD(this,i)};z.prototype.pow=function(i){return this.throwIfDisposed(),Ao(this,i)};z.prototype.prelu=function(i){return this.throwIfDisposed(),ck(this,i)};z.prototype.prod=function(i,a){return this.throwIfDisposed(),lk(this,i,a)};z.prototype.reciprocal=function(){return this.throwIfDisposed(),uk(this)};z.prototype.relu=function(){return this.throwIfDisposed(),Ga(this)};z.prototype.relu6=function(){return this.throwIfDisposed(),pk(this)};z.prototype.reshapeAs=function(i){return this.throwIfDisposed(),K(this,i.shape)};z.prototype.reshape=function(i){return this.throwIfDisposed(),K(this,i)};z.prototype.resizeBilinear=function(i,a){return this.throwIfDisposed(),nb(this,i,a)};z.prototype.resizeNearestNeighbor=function(i,a){return this.throwIfDisposed(),rb(this,i,a)};z.prototype.reverse=function(i){return this.throwIfDisposed(),Ri(this,i)};z.prototype.rfft=function(){return this.throwIfDisposed(),qa(this)};z.prototype.round=function(){return this.throwIfDisposed(),hk(this)};z.prototype.rsqrt=function(){return this.throwIfDisposed(),Bh(this)};z.prototype.selu=function(){return this.throwIfDisposed(),fk(this)};z.prototype.separableConv2d=function(i,a,u,h,d,g){return this.throwIfDisposed(),dk(this,i,a,u,h,d,g)};z.prototype.sigmoid=function(){return this.throwIfDisposed(),Fa(this)};z.prototype.sign=function(){return this.throwIfDisposed(),mk(this)};z.prototype.sin=function(){return this.throwIfDisposed(),zh(this)};z.prototype.sinh=function(){return this.throwIfDisposed(),Wh(this)};z.prototype.slice=function(i,a){return this.throwIfDisposed(),ve(this,i,a)};z.prototype.softmax=function(i){return this.throwIfDisposed(),gk(this,i)};z.prototype.softplus=function(){return this.throwIfDisposed(),Ah(this)};z.prototype.spaceToBatchND=function(i,a){return this.throwIfDisposed(),Va(this,i,a)};z.prototype.split=function(i,a){return this.throwIfDisposed(),os(this,i,a)};z.prototype.sqrt=function(){return this.throwIfDisposed(),Qn(this)};z.prototype.square=function(){return this.throwIfDisposed(),be(this)};z.prototype.squaredDifference=function(i){return this.throwIfDisposed(),Ha(this,i)};z.prototype.squaredDifferenceStrict=function(i){return this.throwIfDisposed(),BD(this,i)};z.prototype.squeeze=function(i){return this.throwIfDisposed(),Gh(this,i)};z.prototype.stack=function(i,a){this.throwIfDisposed();let u=i instanceof z?[this,i]:[this,...i];return Cr(u,a)};z.prototype.step=function(i){return this.throwIfDisposed(),Gs(this,i)};z.prototype.stridedSlice=function(i,a,u,h,d,g,x,w){return this.throwIfDisposed(),yk(this,i,a,u,h,d,g,x,w)};z.prototype.subStrict=function(i){return this.throwIfDisposed(),zD(this,i)};z.prototype.sub=function(i){return this.throwIfDisposed(),Pt(this,i)};z.prototype.sum=function(i,a){return this.throwIfDisposed(),Ft(this,i,a)};z.prototype.tan=function(){return this.throwIfDisposed(),bk(this)};z.prototype.tanh=function(){return this.throwIfDisposed(),LT(this)};z.prototype.tile=function(i){return this.throwIfDisposed(),Ws(this,i)};z.prototype.toBool=function(){return this.throwIfDisposed(),wt(this,"bool")};z.prototype.toFloat=function(){return this.throwIfDisposed(),wt(this,"float32")};z.prototype.toInt=function(){return this.throwIfDisposed(),wt(this,"int32")};z.prototype.topk=function(i,a){return this.throwIfDisposed(),xk(this,i,a)};z.prototype.transpose=function(i){return this.throwIfDisposed(),Ie(this,i)};z.prototype.unique=function(i){return this.throwIfDisposed(),wk(this,i)};z.prototype.unsortedSegmentSum=function(i,a){return this.throwIfDisposed(),Uh(this,i,a)};z.prototype.unstack=function(i){return this.throwIfDisposed(),Ka(this,i)};z.prototype.where=function(i,a){return this.throwIfDisposed(),_n(i,this,a)};z.prototype.zerosLike=function(){return this.throwIfDisposed(),jt(this)};function Ck(i,a,u=!1){let{Image:h,Canvas:d}=$e.getEnv();if(!(i instanceof h||i instanceof d))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");let g=Sa(i),x=a/Math.max(g.height,g.width),w=x*g.width,k=x*g.height,C=xl({width:a,height:a}),$=i instanceof d?i:dh(i),F=Math.abs(w-k)/2,_=u&&w<k?F:0,W=u&&k<w?F:0;return dr(C).drawImage($,_,W,w,k),C}var Us=class{constructor(a,u=!1){this._imageTensors=[];this._canvases=[];this._treatAsBatchInput=!1;this._inputDimensions=[];if(!Array.isArray(a))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${a}`);this._treatAsBatchInput=u,this._batchSize=a.length,a.forEach((h,d)=>{if(Ds(h)){this._imageTensors[d]=h,this._inputDimensions[d]=h.shape;return}if(zr(h)){let x=h.shape[0];if(x!==1)throw new Error(`NetInput - tf.Tensor4D with batchSize ${x} passed, but not supported in input array`);this._imageTensors[d]=h,this._inputDimensions[d]=h.shape.slice(1);return}let g=h instanceof $e.getEnv().Canvas?h:dh(h);this._canvases[d]=g,this._inputDimensions[d]=[g.height,g.width,3]})}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return Xo(this.batchSize,0,1).map((a,u)=>this.getReshapedInputDimensions(u))}getInput(a){return this.canvases[a]||this.imageTensors[a]}getInputDimensions(a){return this._inputDimensions[a]}getInputHeight(a){return this._inputDimensions[a][0]}getInputWidth(a){return this._inputDimensions[a][1]}getReshapedInputDimensions(a){if(typeof this.inputSize!="number")throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");let u=this.getInputWidth(a),h=this.getInputHeight(a);return E1({width:u,height:h},this.inputSize)}toBatchTensor(a,u=!0){return this._inputSize=a,gD(()=>{let h=Xo(this.batchSize,0,1).map(g=>{let x=this.getInput(g);if(x instanceof z){let w=zr(x)?x:x.expandDims();return w=R1(w,u),(w.shape[1]!==a||w.shape[2]!==a)&&(w=xA.resizeBilinear(w,[a,a])),w.as3D(a,a,3)}if(x instanceof $e.getEnv().Canvas)return NT.fromPixels(Ck(x,a,u));throw new Error(`toBatchTensor - at batchIdx ${g}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${x}`)}),d=Cr(h.map(g=>wt(g,"float32"))).as4D(this.batchSize,a,a,3);return d})}};async function Ve(i){if(i instanceof Us)return i;let a=Array.isArray(i)?i:[i];if(!a.length)throw new Error("toNetInput - empty array passed as input");let u=d=>Array.isArray(i)?` at input index ${d}:`:"",h=a.map(Ca);return h.forEach((d,g)=>{if(!tg(d)&&!Ds(d)&&!zr(d))throw typeof a[g]=="string"?new Error(`toNetInput -${u(g)} string passed, but could not resolve HTMLElement for element id ${a[g]}`):new Error(`toNetInput -${u(g)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(zr(d)){let x=d.shape[0];if(x!==1)throw new Error(`toNetInput -${u(g)} tf.Tensor4D with batchSize ${x} passed, but not supported in input array`)}}),await Promise.all(h.map(d=>tg(d)&&V1(d))),new Us(h,Array.isArray(i))}async function Rl(i,a){let{Canvas:u}=$e.getEnv(),h=i;if(!(i instanceof u)){let x=await Ve(i);if(x.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let w=x.getInput(0);h=w instanceof u?w:await U1(w)}let d=dr(h),g=a.map(x=>x instanceof Ue?x.forSize(h.width,h.height).box.floor():x).map(x=>x.clipAtImageBorders(h.width,h.height));return g.map(({x,y:w,width:k,height:C})=>{let $=xl({width:k,height:C});return dr($).putImageData(d.getImageData(x,w,k,C),0,0),$})}var sb=te(ee());async function Pl(i,a){if(!Ds(i)&&!zr(i))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(zr(i)&&i.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return sb.tidy(()=>{let[u,h,d]=i.shape.slice(zr(i)?1:0),g=a.map(w=>w instanceof Ue?w.forSize(h,u).box:w).map(w=>w.clipAtImageBorders(h,u)),x=g.map(({x:w,y:k,width:C,height:$})=>sb.slice3d(i.as3D(u,h,d),[k,w,0],[$,C,d]));return x})}async function Xa(i,a){let u=$e.getEnv().fetch,h=await u(i,a);if(!(h.status<400))throw new Error(`failed to fetch: (${h.status}) ${h.statusText}, from url: ${h.url}`);return h}async function grt(i){let a=await Xa(i),u=await a.blob();if(!u.type.startsWith("image/"))throw new Error(`fetchImage - expected blob type to be of type image/*, instead have: ${u.type}, for url: ${a.url}`);return G1(u)}async function Sk(i){return(await Xa(i)).json()}async function yrt(i){return new Float32Array(await(await Xa(i)).arrayBuffer())}var fR=te(ee());function ib(i,a){let u=`${a}-weights_manifest.json`;if(!i)return{modelBaseUri:"",manifestUri:u};if(i==="/")return{modelBaseUri:"/",manifestUri:`/${u}`};let h=i.startsWith("http://")?"http://":i.startsWith("https://")?"https://":"";i=i.replace(h,"");let d=i.split("/").filter(w=>w),g=i.endsWith(".json")?d[d.length-1]:u,x=h+(i.endsWith(".json")?d.slice(0,d.length-1):d).join("/");return x=i.startsWith("/")?`/${x}`:x,{modelBaseUri:x,manifestUri:x==="/"?`/${g}`:`${x}/${g}`}}async function $k(i,a){let{manifestUri:u,modelBaseUri:h}=ib(i,a),d=await Sk(u);return fR.io.loadWeights(d,h)}function brt(i,a,u=!1){let{width:h,height:d}=u?Sa(a):a;return i.width=h,i.height=d,{width:h,height:d}}var Li=te(ee()),qs=te(ee()),Gn=class{constructor(a){this._name=a;this._params=void 0;this._paramMappings=[]}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(a){let{obj:u,objProp:h}=this.traversePropertyPath(a);return u[h]}reassignParamFromPath(a,u){let{obj:h,objProp:d}=this.traversePropertyPath(a);h[d].dispose(),h[d]=u}getParamList(){return this._paramMappings.map(({paramPath:a})=>({path:a,tensor:this.getParamFromPath(a)}))}getTrainableParams(){return this.getParamList().filter(a=>a.tensor instanceof qs.Variable)}getFrozenParams(){return this.getParamList().filter(a=>!(a.tensor instanceof qs.Variable))}variable(){this.getFrozenParams().forEach(({path:a,tensor:u})=>{this.reassignParamFromPath(a,u.variable())})}freeze(){this.getTrainableParams().forEach(({path:a,tensor:u})=>{let h=qs.tensor(u.dataSync());u.dispose(),this.reassignParamFromPath(a,h)})}dispose(a=!0){this.getParamList().forEach(u=>{if(a&&u.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${u.path}`);u.tensor.dispose()}),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map(({tensor:a})=>Array.from(a.dataSync())).reduce((a,u)=>a.concat(u)))}async load(a){if(a instanceof Float32Array){this.extractWeights(a);return}await this.loadFromUri(a)}async loadFromUri(a){if(a&&typeof a!="string")throw new Error(`${this._name}.loadFromUri - expected model uri`);let u=await $k(a,this.getDefaultModelName());this.loadFromWeightMap(u)}async loadFromDisk(a){if(a&&typeof a!="string")throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:u}=$e.getEnv(),{manifestUri:h,modelBaseUri:d}=ib(a,this.getDefaultModelName()),g=C=>Promise.all(C.map($=>u($).then(F=>F.buffer))),x=qs.io.weightsLoaderFactory(g),w=JSON.parse((await u(h)).toString()),k=await x(w,d);this.loadFromWeightMap(k)}loadFromWeightMap(a){let{paramMappings:u,params:h}=this.extractParamsFromWeigthMap(a);this._paramMappings=u,this._params=h}extractWeights(a){let{paramMappings:u,params:h}=this.extractParams(a);this._paramMappings=u,this._params=h}traversePropertyPath(a){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let u=a.split("/").reduce((g,x)=>{if(!g.nextObj.hasOwnProperty(x))throw new Error(`traversePropertyPath - object does not have property ${x}, for path ${a}`);return{obj:g.nextObj,objProp:x,nextObj:g.nextObj[x]}},{nextObj:this.params}),{obj:h,objProp:d}=u;if(!h||!d||!(h[d]instanceof qs.Tensor))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${a}`);return{obj:h,objProp:d}}},qe=te(ee()),Ol=te(ee());function yr(i,a,u){return Ol.tidy(()=>{let h=Ol.separableConv2d(i,a.depthwise_filter,a.pointwise_filter,u,"same");return h=Ol.add(h,a.bias),h})}function ab(i,a,u=!1){return qe.tidy(()=>{let h=qe.relu(u?qe.add(qe.conv2d(i,a.conv0.filters,[2,2],"same"),a.conv0.bias):yr(i,a.conv0,[2,2])),d=yr(h,a.conv1,[1,1]),g=qe.relu(qe.add(h,d)),x=yr(g,a.conv2,[1,1]);return qe.relu(qe.add(h,qe.add(d,x)))})}function qh(i,a,u=!1,h=!0){return qe.tidy(()=>{let d=qe.relu(u?qe.add(qe.conv2d(i,a.conv0.filters,h?[2,2]:[1,1],"same"),a.conv0.bias):yr(i,a.conv0,h?[2,2]:[1,1])),g=yr(d,a.conv1,[1,1]),x=qe.relu(qe.add(d,g)),w=yr(x,a.conv2,[1,1]),k=qe.relu(qe.add(d,qe.add(g,w))),C=yr(k,a.conv3,[1,1]);return qe.relu(qe.add(d,qe.add(g,qe.add(w,C))))})}var Oi=te(ee());function Ya(i,a,u="same",h=!1){return Oi.tidy(()=>{let d=Oi.add(Oi.conv2d(i,a.filters,[1,1],u),a.bias);return h?Oi.relu(d):d})}function tr(i,a){Object.keys(i).forEach(u=>{a.some(h=>h.originalPath===u)||i[u].dispose()})}var cb=te(ee());function Ll(i,a){return function(u,h,d,g){let x=cb.tensor4d(i(u*h*d*d),[d,d,u,h]),w=cb.tensor1d(i(h));return a.push({paramPath:`${g}/filters`},{paramPath:`${g}/bias`}),{filters:x,bias:w}}}var lb=te(ee());function ub(i,a){return function(u,h,d){let g=lb.tensor2d(i(u*h),[u,h]),x=lb.tensor1d(i(h));return a.push({paramPath:`${d}/weights`},{paramPath:`${d}/bias`}),{weights:g,bias:x}}}var Hh=te(ee()),pb=class{constructor(a,u,h){this.depthwise_filter=a;this.pointwise_filter=u;this.bias=h}};function Ml(i,a){return function(u,h,d){let g=Hh.tensor4d(i(3*3*u),[3,3,u,1]),x=Hh.tensor4d(i(u*h),[1,1,u,h]),w=Hh.tensor1d(i(h));return a.push({paramPath:`${d}/depthwise_filter`},{paramPath:`${d}/pointwise_filter`},{paramPath:`${d}/bias`}),new pb(g,x,w)}}function Bl(i){return function(a){let u=i(`${a}/depthwise_filter`,4),h=i(`${a}/pointwise_filter`,4),d=i(`${a}/bias`,1);return new pb(u,h,d)}}function Sr(i,a){return function(u,h,d){let g=i[u];if(!Ta(g,h))throw new Error(`expected weightMap[${u}] to be a Tensor${h}D, instead have ${g}`);return a.push({originalPath:u,paramPath:d||u}),g}}function er(i){let a=i;function u(d){let g=a.slice(0,d);return a=a.slice(d),g}function h(){return a}return{extractWeights:u,getRemainingWeights:h}}function hb(i,a){let u=Ll(i,a),h=Ml(i,a);function d(x,w,k,C=!1){let $=C?u(x,w,3,`${k}/conv0`):h(x,w,`${k}/conv0`),F=h(w,w,`${k}/conv1`),_=h(w,w,`${k}/conv2`);return{conv0:$,conv1:F,conv2:_}}function g(x,w,k,C=!1){let{conv0:$,conv1:F,conv2:_}=d(x,w,k,C),W=h(w,w,`${k}/conv3`);return{conv0:$,conv1:F,conv2:_,conv3:W}}return{extractDenseBlock3Params:d,extractDenseBlock4Params:g}}function dR(i){let a=[],{extractWeights:u,getRemainingWeights:h}=er(i),{extractDenseBlock4Params:d}=hb(u,a),g=d(3,32,"dense0",!0),x=d(32,64,"dense1"),w=d(64,128,"dense2"),k=d(128,256,"dense3");if(h().length!==0)throw new Error(`weights remaing after extract: ${h().length}`);return{paramMappings:a,params:{dense0:g,dense1:x,dense2:w,dense3:k}}}function fb(i){return function(a){let u=i(`${a}/filters`,4),h=i(`${a}/bias`,1);return{filters:u,bias:h}}}function db(i,a){let u=Sr(i,a),h=fb(u),d=Bl(u);function g(w,k=!1){let C=k?h(`${w}/conv0`):d(`${w}/conv0`),$=d(`${w}/conv1`),F=d(`${w}/conv2`);return{conv0:C,conv1:$,conv2:F}}function x(w,k=!1){let C=k?h(`${w}/conv0`):d(`${w}/conv0`),$=d(`${w}/conv1`),F=d(`${w}/conv2`),_=d(`${w}/conv3`);return{conv0:C,conv1:$,conv2:F,conv3:_}}return{extractDenseBlock3Params:g,extractDenseBlock4Params:x}}function mR(i){let a=[],{extractDenseBlock4Params:u}=db(i,a),h={dense0:u("dense0",!0),dense1:u("dense1"),dense2:u("dense2"),dense3:u("dense3")};return tr(i,a),{params:h,paramMappings:a}}var jh=class extends Gn{constructor(){super("FaceFeatureExtractor")}forwardInput(a){let{params:u}=this;if(!u)throw new Error("FaceFeatureExtractor - load model before inference");return Li.tidy(()=>{let h=Li.cast(a.toBatchTensor(112,!0),"float32"),d=[122.782,117.001,104.298],g=Io(h,d).div(Li.scalar(255)),x=qh(g,u.dense0,!0);return x=qh(x,u.dense1),x=qh(x,u.dense2),x=qh(x,u.dense3),x=Li.avgPool(x,[7,7],[2,2],"valid"),x})}async forward(a){return this.forwardInput(await Ve(a))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeigthMap(a){return mR(a)}extractParams(a){return dR(a)}},bR=te(ee()),zl=te(ee());function Kh(i,a){return zl.tidy(()=>zl.add(zl.matMul(i,a.weights),a.bias))}function gR(i,a,u){let h=[],{extractWeights:d,getRemainingWeights:g}=er(i),x=ub(d,h),w=x(a,u,"fc");if(g().length!==0)throw new Error(`weights remaing after extract: ${g().length}`);return{paramMappings:h,params:{fc:w}}}function yR(i){let a=[],u=Sr(i,a);function h(g){let x=u(`${g}/weights`,2),w=u(`${g}/bias`,1);return{weights:x,bias:w}}let d={fc:h("fc")};return tr(i,a),{params:d,paramMappings:a}}function mb(i){let a={},u={};return Object.keys(i).forEach(h=>{let d=h.startsWith("fc")?u:a;d[h]=i[h]}),{featureExtractorMap:a,classifierMap:u}}var Xh=class extends Gn{constructor(a,u){super(a);this._faceFeatureExtractor=u}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(a){let{params:u}=this;if(!u)throw new Error(`${this._name} - load model before inference`);return bR.tidy(()=>{let h=a instanceof Us?this.faceFeatureExtractor.forwardInput(a):a;return Kh(h.as2D(h.shape[0],-1),u.fc)})}dispose(a=!0){this.faceFeatureExtractor.dispose(a),super.dispose(a)}loadClassifierParams(a){let{params:u,paramMappings:h}=this.extractClassifierParams(a);this._params=u,this._paramMappings=h}extractClassifierParams(a){return gR(a,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeigthMap(a){let{featureExtractorMap:u,classifierMap:h}=mb(a);return this.faceFeatureExtractor.loadFromWeightMap(u),yR(h)}extractParams(a){let u=this.getClassifierChannelsIn(),h=this.getClassifierChannelsOut(),d=h*u+h,g=a.slice(0,a.length-d),x=a.slice(a.length-d);return this.faceFeatureExtractor.extractWeights(g),this.extractClassifierParams(x)}},Ik=["neutral","happy","sad","angry","fearful","disgusted","surprised"],Mi=class{constructor(a){if(a.length!==7)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${a.length}`);Ik.forEach((u,h)=>{this[u]=a[h]})}asSortedArray(){return Ik.map(a=>({expression:a,probability:this[a]})).sort((a,u)=>u.probability-a.probability)}},gb=class extends Xh{constructor(a=new jh){super("FaceExpressionNet",a)}forwardInput(a){return Wl.tidy(()=>Wl.softmax(this.runNet(a)))}async forward(a){return this.forwardInput(await Ve(a))}async predictExpressions(a){let u=await Ve(a),h=await this.forwardInput(u),d=await Promise.all(Wl.unstack(h).map(async x=>{let w=await x.data();return x.dispose(),w}));h.dispose();let g=d.map(x=>new Mi(x));return u.isBatchInput?g:g[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function Ek(i){return i.expressions instanceof Mi}function yb(i,a){let u={expressions:a};return Object.assign({},i,u)}function xrt(i,a,u=.1,h){let d=Array.isArray(a)?a:[a];d.forEach(g=>{let x=g instanceof Mi?g:Ek(g)?g.expressions:void 0;if(!x)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let w=x.asSortedArray(),k=w.filter(F=>F.probability>u),C=Jo(g)?g.detection.box.bottomLeft:h||new Jt(0,0),$=new Ii(k.map(F=>`${F.expression} (${ka(F.probability)})`),C);$.draw(i)})}function Ja(i){return Jo(i)&&i.landmarks instanceof Wr&&i.unshiftedLandmarks instanceof Wr&&i.alignedRect instanceof Ue}function Vl(i,a){let{box:u}=i.detection,h=a.shiftBy(u.x,u.y),d=h.align(),{imageDims:g}=i.detection,x=new Ue(i.detection.score,d.rescale(g.reverse()),g),w={landmarks:h,unshiftedLandmarks:a,alignedRect:x};return Object.assign({},i,w)}var Dk=class{constructor(a={}){let{drawLines:u=!0,drawPoints:h=!0,lineWidth:d,lineColor:g,pointSize:x,pointColor:w}=a;this.drawLines=u,this.drawPoints=h,this.lineWidth=d||1,this.pointSize=x||2,this.lineColor=g||"rgba(0, 255, 255, 1)",this.pointColor=w||"rgba(255, 0, 255, 1)"}},Ak=class{constructor(a,u={}){this.faceLandmarks=a,this.options=new Dk(u)}draw(a){let u=dr(a),{drawLines:h,drawPoints:d,lineWidth:g,lineColor:x,pointSize:w,pointColor:k}=this.options;if(h&&this.faceLandmarks instanceof bl&&(u.strokeStyle=x,u.lineWidth=g,Es(u,this.faceLandmarks.getJawOutline()),Es(u,this.faceLandmarks.getLeftEyeBrow()),Es(u,this.faceLandmarks.getRightEyeBrow()),Es(u,this.faceLandmarks.getNose()),Es(u,this.faceLandmarks.getLeftEye(),!0),Es(u,this.faceLandmarks.getRightEye(),!0),Es(u,this.faceLandmarks.getMouth(),!0)),d){u.strokeStyle=k,u.fillStyle=k;let C=$=>{u.beginPath(),u.arc($.x,$.y,w,0,2*Math.PI),u.fill()};this.faceLandmarks.positions.forEach(C)}}};function wrt(i,a){let u=Array.isArray(a)?a:[a];u.forEach(h=>{let d=h instanceof Wr?h:Ja(h)?h.landmarks:void 0;if(!d)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new Ak(d).draw(i)})}var ss=te(ee()),pn=te(ee());function vrt(i,a){let u=Ll(i,a),h=Ml(i,a);function d(x,w,k){let C=h(x,w,`${k}/separable_conv0`),$=h(w,w,`${k}/separable_conv1`),F=u(x,w,1,`${k}/expansion_conv`);return{separable_conv0:C,separable_conv1:$,expansion_conv:F}}function g(x,w){let k=h(x,x,`${w}/separable_conv0`),C=h(x,x,`${w}/separable_conv1`),$=h(x,x,`${w}/separable_conv2`);return{separable_conv0:k,separable_conv1:C,separable_conv2:$}}return{extractConvParams:u,extractSeparableConvParams:h,extractReductionBlockParams:d,extractMainBlockParams:g}}function xR(i,a){let u=[],{extractWeights:h,getRemainingWeights:d}=er(i),{extractConvParams:g,extractSeparableConvParams:x,extractReductionBlockParams:w,extractMainBlockParams:k}=vrt(h,u),C=g(3,32,3,"entry_flow/conv_in"),$=w(32,64,"entry_flow/reduction_block_0"),F=w(64,128,"entry_flow/reduction_block_1"),_={conv_in:C,reduction_block_0:$,reduction_block_1:F},W={};Xo(a,0,1).forEach(mt=>{W[`main_block_${mt}`]=k(128,`middle_flow/main_block_${mt}`)});let et=w(128,256,"exit_flow/reduction_block"),tt=x(256,512,"exit_flow/separable_conv"),G={reduction_block:et,separable_conv:tt};if(d().length!==0)throw new Error(`weights remaing after extract: ${d().length}`);return{paramMappings:u,params:{entry_flow:_,middle_flow:W,exit_flow:G}}}function Trt(i,a){let u=Sr(i,a),h=fb(u),d=Bl(u);function g(w){let k=d(`${w}/separable_conv0`),C=d(`${w}/separable_conv1`),$=h(`${w}/expansion_conv`);return{separable_conv0:k,separable_conv1:C,expansion_conv:$}}function x(w){let k=d(`${w}/separable_conv0`),C=d(`${w}/separable_conv1`),$=d(`${w}/separable_conv2`);return{separable_conv0:k,separable_conv1:C,separable_conv2:$}}return{extractConvParams:h,extractSeparableConvParams:d,extractReductionBlockParams:g,extractMainBlockParams:x}}function wR(i,a){let u=[],{extractConvParams:h,extractSeparableConvParams:d,extractReductionBlockParams:g,extractMainBlockParams:x}=Trt(i,u),w=h("entry_flow/conv_in"),k=g("entry_flow/reduction_block_0"),C=g("entry_flow/reduction_block_1"),$={conv_in:w,reduction_block_0:k,reduction_block_1:C},F={};Xo(a,0,1).forEach(tt=>{F[`main_block_${tt}`]=x(`middle_flow/main_block_${tt}`)});let _=g("exit_flow/reduction_block"),W=d("exit_flow/separable_conv"),et={reduction_block:_,separable_conv:W};return tr(i,u),{params:{entry_flow:$,middle_flow:F,exit_flow:et},paramMappings:u}}function vR(i,a,u){return pn.add(pn.conv2d(i,a.filters,u,"same"),a.bias)}function Rk(i,a,u=!0){let h=u?pn.relu(i):i;return h=yr(h,a.separable_conv0,[1,1]),h=yr(pn.relu(h),a.separable_conv1,[1,1]),h=pn.maxPool(h,[3,3],[2,2],"same"),h=pn.add(h,vR(i,a.expansion_conv,[2,2])),h}function krt(i,a){let u=yr(pn.relu(i),a.separable_conv0,[1,1]);return u=yr(pn.relu(u),a.separable_conv1,[1,1]),u=yr(pn.relu(u),a.separable_conv2,[1,1]),u=pn.add(u,i),u}var Pk=class extends Gn{constructor(a){super("TinyXception");this._numMainBlocks=a}forwardInput(a){let{params:u}=this;if(!u)throw new Error("TinyXception - load model before inference");return pn.tidy(()=>{let h=pn.cast(a.toBatchTensor(112,!0),"float32"),d=[122.782,117.001,104.298],g=Io(h,d).div(pn.scalar(256)),x=pn.relu(vR(g,u.entry_flow.conv_in,[2,2]));return x=Rk(x,u.entry_flow.reduction_block_0,!1),x=Rk(x,u.entry_flow.reduction_block_1),Xo(this._numMainBlocks,0,1).forEach(w=>{x=krt(x,u.middle_flow[`main_block_${w}`])}),x=Rk(x,u.exit_flow.reduction_block),x=pn.relu(yr(x,u.exit_flow.separable_conv,[1,1])),x})}async forward(a){return this.forwardInput(await Ve(a))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeigthMap(a){return wR(a,this._numMainBlocks)}extractParams(a){return xR(a,this._numMainBlocks)}};function TR(i){let a=[],{extractWeights:u,getRemainingWeights:h}=er(i),d=ub(u,a),g=d(512,1,"fc/age"),x=d(512,2,"fc/gender");if(h().length!==0)throw new Error(`weights remaing after extract: ${h().length}`);return{paramMappings:a,params:{fc:{age:g,gender:x}}}}function kR(i){let a=[],u=Sr(i,a);function h(g){let x=u(`${g}/weights`,2),w=u(`${g}/bias`,1);return{weights:x,bias:w}}let d={fc:{age:h("fc/age"),gender:h("fc/gender")}};return tr(i,a),{params:d,paramMappings:a}}var Hs;(function(i){i.FEMALE="female",i.MALE="male"})(Hs||(Hs={}));var bb=class extends Gn{constructor(a=new Pk(2)){super("AgeGenderNet");this._faceFeatureExtractor=a}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(a){let{params:u}=this;if(!u)throw new Error(`${this._name} - load model before inference`);return ss.tidy(()=>{let h=a instanceof Us?this.faceFeatureExtractor.forwardInput(a):a,d=ss.avgPool(h,[7,7],[2,2],"valid").as2D(h.shape[0],-1),g=Kh(d,u.fc.age).as1D(),x=Kh(d,u.fc.gender);return{age:g,gender:x}})}forwardInput(a){return ss.tidy(()=>{let{age:u,gender:h}=this.runNet(a);return{age:u,gender:ss.softmax(h)}})}async forward(a){return this.forwardInput(await Ve(a))}async predictAgeAndGender(a){let u=await Ve(a),h=await this.forwardInput(u),d=ss.unstack(h.age),g=ss.unstack(h.gender),x=d.map((k,C)=>({ageTensor:k,genderTensor:g[C]})),w=await Promise.all(x.map(async({ageTensor:k,genderTensor:C})=>{let $=(await k.data())[0],F=(await C.data())[0],_=F>.5,W=_?Hs.MALE:Hs.FEMALE,et=_?F:1-F;return k.dispose(),C.dispose(),{age:$,gender:W,genderProbability:et}}));return h.age.dispose(),h.gender.dispose(),u.isBatchInput?w:w[0]}getDefaultModelName(){return"age_gender_model"}dispose(a=!0){this.faceFeatureExtractor.dispose(a),super.dispose(a)}loadClassifierParams(a){let{params:u,paramMappings:h}=this.extractClassifierParams(a);this._params=u,this._paramMappings=h}extractClassifierParams(a){return TR(a)}extractParamsFromWeigthMap(a){let{featureExtractorMap:u,classifierMap:h}=mb(a);return this.faceFeatureExtractor.loadFromWeightMap(u),kR(h)}extractParams(a){let u=512*1+1+(512*2+2),h=a.slice(0,a.length-u),d=a.slice(a.length-u);return this.faceFeatureExtractor.extractWeights(h),this.extractClassifierParams(d)}};var $r=te(ee()),Yh=class extends Xh{postProcess(a,u,h){let d=h.map(({width:x,height:w})=>{let k=u/Math.max(w,x);return{width:x*k,height:w*k}}),g=d.length;return $r.tidy(()=>{let x=(F,_)=>$r.stack([$r.fill([68],F,"float32"),$r.fill([68],_,"float32")],1).as2D(1,136).as1D(),w=(F,_)=>{let{width:W,height:et}=d[F];return _(W,et)?Math.abs(W-et)/2:0},k=F=>w(F,(_,W)=>_<W),C=F=>w(F,(_,W)=>W<_),$=a.mul($r.fill([g,136],u,"float32")).sub($r.stack(Array.from(Array(g),(F,_)=>x(k(_),C(_))))).div($r.stack(Array.from(Array(g),(F,_)=>x(d[_].width,d[_].height))));return $})}forwardInput(a){return $r.tidy(()=>{let u=this.runNet(a);return this.postProcess(u,a.inputSize,a.inputDimensions.map(([h,d])=>({height:h,width:d})))})}async forward(a){return this.forwardInput(await Ve(a))}async detectLandmarks(a){let u=await Ve(a),h=$r.tidy(()=>$r.unstack(this.forwardInput(u))),d=await Promise.all(h.map(async(g,x)=>{let w=Array.from(await g.data()),k=w.filter(($,F)=>Xm(F)),C=w.filter(($,F)=>!Xm(F));return new bl(Array(68).fill(0).map(($,F)=>new Jt(k[F],C[F])),{height:u.getInputHeight(x),width:u.getInputWidth(x)})}));return h.forEach(g=>g.dispose()),u.isBatchInput?d:d[0]}getClassifierChannelsOut(){return 136}},Gl=class extends Yh{constructor(a=new jh){super("FaceLandmark68Net",a)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};var Bi=te(ee());function NR(i){let a=[],{extractDenseBlock3Params:u}=db(i,a),h={dense0:u("dense0",!0),dense1:u("dense1"),dense2:u("dense2")};return tr(i,a),{params:h,paramMappings:a}}function _R(i){let a=[],{extractWeights:u,getRemainingWeights:h}=er(i),{extractDenseBlock3Params:d}=hb(u,a),g=d(3,32,"dense0",!0),x=d(32,64,"dense1"),w=d(64,128,"dense2");if(h().length!==0)throw new Error(`weights remaing after extract: ${h().length}`);return{paramMappings:a,params:{dense0:g,dense1:x,dense2:w}}}var Ok=class extends Gn{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(a){let{params:u}=this;if(!u)throw new Error("TinyFaceFeatureExtractor - load model before inference");return Bi.tidy(()=>{let h=Bi.cast(a.toBatchTensor(112,!0),"float32"),d=[122.782,117.001,104.298],g=Io(h,d).div(Bi.scalar(255)),x=ab(g,u.dense0,!0);return x=ab(x,u.dense1),x=ab(x,u.dense2),x=Bi.avgPool(x,[14,14],[2,2],"valid"),x})}async forward(a){return this.forwardInput(await Ve(a))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeigthMap(a){return NR(a)}extractParams(a){return _R(a)}},xb=class extends Yh{constructor(a=new Ok){super("FaceLandmark68TinyNet",a)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}},CR=class extends Gl{};var jr=te(ee()),Ul=te(ee()),wb=te(ee());function SR(i,a){return wb.add(wb.mul(i,a.weights),a.biases)}function Lk(i,a,u,h,d="same"){let{filters:g,bias:x}=a.conv,w=Ul.conv2d(i,g,u,d);return w=Ul.add(w,x),w=SR(w,a.scale),h?Ul.relu(w):w}function $R(i,a){return Lk(i,a,[1,1],!0)}function Mk(i,a){return Lk(i,a,[1,1],!1)}function vb(i,a){return Lk(i,a,[2,2],!0,"valid")}var Ir=te(ee());function Nrt(i,a){function u(w,k,C){let $=i(w),F=$.length/(k*C*C);if(I1(F))throw new Error(`depth has to be an integer: ${F}, weights.length: ${$.length}, numFilters: ${k}, filterSize: ${C}`);return Ir.tidy(()=>Ir.transpose(Ir.tensor4d($,[k,F,C,C]),[2,3,1,0]))}function h(w,k,C,$){let F=u(w,k,C),_=Ir.tensor1d(i(k));return a.push({paramPath:`${$}/filters`},{paramPath:`${$}/bias`}),{filters:F,bias:_}}function d(w,k){let C=Ir.tensor1d(i(w)),$=Ir.tensor1d(i(w));return a.push({paramPath:`${k}/weights`},{paramPath:`${k}/biases`}),{weights:C,biases:$}}function g(w,k,C,$){let F=h(w,k,C,`${$}/conv`),_=d(k,`${$}/scale`);return{conv:F,scale:_}}function x(w,k,C,$,F=!1){let _=g((F?.5:1)*w,k,C,`${$}/conv1`),W=g(w,k,C,`${$}/conv2`);return{conv1:_,conv2:W}}return{extractConvLayerParams:g,extractResidualLayerParams:x}}function IR(i){let{extractWeights:a,getRemainingWeights:u}=er(i),h=[],{extractConvLayerParams:d,extractResidualLayerParams:g}=Nrt(a,h),x=d(4704,32,7,"conv32_down"),w=g(9216,32,3,"conv32_1"),k=g(9216,32,3,"conv32_2"),C=g(9216,32,3,"conv32_3"),$=g(36864,64,3,"conv64_down",!0),F=g(36864,64,3,"conv64_1"),_=g(36864,64,3,"conv64_2"),W=g(36864,64,3,"conv64_3"),et=g(147456,128,3,"conv128_down",!0),tt=g(147456,128,3,"conv128_1"),G=g(147456,128,3,"conv128_2"),mt=g(589824,256,3,"conv256_down",!0),lt=g(589824,256,3,"conv256_1"),gt=g(589824,256,3,"conv256_2"),_t=g(589824,256,3,"conv256_down_out"),Gt=Ir.tidy(()=>Ir.transpose(Ir.tensor2d(a(256*128),[128,256]),[1,0]));if(h.push({paramPath:"fc"}),u().length!==0)throw new Error(`weights remaing after extract: ${u().length}`);let se={conv32_down:x,conv32_1:w,conv32_2:k,conv32_3:C,conv64_down:$,conv64_1:F,conv64_2:_,conv64_3:W,conv128_down:et,conv128_1:tt,conv128_2:G,conv256_down:mt,conv256_1:lt,conv256_2:gt,conv256_down_out:_t,fc:Gt};return{params:se,paramMappings:h}}function _rt(i,a){let u=Sr(i,a);function h(x){let w=u(`${x}/scale/weights`,1),k=u(`${x}/scale/biases`,1);return{weights:w,biases:k}}function d(x){let w=u(`${x}/conv/filters`,4),k=u(`${x}/conv/bias`,1),C=h(x);return{conv:{filters:w,bias:k},scale:C}}function g(x){return{conv1:d(`${x}/conv1`),conv2:d(`${x}/conv2`)}}return{extractConvLayerParams:d,extractResidualLayerParams:g}}function ER(i){let a=[],{extractConvLayerParams:u,extractResidualLayerParams:h}=_rt(i,a),d=u("conv32_down"),g=h("conv32_1"),x=h("conv32_2"),w=h("conv32_3"),k=h("conv64_down"),C=h("conv64_1"),$=h("conv64_2"),F=h("conv64_3"),_=h("conv128_down"),W=h("conv128_1"),et=h("conv128_2"),tt=h("conv256_down"),G=h("conv256_1"),mt=h("conv256_2"),lt=h("conv256_down_out"),gt=i.fc;if(a.push({originalPath:"fc",paramPath:"fc"}),!$1(gt))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${gt}`);let _t={conv32_down:d,conv32_1:g,conv32_2:x,conv32_3:w,conv64_down:k,conv64_1:C,conv64_2:$,conv64_3:F,conv128_down:_,conv128_1:W,conv128_2:et,conv256_down:tt,conv256_1:G,conv256_2:mt,conv256_down_out:lt,fc:gt};return tr(i,a),{params:_t,paramMappings:a}}var nr=te(ee());function Fo(i,a){let u=$R(i,a.conv1);return u=Mk(u,a.conv2),u=nr.add(u,i),u=nr.relu(u),u}function Jh(i,a){let u=vb(i,a.conv1);u=Mk(u,a.conv2);let h=nr.avgPool(i,2,2,"valid"),d=nr.zeros(h.shape),g=h.shape[3]!==u.shape[3],x=h.shape[1]!==u.shape[1]||h.shape[2]!==u.shape[2];if(x){let w=[...u.shape];w[1]=1;let k=nr.zeros(w);u=nr.concat([u,k],1);let C=[...u.shape];C[2]=1;let $=nr.zeros(C);u=nr.concat([u,$],2)}return h=g?nr.concat([h,d],3):h,u=nr.add(h,u),u=nr.relu(u),u}var ql=class extends Gn{constructor(){super("FaceRecognitionNet")}forwardInput(a){let{params:u}=this;if(!u)throw new Error("FaceRecognitionNet - load model before inference");return jr.tidy(()=>{let h=jr.cast(a.toBatchTensor(150,!0),"float32"),d=[122.782,117.001,104.298],g=Io(h,d).div(jr.scalar(256)),x=vb(g,u.conv32_down);x=jr.maxPool(x,3,2,"valid"),x=Fo(x,u.conv32_1),x=Fo(x,u.conv32_2),x=Fo(x,u.conv32_3),x=Jh(x,u.conv64_down),x=Fo(x,u.conv64_1),x=Fo(x,u.conv64_2),x=Fo(x,u.conv64_3),x=Jh(x,u.conv128_down),x=Fo(x,u.conv128_1),x=Fo(x,u.conv128_2),x=Jh(x,u.conv256_down),x=Fo(x,u.conv256_1),x=Fo(x,u.conv256_2),x=Jh(x,u.conv256_down_out);let w=x.mean([1,2]),k=jr.matMul(w,u.fc);return k})}async forward(a){return this.forwardInput(await Ve(a))}async computeFaceDescriptor(a){let u=await Ve(a),h=jr.tidy(()=>jr.unstack(this.forwardInput(u))),d=await Promise.all(h.map(g=>g.data()));return h.forEach(g=>g.dispose()),u.isBatchInput?d:d[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeigthMap(a){return ER(a)}extractParams(a){return IR(a)}};function Crt(i){let a=new ql;return a.extractWeights(i),a}function Tb(i,a){let u={descriptor:a};return Object.assign({},i,u)}function Srt(i){return typeof i.age=="number"}function kb(i,a){let u={age:a};return Object.assign({},i,u)}function $rt(i){return(i.gender===Hs.MALE||i.gender===Hs.FEMALE)&&ml(i.genderProbability)}function Nb(i,a,u){let h={gender:a,genderProbability:u};return Object.assign({},i,h)}var Po=te(ee()),Ro=te(ee());function Irt(i,a){function u(k,C){let $=Ro.tensor4d(i(3*3*k),[3,3,k,1]),F=Ro.tensor1d(i(k)),_=Ro.tensor1d(i(k)),W=Ro.tensor1d(i(k)),et=Ro.tensor1d(i(k));return a.push({paramPath:`${C}/filters`},{paramPath:`${C}/batch_norm_scale`},{paramPath:`${C}/batch_norm_offset`},{paramPath:`${C}/batch_norm_mean`},{paramPath:`${C}/batch_norm_variance`}),{filters:$,batch_norm_scale:F,batch_norm_offset:_,batch_norm_mean:W,batch_norm_variance:et}}function h(k,C,$,F,_){let W=Ro.tensor4d(i(k*C*$*$),[$,$,k,C]),et=Ro.tensor1d(i(C));return a.push({paramPath:`${F}/filters`},{paramPath:`${F}/${_?"batch_norm_offset":"bias"}`}),{filters:W,bias:et}}function d(k,C,$,F){let{filters:_,bias:W}=h(k,C,$,F,!0);return{filters:_,batch_norm_offset:W}}function g(k,C,$){let F=u(k,`${$}/depthwise_conv`),_=d(k,C,1,`${$}/pointwise_conv`);return{depthwise_conv:F,pointwise_conv:_}}function x(){let k=d(3,32,3,"mobilenetv1/conv_0"),C=g(32,64,"mobilenetv1/conv_1"),$=g(64,128,"mobilenetv1/conv_2"),F=g(128,128,"mobilenetv1/conv_3"),_=g(128,256,"mobilenetv1/conv_4"),W=g(256,256,"mobilenetv1/conv_5"),et=g(256,512,"mobilenetv1/conv_6"),tt=g(512,512,"mobilenetv1/conv_7"),G=g(512,512,"mobilenetv1/conv_8"),mt=g(512,512,"mobilenetv1/conv_9"),lt=g(512,512,"mobilenetv1/conv_10"),gt=g(512,512,"mobilenetv1/conv_11"),_t=g(512,1024,"mobilenetv1/conv_12"),Gt=g(1024,1024,"mobilenetv1/conv_13");return{conv_0:k,conv_1:C,conv_2:$,conv_3:F,conv_4:_,conv_5:W,conv_6:et,conv_7:tt,conv_8:G,conv_9:mt,conv_10:lt,conv_11:gt,conv_12:_t,conv_13:Gt}}function w(){let k=d(1024,256,1,"prediction_layer/conv_0"),C=d(256,512,3,"prediction_layer/conv_1"),$=d(512,128,1,"prediction_layer/conv_2"),F=d(128,256,3,"prediction_layer/conv_3"),_=d(256,128,1,"prediction_layer/conv_4"),W=d(128,256,3,"prediction_layer/conv_5"),et=d(256,64,1,"prediction_layer/conv_6"),tt=d(64,128,3,"prediction_layer/conv_7"),G=h(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),mt=h(512,9,1,"prediction_layer/box_predictor_0/class_predictor"),lt=h(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),gt=h(1024,18,1,"prediction_layer/box_predictor_1/class_predictor"),_t=h(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),Gt=h(512,18,1,"prediction_layer/box_predictor_2/class_predictor"),se=h(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),fe=h(256,18,1,"prediction_layer/box_predictor_3/class_predictor"),_e=h(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),Ge=h(256,18,1,"prediction_layer/box_predictor_4/class_predictor"),Vt=h(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),ln=h(128,18,1,"prediction_layer/box_predictor_5/class_predictor"),Ce={box_encoding_predictor:G,class_predictor:mt},rr={box_encoding_predictor:lt,class_predictor:gt},Ys={box_encoding_predictor:_t,class_predictor:Gt},Js={box_encoding_predictor:se,class_predictor:fe},sc={box_encoding_predictor:_e,class_predictor:Ge},gn={box_encoding_predictor:Vt,class_predictor:ln};return{conv_0:k,conv_1:C,conv_2:$,conv_3:F,conv_4:_,conv_5:W,conv_6:et,conv_7:tt,box_predictor_0:Ce,box_predictor_1:rr,box_predictor_2:Ys,box_predictor_3:Js,box_predictor_4:sc,box_predictor_5:gn}}return{extractMobilenetV1Params:x,extractPredictionLayerParams:w}}function DR(i){let a=[],{extractWeights:u,getRemainingWeights:h}=er(i),{extractMobilenetV1Params:d,extractPredictionLayerParams:g}=Irt(u,a),x=d(),w=g(),k=Ro.tensor3d(u(5118*4),[1,5118,4]),C={extra_dim:k};if(a.push({paramPath:"output_layer/extra_dim"}),h().length!==0)throw new Error(`weights remaing after extract: ${h().length}`);return{params:{mobilenetv1:x,prediction_layer:w,output_layer:C},paramMappings:a}}function Ert(i,a){let u=Sr(i,a);function h(C,$,F){let _=u(`${C}/Conv2d_${$}_pointwise/weights`,4,`${F}/filters`),W=u(`${C}/Conv2d_${$}_pointwise/convolution_bn_offset`,1,`${F}/batch_norm_offset`);return{filters:_,batch_norm_offset:W}}function d(C){let $=`mobilenetv1/conv_${C}`,F=`MobilenetV1/Conv2d_${C}_depthwise`,_=`${$}/depthwise_conv`,W=`${$}/pointwise_conv`,et=u(`${F}/depthwise_weights`,4,`${_}/filters`),tt=u(`${F}/BatchNorm/gamma`,1,`${_}/batch_norm_scale`),G=u(`${F}/BatchNorm/beta`,1,`${_}/batch_norm_offset`),mt=u(`${F}/BatchNorm/moving_mean`,1,`${_}/batch_norm_mean`),lt=u(`${F}/BatchNorm/moving_variance`,1,`${_}/batch_norm_variance`);return{depthwise_conv:{filters:et,batch_norm_scale:tt,batch_norm_offset:G,batch_norm_mean:mt,batch_norm_variance:lt},pointwise_conv:h("MobilenetV1",C,W)}}function g(){return{conv_0:h("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:d(1),conv_2:d(2),conv_3:d(3),conv_4:d(4),conv_5:d(5),conv_6:d(6),conv_7:d(7),conv_8:d(8),conv_9:d(9),conv_10:d(10),conv_11:d(11),conv_12:d(12),conv_13:d(13)}}function x(C,$){let F=u(`${C}/weights`,4,`${$}/filters`),_=u(`${C}/biases`,1,`${$}/bias`);return{filters:F,bias:_}}function w(C){let $=x(`Prediction/BoxPredictor_${C}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${C}/box_encoding_predictor`),F=x(`Prediction/BoxPredictor_${C}/ClassPredictor`,`prediction_layer/box_predictor_${C}/class_predictor`);return{box_encoding_predictor:$,class_predictor:F}}function k(){return{conv_0:h("Prediction",0,"prediction_layer/conv_0"),conv_1:h("Prediction",1,"prediction_layer/conv_1"),conv_2:h("Prediction",2,"prediction_layer/conv_2"),conv_3:h("Prediction",3,"prediction_layer/conv_3"),conv_4:h("Prediction",4,"prediction_layer/conv_4"),conv_5:h("Prediction",5,"prediction_layer/conv_5"),conv_6:h("Prediction",6,"prediction_layer/conv_6"),conv_7:h("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:w(0),box_predictor_1:w(1),box_predictor_2:w(2),box_predictor_3:w(3),box_predictor_4:w(4),box_predictor_5:w(5)}}return{extractMobilenetV1Params:g,extractPredictionLayerParams:k}}function AR(i){let a=[],{extractMobilenetV1Params:u,extractPredictionLayerParams:h}=Ert(i,a),d=i["Output/extra_dim"];if(a.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!Ds(d))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${d}`);let g={mobilenetv1:u(),prediction_layer:h(),output_layer:{extra_dim:d}};return tr(i,a),{params:g,paramMappings:a}}var js=te(ee()),zi=te(ee());function io(i,a,u){return zi.tidy(()=>{let h=zi.conv2d(i,a.filters,u,"same");return h=zi.add(h,a.batch_norm_offset),zi.clipByValue(h,0,6)})}var Drt=.0010000000474974513;function Art(i,a,u){return js.tidy(()=>{let h=js.depthwiseConv2d(i,a.filters,u,"same");return h=js.batchNorm(h,a.batch_norm_mean,a.batch_norm_variance,a.batch_norm_offset,a.batch_norm_scale,Drt),js.clipByValue(h,0,6)})}function Frt(i){return[2,4,6,12].some(a=>a===i)?[2,2]:[1,1]}function FR(i,a){return js.tidy(()=>{let u,h=io(i,a.conv_0,[2,2]),d=[a.conv_1,a.conv_2,a.conv_3,a.conv_4,a.conv_5,a.conv_6,a.conv_7,a.conv_8,a.conv_9,a.conv_10,a.conv_11,a.conv_12,a.conv_13];if(d.forEach((g,x)=>{let w=x+1,k=Frt(w);h=Art(h,g.depthwise_conv,k),h=io(h,g.pointwise_conv,[1,1]),w===11&&(u=h)}),u===null)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:h,conv11:u}})}function RR(i,a,u,h,d){let g=i.shape[0],x=Math.min(u,g),w=a.map(($,F)=>({score:$,boxIndex:F})).filter($=>$.score>d).sort(($,F)=>F.score-$.score),k=$=>$<=h?1:0,C=[];return w.forEach($=>{if(C.length>=x)return;let F=$.score;for(let _=C.length-1;_>=0;--_){let W=Rrt(i,$.boxIndex,C[_]);if(W===0)continue;if($.score*=k(W),$.score<=d)break}F===$.score&&C.push($.boxIndex)}),C}function Rrt(i,a,u){let h=i.arraySync(),d=Math.min(h[a][0],h[a][2]),g=Math.min(h[a][1],h[a][3]),x=Math.max(h[a][0],h[a][2]),w=Math.max(h[a][1],h[a][3]),k=Math.min(h[u][0],h[u][2]),C=Math.min(h[u][1],h[u][3]),$=Math.max(h[u][0],h[u][2]),F=Math.max(h[u][1],h[u][3]),_=(x-d)*(w-g),W=($-k)*(F-C);if(_<=0||W<=0)return 0;let et=Math.max(d,k),tt=Math.max(g,C),G=Math.min(x,$),mt=Math.min(w,F),lt=Math.max(G-et,0)*Math.max(mt-tt,0);return lt/(_+W-lt)}var Mt=te(ee());function Prt(i){let a=Mt.unstack(Mt.transpose(i,[1,0])),u=[Mt.sub(a[2],a[0]),Mt.sub(a[3],a[1])],h=[Mt.add(a[0],Mt.div(u[0],Mt.scalar(2))),Mt.add(a[1],Mt.div(u[1],Mt.scalar(2)))];return{sizes:u,centers:h}}function Ort(i,a){let{sizes:u,centers:h}=Prt(i),d=Mt.unstack(Mt.transpose(a,[1,0])),g=Mt.div(Mt.mul(Mt.exp(Mt.div(d[2],Mt.scalar(5))),u[0]),Mt.scalar(2)),x=Mt.add(Mt.mul(Mt.div(d[0],Mt.scalar(10)),u[0]),h[0]),w=Mt.div(Mt.mul(Mt.exp(Mt.div(d[3],Mt.scalar(5))),u[1]),Mt.scalar(2)),k=Mt.add(Mt.mul(Mt.div(d[1],Mt.scalar(10)),u[1]),h[1]);return Mt.transpose(Mt.stack([Mt.sub(x,g),Mt.sub(k,w),Mt.add(x,g),Mt.add(k,w)]),[1,0])}function PR(i,a,u){return Mt.tidy(()=>{let h=i.shape[0],d=Ort(Mt.reshape(Mt.tile(u.extra_dim,[h,1,1]),[-1,4]),Mt.reshape(i,[-1,4]));d=Mt.reshape(d,[h,d.shape[0]/h,4]);let g=Mt.sigmoid(Mt.slice(a,[0,0,1],[-1,-1,-1])),x=Mt.slice(g,[0,0,0],[-1,-1,1]);x=Mt.reshape(x,[h,x.shape[1]]);let w=Mt.unstack(d),k=Mt.unstack(x);return{boxes:w,scores:k}})}var Qh=te(ee()),Zh=te(ee());function Za(i,a){return Zh.tidy(()=>{let u=i.shape[0],h=Zh.reshape(Ya(i,a.box_encoding_predictor),[u,-1,1,4]),d=Zh.reshape(Ya(i,a.class_predictor),[u,-1,3]);return{boxPredictionEncoding:h,classPrediction:d}})}function OR(i,a,u){return Qh.tidy(()=>{let h=io(i,u.conv_0,[1,1]),d=io(h,u.conv_1,[2,2]),g=io(d,u.conv_2,[1,1]),x=io(g,u.conv_3,[2,2]),w=io(x,u.conv_4,[1,1]),k=io(w,u.conv_5,[2,2]),C=io(k,u.conv_6,[1,1]),$=io(C,u.conv_7,[2,2]),F=Za(a,u.box_predictor_0),_=Za(i,u.box_predictor_1),W=Za(d,u.box_predictor_2),et=Za(x,u.box_predictor_3),tt=Za(k,u.box_predictor_4),G=Za($,u.box_predictor_5),mt=Qh.concat([F.boxPredictionEncoding,_.boxPredictionEncoding,W.boxPredictionEncoding,et.boxPredictionEncoding,tt.boxPredictionEncoding,G.boxPredictionEncoding],1),lt=Qh.concat([F.classPrediction,_.classPrediction,W.classPrediction,et.classPrediction,tt.classPrediction,G.classPrediction],1);return{boxPredictions:mt,classPredictions:lt}})}var ao=class{constructor({minConfidence:a,maxResults:u}={}){this._name="SsdMobilenetv1Options";if(this._minConfidence=a||.5,this._maxResults=u||100,typeof this._minConfidence!="number"||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if(typeof this._maxResults!="number")throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},Qa=class extends Gn{constructor(){super("SsdMobilenetv1")}forwardInput(a){let{params:u}=this;if(!u)throw new Error("SsdMobilenetv1 - load model before inference");return Po.tidy(()=>{let h=Po.cast(a.toBatchTensor(512,!1),"float32"),d=Po.sub(Po.mul(h,Po.scalar(.007843137718737125)),Po.scalar(1)),g=FR(d,u.mobilenetv1),{boxPredictions:x,classPredictions:w}=OR(g.out,g.conv11,u.prediction_layer);return PR(x,w,u.output_layer)})}async forward(a){return this.forwardInput(await Ve(a))}async locateFaces(a,u={}){let{maxResults:h,minConfidence:d}=new ao(u),g=await Ve(a),{boxes:x,scores:w}=this.forwardInput(g),k=x[0],C=w[0];for(let gt=1;gt<x.length;gt++)x[gt].dispose(),w[gt].dispose();let $=Array.from(await C.data()),F=.5,_=RR(k,$,h,F,d),W=g.getReshapedInputDimensions(0),et=g.inputSize,tt=et/W.width,G=et/W.height,mt=k.arraySync(),lt=_.map(gt=>{let[_t,Gt]=[Math.max(0,mt[gt][0]),Math.min(1,mt[gt][2])].map(_e=>_e*G),[se,fe]=[Math.max(0,mt[gt][1]),Math.min(1,mt[gt][3])].map(_e=>_e*tt);return new Ue($[gt],new yl(se,_t,fe-se,Gt-_t),{height:g.getInputHeight(0),width:g.getInputWidth(0)})});return k.dispose(),C.dispose(),lt}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeigthMap(a){return AR(a)}extractParams(a){return DR(a)}};function LR(i){let a=new Qa;return a.extractWeights(i),a}function Lrt(i){return LR(i)}var MR=class extends Qa{},BR=.4,zR=[new Jt(.738768,.874946),new Jt(2.42204,2.65704),new Jt(4.30971,7.04493),new Jt(10.246,4.59428),new Jt(12.6868,11.8741)],WR=[new Jt(1.603231,2.094468),new Jt(6.041143,7.080126),new Jt(2.882459,3.518061),new Jt(4.266906,5.178857),new Jt(9.041765,10.66308)],VR=[117.001,114.697,97.404],GR="tiny_yolov2_model",UR="tiny_yolov2_separable_conv_model",He=te(ee()),_b=i=>typeof i=="number";function Bk(i){if(!i)throw new Error(`invalid config: ${i}`);if(typeof i.withSeparableConvs!="boolean")throw new Error(`config.withSeparableConvs has to be a boolean, have: ${i.withSeparableConvs}`);if(!_b(i.iouThreshold)||i.iouThreshold<0||i.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${i.iouThreshold}`);if(!Array.isArray(i.classes)||!i.classes.length||!i.classes.every(a=>typeof a=="string"))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(i.classes)}`);if(!Array.isArray(i.anchors)||!i.anchors.length||!i.anchors.map(a=>a||{}).every(a=>_b(a.x)&&_b(a.y)))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(i.anchors)}`);if(i.meanRgb&&(!Array.isArray(i.meanRgb)||i.meanRgb.length!==3||!i.meanRgb.every(_b)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(i.meanRgb)}`)}var lo=te(ee()),co=te(ee());function Hl(i){return co.tidy(()=>{let a=co.mul(i,co.scalar(.10000000149011612));return co.add(co.relu(co.sub(i,a)),a)})}function Ks(i,a){return lo.tidy(()=>{let u=lo.pad(i,[[0,0],[1,1],[1,1],[0,0]]);return u=lo.conv2d(u,a.conv.filters,[1,1],"valid"),u=lo.sub(u,a.bn.sub),u=lo.mul(u,a.bn.truediv),u=lo.add(u,a.conv.bias),Hl(u)})}var Wi=te(ee());function Xs(i,a){return Wi.tidy(()=>{let u=Wi.pad(i,[[0,0],[1,1],[1,1],[0,0]]);return u=Wi.separableConv2d(u,a.depthwise_filter,a.pointwise_filter,[1,1],"valid"),u=Wi.add(u,a.bias),Hl(u)})}var zk=te(ee());function Mrt(i,a){let u=Ll(i,a);function h(x,w){let k=zk.tensor1d(i(x)),C=zk.tensor1d(i(x));return a.push({paramPath:`${w}/sub`},{paramPath:`${w}/truediv`}),{sub:k,truediv:C}}function d(x,w,k){let C=u(x,w,3,`${k}/conv`),$=h(w,`${k}/bn`);return{conv:C,bn:$}}let g=Ml(i,a);return{extractConvParams:u,extractConvWithBatchNormParams:d,extractSeparableConvParams:g}}function qR(i,a,u,h){let{extractWeights:d,getRemainingWeights:g}=er(i),x=[],{extractConvParams:w,extractConvWithBatchNormParams:k,extractSeparableConvParams:C}=Mrt(d,x),$;if(a.withSeparableConvs){let[F,_,W,et,tt,G,mt,lt,gt]=h,_t=a.isFirstLayerConv2d?w(F,_,3,"conv0"):C(F,_,"conv0"),Gt=C(_,W,"conv1"),se=C(W,et,"conv2"),fe=C(et,tt,"conv3"),_e=C(tt,G,"conv4"),Ge=C(G,mt,"conv5"),Vt=lt?C(mt,lt,"conv6"):void 0,ln=gt?C(lt,gt,"conv7"):void 0,Ce=w(gt||lt||mt,5*u,1,"conv8");$={conv0:_t,conv1:Gt,conv2:se,conv3:fe,conv4:_e,conv5:Ge,conv6:Vt,conv7:ln,conv8:Ce}}else{let[F,_,W,et,tt,G,mt,lt,gt]=h,_t=k(F,_,"conv0"),Gt=k(_,W,"conv1"),se=k(W,et,"conv2"),fe=k(et,tt,"conv3"),_e=k(tt,G,"conv4"),Ge=k(G,mt,"conv5"),Vt=k(mt,lt,"conv6"),ln=k(lt,gt,"conv7"),Ce=w(gt,5*u,1,"conv8");$={conv0:_t,conv1:Gt,conv2:se,conv3:fe,conv4:_e,conv5:Ge,conv6:Vt,conv7:ln,conv8:Ce}}if(g().length!==0)throw new Error(`weights remaing after extract: ${g().length}`);return{params:$,paramMappings:x}}function Brt(i,a){let u=Sr(i,a);function h(w){let k=u(`${w}/sub`,1),C=u(`${w}/truediv`,1);return{sub:k,truediv:C}}function d(w){let k=u(`${w}/filters`,4),C=u(`${w}/bias`,1);return{filters:k,bias:C}}function g(w){let k=d(`${w}/conv`),C=h(`${w}/bn`);return{conv:k,bn:C}}let x=Bl(u);return{extractConvParams:d,extractConvWithBatchNormParams:g,extractSeparableConvParams:x}}function HR(i,a){let u=[],{extractConvParams:h,extractConvWithBatchNormParams:d,extractSeparableConvParams:g}=Brt(i,u),x;if(a.withSeparableConvs){let w=a.filterSizes&&a.filterSizes.length||9;x={conv0:a.isFirstLayerConv2d?h("conv0"):g("conv0"),conv1:g("conv1"),conv2:g("conv2"),conv3:g("conv3"),conv4:g("conv4"),conv5:g("conv5"),conv6:w>7?g("conv6"):void 0,conv7:w>8?g("conv7"):void 0,conv8:h("conv8")}}else x={conv0:d("conv0"),conv1:d("conv1"),conv2:d("conv2"),conv3:d("conv3"),conv4:d("conv4"),conv5:d("conv5"),conv6:d("conv6"),conv7:d("conv7"),conv8:h("conv8")};return tr(i,u),{params:x,paramMappings:u}}var Wk;(function(i){i[i.XS=224]="XS",i[i.SM=320]="SM",i[i.MD=416]="MD",i[i.LG=608]="LG"})(Wk||(Wk={}));var is=class{constructor({inputSize:a,scoreThreshold:u}={}){this._name="TinyYolov2Options";if(this._inputSize=a||416,this._scoreThreshold=u||.5,typeof this._inputSize!="number"||this._inputSize%32!==0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if(typeof this._scoreThreshold!="number"||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},Vk=class extends Gn{constructor(a){super("TinyYolov2");Bk(a),this._config=a}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(a,u){let h=Ks(a,u.conv0);return h=He.maxPool(h,[2,2],[2,2],"same"),h=Ks(h,u.conv1),h=He.maxPool(h,[2,2],[2,2],"same"),h=Ks(h,u.conv2),h=He.maxPool(h,[2,2],[2,2],"same"),h=Ks(h,u.conv3),h=He.maxPool(h,[2,2],[2,2],"same"),h=Ks(h,u.conv4),h=He.maxPool(h,[2,2],[2,2],"same"),h=Ks(h,u.conv5),h=He.maxPool(h,[2,2],[1,1],"same"),h=Ks(h,u.conv6),h=Ks(h,u.conv7),Ya(h,u.conv8,"valid",!1)}runMobilenet(a,u){let h=this.config.isFirstLayerConv2d?Hl(Ya(a,u.conv0,"valid",!1)):Xs(a,u.conv0);return h=He.maxPool(h,[2,2],[2,2],"same"),h=Xs(h,u.conv1),h=He.maxPool(h,[2,2],[2,2],"same"),h=Xs(h,u.conv2),h=He.maxPool(h,[2,2],[2,2],"same"),h=Xs(h,u.conv3),h=He.maxPool(h,[2,2],[2,2],"same"),h=Xs(h,u.conv4),h=He.maxPool(h,[2,2],[2,2],"same"),h=Xs(h,u.conv5),h=He.maxPool(h,[2,2],[1,1],"same"),h=u.conv6?Xs(h,u.conv6):h,h=u.conv7?Xs(h,u.conv7):h,Ya(h,u.conv8,"valid",!1)}forwardInput(a,u){let{params:h}=this;if(!h)throw new Error("TinyYolov2 - load model before inference");return He.tidy(()=>{let d=He.cast(a.toBatchTensor(u,!1),"float32");return d=this.config.meanRgb?Io(d,this.config.meanRgb):d,d=d.div(He.scalar(256)),this.config.withSeparableConvs?this.runMobilenet(d,h):this.runTinyYolov2(d,h)})}async forward(a,u){return await this.forwardInput(await Ve(a),u)}async detect(a,u={}){let{inputSize:h,scoreThreshold:d}=new is(u),g=await Ve(a),x=await this.forwardInput(g,h),w=He.tidy(()=>He.unstack(x)[0].expandDims()),k={width:g.getInputWidth(0),height:g.getInputHeight(0)},C=await this.extractBoxes(w,g.getReshapedInputDimensions(0),d);x.dispose(),w.dispose();let $=C.map(G=>G.box),F=C.map(G=>G.score),_=C.map(G=>G.classScore),W=C.map(G=>this.config.classes[G.label]),et=F1($.map(G=>G.rescale(h)),F,this.config.iouThreshold,!0),tt=et.map(G=>new Si(F[G],_[G],W[G],$[G],k));return tt}getDefaultModelName(){return""}extractParamsFromWeigthMap(a){return HR(a,this.config)}extractParams(a){let u=this.config.filterSizes||Vk.DEFAULT_FILTER_SIZES,h=u?u.length:void 0;if(h!==7&&h!==8&&h!==9)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${h} filterSizes in config`);return qR(a,this.config,this.boxEncodingSize,u)}async extractBoxes(a,u,h){let{width:d,height:g}=u,x=Math.max(d,g),w=x/d,k=x/g,C=a.shape[1],$=this.config.anchors.length,[F,_,W]=He.tidy(()=>{let mt=a.reshape([C,C,$,this.boxEncodingSize]),lt=mt.slice([0,0,0,0],[C,C,$,4]),gt=mt.slice([0,0,0,4],[C,C,$,1]),_t=this.withClassScores?He.softmax(mt.slice([0,0,0,5],[C,C,$,this.config.classes.length]),3):He.scalar(0);return[lt,gt,_t]}),et=[],tt=await _.array(),G=await F.array();for(let mt=0;mt<C;mt++)for(let lt=0;lt<C;lt++)for(let gt=0;gt<$;gt++){let _t=lh(tt[mt][lt][gt][0]);if(!h||_t>h){let Gt=(lt+lh(G[mt][lt][gt][0]))/C*w,se=(mt+lh(G[mt][lt][gt][1]))/C*k,fe=Math.exp(G[mt][lt][gt][2])*this.config.anchors[gt].x/C*w,_e=Math.exp(G[mt][lt][gt][3])*this.config.anchors[gt].y/C*k,Ge=Gt-fe/2,Vt=se-_e/2,ln={row:mt,col:lt,anchor:gt},{classScore:Ce,label:rr}=this.withClassScores?await this.extractPredictedClass(W,ln):{classScore:1,label:0};et.push({box:new gl(Ge,Vt,Ge+fe,Vt+_e),score:_t,classScore:_t*Ce,label:rr,...ln})}}return F.dispose(),_.dispose(),W.dispose(),et}async extractPredictedClass(a,u){let{row:h,col:d,anchor:g}=u,x=await a.array();return Array(this.config.classes.length).fill(0).map((w,k)=>x[h][d][g][k]).map((w,k)=>({classScore:w,label:k})).reduce((w,k)=>w.classScore>k.classScore?w:k)}},jl=Vk;jl.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var Kl=class extends jl{constructor(a=!0){let u=Object.assign({},{withSeparableConvs:a,iouThreshold:BR,classes:["face"]},a?{anchors:WR,meanRgb:VR}:{anchors:zR,withClassScores:!0});super(u)}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(a,u){let h=await this.detect(a,u);return h.map(d=>new Ue(d.score,d.relativeBox,{width:d.imageWidth,height:d.imageHeight}))}getDefaultModelName(){return this.withSeparableConvs?UR:GR}extractParamsFromWeigthMap(a){return super.extractParamsFromWeigthMap(a)}};function zrt(i,a=!0){let u=new Kl(a);return u.extractWeights(i),u}var Cb=class extends is{constructor(){super(...arguments);this._name="TinyFaceDetectorOptions"}},uo=class{async then(a){return a(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}},tf=te(ee()),Gk=te(ee());async function tc(i,a,u,h,d=({alignedRect:g})=>g){let g=i.map(k=>Ja(k)?d(k):k.detection),x=h||(a instanceof Gk.Tensor?await Pl(a,g):await Rl(a,g)),w=await u(x);return x.forEach(k=>k instanceof Gk.Tensor&&k.dispose()),w}async function Xl(i,a,u,h,d){return tc([i],a,async g=>u(g[0]),h,d)}var jR=.4,KR=[new Jt(1.603231,2.094468),new Jt(6.041143,7.080126),new Jt(2.882459,3.518061),new Jt(4.266906,5.178857),new Jt(9.041765,10.66308)],XR=[117.001,114.697,97.404],Yl=class extends jl{constructor(){let a={withSeparableConvs:!0,iouThreshold:jR,classes:["face"],anchors:KR,meanRgb:XR,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]};super(a)}get anchors(){return this.config.anchors}async locateFaces(a,u){let h=await this.detect(a,u);return h.map(d=>new Ue(d.score,d.relativeBox,{width:d.imageWidth,height:d.imageHeight}))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeigthMap(a){return super.extractParamsFromWeigthMap(a)}},Ne={ssdMobilenetv1:new Qa,tinyFaceDetector:new Yl,tinyYolov2:new Kl,faceLandmark68Net:new Gl,faceLandmark68TinyNet:new xb,faceRecognitionNet:new ql,faceExpressionNet:new gb,ageGenderNet:new bb},YR=(i,a)=>Ne.ssdMobilenetv1.locateFaces(i,a),Wrt=(i,a)=>Ne.tinyFaceDetector.locateFaces(i,a),Vrt=(i,a)=>Ne.tinyYolov2.locateFaces(i,a),JR=i=>Ne.faceLandmark68Net.detectLandmarks(i),Grt=i=>Ne.faceLandmark68TinyNet.detectLandmarks(i),Urt=i=>Ne.faceRecognitionNet.computeFaceDescriptor(i),qrt=i=>Ne.faceExpressionNet.predictExpressions(i),Hrt=i=>Ne.ageGenderNet.predictAgeAndGender(i),ZR=i=>Ne.ssdMobilenetv1.load(i),jrt=i=>Ne.tinyFaceDetector.load(i),Krt=i=>Ne.tinyYolov2.load(i),Xrt=i=>Ne.faceLandmark68Net.load(i),Yrt=i=>Ne.faceLandmark68TinyNet.load(i),Jrt=i=>Ne.faceRecognitionNet.load(i),Zrt=i=>Ne.faceExpressionNet.load(i),Qrt=i=>Ne.ageGenderNet.load(i),tot=ZR,eot=YR,not=JR,Uk=class extends uo{constructor(a,u,h){super();this.parentTask=a;this.input=u;this.extractedFaces=h}},Ql=class extends Uk{async run(){let a=await this.parentTask,u=await tc(a,this.input,async h=>await Promise.all(h.map(d=>Ne.faceExpressionNet.predictExpressions(d))),this.extractedFaces);return a.map((h,d)=>yb(h,u[d]))}withAgeAndGender(){return new Jl(this,this.input)}},tu=class extends Uk{async run(){let a=await this.parentTask;if(!a)return;let u=await Xl(a,this.input,h=>Ne.faceExpressionNet.predictExpressions(h),this.extractedFaces);return yb(a,u)}withAgeAndGender(){return new Zl(this,this.input)}},rc=class extends Ql{withAgeAndGender(){return new ec(this,this.input)}withFaceDescriptors(){return new Vi(this,this.input)}},oc=class extends tu{withAgeAndGender(){return new nc(this,this.input)}withFaceDescriptor(){return new Gi(this,this.input)}},qk=class extends uo{constructor(a,u,h){super();this.parentTask=a;this.input=u;this.extractedFaces=h}},Jl=class extends qk{async run(){let a=await this.parentTask,u=await tc(a,this.input,async h=>await Promise.all(h.map(d=>Ne.ageGenderNet.predictAgeAndGender(d))),this.extractedFaces);return a.map((h,d)=>{let{age:g,gender:x,genderProbability:w}=u[d];return kb(Nb(h,x,w),g)})}withFaceExpressions(){return new Ql(this,this.input)}},Zl=class extends qk{async run(){let a=await this.parentTask;if(!a)return;let{age:u,gender:h,genderProbability:d}=await Xl(a,this.input,g=>Ne.ageGenderNet.predictAgeAndGender(g),this.extractedFaces);return kb(Nb(a,h,d),u)}withFaceExpressions(){return new tu(this,this.input)}},ec=class extends Jl{withFaceExpressions(){return new rc(this,this.input)}withFaceDescriptors(){return new Vi(this,this.input)}},nc=class extends Zl{withFaceExpressions(){return new oc(this,this.input)}withFaceDescriptor(){return new Gi(this,this.input)}},Sb=class extends uo{constructor(a,u){super();this.parentTask=a;this.input=u}},Vi=class extends Sb{async run(){let a=await this.parentTask,u=await tc(a,this.input,h=>Promise.all(h.map(d=>Ne.faceRecognitionNet.computeFaceDescriptor(d))),null,h=>h.landmarks.align(null,{useDlibAlignment:!0}));return u.map((h,d)=>Tb(a[d],h))}withFaceExpressions(){return new rc(this,this.input)}withAgeAndGender(){return new ec(this,this.input)}},Gi=class extends Sb{async run(){let a=await this.parentTask;if(!a)return;let u=await Xl(a,this.input,h=>Ne.faceRecognitionNet.computeFaceDescriptor(h),null,h=>h.landmarks.align(null,{useDlibAlignment:!0}));return Tb(a,u)}withFaceExpressions(){return new oc(this,this.input)}withAgeAndGender(){return new nc(this,this.input)}},$b=class extends uo{constructor(a,u,h){super();this.parentTask=a;this.input=u;this.useTinyLandmarkNet=h}get landmarkNet(){return this.useTinyLandmarkNet?Ne.faceLandmark68TinyNet:Ne.faceLandmark68Net}},Ib=class extends $b{async run(){let a=await this.parentTask,u=a.map(g=>g.detection),h=this.input instanceof tf.Tensor?await Pl(this.input,u):await Rl(this.input,u),d=await Promise.all(h.map(g=>this.landmarkNet.detectLandmarks(g)));return h.forEach(g=>g instanceof tf.Tensor&&g.dispose()),a.map((g,x)=>Vl(g,d[x]))}withFaceExpressions(){return new rc(this,this.input)}withAgeAndGender(){return new ec(this,this.input)}withFaceDescriptors(){return new Vi(this,this.input)}},Eb=class extends $b{async run(){let a=await this.parentTask;if(!a)return;let{detection:u}=a,h=this.input instanceof tf.Tensor?await Pl(this.input,[u]):await Rl(this.input,[u]),d=await this.landmarkNet.detectLandmarks(h[0]);return h.forEach(g=>g instanceof tf.Tensor&&g.dispose()),Vl(a,d)}withFaceExpressions(){return new oc(this,this.input)}withAgeAndGender(){return new nc(this,this.input)}withFaceDescriptor(){return new Gi(this,this.input)}},Db=class extends uo{constructor(a,u=new ao){super();this.input=a;this.options=u}},ef=class extends Db{async run(){let{input:a,options:u}=this,h=u instanceof Cb?d=>Ne.tinyFaceDetector.locateFaces(d,u):u instanceof ao?d=>Ne.ssdMobilenetv1.locateFaces(d,u):u instanceof is?d=>Ne.tinyYolov2.locateFaces(d,u):null;if(!h)throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | MtcnnOptions | TinyYolov2Options");return h(a)}runAndExtendWithFaceDetections(){return new Promise(async a=>{let u=await this.run();return a(u.map(h=>_a({},h)))})}withFaceLandmarks(a=!1){return new Ib(this.runAndExtendWithFaceDetections(),this.input,a)}withFaceExpressions(){return new Ql(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new Jl(this.runAndExtendWithFaceDetections(),this.input)}},Ab=class extends Db{async run(){let a=await new ef(this.input,this.options),u=a[0];return a.forEach(h=>{h.score>u.score&&(u=h)}),u}runAndExtendWithFaceDetection(){return new Promise(async a=>{let u=await this.run();return a(u?_a({},u):void 0)})}withFaceLandmarks(a=!1){return new Eb(this.runAndExtendWithFaceDetection(),this.input,a)}withFaceExpressions(){return new tu(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new Zl(this.runAndExtendWithFaceDetection(),this.input)}};function rot(i,a=new ao){return new Ab(i,a)}function Fb(i,a=new ao){return new ef(i,a)}async function QR(i,a){return console.warn("allFacesSsdMobilenetv1 is deprecated and will be removed soon, use the high level api instead"),await Fb(i,new ao(a?{minConfidence:a}:{})).withFaceLandmarks().withFaceDescriptors()}async function oot(i,a={}){return console.warn("allFacesTinyYolov2 is deprecated and will be removed soon, use the high level api instead"),await Fb(i,new is(a)).withFaceLandmarks().withFaceDescriptors()}var sot=QR;function Hk(i,a){if(i.length!==a.length)throw new Error("euclideanDistance: arr1.length !== arr2.length");let u=Array.from(i),h=Array.from(a);return Math.sqrt(u.map((d,g)=>d-h[g]).reduce((d,g)=>d+Math.pow(g,2),0))}var Rb=class{constructor(a,u=.6){this._distanceThreshold=u;let h=Array.isArray(a)?a:[a];if(!h.length)throw new Error("FaceRecognizer.constructor - expected atleast one input");let d=1,g=()=>`person ${d++}`;this._labeledDescriptors=h.map(x=>{if(x instanceof As)return x;if(x instanceof Float32Array)return new As(g(),[x]);if(x.descriptor&&x.descriptor instanceof Float32Array)return new As(g(),[x.descriptor]);throw new Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>")})}get labeledDescriptors(){return this._labeledDescriptors}get distanceThreshold(){return this._distanceThreshold}computeMeanDistance(a,u){return u.map(h=>Hk(h,a)).reduce((h,d)=>h+d,0)/(u.length||1)}matchDescriptor(a){return this.labeledDescriptors.map(({descriptors:u,label:h})=>new uh(h,this.computeMeanDistance(a,u))).reduce((u,h)=>u.distance<h.distance?u:h)}findBestMatch(a){let u=this.matchDescriptor(a);return u.distance<this.distanceThreshold?u:new uh("unknown",u.distance)}toJSON(){return{distanceThreshold:this.distanceThreshold,labeledDescriptors:this.labeledDescriptors.map(a=>a.toJSON())}}static fromJSON(a){let u=a.labeledDescriptors.map(h=>As.fromJSON(h));return new Rb(u,a.distanceThreshold)}};function iot(i){let a=new Yl;return a.extractWeights(i),a}function tP(i,a){let{width:u,height:h}=new Zn(a.width,a.height);if(u<=0||h<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:u,height:h})}`);if(Array.isArray(i))return i.map(d=>tP(d,{width:u,height:h}));if(Ja(i)){let d=i.detection.forSize(u,h),g=i.unshiftedLandmarks.forSize(d.box.width,d.box.height);return Vl(_a(i,d),g)}return Jo(i)?_a(i,i.detection.forSize(u,h)):i instanceof Wr||i instanceof Ue?i.forSize(u,h):i}var eP="0.8.8",cot=typeof process!="undefined",lot=typeof navigator!="undefined"&&typeof navigator.userAgent!="undefined",uot={faceapi:eP,node:cot,browser:lot};export{bb as AgeGenderNet,gl as BoundingBox,Fe as Box,uo as ComposableTask,Vi as ComputeAllFaceDescriptorsTask,Sb as ComputeFaceDescriptorsTaskBase,Gi as ComputeSingleFaceDescriptorTask,Ib as DetectAllFaceLandmarksTask,ef as DetectAllFacesTask,$b as DetectFaceLandmarksTaskBase,Db as DetectFacesTaskBase,Eb as DetectSingleFaceLandmarksTask,Ab as DetectSingleFaceTask,Zn as Dimensions,Ik as FACE_EXPRESSION_LABELS,Ue as FaceDetection,MR as FaceDetectionNet,gb as FaceExpressionNet,Mi as FaceExpressions,Gl as FaceLandmark68Net,xb as FaceLandmark68TinyNet,CR as FaceLandmarkNet,Wr as FaceLandmarks,NE as FaceLandmarks5,bl as FaceLandmarks68,uh as FaceMatch,Rb as FaceMatcher,ql as FaceRecognitionNet,Hs as Gender,ph as LabeledBox,As as LabeledFaceDescriptors,Us as NetInput,Gn as NeuralNetwork,Si as ObjectDetection,Jt as Point,_E as PredictedBox,yl as Rect,Qa as SsdMobilenetv1,ao as SsdMobilenetv1Options,Yl as TinyFaceDetector,Cb as TinyFaceDetectorOptions,Kl as TinyYolov2,is as TinyYolov2Options,Wk as TinyYolov2SizeType,sot as allFaces,QR as allFacesSsdMobilenetv1,oot as allFacesTinyYolov2,V1 as awaitMediaLoaded,G1 as bufferToImage,Urt as computeFaceDescriptor,xl as createCanvas,dh as createCanvasFromMedia,Lrt as createFaceDetectionNet,Crt as createFaceRecognitionNet,LR as createSsdMobilenetv1,iot as createTinyFaceDetector,zrt as createTinyYolov2,Fb as detectAllFaces,JR as detectFaceLandmarks,Grt as detectFaceLandmarksTiny,not as detectLandmarks,rot as detectSingleFace,Fk as draw,$e as env,Hk as euclideanDistance,kb as extendWithAge,Tb as extendWithFaceDescriptor,_a as extendWithFaceDetection,yb as extendWithFaceExpressions,Vl as extendWithFaceLandmarks,Nb as extendWithGender,Pl as extractFaceTensors,Rl as extractFaces,grt as fetchImage,Sk as fetchJson,yrt as fetchNetWeights,Xa as fetchOrThrow,dr as getContext2dOrThrow,Sa as getMediaDimensions,U1 as imageTensorToCanvas,Ck as imageToSquare,V9 as inverseSigmoid,D1 as iou,tg as isMediaElement,fh as isMediaLoaded,Srt as isWithAge,Jo as isWithFaceDetection,Ek as isWithFaceExpressions,Ja as isWithFaceLandmarks,$rt as isWithGender,Qrt as loadAgeGenderModel,tot as loadFaceDetectionModel,Zrt as loadFaceExpressionModel,Xrt as loadFaceLandmarkModel,Yrt as loadFaceLandmarkTinyModel,Jrt as loadFaceRecognitionModel,ZR as loadSsdMobilenetv1Model,jrt as loadTinyFaceDetectorModel,Krt as loadTinyYolov2Model,$k as loadWeightMap,eot as locateFaces,brt as matchDimensions,A1 as minBbox,Ne as nets,F1 as nonMaxSuppression,Io as normalize,R1 as padToSquare,Hrt as predictAgeAndGender,qrt as recognizeFaceExpressions,tP as resizeResults,Ca as resolveInput,W9 as shuffleArray,lh as sigmoid,YR as ssdMobilenetv1,aot as tf,Wrt as tinyFaceDetector,Vrt as tinyYolov2,Ve as toNetInput,S1 as utils,Bk as validateConfig,uot as version};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/** @license See the LICENSE file. */
//# sourceMappingURL=face-api.esm.js.map
